#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AchievementActor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BFGCore_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AchievementActor.BP_AchievementActor_C
// 0x0020 (0x03F8 - 0x03D8)
class ABP_AchievementActor_C final : public ABFGAchievementAwardActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   LatestAVName;                                      // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LocalShouldBeSaved;                                // 0x03F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F1[0x3];                                      // 0x03F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LocalProgress;                                     // 0x03F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnFailure_EF677678481A3E3701207FABE7206004(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag);
	void OnSuccess_EF677678481A3E3701207FABE7206004(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag);
	void OnFailure_47DCA4E7471F59C87BCB4E9B0BD73945();
	void OnSuccess_47DCA4E7471F59C87BCB4E9B0BD73945();
	void OnAchievementAwarded(class APlayerController* _pPlayerController, class FName _nAchievementID, float _fAchievementProgress, bool _bShouldSaved);
	void ExecuteUbergraph_BP_AchievementActor(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AchievementActor_C">();
	}
	static class ABP_AchievementActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AchievementActor_C>();
	}
};
static_assert(alignof(ABP_AchievementActor_C) == 0x000008, "Wrong alignment on ABP_AchievementActor_C");
static_assert(sizeof(ABP_AchievementActor_C) == 0x0003F8, "Wrong size on ABP_AchievementActor_C");
static_assert(offsetof(ABP_AchievementActor_C, UberGraphFrame) == 0x0003D8, "Member 'ABP_AchievementActor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AchievementActor_C, DefaultSceneRoot) == 0x0003E0, "Member 'ABP_AchievementActor_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_AchievementActor_C, LatestAVName) == 0x0003E8, "Member 'ABP_AchievementActor_C::LatestAVName' has a wrong offset!");
static_assert(offsetof(ABP_AchievementActor_C, LocalShouldBeSaved) == 0x0003F0, "Member 'ABP_AchievementActor_C::LocalShouldBeSaved' has a wrong offset!");
static_assert(offsetof(ABP_AchievementActor_C, LocalProgress) == 0x0003F4, "Member 'ABP_AchievementActor_C::LocalProgress' has a wrong offset!");

}

