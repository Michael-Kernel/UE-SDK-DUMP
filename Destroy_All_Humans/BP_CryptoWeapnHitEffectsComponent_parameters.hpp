#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CryptoWeapnHitEffectsComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_CryptoWeapnHitEffectsComponent.BP_CryptoWeapnHitEffectsComponent_C.SetupZappedMaterials
// 0x0060 (0x0060 - 0x0000)
struct BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials final
{
public:
	class UMeshComponent*                         Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         Skeleton;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue1;                // 0x0028(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable1;                                // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue1;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue1;            // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials) == 0x000008, "Wrong alignment on BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials");
static_assert(sizeof(BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials) == 0x000060, "Wrong size on BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials, Mesh) == 0x000000, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials::Mesh' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials, Skeleton) == 0x000008, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials::Skeleton' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials, Temp_int_Variable) == 0x000010, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials, CallFunc_GetMaterials_ReturnValue) == 0x000018, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials, CallFunc_GetMaterials_ReturnValue1) == 0x000028, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials::CallFunc_GetMaterials_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00003C, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials, Temp_int_Variable1) == 0x000044, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials, CallFunc_Array_Length_ReturnValue1) == 0x000048, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00004C, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials, CallFunc_Add_IntInt_ReturnValue1) == 0x000050, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials, CallFunc_Array_Length_ReturnValue2) == 0x000054, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials, CallFunc_Array_Add_ReturnValue1) == 0x000058, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials::CallFunc_Array_Add_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials, CallFunc_LessEqual_IntInt_ReturnValue1) == 0x00005C, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupZappedMaterials::CallFunc_LessEqual_IntInt_ReturnValue1' has a wrong offset!");

// Function BP_CryptoWeapnHitEffectsComponent.BP_CryptoWeapnHitEffectsComponent_C.SwapZappedMaterials
// 0x0068 (0x0068 - 0x0000)
struct BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials final
{
public:
	TArray<class UMaterialInterface*>             MeshMaterials;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class UMaterialInterface*>             SkeletonMaterials;                                 // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UMeshComponent*                         Mesh;                                              // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         Skeleton;                                          // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Array_Get_Item1;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials) == 0x000008, "Wrong alignment on BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials");
static_assert(sizeof(BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials) == 0x000068, "Wrong size on BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials, MeshMaterials) == 0x000000, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials::MeshMaterials' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials, SkeletonMaterials) == 0x000010, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials::SkeletonMaterials' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials, Mesh) == 0x000020, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials::Mesh' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials, Skeleton) == 0x000028, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials::Skeleton' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials, CallFunc_Array_Length_ReturnValue1) == 0x000048, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials, Temp_int_Loop_Counter_Variable1) == 0x000050, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials, CallFunc_Less_IntInt_ReturnValue1) == 0x000054, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials, CallFunc_Add_IntInt_ReturnValue1) == 0x000058, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials, Temp_int_Array_Index_Variable1) == 0x00005C, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials, CallFunc_Array_Get_Item1) == 0x000060, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SwapZappedMaterials::CallFunc_Array_Get_Item1' has a wrong offset!");

// Function BP_CryptoWeapnHitEffectsComponent.BP_CryptoWeapnHitEffectsComponent_C.UpdateZappingEffect
// 0x0058 (0x0058 - 0x0000)
struct BP_CryptoWeapnHitEffectsComponent_C_UpdateZappingEffect final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         Mesh;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         Skeleton;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable1;                                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             K2Node_Select_Default;                             // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class UMaterialInterface*>             K2Node_Select1_Default;                            // 0x0040(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CryptoWeapnHitEffectsComponent_C_UpdateZappingEffect) == 0x000008, "Wrong alignment on BP_CryptoWeapnHitEffectsComponent_C_UpdateZappingEffect");
static_assert(sizeof(BP_CryptoWeapnHitEffectsComponent_C_UpdateZappingEffect) == 0x000058, "Wrong size on BP_CryptoWeapnHitEffectsComponent_C_UpdateZappingEffect");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateZappingEffect, DeltaTime) == 0x000000, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateZappingEffect::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateZappingEffect, Mesh) == 0x000008, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateZappingEffect::Mesh' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateZappingEffect, Skeleton) == 0x000010, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateZappingEffect::Skeleton' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateZappingEffect, Temp_int_Variable) == 0x000018, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateZappingEffect::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateZappingEffect, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateZappingEffect::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateZappingEffect, Temp_int_Variable1) == 0x000020, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateZappingEffect::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateZappingEffect, CallFunc_FTrunc_ReturnValue) == 0x000024, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateZappingEffect::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateZappingEffect, CallFunc_Percent_IntInt_ReturnValue) == 0x000028, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateZappingEffect::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateZappingEffect, K2Node_Select_Default) == 0x000030, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateZappingEffect::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateZappingEffect, K2Node_Select1_Default) == 0x000040, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateZappingEffect::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateZappingEffect, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000050, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateZappingEffect::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateZappingEffect, CallFunc_Add_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateZappingEffect::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_CryptoWeapnHitEffectsComponent.BP_CryptoWeapnHitEffectsComponent_C.SetupIonDetonation
// 0x0070 (0x0070 - 0x0000)
struct BP_CryptoWeapnHitEffectsComponent_C_SetupIonDetonation final
{
public:
	class UBFGActorComponent_Effect*              MPEffectComponent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         Mesh;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         Skeleton;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	class ABFGNPCCharacterGameplay*               K2Node_DynamicCast_AsBFGNPCCharacter_Gameplay;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBFGEffectContainer*>            CallFunc_ActivateEffectAttachToActor_ReturnValue;  // 0x0060(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_CryptoWeapnHitEffectsComponent_C_SetupIonDetonation) == 0x000008, "Wrong alignment on BP_CryptoWeapnHitEffectsComponent_C_SetupIonDetonation");
static_assert(sizeof(BP_CryptoWeapnHitEffectsComponent_C_SetupIonDetonation) == 0x000070, "Wrong size on BP_CryptoWeapnHitEffectsComponent_C_SetupIonDetonation");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupIonDetonation, MPEffectComponent) == 0x000000, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupIonDetonation::MPEffectComponent' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupIonDetonation, Mesh) == 0x000008, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupIonDetonation::Mesh' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupIonDetonation, Skeleton) == 0x000010, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupIonDetonation::Skeleton' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupIonDetonation, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupIonDetonation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupIonDetonation, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupIonDetonation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupIonDetonation, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupIonDetonation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupIonDetonation, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupIonDetonation::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupIonDetonation, CallFunc_GetMaterials_ReturnValue) == 0x000030, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupIonDetonation::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupIonDetonation, K2Node_DynamicCast_AsBFGNPCCharacter_Gameplay) == 0x000040, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupIonDetonation::K2Node_DynamicCast_AsBFGNPCCharacter_Gameplay' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupIonDetonation, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupIonDetonation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupIonDetonation, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupIonDetonation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupIonDetonation, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupIonDetonation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupIonDetonation, CallFunc_GetOwner_ReturnValue1) == 0x000058, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupIonDetonation::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupIonDetonation, CallFunc_ActivateEffectAttachToActor_ReturnValue) == 0x000060, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupIonDetonation::CallFunc_ActivateEffectAttachToActor_ReturnValue' has a wrong offset!");

// Function BP_CryptoWeapnHitEffectsComponent.BP_CryptoWeapnHitEffectsComponent_C.UpdateDisintegratorEffect
// 0x0058 (0x0058 - 0x0000)
struct BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         Mesh;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         Skeleton;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBFGActorComponent_Effect*              MPEffectComponent;                                 // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBFGActorComponent_GameplayEffectTags*  MPGameplayEffectTagsComponent;                     // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue1;     // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABFGNPCCharacterGameplay*               K2Node_DynamicCast_AsBFGNPCCharacter_Gameplay;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue1;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect) == 0x000008, "Wrong alignment on BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect");
static_assert(sizeof(BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect) == 0x000058, "Wrong size on BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect, DeltaTime) == 0x000000, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect, Mesh) == 0x000008, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect::Mesh' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect, Skeleton) == 0x000010, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect::Skeleton' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect, MPEffectComponent) == 0x000018, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect::MPEffectComponent' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect, MPGameplayEffectTagsComponent) == 0x000020, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect::MPGameplayEffectTagsComponent' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000028, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000035, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect, CallFunc_GreaterEqual_FloatFloat_ReturnValue1) == 0x000036, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect::CallFunc_GreaterEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect, CallFunc_GetOwner_ReturnValue) == 0x000038, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect, K2Node_DynamicCast_AsBFGNPCCharacter_Gameplay) == 0x000040, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect::K2Node_DynamicCast_AsBFGNPCCharacter_Gameplay' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect, CallFunc_Add_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect, CallFunc_MapRangeClamped_ReturnValue1) == 0x000050, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect::CallFunc_MapRangeClamped_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect, CallFunc_Add_FloatFloat_ReturnValue1) == 0x000054, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateDisintegratorEffect::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");

// Function BP_CryptoWeapnHitEffectsComponent.BP_CryptoWeapnHitEffectsComponent_C.SetupDisintegration
// 0x0098 (0x0098 - 0x0000)
struct BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration final
{
public:
	class UBFGActorComponent_Effect*              MPEffectComponent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         Mesh;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         Skeleton;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0028(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue1;                // 0x0038(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABFGNPCCharacterGameplay*               K2Node_DynamicCast_AsBFGNPCCharacter_Gameplay;     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue1;                    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBFGEffectContainer*>            CallFunc_ActivateEffectAttachToActor_ReturnValue;  // 0x0078(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration) == 0x000008, "Wrong alignment on BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration");
static_assert(sizeof(BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration) == 0x000098, "Wrong size on BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration, MPEffectComponent) == 0x000000, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration::MPEffectComponent' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration, Mesh) == 0x000008, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration::Mesh' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration, Skeleton) == 0x000010, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration::Skeleton' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration, Temp_int_Array_Index_Variable1) == 0x000024, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration, CallFunc_GetMaterials_ReturnValue) == 0x000028, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration, CallFunc_GetMaterials_ReturnValue1) == 0x000038, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration::CallFunc_GetMaterials_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration, CallFunc_Array_Length_ReturnValue1) == 0x00004C, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration, CallFunc_GetOwner_ReturnValue) == 0x000058, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration, K2Node_DynamicCast_AsBFGNPCCharacter_Gameplay) == 0x000060, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration::K2Node_DynamicCast_AsBFGNPCCharacter_Gameplay' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration, CallFunc_GetOwner_ReturnValue1) == 0x000070, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration::CallFunc_GetOwner_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration, CallFunc_ActivateEffectAttachToActor_ReturnValue) == 0x000078, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration::CallFunc_ActivateEffectAttachToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration, Temp_int_Loop_Counter_Variable1) == 0x000088, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration, CallFunc_Less_IntInt_ReturnValue1) == 0x00008C, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration, CallFunc_Add_IntInt_ReturnValue1) == 0x000090, "Member 'BP_CryptoWeapnHitEffectsComponent_C_SetupDisintegration::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");

// Function BP_CryptoWeapnHitEffectsComponent.BP_CryptoWeapnHitEffectsComponent_C.UpdateIondetonatorEffect
// 0x0060 (0x0060 - 0x0000)
struct BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         Skeleton;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBFGActorComponent_Effect*              MPEffectComponent;                                 // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBFGActorComponent_GameplayEffectTags*  MPGameplayEffectTagsComponent;                     // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue1;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue1;     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABFGNPCCharacterGameplay*               K2Node_DynamicCast_AsBFGNPCCharacter_Gameplay;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect) == 0x000008, "Wrong alignment on BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect");
static_assert(sizeof(BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect) == 0x000060, "Wrong size on BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect, DeltaTime) == 0x000000, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect, Skeleton) == 0x000008, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect::Skeleton' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect, MPEffectComponent) == 0x000010, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect::MPEffectComponent' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect, MPGameplayEffectTagsComponent) == 0x000018, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect::MPGameplayEffectTagsComponent' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000020, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect, CallFunc_MapRangeClamped_ReturnValue) == 0x00002C, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect, CallFunc_MapRangeClamped_ReturnValue1) == 0x000034, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect::CallFunc_MapRangeClamped_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect, CallFunc_GetOwner_ReturnValue) == 0x000038, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect, CallFunc_GreaterEqual_FloatFloat_ReturnValue1) == 0x000040, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect::CallFunc_GreaterEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect, K2Node_DynamicCast_AsBFGNPCCharacter_Gameplay) == 0x000048, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect::K2Node_DynamicCast_AsBFGNPCCharacter_Gameplay' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect, CallFunc_Add_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect, CallFunc_Add_FloatFloat_ReturnValue1) == 0x000058, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateIondetonatorEffect::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");

// Function BP_CryptoWeapnHitEffectsComponent.BP_CryptoWeapnHitEffectsComponent_C.UpdateBlackboard
// 0x0050 (0x0050 - 0x0000)
struct BP_CryptoWeapnHitEffectsComponent_C_UpdateBlackboard final
{
public:
	class UBFGActorComponent_Effect*              MPEffectComponent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UMeshComponent*                   Mesh;                                              // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBFGEffectBlackboard*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBFGEffectBlackboard*                   CallFunc_GetBlackboard_ReturnValue1;               // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CryptoWeapnHitEffectsComponent_C_UpdateBlackboard) == 0x000008, "Wrong alignment on BP_CryptoWeapnHitEffectsComponent_C_UpdateBlackboard");
static_assert(sizeof(BP_CryptoWeapnHitEffectsComponent_C_UpdateBlackboard) == 0x000050, "Wrong size on BP_CryptoWeapnHitEffectsComponent_C_UpdateBlackboard");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateBlackboard, MPEffectComponent) == 0x000000, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateBlackboard::MPEffectComponent' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateBlackboard, Mesh) == 0x000008, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateBlackboard::Mesh' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateBlackboard, CallFunc_GetBlackboard_ReturnValue) == 0x000010, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateBlackboard::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateBlackboard, CallFunc_GetBlackboard_ReturnValue1) == 0x000018, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateBlackboard::CallFunc_GetBlackboard_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateBlackboard, CallFunc_GetComponentBounds_Origin) == 0x000020, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateBlackboard::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateBlackboard, CallFunc_GetComponentBounds_BoxExtent) == 0x00002C, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateBlackboard::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateBlackboard, CallFunc_GetComponentBounds_SphereRadius) == 0x000038, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateBlackboard::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateBlackboard, CallFunc_BreakVector_X) == 0x00003C, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateBlackboard::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateBlackboard, CallFunc_BreakVector_Y) == 0x000040, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateBlackboard::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateBlackboard, CallFunc_BreakVector_Z) == 0x000044, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateBlackboard::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_CryptoWeapnHitEffectsComponent_C_UpdateBlackboard, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_CryptoWeapnHitEffectsComponent_C_UpdateBlackboard::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

}

