#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PropActor_Newspaper

#include "Basic.hpp"

#include "BP_PropActor_Newspaper_classes.hpp"
#include "BP_PropActor_Newspaper_parameters.hpp"


namespace SDK
{

// Function BP_PropActor_Newspaper.BP_PropActor_Newspaper_C.ExecuteUbergraph_BP_PropActor_Newspaper
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PropActor_Newspaper_C::ExecuteUbergraph_BP_PropActor_Newspaper(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropActor_Newspaper_C", "ExecuteUbergraph_BP_PropActor_Newspaper");

	Params::BP_PropActor_Newspaper_C_ExecuteUbergraph_BP_PropActor_Newspaper Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PropActor_Newspaper.BP_PropActor_Newspaper_C.OnInteractAnimationChanged
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBFGInteractAnimationData        _newData                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// struct FBFGInteractAnimationData        _oldData                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void ABP_PropActor_Newspaper_C::OnInteractAnimationChanged(const struct FBFGInteractAnimationData& _newData, const struct FBFGInteractAnimationData& _oldData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropActor_Newspaper_C", "OnInteractAnimationChanged");

	Params::BP_PropActor_Newspaper_C_OnInteractAnimationChanged Parms{};

	Parms._newData = std::move(_newData);
	Parms._oldData = std::move(_oldData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PropActor_Newspaper.BP_PropActor_Newspaper_C.OnLeanWall03End
// (BlueprintCallable, BlueprintEvent)

void ABP_PropActor_Newspaper_C::OnLeanWall03End()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropActor_Newspaper_C", "OnLeanWall03End");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PropActor_Newspaper.BP_PropActor_Newspaper_C.OnLeanWall03Start
// (BlueprintCallable, BlueprintEvent)

void ABP_PropActor_Newspaper_C::OnLeanWall03Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropActor_Newspaper_C", "OnLeanWall03Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PropActor_Newspaper.BP_PropActor_Newspaper_C.OnReadNewspaperEnd
// (BlueprintCallable, BlueprintEvent)

void ABP_PropActor_Newspaper_C::OnReadNewspaperEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropActor_Newspaper_C", "OnReadNewspaperEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PropActor_Newspaper.BP_PropActor_Newspaper_C.OnReadNewspaperStart
// (BlueprintCallable, BlueprintEvent)

void ABP_PropActor_Newspaper_C::OnReadNewspaperStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropActor_Newspaper_C", "OnReadNewspaperStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PropActor_Newspaper.BP_PropActor_Newspaper_C.OnSwitchedToHighRes
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBFGInteractAnimationData        _animationData                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void ABP_PropActor_Newspaper_C::OnSwitchedToHighRes(const struct FBFGInteractAnimationData& _animationData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropActor_Newspaper_C", "OnSwitchedToHighRes");

	Params::BP_PropActor_Newspaper_C_OnSwitchedToHighRes Parms{};

	Parms._animationData = std::move(_animationData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PropActor_Newspaper.BP_PropActor_Newspaper_C.OnSwitchedToLowRes
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_PropActor_Newspaper_C::OnSwitchedToLowRes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropActor_Newspaper_C", "OnSwitchedToLowRes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PropActor_Newspaper.BP_PropActor_Newspaper_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_PropActor_Newspaper_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropActor_Newspaper_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}

}

