#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPW_HUD_TextNotification

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "BFGCore_structs.hpp"


namespace SDK::Params
{

// Function BPW_HUD_TextNotification.BPW_HUD_TextNotification_C.Apply Severity
// 0x0005 (0x0005 - 0x0000)
struct BPW_HUD_TextNotification_C_Apply_Severity final
{
public:
	EBFGTextNotification_Severity                 Severity;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBFGTextNotification_Severity                 Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_HUD_TextNotification_C_Apply_Severity) == 0x000001, "Wrong alignment on BPW_HUD_TextNotification_C_Apply_Severity");
static_assert(sizeof(BPW_HUD_TextNotification_C_Apply_Severity) == 0x000005, "Wrong size on BPW_HUD_TextNotification_C_Apply_Severity");
static_assert(offsetof(BPW_HUD_TextNotification_C_Apply_Severity, Severity) == 0x000000, "Member 'BPW_HUD_TextNotification_C_Apply_Severity::Severity' has a wrong offset!");
static_assert(offsetof(BPW_HUD_TextNotification_C_Apply_Severity, Temp_byte_Variable) == 0x000001, "Member 'BPW_HUD_TextNotification_C_Apply_Severity::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPW_HUD_TextNotification_C_Apply_Severity, Temp_byte_Variable1) == 0x000002, "Member 'BPW_HUD_TextNotification_C_Apply_Severity::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BPW_HUD_TextNotification_C_Apply_Severity, Temp_byte_Variable2) == 0x000003, "Member 'BPW_HUD_TextNotification_C_Apply_Severity::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BPW_HUD_TextNotification_C_Apply_Severity, K2Node_Select_Default) == 0x000004, "Member 'BPW_HUD_TextNotification_C_Apply_Severity::K2Node_Select_Default' has a wrong offset!");

// Function BPW_HUD_TextNotification.BPW_HUD_TextNotification_C.OnShowMessage
// 0x0020 (0x0020 - 0x0000)
struct BPW_HUD_TextNotification_C_OnShowMessage final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	EBFGTextNotification_Severity                 Severity;                                          // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_HUD_TextNotification_C_OnShowMessage) == 0x000008, "Wrong alignment on BPW_HUD_TextNotification_C_OnShowMessage");
static_assert(sizeof(BPW_HUD_TextNotification_C_OnShowMessage) == 0x000020, "Wrong size on BPW_HUD_TextNotification_C_OnShowMessage");
static_assert(offsetof(BPW_HUD_TextNotification_C_OnShowMessage, Text) == 0x000000, "Member 'BPW_HUD_TextNotification_C_OnShowMessage::Text' has a wrong offset!");
static_assert(offsetof(BPW_HUD_TextNotification_C_OnShowMessage, Severity) == 0x000018, "Member 'BPW_HUD_TextNotification_C_OnShowMessage::Severity' has a wrong offset!");

// Function BPW_HUD_TextNotification.BPW_HUD_TextNotification_C.ExecuteUbergraph_BPW_HUD_TextNotification
// 0x0050 (0x0050 - 0x0000)
struct BPW_HUD_TextNotification_C_ExecuteUbergraph_BPW_HUD_TextNotification final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue1;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_Text;                                 // 0x0018(0x0018)(ConstParm)
	EBFGTextNotification_Severity                 K2Node_Event_Severity;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0038(0x0018)()
};
static_assert(alignof(BPW_HUD_TextNotification_C_ExecuteUbergraph_BPW_HUD_TextNotification) == 0x000008, "Wrong alignment on BPW_HUD_TextNotification_C_ExecuteUbergraph_BPW_HUD_TextNotification");
static_assert(sizeof(BPW_HUD_TextNotification_C_ExecuteUbergraph_BPW_HUD_TextNotification) == 0x000050, "Wrong size on BPW_HUD_TextNotification_C_ExecuteUbergraph_BPW_HUD_TextNotification");
static_assert(offsetof(BPW_HUD_TextNotification_C_ExecuteUbergraph_BPW_HUD_TextNotification, EntryPoint) == 0x000000, "Member 'BPW_HUD_TextNotification_C_ExecuteUbergraph_BPW_HUD_TextNotification::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPW_HUD_TextNotification_C_ExecuteUbergraph_BPW_HUD_TextNotification, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'BPW_HUD_TextNotification_C_ExecuteUbergraph_BPW_HUD_TextNotification::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_HUD_TextNotification_C_ExecuteUbergraph_BPW_HUD_TextNotification, CallFunc_PlayAnimation_ReturnValue1) == 0x000010, "Member 'BPW_HUD_TextNotification_C_ExecuteUbergraph_BPW_HUD_TextNotification::CallFunc_PlayAnimation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPW_HUD_TextNotification_C_ExecuteUbergraph_BPW_HUD_TextNotification, K2Node_Event_Text) == 0x000018, "Member 'BPW_HUD_TextNotification_C_ExecuteUbergraph_BPW_HUD_TextNotification::K2Node_Event_Text' has a wrong offset!");
static_assert(offsetof(BPW_HUD_TextNotification_C_ExecuteUbergraph_BPW_HUD_TextNotification, K2Node_Event_Severity) == 0x000030, "Member 'BPW_HUD_TextNotification_C_ExecuteUbergraph_BPW_HUD_TextNotification::K2Node_Event_Severity' has a wrong offset!");
static_assert(offsetof(BPW_HUD_TextNotification_C_ExecuteUbergraph_BPW_HUD_TextNotification, CallFunc_TextToUpper_ReturnValue) == 0x000038, "Member 'BPW_HUD_TextNotification_C_ExecuteUbergraph_BPW_HUD_TextNotification::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");

}

