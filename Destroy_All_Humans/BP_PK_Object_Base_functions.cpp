#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PK_Object_Base

#include "Basic.hpp"

#include "BP_PK_Object_Base_classes.hpp"
#include "BP_PK_Object_Base_parameters.hpp"


namespace SDK
{

// Function BP_PK_Object_Base.BP_PK_Object_Base_C.ExecuteUbergraph_BP_PK_Object_Base
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PK_Object_Base_C::ExecuteUbergraph_BP_PK_Object_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PK_Object_Base_C", "ExecuteUbergraph_BP_PK_Object_Base");

	Params::BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PK_Object_Base.BP_PK_Object_Base_C.SetOnFire
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void ABP_PK_Object_Base_C::SetOnFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PK_Object_Base_C", "SetOnFire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PK_Object_Base.BP_PK_Object_Base_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_PK_Object_Base_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PK_Object_Base_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PK_Object_Base.BP_PK_Object_Base_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PK_Object_Base_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PK_Object_Base_C", "ReceiveTick");

	Params::BP_PK_Object_Base_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PK_Object_Base.BP_PK_Object_Base_C.HitWater
// (BlueprintCallable, BlueprintEvent)

void ABP_PK_Object_Base_C::HitWater()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PK_Object_Base_C", "HitWater");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PK_Object_Base.BP_PK_Object_Base_C.ReceiveHit
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              MyComp                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Other                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSelfMoved                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_PK_Object_Base_C::ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PK_Object_Base_C", "ReceiveHit");

	Params::BP_PK_Object_Base_C_ReceiveHit Parms{};

	Parms.MyComp = MyComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.bSelfMoved = bSelfMoved;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PK_Object_Base.BP_PK_Object_Base_C.OnPKPickUp
// (Event, Protected, BlueprintEvent)

void ABP_PK_Object_Base_C::OnPKPickUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PK_Object_Base_C", "OnPKPickUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PK_Object_Base.BP_PK_Object_Base_C.OnPKDrop
// (Event, Protected, BlueprintEvent)

void ABP_PK_Object_Base_C::OnPKDrop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PK_Object_Base_C", "OnPKDrop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PK_Object_Base.BP_PK_Object_Base_C.SetOnFireInternal
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_PK_Object_Base_C::SetOnFireInternal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PK_Object_Base_C", "SetOnFireInternal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PK_Object_Base.BP_PK_Object_Base_C.EnablePhysics
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PK_Object_Base_C::EnablePhysics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PK_Object_Base_C", "EnablePhysics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PK_Object_Base.BP_PK_Object_Base_C.ExtinguishFire
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PK_Object_Base_C::ExtinguishFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PK_Object_Base_C", "ExtinguishFire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PK_Object_Base.BP_PK_Object_Base_C.BurnDown
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PK_Object_Base_C::BurnDown(const float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PK_Object_Base_C", "BurnDown");

	Params::BP_PK_Object_Base_C_BurnDown Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PK_Object_Base.BP_PK_Object_Base_C.InitBuoyancy
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_PK_Object_Base_C::InitBuoyancy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PK_Object_Base_C", "InitBuoyancy");

	UObject::ProcessEvent(Func, nullptr);
}

}

