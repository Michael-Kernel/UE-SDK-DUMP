#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPW_UI_HUDGamepadHints

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "BFGCore_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BPW_UI_HUDGamepadHints.BPW_UI_HUDGamepadHints_C
// 0x0130 (0x0428 - 0x02F8)
class UBPW_UI_HUDGamepadHints_C final : public UBFGWidget_HUD
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCanvasPanel*                           CanvasMain;                                        // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_Buttons_Crypto;                                 // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_Buttons_Saucer;                                 // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_DPad_Crypto;                               // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SB_Center;                                         // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SB_Distract;                                       // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SB_Follow;                                         // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SB_Forget;                                         // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SB_Holobob;                                        // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_AbductoBeam;                                    // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_Drain;                                          // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_ECM;                                            // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_HintExtract;                                    // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_HintPK;                                         // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_HintScan;                                       // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_Transmog;                                       // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBPW_UI_HUDKeyHints_HintElement_C*      NewKeyHintWidget;                                  // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   AbilityListCrypto_Tags;                            // 0x0388(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UObject*>                        AbilityListCrypto_ImageObjects;                    // 0x0398(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class FText>                           AbilityListCrypto_KeyHintTexts;                    // 0x03A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FGameplayTag>                   LastUnlockedTags;                                  // 0x03B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FGameplayTag>                   AbilityListSaucer_Tags;                            // 0x03C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UObject*>                        AbilityListSaucer_ImageObjects;                    // 0x03D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class FText>                           AbilityListSaucer_KeyHintTexts;                    // 0x03E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UWidget*>                        HintsCrypto;                                       // 0x03F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<bool>                                  HintsCryptoOnDPad;                                 // 0x0408(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UWidget*>                        HintsSaucer;                                       // 0x0418(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void SwitchToMode(bool InIsGround);
	void IsUnlocked(const struct FGameplayTag& GameplayTag, bool* IsUnlocked_0);
	void UpdateAll();
	void UpdateHorizontalBox(class UHorizontalBox* HorizontalBox, TArray<struct FGameplayTag>& ArrayGameplayTags, TArray<class UObject*>& ArrayImageObjects, TArray<class FText>& ArrayKeyHintTexts, bool bInSaucer);
	void OnInputDeviceChanged(bool InIsGamepad);
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Destruct();
	void ExecuteUbergraph_BPW_UI_HUDGamepadHints(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPW_UI_HUDGamepadHints_C">();
	}
	static class UBPW_UI_HUDGamepadHints_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPW_UI_HUDGamepadHints_C>();
	}
};
static_assert(alignof(UBPW_UI_HUDGamepadHints_C) == 0x000008, "Wrong alignment on UBPW_UI_HUDGamepadHints_C");
static_assert(sizeof(UBPW_UI_HUDGamepadHints_C) == 0x000428, "Wrong size on UBPW_UI_HUDGamepadHints_C");
static_assert(offsetof(UBPW_UI_HUDGamepadHints_C, UberGraphFrame) == 0x0002F8, "Member 'UBPW_UI_HUDGamepadHints_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPW_UI_HUDGamepadHints_C, CanvasMain) == 0x000300, "Member 'UBPW_UI_HUDGamepadHints_C::CanvasMain' has a wrong offset!");
static_assert(offsetof(UBPW_UI_HUDGamepadHints_C, HB_Buttons_Crypto) == 0x000308, "Member 'UBPW_UI_HUDGamepadHints_C::HB_Buttons_Crypto' has a wrong offset!");
static_assert(offsetof(UBPW_UI_HUDGamepadHints_C, HB_Buttons_Saucer) == 0x000310, "Member 'UBPW_UI_HUDGamepadHints_C::HB_Buttons_Saucer' has a wrong offset!");
static_assert(offsetof(UBPW_UI_HUDGamepadHints_C, Overlay_DPad_Crypto) == 0x000318, "Member 'UBPW_UI_HUDGamepadHints_C::Overlay_DPad_Crypto' has a wrong offset!");
static_assert(offsetof(UBPW_UI_HUDGamepadHints_C, SB_Center) == 0x000320, "Member 'UBPW_UI_HUDGamepadHints_C::SB_Center' has a wrong offset!");
static_assert(offsetof(UBPW_UI_HUDGamepadHints_C, SB_Distract) == 0x000328, "Member 'UBPW_UI_HUDGamepadHints_C::SB_Distract' has a wrong offset!");
static_assert(offsetof(UBPW_UI_HUDGamepadHints_C, SB_Follow) == 0x000330, "Member 'UBPW_UI_HUDGamepadHints_C::SB_Follow' has a wrong offset!");
static_assert(offsetof(UBPW_UI_HUDGamepadHints_C, SB_Forget) == 0x000338, "Member 'UBPW_UI_HUDGamepadHints_C::SB_Forget' has a wrong offset!");
static_assert(offsetof(UBPW_UI_HUDGamepadHints_C, SB_Holobob) == 0x000340, "Member 'UBPW_UI_HUDGamepadHints_C::SB_Holobob' has a wrong offset!");
static_assert(offsetof(UBPW_UI_HUDGamepadHints_C, VB_AbductoBeam) == 0x000348, "Member 'UBPW_UI_HUDGamepadHints_C::VB_AbductoBeam' has a wrong offset!");
static_assert(offsetof(UBPW_UI_HUDGamepadHints_C, VB_Drain) == 0x000350, "Member 'UBPW_UI_HUDGamepadHints_C::VB_Drain' has a wrong offset!");
static_assert(offsetof(UBPW_UI_HUDGamepadHints_C, VB_ECM) == 0x000358, "Member 'UBPW_UI_HUDGamepadHints_C::VB_ECM' has a wrong offset!");
static_assert(offsetof(UBPW_UI_HUDGamepadHints_C, VB_HintExtract) == 0x000360, "Member 'UBPW_UI_HUDGamepadHints_C::VB_HintExtract' has a wrong offset!");
static_assert(offsetof(UBPW_UI_HUDGamepadHints_C, VB_HintPK) == 0x000368, "Member 'UBPW_UI_HUDGamepadHints_C::VB_HintPK' has a wrong offset!");
static_assert(offsetof(UBPW_UI_HUDGamepadHints_C, VB_HintScan) == 0x000370, "Member 'UBPW_UI_HUDGamepadHints_C::VB_HintScan' has a wrong offset!");
static_assert(offsetof(UBPW_UI_HUDGamepadHints_C, VB_Transmog) == 0x000378, "Member 'UBPW_UI_HUDGamepadHints_C::VB_Transmog' has a wrong offset!");
static_assert(offsetof(UBPW_UI_HUDGamepadHints_C, NewKeyHintWidget) == 0x000380, "Member 'UBPW_UI_HUDGamepadHints_C::NewKeyHintWidget' has a wrong offset!");
static_assert(offsetof(UBPW_UI_HUDGamepadHints_C, AbilityListCrypto_Tags) == 0x000388, "Member 'UBPW_UI_HUDGamepadHints_C::AbilityListCrypto_Tags' has a wrong offset!");
static_assert(offsetof(UBPW_UI_HUDGamepadHints_C, AbilityListCrypto_ImageObjects) == 0x000398, "Member 'UBPW_UI_HUDGamepadHints_C::AbilityListCrypto_ImageObjects' has a wrong offset!");
static_assert(offsetof(UBPW_UI_HUDGamepadHints_C, AbilityListCrypto_KeyHintTexts) == 0x0003A8, "Member 'UBPW_UI_HUDGamepadHints_C::AbilityListCrypto_KeyHintTexts' has a wrong offset!");
static_assert(offsetof(UBPW_UI_HUDGamepadHints_C, LastUnlockedTags) == 0x0003B8, "Member 'UBPW_UI_HUDGamepadHints_C::LastUnlockedTags' has a wrong offset!");
static_assert(offsetof(UBPW_UI_HUDGamepadHints_C, AbilityListSaucer_Tags) == 0x0003C8, "Member 'UBPW_UI_HUDGamepadHints_C::AbilityListSaucer_Tags' has a wrong offset!");
static_assert(offsetof(UBPW_UI_HUDGamepadHints_C, AbilityListSaucer_ImageObjects) == 0x0003D8, "Member 'UBPW_UI_HUDGamepadHints_C::AbilityListSaucer_ImageObjects' has a wrong offset!");
static_assert(offsetof(UBPW_UI_HUDGamepadHints_C, AbilityListSaucer_KeyHintTexts) == 0x0003E8, "Member 'UBPW_UI_HUDGamepadHints_C::AbilityListSaucer_KeyHintTexts' has a wrong offset!");
static_assert(offsetof(UBPW_UI_HUDGamepadHints_C, HintsCrypto) == 0x0003F8, "Member 'UBPW_UI_HUDGamepadHints_C::HintsCrypto' has a wrong offset!");
static_assert(offsetof(UBPW_UI_HUDGamepadHints_C, HintsCryptoOnDPad) == 0x000408, "Member 'UBPW_UI_HUDGamepadHints_C::HintsCryptoOnDPad' has a wrong offset!");
static_assert(offsetof(UBPW_UI_HUDGamepadHints_C, HintsSaucer) == 0x000418, "Member 'UBPW_UI_HUDGamepadHints_C::HintsSaucer' has a wrong offset!");

}

