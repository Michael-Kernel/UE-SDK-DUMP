#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Cow_AnimBP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "BFGCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function cow_AnimBP.cow_AnimBP_C.ShouldLookAtPlayer
// 0x0005 (0x0005 - 0x0000)
struct Cow_AnimBP_C_ShouldLookAtPlayer final
{
public:
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue1;             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Cow_AnimBP_C_ShouldLookAtPlayer) == 0x000001, "Wrong alignment on Cow_AnimBP_C_ShouldLookAtPlayer");
static_assert(sizeof(Cow_AnimBP_C_ShouldLookAtPlayer) == 0x000005, "Wrong size on Cow_AnimBP_C_ShouldLookAtPlayer");
static_assert(offsetof(Cow_AnimBP_C_ShouldLookAtPlayer, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000000, "Member 'Cow_AnimBP_C_ShouldLookAtPlayer::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ShouldLookAtPlayer, CallFunc_Less_FloatFloat_ReturnValue) == 0x000001, "Member 'Cow_AnimBP_C_ShouldLookAtPlayer::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ShouldLookAtPlayer, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'Cow_AnimBP_C_ShouldLookAtPlayer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ShouldLookAtPlayer, CallFunc_Less_FloatFloat_ReturnValue1) == 0x000003, "Member 'Cow_AnimBP_C_ShouldLookAtPlayer::CallFunc_Less_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ShouldLookAtPlayer, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'Cow_AnimBP_C_ShouldLookAtPlayer::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function cow_AnimBP.cow_AnimBP_C.PlayerDetection
// 0x0018 (0x0018 - 0x0000)
struct Cow_AnimBP_C_PlayerDetection final
{
public:
	class UBFGAnimation_Variables_Animal*         CallFunc_GetVariables_Animal_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Cow_AnimBP_C_PlayerDetection) == 0x000008, "Wrong alignment on Cow_AnimBP_C_PlayerDetection");
static_assert(sizeof(Cow_AnimBP_C_PlayerDetection) == 0x000018, "Wrong size on Cow_AnimBP_C_PlayerDetection");
static_assert(offsetof(Cow_AnimBP_C_PlayerDetection, CallFunc_GetVariables_Animal_ReturnValue) == 0x000000, "Member 'Cow_AnimBP_C_PlayerDetection::CallFunc_GetVariables_Animal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_PlayerDetection, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000008, "Member 'Cow_AnimBP_C_PlayerDetection::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_PlayerDetection, CallFunc_VSize_ReturnValue) == 0x000014, "Member 'Cow_AnimBP_C_PlayerDetection::CallFunc_VSize_ReturnValue' has a wrong offset!");

// Function cow_AnimBP.cow_AnimBP_C.LookAtPlayer
// 0x0028 (0x0028 - 0x0000)
struct Cow_AnimBP_C_LookAtPlayer final
{
public:
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGAnimation_Variables_Animal*         CallFunc_GetVariables_Animal_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Cow_AnimBP_C_LookAtPlayer) == 0x000008, "Wrong alignment on Cow_AnimBP_C_LookAtPlayer");
static_assert(sizeof(Cow_AnimBP_C_LookAtPlayer) == 0x000028, "Wrong size on Cow_AnimBP_C_LookAtPlayer");
static_assert(offsetof(Cow_AnimBP_C_LookAtPlayer, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000000, "Member 'Cow_AnimBP_C_LookAtPlayer::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_LookAtPlayer, CallFunc_GetVariables_Animal_ReturnValue) == 0x000010, "Member 'Cow_AnimBP_C_LookAtPlayer::CallFunc_GetVariables_Animal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_LookAtPlayer, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000018, "Member 'Cow_AnimBP_C_LookAtPlayer::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");

// Function cow_AnimBP.cow_AnimBP_C.TriggerIdleSelection
// 0x0020 (0x0020 - 0x0000)
struct Cow_AnimBP_C_TriggerIdleSelection final
{
public:
	class UBFGAnimation_Variables_Animal*         CallFunc_GetVariables_Animal_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Cow_AnimBP_C_TriggerIdleSelection) == 0x000008, "Wrong alignment on Cow_AnimBP_C_TriggerIdleSelection");
static_assert(sizeof(Cow_AnimBP_C_TriggerIdleSelection) == 0x000020, "Wrong size on Cow_AnimBP_C_TriggerIdleSelection");
static_assert(offsetof(Cow_AnimBP_C_TriggerIdleSelection, CallFunc_GetVariables_Animal_ReturnValue) == 0x000000, "Member 'Cow_AnimBP_C_TriggerIdleSelection::CallFunc_GetVariables_Animal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_TriggerIdleSelection, CallFunc_Less_FloatFloat_ReturnValue) == 0x000008, "Member 'Cow_AnimBP_C_TriggerIdleSelection::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_TriggerIdleSelection, CallFunc_VSize_ReturnValue) == 0x00000C, "Member 'Cow_AnimBP_C_TriggerIdleSelection::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_TriggerIdleSelection, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'Cow_AnimBP_C_TriggerIdleSelection::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_TriggerIdleSelection, CallFunc_RandomFloatInRange_ReturnValue) == 0x000014, "Member 'Cow_AnimBP_C_TriggerIdleSelection::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_TriggerIdleSelection, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'Cow_AnimBP_C_TriggerIdleSelection::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function cow_AnimBP.cow_AnimBP_C.TriggerElectrocutionSwitch
// 0x0018 (0x0018 - 0x0000)
struct Cow_AnimBP_C_TriggerElectrocutionSwitch final
{
public:
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGAnimation_Variables_Animal*         CallFunc_GetVariables_Animal_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Cow_AnimBP_C_TriggerElectrocutionSwitch) == 0x000008, "Wrong alignment on Cow_AnimBP_C_TriggerElectrocutionSwitch");
static_assert(sizeof(Cow_AnimBP_C_TriggerElectrocutionSwitch) == 0x000018, "Wrong size on Cow_AnimBP_C_TriggerElectrocutionSwitch");
static_assert(offsetof(Cow_AnimBP_C_TriggerElectrocutionSwitch, CallFunc_Add_FloatFloat_ReturnValue) == 0x000000, "Member 'Cow_AnimBP_C_TriggerElectrocutionSwitch::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_TriggerElectrocutionSwitch, CallFunc_Less_FloatFloat_ReturnValue) == 0x000004, "Member 'Cow_AnimBP_C_TriggerElectrocutionSwitch::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_TriggerElectrocutionSwitch, CallFunc_RandomFloatInRange_ReturnValue) == 0x000008, "Member 'Cow_AnimBP_C_TriggerElectrocutionSwitch::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_TriggerElectrocutionSwitch, CallFunc_GetVariables_Animal_ReturnValue) == 0x000010, "Member 'Cow_AnimBP_C_TriggerElectrocutionSwitch::CallFunc_GetVariables_Animal_ReturnValue' has a wrong offset!");

// Function cow_AnimBP.cow_AnimBP_C.HandleHypnotizeDistract
// 0x0030 (0x0030 - 0x0000)
struct Cow_AnimBP_C_HandleHypnotizeDistract final
{
public:
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0000(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable1;                             // 0x0008(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBFGAnimation_Variables*                CallFunc_GetVariables_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue1;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_Value;                           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_Value1;                          // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue1;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue2;         // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue3;         // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Cow_AnimBP_C_HandleHypnotizeDistract) == 0x000008, "Wrong alignment on Cow_AnimBP_C_HandleHypnotizeDistract");
static_assert(sizeof(Cow_AnimBP_C_HandleHypnotizeDistract) == 0x000030, "Wrong size on Cow_AnimBP_C_HandleHypnotizeDistract");
static_assert(offsetof(Cow_AnimBP_C_HandleHypnotizeDistract, Temp_struct_Variable) == 0x000000, "Member 'Cow_AnimBP_C_HandleHypnotizeDistract::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_HandleHypnotizeDistract, Temp_struct_Variable1) == 0x000008, "Member 'Cow_AnimBP_C_HandleHypnotizeDistract::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_HandleHypnotizeDistract, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000010, "Member 'Cow_AnimBP_C_HandleHypnotizeDistract::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_HandleHypnotizeDistract, CallFunc_Montage_Play_ReturnValue) == 0x000014, "Member 'Cow_AnimBP_C_HandleHypnotizeDistract::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_HandleHypnotizeDistract, CallFunc_GetVariables_ReturnValue) == 0x000018, "Member 'Cow_AnimBP_C_HandleHypnotizeDistract::CallFunc_GetVariables_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_HandleHypnotizeDistract, CallFunc_EqualEqual_BoolBool_ReturnValue1) == 0x000020, "Member 'Cow_AnimBP_C_HandleHypnotizeDistract::CallFunc_EqualEqual_BoolBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_HandleHypnotizeDistract, CallFunc_Map_Find_Value) == 0x000021, "Member 'Cow_AnimBP_C_HandleHypnotizeDistract::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_HandleHypnotizeDistract, CallFunc_Map_Find_ReturnValue) == 0x000022, "Member 'Cow_AnimBP_C_HandleHypnotizeDistract::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_HandleHypnotizeDistract, CallFunc_Map_Find_Value1) == 0x000023, "Member 'Cow_AnimBP_C_HandleHypnotizeDistract::CallFunc_Map_Find_Value1' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_HandleHypnotizeDistract, CallFunc_Map_Find_ReturnValue1) == 0x000024, "Member 'Cow_AnimBP_C_HandleHypnotizeDistract::CallFunc_Map_Find_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_HandleHypnotizeDistract, CallFunc_EqualEqual_BoolBool_ReturnValue2) == 0x000025, "Member 'Cow_AnimBP_C_HandleHypnotizeDistract::CallFunc_EqualEqual_BoolBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_HandleHypnotizeDistract, CallFunc_EqualEqual_BoolBool_ReturnValue3) == 0x000026, "Member 'Cow_AnimBP_C_HandleHypnotizeDistract::CallFunc_EqualEqual_BoolBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_HandleHypnotizeDistract, CallFunc_BooleanAND_ReturnValue) == 0x000027, "Member 'Cow_AnimBP_C_HandleHypnotizeDistract::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_HandleHypnotizeDistract, CallFunc_BooleanAND_ReturnValue1) == 0x000028, "Member 'Cow_AnimBP_C_HandleHypnotizeDistract::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");

// Function cow_AnimBP.cow_AnimBP_C.Locomotion_ADD
// 0x0040 (0x0040 - 0x0000)
struct Cow_AnimBP_C_Locomotion_ADD final
{
public:
	class UBFGAnimation_Variables_Animal*         CallFunc_GetVariables_Animal_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Cow_AnimBP_C_Locomotion_ADD) == 0x000008, "Wrong alignment on Cow_AnimBP_C_Locomotion_ADD");
static_assert(sizeof(Cow_AnimBP_C_Locomotion_ADD) == 0x000040, "Wrong size on Cow_AnimBP_C_Locomotion_ADD");
static_assert(offsetof(Cow_AnimBP_C_Locomotion_ADD, CallFunc_GetVariables_Animal_ReturnValue) == 0x000000, "Member 'Cow_AnimBP_C_Locomotion_ADD::CallFunc_GetVariables_Animal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Locomotion_ADD, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'Cow_AnimBP_C_Locomotion_ADD::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Locomotion_ADD, CallFunc_Round_ReturnValue) == 0x00000C, "Member 'Cow_AnimBP_C_Locomotion_ADD::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Locomotion_ADD, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000010, "Member 'Cow_AnimBP_C_Locomotion_ADD::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Locomotion_ADD, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000014, "Member 'Cow_AnimBP_C_Locomotion_ADD::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Locomotion_ADD, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000020, "Member 'Cow_AnimBP_C_Locomotion_ADD::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Locomotion_ADD, CallFunc_BreakRotator_Roll) == 0x000024, "Member 'Cow_AnimBP_C_Locomotion_ADD::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Locomotion_ADD, CallFunc_BreakRotator_Pitch) == 0x000028, "Member 'Cow_AnimBP_C_Locomotion_ADD::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Locomotion_ADD, CallFunc_BreakRotator_Yaw) == 0x00002C, "Member 'Cow_AnimBP_C_Locomotion_ADD::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Locomotion_ADD, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000030, "Member 'Cow_AnimBP_C_Locomotion_ADD::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Locomotion_ADD, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000034, "Member 'Cow_AnimBP_C_Locomotion_ADD::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Locomotion_ADD, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x000038, "Member 'Cow_AnimBP_C_Locomotion_ADD::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");

// Function cow_AnimBP.cow_AnimBP_C.Gallop_start
// 0x0003 (0x0003 - 0x0000)
struct Cow_AnimBP_C_Gallop_start final
{
public:
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Cow_AnimBP_C_Gallop_start) == 0x000001, "Wrong alignment on Cow_AnimBP_C_Gallop_start");
static_assert(sizeof(Cow_AnimBP_C_Gallop_start) == 0x000003, "Wrong size on Cow_AnimBP_C_Gallop_start");
static_assert(offsetof(Cow_AnimBP_C_Gallop_start, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000000, "Member 'Cow_AnimBP_C_Gallop_start::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Gallop_start, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'Cow_AnimBP_C_Gallop_start::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Gallop_start, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'Cow_AnimBP_C_Gallop_start::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function cow_AnimBP.cow_AnimBP_C.Additive animations
// 0x0028 (0x0028 - 0x0000)
struct Cow_AnimBP_C_Additive_animations final
{
public:
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue2;        // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGAnimation_Variables_Animal*         CallFunc_GetVariables_Animal_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue3;        // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue4;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue5;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Cow_AnimBP_C_Additive_animations) == 0x000008, "Wrong alignment on Cow_AnimBP_C_Additive_animations");
static_assert(sizeof(Cow_AnimBP_C_Additive_animations) == 0x000028, "Wrong size on Cow_AnimBP_C_Additive_animations");
static_assert(offsetof(Cow_AnimBP_C_Additive_animations, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000000, "Member 'Cow_AnimBP_C_Additive_animations::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Additive_animations, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000001, "Member 'Cow_AnimBP_C_Additive_animations::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Additive_animations, CallFunc_RandomBoolWithWeight_ReturnValue1) == 0x000002, "Member 'Cow_AnimBP_C_Additive_animations::CallFunc_RandomBoolWithWeight_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Additive_animations, CallFunc_RandomFloatInRange_ReturnValue) == 0x000004, "Member 'Cow_AnimBP_C_Additive_animations::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Additive_animations, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'Cow_AnimBP_C_Additive_animations::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Additive_animations, CallFunc_BooleanAND_ReturnValue) == 0x000009, "Member 'Cow_AnimBP_C_Additive_animations::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Additive_animations, CallFunc_BooleanOR_ReturnValue) == 0x00000A, "Member 'Cow_AnimBP_C_Additive_animations::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Additive_animations, CallFunc_RandomBoolWithWeight_ReturnValue2) == 0x00000B, "Member 'Cow_AnimBP_C_Additive_animations::CallFunc_RandomBoolWithWeight_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Additive_animations, CallFunc_GetVariables_Animal_ReturnValue) == 0x000010, "Member 'Cow_AnimBP_C_Additive_animations::CallFunc_GetVariables_Animal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Additive_animations, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000018, "Member 'Cow_AnimBP_C_Additive_animations::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Additive_animations, CallFunc_BooleanOR_ReturnValue1) == 0x000019, "Member 'Cow_AnimBP_C_Additive_animations::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Additive_animations, CallFunc_RandomBoolWithWeight_ReturnValue3) == 0x00001A, "Member 'Cow_AnimBP_C_Additive_animations::CallFunc_RandomBoolWithWeight_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Additive_animations, CallFunc_RandomIntegerInRange_ReturnValue) == 0x00001C, "Member 'Cow_AnimBP_C_Additive_animations::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Additive_animations, CallFunc_RandomBoolWithWeight_ReturnValue4) == 0x000020, "Member 'Cow_AnimBP_C_Additive_animations::CallFunc_RandomBoolWithWeight_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Additive_animations, CallFunc_RandomBoolWithWeight_ReturnValue5) == 0x000021, "Member 'Cow_AnimBP_C_Additive_animations::CallFunc_RandomBoolWithWeight_ReturnValue5' has a wrong offset!");

// Function cow_AnimBP.cow_AnimBP_C.Fitnerps
// 0x0048 (0x0048 - 0x0000)
struct Cow_AnimBP_C_Fitnerps final
{
public:
	class UBFGAnimation_Variables_Animal*         CallFunc_GetVariables_Animal_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGAnimation_Variables_Animal*         CallFunc_GetVariables_Animal_ReturnValue1;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue2;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue3;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue4;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Cow_AnimBP_C_Fitnerps) == 0x000008, "Wrong alignment on Cow_AnimBP_C_Fitnerps");
static_assert(sizeof(Cow_AnimBP_C_Fitnerps) == 0x000048, "Wrong size on Cow_AnimBP_C_Fitnerps");
static_assert(offsetof(Cow_AnimBP_C_Fitnerps, CallFunc_GetVariables_Animal_ReturnValue) == 0x000000, "Member 'Cow_AnimBP_C_Fitnerps::CallFunc_GetVariables_Animal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Fitnerps, CallFunc_FInterpTo_ReturnValue) == 0x000008, "Member 'Cow_AnimBP_C_Fitnerps::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Fitnerps, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'Cow_AnimBP_C_Fitnerps::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Fitnerps, CallFunc_GetVariables_Animal_ReturnValue1) == 0x000010, "Member 'Cow_AnimBP_C_Fitnerps::CallFunc_GetVariables_Animal_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Fitnerps, CallFunc_FInterpTo_ReturnValue1) == 0x000018, "Member 'Cow_AnimBP_C_Fitnerps::CallFunc_FInterpTo_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Fitnerps, CallFunc_FInterpTo_ReturnValue2) == 0x00001C, "Member 'Cow_AnimBP_C_Fitnerps::CallFunc_FInterpTo_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Fitnerps, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000020, "Member 'Cow_AnimBP_C_Fitnerps::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Fitnerps, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'Cow_AnimBP_C_Fitnerps::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Fitnerps, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000028, "Member 'Cow_AnimBP_C_Fitnerps::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Fitnerps, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x00002C, "Member 'Cow_AnimBP_C_Fitnerps::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Fitnerps, CallFunc_BreakRotator_Roll) == 0x000030, "Member 'Cow_AnimBP_C_Fitnerps::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Fitnerps, CallFunc_BreakRotator_Pitch) == 0x000034, "Member 'Cow_AnimBP_C_Fitnerps::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Fitnerps, CallFunc_BreakRotator_Yaw) == 0x000038, "Member 'Cow_AnimBP_C_Fitnerps::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Fitnerps, CallFunc_FInterpTo_ReturnValue3) == 0x00003C, "Member 'Cow_AnimBP_C_Fitnerps::CallFunc_FInterpTo_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_Fitnerps, CallFunc_FInterpTo_ReturnValue4) == 0x000040, "Member 'Cow_AnimBP_C_Fitnerps::CallFunc_FInterpTo_ReturnValue4' has a wrong offset!");

// Function cow_AnimBP.cow_AnimBP_C.SetPreviousFrameVariables
// 0x0020 (0x0020 - 0x0000)
struct Cow_AnimBP_C_SetPreviousFrameVariables final
{
public:
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0000(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	class UBFGAnimation_Variables*                CallFunc_GetVariables_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBFGAnimation_Variables_Animal*         CallFunc_GetVariables_Animal_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_Value;                           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Cow_AnimBP_C_SetPreviousFrameVariables) == 0x000008, "Wrong alignment on Cow_AnimBP_C_SetPreviousFrameVariables");
static_assert(sizeof(Cow_AnimBP_C_SetPreviousFrameVariables) == 0x000020, "Wrong size on Cow_AnimBP_C_SetPreviousFrameVariables");
static_assert(offsetof(Cow_AnimBP_C_SetPreviousFrameVariables, Temp_struct_Variable) == 0x000000, "Member 'Cow_AnimBP_C_SetPreviousFrameVariables::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_SetPreviousFrameVariables, CallFunc_GetVariables_ReturnValue) == 0x000008, "Member 'Cow_AnimBP_C_SetPreviousFrameVariables::CallFunc_GetVariables_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_SetPreviousFrameVariables, CallFunc_GetVariables_Animal_ReturnValue) == 0x000010, "Member 'Cow_AnimBP_C_SetPreviousFrameVariables::CallFunc_GetVariables_Animal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_SetPreviousFrameVariables, CallFunc_Map_Find_Value) == 0x000018, "Member 'Cow_AnimBP_C_SetPreviousFrameVariables::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_SetPreviousFrameVariables, CallFunc_Map_Find_ReturnValue) == 0x000019, "Member 'Cow_AnimBP_C_SetPreviousFrameVariables::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function cow_AnimBP.cow_AnimBP_C.GetVars
// 0x0038 (0x0038 - 0x0000)
struct Cow_AnimBP_C_GetVars final
{
public:
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBFGNPCCharacter_MoveSpeed                    CallFunc_GetMoveSpeed_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Animal_Cow_Base_C*                  K2Node_DynamicCast_AsBP_Animal_Cow_Base;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnySimulatingPhysics_ReturnValue;       // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBFGActorComponent_NPCCharacterMovement* K2Node_DynamicCast_AsBFGActor_Component_NPCCharacter_Movement; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Cow_AnimBP_C_GetVars) == 0x000008, "Wrong alignment on Cow_AnimBP_C_GetVars");
static_assert(sizeof(Cow_AnimBP_C_GetVars) == 0x000038, "Wrong size on Cow_AnimBP_C_GetVars");
static_assert(offsetof(Cow_AnimBP_C_GetVars, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000000, "Member 'Cow_AnimBP_C_GetVars::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_GetVars, CallFunc_GetMoveSpeed_ReturnValue) == 0x000008, "Member 'Cow_AnimBP_C_GetVars::CallFunc_GetMoveSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_GetVars, K2Node_DynamicCast_AsBP_Animal_Cow_Base) == 0x000010, "Member 'Cow_AnimBP_C_GetVars::K2Node_DynamicCast_AsBP_Animal_Cow_Base' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_GetVars, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Cow_AnimBP_C_GetVars::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_GetVars, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'Cow_AnimBP_C_GetVars::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_GetVars, CallFunc_IsAnySimulatingPhysics_ReturnValue) == 0x00001A, "Member 'Cow_AnimBP_C_GetVars::CallFunc_IsAnySimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_GetVars, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'Cow_AnimBP_C_GetVars::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_GetVars, K2Node_DynamicCast_AsBFGActor_Component_NPCCharacter_Movement) == 0x000028, "Member 'Cow_AnimBP_C_GetVars::K2Node_DynamicCast_AsBFGActor_Component_NPCCharacter_Movement' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_GetVars, K2Node_DynamicCast_bSuccess1) == 0x000030, "Member 'Cow_AnimBP_C_GetVars::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_GetVars, CallFunc_IsValid_ReturnValue1) == 0x000031, "Member 'Cow_AnimBP_C_GetVars::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

// Function cow_AnimBP.cow_AnimBP_C.SwitchElectrocutedState
// 0x0018 (0x0018 - 0x0000)
struct Cow_AnimBP_C_SwitchElectrocutedState final
{
public:
	int32                                         LastElectrocutedState;                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGAnimation_Variables_Animal*         CallFunc_GetVariables_Animal_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Cow_AnimBP_C_SwitchElectrocutedState) == 0x000008, "Wrong alignment on Cow_AnimBP_C_SwitchElectrocutedState");
static_assert(sizeof(Cow_AnimBP_C_SwitchElectrocutedState) == 0x000018, "Wrong size on Cow_AnimBP_C_SwitchElectrocutedState");
static_assert(offsetof(Cow_AnimBP_C_SwitchElectrocutedState, LastElectrocutedState) == 0x000000, "Member 'Cow_AnimBP_C_SwitchElectrocutedState::LastElectrocutedState' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_SwitchElectrocutedState, CallFunc_GetVariables_Animal_ReturnValue) == 0x000008, "Member 'Cow_AnimBP_C_SwitchElectrocutedState::CallFunc_GetVariables_Animal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_SwitchElectrocutedState, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'Cow_AnimBP_C_SwitchElectrocutedState::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_SwitchElectrocutedState, CallFunc_RandomInteger_ReturnValue) == 0x000014, "Member 'Cow_AnimBP_C_SwitchElectrocutedState::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");

// Function cow_AnimBP.cow_AnimBP_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct Cow_AnimBP_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX_0;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Cow_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on Cow_AnimBP_C_BlueprintUpdateAnimation");
static_assert(sizeof(Cow_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on Cow_AnimBP_C_BlueprintUpdateAnimation");
static_assert(offsetof(Cow_AnimBP_C_BlueprintUpdateAnimation, DeltaTimeX_0) == 0x000000, "Member 'Cow_AnimBP_C_BlueprintUpdateAnimation::DeltaTimeX_0' has a wrong offset!");

// Function cow_AnimBP.cow_AnimBP_C.G2AGetHit
// 0x0018 (0x0018 - 0x0000)
struct Cow_AnimBP_C_G2AGetHit final
{
public:
	struct FVector                                _vHitDirection;                                    // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UBFGDamageType*                   _pDamageType;                                      // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Cow_AnimBP_C_G2AGetHit) == 0x000008, "Wrong alignment on Cow_AnimBP_C_G2AGetHit");
static_assert(sizeof(Cow_AnimBP_C_G2AGetHit) == 0x000018, "Wrong size on Cow_AnimBP_C_G2AGetHit");
static_assert(offsetof(Cow_AnimBP_C_G2AGetHit, _vHitDirection) == 0x000000, "Member 'Cow_AnimBP_C_G2AGetHit::_vHitDirection' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_G2AGetHit, _pDamageType) == 0x000010, "Member 'Cow_AnimBP_C_G2AGetHit::_pDamageType' has a wrong offset!");

// Function cow_AnimBP.cow_AnimBP_C.StandUpStarted
// 0x0040 (0x0040 - 0x0000)
struct Cow_AnimBP_C_StandUpStarted final
{
public:
	bool                                          _bIsFaceDown;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPoseSnapshot                          _oPoseSnapshot;                                    // 0x0008(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Cow_AnimBP_C_StandUpStarted) == 0x000008, "Wrong alignment on Cow_AnimBP_C_StandUpStarted");
static_assert(sizeof(Cow_AnimBP_C_StandUpStarted) == 0x000040, "Wrong size on Cow_AnimBP_C_StandUpStarted");
static_assert(offsetof(Cow_AnimBP_C_StandUpStarted, _bIsFaceDown) == 0x000000, "Member 'Cow_AnimBP_C_StandUpStarted::_bIsFaceDown' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_StandUpStarted, _oPoseSnapshot) == 0x000008, "Member 'Cow_AnimBP_C_StandUpStarted::_oPoseSnapshot' has a wrong offset!");

// Function cow_AnimBP.cow_AnimBP_C.ExecuteUbergraph_cow_AnimBP
// 0x0110 (0x0110 - 0x0000)
struct Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBFGAnimation_Variables_Animal*         CallFunc_GetVariables_Animal_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGAnimation_Variables_Animal*         CallFunc_GetVariables_Animal_ReturnValue1;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBFGAnimation_Variables_Animal*         CallFunc_GetVariables_Animal_ReturnValue2;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue1; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGAnimation_Variables_Animal*         CallFunc_GetVariables_Animal_ReturnValue3;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBFGAnimation_Variables_Animal*         CallFunc_GetVariables_Animal_ReturnValue4;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGAnimation_Variables_Animal*         CallFunc_GetVariables_Animal_ReturnValue5;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBFGAnimation_Variables_Animal*         CallFunc_GetVariables_Animal_ReturnValue6;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBFGAnimation_Variables_Animal*         CallFunc_GetVariables_Animal_ReturnValue7;         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue1;                       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F[0x1];                                       // 0x007F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGAnimation_Variables_Animal*         CallFunc_GetVariables_Animal_ReturnValue8;         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBFGAnimation_Variables*                CallFunc_GetVariables_ReturnValue;                 // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue1;        // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue1;          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue2; // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue1;             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event__vHitDirection;                       // 0x00A4(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UBFGDamageType*                   K2Node_Event__pDamageType;                         // 0x00B0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue2;        // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x00BC(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_Value;                           // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue3;        // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event__bIsFaceDown;                         // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPoseSnapshot                          K2Node_Event__oPoseSnapshot;                       // 0x00D0(0x0038)(ConstParm)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue2;          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP) == 0x000008, "Wrong alignment on Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP");
static_assert(sizeof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP) == 0x000110, "Wrong size on Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, EntryPoint) == 0x000000, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_RandomFloatInRange_ReturnValue) == 0x000004, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_GetVariables_Animal_ReturnValue) == 0x000008, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_GetVariables_Animal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue) == 0x000010, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000014, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_GetVariables_Animal_ReturnValue1) == 0x000018, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_GetVariables_Animal_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000024, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_GetVariables_Animal_ReturnValue2) == 0x000028, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_GetVariables_Animal_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue1) == 0x000030, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000034, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_Less_FloatFloat_ReturnValue) == 0x000038, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_GetVariables_Animal_ReturnValue3) == 0x000040, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_GetVariables_Animal_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_GetVariables_Animal_ReturnValue4) == 0x000048, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_GetVariables_Animal_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_Not_PreBool_ReturnValue1) == 0x000050, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_VSize_ReturnValue) == 0x000054, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000058, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_GetVariables_Animal_ReturnValue5) == 0x000060, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_GetVariables_Animal_ReturnValue5' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_GetVariables_Animal_ReturnValue6) == 0x000068, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_GetVariables_Animal_ReturnValue6' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_GetVariables_Animal_ReturnValue7) == 0x000070, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_GetVariables_Animal_ReturnValue7' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_VSize_ReturnValue1) == 0x000078, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_VSize_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00007C, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_Not_PreBool_ReturnValue2) == 0x00007D, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_BooleanOR_ReturnValue) == 0x00007E, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_GetVariables_Animal_ReturnValue8) == 0x000080, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_GetVariables_Animal_ReturnValue8' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_GetVariables_ReturnValue) == 0x000088, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_GetVariables_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, K2Node_Event_DeltaTimeX) == 0x000090, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000094, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_RandomBoolWithWeight_ReturnValue1) == 0x000095, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_RandomBoolWithWeight_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_RandomFloatInRange_ReturnValue1) == 0x000098, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_RandomFloatInRange_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue2) == 0x00009C, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_Less_FloatFloat_ReturnValue1) == 0x0000A0, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_Less_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, K2Node_Event__vHitDirection) == 0x0000A4, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::K2Node_Event__vHitDirection' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, K2Node_Event__pDamageType) == 0x0000B0, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::K2Node_Event__pDamageType' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_RandomBoolWithWeight_ReturnValue2) == 0x0000B8, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_RandomBoolWithWeight_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, Temp_struct_Variable) == 0x0000BC, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_Map_Find_Value) == 0x0000C4, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_Map_Find_ReturnValue) == 0x0000C5, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_BooleanAND_ReturnValue1) == 0x0000C6, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_RandomBoolWithWeight_ReturnValue3) == 0x0000C7, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_RandomBoolWithWeight_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, K2Node_Event__bIsFaceDown) == 0x0000C8, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::K2Node_Event__bIsFaceDown' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, K2Node_Event__oPoseSnapshot) == 0x0000D0, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::K2Node_Event__oPoseSnapshot' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_Montage_Play_ReturnValue) == 0x000108, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP, CallFunc_RandomFloatInRange_ReturnValue2) == 0x00010C, "Member 'Cow_AnimBP_C_ExecuteUbergraph_cow_AnimBP::CallFunc_RandomFloatInRange_ReturnValue2' has a wrong offset!");

}

