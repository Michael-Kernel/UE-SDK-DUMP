#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Animal_Chicken_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_Animal_Chicken_Base.BP_Animal_Chicken_Base_C.ExecuteUbergraph_BP_Animal_Chicken_Base
// 0x0120 (0x0120 - 0x0000)
struct BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameplayTag& _rTag)>   K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0058(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AWheeledVehicle*                        K2Node_DynamicCast_AsWheeled_Vehicle;              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent__rTag1;                         // 0x00EC(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent__rTag;                          // 0x00F4(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue1;      // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FE[0x2];                                       // 0x00FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FGameplayTag& _rTag)>   K2Node_CreateDelegate_OutputDelegate1;             // 0x0100(0x0010)(ZeroConstructor, NoDestructor)
	class UBFGActorStat_Bool*                     CallFunc_GetIsDeadStat_ReturnValue;                // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValue_ReturnValue;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base) == 0x000008, "Wrong alignment on BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base");
static_assert(sizeof(BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base) == 0x000120, "Wrong size on BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base");
static_assert(offsetof(BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base, EntryPoint) == 0x000000, "Member 'BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000018, "Member 'BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base, Temp_bool_Has_Been_Initd_Variable) == 0x000020, "Member 'BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000028, "Member 'BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base, Temp_bool_IsClosed_Variable) == 0x000030, "Member 'BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base, K2Node_Event_DeltaSeconds) == 0x000034, "Member 'BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000038, "Member 'BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base, K2Node_ComponentBoundEvent_OtherActor) == 0x000040, "Member 'BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base, K2Node_ComponentBoundEvent_OtherComp) == 0x000048, "Member 'BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000050, "Member 'BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base, K2Node_ComponentBoundEvent_bFromSweep) == 0x000054, "Member 'BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base, K2Node_ComponentBoundEvent_SweepResult) == 0x000058, "Member 'BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base, K2Node_DynamicCast_AsWheeled_Vehicle) == 0x0000E0, "Member 'BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base::K2Node_DynamicCast_AsWheeled_Vehicle' has a wrong offset!");
static_assert(offsetof(BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base, K2Node_CustomEvent__rTag1) == 0x0000EC, "Member 'BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base::K2Node_CustomEvent__rTag1' has a wrong offset!");
static_assert(offsetof(BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base, K2Node_CustomEvent__rTag) == 0x0000F4, "Member 'BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base::K2Node_CustomEvent__rTag' has a wrong offset!");
static_assert(offsetof(BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x0000FC, "Member 'BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base, CallFunc_EqualEqual_GameplayTag_ReturnValue1) == 0x0000FD, "Member 'BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base::CallFunc_EqualEqual_GameplayTag_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base, K2Node_CreateDelegate_OutputDelegate1) == 0x000100, "Member 'BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base, CallFunc_GetIsDeadStat_ReturnValue) == 0x000110, "Member 'BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base::CallFunc_GetIsDeadStat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base, CallFunc_GetValue_ReturnValue) == 0x000118, "Member 'BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base, CallFunc_Not_PreBool_ReturnValue) == 0x000119, "Member 'BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base, CallFunc_BooleanAND_ReturnValue) == 0x00011A, "Member 'BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_Animal_Chicken_Base.BP_Animal_Chicken_Base_C.OnTagInactive
// 0x0008 (0x0008 - 0x0000)
struct BP_Animal_Chicken_Base_C_OnTagInactive final
{
public:
	struct FGameplayTag                           _rTag;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Animal_Chicken_Base_C_OnTagInactive) == 0x000004, "Wrong alignment on BP_Animal_Chicken_Base_C_OnTagInactive");
static_assert(sizeof(BP_Animal_Chicken_Base_C_OnTagInactive) == 0x000008, "Wrong size on BP_Animal_Chicken_Base_C_OnTagInactive");
static_assert(offsetof(BP_Animal_Chicken_Base_C_OnTagInactive, _rTag) == 0x000000, "Member 'BP_Animal_Chicken_Base_C_OnTagInactive::_rTag' has a wrong offset!");

// Function BP_Animal_Chicken_Base.BP_Animal_Chicken_Base_C.OnTagActive
// 0x0008 (0x0008 - 0x0000)
struct BP_Animal_Chicken_Base_C_OnTagActive final
{
public:
	struct FGameplayTag                           _rTag;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Animal_Chicken_Base_C_OnTagActive) == 0x000004, "Wrong alignment on BP_Animal_Chicken_Base_C_OnTagActive");
static_assert(sizeof(BP_Animal_Chicken_Base_C_OnTagActive) == 0x000008, "Wrong size on BP_Animal_Chicken_Base_C_OnTagActive");
static_assert(offsetof(BP_Animal_Chicken_Base_C_OnTagActive, _rTag) == 0x000000, "Member 'BP_Animal_Chicken_Base_C_OnTagActive::_rTag' has a wrong offset!");

// Function BP_Animal_Chicken_Base.BP_Animal_Chicken_Base_C.BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_Animal_Chicken_Base_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Animal_Chicken_Base_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Animal_Chicken_Base_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Animal_Chicken_Base_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_Animal_Chicken_Base_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Animal_Chicken_Base_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Animal_Chicken_Base_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Animal_Chicken_Base_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Animal_Chicken_Base_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Animal_Chicken_Base_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Animal_Chicken_Base_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Animal_Chicken_Base_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Animal_Chicken_Base_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Animal_Chicken_Base_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_Animal_Chicken_Base_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Animal_Chicken_Base_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_Animal_Chicken_Base_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_Animal_Chicken_Base.BP_Animal_Chicken_Base_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Animal_Chicken_Base_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Animal_Chicken_Base_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Animal_Chicken_Base_C_ReceiveTick");
static_assert(sizeof(BP_Animal_Chicken_Base_C_ReceiveTick) == 0x000004, "Wrong size on BP_Animal_Chicken_Base_C_ReceiveTick");
static_assert(offsetof(BP_Animal_Chicken_Base_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Animal_Chicken_Base_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Animal_Chicken_Base.BP_Animal_Chicken_Base_C.HandleOverlapWithVehicle
// 0x0008 (0x0008 - 0x0000)
struct BP_Animal_Chicken_Base_C_HandleOverlapWithVehicle final
{
public:
	class AActor*                                 InVehicle;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Animal_Chicken_Base_C_HandleOverlapWithVehicle) == 0x000008, "Wrong alignment on BP_Animal_Chicken_Base_C_HandleOverlapWithVehicle");
static_assert(sizeof(BP_Animal_Chicken_Base_C_HandleOverlapWithVehicle) == 0x000008, "Wrong size on BP_Animal_Chicken_Base_C_HandleOverlapWithVehicle");
static_assert(offsetof(BP_Animal_Chicken_Base_C_HandleOverlapWithVehicle, InVehicle) == 0x000000, "Member 'BP_Animal_Chicken_Base_C_HandleOverlapWithVehicle::InVehicle' has a wrong offset!");

// Function BP_Animal_Chicken_Base.BP_Animal_Chicken_Base_C.PKPhysicalAnimation
// 0x0008 (0x0008 - 0x0000)
struct BP_Animal_Chicken_Base_C_PKPhysicalAnimation final
{
public:
	class FName                                   PhysicalProfile;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Animal_Chicken_Base_C_PKPhysicalAnimation) == 0x000004, "Wrong alignment on BP_Animal_Chicken_Base_C_PKPhysicalAnimation");
static_assert(sizeof(BP_Animal_Chicken_Base_C_PKPhysicalAnimation) == 0x000008, "Wrong size on BP_Animal_Chicken_Base_C_PKPhysicalAnimation");
static_assert(offsetof(BP_Animal_Chicken_Base_C_PKPhysicalAnimation, PhysicalProfile) == 0x000000, "Member 'BP_Animal_Chicken_Base_C_PKPhysicalAnimation::PhysicalProfile' has a wrong offset!");

}

