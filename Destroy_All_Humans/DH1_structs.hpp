#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DH1

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK
{

// Enum DH1.EDH1ArmorType
// NumValues: 0x0011
enum class EDH1ArmorType : uint8
{
	None                                     = 0,
	Default                                  = 1,
	Human                                    = 2,
	HumanArmor                               = 3,
	Vehicle                                  = 4,
	VehicleArmor                             = 5,
	Building                                 = 6,
	BuildingArmor                            = 7,
	Alien                                    = 8,
	AlienSaucer                              = 9,
	PowersuitArmor                           = 10,
	RoboprezArmor                            = 11,
	Animal                                   = 12,
	Prop                                     = 13,
	Prop_AlienImmune                         = 14,
	EndOfArmorTypes                          = 15,
	EDH1ArmorType_MAX                        = 16,
};

// Enum DH1.EDH1WeaponType
// NumValues: 0x0015
enum class EDH1WeaponType : uint8
{
	None                                     = 0,
	Default                                  = 1,
	ZapOMatic                                = 2,
	DestructorRay                            = 3,
	IonDetonator                             = 4,
	AnalProbe                                = 5,
	MatterMove                               = 6,
	DeathRay                                 = 7,
	SonicBoom                                = 8,
	Quantum                                  = 9,
	Impact                                   = 10,
	Fire                                     = 11,
	SpawnFire                                = 12,
	EMPMine                                  = 13,
	FuelTank                                 = 14,
	PowerSuit                                = 15,
	Roboprez                                 = 16,
	RoboprezLaser                            = 17,
	ExplodingCow                             = 18,
	EndOfWeaponTypes                         = 19,
	EDH1WeaponType_MAX                       = 20,
};

// ScriptStruct DH1.DH1DamageModifier
// 0x0040 (0x0048 - 0x0008)
struct FDH1DamageModifier final : public FTableRowBase
{
public:
	EDH1WeaponType                                M_weaponType;                                      // 0x0008(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         M_fNone;                                           // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         M_fDefault;                                        // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         M_fHuman;                                          // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         M_fHumanArmor;                                     // 0x0018(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         M_fVehicle;                                        // 0x001C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         M_fVehicleArmor;                                   // 0x0020(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         M_fBuilding;                                       // 0x0024(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         M_fBuildingArmor;                                  // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         M_fAlien;                                          // 0x002C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         M_fAlienSaucer;                                    // 0x0030(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         M_fPowersuitArmor;                                 // 0x0034(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         M_fRoboprezArmor;                                  // 0x0038(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         M_fAnimal;                                         // 0x003C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         M_fProp;                                           // 0x0040(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         M_fProp_AlienImmune;                               // 0x0044(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FDH1DamageModifier) == 0x000008, "Wrong alignment on FDH1DamageModifier");
static_assert(sizeof(FDH1DamageModifier) == 0x000048, "Wrong size on FDH1DamageModifier");
static_assert(offsetof(FDH1DamageModifier, M_weaponType) == 0x000008, "Member 'FDH1DamageModifier::M_weaponType' has a wrong offset!");
static_assert(offsetof(FDH1DamageModifier, M_fNone) == 0x00000C, "Member 'FDH1DamageModifier::M_fNone' has a wrong offset!");
static_assert(offsetof(FDH1DamageModifier, M_fDefault) == 0x000010, "Member 'FDH1DamageModifier::M_fDefault' has a wrong offset!");
static_assert(offsetof(FDH1DamageModifier, M_fHuman) == 0x000014, "Member 'FDH1DamageModifier::M_fHuman' has a wrong offset!");
static_assert(offsetof(FDH1DamageModifier, M_fHumanArmor) == 0x000018, "Member 'FDH1DamageModifier::M_fHumanArmor' has a wrong offset!");
static_assert(offsetof(FDH1DamageModifier, M_fVehicle) == 0x00001C, "Member 'FDH1DamageModifier::M_fVehicle' has a wrong offset!");
static_assert(offsetof(FDH1DamageModifier, M_fVehicleArmor) == 0x000020, "Member 'FDH1DamageModifier::M_fVehicleArmor' has a wrong offset!");
static_assert(offsetof(FDH1DamageModifier, M_fBuilding) == 0x000024, "Member 'FDH1DamageModifier::M_fBuilding' has a wrong offset!");
static_assert(offsetof(FDH1DamageModifier, M_fBuildingArmor) == 0x000028, "Member 'FDH1DamageModifier::M_fBuildingArmor' has a wrong offset!");
static_assert(offsetof(FDH1DamageModifier, M_fAlien) == 0x00002C, "Member 'FDH1DamageModifier::M_fAlien' has a wrong offset!");
static_assert(offsetof(FDH1DamageModifier, M_fAlienSaucer) == 0x000030, "Member 'FDH1DamageModifier::M_fAlienSaucer' has a wrong offset!");
static_assert(offsetof(FDH1DamageModifier, M_fPowersuitArmor) == 0x000034, "Member 'FDH1DamageModifier::M_fPowersuitArmor' has a wrong offset!");
static_assert(offsetof(FDH1DamageModifier, M_fRoboprezArmor) == 0x000038, "Member 'FDH1DamageModifier::M_fRoboprezArmor' has a wrong offset!");
static_assert(offsetof(FDH1DamageModifier, M_fAnimal) == 0x00003C, "Member 'FDH1DamageModifier::M_fAnimal' has a wrong offset!");
static_assert(offsetof(FDH1DamageModifier, M_fProp) == 0x000040, "Member 'FDH1DamageModifier::M_fProp' has a wrong offset!");
static_assert(offsetof(FDH1DamageModifier, M_fProp_AlienImmune) == 0x000044, "Member 'FDH1DamageModifier::M_fProp_AlienImmune' has a wrong offset!");

}

