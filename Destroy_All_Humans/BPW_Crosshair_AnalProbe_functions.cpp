#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPW_Crosshair_AnalProbe

#include "Basic.hpp"

#include "BPW_Crosshair_AnalProbe_classes.hpp"
#include "BPW_Crosshair_AnalProbe_parameters.hpp"


namespace SDK
{

// Function BPW_Crosshair_AnalProbe.BPW_Crosshair_AnalProbe_C.ActivateMiniGame
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bActivate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPW_Crosshair_AnalProbe_C::ActivateMiniGame(bool bActivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_Crosshair_AnalProbe_C", "ActivateMiniGame");

	Params::BPW_Crosshair_AnalProbe_C_ActivateMiniGame Parms{};

	Parms.bActivate = bActivate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPW_Crosshair_AnalProbe.BPW_Crosshair_AnalProbe_C.UpdateMiniGame
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   FMiniGameValue                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   FMinigameSuccessThreshold                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPW_Crosshair_AnalProbe_C::UpdateMiniGame(float FMiniGameValue, float FMinigameSuccessThreshold)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_Crosshair_AnalProbe_C", "UpdateMiniGame");

	Params::BPW_Crosshair_AnalProbe_C_UpdateMiniGame Parms{};

	Parms.FMiniGameValue = FMiniGameValue;
	Parms.FMinigameSuccessThreshold = FMinigameSuccessThreshold;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPW_Crosshair_AnalProbe.BPW_Crosshair_AnalProbe_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBPW_Crosshair_AnalProbe_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_Crosshair_AnalProbe_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPW_Crosshair_AnalProbe.BPW_Crosshair_AnalProbe_C.WeaponAndAbilitySharedTargetChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    _bNewValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPW_Crosshair_AnalProbe_C::WeaponAndAbilitySharedTargetChanged(bool _bNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_Crosshair_AnalProbe_C", "WeaponAndAbilitySharedTargetChanged");

	Params::BPW_Crosshair_AnalProbe_C_WeaponAndAbilitySharedTargetChanged Parms{};

	Parms._bNewValue = _bNewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPW_Crosshair_AnalProbe.BPW_Crosshair_AnalProbe_C.ExecuteUbergraph_BPW_Crosshair_AnalProbe
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPW_Crosshair_AnalProbe_C::ExecuteUbergraph_BPW_Crosshair_AnalProbe(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_Crosshair_AnalProbe_C", "ExecuteUbergraph_BPW_Crosshair_AnalProbe");

	Params::BPW_Crosshair_AnalProbe_C_ExecuteUbergraph_BPW_Crosshair_AnalProbe Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

