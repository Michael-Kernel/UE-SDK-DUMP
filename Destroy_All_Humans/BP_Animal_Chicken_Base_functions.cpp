#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Animal_Chicken_Base

#include "Basic.hpp"

#include "BP_Animal_Chicken_Base_classes.hpp"
#include "BP_Animal_Chicken_Base_parameters.hpp"


namespace SDK
{

// Function BP_Animal_Chicken_Base.BP_Animal_Chicken_Base_C.ExecuteUbergraph_BP_Animal_Chicken_Base
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Animal_Chicken_Base_C::ExecuteUbergraph_BP_Animal_Chicken_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Animal_Chicken_Base_C", "ExecuteUbergraph_BP_Animal_Chicken_Base");

	Params::BP_Animal_Chicken_Base_C_ExecuteUbergraph_BP_Animal_Chicken_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Animal_Chicken_Base.BP_Animal_Chicken_Base_C.OnTagInactive
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     _rTag                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void ABP_Animal_Chicken_Base_C::OnTagInactive(const struct FGameplayTag& _rTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Animal_Chicken_Base_C", "OnTagInactive");

	Params::BP_Animal_Chicken_Base_C_OnTagInactive Parms{};

	Parms._rTag = std::move(_rTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Animal_Chicken_Base.BP_Animal_Chicken_Base_C.OnTagActive
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     _rTag                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void ABP_Animal_Chicken_Base_C::OnTagActive(const struct FGameplayTag& _rTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Animal_Chicken_Base_C", "OnTagActive");

	Params::BP_Animal_Chicken_Base_C_OnTagActive Parms{};

	Parms._rTag = std::move(_rTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Animal_Chicken_Base.BP_Animal_Chicken_Base_C.BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_Animal_Chicken_Base_C::BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Animal_Chicken_Base_C", "BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_Animal_Chicken_Base_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Animal_Chicken_Base.BP_Animal_Chicken_Base_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Animal_Chicken_Base_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Animal_Chicken_Base_C", "ReceiveTick");

	Params::BP_Animal_Chicken_Base_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Animal_Chicken_Base.BP_Animal_Chicken_Base_C.HandleOverlapWithVehicle
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InVehicle                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Animal_Chicken_Base_C::HandleOverlapWithVehicle(class AActor* InVehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Animal_Chicken_Base_C", "HandleOverlapWithVehicle");

	Params::BP_Animal_Chicken_Base_C_HandleOverlapWithVehicle Parms{};

	Parms.InVehicle = InVehicle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Animal_Chicken_Base.BP_Animal_Chicken_Base_C.PKPhysicalAnimation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             PhysicalProfile                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Animal_Chicken_Base_C::PKPhysicalAnimation(class FName PhysicalProfile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Animal_Chicken_Base_C", "PKPhysicalAnimation");

	Params::BP_Animal_Chicken_Base_C_PKPhysicalAnimation Parms{};

	Parms.PhysicalProfile = PhysicalProfile;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Animal_Chicken_Base.BP_Animal_Chicken_Base_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Animal_Chicken_Base_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Animal_Chicken_Base_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}

}

