#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Animal_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Enum_WhichBehaviorSound_structs.hpp"
#include "BFGCore_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Animal_Base.BP_Animal_Base_C
// 0x00A0 (0x0C30 - 0x0B90)
#pragma pack(push, 0x1)
class alignas(0x10) ABP_Animal_Base_C : public ABFGNPCCharacterAnimal
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B90(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        VO_Output_Subfluff;                                // 0x0B98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        VO_Output_Behavior;                                // 0x0BA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_CryptoWeapnHitEffectsComponent_C*   BP_CryptoWeapnHitEffectsComponent;                 // 0x0BA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDH1ArmorComponent*                     DH1Armor;                                          // 0x0BB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_OverheadOpportunityWidgetComponent_C* BP_OverheadOpportunityWidgetComponent;             // 0x0BB8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugMode;                                         // 0x0BC0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Should_Play_Zappo_VO_now;                          // 0x0BC1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BC2[0x2];                                      // 0x0BC2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartDuration;                                     // 0x0BC4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_WhichBehaviorSound                       VO_WhichSituation;                                 // 0x0BC8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_WhichBehaviorSound                       VO_OldSituation;                                   // 0x0BC9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Zappo_VO_Fading_Out;                            // 0x0BCA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BCB[0x5];                                      // 0x0BCB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<Enum_WhichBehaviorSound, class USoundBase*> Map_WhichVOSoundbase;                              // 0x0BD0(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          Should_Fadeout_Zappo_VO;                           // 0x0C20(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          NoMoreVO;                                          // 0x0C21(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void CheckIfElectrocuteDamage(const class UBFGDamageType* IncomingDamge, bool* YesElectrocute);
	void HandleVOBehavior();
	void PlayBehaviorVO_simplified();
	void BndEvt__m_pGameplayEffectTagsComponent_K2Node_ComponentBoundEvent_1_BFGGameplayEffectTags_Event__DelegateSignature(const struct FGameplayTag& _rTag);
	void OnPKDrop();
	void OnPKPickUp();
	void BndEvt__m_pGameplayEffectTagsComponent_K2Node_ComponentBoundEvent_3_BFGGameplayEffectTags_Event__DelegateSignature(const struct FGameplayTag& _rTag);
	void BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature(class UBFGActorComponent_PawnDamage* _pPawnDamage, float _fDamage, class AActor* _pDamageCauser, const class UBFGDamageType* _pDamageType, const struct FVector& _rShotDirection, const struct FHitResult& _oHitResult);
	void ReceiveTick(float DeltaSeconds);
	void ExecuteUbergraph_BP_Animal_Base(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Animal_Base_C">();
	}
	static class ABP_Animal_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Animal_Base_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(ABP_Animal_Base_C) == 0x000010, "Wrong alignment on ABP_Animal_Base_C");
static_assert(sizeof(ABP_Animal_Base_C) == 0x000C30, "Wrong size on ABP_Animal_Base_C");
static_assert(offsetof(ABP_Animal_Base_C, UberGraphFrame) == 0x000B90, "Member 'ABP_Animal_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Animal_Base_C, VO_Output_Subfluff) == 0x000B98, "Member 'ABP_Animal_Base_C::VO_Output_Subfluff' has a wrong offset!");
static_assert(offsetof(ABP_Animal_Base_C, VO_Output_Behavior) == 0x000BA0, "Member 'ABP_Animal_Base_C::VO_Output_Behavior' has a wrong offset!");
static_assert(offsetof(ABP_Animal_Base_C, BP_CryptoWeapnHitEffectsComponent) == 0x000BA8, "Member 'ABP_Animal_Base_C::BP_CryptoWeapnHitEffectsComponent' has a wrong offset!");
static_assert(offsetof(ABP_Animal_Base_C, DH1Armor) == 0x000BB0, "Member 'ABP_Animal_Base_C::DH1Armor' has a wrong offset!");
static_assert(offsetof(ABP_Animal_Base_C, BP_OverheadOpportunityWidgetComponent) == 0x000BB8, "Member 'ABP_Animal_Base_C::BP_OverheadOpportunityWidgetComponent' has a wrong offset!");
static_assert(offsetof(ABP_Animal_Base_C, DebugMode) == 0x000BC0, "Member 'ABP_Animal_Base_C::DebugMode' has a wrong offset!");
static_assert(offsetof(ABP_Animal_Base_C, Should_Play_Zappo_VO_now) == 0x000BC1, "Member 'ABP_Animal_Base_C::Should_Play_Zappo_VO_now' has a wrong offset!");
static_assert(offsetof(ABP_Animal_Base_C, StartDuration) == 0x000BC4, "Member 'ABP_Animal_Base_C::StartDuration' has a wrong offset!");
static_assert(offsetof(ABP_Animal_Base_C, VO_WhichSituation) == 0x000BC8, "Member 'ABP_Animal_Base_C::VO_WhichSituation' has a wrong offset!");
static_assert(offsetof(ABP_Animal_Base_C, VO_OldSituation) == 0x000BC9, "Member 'ABP_Animal_Base_C::VO_OldSituation' has a wrong offset!");
static_assert(offsetof(ABP_Animal_Base_C, Is_Zappo_VO_Fading_Out) == 0x000BCA, "Member 'ABP_Animal_Base_C::Is_Zappo_VO_Fading_Out' has a wrong offset!");
static_assert(offsetof(ABP_Animal_Base_C, Map_WhichVOSoundbase) == 0x000BD0, "Member 'ABP_Animal_Base_C::Map_WhichVOSoundbase' has a wrong offset!");
static_assert(offsetof(ABP_Animal_Base_C, Should_Fadeout_Zappo_VO) == 0x000C20, "Member 'ABP_Animal_Base_C::Should_Fadeout_Zappo_VO' has a wrong offset!");
static_assert(offsetof(ABP_Animal_Base_C, NoMoreVO) == 0x000C21, "Member 'ABP_Animal_Base_C::NoMoreVO' has a wrong offset!");

}

