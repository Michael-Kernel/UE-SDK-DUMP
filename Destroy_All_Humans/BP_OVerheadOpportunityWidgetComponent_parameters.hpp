#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_OVerheadOpportunityWidgetComponent

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.EnableOnScreenMarker
// 0x0001 (0x0001 - 0x0000)
struct BP_OverheadOpportunityWidgetComponent_C_EnableOnScreenMarker final
{
public:
	bool                                          bpp__InEnable__pf;                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_OverheadOpportunityWidgetComponent_C_EnableOnScreenMarker) == 0x000001, "Wrong alignment on BP_OverheadOpportunityWidgetComponent_C_EnableOnScreenMarker");
static_assert(sizeof(BP_OverheadOpportunityWidgetComponent_C_EnableOnScreenMarker) == 0x000001, "Wrong size on BP_OverheadOpportunityWidgetComponent_C_EnableOnScreenMarker");
static_assert(offsetof(BP_OverheadOpportunityWidgetComponent_C_EnableOnScreenMarker, bpp__InEnable__pf) == 0x000000, "Member 'BP_OverheadOpportunityWidgetComponent_C_EnableOnScreenMarker::bpp__InEnable__pf' has a wrong offset!");

// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.Get_ActivateArrow
// 0x0001 (0x0001 - 0x0000)
struct BP_OverheadOpportunityWidgetComponent_C_Get_ActivateArrow final
{
public:
	bool                                          bpp__Out__pf;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_OverheadOpportunityWidgetComponent_C_Get_ActivateArrow) == 0x000001, "Wrong alignment on BP_OverheadOpportunityWidgetComponent_C_Get_ActivateArrow");
static_assert(sizeof(BP_OverheadOpportunityWidgetComponent_C_Get_ActivateArrow) == 0x000001, "Wrong size on BP_OverheadOpportunityWidgetComponent_C_Get_ActivateArrow");
static_assert(offsetof(BP_OverheadOpportunityWidgetComponent_C_Get_ActivateArrow, bpp__Out__pf) == 0x000000, "Member 'BP_OverheadOpportunityWidgetComponent_C_Get_ActivateArrow::bpp__Out__pf' has a wrong offset!");

// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.Get_ActivateIcon
// 0x0001 (0x0001 - 0x0000)
struct BP_OverheadOpportunityWidgetComponent_C_Get_ActivateIcon final
{
public:
	bool                                          bpp__Out__pf;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_OverheadOpportunityWidgetComponent_C_Get_ActivateIcon) == 0x000001, "Wrong alignment on BP_OverheadOpportunityWidgetComponent_C_Get_ActivateIcon");
static_assert(sizeof(BP_OverheadOpportunityWidgetComponent_C_Get_ActivateIcon) == 0x000001, "Wrong size on BP_OverheadOpportunityWidgetComponent_C_Get_ActivateIcon");
static_assert(offsetof(BP_OverheadOpportunityWidgetComponent_C_Get_ActivateIcon, bpp__Out__pf) == 0x000000, "Member 'BP_OverheadOpportunityWidgetComponent_C_Get_ActivateIcon::bpp__Out__pf' has a wrong offset!");

// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.Get_ActivateRadarMarker
// 0x0001 (0x0001 - 0x0000)
struct BP_OverheadOpportunityWidgetComponent_C_Get_ActivateRadarMarker final
{
public:
	bool                                          bpp__Out__pf;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_OverheadOpportunityWidgetComponent_C_Get_ActivateRadarMarker) == 0x000001, "Wrong alignment on BP_OverheadOpportunityWidgetComponent_C_Get_ActivateRadarMarker");
static_assert(sizeof(BP_OverheadOpportunityWidgetComponent_C_Get_ActivateRadarMarker) == 0x000001, "Wrong size on BP_OverheadOpportunityWidgetComponent_C_Get_ActivateRadarMarker");
static_assert(offsetof(BP_OverheadOpportunityWidgetComponent_C_Get_ActivateRadarMarker, bpp__Out__pf) == 0x000000, "Member 'BP_OverheadOpportunityWidgetComponent_C_Get_ActivateRadarMarker::bpp__Out__pf' has a wrong offset!");

// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.Get_ActivateText
// 0x0001 (0x0001 - 0x0000)
struct BP_OverheadOpportunityWidgetComponent_C_Get_ActivateText final
{
public:
	bool                                          bpp__Out__pf;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_OverheadOpportunityWidgetComponent_C_Get_ActivateText) == 0x000001, "Wrong alignment on BP_OverheadOpportunityWidgetComponent_C_Get_ActivateText");
static_assert(sizeof(BP_OverheadOpportunityWidgetComponent_C_Get_ActivateText) == 0x000001, "Wrong size on BP_OverheadOpportunityWidgetComponent_C_Get_ActivateText");
static_assert(offsetof(BP_OverheadOpportunityWidgetComponent_C_Get_ActivateText, bpp__Out__pf) == 0x000000, "Member 'BP_OverheadOpportunityWidgetComponent_C_Get_ActivateText::bpp__Out__pf' has a wrong offset!");

// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.Get_DisplayRange
// 0x0004 (0x0004 - 0x0000)
struct BP_OverheadOpportunityWidgetComponent_C_Get_DisplayRange final
{
public:
	float                                         bpp__Out__pf;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_OverheadOpportunityWidgetComponent_C_Get_DisplayRange) == 0x000004, "Wrong alignment on BP_OverheadOpportunityWidgetComponent_C_Get_DisplayRange");
static_assert(sizeof(BP_OverheadOpportunityWidgetComponent_C_Get_DisplayRange) == 0x000004, "Wrong size on BP_OverheadOpportunityWidgetComponent_C_Get_DisplayRange");
static_assert(offsetof(BP_OverheadOpportunityWidgetComponent_C_Get_DisplayRange, bpp__Out__pf) == 0x000000, "Member 'BP_OverheadOpportunityWidgetComponent_C_Get_DisplayRange::bpp__Out__pf' has a wrong offset!");

// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.Get_Enabled
// 0x0001 (0x0001 - 0x0000)
struct BP_OverheadOpportunityWidgetComponent_C_Get_Enabled final
{
public:
	bool                                          bpp__Out__pf;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_OverheadOpportunityWidgetComponent_C_Get_Enabled) == 0x000001, "Wrong alignment on BP_OverheadOpportunityWidgetComponent_C_Get_Enabled");
static_assert(sizeof(BP_OverheadOpportunityWidgetComponent_C_Get_Enabled) == 0x000001, "Wrong size on BP_OverheadOpportunityWidgetComponent_C_Get_Enabled");
static_assert(offsetof(BP_OverheadOpportunityWidgetComponent_C_Get_Enabled, bpp__Out__pf) == 0x000000, "Member 'BP_OverheadOpportunityWidgetComponent_C_Get_Enabled::bpp__Out__pf' has a wrong offset!");

// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.Get_InteractDecoratorString
// 0x0010 (0x0010 - 0x0000)
struct BP_OverheadOpportunityWidgetComponent_C_Get_InteractDecoratorString final
{
public:
	class FString                                 bpp__Out__pf;                                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_OverheadOpportunityWidgetComponent_C_Get_InteractDecoratorString) == 0x000008, "Wrong alignment on BP_OverheadOpportunityWidgetComponent_C_Get_InteractDecoratorString");
static_assert(sizeof(BP_OverheadOpportunityWidgetComponent_C_Get_InteractDecoratorString) == 0x000010, "Wrong size on BP_OverheadOpportunityWidgetComponent_C_Get_InteractDecoratorString");
static_assert(offsetof(BP_OverheadOpportunityWidgetComponent_C_Get_InteractDecoratorString, bpp__Out__pf) == 0x000000, "Member 'BP_OverheadOpportunityWidgetComponent_C_Get_InteractDecoratorString::bpp__Out__pf' has a wrong offset!");

// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.Get_InteractDisplayText
// 0x0018 (0x0018 - 0x0000)
struct BP_OverheadOpportunityWidgetComponent_C_Get_InteractDisplayText final
{
public:
	class FText                                   bpp__Out__pf;                                      // 0x0000(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_OverheadOpportunityWidgetComponent_C_Get_InteractDisplayText) == 0x000008, "Wrong alignment on BP_OverheadOpportunityWidgetComponent_C_Get_InteractDisplayText");
static_assert(sizeof(BP_OverheadOpportunityWidgetComponent_C_Get_InteractDisplayText) == 0x000018, "Wrong size on BP_OverheadOpportunityWidgetComponent_C_Get_InteractDisplayText");
static_assert(offsetof(BP_OverheadOpportunityWidgetComponent_C_Get_InteractDisplayText, bpp__Out__pf) == 0x000000, "Member 'BP_OverheadOpportunityWidgetComponent_C_Get_InteractDisplayText::bpp__Out__pf' has a wrong offset!");

// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.Get_IsDeathPersistant
// 0x0001 (0x0001 - 0x0000)
struct BP_OverheadOpportunityWidgetComponent_C_Get_IsDeathPersistant final
{
public:
	bool                                          bpp__Out__pf;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_OverheadOpportunityWidgetComponent_C_Get_IsDeathPersistant) == 0x000001, "Wrong alignment on BP_OverheadOpportunityWidgetComponent_C_Get_IsDeathPersistant");
static_assert(sizeof(BP_OverheadOpportunityWidgetComponent_C_Get_IsDeathPersistant) == 0x000001, "Wrong size on BP_OverheadOpportunityWidgetComponent_C_Get_IsDeathPersistant");
static_assert(offsetof(BP_OverheadOpportunityWidgetComponent_C_Get_IsDeathPersistant, bpp__Out__pf) == 0x000000, "Member 'BP_OverheadOpportunityWidgetComponent_C_Get_IsDeathPersistant::bpp__Out__pf' has a wrong offset!");

// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.Get_IsEnemyMarker
// 0x0001 (0x0001 - 0x0000)
struct BP_OverheadOpportunityWidgetComponent_C_Get_IsEnemyMarker final
{
public:
	bool                                          bpp__Out__pf;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_OverheadOpportunityWidgetComponent_C_Get_IsEnemyMarker) == 0x000001, "Wrong alignment on BP_OverheadOpportunityWidgetComponent_C_Get_IsEnemyMarker");
static_assert(sizeof(BP_OverheadOpportunityWidgetComponent_C_Get_IsEnemyMarker) == 0x000001, "Wrong size on BP_OverheadOpportunityWidgetComponent_C_Get_IsEnemyMarker");
static_assert(offsetof(BP_OverheadOpportunityWidgetComponent_C_Get_IsEnemyMarker, bpp__Out__pf) == 0x000000, "Member 'BP_OverheadOpportunityWidgetComponent_C_Get_IsEnemyMarker::bpp__Out__pf' has a wrong offset!");

// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.Get_IsInSaucer
// 0x0001 (0x0001 - 0x0000)
struct BP_OverheadOpportunityWidgetComponent_C_Get_IsInSaucer final
{
public:
	bool                                          bpp__IsInSaucer__pf;                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_OverheadOpportunityWidgetComponent_C_Get_IsInSaucer) == 0x000001, "Wrong alignment on BP_OverheadOpportunityWidgetComponent_C_Get_IsInSaucer");
static_assert(sizeof(BP_OverheadOpportunityWidgetComponent_C_Get_IsInSaucer) == 0x000001, "Wrong size on BP_OverheadOpportunityWidgetComponent_C_Get_IsInSaucer");
static_assert(offsetof(BP_OverheadOpportunityWidgetComponent_C_Get_IsInSaucer, bpp__IsInSaucer__pf) == 0x000000, "Member 'BP_OverheadOpportunityWidgetComponent_C_Get_IsInSaucer::bpp__IsInSaucer__pf' has a wrong offset!");

// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.Get_IsPKPersistant
// 0x0001 (0x0001 - 0x0000)
struct BP_OverheadOpportunityWidgetComponent_C_Get_IsPKPersistant final
{
public:
	bool                                          bpp__Out__pf;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_OverheadOpportunityWidgetComponent_C_Get_IsPKPersistant) == 0x000001, "Wrong alignment on BP_OverheadOpportunityWidgetComponent_C_Get_IsPKPersistant");
static_assert(sizeof(BP_OverheadOpportunityWidgetComponent_C_Get_IsPKPersistant) == 0x000001, "Wrong size on BP_OverheadOpportunityWidgetComponent_C_Get_IsPKPersistant");
static_assert(offsetof(BP_OverheadOpportunityWidgetComponent_C_Get_IsPKPersistant, bpp__Out__pf) == 0x000000, "Member 'BP_OverheadOpportunityWidgetComponent_C_Get_IsPKPersistant::bpp__Out__pf' has a wrong offset!");

// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.Get_IsPlayer
// 0x0001 (0x0001 - 0x0000)
struct BP_OverheadOpportunityWidgetComponent_C_Get_IsPlayer final
{
public:
	bool                                          bpp__Out__pf;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_OverheadOpportunityWidgetComponent_C_Get_IsPlayer) == 0x000001, "Wrong alignment on BP_OverheadOpportunityWidgetComponent_C_Get_IsPlayer");
static_assert(sizeof(BP_OverheadOpportunityWidgetComponent_C_Get_IsPlayer) == 0x000001, "Wrong size on BP_OverheadOpportunityWidgetComponent_C_Get_IsPlayer");
static_assert(offsetof(BP_OverheadOpportunityWidgetComponent_C_Get_IsPlayer, bpp__Out__pf) == 0x000000, "Member 'BP_OverheadOpportunityWidgetComponent_C_Get_IsPlayer::bpp__Out__pf' has a wrong offset!");

// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.Get_LinkToMentallyInteractable
// 0x0001 (0x0001 - 0x0000)
struct BP_OverheadOpportunityWidgetComponent_C_Get_LinkToMentallyInteractable final
{
public:
	bool                                          bpp__LinkToMentallyInteractable__pf;               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_OverheadOpportunityWidgetComponent_C_Get_LinkToMentallyInteractable) == 0x000001, "Wrong alignment on BP_OverheadOpportunityWidgetComponent_C_Get_LinkToMentallyInteractable");
static_assert(sizeof(BP_OverheadOpportunityWidgetComponent_C_Get_LinkToMentallyInteractable) == 0x000001, "Wrong size on BP_OverheadOpportunityWidgetComponent_C_Get_LinkToMentallyInteractable");
static_assert(offsetof(BP_OverheadOpportunityWidgetComponent_C_Get_LinkToMentallyInteractable, bpp__LinkToMentallyInteractable__pf) == 0x000000, "Member 'BP_OverheadOpportunityWidgetComponent_C_Get_LinkToMentallyInteractable::bpp__LinkToMentallyInteractable__pf' has a wrong offset!");

// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.Get_OverrideBrush
// 0x0088 (0x0088 - 0x0000)
struct BP_OverheadOpportunityWidgetComponent_C_Get_OverrideBrush final
{
public:
	struct FSlateBrush                            bpp__Out__pf;                                      // 0x0000(0x0088)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_OverheadOpportunityWidgetComponent_C_Get_OverrideBrush) == 0x000008, "Wrong alignment on BP_OverheadOpportunityWidgetComponent_C_Get_OverrideBrush");
static_assert(sizeof(BP_OverheadOpportunityWidgetComponent_C_Get_OverrideBrush) == 0x000088, "Wrong size on BP_OverheadOpportunityWidgetComponent_C_Get_OverrideBrush");
static_assert(offsetof(BP_OverheadOpportunityWidgetComponent_C_Get_OverrideBrush, bpp__Out__pf) == 0x000000, "Member 'BP_OverheadOpportunityWidgetComponent_C_Get_OverrideBrush::bpp__Out__pf' has a wrong offset!");

// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.HasValidTarget
// 0x0001 (0x0001 - 0x0000)
struct BP_OverheadOpportunityWidgetComponent_C_HasValidTarget final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_OverheadOpportunityWidgetComponent_C_HasValidTarget) == 0x000001, "Wrong alignment on BP_OverheadOpportunityWidgetComponent_C_HasValidTarget");
static_assert(sizeof(BP_OverheadOpportunityWidgetComponent_C_HasValidTarget) == 0x000001, "Wrong size on BP_OverheadOpportunityWidgetComponent_C_HasValidTarget");
static_assert(offsetof(BP_OverheadOpportunityWidgetComponent_C_HasValidTarget, ReturnValue) == 0x000000, "Member 'BP_OverheadOpportunityWidgetComponent_C_HasValidTarget::ReturnValue' has a wrong offset!");

// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.IsAbilityTarget
// 0x0001 (0x0001 - 0x0000)
struct BP_OverheadOpportunityWidgetComponent_C_IsAbilityTarget final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_OverheadOpportunityWidgetComponent_C_IsAbilityTarget) == 0x000001, "Wrong alignment on BP_OverheadOpportunityWidgetComponent_C_IsAbilityTarget");
static_assert(sizeof(BP_OverheadOpportunityWidgetComponent_C_IsAbilityTarget) == 0x000001, "Wrong size on BP_OverheadOpportunityWidgetComponent_C_IsAbilityTarget");
static_assert(offsetof(BP_OverheadOpportunityWidgetComponent_C_IsAbilityTarget, ReturnValue) == 0x000000, "Member 'BP_OverheadOpportunityWidgetComponent_C_IsAbilityTarget::ReturnValue' has a wrong offset!");

// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.IsDead
// 0x0001 (0x0001 - 0x0000)
struct BP_OverheadOpportunityWidgetComponent_C_IsDead final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_OverheadOpportunityWidgetComponent_C_IsDead) == 0x000001, "Wrong alignment on BP_OverheadOpportunityWidgetComponent_C_IsDead");
static_assert(sizeof(BP_OverheadOpportunityWidgetComponent_C_IsDead) == 0x000001, "Wrong size on BP_OverheadOpportunityWidgetComponent_C_IsDead");
static_assert(offsetof(BP_OverheadOpportunityWidgetComponent_C_IsDead, ReturnValue) == 0x000000, "Member 'BP_OverheadOpportunityWidgetComponent_C_IsDead::ReturnValue' has a wrong offset!");

// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.IsInRange
// 0x0001 (0x0001 - 0x0000)
struct BP_OverheadOpportunityWidgetComponent_C_IsInRange final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_OverheadOpportunityWidgetComponent_C_IsInRange) == 0x000001, "Wrong alignment on BP_OverheadOpportunityWidgetComponent_C_IsInRange");
static_assert(sizeof(BP_OverheadOpportunityWidgetComponent_C_IsInRange) == 0x000001, "Wrong size on BP_OverheadOpportunityWidgetComponent_C_IsInRange");
static_assert(offsetof(BP_OverheadOpportunityWidgetComponent_C_IsInRange, ReturnValue) == 0x000000, "Member 'BP_OverheadOpportunityWidgetComponent_C_IsInRange::ReturnValue' has a wrong offset!");

// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.IsOffScreen
// 0x0001 (0x0001 - 0x0000)
struct BP_OverheadOpportunityWidgetComponent_C_IsOffScreen final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_OverheadOpportunityWidgetComponent_C_IsOffScreen) == 0x000001, "Wrong alignment on BP_OverheadOpportunityWidgetComponent_C_IsOffScreen");
static_assert(sizeof(BP_OverheadOpportunityWidgetComponent_C_IsOffScreen) == 0x000001, "Wrong size on BP_OverheadOpportunityWidgetComponent_C_IsOffScreen");
static_assert(offsetof(BP_OverheadOpportunityWidgetComponent_C_IsOffScreen, ReturnValue) == 0x000000, "Member 'BP_OverheadOpportunityWidgetComponent_C_IsOffScreen::ReturnValue' has a wrong offset!");

// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.IsPKed
// 0x0001 (0x0001 - 0x0000)
struct BP_OverheadOpportunityWidgetComponent_C_IsPKed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_OverheadOpportunityWidgetComponent_C_IsPKed) == 0x000001, "Wrong alignment on BP_OverheadOpportunityWidgetComponent_C_IsPKed");
static_assert(sizeof(BP_OverheadOpportunityWidgetComponent_C_IsPKed) == 0x000001, "Wrong size on BP_OverheadOpportunityWidgetComponent_C_IsPKed");
static_assert(offsetof(BP_OverheadOpportunityWidgetComponent_C_IsPKed, ReturnValue) == 0x000000, "Member 'BP_OverheadOpportunityWidgetComponent_C_IsPKed::ReturnValue' has a wrong offset!");

// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.IsWeaponTarget
// 0x0001 (0x0001 - 0x0000)
struct BP_OverheadOpportunityWidgetComponent_C_IsWeaponTarget final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_OverheadOpportunityWidgetComponent_C_IsWeaponTarget) == 0x000001, "Wrong alignment on BP_OverheadOpportunityWidgetComponent_C_IsWeaponTarget");
static_assert(sizeof(BP_OverheadOpportunityWidgetComponent_C_IsWeaponTarget) == 0x000001, "Wrong size on BP_OverheadOpportunityWidgetComponent_C_IsWeaponTarget");
static_assert(offsetof(BP_OverheadOpportunityWidgetComponent_C_IsWeaponTarget, ReturnValue) == 0x000000, "Member 'BP_OverheadOpportunityWidgetComponent_C_IsWeaponTarget::ReturnValue' has a wrong offset!");

// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.ShouldWidgetBeVisible?
// 0x0001 (0x0001 - 0x0000)
struct BP_OverheadOpportunityWidgetComponent_C_ShouldWidgetBeVisible_ final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_OverheadOpportunityWidgetComponent_C_ShouldWidgetBeVisible_) == 0x000001, "Wrong alignment on BP_OverheadOpportunityWidgetComponent_C_ShouldWidgetBeVisible_");
static_assert(sizeof(BP_OverheadOpportunityWidgetComponent_C_ShouldWidgetBeVisible_) == 0x000001, "Wrong size on BP_OverheadOpportunityWidgetComponent_C_ShouldWidgetBeVisible_");
static_assert(offsetof(BP_OverheadOpportunityWidgetComponent_C_ShouldWidgetBeVisible_, ReturnValue) == 0x000000, "Member 'BP_OverheadOpportunityWidgetComponent_C_ShouldWidgetBeVisible_::ReturnValue' has a wrong offset!");

}

