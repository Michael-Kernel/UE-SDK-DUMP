#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MentalAbility_ExtractBrain

#include "Basic.hpp"

#include "BP_MentalAbility_ExtractBrain_classes.hpp"
#include "BP_MentalAbility_ExtractBrain_parameters.hpp"


namespace SDK
{

// Function BP_MentalAbility_ExtractBrain.BP_MentalAbility_ExtractBrain_C.Parabola
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          StartLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          EndLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Height                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Percent                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CurrentPosition                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MentalAbility_ExtractBrain_C::Parabola(const struct FVector& StartLocation, const struct FVector& EndLocation, float Height, float Percent, struct FVector* CurrentPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MentalAbility_ExtractBrain_C", "Parabola");

	Params::BP_MentalAbility_ExtractBrain_C_Parabola Parms{};

	Parms.StartLocation = std::move(StartLocation);
	Parms.EndLocation = std::move(EndLocation);
	Parms.Height = Height;
	Parms.Percent = Percent;

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentPosition != nullptr)
		*CurrentPosition = std::move(Parms.CurrentPosition);
}


// Function BP_MentalAbility_ExtractBrain.BP_MentalAbility_ExtractBrain_C.UpdateAbilityDressing
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   _fDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MentalAbility_ExtractBrain_C::UpdateAbilityDressing(float _fDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MentalAbility_ExtractBrain_C", "UpdateAbilityDressing");

	Params::BP_MentalAbility_ExtractBrain_C_UpdateAbilityDressing Parms{};

	Parms._fDeltaTime = _fDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MentalAbility_ExtractBrain.BP_MentalAbility_ExtractBrain_C.StoppedMentalLink
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _wasSuccessfull                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MentalAbility_ExtractBrain_C::StoppedMentalLink(bool _wasSuccessfull)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MentalAbility_ExtractBrain_C", "StoppedMentalLink");

	Params::BP_MentalAbility_ExtractBrain_C_StoppedMentalLink Parms{};

	Parms._wasSuccessfull = _wasSuccessfull;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MentalAbility_ExtractBrain.BP_MentalAbility_ExtractBrain_C.StartedMentalLink
// (Event, Protected, BlueprintEvent)

void UBP_MentalAbility_ExtractBrain_C::StartedMentalLink()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MentalAbility_ExtractBrain_C", "StartedMentalLink");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MentalAbility_ExtractBrain.BP_MentalAbility_ExtractBrain_C.OnSmashedDuringEffect
// (Event, Protected, BlueprintEvent)

void UBP_MentalAbility_ExtractBrain_C::OnSmashedDuringEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MentalAbility_ExtractBrain_C", "OnSmashedDuringEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MentalAbility_ExtractBrain.BP_MentalAbility_ExtractBrain_C.OnAbilityEnd
// (Event, Protected, BlueprintEvent)

void UBP_MentalAbility_ExtractBrain_C::OnAbilityEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MentalAbility_ExtractBrain_C", "OnAbilityEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MentalAbility_ExtractBrain.BP_MentalAbility_ExtractBrain_C.OnTick
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   _fDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MentalAbility_ExtractBrain_C::OnTick(float _fDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MentalAbility_ExtractBrain_C", "OnTick");

	Params::BP_MentalAbility_ExtractBrain_C_OnTick Parms{};

	Parms._fDeltaTime = _fDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MentalAbility_ExtractBrain.BP_MentalAbility_ExtractBrain_C.OnBrainWasExtracted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           _pTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           PBrain                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MentalAbility_ExtractBrain_C::OnBrainWasExtracted(class AActor* _pTarget, class AActor* PBrain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MentalAbility_ExtractBrain_C", "OnBrainWasExtracted");

	Params::BP_MentalAbility_ExtractBrain_C_OnBrainWasExtracted Parms{};

	Parms._pTarget = _pTarget;
	Parms.PBrain = PBrain;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MentalAbility_ExtractBrain.BP_MentalAbility_ExtractBrain_C.OnSmashedDuringLink
// (Event, Protected, BlueprintEvent)

void UBP_MentalAbility_ExtractBrain_C::OnSmashedDuringLink()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MentalAbility_ExtractBrain_C", "OnSmashedDuringLink");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MentalAbility_ExtractBrain.BP_MentalAbility_ExtractBrain_C.DestroySplatterVFX
// (BlueprintCallable, BlueprintEvent)

void UBP_MentalAbility_ExtractBrain_C::DestroySplatterVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MentalAbility_ExtractBrain_C", "DestroySplatterVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MentalAbility_ExtractBrain.BP_MentalAbility_ExtractBrain_C.ExecuteUbergraph_BP_MentalAbility_ExtractBrain
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MentalAbility_ExtractBrain_C::ExecuteUbergraph_BP_MentalAbility_ExtractBrain(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MentalAbility_ExtractBrain_C", "ExecuteUbergraph_BP_MentalAbility_ExtractBrain");

	Params::BP_MentalAbility_ExtractBrain_C_ExecuteUbergraph_BP_MentalAbility_ExtractBrain Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

