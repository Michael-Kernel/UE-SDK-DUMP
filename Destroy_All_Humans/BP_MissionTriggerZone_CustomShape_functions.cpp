#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MissionTriggerZone_CustomShape

#include "Basic.hpp"

#include "BP_MissionTriggerZone_CustomShape_classes.hpp"
#include "BP_MissionTriggerZone_CustomShape_parameters.hpp"


namespace SDK
{

// Function BP_MissionTriggerZone_CustomShape.BP_MissionTriggerZone_CustomShape_C.ExecuteUbergraph_BP_MissionTriggerZone_CustomShape
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MissionTriggerZone_CustomShape_C::ExecuteUbergraph_BP_MissionTriggerZone_CustomShape(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MissionTriggerZone_CustomShape_C", "ExecuteUbergraph_BP_MissionTriggerZone_CustomShape");

	Params::BP_MissionTriggerZone_CustomShape_C_ExecuteUbergraph_BP_MissionTriggerZone_CustomShape Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MissionTriggerZone_CustomShape.BP_MissionTriggerZone_CustomShape_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MissionTriggerZone_CustomShape_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MissionTriggerZone_CustomShape_C", "ReceiveTick");

	Params::BP_MissionTriggerZone_CustomShape_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MissionTriggerZone_CustomShape.BP_MissionTriggerZone_CustomShape_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_MissionTriggerZone_CustomShape_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MissionTriggerZone_CustomShape_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MissionTriggerZone_CustomShape.BP_MissionTriggerZone_CustomShape_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MissionTriggerZone_CustomShape_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MissionTriggerZone_CustomShape_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MissionTriggerZone_CustomShape.BP_MissionTriggerZone_CustomShape_C.CalculateVertices
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FSplinePoint>             ReferenceArray                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<struct FSplinePoint>             PointArray1                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                                    UseIndexPlus_Slot1                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<struct FSplinePoint>             PointArray2                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                                    UseIndexPlus_Slot2                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<struct FSplinePoint>             PointArray3                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                                    UseIndexPlus_Slot3                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MissionTriggerZone_CustomShape_C::CalculateVertices(TArray<struct FSplinePoint>& ReferenceArray, TArray<struct FSplinePoint>& PointArray1, bool UseIndexPlus_Slot1, TArray<struct FSplinePoint>& PointArray2, bool UseIndexPlus_Slot2, TArray<struct FSplinePoint>& PointArray3, bool UseIndexPlus_Slot3)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MissionTriggerZone_CustomShape_C", "CalculateVertices");

	Params::BP_MissionTriggerZone_CustomShape_C_CalculateVertices Parms{};

	Parms.ReferenceArray = std::move(ReferenceArray);
	Parms.PointArray1 = std::move(PointArray1);
	Parms.UseIndexPlus_Slot1 = UseIndexPlus_Slot1;
	Parms.PointArray2 = std::move(PointArray2);
	Parms.UseIndexPlus_Slot2 = UseIndexPlus_Slot2;
	Parms.PointArray3 = std::move(PointArray3);
	Parms.UseIndexPlus_Slot3 = UseIndexPlus_Slot3;

	UObject::ProcessEvent(Func, &Parms);

	ReferenceArray = std::move(Parms.ReferenceArray);
	PointArray1 = std::move(Parms.PointArray1);
	PointArray2 = std::move(Parms.PointArray2);
	PointArray3 = std::move(Parms.PointArray3);
}


// Function BP_MissionTriggerZone_CustomShape.BP_MissionTriggerZone_CustomShape_C.CalculateOuterBounds
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MissionTriggerZone_CustomShape_C::CalculateOuterBounds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MissionTriggerZone_CustomShape_C", "CalculateOuterBounds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MissionTriggerZone_CustomShape.BP_MissionTriggerZone_CustomShape_C.DrawDebugLines
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FSplinePoint>             SplinePointsInnerBoundsBottom                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<struct FSplinePoint>             SplinePointsInnerBoundsTop                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<struct FSplinePoint>             SplinePointsOuterBoundsBottom                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<struct FSplinePoint>             SplinePointsOuterBoundsTop                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void ABP_MissionTriggerZone_CustomShape_C::DrawDebugLines(TArray<struct FSplinePoint>& SplinePointsInnerBoundsBottom, TArray<struct FSplinePoint>& SplinePointsInnerBoundsTop, TArray<struct FSplinePoint>& SplinePointsOuterBoundsBottom, TArray<struct FSplinePoint>& SplinePointsOuterBoundsTop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MissionTriggerZone_CustomShape_C", "DrawDebugLines");

	Params::BP_MissionTriggerZone_CustomShape_C_DrawDebugLines Parms{};

	Parms.SplinePointsInnerBoundsBottom = std::move(SplinePointsInnerBoundsBottom);
	Parms.SplinePointsInnerBoundsTop = std::move(SplinePointsInnerBoundsTop);
	Parms.SplinePointsOuterBoundsBottom = std::move(SplinePointsOuterBoundsBottom);
	Parms.SplinePointsOuterBoundsTop = std::move(SplinePointsOuterBoundsTop);

	UObject::ProcessEvent(Func, &Parms);

	SplinePointsInnerBoundsBottom = std::move(Parms.SplinePointsInnerBoundsBottom);
	SplinePointsInnerBoundsTop = std::move(Parms.SplinePointsInnerBoundsTop);
	SplinePointsOuterBoundsBottom = std::move(Parms.SplinePointsOuterBoundsBottom);
	SplinePointsOuterBoundsTop = std::move(Parms.SplinePointsOuterBoundsTop);
}


// Function BP_MissionTriggerZone_CustomShape.BP_MissionTriggerZone_CustomShape_C.DrawLoops
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FSplinePoint>             SplinePoints                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void ABP_MissionTriggerZone_CustomShape_C::DrawLoops(TArray<struct FSplinePoint>& SplinePoints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MissionTriggerZone_CustomShape_C", "DrawLoops");

	Params::BP_MissionTriggerZone_CustomShape_C_DrawLoops Parms{};

	Parms.SplinePoints = std::move(SplinePoints);

	UObject::ProcessEvent(Func, &Parms);

	SplinePoints = std::move(Parms.SplinePoints);
}


// Function BP_MissionTriggerZone_CustomShape.BP_MissionTriggerZone_CustomShape_C.DrawWalls
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FSplinePoint>             SplinePointsBottom                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<struct FSplinePoint>             SplinePointsTop                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void ABP_MissionTriggerZone_CustomShape_C::DrawWalls(TArray<struct FSplinePoint>& SplinePointsBottom, TArray<struct FSplinePoint>& SplinePointsTop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MissionTriggerZone_CustomShape_C", "DrawWalls");

	Params::BP_MissionTriggerZone_CustomShape_C_DrawWalls Parms{};

	Parms.SplinePointsBottom = std::move(SplinePointsBottom);
	Parms.SplinePointsTop = std::move(SplinePointsTop);

	UObject::ProcessEvent(Func, &Parms);

	SplinePointsBottom = std::move(Parms.SplinePointsBottom);
	SplinePointsTop = std::move(Parms.SplinePointsTop);
}


// Function BP_MissionTriggerZone_CustomShape.BP_MissionTriggerZone_CustomShape_C.ConvertSplinePointToVector
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FSplinePoint>             InArray                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<struct FVector>                  OutVector                                              (Parm, OutParm, ZeroConstructor)

void ABP_MissionTriggerZone_CustomShape_C::ConvertSplinePointToVector(TArray<struct FSplinePoint>& InArray, TArray<struct FVector>* OutVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MissionTriggerZone_CustomShape_C", "ConvertSplinePointToVector");

	Params::BP_MissionTriggerZone_CustomShape_C_ConvertSplinePointToVector Parms{};

	Parms.InArray = std::move(InArray);

	UObject::ProcessEvent(Func, &Parms);

	InArray = std::move(Parms.InArray);

	if (OutVector != nullptr)
		*OutVector = std::move(Parms.OutVector);
}


// Function BP_MissionTriggerZone_CustomShape.BP_MissionTriggerZone_CustomShape_C.ReverseWinding
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<int32>                           InTriangles                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<int32>                           OutTriangles                                           (Parm, OutParm, ZeroConstructor)

void ABP_MissionTriggerZone_CustomShape_C::ReverseWinding(TArray<int32>& InTriangles, TArray<int32>* OutTriangles)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MissionTriggerZone_CustomShape_C", "ReverseWinding");

	Params::BP_MissionTriggerZone_CustomShape_C_ReverseWinding Parms{};

	Parms.InTriangles = std::move(InTriangles);

	UObject::ProcessEvent(Func, &Parms);

	InTriangles = std::move(Parms.InTriangles);

	if (OutTriangles != nullptr)
		*OutTriangles = std::move(Parms.OutTriangles);
}


// Function BP_MissionTriggerZone_CustomShape.BP_MissionTriggerZone_CustomShape_C.CalculateCentroids
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FSplinePoint>             SplinePointArray                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FVector                          Centroid                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MissionTriggerZone_CustomShape_C::CalculateCentroids(TArray<struct FSplinePoint>& SplinePointArray, struct FVector* Centroid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MissionTriggerZone_CustomShape_C", "CalculateCentroids");

	Params::BP_MissionTriggerZone_CustomShape_C_CalculateCentroids Parms{};

	Parms.SplinePointArray = std::move(SplinePointArray);

	UObject::ProcessEvent(Func, &Parms);

	SplinePointArray = std::move(Parms.SplinePointArray);

	if (Centroid != nullptr)
		*Centroid = std::move(Parms.Centroid);
}

}

