#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPW_HolobobCorrupted

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BPW_HolobobCorrupted.BPW_HolobobCorrupted_C
// 0x0020 (0x0260 - 0x0240)
class UBPW_HolobobCorrupted_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0240(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class URichTextBlock*                         RTB_Type;                                          // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UBPW_ChallengePanel_Star_C*>     Stars;                                             // 0x0250(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void ExecuteUbergraph_BPW_HolobobCorrupted(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPW_HolobobCorrupted_C">();
	}
	static class UBPW_HolobobCorrupted_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPW_HolobobCorrupted_C>();
	}
};
static_assert(alignof(UBPW_HolobobCorrupted_C) == 0x000008, "Wrong alignment on UBPW_HolobobCorrupted_C");
static_assert(sizeof(UBPW_HolobobCorrupted_C) == 0x000260, "Wrong size on UBPW_HolobobCorrupted_C");
static_assert(offsetof(UBPW_HolobobCorrupted_C, UberGraphFrame) == 0x000240, "Member 'UBPW_HolobobCorrupted_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPW_HolobobCorrupted_C, RTB_Type) == 0x000248, "Member 'UBPW_HolobobCorrupted_C::RTB_Type' has a wrong offset!");
static_assert(offsetof(UBPW_HolobobCorrupted_C, Stars) == 0x000250, "Member 'UBPW_HolobobCorrupted_C::Stars' has a wrong offset!");

}

