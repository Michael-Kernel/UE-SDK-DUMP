#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_bulletImpact

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BFGCore_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_bulletImpact.BP_Bulletimpact_C
// 0x00B8 (0x0500 - 0x0448)
class ABP_Bulletimpact_C final : public ABFGEffectActor_ProjectileImpact
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0448(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceType;                                       // 0x0458(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ImpactTransform;                                   // 0x0460(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                ImpactLocation;                                    // 0x0490(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ProjectileDirection;                               // 0x049C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DecalLifeTime;                                     // 0x04A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeOutDuration;                                   // 0x04AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal_Component;                                   // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Decal_Dyn_Mat;                                     // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               DecalRotation;                                     // 0x04C0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                ImpactSize;                                        // 0x04CC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Impact_Decal;                                      // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Impact_PFX;                                        // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             DataTable;                                         // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisplayDebug;                                     // 0x04F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F1[0x7];                                      // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Impact_SoundBase;                                  // 0x04F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Bulletimpact(int32 EntryPoint);
	void ReceiveBeginPlay();
	void OnTriggerEffect();
	void Decal(const struct FVector& Decal_Size, const struct FVector& Spawn_Location, class UMaterialInterface* Decal_Material);
	void VFX_Impact(class UParticleSystem* PFX_Template, class UMaterialInterface* DecalMaterial, float Scale_PFX);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Bulletimpact_C">();
	}
	static class ABP_Bulletimpact_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Bulletimpact_C>();
	}
};
static_assert(alignof(ABP_Bulletimpact_C) == 0x000010, "Wrong alignment on ABP_Bulletimpact_C");
static_assert(sizeof(ABP_Bulletimpact_C) == 0x000500, "Wrong size on ABP_Bulletimpact_C");
static_assert(offsetof(ABP_Bulletimpact_C, UberGraphFrame) == 0x000448, "Member 'ABP_Bulletimpact_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Bulletimpact_C, DefaultSceneRoot) == 0x000450, "Member 'ABP_Bulletimpact_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Bulletimpact_C, SurfaceType) == 0x000458, "Member 'ABP_Bulletimpact_C::SurfaceType' has a wrong offset!");
static_assert(offsetof(ABP_Bulletimpact_C, ImpactTransform) == 0x000460, "Member 'ABP_Bulletimpact_C::ImpactTransform' has a wrong offset!");
static_assert(offsetof(ABP_Bulletimpact_C, ImpactLocation) == 0x000490, "Member 'ABP_Bulletimpact_C::ImpactLocation' has a wrong offset!");
static_assert(offsetof(ABP_Bulletimpact_C, ProjectileDirection) == 0x00049C, "Member 'ABP_Bulletimpact_C::ProjectileDirection' has a wrong offset!");
static_assert(offsetof(ABP_Bulletimpact_C, DecalLifeTime) == 0x0004A8, "Member 'ABP_Bulletimpact_C::DecalLifeTime' has a wrong offset!");
static_assert(offsetof(ABP_Bulletimpact_C, FadeOutDuration) == 0x0004AC, "Member 'ABP_Bulletimpact_C::FadeOutDuration' has a wrong offset!");
static_assert(offsetof(ABP_Bulletimpact_C, Decal_Component) == 0x0004B0, "Member 'ABP_Bulletimpact_C::Decal_Component' has a wrong offset!");
static_assert(offsetof(ABP_Bulletimpact_C, Decal_Dyn_Mat) == 0x0004B8, "Member 'ABP_Bulletimpact_C::Decal_Dyn_Mat' has a wrong offset!");
static_assert(offsetof(ABP_Bulletimpact_C, DecalRotation) == 0x0004C0, "Member 'ABP_Bulletimpact_C::DecalRotation' has a wrong offset!");
static_assert(offsetof(ABP_Bulletimpact_C, ImpactSize) == 0x0004CC, "Member 'ABP_Bulletimpact_C::ImpactSize' has a wrong offset!");
static_assert(offsetof(ABP_Bulletimpact_C, Impact_Decal) == 0x0004D8, "Member 'ABP_Bulletimpact_C::Impact_Decal' has a wrong offset!");
static_assert(offsetof(ABP_Bulletimpact_C, Impact_PFX) == 0x0004E0, "Member 'ABP_Bulletimpact_C::Impact_PFX' has a wrong offset!");
static_assert(offsetof(ABP_Bulletimpact_C, DataTable) == 0x0004E8, "Member 'ABP_Bulletimpact_C::DataTable' has a wrong offset!");
static_assert(offsetof(ABP_Bulletimpact_C, bDisplayDebug) == 0x0004F0, "Member 'ABP_Bulletimpact_C::bDisplayDebug' has a wrong offset!");
static_assert(offsetof(ABP_Bulletimpact_C, Impact_SoundBase) == 0x0004F8, "Member 'ABP_Bulletimpact_C::Impact_SoundBase' has a wrong offset!");

}

