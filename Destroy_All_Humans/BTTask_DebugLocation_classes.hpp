#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTTask_DebugLocation

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTTask_DebugLocation.BTTask_DebugLocation_C
// 0x0058 (0x00F8 - 0x00A0)
class UBTTask_DebugLocation_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 BBKey;                                             // 0x00A8(0x0028)(Edit, BlueprintVisible)
	float                                         Duration;                                          // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Size;                                              // 0x00D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DrawColor;                                         // 0x00D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Loc;                                               // 0x00E8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTTask_DebugLocation(int32 EntryPoint);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTTask_DebugLocation_C">();
	}
	static class UBTTask_DebugLocation_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTTask_DebugLocation_C>();
	}
};
static_assert(alignof(UBTTask_DebugLocation_C) == 0x000008, "Wrong alignment on UBTTask_DebugLocation_C");
static_assert(sizeof(UBTTask_DebugLocation_C) == 0x0000F8, "Wrong size on UBTTask_DebugLocation_C");
static_assert(offsetof(UBTTask_DebugLocation_C, UberGraphFrame) == 0x0000A0, "Member 'UBTTask_DebugLocation_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTTask_DebugLocation_C, BBKey) == 0x0000A8, "Member 'UBTTask_DebugLocation_C::BBKey' has a wrong offset!");
static_assert(offsetof(UBTTask_DebugLocation_C, Duration) == 0x0000D0, "Member 'UBTTask_DebugLocation_C::Duration' has a wrong offset!");
static_assert(offsetof(UBTTask_DebugLocation_C, Size) == 0x0000D4, "Member 'UBTTask_DebugLocation_C::Size' has a wrong offset!");
static_assert(offsetof(UBTTask_DebugLocation_C, DrawColor) == 0x0000D8, "Member 'UBTTask_DebugLocation_C::DrawColor' has a wrong offset!");
static_assert(offsetof(UBTTask_DebugLocation_C, Loc) == 0x0000E8, "Member 'UBTTask_DebugLocation_C::Loc' has a wrong offset!");

}

