#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Military_Tank_Basic

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BFGCore_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Military_Tank_Basic.BP_Military_Tank_Basic_C
// 0x0060 (0x0DD0 - 0x0D70)
class ABP_Military_Tank_Basic_C final : public ABFGBasicVehicleTank
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0D70(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_OverheadOpportunityWidgetComponent_C* BP_OverheadOpportunityWidgetComponent;             // 0x0D78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBFGActorComponent_TankTrackLOD*        BFGActorComponent_TankTrackLOD;                    // 0x0D80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_ActorComponent_RadarObject_Vehicle_C* BP_ActorComponent_RadarObject_Vehicle;             // 0x0D88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBFGActorComponent_TankTrack*           BFGActorComponent_TankTrack_R;                     // 0x0D90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBFGActorComponent_TankTrack*           BFGActorComponent_TankTrack_L;                     // 0x0D98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       Track_Spline_L;                                    // 0x0DA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       Track_Spline_R;                                    // 0x0DA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDH1ArmorComponent*                     DH1Armor;                                          // 0x0DB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_deformationWeight_770B9231416901B4C515229B93BB34E0; // 0x0DB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_770B9231416901B4C515229B93BB34E0; // 0x0DBC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DBD[0x3];                                      // 0x0DBD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0DC0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Military_Tank_Basic(int32 EntryPoint);
	void OnVehicleDeath();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();

	TSubclassOf<class ABFGWheeledVehicle> GetReplacementWheeledVehicleType() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Military_Tank_Basic_C">();
	}
	static class ABP_Military_Tank_Basic_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Military_Tank_Basic_C>();
	}
};
static_assert(alignof(ABP_Military_Tank_Basic_C) == 0x000010, "Wrong alignment on ABP_Military_Tank_Basic_C");
static_assert(sizeof(ABP_Military_Tank_Basic_C) == 0x000DD0, "Wrong size on ABP_Military_Tank_Basic_C");
static_assert(offsetof(ABP_Military_Tank_Basic_C, UberGraphFrame) == 0x000D70, "Member 'ABP_Military_Tank_Basic_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Military_Tank_Basic_C, BP_OverheadOpportunityWidgetComponent) == 0x000D78, "Member 'ABP_Military_Tank_Basic_C::BP_OverheadOpportunityWidgetComponent' has a wrong offset!");
static_assert(offsetof(ABP_Military_Tank_Basic_C, BFGActorComponent_TankTrackLOD) == 0x000D80, "Member 'ABP_Military_Tank_Basic_C::BFGActorComponent_TankTrackLOD' has a wrong offset!");
static_assert(offsetof(ABP_Military_Tank_Basic_C, BP_ActorComponent_RadarObject_Vehicle) == 0x000D88, "Member 'ABP_Military_Tank_Basic_C::BP_ActorComponent_RadarObject_Vehicle' has a wrong offset!");
static_assert(offsetof(ABP_Military_Tank_Basic_C, BFGActorComponent_TankTrack_R) == 0x000D90, "Member 'ABP_Military_Tank_Basic_C::BFGActorComponent_TankTrack_R' has a wrong offset!");
static_assert(offsetof(ABP_Military_Tank_Basic_C, BFGActorComponent_TankTrack_L) == 0x000D98, "Member 'ABP_Military_Tank_Basic_C::BFGActorComponent_TankTrack_L' has a wrong offset!");
static_assert(offsetof(ABP_Military_Tank_Basic_C, Track_Spline_L) == 0x000DA0, "Member 'ABP_Military_Tank_Basic_C::Track_Spline_L' has a wrong offset!");
static_assert(offsetof(ABP_Military_Tank_Basic_C, Track_Spline_R) == 0x000DA8, "Member 'ABP_Military_Tank_Basic_C::Track_Spline_R' has a wrong offset!");
static_assert(offsetof(ABP_Military_Tank_Basic_C, DH1Armor) == 0x000DB0, "Member 'ABP_Military_Tank_Basic_C::DH1Armor' has a wrong offset!");
static_assert(offsetof(ABP_Military_Tank_Basic_C, Timeline_0_deformationWeight_770B9231416901B4C515229B93BB34E0) == 0x000DB8, "Member 'ABP_Military_Tank_Basic_C::Timeline_0_deformationWeight_770B9231416901B4C515229B93BB34E0' has a wrong offset!");
static_assert(offsetof(ABP_Military_Tank_Basic_C, Timeline_0__Direction_770B9231416901B4C515229B93BB34E0) == 0x000DBC, "Member 'ABP_Military_Tank_Basic_C::Timeline_0__Direction_770B9231416901B4C515229B93BB34E0' has a wrong offset!");
static_assert(offsetof(ABP_Military_Tank_Basic_C, Timeline_0) == 0x000DC0, "Member 'ABP_Military_Tank_Basic_C::Timeline_0' has a wrong offset!");

}

