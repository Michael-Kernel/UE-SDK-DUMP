#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FunctionLibrary_UI

#include "Basic.hpp"

#include "FunctionLibrary_UI_classes.hpp"
#include "FunctionLibrary_UI_parameters.hpp"


namespace SDK
{

// Function FunctionLibrary_UI.FunctionLibrary_UI_C.GetBeautifiedInt
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsTime                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             BeautifiedText                                         (Parm, OutParm)

void UFunctionLibrary_UI_C::GetBeautifiedInt(int32 Value, bool IsTime, class UObject* __WorldContext, class FText* BeautifiedText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FunctionLibrary_UI_C", "GetBeautifiedInt");

	Params::FunctionLibrary_UI_C_GetBeautifiedInt Parms{};

	Parms.Value = Value;
	Parms.IsTime = IsTime;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (BeautifiedText != nullptr)
		*BeautifiedText = std::move(Parms.BeautifiedText);
}


// Function FunctionLibrary_UI.FunctionLibrary_UI_C.GetPlaybackSpeedFromTextLength
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             InText                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   DisplaySpeed                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PlaybackSpeed                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFunctionLibrary_UI_C::GetPlaybackSpeedFromTextLength(const class FText& InText, float DisplaySpeed, class UObject* __WorldContext, float* PlaybackSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FunctionLibrary_UI_C", "GetPlaybackSpeedFromTextLength");

	Params::FunctionLibrary_UI_C_GetPlaybackSpeedFromTextLength Parms{};

	Parms.InText = std::move(InText);
	Parms.DisplaySpeed = DisplaySpeed;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (PlaybackSpeed != nullptr)
		*PlaybackSpeed = Parms.PlaybackSpeed;
}


// Function FunctionLibrary_UI.FunctionLibrary_UI_C.GetAnimProgression
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UUserWidget*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidgetAnimation*                 InAnimation                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Prgression                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFunctionLibrary_UI_C::GetAnimProgression(class UUserWidget* Target, const class UWidgetAnimation* InAnimation, class UObject* __WorldContext, float* Prgression)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FunctionLibrary_UI_C", "GetAnimProgression");

	Params::FunctionLibrary_UI_C_GetAnimProgression Parms{};

	Parms.Target = Target;
	Parms.InAnimation = InAnimation;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Prgression != nullptr)
		*Prgression = Parms.Prgression;
}


// Function FunctionLibrary_UI.FunctionLibrary_UI_C.GetChoppedText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             InText                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   ChoppedRatio                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             ChoppedText                                            (Parm, OutParm)

void UFunctionLibrary_UI_C::GetChoppedText(const class FText& InText, float ChoppedRatio, class UObject* __WorldContext, class FText* ChoppedText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FunctionLibrary_UI_C", "GetChoppedText");

	Params::FunctionLibrary_UI_C_GetChoppedText Parms{};

	Parms.InText = std::move(InText);
	Parms.ChoppedRatio = ChoppedRatio;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ChoppedText != nullptr)
		*ChoppedText = std::move(Parms.ChoppedText);
}


// Function FunctionLibrary_UI.FunctionLibrary_UI_C.GetScrambledText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             InText                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   ScramblingRatio                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OriginalStringLength                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             ScrambledText                                          (Parm, OutParm)

void UFunctionLibrary_UI_C::GetScrambledText(const class FText& InText, float ScramblingRatio, int32 OriginalStringLength, class UObject* __WorldContext, class FText* ScrambledText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FunctionLibrary_UI_C", "GetScrambledText");

	Params::FunctionLibrary_UI_C_GetScrambledText Parms{};

	Parms.InText = std::move(InText);
	Parms.ScramblingRatio = ScramblingRatio;
	Parms.OriginalStringLength = OriginalStringLength;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ScrambledText != nullptr)
		*ScrambledText = std::move(Parms.ScrambledText);
}


// Function FunctionLibrary_UI.FunctionLibrary_UI_C.GetStringNoDecorators
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           SourceString                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UFunctionLibrary_UI_C::GetStringNoDecorators(const class FString& SourceString, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FunctionLibrary_UI_C", "GetStringNoDecorators");

	Params::FunctionLibrary_UI_C_GetStringNoDecorators Parms{};

	Parms.SourceString = std::move(SourceString);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

