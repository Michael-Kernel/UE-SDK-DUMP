#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Army_Power_suit_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Army_Power_suit_AnimBP.Army_Power_suit_AnimBP_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct Army_Power_suit_AnimBP_C_BlueprintUpdateAnimation final
{
public:
	float                                         bpp__DeltaTimeX__pf;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Army_Power_suit_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on Army_Power_suit_AnimBP_C_BlueprintUpdateAnimation");
static_assert(sizeof(Army_Power_suit_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on Army_Power_suit_AnimBP_C_BlueprintUpdateAnimation");
static_assert(offsetof(Army_Power_suit_AnimBP_C_BlueprintUpdateAnimation, bpp__DeltaTimeX__pf) == 0x000000, "Member 'Army_Power_suit_AnimBP_C_BlueprintUpdateAnimation::bpp__DeltaTimeX__pf' has a wrong offset!");

// Function Army_Power_suit_AnimBP.Army_Power_suit_AnimBP_C.ComputeCardinalAccelerationDelta
// 0x0004 (0x0004 - 0x0000)
struct Army_Power_suit_AnimBP_C_ComputeCardinalAccelerationDelta final
{
public:
	float                                         bpp__CardinalDirectionValue__pf;                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Army_Power_suit_AnimBP_C_ComputeCardinalAccelerationDelta) == 0x000004, "Wrong alignment on Army_Power_suit_AnimBP_C_ComputeCardinalAccelerationDelta");
static_assert(sizeof(Army_Power_suit_AnimBP_C_ComputeCardinalAccelerationDelta) == 0x000004, "Wrong size on Army_Power_suit_AnimBP_C_ComputeCardinalAccelerationDelta");
static_assert(offsetof(Army_Power_suit_AnimBP_C_ComputeCardinalAccelerationDelta, bpp__CardinalDirectionValue__pf) == 0x000000, "Member 'Army_Power_suit_AnimBP_C_ComputeCardinalAccelerationDelta::bpp__CardinalDirectionValue__pf' has a wrong offset!");

// Function Army_Power_suit_AnimBP.Army_Power_suit_AnimBP_C.ComputeCardinalDirectionAcceleration
// 0x0004 (0x0004 - 0x0000)
struct Army_Power_suit_AnimBP_C_ComputeCardinalDirectionAcceleration final
{
public:
	float                                         bpp__HorizontalAccelerationDirection__pf;          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Army_Power_suit_AnimBP_C_ComputeCardinalDirectionAcceleration) == 0x000004, "Wrong alignment on Army_Power_suit_AnimBP_C_ComputeCardinalDirectionAcceleration");
static_assert(sizeof(Army_Power_suit_AnimBP_C_ComputeCardinalDirectionAcceleration) == 0x000004, "Wrong size on Army_Power_suit_AnimBP_C_ComputeCardinalDirectionAcceleration");
static_assert(offsetof(Army_Power_suit_AnimBP_C_ComputeCardinalDirectionAcceleration, bpp__HorizontalAccelerationDirection__pf) == 0x000000, "Member 'Army_Power_suit_AnimBP_C_ComputeCardinalDirectionAcceleration::bpp__HorizontalAccelerationDirection__pf' has a wrong offset!");

// Function Army_Power_suit_AnimBP.Army_Power_suit_AnimBP_C.ComputeCardinalDirectionVelocity
// 0x0004 (0x0004 - 0x0000)
struct Army_Power_suit_AnimBP_C_ComputeCardinalDirectionVelocity final
{
public:
	float                                         bpp__HorizontalMoveDirection__pf;                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Army_Power_suit_AnimBP_C_ComputeCardinalDirectionVelocity) == 0x000004, "Wrong alignment on Army_Power_suit_AnimBP_C_ComputeCardinalDirectionVelocity");
static_assert(sizeof(Army_Power_suit_AnimBP_C_ComputeCardinalDirectionVelocity) == 0x000004, "Wrong size on Army_Power_suit_AnimBP_C_ComputeCardinalDirectionVelocity");
static_assert(offsetof(Army_Power_suit_AnimBP_C_ComputeCardinalDirectionVelocity, bpp__HorizontalMoveDirection__pf) == 0x000000, "Member 'Army_Power_suit_AnimBP_C_ComputeCardinalDirectionVelocity::bpp__HorizontalMoveDirection__pf' has a wrong offset!");

// Function Army_Power_suit_AnimBP.Army_Power_suit_AnimBP_C.ComputeSpeedWarpingAdjustment
// 0x0014 (0x0014 - 0x0000)
struct Army_Power_suit_AnimBP_C_ComputeSpeedWarpingAdjustment final
{
public:
	float                                         bpp__Speed__pf;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         bpp__PlayRateIKPercentageAbove__pf;                // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         bpp__PlayRateIKPercentageBelow__pf;                // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         bpp__PlayRate__pf;                                 // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         bpp__IKAdjustmentXY__pf;                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Army_Power_suit_AnimBP_C_ComputeSpeedWarpingAdjustment) == 0x000004, "Wrong alignment on Army_Power_suit_AnimBP_C_ComputeSpeedWarpingAdjustment");
static_assert(sizeof(Army_Power_suit_AnimBP_C_ComputeSpeedWarpingAdjustment) == 0x000014, "Wrong size on Army_Power_suit_AnimBP_C_ComputeSpeedWarpingAdjustment");
static_assert(offsetof(Army_Power_suit_AnimBP_C_ComputeSpeedWarpingAdjustment, bpp__Speed__pf) == 0x000000, "Member 'Army_Power_suit_AnimBP_C_ComputeSpeedWarpingAdjustment::bpp__Speed__pf' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_ComputeSpeedWarpingAdjustment, bpp__PlayRateIKPercentageAbove__pf) == 0x000004, "Member 'Army_Power_suit_AnimBP_C_ComputeSpeedWarpingAdjustment::bpp__PlayRateIKPercentageAbove__pf' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_ComputeSpeedWarpingAdjustment, bpp__PlayRateIKPercentageBelow__pf) == 0x000008, "Member 'Army_Power_suit_AnimBP_C_ComputeSpeedWarpingAdjustment::bpp__PlayRateIKPercentageBelow__pf' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_ComputeSpeedWarpingAdjustment, bpp__PlayRate__pf) == 0x00000C, "Member 'Army_Power_suit_AnimBP_C_ComputeSpeedWarpingAdjustment::bpp__PlayRate__pf' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_ComputeSpeedWarpingAdjustment, bpp__IKAdjustmentXY__pf) == 0x000010, "Member 'Army_Power_suit_AnimBP_C_ComputeSpeedWarpingAdjustment::bpp__IKAdjustmentXY__pf' has a wrong offset!");

// Function Army_Power_suit_AnimBP.Army_Power_suit_AnimBP_C.ExecuteUbergraph_Army_Power_suit_AnimBP_9
// 0x0004 (0x0004 - 0x0000)
struct Army_Power_suit_AnimBP_C_ExecuteUbergraph_Army_Power_suit_AnimBP_9 final
{
public:
	int32                                         bpp__EntryPoint__pf;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Army_Power_suit_AnimBP_C_ExecuteUbergraph_Army_Power_suit_AnimBP_9) == 0x000004, "Wrong alignment on Army_Power_suit_AnimBP_C_ExecuteUbergraph_Army_Power_suit_AnimBP_9");
static_assert(sizeof(Army_Power_suit_AnimBP_C_ExecuteUbergraph_Army_Power_suit_AnimBP_9) == 0x000004, "Wrong size on Army_Power_suit_AnimBP_C_ExecuteUbergraph_Army_Power_suit_AnimBP_9");
static_assert(offsetof(Army_Power_suit_AnimBP_C_ExecuteUbergraph_Army_Power_suit_AnimBP_9, bpp__EntryPoint__pf) == 0x000000, "Member 'Army_Power_suit_AnimBP_C_ExecuteUbergraph_Army_Power_suit_AnimBP_9::bpp__EntryPoint__pf' has a wrong offset!");

// Function Army_Power_suit_AnimBP.Army_Power_suit_AnimBP_C.G2AShotFire
// 0x0008 (0x0008 - 0x0000)
struct Army_Power_suit_AnimBP_C_G2AShotFire final
{
public:
	class FName                                   bpp___nSocketName__pf;                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Army_Power_suit_AnimBP_C_G2AShotFire) == 0x000004, "Wrong alignment on Army_Power_suit_AnimBP_C_G2AShotFire");
static_assert(sizeof(Army_Power_suit_AnimBP_C_G2AShotFire) == 0x000008, "Wrong size on Army_Power_suit_AnimBP_C_G2AShotFire");
static_assert(offsetof(Army_Power_suit_AnimBP_C_G2AShotFire, bpp___nSocketName__pf) == 0x000000, "Member 'Army_Power_suit_AnimBP_C_G2AShotFire::bpp___nSocketName__pf' has a wrong offset!");

// Function Army_Power_suit_AnimBP.Army_Power_suit_AnimBP_C.GetPowerSuitWeapon
// 0x0008 (0x0008 - 0x0000)
struct Army_Power_suit_AnimBP_C_GetPowerSuitWeapon final
{
public:
	class UBFGActorComponent_EquipmentManager*    bpp__EquipmentManagerComponent__pf;                // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Army_Power_suit_AnimBP_C_GetPowerSuitWeapon) == 0x000008, "Wrong alignment on Army_Power_suit_AnimBP_C_GetPowerSuitWeapon");
static_assert(sizeof(Army_Power_suit_AnimBP_C_GetPowerSuitWeapon) == 0x000008, "Wrong size on Army_Power_suit_AnimBP_C_GetPowerSuitWeapon");
static_assert(offsetof(Army_Power_suit_AnimBP_C_GetPowerSuitWeapon, bpp__EquipmentManagerComponent__pf) == 0x000000, "Member 'Army_Power_suit_AnimBP_C_GetPowerSuitWeapon::bpp__EquipmentManagerComponent__pf' has a wrong offset!");

// Function Army_Power_suit_AnimBP.Army_Power_suit_AnimBP_C.On Stomp Attack
// 0x0008 (0x0008 - 0x0000)
struct Army_Power_suit_AnimBP_C_On_Stomp_Attack final
{
public:
	float                                         bpp__StompxTimeframe__pfT;                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bpp__UsedxRightxFoot__pfTT;                        // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(Army_Power_suit_AnimBP_C_On_Stomp_Attack) == 0x000004, "Wrong alignment on Army_Power_suit_AnimBP_C_On_Stomp_Attack");
static_assert(sizeof(Army_Power_suit_AnimBP_C_On_Stomp_Attack) == 0x000008, "Wrong size on Army_Power_suit_AnimBP_C_On_Stomp_Attack");
static_assert(offsetof(Army_Power_suit_AnimBP_C_On_Stomp_Attack, bpp__StompxTimeframe__pfT) == 0x000000, "Member 'Army_Power_suit_AnimBP_C_On_Stomp_Attack::bpp__StompxTimeframe__pfT' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_On_Stomp_Attack, bpp__UsedxRightxFoot__pfTT) == 0x000004, "Member 'Army_Power_suit_AnimBP_C_On_Stomp_Attack::bpp__UsedxRightxFoot__pfTT' has a wrong offset!");

// Function Army_Power_suit_AnimBP.Army_Power_suit_AnimBP_C.SelectShootingMontage
// 0x0038 (0x0038 - 0x0000)
struct Army_Power_suit_AnimBP_C_SelectShootingMontage final
{
public:
	class FName                                   bpp__IncomingName__pf;                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   bpp__L_MachineGunSocketx01__pfT;                   // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   bpp__L_MachineGunSocketx02__pfT;                   // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   bpp__R_MachineGunSocketx01__pfT;                   // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   bpp__R_MachineGunSocketx02__pfT;                   // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   bpp__L_GrenadeSocket__pf;                          // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   bpp__R_GrenadeSocket__pf;                          // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Army_Power_suit_AnimBP_C_SelectShootingMontage) == 0x000004, "Wrong alignment on Army_Power_suit_AnimBP_C_SelectShootingMontage");
static_assert(sizeof(Army_Power_suit_AnimBP_C_SelectShootingMontage) == 0x000038, "Wrong size on Army_Power_suit_AnimBP_C_SelectShootingMontage");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SelectShootingMontage, bpp__IncomingName__pf) == 0x000000, "Member 'Army_Power_suit_AnimBP_C_SelectShootingMontage::bpp__IncomingName__pf' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SelectShootingMontage, bpp__L_MachineGunSocketx01__pfT) == 0x000008, "Member 'Army_Power_suit_AnimBP_C_SelectShootingMontage::bpp__L_MachineGunSocketx01__pfT' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SelectShootingMontage, bpp__L_MachineGunSocketx02__pfT) == 0x000010, "Member 'Army_Power_suit_AnimBP_C_SelectShootingMontage::bpp__L_MachineGunSocketx02__pfT' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SelectShootingMontage, bpp__R_MachineGunSocketx01__pfT) == 0x000018, "Member 'Army_Power_suit_AnimBP_C_SelectShootingMontage::bpp__R_MachineGunSocketx01__pfT' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SelectShootingMontage, bpp__R_MachineGunSocketx02__pfT) == 0x000020, "Member 'Army_Power_suit_AnimBP_C_SelectShootingMontage::bpp__R_MachineGunSocketx02__pfT' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SelectShootingMontage, bpp__L_GrenadeSocket__pf) == 0x000028, "Member 'Army_Power_suit_AnimBP_C_SelectShootingMontage::bpp__L_GrenadeSocket__pf' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SelectShootingMontage, bpp__R_GrenadeSocket__pf) == 0x000030, "Member 'Army_Power_suit_AnimBP_C_SelectShootingMontage::bpp__R_GrenadeSocket__pf' has a wrong offset!");

// Function Army_Power_suit_AnimBP.Army_Power_suit_AnimBP_C.SelectSpeedWarpingDirection
// 0x0008 (0x0008 - 0x0000)
struct Army_Power_suit_AnimBP_C_SelectSpeedWarpingDirection final
{
public:
	float                                         bpp__XY__pf;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         bpp__Z__pf;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Army_Power_suit_AnimBP_C_SelectSpeedWarpingDirection) == 0x000004, "Wrong alignment on Army_Power_suit_AnimBP_C_SelectSpeedWarpingDirection");
static_assert(sizeof(Army_Power_suit_AnimBP_C_SelectSpeedWarpingDirection) == 0x000008, "Wrong size on Army_Power_suit_AnimBP_C_SelectSpeedWarpingDirection");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SelectSpeedWarpingDirection, bpp__XY__pf) == 0x000000, "Member 'Army_Power_suit_AnimBP_C_SelectSpeedWarpingDirection::bpp__XY__pf' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SelectSpeedWarpingDirection, bpp__Z__pf) == 0x000004, "Member 'Army_Power_suit_AnimBP_C_SelectSpeedWarpingDirection::bpp__Z__pf' has a wrong offset!");

// Function Army_Power_suit_AnimBP.Army_Power_suit_AnimBP_C.SelectTransitionAnimations
// 0x0070 (0x0070 - 0x0000)
struct Army_Power_suit_AnimBP_C_SelectTransitionAnimations final
{
public:
	class UAnimSequence*                          bpp__F_ADD__pf;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          bpp__R_ADD__pf;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          bpp__L_ADD__pf;                                    // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          bpp__B_ADD__pf;                                    // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          bpp__F__pf;                                        // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          bpp__R__pf;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          bpp__L__pf;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          bpp__B__pf;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         bpp__Direction__pf;                                // 0x0040(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          bpp__AnimxA__pfT;                                  // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          bpp__AnimxAxAdditive__pfTT;                        // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          bpp__AnimB__pf;                                    // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          bpp__AnimB_additive__pf;                           // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         bpp__BlendValue__pf;                               // 0x0068(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(Army_Power_suit_AnimBP_C_SelectTransitionAnimations) == 0x000008, "Wrong alignment on Army_Power_suit_AnimBP_C_SelectTransitionAnimations");
static_assert(sizeof(Army_Power_suit_AnimBP_C_SelectTransitionAnimations) == 0x000070, "Wrong size on Army_Power_suit_AnimBP_C_SelectTransitionAnimations");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SelectTransitionAnimations, bpp__F_ADD__pf) == 0x000000, "Member 'Army_Power_suit_AnimBP_C_SelectTransitionAnimations::bpp__F_ADD__pf' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SelectTransitionAnimations, bpp__R_ADD__pf) == 0x000008, "Member 'Army_Power_suit_AnimBP_C_SelectTransitionAnimations::bpp__R_ADD__pf' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SelectTransitionAnimations, bpp__L_ADD__pf) == 0x000010, "Member 'Army_Power_suit_AnimBP_C_SelectTransitionAnimations::bpp__L_ADD__pf' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SelectTransitionAnimations, bpp__B_ADD__pf) == 0x000018, "Member 'Army_Power_suit_AnimBP_C_SelectTransitionAnimations::bpp__B_ADD__pf' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SelectTransitionAnimations, bpp__F__pf) == 0x000020, "Member 'Army_Power_suit_AnimBP_C_SelectTransitionAnimations::bpp__F__pf' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SelectTransitionAnimations, bpp__R__pf) == 0x000028, "Member 'Army_Power_suit_AnimBP_C_SelectTransitionAnimations::bpp__R__pf' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SelectTransitionAnimations, bpp__L__pf) == 0x000030, "Member 'Army_Power_suit_AnimBP_C_SelectTransitionAnimations::bpp__L__pf' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SelectTransitionAnimations, bpp__B__pf) == 0x000038, "Member 'Army_Power_suit_AnimBP_C_SelectTransitionAnimations::bpp__B__pf' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SelectTransitionAnimations, bpp__Direction__pf) == 0x000040, "Member 'Army_Power_suit_AnimBP_C_SelectTransitionAnimations::bpp__Direction__pf' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SelectTransitionAnimations, bpp__AnimxA__pfT) == 0x000048, "Member 'Army_Power_suit_AnimBP_C_SelectTransitionAnimations::bpp__AnimxA__pfT' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SelectTransitionAnimations, bpp__AnimxAxAdditive__pfTT) == 0x000050, "Member 'Army_Power_suit_AnimBP_C_SelectTransitionAnimations::bpp__AnimxAxAdditive__pfTT' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SelectTransitionAnimations, bpp__AnimB__pf) == 0x000058, "Member 'Army_Power_suit_AnimBP_C_SelectTransitionAnimations::bpp__AnimB__pf' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SelectTransitionAnimations, bpp__AnimB_additive__pf) == 0x000060, "Member 'Army_Power_suit_AnimBP_C_SelectTransitionAnimations::bpp__AnimB_additive__pf' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SelectTransitionAnimations, bpp__BlendValue__pf) == 0x000068, "Member 'Army_Power_suit_AnimBP_C_SelectTransitionAnimations::bpp__BlendValue__pf' has a wrong offset!");

// Function Army_Power_suit_AnimBP.Army_Power_suit_AnimBP_C.SetStartRunAnims
// 0x0028 (0x0028 - 0x0000)
struct Army_Power_suit_AnimBP_C_SetStartRunAnims final
{
public:
	class UAnimSequence*                          bpp__StartAnimA__pf;                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          bpp__AnimA_additive__pf;                           // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          bpp__AnimB__pf;                                    // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          bpp__AnimB_Additivex__pfT;                         // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         bpp__BlendValue__pf;                               // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(Army_Power_suit_AnimBP_C_SetStartRunAnims) == 0x000008, "Wrong alignment on Army_Power_suit_AnimBP_C_SetStartRunAnims");
static_assert(sizeof(Army_Power_suit_AnimBP_C_SetStartRunAnims) == 0x000028, "Wrong size on Army_Power_suit_AnimBP_C_SetStartRunAnims");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SetStartRunAnims, bpp__StartAnimA__pf) == 0x000000, "Member 'Army_Power_suit_AnimBP_C_SetStartRunAnims::bpp__StartAnimA__pf' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SetStartRunAnims, bpp__AnimA_additive__pf) == 0x000008, "Member 'Army_Power_suit_AnimBP_C_SetStartRunAnims::bpp__AnimA_additive__pf' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SetStartRunAnims, bpp__AnimB__pf) == 0x000010, "Member 'Army_Power_suit_AnimBP_C_SetStartRunAnims::bpp__AnimB__pf' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SetStartRunAnims, bpp__AnimB_Additivex__pfT) == 0x000018, "Member 'Army_Power_suit_AnimBP_C_SetStartRunAnims::bpp__AnimB_Additivex__pfT' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SetStartRunAnims, bpp__BlendValue__pf) == 0x000020, "Member 'Army_Power_suit_AnimBP_C_SetStartRunAnims::bpp__BlendValue__pf' has a wrong offset!");

// Function Army_Power_suit_AnimBP.Army_Power_suit_AnimBP_C.SetStartWalkAnims
// 0x0028 (0x0028 - 0x0000)
struct Army_Power_suit_AnimBP_C_SetStartWalkAnims final
{
public:
	class UAnimSequence*                          bpp__StartAnimA__pf;                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          bpp__AnimA_additive__pf;                           // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          bpp__AnimB__pf;                                    // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          bpp__AnimB_Additivex__pfT;                         // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         bpp__BlendValue__pf;                               // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(Army_Power_suit_AnimBP_C_SetStartWalkAnims) == 0x000008, "Wrong alignment on Army_Power_suit_AnimBP_C_SetStartWalkAnims");
static_assert(sizeof(Army_Power_suit_AnimBP_C_SetStartWalkAnims) == 0x000028, "Wrong size on Army_Power_suit_AnimBP_C_SetStartWalkAnims");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SetStartWalkAnims, bpp__StartAnimA__pf) == 0x000000, "Member 'Army_Power_suit_AnimBP_C_SetStartWalkAnims::bpp__StartAnimA__pf' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SetStartWalkAnims, bpp__AnimA_additive__pf) == 0x000008, "Member 'Army_Power_suit_AnimBP_C_SetStartWalkAnims::bpp__AnimA_additive__pf' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SetStartWalkAnims, bpp__AnimB__pf) == 0x000010, "Member 'Army_Power_suit_AnimBP_C_SetStartWalkAnims::bpp__AnimB__pf' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SetStartWalkAnims, bpp__AnimB_Additivex__pfT) == 0x000018, "Member 'Army_Power_suit_AnimBP_C_SetStartWalkAnims::bpp__AnimB_Additivex__pfT' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SetStartWalkAnims, bpp__BlendValue__pf) == 0x000020, "Member 'Army_Power_suit_AnimBP_C_SetStartWalkAnims::bpp__BlendValue__pf' has a wrong offset!");

// Function Army_Power_suit_AnimBP.Army_Power_suit_AnimBP_C.SetStopAnims
// 0x0028 (0x0028 - 0x0000)
struct Army_Power_suit_AnimBP_C_SetStopAnims final
{
public:
	class UAnimSequence*                          bpp__AnimA__pf;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          bpp__AnimA_additive__pf;                           // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          bpp__AnimB__pf;                                    // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          bpp__AnimB_additive__pf;                           // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         bpp__BlendValue__pf;                               // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(Army_Power_suit_AnimBP_C_SetStopAnims) == 0x000008, "Wrong alignment on Army_Power_suit_AnimBP_C_SetStopAnims");
static_assert(sizeof(Army_Power_suit_AnimBP_C_SetStopAnims) == 0x000028, "Wrong size on Army_Power_suit_AnimBP_C_SetStopAnims");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SetStopAnims, bpp__AnimA__pf) == 0x000000, "Member 'Army_Power_suit_AnimBP_C_SetStopAnims::bpp__AnimA__pf' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SetStopAnims, bpp__AnimA_additive__pf) == 0x000008, "Member 'Army_Power_suit_AnimBP_C_SetStopAnims::bpp__AnimA_additive__pf' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SetStopAnims, bpp__AnimB__pf) == 0x000010, "Member 'Army_Power_suit_AnimBP_C_SetStopAnims::bpp__AnimB__pf' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SetStopAnims, bpp__AnimB_additive__pf) == 0x000018, "Member 'Army_Power_suit_AnimBP_C_SetStopAnims::bpp__AnimB_additive__pf' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_SetStopAnims, bpp__BlendValue__pf) == 0x000020, "Member 'Army_Power_suit_AnimBP_C_SetStopAnims::bpp__BlendValue__pf' has a wrong offset!");

// Function Army_Power_suit_AnimBP.Army_Power_suit_AnimBP_C.StandUpStarted
// 0x0040 (0x0040 - 0x0000)
struct Army_Power_suit_AnimBP_C_StandUpStarted final
{
public:
	bool                                          bpp___bIsFaceDown__pf;                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPoseSnapshot                          bpp___oPoseSnapshot__pf__const;                    // 0x0008(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(Army_Power_suit_AnimBP_C_StandUpStarted) == 0x000008, "Wrong alignment on Army_Power_suit_AnimBP_C_StandUpStarted");
static_assert(sizeof(Army_Power_suit_AnimBP_C_StandUpStarted) == 0x000040, "Wrong size on Army_Power_suit_AnimBP_C_StandUpStarted");
static_assert(offsetof(Army_Power_suit_AnimBP_C_StandUpStarted, bpp___bIsFaceDown__pf) == 0x000000, "Member 'Army_Power_suit_AnimBP_C_StandUpStarted::bpp___bIsFaceDown__pf' has a wrong offset!");
static_assert(offsetof(Army_Power_suit_AnimBP_C_StandUpStarted, bpp___oPoseSnapshot__pf__const) == 0x000008, "Member 'Army_Power_suit_AnimBP_C_StandUpStarted::bpp___oPoseSnapshot__pf__const' has a wrong offset!");

}

