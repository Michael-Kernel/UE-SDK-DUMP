#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GenericGraphRuntime

#include "Basic.hpp"


namespace SDK::Params
{

// Function GenericGraphRuntime.GenericGraphNode.GetEdge
// 0x0010 (0x0010 - 0x0000)
struct GenericGraphNode_GetEdge final
{
public:
	class UGenericGraphNode*                      ChildNode;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGenericGraphEdge*                      ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GenericGraphNode_GetEdge) == 0x000008, "Wrong alignment on GenericGraphNode_GetEdge");
static_assert(sizeof(GenericGraphNode_GetEdge) == 0x000010, "Wrong size on GenericGraphNode_GetEdge");
static_assert(offsetof(GenericGraphNode_GetEdge, ChildNode) == 0x000000, "Member 'GenericGraphNode_GetEdge::ChildNode' has a wrong offset!");
static_assert(offsetof(GenericGraphNode_GetEdge, ReturnValue) == 0x000008, "Member 'GenericGraphNode_GetEdge::ReturnValue' has a wrong offset!");

// Function GenericGraphRuntime.GenericGraphNode.GetDescription
// 0x0018 (0x0018 - 0x0000)
struct GenericGraphNode_GetDescription final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GenericGraphNode_GetDescription) == 0x000008, "Wrong alignment on GenericGraphNode_GetDescription");
static_assert(sizeof(GenericGraphNode_GetDescription) == 0x000018, "Wrong size on GenericGraphNode_GetDescription");
static_assert(offsetof(GenericGraphNode_GetDescription, ReturnValue) == 0x000000, "Member 'GenericGraphNode_GetDescription::ReturnValue' has a wrong offset!");

// Function GenericGraphRuntime.GenericGraphNode.GetGraph
// 0x0008 (0x0008 - 0x0000)
struct GenericGraphNode_GetGraph final
{
public:
	class UGenericGraph*                          ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GenericGraphNode_GetGraph) == 0x000008, "Wrong alignment on GenericGraphNode_GetGraph");
static_assert(sizeof(GenericGraphNode_GetGraph) == 0x000008, "Wrong size on GenericGraphNode_GetGraph");
static_assert(offsetof(GenericGraphNode_GetGraph, ReturnValue) == 0x000000, "Member 'GenericGraphNode_GetGraph::ReturnValue' has a wrong offset!");

// Function GenericGraphRuntime.GenericGraphNode.IsLeafNode
// 0x0001 (0x0001 - 0x0000)
struct GenericGraphNode_IsLeafNode final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GenericGraphNode_IsLeafNode) == 0x000001, "Wrong alignment on GenericGraphNode_IsLeafNode");
static_assert(sizeof(GenericGraphNode_IsLeafNode) == 0x000001, "Wrong size on GenericGraphNode_IsLeafNode");
static_assert(offsetof(GenericGraphNode_IsLeafNode, ReturnValue) == 0x000000, "Member 'GenericGraphNode_IsLeafNode::ReturnValue' has a wrong offset!");

// Function GenericGraphRuntime.GenericGraph.GetNodesByLevel
// 0x0018 (0x0018 - 0x0000)
struct GenericGraph_GetNodesByLevel final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UGenericGraphNode*>              Nodes;                                             // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(GenericGraph_GetNodesByLevel) == 0x000008, "Wrong alignment on GenericGraph_GetNodesByLevel");
static_assert(sizeof(GenericGraph_GetNodesByLevel) == 0x000018, "Wrong size on GenericGraph_GetNodesByLevel");
static_assert(offsetof(GenericGraph_GetNodesByLevel, Level) == 0x000000, "Member 'GenericGraph_GetNodesByLevel::Level' has a wrong offset!");
static_assert(offsetof(GenericGraph_GetNodesByLevel, Nodes) == 0x000008, "Member 'GenericGraph_GetNodesByLevel::Nodes' has a wrong offset!");

// Function GenericGraphRuntime.GenericGraph.Print
// 0x0002 (0x0002 - 0x0000)
struct GenericGraph_Print final
{
public:
	bool                                          ToConsole;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ToScreen;                                          // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GenericGraph_Print) == 0x000001, "Wrong alignment on GenericGraph_Print");
static_assert(sizeof(GenericGraph_Print) == 0x000002, "Wrong size on GenericGraph_Print");
static_assert(offsetof(GenericGraph_Print, ToConsole) == 0x000000, "Member 'GenericGraph_Print::ToConsole' has a wrong offset!");
static_assert(offsetof(GenericGraph_Print, ToScreen) == 0x000001, "Member 'GenericGraph_Print::ToScreen' has a wrong offset!");

// Function GenericGraphRuntime.GenericGraph.GetLevelNum
// 0x0004 (0x0004 - 0x0000)
struct GenericGraph_GetLevelNum final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GenericGraph_GetLevelNum) == 0x000004, "Wrong alignment on GenericGraph_GetLevelNum");
static_assert(sizeof(GenericGraph_GetLevelNum) == 0x000004, "Wrong size on GenericGraph_GetLevelNum");
static_assert(offsetof(GenericGraph_GetLevelNum, ReturnValue) == 0x000000, "Member 'GenericGraph_GetLevelNum::ReturnValue' has a wrong offset!");

// Function GenericGraphRuntime.GenericGraphEdge.GetGraph
// 0x0008 (0x0008 - 0x0000)
struct GenericGraphEdge_GetGraph final
{
public:
	class UGenericGraph*                          ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GenericGraphEdge_GetGraph) == 0x000008, "Wrong alignment on GenericGraphEdge_GetGraph");
static_assert(sizeof(GenericGraphEdge_GetGraph) == 0x000008, "Wrong size on GenericGraphEdge_GetGraph");
static_assert(offsetof(GenericGraphEdge_GetGraph, ReturnValue) == 0x000000, "Member 'GenericGraphEdge_GetGraph::ReturnValue' has a wrong offset!");

}

