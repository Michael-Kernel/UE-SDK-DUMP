#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPW_ScoreOverheadDisplay

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BFGCore_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BPW_ScoreOverheadDisplay.BPW_ScoreOverheadDisplay_C
// 0x0020 (0x0318 - 0x02F8)
class UBPW_ScoreOverheadDisplay_C final : public UBFGWidget_Overhead
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Spawn;                                             // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class URichTextBlock*                         T_ScoreText;                                       // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         XOffset;                                           // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         YOffset;                                           // 0x0314(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void SetRichTextString(const class FString& _strText);
	void ExecuteUbergraph_BPW_ScoreOverheadDisplay(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPW_ScoreOverheadDisplay_C">();
	}
	static class UBPW_ScoreOverheadDisplay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPW_ScoreOverheadDisplay_C>();
	}
};
static_assert(alignof(UBPW_ScoreOverheadDisplay_C) == 0x000008, "Wrong alignment on UBPW_ScoreOverheadDisplay_C");
static_assert(sizeof(UBPW_ScoreOverheadDisplay_C) == 0x000318, "Wrong size on UBPW_ScoreOverheadDisplay_C");
static_assert(offsetof(UBPW_ScoreOverheadDisplay_C, UberGraphFrame) == 0x0002F8, "Member 'UBPW_ScoreOverheadDisplay_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPW_ScoreOverheadDisplay_C, Spawn) == 0x000300, "Member 'UBPW_ScoreOverheadDisplay_C::Spawn' has a wrong offset!");
static_assert(offsetof(UBPW_ScoreOverheadDisplay_C, T_ScoreText) == 0x000308, "Member 'UBPW_ScoreOverheadDisplay_C::T_ScoreText' has a wrong offset!");
static_assert(offsetof(UBPW_ScoreOverheadDisplay_C, XOffset) == 0x000310, "Member 'UBPW_ScoreOverheadDisplay_C::XOffset' has a wrong offset!");
static_assert(offsetof(UBPW_ScoreOverheadDisplay_C, YOffset) == 0x000314, "Member 'UBPW_ScoreOverheadDisplay_C::YOffset' has a wrong offset!");

}

