#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPW_MentalAbilityAutoTargetMarker

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BFGCore_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BPW_MentalAbilityAutoTargetMarker.BPW_MentalAbilityAutoTargetMarker_C
// 0x0018 (0x0310 - 0x02F8)
class UBPW_MentalAbilityAutoTargetMarker_C final : public UBFGWidget_HUD
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Blip;                                              // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image_146;                                         // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	bool ComputeDesiredVisibility();
	void Construct();
	void WeaponAndAbilitySharedTargetChanged(bool _bNewValue);
	void ExecuteUbergraph_BPW_MentalAbilityAutoTargetMarker(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPW_MentalAbilityAutoTargetMarker_C">();
	}
	static class UBPW_MentalAbilityAutoTargetMarker_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPW_MentalAbilityAutoTargetMarker_C>();
	}
};
static_assert(alignof(UBPW_MentalAbilityAutoTargetMarker_C) == 0x000008, "Wrong alignment on UBPW_MentalAbilityAutoTargetMarker_C");
static_assert(sizeof(UBPW_MentalAbilityAutoTargetMarker_C) == 0x000310, "Wrong size on UBPW_MentalAbilityAutoTargetMarker_C");
static_assert(offsetof(UBPW_MentalAbilityAutoTargetMarker_C, UberGraphFrame) == 0x0002F8, "Member 'UBPW_MentalAbilityAutoTargetMarker_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPW_MentalAbilityAutoTargetMarker_C, Blip) == 0x000300, "Member 'UBPW_MentalAbilityAutoTargetMarker_C::Blip' has a wrong offset!");
static_assert(offsetof(UBPW_MentalAbilityAutoTargetMarker_C, Image_146) == 0x000308, "Member 'UBPW_MentalAbilityAutoTargetMarker_C::Image_146' has a wrong offset!");

}

