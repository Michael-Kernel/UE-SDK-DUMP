#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameState

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_GameState.BP_GameState_C.ExecuteUbergraph_BP_GameState
// 0x0018 (0x0018 - 0x0000)
struct BP_GameState_C_ExecuteUbergraph_BP_GameState final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_GameState_C_ExecuteUbergraph_BP_GameState) == 0x000004, "Wrong alignment on BP_GameState_C_ExecuteUbergraph_BP_GameState");
static_assert(sizeof(BP_GameState_C_ExecuteUbergraph_BP_GameState) == 0x000018, "Wrong size on BP_GameState_C_ExecuteUbergraph_BP_GameState");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, EntryPoint) == 0x000000, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_ExecuteUbergraph_BP_GameState, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_GameState_C_ExecuteUbergraph_BP_GameState::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_GameState.BP_GameState_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_GameState_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_GameState_C_ReceiveTick");
static_assert(sizeof(BP_GameState_C_ReceiveTick) == 0x000004, "Wrong size on BP_GameState_C_ReceiveTick");
static_assert(offsetof(BP_GameState_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_GameState_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_GameState.BP_GameState_C.OnOpenWorldPlayStarted
// 0x0010 (0x0010 - 0x0000)
struct BP_GameState_C_OnOpenWorldPlayStarted final
{
public:
	bool                                          CallFunc_Get_MusicSystem_valid;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MusicSystem_C*                      CallFunc_Get_MusicSystem_MusicSystem;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_C_OnOpenWorldPlayStarted) == 0x000008, "Wrong alignment on BP_GameState_C_OnOpenWorldPlayStarted");
static_assert(sizeof(BP_GameState_C_OnOpenWorldPlayStarted) == 0x000010, "Wrong size on BP_GameState_C_OnOpenWorldPlayStarted");
static_assert(offsetof(BP_GameState_C_OnOpenWorldPlayStarted, CallFunc_Get_MusicSystem_valid) == 0x000000, "Member 'BP_GameState_C_OnOpenWorldPlayStarted::CallFunc_Get_MusicSystem_valid' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_OnOpenWorldPlayStarted, CallFunc_Get_MusicSystem_MusicSystem) == 0x000008, "Member 'BP_GameState_C_OnOpenWorldPlayStarted::CallFunc_Get_MusicSystem_MusicSystem' has a wrong offset!");

// Function BP_GameState.BP_GameState_C.Get_MusicSystem
// 0x0038 (0x0038 - 0x0000)
struct BP_GameState_C_Get_MusicSystem final
{
public:
	bool                                          Valid;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MusicSystem_C*                      MusicSystem_0;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_MusicSystem_C*>              CallFunc_GetAllActorsOfClass_OutActors;            // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	class ABP_MusicSystem_C*                      CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_C_Get_MusicSystem) == 0x000008, "Wrong alignment on BP_GameState_C_Get_MusicSystem");
static_assert(sizeof(BP_GameState_C_Get_MusicSystem) == 0x000038, "Wrong size on BP_GameState_C_Get_MusicSystem");
static_assert(offsetof(BP_GameState_C_Get_MusicSystem, Valid) == 0x000000, "Member 'BP_GameState_C_Get_MusicSystem::Valid' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_Get_MusicSystem, MusicSystem_0) == 0x000008, "Member 'BP_GameState_C_Get_MusicSystem::MusicSystem_0' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_Get_MusicSystem, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_GameState_C_Get_MusicSystem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_Get_MusicSystem, CallFunc_GetAllActorsOfClass_OutActors) == 0x000018, "Member 'BP_GameState_C_Get_MusicSystem::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_Get_MusicSystem, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_GameState_C_Get_MusicSystem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameState_C_Get_MusicSystem, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000030, "Member 'BP_GameState_C_Get_MusicSystem::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

}

