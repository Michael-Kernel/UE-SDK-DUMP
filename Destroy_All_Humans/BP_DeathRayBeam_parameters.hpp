#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DeathRayBeam

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "BFGCore_structs.hpp"


namespace SDK::Params
{

// Function BP_DeathRayBeam.BP_DeathRayBeam_C.ExecuteUbergraph_BP_DeathRayBeam
// 0x02E8 (0x02E8 - 0x0000)
struct BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event__vTargetLocation4;                    // 0x000C(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__bHitTarget4;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event__bHitEnvironment1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event__vImpactNormal4;                      // 0x001C(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event__vTargetLocation3;                    // 0x0028(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__bHitTarget3;                         // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event__vImpactNormal3;                      // 0x0038(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event__vTargetLocation2;                    // 0x0050(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__bHitTarget2;                         // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event__vImpactNormal2;                      // 0x0060(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBFGDeathrayZoneData                   K2Node_Event__oDeadzone;                           // 0x0070(0x0018)(NoDestructor)
	struct FHitResult                             K2Node_Event__oHitResult;                          // 0x0088(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                K2Node_Event__vTargetLocation1;                    // 0x0110(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__bHitTarget1;                         // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event__bHitEnvironment;                     // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11E[0x2];                                      // 0x011E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event__vImpactNormal1;                      // 0x0120(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABFGWeapon*                             CallFunc_GetWeaponSafe_ReturnValue;                // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABFGWeapon*                             CallFunc_GetWeaponSafe_ReturnValue1;               // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShooting_ReturnValue;                   // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14B[0x1];                                      // 0x014B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharacterAimData                      CallFunc_GetCurrentAimData_ReturnValue;            // 0x014C(0x00CC)(NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABFGWeapon*                             K2Node_CustomEvent__pWeapon;                       // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent__bEnabled;                      // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x3];                                      // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ABFGWeapon* _pWeapon, bool _bEnabled)> K2Node_CreateDelegate_OutputDelegate;              // 0x022C(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                K2Node_Event__vTargetLocation;                     // 0x023C(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__bHitTarget;                          // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x3];                                      // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event__vImpactNormal;                       // 0x024C(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x025C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam) == 0x000008, "Wrong alignment on BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam");
static_assert(sizeof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam) == 0x0002E8, "Wrong size on BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, EntryPoint) == 0x000000, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, K2Node_Event__vTargetLocation4) == 0x00000C, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::K2Node_Event__vTargetLocation4' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, K2Node_Event__bHitTarget4) == 0x000018, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::K2Node_Event__bHitTarget4' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, K2Node_Event__bHitEnvironment1) == 0x000019, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::K2Node_Event__bHitEnvironment1' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, K2Node_Event__vImpactNormal4) == 0x00001C, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::K2Node_Event__vImpactNormal4' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, K2Node_Event__vTargetLocation3) == 0x000028, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::K2Node_Event__vTargetLocation3' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, K2Node_Event__bHitTarget3) == 0x000034, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::K2Node_Event__bHitTarget3' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, K2Node_Event__vImpactNormal3) == 0x000038, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::K2Node_Event__vImpactNormal3' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000044, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, K2Node_Event__vTargetLocation2) == 0x000050, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::K2Node_Event__vTargetLocation2' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, K2Node_Event__bHitTarget2) == 0x00005C, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::K2Node_Event__bHitTarget2' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, K2Node_Event__vImpactNormal2) == 0x000060, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::K2Node_Event__vImpactNormal2' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, Temp_bool_Has_Been_Initd_Variable) == 0x00006C, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, K2Node_Event__oDeadzone) == 0x000070, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::K2Node_Event__oDeadzone' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, K2Node_Event__oHitResult) == 0x000088, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::K2Node_Event__oHitResult' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, K2Node_Event__vTargetLocation1) == 0x000110, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::K2Node_Event__vTargetLocation1' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, K2Node_Event__bHitTarget1) == 0x00011C, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::K2Node_Event__bHitTarget1' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, K2Node_Event__bHitEnvironment) == 0x00011D, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::K2Node_Event__bHitEnvironment' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, K2Node_Event__vImpactNormal1) == 0x000120, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::K2Node_Event__vImpactNormal1' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000130, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, CallFunc_GetWeaponSafe_ReturnValue) == 0x000138, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::CallFunc_GetWeaponSafe_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, CallFunc_GetWeaponSafe_ReturnValue1) == 0x000140, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::CallFunc_GetWeaponSafe_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, CallFunc_IsValid_ReturnValue) == 0x000148, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, CallFunc_IsValid_ReturnValue1) == 0x000149, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, CallFunc_IsShooting_ReturnValue) == 0x00014A, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::CallFunc_IsShooting_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, CallFunc_GetCurrentAimData_ReturnValue) == 0x00014C, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::CallFunc_GetCurrentAimData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, CallFunc_IsValid_ReturnValue2) == 0x000218, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, K2Node_CustomEvent__pWeapon) == 0x000220, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::K2Node_CustomEvent__pWeapon' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, K2Node_CustomEvent__bEnabled) == 0x000228, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::K2Node_CustomEvent__bEnabled' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, K2Node_CreateDelegate_OutputDelegate) == 0x00022C, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, K2Node_Event__vTargetLocation) == 0x00023C, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::K2Node_Event__vTargetLocation' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, K2Node_Event__bHitTarget) == 0x000248, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::K2Node_Event__bHitTarget' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, K2Node_Event__vImpactNormal) == 0x00024C, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::K2Node_Event__vImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000258, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam, CallFunc_MakeHitResult_ReturnValue) == 0x00025C, "Member 'BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");

// Function BP_DeathRayBeam.BP_DeathRayBeam_C.UpdateBeamOnOcean
// 0x001C (0x001C - 0x0000)
struct BP_DeathRayBeam_C_UpdateBeamOnOcean final
{
public:
	struct FVector                                _vTargetLocation;                                  // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _bHitTarget;                                       // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                _vImpactNormal;                                    // 0x0010(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeathRayBeam_C_UpdateBeamOnOcean) == 0x000004, "Wrong alignment on BP_DeathRayBeam_C_UpdateBeamOnOcean");
static_assert(sizeof(BP_DeathRayBeam_C_UpdateBeamOnOcean) == 0x00001C, "Wrong size on BP_DeathRayBeam_C_UpdateBeamOnOcean");
static_assert(offsetof(BP_DeathRayBeam_C_UpdateBeamOnOcean, _vTargetLocation) == 0x000000, "Member 'BP_DeathRayBeam_C_UpdateBeamOnOcean::_vTargetLocation' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_UpdateBeamOnOcean, _bHitTarget) == 0x00000C, "Member 'BP_DeathRayBeam_C_UpdateBeamOnOcean::_bHitTarget' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_UpdateBeamOnOcean, _vImpactNormal) == 0x000010, "Member 'BP_DeathRayBeam_C_UpdateBeamOnOcean::_vImpactNormal' has a wrong offset!");

// Function BP_DeathRayBeam.BP_DeathRayBeam_C.OnWeaponEquipStateChanged
// 0x0010 (0x0010 - 0x0000)
struct BP_DeathRayBeam_C_OnWeaponEquipStateChanged final
{
public:
	class ABFGWeapon*                             _pWeapon;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _bEnabled;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DeathRayBeam_C_OnWeaponEquipStateChanged) == 0x000008, "Wrong alignment on BP_DeathRayBeam_C_OnWeaponEquipStateChanged");
static_assert(sizeof(BP_DeathRayBeam_C_OnWeaponEquipStateChanged) == 0x000010, "Wrong size on BP_DeathRayBeam_C_OnWeaponEquipStateChanged");
static_assert(offsetof(BP_DeathRayBeam_C_OnWeaponEquipStateChanged, _pWeapon) == 0x000000, "Member 'BP_DeathRayBeam_C_OnWeaponEquipStateChanged::_pWeapon' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_OnWeaponEquipStateChanged, _bEnabled) == 0x000008, "Member 'BP_DeathRayBeam_C_OnWeaponEquipStateChanged::_bEnabled' has a wrong offset!");

// Function BP_DeathRayBeam.BP_DeathRayBeam_C.OnBeamDelayStarted
// 0x001C (0x001C - 0x0000)
struct BP_DeathRayBeam_C_OnBeamDelayStarted final
{
public:
	struct FVector                                _vTargetLocation;                                  // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _bHitTarget;                                       // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          _bHitEnvironment;                                  // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                _vImpactNormal;                                    // 0x0010(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeathRayBeam_C_OnBeamDelayStarted) == 0x000004, "Wrong alignment on BP_DeathRayBeam_C_OnBeamDelayStarted");
static_assert(sizeof(BP_DeathRayBeam_C_OnBeamDelayStarted) == 0x00001C, "Wrong size on BP_DeathRayBeam_C_OnBeamDelayStarted");
static_assert(offsetof(BP_DeathRayBeam_C_OnBeamDelayStarted, _vTargetLocation) == 0x000000, "Member 'BP_DeathRayBeam_C_OnBeamDelayStarted::_vTargetLocation' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_OnBeamDelayStarted, _bHitTarget) == 0x00000C, "Member 'BP_DeathRayBeam_C_OnBeamDelayStarted::_bHitTarget' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_OnBeamDelayStarted, _bHitEnvironment) == 0x00000D, "Member 'BP_DeathRayBeam_C_OnBeamDelayStarted::_bHitEnvironment' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_OnBeamDelayStarted, _vImpactNormal) == 0x000010, "Member 'BP_DeathRayBeam_C_OnBeamDelayStarted::_vImpactNormal' has a wrong offset!");

// Function BP_DeathRayBeam.BP_DeathRayBeam_C.OnHitFoliage
// 0x0088 (0x0088 - 0x0000)
struct BP_DeathRayBeam_C_OnHitFoliage final
{
public:
	struct FHitResult                             _oHitResult;                                       // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_DeathRayBeam_C_OnHitFoliage) == 0x000004, "Wrong alignment on BP_DeathRayBeam_C_OnHitFoliage");
static_assert(sizeof(BP_DeathRayBeam_C_OnHitFoliage) == 0x000088, "Wrong size on BP_DeathRayBeam_C_OnHitFoliage");
static_assert(offsetof(BP_DeathRayBeam_C_OnHitFoliage, _oHitResult) == 0x000000, "Member 'BP_DeathRayBeam_C_OnHitFoliage::_oHitResult' has a wrong offset!");

// Function BP_DeathRayBeam.BP_DeathRayBeam_C.OnTickDeadzone
// 0x0018 (0x0018 - 0x0000)
struct BP_DeathRayBeam_C_OnTickDeadzone final
{
public:
	struct FBFGDeathrayZoneData                   _oDeadzone;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_DeathRayBeam_C_OnTickDeadzone) == 0x000004, "Wrong alignment on BP_DeathRayBeam_C_OnTickDeadzone");
static_assert(sizeof(BP_DeathRayBeam_C_OnTickDeadzone) == 0x000018, "Wrong size on BP_DeathRayBeam_C_OnTickDeadzone");
static_assert(offsetof(BP_DeathRayBeam_C_OnTickDeadzone, _oDeadzone) == 0x000000, "Member 'BP_DeathRayBeam_C_OnTickDeadzone::_oDeadzone' has a wrong offset!");

// Function BP_DeathRayBeam.BP_DeathRayBeam_C.UpdateBeamWhileInactive
// 0x001C (0x001C - 0x0000)
struct BP_DeathRayBeam_C_UpdateBeamWhileInactive final
{
public:
	struct FVector                                _vTargetLocation;                                  // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _bHitTarget;                                       // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                _vImpactNormal;                                    // 0x0010(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeathRayBeam_C_UpdateBeamWhileInactive) == 0x000004, "Wrong alignment on BP_DeathRayBeam_C_UpdateBeamWhileInactive");
static_assert(sizeof(BP_DeathRayBeam_C_UpdateBeamWhileInactive) == 0x00001C, "Wrong size on BP_DeathRayBeam_C_UpdateBeamWhileInactive");
static_assert(offsetof(BP_DeathRayBeam_C_UpdateBeamWhileInactive, _vTargetLocation) == 0x000000, "Member 'BP_DeathRayBeam_C_UpdateBeamWhileInactive::_vTargetLocation' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_UpdateBeamWhileInactive, _bHitTarget) == 0x00000C, "Member 'BP_DeathRayBeam_C_UpdateBeamWhileInactive::_bHitTarget' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_UpdateBeamWhileInactive, _vImpactNormal) == 0x000010, "Member 'BP_DeathRayBeam_C_UpdateBeamWhileInactive::_vImpactNormal' has a wrong offset!");

// Function BP_DeathRayBeam.BP_DeathRayBeam_C.UpdateBeam
// 0x001C (0x001C - 0x0000)
struct BP_DeathRayBeam_C_UpdateBeam final
{
public:
	struct FVector                                _vTargetLocation;                                  // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _bHitTarget;                                       // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                _vImpactNormal;                                    // 0x0010(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeathRayBeam_C_UpdateBeam) == 0x000004, "Wrong alignment on BP_DeathRayBeam_C_UpdateBeam");
static_assert(sizeof(BP_DeathRayBeam_C_UpdateBeam) == 0x00001C, "Wrong size on BP_DeathRayBeam_C_UpdateBeam");
static_assert(offsetof(BP_DeathRayBeam_C_UpdateBeam, _vTargetLocation) == 0x000000, "Member 'BP_DeathRayBeam_C_UpdateBeam::_vTargetLocation' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_UpdateBeam, _bHitTarget) == 0x00000C, "Member 'BP_DeathRayBeam_C_UpdateBeam::_bHitTarget' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_UpdateBeam, _vImpactNormal) == 0x000010, "Member 'BP_DeathRayBeam_C_UpdateBeam::_vImpactNormal' has a wrong offset!");

// Function BP_DeathRayBeam.BP_DeathRayBeam_C.StartBeam
// 0x001C (0x001C - 0x0000)
struct BP_DeathRayBeam_C_StartBeam final
{
public:
	struct FVector                                _vTargetLocation;                                  // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _bHitTarget;                                       // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          _bHitEnvironment;                                  // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                _vImpactNormal;                                    // 0x0010(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeathRayBeam_C_StartBeam) == 0x000004, "Wrong alignment on BP_DeathRayBeam_C_StartBeam");
static_assert(sizeof(BP_DeathRayBeam_C_StartBeam) == 0x00001C, "Wrong size on BP_DeathRayBeam_C_StartBeam");
static_assert(offsetof(BP_DeathRayBeam_C_StartBeam, _vTargetLocation) == 0x000000, "Member 'BP_DeathRayBeam_C_StartBeam::_vTargetLocation' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_StartBeam, _bHitTarget) == 0x00000C, "Member 'BP_DeathRayBeam_C_StartBeam::_bHitTarget' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_StartBeam, _bHitEnvironment) == 0x00000D, "Member 'BP_DeathRayBeam_C_StartBeam::_bHitEnvironment' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_StartBeam, _vImpactNormal) == 0x000010, "Member 'BP_DeathRayBeam_C_StartBeam::_vImpactNormal' has a wrong offset!");

// Function BP_DeathRayBeam.BP_DeathRayBeam_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_DeathRayBeam_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeathRayBeam_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_DeathRayBeam_C_ReceiveTick");
static_assert(sizeof(BP_DeathRayBeam_C_ReceiveTick) == 0x000004, "Wrong size on BP_DeathRayBeam_C_ReceiveTick");
static_assert(offsetof(BP_DeathRayBeam_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_DeathRayBeam_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_DeathRayBeam.BP_DeathRayBeam_C.UserConstructionScript
// 0x0008 (0x0008 - 0x0000)
struct BP_DeathRayBeam_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeathRayBeam_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_DeathRayBeam_C_UserConstructionScript");
static_assert(sizeof(BP_DeathRayBeam_C_UserConstructionScript) == 0x000008, "Wrong size on BP_DeathRayBeam_C_UserConstructionScript");
static_assert(offsetof(BP_DeathRayBeam_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BP_DeathRayBeam_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function BP_DeathRayBeam.BP_DeathRayBeam_C.HandleUpdateBeamVFX
// 0x0060 (0x0060 - 0x0000)
struct BP_DeathRayBeam_C_HandleUpdateBeamVFX final
{
public:
	struct FVector                                Target;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Source;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalTarget;                                       // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalSource;                                       // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeathRayBeam_C_HandleUpdateBeamVFX) == 0x000004, "Wrong alignment on BP_DeathRayBeam_C_HandleUpdateBeamVFX");
static_assert(sizeof(BP_DeathRayBeam_C_HandleUpdateBeamVFX) == 0x000060, "Wrong size on BP_DeathRayBeam_C_HandleUpdateBeamVFX");
static_assert(offsetof(BP_DeathRayBeam_C_HandleUpdateBeamVFX, Target) == 0x000000, "Member 'BP_DeathRayBeam_C_HandleUpdateBeamVFX::Target' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleUpdateBeamVFX, Source) == 0x00000C, "Member 'BP_DeathRayBeam_C_HandleUpdateBeamVFX::Source' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleUpdateBeamVFX, LocalTarget) == 0x000018, "Member 'BP_DeathRayBeam_C_HandleUpdateBeamVFX::LocalTarget' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleUpdateBeamVFX, LocalSource) == 0x000024, "Member 'BP_DeathRayBeam_C_HandleUpdateBeamVFX::LocalSource' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleUpdateBeamVFX, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000030, "Member 'BP_DeathRayBeam_C_HandleUpdateBeamVFX::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleUpdateBeamVFX, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000040, "Member 'BP_DeathRayBeam_C_HandleUpdateBeamVFX::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleUpdateBeamVFX, CallFunc_VSize_ReturnValue) == 0x00004C, "Member 'BP_DeathRayBeam_C_HandleUpdateBeamVFX::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleUpdateBeamVFX, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_DeathRayBeam_C_HandleUpdateBeamVFX::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleUpdateBeamVFX, CallFunc_MakeVector_ReturnValue) == 0x000054, "Member 'BP_DeathRayBeam_C_HandleUpdateBeamVFX::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_DeathRayBeam.BP_DeathRayBeam_C.HandleStartBeam
// 0x00B0 (0x00B0 - 0x0000)
struct BP_DeathRayBeam_C_HandleStartBeam final
{
public:
	struct FVector                                InTargetLocation;                                  // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0018(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeathRayBeam_C_HandleStartBeam) == 0x000008, "Wrong alignment on BP_DeathRayBeam_C_HandleStartBeam");
static_assert(sizeof(BP_DeathRayBeam_C_HandleStartBeam) == 0x0000B0, "Wrong size on BP_DeathRayBeam_C_HandleStartBeam");
static_assert(offsetof(BP_DeathRayBeam_C_HandleStartBeam, InTargetLocation) == 0x000000, "Member 'BP_DeathRayBeam_C_HandleStartBeam::InTargetLocation' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleStartBeam, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_DeathRayBeam_C_HandleStartBeam::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleStartBeam, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000018, "Member 'BP_DeathRayBeam_C_HandleStartBeam::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleStartBeam, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000A0, "Member 'BP_DeathRayBeam_C_HandleStartBeam::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_DeathRayBeam.BP_DeathRayBeam_C.HandleStopBeam
// 0x0018 (0x0018 - 0x0000)
struct BP_DeathRayBeam_C_HandleStopBeam final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeathRayBeam_C_HandleStopBeam) == 0x000008, "Wrong alignment on BP_DeathRayBeam_C_HandleStopBeam");
static_assert(sizeof(BP_DeathRayBeam_C_HandleStopBeam) == 0x000018, "Wrong size on BP_DeathRayBeam_C_HandleStopBeam");
static_assert(offsetof(BP_DeathRayBeam_C_HandleStopBeam, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_DeathRayBeam_C_HandleStopBeam::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleStopBeam, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_DeathRayBeam_C_HandleStopBeam::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_DeathRayBeam.BP_DeathRayBeam_C.HandleUpdateBeam
// 0x0258 (0x0258 - 0x0000)
struct BP_DeathRayBeam_C_HandleUpdateBeam final
{
public:
	struct FVector                                InTargetLocation;                                  // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InHitTarget;                                       // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                InImpactNormal;                                    // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BurningDuration;                                   // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCharacterAimData                      CallFunc_GetCurrentAimData_ReturnValue;            // 0x0058(0x00CC)(ConstParm, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x013C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult1;      // 0x01C4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x024C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeathRayBeam_C_HandleUpdateBeam) == 0x000004, "Wrong alignment on BP_DeathRayBeam_C_HandleUpdateBeam");
static_assert(sizeof(BP_DeathRayBeam_C_HandleUpdateBeam) == 0x000258, "Wrong size on BP_DeathRayBeam_C_HandleUpdateBeam");
static_assert(offsetof(BP_DeathRayBeam_C_HandleUpdateBeam, InTargetLocation) == 0x000000, "Member 'BP_DeathRayBeam_C_HandleUpdateBeam::InTargetLocation' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleUpdateBeam, InHitTarget) == 0x00000C, "Member 'BP_DeathRayBeam_C_HandleUpdateBeam::InHitTarget' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleUpdateBeam, InImpactNormal) == 0x000010, "Member 'BP_DeathRayBeam_C_HandleUpdateBeam::InImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleUpdateBeam, BurningDuration) == 0x00001C, "Member 'BP_DeathRayBeam_C_HandleUpdateBeam::BurningDuration' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleUpdateBeam, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_DeathRayBeam_C_HandleUpdateBeam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleUpdateBeam, CallFunc_IsValid_ReturnValue1) == 0x000021, "Member 'BP_DeathRayBeam_C_HandleUpdateBeam::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleUpdateBeam, CallFunc_GetActorBounds_Origin) == 0x000024, "Member 'BP_DeathRayBeam_C_HandleUpdateBeam::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleUpdateBeam, CallFunc_GetActorBounds_BoxExtent) == 0x000030, "Member 'BP_DeathRayBeam_C_HandleUpdateBeam::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleUpdateBeam, CallFunc_BreakVector_X) == 0x00003C, "Member 'BP_DeathRayBeam_C_HandleUpdateBeam::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleUpdateBeam, CallFunc_BreakVector_Y) == 0x000040, "Member 'BP_DeathRayBeam_C_HandleUpdateBeam::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleUpdateBeam, CallFunc_BreakVector_Z) == 0x000044, "Member 'BP_DeathRayBeam_C_HandleUpdateBeam::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleUpdateBeam, CallFunc_BreakVector2D_X) == 0x000048, "Member 'BP_DeathRayBeam_C_HandleUpdateBeam::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleUpdateBeam, CallFunc_BreakVector2D_Y) == 0x00004C, "Member 'BP_DeathRayBeam_C_HandleUpdateBeam::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleUpdateBeam, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_DeathRayBeam_C_HandleUpdateBeam::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleUpdateBeam, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x000054, "Member 'BP_DeathRayBeam_C_HandleUpdateBeam::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleUpdateBeam, CallFunc_GetCurrentAimData_ReturnValue) == 0x000058, "Member 'BP_DeathRayBeam_C_HandleUpdateBeam::CallFunc_GetCurrentAimData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleUpdateBeam, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000124, "Member 'BP_DeathRayBeam_C_HandleUpdateBeam::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleUpdateBeam, CallFunc_Add_VectorVector_ReturnValue) == 0x000130, "Member 'BP_DeathRayBeam_C_HandleUpdateBeam::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleUpdateBeam, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x00013C, "Member 'BP_DeathRayBeam_C_HandleUpdateBeam::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleUpdateBeam, CallFunc_K2_SetWorldLocation_SweepHitResult1) == 0x0001C4, "Member 'BP_DeathRayBeam_C_HandleUpdateBeam::CallFunc_K2_SetWorldLocation_SweepHitResult1' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleUpdateBeam, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00024C, "Member 'BP_DeathRayBeam_C_HandleUpdateBeam::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_DeathRayBeam.BP_DeathRayBeam_C.HandleBeamWhenInactive
// 0x014C (0x014C - 0x0000)
struct BP_DeathRayBeam_C_HandleBeamWhenInactive final
{
public:
	struct FVector                                InTargetLocation;                                  // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InTargetNormal;                                    // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0030(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult1;      // 0x00B8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeathRayBeam_C_HandleBeamWhenInactive) == 0x000004, "Wrong alignment on BP_DeathRayBeam_C_HandleBeamWhenInactive");
static_assert(sizeof(BP_DeathRayBeam_C_HandleBeamWhenInactive) == 0x00014C, "Wrong size on BP_DeathRayBeam_C_HandleBeamWhenInactive");
static_assert(offsetof(BP_DeathRayBeam_C_HandleBeamWhenInactive, InTargetLocation) == 0x000000, "Member 'BP_DeathRayBeam_C_HandleBeamWhenInactive::InTargetLocation' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleBeamWhenInactive, InTargetNormal) == 0x00000C, "Member 'BP_DeathRayBeam_C_HandleBeamWhenInactive::InTargetNormal' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleBeamWhenInactive, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000018, "Member 'BP_DeathRayBeam_C_HandleBeamWhenInactive::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleBeamWhenInactive, CallFunc_Add_VectorVector_ReturnValue) == 0x000024, "Member 'BP_DeathRayBeam_C_HandleBeamWhenInactive::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleBeamWhenInactive, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000030, "Member 'BP_DeathRayBeam_C_HandleBeamWhenInactive::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleBeamWhenInactive, CallFunc_K2_SetWorldLocation_SweepHitResult1) == 0x0000B8, "Member 'BP_DeathRayBeam_C_HandleBeamWhenInactive::CallFunc_K2_SetWorldLocation_SweepHitResult1' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HandleBeamWhenInactive, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000140, "Member 'BP_DeathRayBeam_C_HandleBeamWhenInactive::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_DeathRayBeam.BP_DeathRayBeam_C.HitWater
// 0x0200 (0x0200 - 0x0000)
struct BP_DeathRayBeam_C_HitWater final
{
public:
	struct FHitResult                             HitRes;                                            // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABFGWeapon*                             CallFunc_GetWeaponSafe_ReturnValue;                // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetCollisionProfileName_ReturnValue;      // 0x0114(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCollisionProfileName_ReturnValue;       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP__deathRay_water_hit_C*              CallFunc_FinishSpawningActor_ReturnValue;          // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0168(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DeathRayBeam_C_HitWater) == 0x000010, "Wrong alignment on BP_DeathRayBeam_C_HitWater");
static_assert(sizeof(BP_DeathRayBeam_C_HitWater) == 0x000200, "Wrong size on BP_DeathRayBeam_C_HitWater");
static_assert(offsetof(BP_DeathRayBeam_C_HitWater, HitRes) == 0x000000, "Member 'BP_DeathRayBeam_C_HitWater::HitRes' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitWater, CallFunc_BreakHitResult_bBlockingHit) == 0x000088, "Member 'BP_DeathRayBeam_C_HitWater::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitWater, CallFunc_BreakHitResult_bInitialOverlap) == 0x000089, "Member 'BP_DeathRayBeam_C_HitWater::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitWater, CallFunc_BreakHitResult_Time) == 0x00008C, "Member 'BP_DeathRayBeam_C_HitWater::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitWater, CallFunc_BreakHitResult_Distance) == 0x000090, "Member 'BP_DeathRayBeam_C_HitWater::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitWater, CallFunc_BreakHitResult_Location) == 0x000094, "Member 'BP_DeathRayBeam_C_HitWater::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitWater, CallFunc_BreakHitResult_ImpactPoint) == 0x0000A0, "Member 'BP_DeathRayBeam_C_HitWater::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitWater, CallFunc_BreakHitResult_Normal) == 0x0000AC, "Member 'BP_DeathRayBeam_C_HitWater::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitWater, CallFunc_BreakHitResult_ImpactNormal) == 0x0000B8, "Member 'BP_DeathRayBeam_C_HitWater::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitWater, CallFunc_BreakHitResult_PhysMat) == 0x0000C8, "Member 'BP_DeathRayBeam_C_HitWater::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitWater, CallFunc_BreakHitResult_HitActor) == 0x0000D0, "Member 'BP_DeathRayBeam_C_HitWater::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitWater, CallFunc_BreakHitResult_HitComponent) == 0x0000D8, "Member 'BP_DeathRayBeam_C_HitWater::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitWater, CallFunc_BreakHitResult_HitBoneName) == 0x0000E0, "Member 'BP_DeathRayBeam_C_HitWater::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitWater, CallFunc_BreakHitResult_HitItem) == 0x0000E8, "Member 'BP_DeathRayBeam_C_HitWater::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitWater, CallFunc_BreakHitResult_FaceIndex) == 0x0000EC, "Member 'BP_DeathRayBeam_C_HitWater::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitWater, CallFunc_BreakHitResult_TraceStart) == 0x0000F0, "Member 'BP_DeathRayBeam_C_HitWater::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitWater, CallFunc_BreakHitResult_TraceEnd) == 0x0000FC, "Member 'BP_DeathRayBeam_C_HitWater::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitWater, CallFunc_GetWeaponSafe_ReturnValue) == 0x000108, "Member 'BP_DeathRayBeam_C_HitWater::CallFunc_GetWeaponSafe_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitWater, CallFunc_IsValid_ReturnValue) == 0x000110, "Member 'BP_DeathRayBeam_C_HitWater::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitWater, CallFunc_IsValid_ReturnValue1) == 0x000111, "Member 'BP_DeathRayBeam_C_HitWater::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitWater, CallFunc_GetCollisionProfileName_ReturnValue) == 0x000114, "Member 'BP_DeathRayBeam_C_HitWater::CallFunc_GetCollisionProfileName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitWater, CallFunc_MakeTransform_ReturnValue) == 0x000120, "Member 'BP_DeathRayBeam_C_HitWater::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitWater, CallFunc_IsCollisionProfileName_ReturnValue) == 0x000150, "Member 'BP_DeathRayBeam_C_HitWater::CallFunc_IsCollisionProfileName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitWater, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000158, "Member 'BP_DeathRayBeam_C_HitWater::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitWater, CallFunc_FinishSpawningActor_ReturnValue) == 0x000160, "Member 'BP_DeathRayBeam_C_HitWater::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitWater, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000168, "Member 'BP_DeathRayBeam_C_HitWater::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitWater, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0001F0, "Member 'BP_DeathRayBeam_C_HitWater::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitWater, CallFunc_IsValid_ReturnValue2) == 0x0001F1, "Member 'BP_DeathRayBeam_C_HitWater::CallFunc_IsValid_ReturnValue2' has a wrong offset!");

// Function BP_DeathRayBeam.BP_DeathRayBeam_C.HitOcean
// 0x01F0 (0x01F0 - 0x0000)
struct BP_DeathRayBeam_C_HitOcean final
{
public:
	struct FHitResult                             HitRes;                                            // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABFGWeapon*                             CallFunc_GetWeaponSafe_ReturnValue;                // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112[0xE];                                      // 0x0112(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0150(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP__deathRay_water_hit_C*              CallFunc_FinishSpawningActor_ReturnValue;          // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeathRayBeam_C_HitOcean) == 0x000010, "Wrong alignment on BP_DeathRayBeam_C_HitOcean");
static_assert(sizeof(BP_DeathRayBeam_C_HitOcean) == 0x0001F0, "Wrong size on BP_DeathRayBeam_C_HitOcean");
static_assert(offsetof(BP_DeathRayBeam_C_HitOcean, HitRes) == 0x000000, "Member 'BP_DeathRayBeam_C_HitOcean::HitRes' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitOcean, CallFunc_BreakHitResult_bBlockingHit) == 0x000088, "Member 'BP_DeathRayBeam_C_HitOcean::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitOcean, CallFunc_BreakHitResult_bInitialOverlap) == 0x000089, "Member 'BP_DeathRayBeam_C_HitOcean::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitOcean, CallFunc_BreakHitResult_Time) == 0x00008C, "Member 'BP_DeathRayBeam_C_HitOcean::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitOcean, CallFunc_BreakHitResult_Distance) == 0x000090, "Member 'BP_DeathRayBeam_C_HitOcean::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitOcean, CallFunc_BreakHitResult_Location) == 0x000094, "Member 'BP_DeathRayBeam_C_HitOcean::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitOcean, CallFunc_BreakHitResult_ImpactPoint) == 0x0000A0, "Member 'BP_DeathRayBeam_C_HitOcean::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitOcean, CallFunc_BreakHitResult_Normal) == 0x0000AC, "Member 'BP_DeathRayBeam_C_HitOcean::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitOcean, CallFunc_BreakHitResult_ImpactNormal) == 0x0000B8, "Member 'BP_DeathRayBeam_C_HitOcean::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitOcean, CallFunc_BreakHitResult_PhysMat) == 0x0000C8, "Member 'BP_DeathRayBeam_C_HitOcean::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitOcean, CallFunc_BreakHitResult_HitActor) == 0x0000D0, "Member 'BP_DeathRayBeam_C_HitOcean::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitOcean, CallFunc_BreakHitResult_HitComponent) == 0x0000D8, "Member 'BP_DeathRayBeam_C_HitOcean::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitOcean, CallFunc_BreakHitResult_HitBoneName) == 0x0000E0, "Member 'BP_DeathRayBeam_C_HitOcean::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitOcean, CallFunc_BreakHitResult_HitItem) == 0x0000E8, "Member 'BP_DeathRayBeam_C_HitOcean::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitOcean, CallFunc_BreakHitResult_FaceIndex) == 0x0000EC, "Member 'BP_DeathRayBeam_C_HitOcean::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitOcean, CallFunc_BreakHitResult_TraceStart) == 0x0000F0, "Member 'BP_DeathRayBeam_C_HitOcean::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitOcean, CallFunc_BreakHitResult_TraceEnd) == 0x0000FC, "Member 'BP_DeathRayBeam_C_HitOcean::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitOcean, CallFunc_GetWeaponSafe_ReturnValue) == 0x000108, "Member 'BP_DeathRayBeam_C_HitOcean::CallFunc_GetWeaponSafe_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitOcean, CallFunc_IsValid_ReturnValue) == 0x000110, "Member 'BP_DeathRayBeam_C_HitOcean::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitOcean, CallFunc_IsValid_ReturnValue1) == 0x000111, "Member 'BP_DeathRayBeam_C_HitOcean::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitOcean, CallFunc_MakeTransform_ReturnValue) == 0x000120, "Member 'BP_DeathRayBeam_C_HitOcean::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitOcean, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000150, "Member 'BP_DeathRayBeam_C_HitOcean::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitOcean, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0001D8, "Member 'BP_DeathRayBeam_C_HitOcean::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitOcean, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0001E0, "Member 'BP_DeathRayBeam_C_HitOcean::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathRayBeam_C_HitOcean, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001E8, "Member 'BP_DeathRayBeam_C_HitOcean::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

}

