#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MusicSystem

#include "Basic.hpp"

#include "Enum_MusicType_structs.hpp"


namespace SDK::Params
{

// Function BP_MusicSystem.BP_MusicSystem_C.ExecuteUbergraph_BP_MusicSystem
// 0x0138 (0x0138 - 0x0000)
struct BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue1;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue1;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue2;             // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_MusicSystem_Data_C*>         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0060(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_GetCurrentResponseLevelIndex_ReturnValue; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MusicSystem_Data_C*                 CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue2;            // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue1;         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABFGGameState*                          K2Node_DynamicCast_AsBFGGame_State;                // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGAlertSystemManager*                 CallFunc_GetAlertSystemManager_ReturnValue;        // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue1;           // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentResponseLevelIndex_ReturnValue1; // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue2;         // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DB[0x1];                                       // 0x00DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_The_Player_valid;                     // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABFGPlayerCharacter*                    CallFunc_Get_The_Player_Output_Player;             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem) == 0x000008, "Wrong alignment on BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem");
static_assert(sizeof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem) == 0x000138, "Wrong size on BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, EntryPoint) == 0x000000, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, CallFunc_Conv_IntToString_ReturnValue) == 0x000008, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000018, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, K2Node_SwitchInteger_CmpSuccess) == 0x000019, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, CallFunc_Conv_IntToString_ReturnValue1) == 0x000020, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::CallFunc_Conv_IntToString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000040, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, CallFunc_Concat_StrStr_ReturnValue1) == 0x000048, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, CallFunc_NotEqual_IntInt_ReturnValue1) == 0x000058, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::CallFunc_NotEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, CallFunc_NotEqual_IntInt_ReturnValue2) == 0x000059, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::CallFunc_NotEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00005A, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, CallFunc_BooleanAND_ReturnValue) == 0x00005B, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, CallFunc_GetAllActorsOfClass_OutActors) == 0x000060, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, CallFunc_GetCurrentResponseLevelIndex_ReturnValue) == 0x000070, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::CallFunc_GetCurrentResponseLevelIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000080, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, CallFunc_Conv_IntToString_ReturnValue2) == 0x000088, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::CallFunc_Conv_IntToString_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, CallFunc_GreaterEqual_IntInt_ReturnValue1) == 0x000098, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::CallFunc_GreaterEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, CallFunc_Concat_StrStr_ReturnValue2) == 0x0000A0, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, CallFunc_GetGameState_ReturnValue) == 0x0000B0, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, K2Node_DynamicCast_AsBFGGame_State) == 0x0000B8, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::K2Node_DynamicCast_AsBFGGame_State' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, CallFunc_GetAlertSystemManager_ReturnValue) == 0x0000C8, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::CallFunc_GetAlertSystemManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, CallFunc_EqualEqual_IntInt_ReturnValue1) == 0x0000D0, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::CallFunc_EqualEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, CallFunc_GetCurrentResponseLevelIndex_ReturnValue1) == 0x0000D4, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::CallFunc_GetCurrentResponseLevelIndex_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, CallFunc_GreaterEqual_IntInt_ReturnValue2) == 0x0000D8, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::CallFunc_GreaterEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, CallFunc_BooleanAND_ReturnValue1) == 0x0000D9, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, CallFunc_BooleanAND_ReturnValue2) == 0x0000DA, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000DC, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000E0, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, K2Node_Event_DeltaSeconds) == 0x0000E4, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, Temp_bool_Variable) == 0x0000E8, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, CallFunc_Get_The_Player_valid) == 0x0000E9, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::CallFunc_Get_The_Player_valid' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, CallFunc_Get_The_Player_Output_Player) == 0x0000F0, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::CallFunc_Get_The_Player_Output_Player' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, CallFunc_Conv_FloatToString_ReturnValue) == 0x0000F8, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x000108, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, K2Node_DynamicCast_bSuccess1) == 0x000118, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, CallFunc_Concat_StrStr_ReturnValue3) == 0x000120, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000130, "Member 'BP_MusicSystem_C_ExecuteUbergraph_BP_MusicSystem::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");

// Function BP_MusicSystem.BP_MusicSystem_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_MusicSystem_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MusicSystem_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_MusicSystem_C_ReceiveTick");
static_assert(sizeof(BP_MusicSystem_C_ReceiveTick) == 0x000004, "Wrong size on BP_MusicSystem_C_ReceiveTick");
static_assert(offsetof(BP_MusicSystem_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_MusicSystem_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_MusicSystem.BP_MusicSystem_C.Music_Override_By_Quest
// 0x0002 (0x0002 - 0x0000)
struct BP_MusicSystem_C_Music_Override_By_Quest final
{
public:
	Enum_MusicType                                Force_Music_Type;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicSystem_C_Music_Override_By_Quest) == 0x000001, "Wrong alignment on BP_MusicSystem_C_Music_Override_By_Quest");
static_assert(sizeof(BP_MusicSystem_C_Music_Override_By_Quest) == 0x000002, "Wrong size on BP_MusicSystem_C_Music_Override_By_Quest");
static_assert(offsetof(BP_MusicSystem_C_Music_Override_By_Quest, Force_Music_Type) == 0x000000, "Member 'BP_MusicSystem_C_Music_Override_By_Quest::Force_Music_Type' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_Music_Override_By_Quest, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_MusicSystem_C_Music_Override_By_Quest::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_MusicSystem.BP_MusicSystem_C.Fadeout_Track
// 0x0010 (0x0010 - 0x0000)
struct BP_MusicSystem_C_Fadeout_Track final
{
public:
	class UAudioComponent*                        Which_Track;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Override_FadeTime;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicSystem_C_Fadeout_Track) == 0x000008, "Wrong alignment on BP_MusicSystem_C_Fadeout_Track");
static_assert(sizeof(BP_MusicSystem_C_Fadeout_Track) == 0x000010, "Wrong size on BP_MusicSystem_C_Fadeout_Track");
static_assert(offsetof(BP_MusicSystem_C_Fadeout_Track, Which_Track) == 0x000000, "Member 'BP_MusicSystem_C_Fadeout_Track::Which_Track' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_Fadeout_Track, Override_FadeTime) == 0x000008, "Member 'BP_MusicSystem_C_Fadeout_Track::Override_FadeTime' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_Fadeout_Track, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_MusicSystem_C_Fadeout_Track::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_Fadeout_Track, CallFunc_IsPlaying_ReturnValue) == 0x00000D, "Member 'BP_MusicSystem_C_Fadeout_Track::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");

// Function BP_MusicSystem.BP_MusicSystem_C.Fadein_Track
// 0x0010 (0x0010 - 0x0000)
struct BP_MusicSystem_C_Fadein_Track final
{
public:
	class UAudioComponent*                        Which_Track;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicSystem_C_Fadein_Track) == 0x000008, "Wrong alignment on BP_MusicSystem_C_Fadein_Track");
static_assert(sizeof(BP_MusicSystem_C_Fadein_Track) == 0x000010, "Wrong size on BP_MusicSystem_C_Fadein_Track");
static_assert(offsetof(BP_MusicSystem_C_Fadein_Track, Which_Track) == 0x000000, "Member 'BP_MusicSystem_C_Fadein_Track::Which_Track' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_Fadein_Track, CallFunc_IsPlaying_ReturnValue) == 0x000008, "Member 'BP_MusicSystem_C_Fadein_Track::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");

// Function BP_MusicSystem.BP_MusicSystem_C.Fadein_and_Fadeout
// 0x0008 (0x0008 - 0x0000)
struct BP_MusicSystem_C_Fadein_and_Fadeout final
{
public:
	int32                                         WhichTrack;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue1;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue2;           // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue3;           // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicSystem_C_Fadein_and_Fadeout) == 0x000004, "Wrong alignment on BP_MusicSystem_C_Fadein_and_Fadeout");
static_assert(sizeof(BP_MusicSystem_C_Fadein_and_Fadeout) == 0x000008, "Wrong size on BP_MusicSystem_C_Fadein_and_Fadeout");
static_assert(offsetof(BP_MusicSystem_C_Fadein_and_Fadeout, WhichTrack) == 0x000000, "Member 'BP_MusicSystem_C_Fadein_and_Fadeout::WhichTrack' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_Fadein_and_Fadeout, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_MusicSystem_C_Fadein_and_Fadeout::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_Fadein_and_Fadeout, CallFunc_EqualEqual_IntInt_ReturnValue1) == 0x000005, "Member 'BP_MusicSystem_C_Fadein_and_Fadeout::CallFunc_EqualEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_Fadein_and_Fadeout, CallFunc_EqualEqual_IntInt_ReturnValue2) == 0x000006, "Member 'BP_MusicSystem_C_Fadein_and_Fadeout::CallFunc_EqualEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_Fadein_and_Fadeout, CallFunc_EqualEqual_IntInt_ReturnValue3) == 0x000007, "Member 'BP_MusicSystem_C_Fadein_and_Fadeout::CallFunc_EqualEqual_IntInt_ReturnValue3' has a wrong offset!");

// Function BP_MusicSystem.BP_MusicSystem_C.Start_Track
// 0x0010 (0x0010 - 0x0000)
struct BP_MusicSystem_C_Start_Track final
{
public:
	class UAudioComponent*                        Which_Track;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicSystem_C_Start_Track) == 0x000008, "Wrong alignment on BP_MusicSystem_C_Start_Track");
static_assert(sizeof(BP_MusicSystem_C_Start_Track) == 0x000010, "Wrong size on BP_MusicSystem_C_Start_Track");
static_assert(offsetof(BP_MusicSystem_C_Start_Track, Which_Track) == 0x000000, "Member 'BP_MusicSystem_C_Start_Track::Which_Track' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_Start_Track, CallFunc_IsPlaying_ReturnValue) == 0x000008, "Member 'BP_MusicSystem_C_Start_Track::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");

// Function BP_MusicSystem.BP_MusicSystem_C.Starts_and_Stops
// 0x0008 (0x0008 - 0x0000)
struct BP_MusicSystem_C_Starts_and_Stops final
{
public:
	int32                                         WhichTrackA;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue1;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue2;           // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue3;           // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicSystem_C_Starts_and_Stops) == 0x000004, "Wrong alignment on BP_MusicSystem_C_Starts_and_Stops");
static_assert(sizeof(BP_MusicSystem_C_Starts_and_Stops) == 0x000008, "Wrong size on BP_MusicSystem_C_Starts_and_Stops");
static_assert(offsetof(BP_MusicSystem_C_Starts_and_Stops, WhichTrackA) == 0x000000, "Member 'BP_MusicSystem_C_Starts_and_Stops::WhichTrackA' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_Starts_and_Stops, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_MusicSystem_C_Starts_and_Stops::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_Starts_and_Stops, CallFunc_EqualEqual_IntInt_ReturnValue1) == 0x000005, "Member 'BP_MusicSystem_C_Starts_and_Stops::CallFunc_EqualEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_Starts_and_Stops, CallFunc_EqualEqual_IntInt_ReturnValue2) == 0x000006, "Member 'BP_MusicSystem_C_Starts_and_Stops::CallFunc_EqualEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_Starts_and_Stops, CallFunc_EqualEqual_IntInt_ReturnValue3) == 0x000007, "Member 'BP_MusicSystem_C_Starts_and_Stops::CallFunc_EqualEqual_IntInt_ReturnValue3' has a wrong offset!");

// Function BP_MusicSystem.BP_MusicSystem_C.Stop_Track
// 0x0010 (0x0010 - 0x0000)
struct BP_MusicSystem_C_Stop_Track final
{
public:
	class UAudioComponent*                        Which_Track;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicSystem_C_Stop_Track) == 0x000008, "Wrong alignment on BP_MusicSystem_C_Stop_Track");
static_assert(sizeof(BP_MusicSystem_C_Stop_Track) == 0x000010, "Wrong size on BP_MusicSystem_C_Stop_Track");
static_assert(offsetof(BP_MusicSystem_C_Stop_Track, Which_Track) == 0x000000, "Member 'BP_MusicSystem_C_Stop_Track::Which_Track' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_Stop_Track, CallFunc_IsPlaying_ReturnValue) == 0x000008, "Member 'BP_MusicSystem_C_Stop_Track::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");

// Function BP_MusicSystem.BP_MusicSystem_C.Activate_Tick_If_Applicable
// 0x0001 (0x0001 - 0x0000)
struct BP_MusicSystem_C_Activate_Tick_If_Applicable final
{
public:
	bool                                          CallFunc_IsActorTickEnabled_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicSystem_C_Activate_Tick_If_Applicable) == 0x000001, "Wrong alignment on BP_MusicSystem_C_Activate_Tick_If_Applicable");
static_assert(sizeof(BP_MusicSystem_C_Activate_Tick_If_Applicable) == 0x000001, "Wrong size on BP_MusicSystem_C_Activate_Tick_If_Applicable");
static_assert(offsetof(BP_MusicSystem_C_Activate_Tick_If_Applicable, CallFunc_IsActorTickEnabled_ReturnValue) == 0x000000, "Member 'BP_MusicSystem_C_Activate_Tick_If_Applicable::CallFunc_IsActorTickEnabled_ReturnValue' has a wrong offset!");

// Function BP_MusicSystem.BP_MusicSystem_C.Print_if_DebugMode_is_On
// 0x0020 (0x0020 - 0x0000)
struct BP_MusicSystem_C_Print_if_DebugMode_is_On final
{
public:
	class FString                                 InString;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MusicSystem_C_Print_if_DebugMode_is_On) == 0x000008, "Wrong alignment on BP_MusicSystem_C_Print_if_DebugMode_is_On");
static_assert(sizeof(BP_MusicSystem_C_Print_if_DebugMode_is_On) == 0x000020, "Wrong size on BP_MusicSystem_C_Print_if_DebugMode_is_On");
static_assert(offsetof(BP_MusicSystem_C_Print_if_DebugMode_is_On, InString) == 0x000000, "Member 'BP_MusicSystem_C_Print_if_DebugMode_is_On::InString' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_Print_if_DebugMode_is_On, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'BP_MusicSystem_C_Print_if_DebugMode_is_On::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_MusicSystem.BP_MusicSystem_C.Get_The_Player
// 0x0020 (0x0020 - 0x0000)
struct BP_MusicSystem_C_Get_The_Player final
{
public:
	bool                                          Valid;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABFGPlayerCharacter*                    Output_Player;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABFGPlayerCharacter*                    CallFunc_GetPrimaryPlayerCharacter_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicSystem_C_Get_The_Player) == 0x000008, "Wrong alignment on BP_MusicSystem_C_Get_The_Player");
static_assert(sizeof(BP_MusicSystem_C_Get_The_Player) == 0x000020, "Wrong size on BP_MusicSystem_C_Get_The_Player");
static_assert(offsetof(BP_MusicSystem_C_Get_The_Player, Valid) == 0x000000, "Member 'BP_MusicSystem_C_Get_The_Player::Valid' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_Get_The_Player, Output_Player) == 0x000008, "Member 'BP_MusicSystem_C_Get_The_Player::Output_Player' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_Get_The_Player, CallFunc_GetPrimaryPlayerCharacter_ReturnValue) == 0x000010, "Member 'BP_MusicSystem_C_Get_The_Player::CallFunc_GetPrimaryPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_Get_The_Player, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_MusicSystem_C_Get_The_Player::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_MusicSystem.BP_MusicSystem_C.Fadeout_Track_Challenge
// 0x0008 (0x0008 - 0x0000)
struct BP_MusicSystem_C_Fadeout_Track_Challenge final
{
public:
	float                                         Override_FadeTime;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicSystem_C_Fadeout_Track_Challenge) == 0x000004, "Wrong alignment on BP_MusicSystem_C_Fadeout_Track_Challenge");
static_assert(sizeof(BP_MusicSystem_C_Fadeout_Track_Challenge) == 0x000008, "Wrong size on BP_MusicSystem_C_Fadeout_Track_Challenge");
static_assert(offsetof(BP_MusicSystem_C_Fadeout_Track_Challenge, Override_FadeTime) == 0x000000, "Member 'BP_MusicSystem_C_Fadeout_Track_Challenge::Override_FadeTime' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_Fadeout_Track_Challenge, CallFunc_IsPlaying_ReturnValue) == 0x000004, "Member 'BP_MusicSystem_C_Fadeout_Track_Challenge::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicSystem_C_Fadeout_Track_Challenge, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000005, "Member 'BP_MusicSystem_C_Fadeout_Track_Challenge::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_MusicSystem.BP_MusicSystem_C.Play_Ending_Oneshot
// 0x0001 (0x0001 - 0x0000)
struct BP_MusicSystem_C_Play_Ending_Oneshot final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicSystem_C_Play_Ending_Oneshot) == 0x000001, "Wrong alignment on BP_MusicSystem_C_Play_Ending_Oneshot");
static_assert(sizeof(BP_MusicSystem_C_Play_Ending_Oneshot) == 0x000001, "Wrong size on BP_MusicSystem_C_Play_Ending_Oneshot");
static_assert(offsetof(BP_MusicSystem_C_Play_Ending_Oneshot, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_MusicSystem_C_Play_Ending_Oneshot::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

