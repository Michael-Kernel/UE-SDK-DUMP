#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BrainExtract_Decals

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_EffectActor_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BrainExtract_Decals.BP_BrainExtract_Decals_C
// 0x0030 (0x0488 - 0x0458)
class ABP_BrainExtract_Decals_C final : public ABP_EffectActor_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_BrainExtract_Decals_C;           // 0x0458(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDecalComponent*                        Decal;                                             // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timer;                                             // 0x0468(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Decal_LifeTime;                                    // 0x046C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeOut_Duration;                                  // 0x0470(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_474[0x4];                                      // 0x0474(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UDecalComponent*>                DecalList;                                         // 0x0478(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void Ground_Decals(float Decal_Size, float Decal_Max_Brightness, float Decal_Power, float Decal_Dissolve_Min, float Decal_Dissolve_Max, const struct FVector& Spawn_Location);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void OnTriggerEffect();
	void OnReturnToPool();
	void OnRetrieveFromPool(bool _bAutomaticallyReactivateComponents);
	void OnStopEffect();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ExecuteUbergraph_BP_BrainExtract_Decals(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BrainExtract_Decals_C">();
	}
	static class ABP_BrainExtract_Decals_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BrainExtract_Decals_C>();
	}
};
static_assert(alignof(ABP_BrainExtract_Decals_C) == 0x000008, "Wrong alignment on ABP_BrainExtract_Decals_C");
static_assert(sizeof(ABP_BrainExtract_Decals_C) == 0x000488, "Wrong size on ABP_BrainExtract_Decals_C");
static_assert(offsetof(ABP_BrainExtract_Decals_C, UberGraphFrame_BP_BrainExtract_Decals_C) == 0x000458, "Member 'ABP_BrainExtract_Decals_C::UberGraphFrame_BP_BrainExtract_Decals_C' has a wrong offset!");
static_assert(offsetof(ABP_BrainExtract_Decals_C, Decal) == 0x000460, "Member 'ABP_BrainExtract_Decals_C::Decal' has a wrong offset!");
static_assert(offsetof(ABP_BrainExtract_Decals_C, Timer) == 0x000468, "Member 'ABP_BrainExtract_Decals_C::Timer' has a wrong offset!");
static_assert(offsetof(ABP_BrainExtract_Decals_C, Decal_LifeTime) == 0x00046C, "Member 'ABP_BrainExtract_Decals_C::Decal_LifeTime' has a wrong offset!");
static_assert(offsetof(ABP_BrainExtract_Decals_C, FadeOut_Duration) == 0x000470, "Member 'ABP_BrainExtract_Decals_C::FadeOut_Duration' has a wrong offset!");
static_assert(offsetof(ABP_BrainExtract_Decals_C, DecalList) == 0x000478, "Member 'ABP_BrainExtract_Decals_C::DecalList' has a wrong offset!");

}

