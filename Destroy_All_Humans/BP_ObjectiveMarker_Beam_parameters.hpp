#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ObjectiveMarker_Beam

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_ObjectiveMarker_Beam.BP_ObjectiveMarker_Beam_C.ExecuteUbergraph_BP_ObjectiveMarker_Beam
// 0x01F8 (0x01F8 - 0x0000)
struct BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key1;                         // 0x0008(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0020(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0078(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddRelativeRotation_SweepHitResult;    // 0x0110(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue1;       // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue2;       // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue3;       // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue4;       // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue5;       // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue1;         // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_RotatorRotator_ReturnValue;      // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam) == 0x000008, "Wrong alignment on BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam");
static_assert(sizeof(BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam) == 0x0001F8, "Wrong size on BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam");
static_assert(offsetof(BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam, EntryPoint) == 0x000000, "Member 'BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam, K2Node_InputKeyEvent_Key1) == 0x000008, "Member 'BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam::K2Node_InputKeyEvent_Key1' has a wrong offset!");
static_assert(offsetof(BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam, K2Node_InputKeyEvent_Key) == 0x000020, "Member 'BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam, CallFunc_MakeVector_ReturnValue) == 0x000040, "Member 'BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam, CallFunc_MakeVector_ReturnValue1) == 0x00004C, "Member 'BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam, CallFunc_GetPlayerController_ReturnValue) == 0x000058, "Member 'BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000060, "Member 'BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam, CallFunc_ComposeRotators_ReturnValue) == 0x00006C, "Member 'BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000078, "Member 'BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000100, "Member 'BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam, CallFunc_MakeRotator_ReturnValue) == 0x000104, "Member 'BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam, CallFunc_K2_AddRelativeRotation_SweepHitResult) == 0x000110, "Member 'BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam::CallFunc_K2_AddRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000198, "Member 'BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam, CallFunc_Multiply_VectorVector_ReturnValue1) == 0x0001A4, "Member 'BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam::CallFunc_Multiply_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam, CallFunc_Multiply_VectorVector_ReturnValue2) == 0x0001B0, "Member 'BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam::CallFunc_Multiply_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam, CallFunc_Multiply_VectorVector_ReturnValue3) == 0x0001BC, "Member 'BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam::CallFunc_Multiply_VectorVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam, CallFunc_Multiply_VectorVector_ReturnValue4) == 0x0001C8, "Member 'BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam::CallFunc_Multiply_VectorVector_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam, CallFunc_Multiply_VectorVector_ReturnValue5) == 0x0001D4, "Member 'BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam::CallFunc_Multiply_VectorVector_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0001E0, "Member 'BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam, CallFunc_K2_GetActorRotation_ReturnValue1) == 0x0001E4, "Member 'BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam::CallFunc_K2_GetActorRotation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam, CallFunc_NotEqual_RotatorRotator_ReturnValue) == 0x0001F0, "Member 'BP_ObjectiveMarker_Beam_C_ExecuteUbergraph_BP_ObjectiveMarker_Beam::CallFunc_NotEqual_RotatorRotator_ReturnValue' has a wrong offset!");

// Function BP_ObjectiveMarker_Beam.BP_ObjectiveMarker_Beam_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_ObjectiveMarker_Beam_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ObjectiveMarker_Beam_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_ObjectiveMarker_Beam_C_ReceiveTick");
static_assert(sizeof(BP_ObjectiveMarker_Beam_C_ReceiveTick) == 0x000004, "Wrong size on BP_ObjectiveMarker_Beam_C_ReceiveTick");
static_assert(offsetof(BP_ObjectiveMarker_Beam_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_ObjectiveMarker_Beam_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_ObjectiveMarker_Beam.BP_ObjectiveMarker_Beam_C.InpActEvt_I_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_ObjectiveMarker_Beam_C_InpActEvt_I_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_ObjectiveMarker_Beam_C_InpActEvt_I_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on BP_ObjectiveMarker_Beam_C_InpActEvt_I_K2Node_InputKeyEvent_1");
static_assert(sizeof(BP_ObjectiveMarker_Beam_C_InpActEvt_I_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on BP_ObjectiveMarker_Beam_C_InpActEvt_I_K2Node_InputKeyEvent_1");
static_assert(offsetof(BP_ObjectiveMarker_Beam_C_InpActEvt_I_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'BP_ObjectiveMarker_Beam_C_InpActEvt_I_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function BP_ObjectiveMarker_Beam.BP_ObjectiveMarker_Beam_C.InpActEvt_K_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_ObjectiveMarker_Beam_C_InpActEvt_K_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_ObjectiveMarker_Beam_C_InpActEvt_K_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on BP_ObjectiveMarker_Beam_C_InpActEvt_K_K2Node_InputKeyEvent_0");
static_assert(sizeof(BP_ObjectiveMarker_Beam_C_InpActEvt_K_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on BP_ObjectiveMarker_Beam_C_InpActEvt_K_K2Node_InputKeyEvent_0");
static_assert(offsetof(BP_ObjectiveMarker_Beam_C_InpActEvt_K_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'BP_ObjectiveMarker_Beam_C_InpActEvt_K_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function BP_ObjectiveMarker_Beam.BP_ObjectiveMarker_Beam_C.UserConstructionScript
// 0x0008 (0x0008 - 0x0000)
struct BP_ObjectiveMarker_Beam_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ObjectiveMarker_Beam_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_ObjectiveMarker_Beam_C_UserConstructionScript");
static_assert(sizeof(BP_ObjectiveMarker_Beam_C_UserConstructionScript) == 0x000008, "Wrong size on BP_ObjectiveMarker_Beam_C_UserConstructionScript");
static_assert(offsetof(BP_ObjectiveMarker_Beam_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BP_ObjectiveMarker_Beam_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

}

