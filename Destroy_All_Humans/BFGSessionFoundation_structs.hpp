#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BFGSessionFoundation

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// ScriptStruct BFGSessionFoundation.BFGMessageDestinationId
// 0x0020 (0x0020 - 0x0000)
struct FBFGMessageDestinationId final
{
public:
	struct FGuid                                  M_SessionId;                                       // 0x0000(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  M_InstanceId;                                      // 0x0010(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FBFGMessageDestinationId) == 0x000004, "Wrong alignment on FBFGMessageDestinationId");
static_assert(sizeof(FBFGMessageDestinationId) == 0x000020, "Wrong size on FBFGMessageDestinationId");
static_assert(offsetof(FBFGMessageDestinationId, M_SessionId) == 0x000000, "Member 'FBFGMessageDestinationId::M_SessionId' has a wrong offset!");
static_assert(offsetof(FBFGMessageDestinationId, M_InstanceId) == 0x000010, "Member 'FBFGMessageDestinationId::M_InstanceId' has a wrong offset!");

// ScriptStruct BFGSessionFoundation.BFGClient_Unsubscribe
// 0x0020 (0x0020 - 0x0000)
struct FBFGClient_Unsubscribe final
{
public:
	struct FBFGMessageDestinationId               M_destinationId;                                   // 0x0000(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FBFGClient_Unsubscribe) == 0x000004, "Wrong alignment on FBFGClient_Unsubscribe");
static_assert(sizeof(FBFGClient_Unsubscribe) == 0x000020, "Wrong size on FBFGClient_Unsubscribe");
static_assert(offsetof(FBFGClient_Unsubscribe, M_destinationId) == 0x000000, "Member 'FBFGClient_Unsubscribe::M_destinationId' has a wrong offset!");

// ScriptStruct BFGSessionFoundation.BFGVariableMessage_VarAction
// 0x0020 (0x0020 - 0x0000)
struct FBFGVariableMessage_VarAction final
{
public:
	struct FGuid                                  M_guid;                                            // 0x0000(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   M_strVariableName;                                 // 0x0010(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   M_strAction;                                       // 0x0018(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FBFGVariableMessage_VarAction) == 0x000004, "Wrong alignment on FBFGVariableMessage_VarAction");
static_assert(sizeof(FBFGVariableMessage_VarAction) == 0x000020, "Wrong size on FBFGVariableMessage_VarAction");
static_assert(offsetof(FBFGVariableMessage_VarAction, M_guid) == 0x000000, "Member 'FBFGVariableMessage_VarAction::M_guid' has a wrong offset!");
static_assert(offsetof(FBFGVariableMessage_VarAction, M_strVariableName) == 0x000010, "Member 'FBFGVariableMessage_VarAction::M_strVariableName' has a wrong offset!");
static_assert(offsetof(FBFGVariableMessage_VarAction, M_strAction) == 0x000018, "Member 'FBFGVariableMessage_VarAction::M_strAction' has a wrong offset!");

// ScriptStruct BFGSessionFoundation.BFGServer_SubscribedPing
// 0x0020 (0x0020 - 0x0000)
struct FBFGServer_SubscribedPing final
{
public:
	struct FBFGMessageDestinationId               M_serverId;                                        // 0x0000(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FBFGServer_SubscribedPing) == 0x000004, "Wrong alignment on FBFGServer_SubscribedPing");
static_assert(sizeof(FBFGServer_SubscribedPing) == 0x000020, "Wrong size on FBFGServer_SubscribedPing");
static_assert(offsetof(FBFGServer_SubscribedPing, M_serverId) == 0x000000, "Member 'FBFGServer_SubscribedPing::M_serverId' has a wrong offset!");

// ScriptStruct BFGSessionFoundation.BFGServer_SubscribedStatus
// 0x0024 (0x0024 - 0x0000)
struct FBFGServer_SubscribedStatus final
{
public:
	struct FBFGMessageDestinationId               M_serverId;                                        // 0x0000(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          M_bStatus;                                         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FBFGServer_SubscribedStatus) == 0x000004, "Wrong alignment on FBFGServer_SubscribedStatus");
static_assert(sizeof(FBFGServer_SubscribedStatus) == 0x000024, "Wrong size on FBFGServer_SubscribedStatus");
static_assert(offsetof(FBFGServer_SubscribedStatus, M_serverId) == 0x000000, "Member 'FBFGServer_SubscribedStatus::M_serverId' has a wrong offset!");
static_assert(offsetof(FBFGServer_SubscribedStatus, M_bStatus) == 0x000020, "Member 'FBFGServer_SubscribedStatus::M_bStatus' has a wrong offset!");

// ScriptStruct BFGSessionFoundation.BFGClient_Subscribe
// 0x0020 (0x0020 - 0x0000)
struct FBFGClient_Subscribe final
{
public:
	struct FBFGMessageDestinationId               M_destinationId;                                   // 0x0000(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FBFGClient_Subscribe) == 0x000004, "Wrong alignment on FBFGClient_Subscribe");
static_assert(sizeof(FBFGClient_Subscribe) == 0x000020, "Wrong size on FBFGClient_Subscribe");
static_assert(offsetof(FBFGClient_Subscribe, M_destinationId) == 0x000000, "Member 'FBFGClient_Subscribe::M_destinationId' has a wrong offset!");

// ScriptStruct BFGSessionFoundation.BFGVariableMessage_Var
// 0x004C (0x004C - 0x0000)
struct FBFGVariableMessage_Var final
{
public:
	struct FBFGMessageDestinationId               M_server;                                          // 0x0000(0x0020)(NoDestructor, NativeAccessSpecifierPublic)
	struct FGuid                                  M_guid;                                            // 0x0020(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   M_strVariableName;                                 // 0x0030(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   M_strVariableTypeName;                             // 0x0038(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   M_strValue;                                        // 0x0040(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          M_bSetValue;                                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FBFGVariableMessage_Var) == 0x000004, "Wrong alignment on FBFGVariableMessage_Var");
static_assert(sizeof(FBFGVariableMessage_Var) == 0x00004C, "Wrong size on FBFGVariableMessage_Var");
static_assert(offsetof(FBFGVariableMessage_Var, M_server) == 0x000000, "Member 'FBFGVariableMessage_Var::M_server' has a wrong offset!");
static_assert(offsetof(FBFGVariableMessage_Var, M_guid) == 0x000020, "Member 'FBFGVariableMessage_Var::M_guid' has a wrong offset!");
static_assert(offsetof(FBFGVariableMessage_Var, M_strVariableName) == 0x000030, "Member 'FBFGVariableMessage_Var::M_strVariableName' has a wrong offset!");
static_assert(offsetof(FBFGVariableMessage_Var, M_strVariableTypeName) == 0x000038, "Member 'FBFGVariableMessage_Var::M_strVariableTypeName' has a wrong offset!");
static_assert(offsetof(FBFGVariableMessage_Var, M_strValue) == 0x000040, "Member 'FBFGVariableMessage_Var::M_strValue' has a wrong offset!");
static_assert(offsetof(FBFGVariableMessage_Var, M_bSetValue) == 0x000048, "Member 'FBFGVariableMessage_Var::M_bSetValue' has a wrong offset!");

// ScriptStruct BFGSessionFoundation.BFGVariableMessage_Type
// 0x0098 (0x0098 - 0x0000)
struct FBFGVariableMessage_Type final
{
public:
	struct FBFGMessageDestinationId               M_server;                                          // 0x0000(0x0020)(NoDestructor, NativeAccessSpecifierPublic)
	struct FGuid                                  M_guid;                                            // 0x0020(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   M_strTypeName;                                     // 0x0030(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<int32, class FName>                      M_aValueSet;                                       // 0x0038(0x0050)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           M_aActions;                                        // 0x0088(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FBFGVariableMessage_Type) == 0x000008, "Wrong alignment on FBFGVariableMessage_Type");
static_assert(sizeof(FBFGVariableMessage_Type) == 0x000098, "Wrong size on FBFGVariableMessage_Type");
static_assert(offsetof(FBFGVariableMessage_Type, M_server) == 0x000000, "Member 'FBFGVariableMessage_Type::M_server' has a wrong offset!");
static_assert(offsetof(FBFGVariableMessage_Type, M_guid) == 0x000020, "Member 'FBFGVariableMessage_Type::M_guid' has a wrong offset!");
static_assert(offsetof(FBFGVariableMessage_Type, M_strTypeName) == 0x000030, "Member 'FBFGVariableMessage_Type::M_strTypeName' has a wrong offset!");
static_assert(offsetof(FBFGVariableMessage_Type, M_aValueSet) == 0x000038, "Member 'FBFGVariableMessage_Type::M_aValueSet' has a wrong offset!");
static_assert(offsetof(FBFGVariableMessage_Type, M_aActions) == 0x000088, "Member 'FBFGVariableMessage_Type::M_aActions' has a wrong offset!");

// ScriptStruct BFGSessionFoundation.BFGVariableMessage_Clear
// 0x0020 (0x0020 - 0x0000)
struct FBFGVariableMessage_Clear final
{
public:
	struct FBFGMessageDestinationId               M_server;                                          // 0x0000(0x0020)(NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FBFGVariableMessage_Clear) == 0x000004, "Wrong alignment on FBFGVariableMessage_Clear");
static_assert(sizeof(FBFGVariableMessage_Clear) == 0x000020, "Wrong size on FBFGVariableMessage_Clear");
static_assert(offsetof(FBFGVariableMessage_Clear, M_server) == 0x000000, "Member 'FBFGVariableMessage_Clear::M_server' has a wrong offset!");

}

