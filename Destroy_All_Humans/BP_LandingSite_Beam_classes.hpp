#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LandingSite_Beam

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// DynamicClass BP_LandingSite_Beam.BP_LandingSite_Beam_C
// 0x0110 (0x04E8 - 0x03D8)
class ABP_LandingSite_Beam_C final : public AActor
{
public:
	class UStaticMeshComponent*                   Billboard;                                         // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        Scene;                                             // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Mesh_Rotation_Speed;                               // 0x03E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsVisible;                                         // 0x03EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3ED[0x3];                                      // 0x03ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Billboard_Material;                                // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Billboard_Scale;                                   // 0x03F8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Text_Scale;                                        // 0x0404(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                TargetScaleModifier;                               // 0x0410(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CurrentScaleModifier;                              // 0x041C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GrowAnimationTimer;                                // 0x0428(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsOnFoot;                                          // 0x042C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsInRange;                                         // 0x042D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_42E[0x2];                                      // 0x042E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GrowAnimationDuration;                             // 0x0430(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_CustomEvent_IsInRange;                      // 0x0434(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_435[0x3];                                      // 0x0435(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0438(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector_X;                            // 0x043C(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector_Y;                            // 0x0440(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector_Z;                            // 0x0444(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0448(0x0088)(Transient, DuplicateTransient, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector_X1;                           // 0x04D0(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector_Y1;                           // 0x04D4(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector_Z1;                           // 0x04D8(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector_X2;                           // 0x04DC(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector_Y2;                           // 0x04E0(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector_Z2;                           // 0x04E4(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void ReceiveTick(float bpp__DeltaSeconds__pf);
	void ReceiveBeginPlay();
	void Change_Is_In_Interact_Range(bool bpp__IsInRange__pf);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BP_LandingSite_Beam_C">();
	}
	static class ABP_LandingSite_Beam_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LandingSite_Beam_C>();
	}
};
static_assert(alignof(ABP_LandingSite_Beam_C) == 0x000008, "Wrong alignment on ABP_LandingSite_Beam_C");
static_assert(sizeof(ABP_LandingSite_Beam_C) == 0x0004E8, "Wrong size on ABP_LandingSite_Beam_C");
static_assert(offsetof(ABP_LandingSite_Beam_C, Billboard) == 0x0003D8, "Member 'ABP_LandingSite_Beam_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_LandingSite_Beam_C, Scene) == 0x0003E0, "Member 'ABP_LandingSite_Beam_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_LandingSite_Beam_C, Mesh_Rotation_Speed) == 0x0003E8, "Member 'ABP_LandingSite_Beam_C::Mesh_Rotation_Speed' has a wrong offset!");
static_assert(offsetof(ABP_LandingSite_Beam_C, IsVisible) == 0x0003EC, "Member 'ABP_LandingSite_Beam_C::IsVisible' has a wrong offset!");
static_assert(offsetof(ABP_LandingSite_Beam_C, Billboard_Material) == 0x0003F0, "Member 'ABP_LandingSite_Beam_C::Billboard_Material' has a wrong offset!");
static_assert(offsetof(ABP_LandingSite_Beam_C, Billboard_Scale) == 0x0003F8, "Member 'ABP_LandingSite_Beam_C::Billboard_Scale' has a wrong offset!");
static_assert(offsetof(ABP_LandingSite_Beam_C, Text_Scale) == 0x000404, "Member 'ABP_LandingSite_Beam_C::Text_Scale' has a wrong offset!");
static_assert(offsetof(ABP_LandingSite_Beam_C, TargetScaleModifier) == 0x000410, "Member 'ABP_LandingSite_Beam_C::TargetScaleModifier' has a wrong offset!");
static_assert(offsetof(ABP_LandingSite_Beam_C, CurrentScaleModifier) == 0x00041C, "Member 'ABP_LandingSite_Beam_C::CurrentScaleModifier' has a wrong offset!");
static_assert(offsetof(ABP_LandingSite_Beam_C, GrowAnimationTimer) == 0x000428, "Member 'ABP_LandingSite_Beam_C::GrowAnimationTimer' has a wrong offset!");
static_assert(offsetof(ABP_LandingSite_Beam_C, IsOnFoot) == 0x00042C, "Member 'ABP_LandingSite_Beam_C::IsOnFoot' has a wrong offset!");
static_assert(offsetof(ABP_LandingSite_Beam_C, IsInRange) == 0x00042D, "Member 'ABP_LandingSite_Beam_C::IsInRange' has a wrong offset!");
static_assert(offsetof(ABP_LandingSite_Beam_C, GrowAnimationDuration) == 0x000430, "Member 'ABP_LandingSite_Beam_C::GrowAnimationDuration' has a wrong offset!");
static_assert(offsetof(ABP_LandingSite_Beam_C, K2Node_CustomEvent_IsInRange) == 0x000434, "Member 'ABP_LandingSite_Beam_C::K2Node_CustomEvent_IsInRange' has a wrong offset!");
static_assert(offsetof(ABP_LandingSite_Beam_C, K2Node_Event_DeltaSeconds) == 0x000438, "Member 'ABP_LandingSite_Beam_C::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(ABP_LandingSite_Beam_C, CallFunc_BreakVector_X) == 0x00043C, "Member 'ABP_LandingSite_Beam_C::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ABP_LandingSite_Beam_C, CallFunc_BreakVector_Y) == 0x000440, "Member 'ABP_LandingSite_Beam_C::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ABP_LandingSite_Beam_C, CallFunc_BreakVector_Z) == 0x000444, "Member 'ABP_LandingSite_Beam_C::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ABP_LandingSite_Beam_C, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000448, "Member 'ABP_LandingSite_Beam_C::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ABP_LandingSite_Beam_C, CallFunc_BreakVector_X1) == 0x0004D0, "Member 'ABP_LandingSite_Beam_C::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(ABP_LandingSite_Beam_C, CallFunc_BreakVector_Y1) == 0x0004D4, "Member 'ABP_LandingSite_Beam_C::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(ABP_LandingSite_Beam_C, CallFunc_BreakVector_Z1) == 0x0004D8, "Member 'ABP_LandingSite_Beam_C::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(ABP_LandingSite_Beam_C, CallFunc_BreakVector_X2) == 0x0004DC, "Member 'ABP_LandingSite_Beam_C::CallFunc_BreakVector_X2' has a wrong offset!");
static_assert(offsetof(ABP_LandingSite_Beam_C, CallFunc_BreakVector_Y2) == 0x0004E0, "Member 'ABP_LandingSite_Beam_C::CallFunc_BreakVector_Y2' has a wrong offset!");
static_assert(offsetof(ABP_LandingSite_Beam_C, CallFunc_BreakVector_Z2) == 0x0004E4, "Member 'ABP_LandingSite_Beam_C::CallFunc_BreakVector_Z2' has a wrong offset!");

}

