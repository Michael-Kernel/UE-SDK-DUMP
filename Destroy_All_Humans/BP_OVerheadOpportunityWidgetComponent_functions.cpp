#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_OVerheadOpportunityWidgetComponent

#include "Basic.hpp"

#include "BP_OVerheadOpportunityWidgetComponent_classes.hpp"
#include "BP_OVerheadOpportunityWidgetComponent_parameters.hpp"


namespace SDK
{

// DelegateFunction BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.Action__DelegateSignature
// (Public, Delegate)

void UBP_OverheadOpportunityWidgetComponent_C::Action__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "Action__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.CreateWidgetInternals
// (Native, Public, BlueprintCallable)

void UBP_OverheadOpportunityWidgetComponent_C::CreateWidgetInternals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "CreateWidgetInternals");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.DestroyWidgetInternals
// (Native, Public, BlueprintCallable)

void UBP_OverheadOpportunityWidgetComponent_C::DestroyWidgetInternals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "DestroyWidgetInternals");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.EnableOnScreenMarker
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bpp__InEnable__pf                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBP_OverheadOpportunityWidgetComponent_C::EnableOnScreenMarker(bool bpp__InEnable__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "EnableOnScreenMarker");

	Params::BP_OverheadOpportunityWidgetComponent_C_EnableOnScreenMarker Parms{};

	Parms.bpp__InEnable__pf = bpp__InEnable__pf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.Get_ActivateArrow
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bpp__Out__pf                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBP_OverheadOpportunityWidgetComponent_C::Get_ActivateArrow(bool* bpp__Out__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "Get_ActivateArrow");

	Params::BP_OverheadOpportunityWidgetComponent_C_Get_ActivateArrow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bpp__Out__pf != nullptr)
		*bpp__Out__pf = Parms.bpp__Out__pf;
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.Get_ActivateIcon
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bpp__Out__pf                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBP_OverheadOpportunityWidgetComponent_C::Get_ActivateIcon(bool* bpp__Out__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "Get_ActivateIcon");

	Params::BP_OverheadOpportunityWidgetComponent_C_Get_ActivateIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bpp__Out__pf != nullptr)
		*bpp__Out__pf = Parms.bpp__Out__pf;
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.Get_ActivateRadarMarker
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bpp__Out__pf                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBP_OverheadOpportunityWidgetComponent_C::Get_ActivateRadarMarker(bool* bpp__Out__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "Get_ActivateRadarMarker");

	Params::BP_OverheadOpportunityWidgetComponent_C_Get_ActivateRadarMarker Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bpp__Out__pf != nullptr)
		*bpp__Out__pf = Parms.bpp__Out__pf;
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.Get_ActivateText
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bpp__Out__pf                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBP_OverheadOpportunityWidgetComponent_C::Get_ActivateText(bool* bpp__Out__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "Get_ActivateText");

	Params::BP_OverheadOpportunityWidgetComponent_C_Get_ActivateText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bpp__Out__pf != nullptr)
		*bpp__Out__pf = Parms.bpp__Out__pf;
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.Get_DisplayRange
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   bpp__Out__pf                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBP_OverheadOpportunityWidgetComponent_C::Get_DisplayRange(float* bpp__Out__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "Get_DisplayRange");

	Params::BP_OverheadOpportunityWidgetComponent_C_Get_DisplayRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bpp__Out__pf != nullptr)
		*bpp__Out__pf = Parms.bpp__Out__pf;
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.Get_Enabled
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bpp__Out__pf                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBP_OverheadOpportunityWidgetComponent_C::Get_Enabled(bool* bpp__Out__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "Get_Enabled");

	Params::BP_OverheadOpportunityWidgetComponent_C_Get_Enabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bpp__Out__pf != nullptr)
		*bpp__Out__pf = Parms.bpp__Out__pf;
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.Get_InteractDecoratorString
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           bpp__Out__pf                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBP_OverheadOpportunityWidgetComponent_C::Get_InteractDecoratorString(class FString* bpp__Out__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "Get_InteractDecoratorString");

	Params::BP_OverheadOpportunityWidgetComponent_C_Get_InteractDecoratorString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bpp__Out__pf != nullptr)
		*bpp__Out__pf = std::move(Parms.bpp__Out__pf);
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.Get_InteractDisplayText
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FText                             bpp__Out__pf                                           (Parm, OutParm, NativeAccessSpecifierPublic)

void UBP_OverheadOpportunityWidgetComponent_C::Get_InteractDisplayText(class FText* bpp__Out__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "Get_InteractDisplayText");

	Params::BP_OverheadOpportunityWidgetComponent_C_Get_InteractDisplayText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bpp__Out__pf != nullptr)
		*bpp__Out__pf = std::move(Parms.bpp__Out__pf);
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.Get_IsDeathPersistant
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bpp__Out__pf                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBP_OverheadOpportunityWidgetComponent_C::Get_IsDeathPersistant(bool* bpp__Out__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "Get_IsDeathPersistant");

	Params::BP_OverheadOpportunityWidgetComponent_C_Get_IsDeathPersistant Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bpp__Out__pf != nullptr)
		*bpp__Out__pf = Parms.bpp__Out__pf;
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.Get_IsEnemyMarker
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bpp__Out__pf                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBP_OverheadOpportunityWidgetComponent_C::Get_IsEnemyMarker(bool* bpp__Out__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "Get_IsEnemyMarker");

	Params::BP_OverheadOpportunityWidgetComponent_C_Get_IsEnemyMarker Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bpp__Out__pf != nullptr)
		*bpp__Out__pf = Parms.bpp__Out__pf;
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.Get_IsInSaucer
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bpp__IsInSaucer__pf                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBP_OverheadOpportunityWidgetComponent_C::Get_IsInSaucer(bool* bpp__IsInSaucer__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "Get_IsInSaucer");

	Params::BP_OverheadOpportunityWidgetComponent_C_Get_IsInSaucer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bpp__IsInSaucer__pf != nullptr)
		*bpp__IsInSaucer__pf = Parms.bpp__IsInSaucer__pf;
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.Get_IsPKPersistant
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bpp__Out__pf                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBP_OverheadOpportunityWidgetComponent_C::Get_IsPKPersistant(bool* bpp__Out__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "Get_IsPKPersistant");

	Params::BP_OverheadOpportunityWidgetComponent_C_Get_IsPKPersistant Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bpp__Out__pf != nullptr)
		*bpp__Out__pf = Parms.bpp__Out__pf;
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.Get_IsPlayer
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bpp__Out__pf                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBP_OverheadOpportunityWidgetComponent_C::Get_IsPlayer(bool* bpp__Out__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "Get_IsPlayer");

	Params::BP_OverheadOpportunityWidgetComponent_C_Get_IsPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bpp__Out__pf != nullptr)
		*bpp__Out__pf = Parms.bpp__Out__pf;
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.Get_LinkToMentallyInteractable
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bpp__LinkToMentallyInteractable__pf                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBP_OverheadOpportunityWidgetComponent_C::Get_LinkToMentallyInteractable(bool* bpp__LinkToMentallyInteractable__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "Get_LinkToMentallyInteractable");

	Params::BP_OverheadOpportunityWidgetComponent_C_Get_LinkToMentallyInteractable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bpp__LinkToMentallyInteractable__pf != nullptr)
		*bpp__LinkToMentallyInteractable__pf = Parms.bpp__LinkToMentallyInteractable__pf;
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.Get_OverrideBrush
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSlateBrush                      bpp__Out__pf                                           (Parm, OutParm, NativeAccessSpecifierPublic)

void UBP_OverheadOpportunityWidgetComponent_C::Get_OverrideBrush(struct FSlateBrush* bpp__Out__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "Get_OverrideBrush");

	Params::BP_OverheadOpportunityWidgetComponent_C_Get_OverrideBrush Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bpp__Out__pf != nullptr)
		*bpp__Out__pf = std::move(Parms.bpp__Out__pf);
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.HasValidTarget
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBP_OverheadOpportunityWidgetComponent_C::HasValidTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "HasValidTarget");

	Params::BP_OverheadOpportunityWidgetComponent_C_HasValidTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.HideWidget_Internal
// (Native, Public, BlueprintCallable)

void UBP_OverheadOpportunityWidgetComponent_C::HideWidget_Internal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "HideWidget_Internal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.IsAbilityTarget
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBP_OverheadOpportunityWidgetComponent_C::IsAbilityTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "IsAbilityTarget");

	Params::BP_OverheadOpportunityWidgetComponent_C_IsAbilityTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.IsDead
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBP_OverheadOpportunityWidgetComponent_C::IsDead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "IsDead");

	Params::BP_OverheadOpportunityWidgetComponent_C_IsDead Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.IsInRange
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBP_OverheadOpportunityWidgetComponent_C::IsInRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "IsInRange");

	Params::BP_OverheadOpportunityWidgetComponent_C_IsInRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.IsOffScreen
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBP_OverheadOpportunityWidgetComponent_C::IsOffScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "IsOffScreen");

	Params::BP_OverheadOpportunityWidgetComponent_C_IsOffScreen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.IsPKed
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBP_OverheadOpportunityWidgetComponent_C::IsPKed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "IsPKed");

	Params::BP_OverheadOpportunityWidgetComponent_C_IsPKed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.IsWeaponTarget
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBP_OverheadOpportunityWidgetComponent_C::IsWeaponTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "IsWeaponTarget");

	Params::BP_OverheadOpportunityWidgetComponent_C_IsWeaponTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.OnMarkerDied
// (Native, Public, BlueprintCallable)

void UBP_OverheadOpportunityWidgetComponent_C::OnMarkerDied()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "OnMarkerDied");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.PerformExpensiveUpdate
// (Native, Event, Public)

void UBP_OverheadOpportunityWidgetComponent_C::PerformExpensiveUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "PerformExpensiveUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.ReceiveBeginPlay
// (Native, Event, Public)

void UBP_OverheadOpportunityWidgetComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "ReceiveBeginPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.ReleaseRadarInfo
// (Native, Public, BlueprintCallable)

void UBP_OverheadOpportunityWidgetComponent_C::ReleaseRadarInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "ReleaseRadarInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.SetRadarInfo
// (Native, Public, BlueprintCallable)

void UBP_OverheadOpportunityWidgetComponent_C::SetRadarInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "SetRadarInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.ShouldWidgetBeVisible?
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBP_OverheadOpportunityWidgetComponent_C::ShouldWidgetBeVisible_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "ShouldWidgetBeVisible?");

	Params::BP_OverheadOpportunityWidgetComponent_C_ShouldWidgetBeVisible_ Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.ShowWidget_Internal
// (Native, Public, BlueprintCallable)

void UBP_OverheadOpportunityWidgetComponent_C::ShowWidget_Internal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "ShowWidget_Internal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.TryEnsureQuestMarkerReference
// (Native, Public, BlueprintCallable)

void UBP_OverheadOpportunityWidgetComponent_C::TryEnsureQuestMarkerReference()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "TryEnsureQuestMarkerReference");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BP_OVerheadOpportunityWidgetComponent.BP_OverheadOpportunityWidgetComponent_C.UpdateWidget
// (Native, Public, BlueprintCallable)

void UBP_OverheadOpportunityWidgetComponent_C::UpdateWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OverheadOpportunityWidgetComponent_C", "UpdateWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

