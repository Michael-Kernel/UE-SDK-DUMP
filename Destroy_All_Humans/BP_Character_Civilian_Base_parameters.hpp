#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Character_Civilian_Base

#include "Basic.hpp"

#include "BFGCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Enum_WhichBehaviorSound_structs.hpp"


namespace SDK::Params
{

// Function BP_Character_Civilian_Base.BP_Character_Civilian_Base_C.ExecuteUbergraph_BP_Character_Civilian_Base
// 0x0340 (0x0340 - 0x0000)
struct BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue1; // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent__rTag1;                         // 0x0048(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue1;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBFGBehaviourState_NPC                        K2Node_Event__newState;                            // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93[0x1];                                       // 0x0093(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent__rTag;                          // 0x0094(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue2;      // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue3;      // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTag                           K2Node_ComponentBoundEvent__rTag1;                 // 0x00A0(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_ComponentBoundEvent__rTag;                  // 0x00A8(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue4;      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue5;      // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue6;      // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue7;      // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue8;      // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue9;      // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue10;     // 0x00B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue11;     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue12;     // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue13;     // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue3;                   // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGActorStat_Bool*                     CallFunc_GetIsDeadStat_ReturnValue;                // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValue_ReturnValue;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGActorStat_Bool*                     CallFunc_GetIsDeadStat_ReturnValue1;               // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBFGActorStat_Bool*                     CallFunc_GetIsDeadStat_ReturnValue2;               // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValue_ReturnValue1;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetValue_ReturnValue2;                    // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGActorComponent_PawnDamage*          K2Node_ComponentBoundEvent__pPawnDamage;           // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent__fDamage;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent__pDamageCauser;         // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UBFGDamageType*                   K2Node_ComponentBoundEvent__pDamageType;           // 0x0100(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent__rShotDirection;        // 0x0108(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent__oHitResult;            // 0x0114(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CheckIfElectrocuteDamage_yesElectrocute;  // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckIfElectrocuteDamage_yesProbed;       // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckIfElectrocuteDamage_yesDeathrayed;   // 0x019E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckIfElectrocuteDamage_yesElectrocute1; // 0x019F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckIfElectrocuteDamage_yesProbed1;      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckIfElectrocuteDamage_yesDeathrayed1;  // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x01A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Handle_VO_Output_isplaying_isplaying;     // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x01A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue3;         // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue4;                   // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AB[0x5];                                      // 0x01AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGEffectBlackboard*                   CallFunc_GetBlackboard_ReturnValue;                // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBFGActorComponent_MonetaryValue*       CallFunc_GetComponentByClass_ReturnValue;          // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMonetaryValue_ReturnValue;             // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBFGEffectContainer*>            CallFunc_ActivateEffectAttachToActor_ReturnValue;  // 0x01C8(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          K2Node_Event__bIsFaceDown;                         // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPoseSnapshot                          K2Node_Event__oAnimationSnapshot;                  // 0x01E0(0x0038)(ConstParm)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGActorStat_Bool*                     CallFunc_GetIsDeadStat_ReturnValue3;               // 0x0220(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValue_ReturnValue3;                    // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22B[0x5];                                      // 0x022B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGActorStat_Bool*                     CallFunc_GetIsDeadStat_ReturnValue4;               // 0x0230(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValue_ReturnValue4;                    // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGActorStat_Bool*                     CallFunc_GetIsDeadStat_ReturnValue5;               // 0x0240(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValue_ReturnValue5;                    // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue4;                 // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x024A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue4;                  // 0x024B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue5;                  // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_WhichBehaviorSound                       Temp_byte_Variable;                                // 0x0254(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_255[0x3];                                      // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             CallFunc_Map_Find_Value;                           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGActorStat_Bool*                     CallFunc_GetIsDeadStat_ReturnValue6;               // 0x0268(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValue_ReturnValue6;                    // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGActorStat_Bool*                     CallFunc_GetIsDeadStat_ReturnValue7;               // 0x0278(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValue_ReturnValue7;                    // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue6;                  // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0282(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_283[0x1];                                      // 0x0283(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FGameplayTag& _rTag)>   K2Node_CreateDelegate_OutputDelegate;              // 0x0284(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Handle_VO_Output_isplaying_isplaying1;    // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue7;                  // 0x0295(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_296[0x2];                                      // 0x0296(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FGameplayTag& _rTag)>   K2Node_CreateDelegate_OutputDelegate1;             // 0x0298(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue5;                 // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event__bNewState;                           // 0x02AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AB[0x1];                                      // 0x02AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event__event;                               // 0x02AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B5[0x3];                                      // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_AddLocalOffset_SweepHitResult;         // 0x02B8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base) == 0x000008, "Wrong alignment on BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base");
static_assert(sizeof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base) == 0x000340, "Wrong size on BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, EntryPoint) == 0x000000, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_GetDisplayName_ReturnValue) == 0x000018, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue1) == 0x000028, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, K2Node_CustomEvent__rTag1) == 0x000048, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::K2Node_CustomEvent__rTag1' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_Concat_StrStr_ReturnValue1) == 0x000050, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000060, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_Concat_StrStr_ReturnValue2) == 0x000068, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_EqualEqual_GameplayTag_ReturnValue1) == 0x000078, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_EqualEqual_GameplayTag_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_Concat_StrStr_ReturnValue3) == 0x000080, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_BooleanOR_ReturnValue) == 0x000090, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, K2Node_Event__newState) == 0x000091, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::K2Node_Event__newState' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000092, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, K2Node_CustomEvent__rTag) == 0x000094, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::K2Node_CustomEvent__rTag' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_EqualEqual_GameplayTag_ReturnValue2) == 0x00009C, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_EqualEqual_GameplayTag_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_EqualEqual_GameplayTag_ReturnValue3) == 0x00009D, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_EqualEqual_GameplayTag_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_BooleanOR_ReturnValue1) == 0x00009E, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x00009F, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, K2Node_ComponentBoundEvent__rTag1) == 0x0000A0, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::K2Node_ComponentBoundEvent__rTag1' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, K2Node_ComponentBoundEvent__rTag) == 0x0000A8, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::K2Node_ComponentBoundEvent__rTag' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_EqualEqual_GameplayTag_ReturnValue4) == 0x0000B0, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_EqualEqual_GameplayTag_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_EqualEqual_GameplayTag_ReturnValue5) == 0x0000B1, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_EqualEqual_GameplayTag_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_EqualEqual_GameplayTag_ReturnValue6) == 0x0000B2, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_EqualEqual_GameplayTag_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_EqualEqual_GameplayTag_ReturnValue7) == 0x0000B3, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_EqualEqual_GameplayTag_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_EqualEqual_GameplayTag_ReturnValue8) == 0x0000B4, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_EqualEqual_GameplayTag_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_EqualEqual_GameplayTag_ReturnValue9) == 0x0000B5, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_EqualEqual_GameplayTag_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_BooleanOR_ReturnValue2) == 0x0000B6, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_EqualEqual_GameplayTag_ReturnValue10) == 0x0000B7, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_EqualEqual_GameplayTag_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_EqualEqual_GameplayTag_ReturnValue11) == 0x0000B8, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_EqualEqual_GameplayTag_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_EqualEqual_GameplayTag_ReturnValue12) == 0x0000B9, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_EqualEqual_GameplayTag_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_EqualEqual_GameplayTag_ReturnValue13) == 0x0000BA, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_EqualEqual_GameplayTag_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_BooleanOR_ReturnValue3) == 0x0000BB, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_BooleanOR_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_GetIsDeadStat_ReturnValue) == 0x0000C0, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_GetIsDeadStat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_GetValue_ReturnValue) == 0x0000C8, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_GetIsDeadStat_ReturnValue1) == 0x0000D0, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_GetIsDeadStat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_GetIsDeadStat_ReturnValue2) == 0x0000D8, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_GetIsDeadStat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_GetValue_ReturnValue1) == 0x0000E0, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_GetValue_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_GetValue_ReturnValue2) == 0x0000E1, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_GetValue_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, K2Node_ComponentBoundEvent__pPawnDamage) == 0x0000E8, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::K2Node_ComponentBoundEvent__pPawnDamage' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, K2Node_ComponentBoundEvent__fDamage) == 0x0000F0, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::K2Node_ComponentBoundEvent__fDamage' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, K2Node_ComponentBoundEvent__pDamageCauser) == 0x0000F8, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::K2Node_ComponentBoundEvent__pDamageCauser' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, K2Node_ComponentBoundEvent__pDamageType) == 0x000100, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::K2Node_ComponentBoundEvent__pDamageType' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, K2Node_ComponentBoundEvent__rShotDirection) == 0x000108, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::K2Node_ComponentBoundEvent__rShotDirection' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, K2Node_ComponentBoundEvent__oHitResult) == 0x000114, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::K2Node_ComponentBoundEvent__oHitResult' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_CheckIfElectrocuteDamage_yesElectrocute) == 0x00019C, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_CheckIfElectrocuteDamage_yesElectrocute' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_CheckIfElectrocuteDamage_yesProbed) == 0x00019D, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_CheckIfElectrocuteDamage_yesProbed' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_CheckIfElectrocuteDamage_yesDeathrayed) == 0x00019E, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_CheckIfElectrocuteDamage_yesDeathrayed' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_CheckIfElectrocuteDamage_yesElectrocute1) == 0x00019F, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_CheckIfElectrocuteDamage_yesElectrocute1' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_CheckIfElectrocuteDamage_yesProbed1) == 0x0001A0, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_CheckIfElectrocuteDamage_yesProbed1' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_CheckIfElectrocuteDamage_yesDeathrayed1) == 0x0001A1, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_CheckIfElectrocuteDamage_yesDeathrayed1' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_Not_PreBool_ReturnValue) == 0x0001A2, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_Not_PreBool_ReturnValue1) == 0x0001A3, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_Not_PreBool_ReturnValue2) == 0x0001A4, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_Handle_VO_Output_isplaying_isplaying) == 0x0001A5, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_Handle_VO_Output_isplaying_isplaying' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_BooleanAND_ReturnValue) == 0x0001A6, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_BooleanAND_ReturnValue1) == 0x0001A7, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x0001A8, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_EqualEqual_ByteByte_ReturnValue3) == 0x0001A9, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_EqualEqual_ByteByte_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_BooleanOR_ReturnValue4) == 0x0001AA, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_BooleanOR_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_GetBlackboard_ReturnValue) == 0x0001B0, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_GetComponentByClass_ReturnValue) == 0x0001B8, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_GetMonetaryValue_ReturnValue) == 0x0001C0, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_GetMonetaryValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_ActivateEffectAttachToActor_ReturnValue) == 0x0001C8, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_ActivateEffectAttachToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, K2Node_Event__bIsFaceDown) == 0x0001D8, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::K2Node_Event__bIsFaceDown' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, K2Node_Event__oAnimationSnapshot) == 0x0001E0, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::K2Node_Event__oAnimationSnapshot' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, K2Node_Event_DeltaSeconds) == 0x000218, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_GetIsDeadStat_ReturnValue3) == 0x000220, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_GetIsDeadStat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_GetValue_ReturnValue3) == 0x000228, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_GetValue_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_Not_PreBool_ReturnValue3) == 0x000229, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_BooleanAND_ReturnValue2) == 0x00022A, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_GetIsDeadStat_ReturnValue4) == 0x000230, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_GetIsDeadStat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_GetValue_ReturnValue4) == 0x000238, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_GetValue_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_GetIsDeadStat_ReturnValue5) == 0x000240, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_GetIsDeadStat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_GetValue_ReturnValue5) == 0x000248, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_GetValue_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_Not_PreBool_ReturnValue4) == 0x000249, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_Not_PreBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_BooleanAND_ReturnValue3) == 0x00024A, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_BooleanAND_ReturnValue4) == 0x00024B, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_BooleanAND_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_BooleanAND_ReturnValue5) == 0x00024C, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_BooleanAND_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_RandomFloatInRange_ReturnValue) == 0x000250, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, Temp_byte_Variable) == 0x000254, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_Map_Find_Value) == 0x000258, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_Map_Find_ReturnValue) == 0x000260, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_GetIsDeadStat_ReturnValue6) == 0x000268, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_GetIsDeadStat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_GetValue_ReturnValue6) == 0x000270, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_GetValue_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_GetIsDeadStat_ReturnValue7) == 0x000278, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_GetIsDeadStat_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_GetValue_ReturnValue7) == 0x000280, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_GetValue_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_BooleanAND_ReturnValue6) == 0x000281, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_BooleanAND_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, Temp_bool_IsClosed_Variable) == 0x000282, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, K2Node_CreateDelegate_OutputDelegate) == 0x000284, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_Handle_VO_Output_isplaying_isplaying1) == 0x000294, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_Handle_VO_Output_isplaying_isplaying1' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_BooleanAND_ReturnValue7) == 0x000295, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_BooleanAND_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, K2Node_CreateDelegate_OutputDelegate1) == 0x000298, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_Not_PreBool_ReturnValue5) == 0x0002A8, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_Not_PreBool_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, Temp_bool_Has_Been_Initd_Variable) == 0x0002A9, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, K2Node_Event__bNewState) == 0x0002AA, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::K2Node_Event__bNewState' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, K2Node_Event__event) == 0x0002AC, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::K2Node_Event__event' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, K2Node_SwitchName_CmpSuccess) == 0x0002B4, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base, CallFunc_K2_AddLocalOffset_SweepHitResult) == 0x0002B8, "Member 'BP_Character_Civilian_Base_C_ExecuteUbergraph_BP_Character_Civilian_Base::CallFunc_K2_AddLocalOffset_SweepHitResult' has a wrong offset!");

// Function BP_Character_Civilian_Base.BP_Character_Civilian_Base_C.TriggerVO
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_Civilian_Base_C_TriggerVO final
{
public:
	class FName                                   _event;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_Civilian_Base_C_TriggerVO) == 0x000004, "Wrong alignment on BP_Character_Civilian_Base_C_TriggerVO");
static_assert(sizeof(BP_Character_Civilian_Base_C_TriggerVO) == 0x000008, "Wrong size on BP_Character_Civilian_Base_C_TriggerVO");
static_assert(offsetof(BP_Character_Civilian_Base_C_TriggerVO, _event) == 0x000000, "Member 'BP_Character_Civilian_Base_C_TriggerVO::_event' has a wrong offset!");

// Function BP_Character_Civilian_Base.BP_Character_Civilian_Base_C.OnDeadStateChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_Character_Civilian_Base_C_OnDeadStateChanged final
{
public:
	bool                                          _bNewState;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Character_Civilian_Base_C_OnDeadStateChanged) == 0x000001, "Wrong alignment on BP_Character_Civilian_Base_C_OnDeadStateChanged");
static_assert(sizeof(BP_Character_Civilian_Base_C_OnDeadStateChanged) == 0x000001, "Wrong size on BP_Character_Civilian_Base_C_OnDeadStateChanged");
static_assert(offsetof(BP_Character_Civilian_Base_C_OnDeadStateChanged, _bNewState) == 0x000000, "Member 'BP_Character_Civilian_Base_C_OnDeadStateChanged::_bNewState' has a wrong offset!");

// Function BP_Character_Civilian_Base.BP_Character_Civilian_Base_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Character_Civilian_Base_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_Civilian_Base_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Character_Civilian_Base_C_ReceiveTick");
static_assert(sizeof(BP_Character_Civilian_Base_C_ReceiveTick) == 0x000004, "Wrong size on BP_Character_Civilian_Base_C_ReceiveTick");
static_assert(offsetof(BP_Character_Civilian_Base_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Character_Civilian_Base_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Character_Civilian_Base.BP_Character_Civilian_Base_C.BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature
// 0x00B8 (0x00B8 - 0x0000)
struct BP_Character_Civilian_Base_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature final
{
public:
	class UBFGActorComponent_PawnDamage*          _pPawnDamage;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _fDamage;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 _pDamageCauser;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UBFGDamageType*                   _pDamageType;                                      // 0x0018(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                _rShotDirection;                                   // 0x0020(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             _oHitResult;                                       // 0x002C(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Character_Civilian_Base_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature) == 0x000008, "Wrong alignment on BP_Character_Civilian_Base_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature");
static_assert(sizeof(BP_Character_Civilian_Base_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature) == 0x0000B8, "Wrong size on BP_Character_Civilian_Base_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature");
static_assert(offsetof(BP_Character_Civilian_Base_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature, _pPawnDamage) == 0x000000, "Member 'BP_Character_Civilian_Base_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature::_pPawnDamage' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature, _fDamage) == 0x000008, "Member 'BP_Character_Civilian_Base_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature::_fDamage' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature, _pDamageCauser) == 0x000010, "Member 'BP_Character_Civilian_Base_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature::_pDamageCauser' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature, _pDamageType) == 0x000018, "Member 'BP_Character_Civilian_Base_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature::_pDamageType' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature, _rShotDirection) == 0x000020, "Member 'BP_Character_Civilian_Base_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature::_rShotDirection' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature, _oHitResult) == 0x00002C, "Member 'BP_Character_Civilian_Base_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature::_oHitResult' has a wrong offset!");

// Function BP_Character_Civilian_Base.BP_Character_Civilian_Base_C.BndEvt__m_pGameplayEffectTagsComponent_K2Node_ComponentBoundEvent_3_BFGGameplayEffectTags_Event__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_Civilian_Base_C_BndEvt__m_pGameplayEffectTagsComponent_K2Node_ComponentBoundEvent_3_BFGGameplayEffectTags_Event__DelegateSignature final
{
public:
	struct FGameplayTag                           _rTag;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_Civilian_Base_C_BndEvt__m_pGameplayEffectTagsComponent_K2Node_ComponentBoundEvent_3_BFGGameplayEffectTags_Event__DelegateSignature) == 0x000004, "Wrong alignment on BP_Character_Civilian_Base_C_BndEvt__m_pGameplayEffectTagsComponent_K2Node_ComponentBoundEvent_3_BFGGameplayEffectTags_Event__DelegateSignature");
static_assert(sizeof(BP_Character_Civilian_Base_C_BndEvt__m_pGameplayEffectTagsComponent_K2Node_ComponentBoundEvent_3_BFGGameplayEffectTags_Event__DelegateSignature) == 0x000008, "Wrong size on BP_Character_Civilian_Base_C_BndEvt__m_pGameplayEffectTagsComponent_K2Node_ComponentBoundEvent_3_BFGGameplayEffectTags_Event__DelegateSignature");
static_assert(offsetof(BP_Character_Civilian_Base_C_BndEvt__m_pGameplayEffectTagsComponent_K2Node_ComponentBoundEvent_3_BFGGameplayEffectTags_Event__DelegateSignature, _rTag) == 0x000000, "Member 'BP_Character_Civilian_Base_C_BndEvt__m_pGameplayEffectTagsComponent_K2Node_ComponentBoundEvent_3_BFGGameplayEffectTags_Event__DelegateSignature::_rTag' has a wrong offset!");

// Function BP_Character_Civilian_Base.BP_Character_Civilian_Base_C.BndEvt__m_pGameplayEffectTagsComponent_K2Node_ComponentBoundEvent_1_BFGGameplayEffectTags_Event__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_Civilian_Base_C_BndEvt__m_pGameplayEffectTagsComponent_K2Node_ComponentBoundEvent_1_BFGGameplayEffectTags_Event__DelegateSignature final
{
public:
	struct FGameplayTag                           _rTag;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_Civilian_Base_C_BndEvt__m_pGameplayEffectTagsComponent_K2Node_ComponentBoundEvent_1_BFGGameplayEffectTags_Event__DelegateSignature) == 0x000004, "Wrong alignment on BP_Character_Civilian_Base_C_BndEvt__m_pGameplayEffectTagsComponent_K2Node_ComponentBoundEvent_1_BFGGameplayEffectTags_Event__DelegateSignature");
static_assert(sizeof(BP_Character_Civilian_Base_C_BndEvt__m_pGameplayEffectTagsComponent_K2Node_ComponentBoundEvent_1_BFGGameplayEffectTags_Event__DelegateSignature) == 0x000008, "Wrong size on BP_Character_Civilian_Base_C_BndEvt__m_pGameplayEffectTagsComponent_K2Node_ComponentBoundEvent_1_BFGGameplayEffectTags_Event__DelegateSignature");
static_assert(offsetof(BP_Character_Civilian_Base_C_BndEvt__m_pGameplayEffectTagsComponent_K2Node_ComponentBoundEvent_1_BFGGameplayEffectTags_Event__DelegateSignature, _rTag) == 0x000000, "Member 'BP_Character_Civilian_Base_C_BndEvt__m_pGameplayEffectTagsComponent_K2Node_ComponentBoundEvent_1_BFGGameplayEffectTags_Event__DelegateSignature::_rTag' has a wrong offset!");

// Function BP_Character_Civilian_Base.BP_Character_Civilian_Base_C.OnTagActive
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_Civilian_Base_C_OnTagActive final
{
public:
	struct FGameplayTag                           _rTag;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_Civilian_Base_C_OnTagActive) == 0x000004, "Wrong alignment on BP_Character_Civilian_Base_C_OnTagActive");
static_assert(sizeof(BP_Character_Civilian_Base_C_OnTagActive) == 0x000008, "Wrong size on BP_Character_Civilian_Base_C_OnTagActive");
static_assert(offsetof(BP_Character_Civilian_Base_C_OnTagActive, _rTag) == 0x000000, "Member 'BP_Character_Civilian_Base_C_OnTagActive::_rTag' has a wrong offset!");

// Function BP_Character_Civilian_Base.BP_Character_Civilian_Base_C.OnTagInactive
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_Civilian_Base_C_OnTagInactive final
{
public:
	struct FGameplayTag                           _rTag;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_Civilian_Base_C_OnTagInactive) == 0x000004, "Wrong alignment on BP_Character_Civilian_Base_C_OnTagInactive");
static_assert(sizeof(BP_Character_Civilian_Base_C_OnTagInactive) == 0x000008, "Wrong size on BP_Character_Civilian_Base_C_OnTagInactive");
static_assert(offsetof(BP_Character_Civilian_Base_C_OnTagInactive, _rTag) == 0x000000, "Member 'BP_Character_Civilian_Base_C_OnTagInactive::_rTag' has a wrong offset!");

// Function BP_Character_Civilian_Base.BP_Character_Civilian_Base_C.OnAIStateChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_Character_Civilian_Base_C_OnAIStateChanged final
{
public:
	EBFGBehaviourState_NPC                        _newState;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_Civilian_Base_C_OnAIStateChanged) == 0x000001, "Wrong alignment on BP_Character_Civilian_Base_C_OnAIStateChanged");
static_assert(sizeof(BP_Character_Civilian_Base_C_OnAIStateChanged) == 0x000001, "Wrong size on BP_Character_Civilian_Base_C_OnAIStateChanged");
static_assert(offsetof(BP_Character_Civilian_Base_C_OnAIStateChanged, _newState) == 0x000000, "Member 'BP_Character_Civilian_Base_C_OnAIStateChanged::_newState' has a wrong offset!");

// Function BP_Character_Civilian_Base.BP_Character_Civilian_Base_C.OnReadyToStandUp
// 0x0040 (0x0040 - 0x0000)
struct BP_Character_Civilian_Base_C_OnReadyToStandUp final
{
public:
	bool                                          _bIsFaceDown;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPoseSnapshot                          _oAnimationSnapshot;                               // 0x0008(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_Character_Civilian_Base_C_OnReadyToStandUp) == 0x000008, "Wrong alignment on BP_Character_Civilian_Base_C_OnReadyToStandUp");
static_assert(sizeof(BP_Character_Civilian_Base_C_OnReadyToStandUp) == 0x000040, "Wrong size on BP_Character_Civilian_Base_C_OnReadyToStandUp");
static_assert(offsetof(BP_Character_Civilian_Base_C_OnReadyToStandUp, _bIsFaceDown) == 0x000000, "Member 'BP_Character_Civilian_Base_C_OnReadyToStandUp::_bIsFaceDown' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_OnReadyToStandUp, _oAnimationSnapshot) == 0x000008, "Member 'BP_Character_Civilian_Base_C_OnReadyToStandUp::_oAnimationSnapshot' has a wrong offset!");

// Function BP_Character_Civilian_Base.BP_Character_Civilian_Base_C.PKPhysicalAnimation
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_Civilian_Base_C_PKPhysicalAnimation final
{
public:
	class FName                                   PhysicalProfile_0;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_Civilian_Base_C_PKPhysicalAnimation) == 0x000004, "Wrong alignment on BP_Character_Civilian_Base_C_PKPhysicalAnimation");
static_assert(sizeof(BP_Character_Civilian_Base_C_PKPhysicalAnimation) == 0x000008, "Wrong size on BP_Character_Civilian_Base_C_PKPhysicalAnimation");
static_assert(offsetof(BP_Character_Civilian_Base_C_PKPhysicalAnimation, PhysicalProfile_0) == 0x000000, "Member 'BP_Character_Civilian_Base_C_PKPhysicalAnimation::PhysicalProfile_0' has a wrong offset!");

// Function BP_Character_Civilian_Base.BP_Character_Civilian_Base_C.Play_Behaviour_VO
// 0x0080 (0x0080 - 0x0000)
struct BP_Character_Civilian_Base_C_Play_Behaviour_VO final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Handle_VO_Output_isplaying_isplaying;     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DetermineVOSituation_Success;             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Handle_VO_Output_isplaying_isplaying1;    // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue3;         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Handle_VO_Output_isplaying_isplaying2;    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue4;         // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue5;         // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue6;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue7;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Handle_VO_Output_isplaying_isplaying3;    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue3;                   // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue8;         // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue4;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue9;         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue5;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue4;                  // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Handle_VO_Output_isplaying_isplaying4;    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue10;        // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue5;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue6;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Handle_VO_Output_isplaying_isplaying5;    // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue11;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue7;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue8;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue4;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerInSaucer_IsInSaucer;              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             CallFunc_Map_Find_Value;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGActorStat_Bool*                     CallFunc_GetIsDeadStat_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValue_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue5;                 // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             CallFunc_Map_Find_Value1;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_Civilian_Base_C_Play_Behaviour_VO) == 0x000008, "Wrong alignment on BP_Character_Civilian_Base_C_Play_Behaviour_VO");
static_assert(sizeof(BP_Character_Civilian_Base_C_Play_Behaviour_VO) == 0x000080, "Wrong size on BP_Character_Civilian_Base_C_Play_Behaviour_VO");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x000001, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_BooleanAND_ReturnValue1) == 0x000004, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_Handle_VO_Output_isplaying_isplaying) == 0x000005, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_Handle_VO_Output_isplaying_isplaying' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_DetermineVOSituation_Success) == 0x000006, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_DetermineVOSituation_Success' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_Handle_VO_Output_isplaying_isplaying1) == 0x000007, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_Handle_VO_Output_isplaying_isplaying1' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x000008, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_EqualEqual_ByteByte_ReturnValue3) == 0x000009, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_EqualEqual_ByteByte_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_BooleanOR_ReturnValue) == 0x00000A, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_BooleanAND_ReturnValue2) == 0x00000B, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_Handle_VO_Output_isplaying_isplaying2) == 0x00000C, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_Handle_VO_Output_isplaying_isplaying2' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_Not_PreBool_ReturnValue1) == 0x00000D, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_EqualEqual_ByteByte_ReturnValue4) == 0x00000E, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_EqualEqual_ByteByte_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_EqualEqual_ByteByte_ReturnValue5) == 0x00000F, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_EqualEqual_ByteByte_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_EqualEqual_ByteByte_ReturnValue6) == 0x000010, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_EqualEqual_ByteByte_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_EqualEqual_ByteByte_ReturnValue7) == 0x000011, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_EqualEqual_ByteByte_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_Handle_VO_Output_isplaying_isplaying3) == 0x000012, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_Handle_VO_Output_isplaying_isplaying3' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_BooleanOR_ReturnValue1) == 0x000013, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_BooleanOR_ReturnValue2) == 0x000014, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_BooleanOR_ReturnValue3) == 0x000015, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_BooleanOR_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_BooleanAND_ReturnValue3) == 0x000016, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_EqualEqual_ByteByte_ReturnValue8) == 0x000017, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_EqualEqual_ByteByte_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_BooleanOR_ReturnValue4) == 0x000018, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_BooleanOR_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_EqualEqual_ByteByte_ReturnValue9) == 0x000019, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_EqualEqual_ByteByte_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_BooleanOR_ReturnValue5) == 0x00001A, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_BooleanOR_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_BooleanAND_ReturnValue4) == 0x00001B, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_BooleanAND_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_Handle_VO_Output_isplaying_isplaying4) == 0x00001C, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_Handle_VO_Output_isplaying_isplaying4' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_Not_PreBool_ReturnValue2) == 0x00001D, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_EqualEqual_ByteByte_ReturnValue10) == 0x00001E, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_EqualEqual_ByteByte_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_RandomFloatInRange_ReturnValue) == 0x000020, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_BooleanAND_ReturnValue5) == 0x000024, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_BooleanAND_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_BooleanAND_ReturnValue6) == 0x000025, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_BooleanAND_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_Handle_VO_Output_isplaying_isplaying5) == 0x000026, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_Handle_VO_Output_isplaying_isplaying5' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_Not_PreBool_ReturnValue3) == 0x000027, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_EqualEqual_ByteByte_ReturnValue11) == 0x000028, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_EqualEqual_ByteByte_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_BooleanAND_ReturnValue7) == 0x000029, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_BooleanAND_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_BooleanAND_ReturnValue8) == 0x00002A, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_BooleanAND_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, K2Node_SwitchInteger_CmpSuccess) == 0x00002B, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_GetPlayerPawn_ReturnValue) == 0x000030, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_Not_PreBool_ReturnValue4) == 0x000038, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_Not_PreBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_IsPlayerInSaucer_IsInSaucer) == 0x000039, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_IsPlayerInSaucer_IsInSaucer' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_IsPlaying_ReturnValue) == 0x00003A, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_Map_Find_Value) == 0x000040, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_Map_Find_ReturnValue) == 0x000048, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_GetIsDeadStat_ReturnValue) == 0x000050, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_GetIsDeadStat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_GetValue_ReturnValue) == 0x000058, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_Not_PreBool_ReturnValue5) == 0x000059, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_Not_PreBool_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_Map_Find_Value1) == 0x000060, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_Map_Find_Value1' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_Map_Find_ReturnValue1) == 0x000068, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_Map_Find_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Play_Behaviour_VO, CallFunc_GetDisplayName_ReturnValue) == 0x000070, "Member 'BP_Character_Civilian_Base_C_Play_Behaviour_VO::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");

// Function BP_Character_Civilian_Base.BP_Character_Civilian_Base_C.CheckIfElectrocuteDamage
// 0x0040 (0x0040 - 0x0000)
struct BP_Character_Civilian_Base_C_CheckIfElectrocuteDamage final
{
public:
	const class UBFGDamageType*                   IncomingDamage;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          YesElectrocute;                                    // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          YesProbed;                                         // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          YesDeathrayed;                                     // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGActorStat_Float*                    CallFunc_GetHealthStat_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRatio_ReturnValue;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_Civilian_Base_C_CheckIfElectrocuteDamage) == 0x000008, "Wrong alignment on BP_Character_Civilian_Base_C_CheckIfElectrocuteDamage");
static_assert(sizeof(BP_Character_Civilian_Base_C_CheckIfElectrocuteDamage) == 0x000040, "Wrong size on BP_Character_Civilian_Base_C_CheckIfElectrocuteDamage");
static_assert(offsetof(BP_Character_Civilian_Base_C_CheckIfElectrocuteDamage, IncomingDamage) == 0x000000, "Member 'BP_Character_Civilian_Base_C_CheckIfElectrocuteDamage::IncomingDamage' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_CheckIfElectrocuteDamage, YesElectrocute) == 0x000008, "Member 'BP_Character_Civilian_Base_C_CheckIfElectrocuteDamage::YesElectrocute' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_CheckIfElectrocuteDamage, YesProbed) == 0x000009, "Member 'BP_Character_Civilian_Base_C_CheckIfElectrocuteDamage::YesProbed' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_CheckIfElectrocuteDamage, YesDeathrayed) == 0x00000A, "Member 'BP_Character_Civilian_Base_C_CheckIfElectrocuteDamage::YesDeathrayed' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_CheckIfElectrocuteDamage, CallFunc_IsValid_ReturnValue) == 0x00000B, "Member 'BP_Character_Civilian_Base_C_CheckIfElectrocuteDamage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_CheckIfElectrocuteDamage, K2Node_SwitchEnum_CmpSuccess) == 0x00000C, "Member 'BP_Character_Civilian_Base_C_CheckIfElectrocuteDamage::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_CheckIfElectrocuteDamage, CallFunc_GetHealthStat_ReturnValue) == 0x000010, "Member 'BP_Character_Civilian_Base_C_CheckIfElectrocuteDamage::CallFunc_GetHealthStat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_CheckIfElectrocuteDamage, CallFunc_GetRatio_ReturnValue) == 0x000018, "Member 'BP_Character_Civilian_Base_C_CheckIfElectrocuteDamage::CallFunc_GetRatio_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_CheckIfElectrocuteDamage, CallFunc_Conv_FloatToString_ReturnValue) == 0x000020, "Member 'BP_Character_Civilian_Base_C_CheckIfElectrocuteDamage::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_CheckIfElectrocuteDamage, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BP_Character_Civilian_Base_C_CheckIfElectrocuteDamage::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_Character_Civilian_Base.BP_Character_Civilian_Base_C.DetermineVOSituation
// 0x0009 (0x0009 - 0x0000)
struct BP_Character_Civilian_Base_C_DetermineVOSituation final
{
public:
	EBFGBehaviourState_NPC                        Selection;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoWePlayCurious_ShouldWe;                 // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoWePlayCurious_ShouldWe1;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum2_CmpSuccess;                     // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum3_CmpSuccess;                     // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum4_CmpSuccess;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Character_Civilian_Base_C_DetermineVOSituation) == 0x000001, "Wrong alignment on BP_Character_Civilian_Base_C_DetermineVOSituation");
static_assert(sizeof(BP_Character_Civilian_Base_C_DetermineVOSituation) == 0x000009, "Wrong size on BP_Character_Civilian_Base_C_DetermineVOSituation");
static_assert(offsetof(BP_Character_Civilian_Base_C_DetermineVOSituation, Selection) == 0x000000, "Member 'BP_Character_Civilian_Base_C_DetermineVOSituation::Selection' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_DetermineVOSituation, Success) == 0x000001, "Member 'BP_Character_Civilian_Base_C_DetermineVOSituation::Success' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_DetermineVOSituation, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'BP_Character_Civilian_Base_C_DetermineVOSituation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_DetermineVOSituation, CallFunc_DoWePlayCurious_ShouldWe) == 0x000003, "Member 'BP_Character_Civilian_Base_C_DetermineVOSituation::CallFunc_DoWePlayCurious_ShouldWe' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_DetermineVOSituation, CallFunc_DoWePlayCurious_ShouldWe1) == 0x000004, "Member 'BP_Character_Civilian_Base_C_DetermineVOSituation::CallFunc_DoWePlayCurious_ShouldWe1' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_DetermineVOSituation, K2Node_SwitchEnum1_CmpSuccess) == 0x000005, "Member 'BP_Character_Civilian_Base_C_DetermineVOSituation::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_DetermineVOSituation, K2Node_SwitchEnum2_CmpSuccess) == 0x000006, "Member 'BP_Character_Civilian_Base_C_DetermineVOSituation::K2Node_SwitchEnum2_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_DetermineVOSituation, K2Node_SwitchEnum3_CmpSuccess) == 0x000007, "Member 'BP_Character_Civilian_Base_C_DetermineVOSituation::K2Node_SwitchEnum3_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_DetermineVOSituation, K2Node_SwitchEnum4_CmpSuccess) == 0x000008, "Member 'BP_Character_Civilian_Base_C_DetermineVOSituation::K2Node_SwitchEnum4_CmpSuccess' has a wrong offset!");

// Function BP_Character_Civilian_Base.BP_Character_Civilian_Base_C.Handle_VO_Output_Play
// 0x0030 (0x0030 - 0x0000)
struct BP_Character_Civilian_Base_C_Handle_VO_Output_Play final
{
public:
	class USoundBase*                             WhichSound;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeinSec;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StarttimeSec;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WhichInteger;                                      // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        WhichNot;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        WhichOutput;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Character_Civilian_Base_C_Handle_VO_Output_Play) == 0x000008, "Wrong alignment on BP_Character_Civilian_Base_C_Handle_VO_Output_Play");
static_assert(sizeof(BP_Character_Civilian_Base_C_Handle_VO_Output_Play) == 0x000030, "Wrong size on BP_Character_Civilian_Base_C_Handle_VO_Output_Play");
static_assert(offsetof(BP_Character_Civilian_Base_C_Handle_VO_Output_Play, WhichSound) == 0x000000, "Member 'BP_Character_Civilian_Base_C_Handle_VO_Output_Play::WhichSound' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Handle_VO_Output_Play, FadeinSec) == 0x000008, "Member 'BP_Character_Civilian_Base_C_Handle_VO_Output_Play::FadeinSec' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Handle_VO_Output_Play, StarttimeSec) == 0x00000C, "Member 'BP_Character_Civilian_Base_C_Handle_VO_Output_Play::StarttimeSec' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Handle_VO_Output_Play, WhichInteger) == 0x000010, "Member 'BP_Character_Civilian_Base_C_Handle_VO_Output_Play::WhichInteger' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Handle_VO_Output_Play, WhichNot) == 0x000018, "Member 'BP_Character_Civilian_Base_C_Handle_VO_Output_Play::WhichNot' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Handle_VO_Output_Play, WhichOutput) == 0x000020, "Member 'BP_Character_Civilian_Base_C_Handle_VO_Output_Play::WhichOutput' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Handle_VO_Output_Play, CallFunc_IsPlaying_ReturnValue) == 0x000028, "Member 'BP_Character_Civilian_Base_C_Handle_VO_Output_Play::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Handle_VO_Output_Play, K2Node_SwitchInteger_CmpSuccess) == 0x000029, "Member 'BP_Character_Civilian_Base_C_Handle_VO_Output_Play::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BP_Character_Civilian_Base.BP_Character_Civilian_Base_C.Handle_VO_Output_isplaying
// 0x0020 (0x0020 - 0x0000)
struct BP_Character_Civilian_Base_C_Handle_VO_Output_isplaying final
{
public:
	bool                                          IsPlaying;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WhichInteger;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        WhichNot;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        WhichOutput;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue1;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Character_Civilian_Base_C_Handle_VO_Output_isplaying) == 0x000008, "Wrong alignment on BP_Character_Civilian_Base_C_Handle_VO_Output_isplaying");
static_assert(sizeof(BP_Character_Civilian_Base_C_Handle_VO_Output_isplaying) == 0x000020, "Wrong size on BP_Character_Civilian_Base_C_Handle_VO_Output_isplaying");
static_assert(offsetof(BP_Character_Civilian_Base_C_Handle_VO_Output_isplaying, IsPlaying) == 0x000000, "Member 'BP_Character_Civilian_Base_C_Handle_VO_Output_isplaying::IsPlaying' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Handle_VO_Output_isplaying, WhichInteger) == 0x000004, "Member 'BP_Character_Civilian_Base_C_Handle_VO_Output_isplaying::WhichInteger' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Handle_VO_Output_isplaying, WhichNot) == 0x000008, "Member 'BP_Character_Civilian_Base_C_Handle_VO_Output_isplaying::WhichNot' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Handle_VO_Output_isplaying, WhichOutput) == 0x000010, "Member 'BP_Character_Civilian_Base_C_Handle_VO_Output_isplaying::WhichOutput' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Handle_VO_Output_isplaying, CallFunc_IsPlaying_ReturnValue) == 0x000018, "Member 'BP_Character_Civilian_Base_C_Handle_VO_Output_isplaying::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Handle_VO_Output_isplaying, CallFunc_IsPlaying_ReturnValue1) == 0x000019, "Member 'BP_Character_Civilian_Base_C_Handle_VO_Output_isplaying::CallFunc_IsPlaying_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Handle_VO_Output_isplaying, K2Node_SwitchInteger_CmpSuccess) == 0x00001A, "Member 'BP_Character_Civilian_Base_C_Handle_VO_Output_isplaying::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BP_Character_Civilian_Base.BP_Character_Civilian_Base_C.Handle_VO_Output_Stop
// 0x0020 (0x0020 - 0x0000)
struct BP_Character_Civilian_Base_C_Handle_VO_Output_Stop final
{
public:
	float                                         FadeoutSec;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WhichInteger;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        WhichNot;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        WhichOutput;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Character_Civilian_Base_C_Handle_VO_Output_Stop) == 0x000008, "Wrong alignment on BP_Character_Civilian_Base_C_Handle_VO_Output_Stop");
static_assert(sizeof(BP_Character_Civilian_Base_C_Handle_VO_Output_Stop) == 0x000020, "Wrong size on BP_Character_Civilian_Base_C_Handle_VO_Output_Stop");
static_assert(offsetof(BP_Character_Civilian_Base_C_Handle_VO_Output_Stop, FadeoutSec) == 0x000000, "Member 'BP_Character_Civilian_Base_C_Handle_VO_Output_Stop::FadeoutSec' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Handle_VO_Output_Stop, WhichInteger) == 0x000004, "Member 'BP_Character_Civilian_Base_C_Handle_VO_Output_Stop::WhichInteger' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Handle_VO_Output_Stop, WhichNot) == 0x000008, "Member 'BP_Character_Civilian_Base_C_Handle_VO_Output_Stop::WhichNot' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Handle_VO_Output_Stop, WhichOutput) == 0x000010, "Member 'BP_Character_Civilian_Base_C_Handle_VO_Output_Stop::WhichOutput' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Handle_VO_Output_Stop, CallFunc_IsPlaying_ReturnValue) == 0x000018, "Member 'BP_Character_Civilian_Base_C_Handle_VO_Output_Stop::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Handle_VO_Output_Stop, K2Node_SwitchInteger_CmpSuccess) == 0x000019, "Member 'BP_Character_Civilian_Base_C_Handle_VO_Output_Stop::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BP_Character_Civilian_Base.BP_Character_Civilian_Base_C.ZapOMaticDeathFade
// 0x0020 (0x0020 - 0x0000)
struct BP_Character_Civilian_Base_C_ZapOMaticDeathFade final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGActorStat_Bool*                     CallFunc_GetIsDeadStat_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValue_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Character_Civilian_Base_C_ZapOMaticDeathFade) == 0x000008, "Wrong alignment on BP_Character_Civilian_Base_C_ZapOMaticDeathFade");
static_assert(sizeof(BP_Character_Civilian_Base_C_ZapOMaticDeathFade) == 0x000020, "Wrong size on BP_Character_Civilian_Base_C_ZapOMaticDeathFade");
static_assert(offsetof(BP_Character_Civilian_Base_C_ZapOMaticDeathFade, DeltaTime) == 0x000000, "Member 'BP_Character_Civilian_Base_C_ZapOMaticDeathFade::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ZapOMaticDeathFade, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_Character_Civilian_Base_C_ZapOMaticDeathFade::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ZapOMaticDeathFade, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_Character_Civilian_Base_C_ZapOMaticDeathFade::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ZapOMaticDeathFade, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_Character_Civilian_Base_C_ZapOMaticDeathFade::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ZapOMaticDeathFade, CallFunc_GetIsDeadStat_ReturnValue) == 0x000010, "Member 'BP_Character_Civilian_Base_C_ZapOMaticDeathFade::CallFunc_GetIsDeadStat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ZapOMaticDeathFade, CallFunc_GetValue_ReturnValue) == 0x000018, "Member 'BP_Character_Civilian_Base_C_ZapOMaticDeathFade::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_ZapOMaticDeathFade, CallFunc_BooleanAND_ReturnValue) == 0x000019, "Member 'BP_Character_Civilian_Base_C_ZapOMaticDeathFade::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_Character_Civilian_Base.BP_Character_Civilian_Base_C.TurnOffCloth
// 0x0018 (0x0018 - 0x0000)
struct BP_Character_Civilian_Base_C_TurnOffCloth final
{
public:
	bool                                          CallFunc_IsAnySimulatingPhysics_ReturnValue;       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_Civilian_Base_C_TurnOffCloth) == 0x000008, "Wrong alignment on BP_Character_Civilian_Base_C_TurnOffCloth");
static_assert(sizeof(BP_Character_Civilian_Base_C_TurnOffCloth) == 0x000018, "Wrong size on BP_Character_Civilian_Base_C_TurnOffCloth");
static_assert(offsetof(BP_Character_Civilian_Base_C_TurnOffCloth, CallFunc_IsAnySimulatingPhysics_ReturnValue) == 0x000000, "Member 'BP_Character_Civilian_Base_C_TurnOffCloth::CallFunc_IsAnySimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_TurnOffCloth, CallFunc_BooleanOR_ReturnValue) == 0x000001, "Member 'BP_Character_Civilian_Base_C_TurnOffCloth::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_TurnOffCloth, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_Character_Civilian_Base_C_TurnOffCloth::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_TurnOffCloth, CallFunc_GetCurveValue_ReturnValue) == 0x000010, "Member 'BP_Character_Civilian_Base_C_TurnOffCloth::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_TurnOffCloth, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_Character_Civilian_Base_C_TurnOffCloth::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_Character_Civilian_Base.BP_Character_Civilian_Base_C.Stop_All_Behaviour_VO
// 0x0002 (0x0002 - 0x0000)
struct BP_Character_Civilian_Base_C_Stop_All_Behaviour_VO final
{
public:
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue1;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Character_Civilian_Base_C_Stop_All_Behaviour_VO) == 0x000001, "Wrong alignment on BP_Character_Civilian_Base_C_Stop_All_Behaviour_VO");
static_assert(sizeof(BP_Character_Civilian_Base_C_Stop_All_Behaviour_VO) == 0x000002, "Wrong size on BP_Character_Civilian_Base_C_Stop_All_Behaviour_VO");
static_assert(offsetof(BP_Character_Civilian_Base_C_Stop_All_Behaviour_VO, CallFunc_IsPlaying_ReturnValue) == 0x000000, "Member 'BP_Character_Civilian_Base_C_Stop_All_Behaviour_VO::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_Stop_All_Behaviour_VO, CallFunc_IsPlaying_ReturnValue1) == 0x000001, "Member 'BP_Character_Civilian_Base_C_Stop_All_Behaviour_VO::CallFunc_IsPlaying_ReturnValue1' has a wrong offset!");

// Function BP_Character_Civilian_Base.BP_Character_Civilian_Base_C.DoWePlayCurious
// 0x0034 (0x0034 - 0x0000)
struct BP_Character_Civilian_Base_C_DoWePlayCurious final
{
public:
	bool                                          IsExitCurious;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShouldWe;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LocalShouldWe;                                     // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMod_Remainder;                           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMod_Remainder1;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue1;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue1;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Character_Civilian_Base_C_DoWePlayCurious) == 0x000004, "Wrong alignment on BP_Character_Civilian_Base_C_DoWePlayCurious");
static_assert(sizeof(BP_Character_Civilian_Base_C_DoWePlayCurious) == 0x000034, "Wrong size on BP_Character_Civilian_Base_C_DoWePlayCurious");
static_assert(offsetof(BP_Character_Civilian_Base_C_DoWePlayCurious, IsExitCurious) == 0x000000, "Member 'BP_Character_Civilian_Base_C_DoWePlayCurious::IsExitCurious' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_DoWePlayCurious, ShouldWe) == 0x000001, "Member 'BP_Character_Civilian_Base_C_DoWePlayCurious::ShouldWe' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_DoWePlayCurious, LocalShouldWe) == 0x000002, "Member 'BP_Character_Civilian_Base_C_DoWePlayCurious::LocalShouldWe' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_DoWePlayCurious, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_Character_Civilian_Base_C_DoWePlayCurious::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_DoWePlayCurious, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'BP_Character_Civilian_Base_C_DoWePlayCurious::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_DoWePlayCurious, CallFunc_FMod_Remainder) == 0x00000C, "Member 'BP_Character_Civilian_Base_C_DoWePlayCurious::CallFunc_FMod_Remainder' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_DoWePlayCurious, CallFunc_FMod_ReturnValue) == 0x000010, "Member 'BP_Character_Civilian_Base_C_DoWePlayCurious::CallFunc_FMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_DoWePlayCurious, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_Character_Civilian_Base_C_DoWePlayCurious::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_DoWePlayCurious, CallFunc_Add_IntInt_ReturnValue1) == 0x000018, "Member 'BP_Character_Civilian_Base_C_DoWePlayCurious::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_DoWePlayCurious, Temp_int_Variable) == 0x00001C, "Member 'BP_Character_Civilian_Base_C_DoWePlayCurious::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_DoWePlayCurious, CallFunc_Add_IntInt_ReturnValue2) == 0x000020, "Member 'BP_Character_Civilian_Base_C_DoWePlayCurious::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_DoWePlayCurious, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x000024, "Member 'BP_Character_Civilian_Base_C_DoWePlayCurious::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_DoWePlayCurious, CallFunc_FMod_Remainder1) == 0x000028, "Member 'BP_Character_Civilian_Base_C_DoWePlayCurious::CallFunc_FMod_Remainder1' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_DoWePlayCurious, CallFunc_FMod_ReturnValue1) == 0x00002C, "Member 'BP_Character_Civilian_Base_C_DoWePlayCurious::CallFunc_FMod_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_DoWePlayCurious, CallFunc_EqualEqual_FloatFloat_ReturnValue1) == 0x000030, "Member 'BP_Character_Civilian_Base_C_DoWePlayCurious::CallFunc_EqualEqual_FloatFloat_ReturnValue1' has a wrong offset!");

// Function BP_Character_Civilian_Base.BP_Character_Civilian_Base_C.GetBrainSpawnLocation
// 0x0024 (0x0024 - 0x0000)
struct BP_Character_Civilian_Base_C_GetBrainSpawnLocation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_Civilian_Base_C_GetBrainSpawnLocation) == 0x000004, "Wrong alignment on BP_Character_Civilian_Base_C_GetBrainSpawnLocation");
static_assert(sizeof(BP_Character_Civilian_Base_C_GetBrainSpawnLocation) == 0x000024, "Wrong size on BP_Character_Civilian_Base_C_GetBrainSpawnLocation");
static_assert(offsetof(BP_Character_Civilian_Base_C_GetBrainSpawnLocation, ReturnValue) == 0x000000, "Member 'BP_Character_Civilian_Base_C_GetBrainSpawnLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_GetBrainSpawnLocation, CallFunc_GetSocketLocation_ReturnValue) == 0x00000C, "Member 'BP_Character_Civilian_Base_C_GetBrainSpawnLocation::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Civilian_Base_C_GetBrainSpawnLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000018, "Member 'BP_Character_Civilian_Base_C_GetBrainSpawnLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

}

