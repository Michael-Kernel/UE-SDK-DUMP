#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPW_OpportunityOverheadDisplay

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BPW_OpportunityOverheadDisplay.BPW_OpportunityOverheadDisplay_C.ExecuteUbergraph_BPW_OpportunityOverheadDisplay
// 0x0044 (0x0044 - 0x0000)
struct BPW_OpportunityOverheadDisplay_C_ExecuteUbergraph_BPW_OpportunityOverheadDisplay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_OpportunityOverheadDisplay_C_ExecuteUbergraph_BPW_OpportunityOverheadDisplay) == 0x000004, "Wrong alignment on BPW_OpportunityOverheadDisplay_C_ExecuteUbergraph_BPW_OpportunityOverheadDisplay");
static_assert(sizeof(BPW_OpportunityOverheadDisplay_C_ExecuteUbergraph_BPW_OpportunityOverheadDisplay) == 0x000044, "Wrong size on BPW_OpportunityOverheadDisplay_C_ExecuteUbergraph_BPW_OpportunityOverheadDisplay");
static_assert(offsetof(BPW_OpportunityOverheadDisplay_C_ExecuteUbergraph_BPW_OpportunityOverheadDisplay, EntryPoint) == 0x000000, "Member 'BPW_OpportunityOverheadDisplay_C_ExecuteUbergraph_BPW_OpportunityOverheadDisplay::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPW_OpportunityOverheadDisplay_C_ExecuteUbergraph_BPW_OpportunityOverheadDisplay, K2Node_Event_IsDesignTime) == 0x000004, "Member 'BPW_OpportunityOverheadDisplay_C_ExecuteUbergraph_BPW_OpportunityOverheadDisplay::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BPW_OpportunityOverheadDisplay_C_ExecuteUbergraph_BPW_OpportunityOverheadDisplay, K2Node_Event_MyGeometry) == 0x000008, "Member 'BPW_OpportunityOverheadDisplay_C_ExecuteUbergraph_BPW_OpportunityOverheadDisplay::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BPW_OpportunityOverheadDisplay_C_ExecuteUbergraph_BPW_OpportunityOverheadDisplay, K2Node_Event_InDeltaTime) == 0x000040, "Member 'BPW_OpportunityOverheadDisplay_C_ExecuteUbergraph_BPW_OpportunityOverheadDisplay::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function BPW_OpportunityOverheadDisplay.BPW_OpportunityOverheadDisplay_C.Tick
// 0x003C (0x003C - 0x0000)
struct BPW_OpportunityOverheadDisplay_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_OpportunityOverheadDisplay_C_Tick) == 0x000004, "Wrong alignment on BPW_OpportunityOverheadDisplay_C_Tick");
static_assert(sizeof(BPW_OpportunityOverheadDisplay_C_Tick) == 0x00003C, "Wrong size on BPW_OpportunityOverheadDisplay_C_Tick");
static_assert(offsetof(BPW_OpportunityOverheadDisplay_C_Tick, MyGeometry) == 0x000000, "Member 'BPW_OpportunityOverheadDisplay_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BPW_OpportunityOverheadDisplay_C_Tick, InDeltaTime) == 0x000038, "Member 'BPW_OpportunityOverheadDisplay_C_Tick::InDeltaTime' has a wrong offset!");

// Function BPW_OpportunityOverheadDisplay.BPW_OpportunityOverheadDisplay_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BPW_OpportunityOverheadDisplay_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPW_OpportunityOverheadDisplay_C_PreConstruct) == 0x000001, "Wrong alignment on BPW_OpportunityOverheadDisplay_C_PreConstruct");
static_assert(sizeof(BPW_OpportunityOverheadDisplay_C_PreConstruct) == 0x000001, "Wrong size on BPW_OpportunityOverheadDisplay_C_PreConstruct");
static_assert(offsetof(BPW_OpportunityOverheadDisplay_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BPW_OpportunityOverheadDisplay_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BPW_OpportunityOverheadDisplay.BPW_OpportunityOverheadDisplay_C.SetRTB
// 0x00D0 (0x00D0 - 0x0000)
struct BPW_OpportunityOverheadDisplay_C_SetRTB final
{
public:
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0018(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue1;           // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue2;           // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00A0(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue1;                 // 0x00B8(0x0018)()
};
static_assert(alignof(BPW_OpportunityOverheadDisplay_C_SetRTB) == 0x000008, "Wrong alignment on BPW_OpportunityOverheadDisplay_C_SetRTB");
static_assert(sizeof(BPW_OpportunityOverheadDisplay_C_SetRTB) == 0x0000D0, "Wrong size on BPW_OpportunityOverheadDisplay_C_SetRTB");
static_assert(offsetof(BPW_OpportunityOverheadDisplay_C_SetRTB, CallFunc_MakeLiteralString_ReturnValue) == 0x000000, "Member 'BPW_OpportunityOverheadDisplay_C_SetRTB::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_OpportunityOverheadDisplay_C_SetRTB, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000010, "Member 'BPW_OpportunityOverheadDisplay_C_SetRTB::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_OpportunityOverheadDisplay_C_SetRTB, CallFunc_TextToUpper_ReturnValue) == 0x000018, "Member 'BPW_OpportunityOverheadDisplay_C_SetRTB::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_OpportunityOverheadDisplay_C_SetRTB, CallFunc_Conv_TextToString_ReturnValue) == 0x000030, "Member 'BPW_OpportunityOverheadDisplay_C_SetRTB::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_OpportunityOverheadDisplay_C_SetRTB, CallFunc_MakeLiteralString_ReturnValue1) == 0x000040, "Member 'BPW_OpportunityOverheadDisplay_C_SetRTB::CallFunc_MakeLiteralString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPW_OpportunityOverheadDisplay_C_SetRTB, CallFunc_MakeLiteralString_ReturnValue2) == 0x000050, "Member 'BPW_OpportunityOverheadDisplay_C_SetRTB::CallFunc_MakeLiteralString_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPW_OpportunityOverheadDisplay_C_SetRTB, CallFunc_Concat_StrStr_ReturnValue) == 0x000060, "Member 'BPW_OpportunityOverheadDisplay_C_SetRTB::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_OpportunityOverheadDisplay_C_SetRTB, CallFunc_Concat_StrStr_ReturnValue1) == 0x000070, "Member 'BPW_OpportunityOverheadDisplay_C_SetRTB::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPW_OpportunityOverheadDisplay_C_SetRTB, CallFunc_Concat_StrStr_ReturnValue2) == 0x000080, "Member 'BPW_OpportunityOverheadDisplay_C_SetRTB::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPW_OpportunityOverheadDisplay_C_SetRTB, CallFunc_Concat_StrStr_ReturnValue3) == 0x000090, "Member 'BPW_OpportunityOverheadDisplay_C_SetRTB::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BPW_OpportunityOverheadDisplay_C_SetRTB, CallFunc_Conv_StringToText_ReturnValue) == 0x0000A0, "Member 'BPW_OpportunityOverheadDisplay_C_SetRTB::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_OpportunityOverheadDisplay_C_SetRTB, CallFunc_TextToUpper_ReturnValue1) == 0x0000B8, "Member 'BPW_OpportunityOverheadDisplay_C_SetRTB::CallFunc_TextToUpper_ReturnValue1' has a wrong offset!");

}

