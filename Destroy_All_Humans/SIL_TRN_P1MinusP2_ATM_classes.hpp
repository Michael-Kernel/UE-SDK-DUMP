#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SIL_TRN_P1MinusP2_ATM

#include "Basic.hpp"

#include "BFGCore_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass SIL_TRN_P1-P2_ATM.SIL_TRN_P1-P2_ATM_C
// 0x0030 (0x0450 - 0x0420)
class ASIL_TRN_P1MinusP2_ATM_C final : public ABFGPattern_Projectile
{
public:
	class UBFGPatternTargetMarker*                BFGPatternTargetMarker6;                           // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBFGPatternTargetMarker*                BFGPatternTargetMarker5;                           // 0x0428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBFGPatternTargetMarker*                BFGPatternTargetMarker4;                           // 0x0430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBFGPatternTargetMarker*                BFGPatternTargetMarker3;                           // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBFGPatternTargetMarker*                BFGPatternTargetMarker2;                           // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBFGPatternTargetMarker*                BFGPatternTargetMarker1;                           // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SIL_TRN_P1-P2_ATM_C">();
	}
	static class ASIL_TRN_P1MinusP2_ATM_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASIL_TRN_P1MinusP2_ATM_C>();
	}
};
static_assert(alignof(ASIL_TRN_P1MinusP2_ATM_C) == 0x000008, "Wrong alignment on ASIL_TRN_P1MinusP2_ATM_C");
static_assert(sizeof(ASIL_TRN_P1MinusP2_ATM_C) == 0x000450, "Wrong size on ASIL_TRN_P1MinusP2_ATM_C");
static_assert(offsetof(ASIL_TRN_P1MinusP2_ATM_C, BFGPatternTargetMarker6) == 0x000420, "Member 'ASIL_TRN_P1MinusP2_ATM_C::BFGPatternTargetMarker6' has a wrong offset!");
static_assert(offsetof(ASIL_TRN_P1MinusP2_ATM_C, BFGPatternTargetMarker5) == 0x000428, "Member 'ASIL_TRN_P1MinusP2_ATM_C::BFGPatternTargetMarker5' has a wrong offset!");
static_assert(offsetof(ASIL_TRN_P1MinusP2_ATM_C, BFGPatternTargetMarker4) == 0x000430, "Member 'ASIL_TRN_P1MinusP2_ATM_C::BFGPatternTargetMarker4' has a wrong offset!");
static_assert(offsetof(ASIL_TRN_P1MinusP2_ATM_C, BFGPatternTargetMarker3) == 0x000438, "Member 'ASIL_TRN_P1MinusP2_ATM_C::BFGPatternTargetMarker3' has a wrong offset!");
static_assert(offsetof(ASIL_TRN_P1MinusP2_ATM_C, BFGPatternTargetMarker2) == 0x000440, "Member 'ASIL_TRN_P1MinusP2_ATM_C::BFGPatternTargetMarker2' has a wrong offset!");
static_assert(offsetof(ASIL_TRN_P1MinusP2_ATM_C, BFGPatternTargetMarker1) == 0x000448, "Member 'ASIL_TRN_P1MinusP2_ATM_C::BFGPatternTargetMarker1' has a wrong offset!");

}

