#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPW_HUD_RestrictedArea

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "BFGCore_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BPW_HUD_RestrictedArea.BPW_HUD_RestrictedArea_C
// 0x0070 (0x0368 - 0x02F8)
class UBPW_HUD_RestrictedArea_C final : public UBFGWidget_HUD
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeOut;                                           // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Punch;                                             // 0x0308(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border_Background;                                 // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_RestrictedArea;                        // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_RestrictedArea;                          // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBFGQuest_Manager*                      QuestManagerRef;                                   // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBFGQuest_Timer*>                Timers;                                            // 0x0330(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FLinearColor                           NormalColor;                                       // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           WarningColor;                                      // 0x0350(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldBeVisible;                                   // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsCurrentlyVisible;                                // 0x0361(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CurrentViolationState;                             // 0x0362(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PreviousViolationState;                            // 0x0363(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void IsInBossFight(bool* IsInBossFight_0);
	void UpdateLook();
	void SetBackground(class UBorder* Target, class UObject* InBrush_ResourceObject);
	void ValidateVisible();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void ExecuteUbergraph_BPW_HUD_RestrictedArea(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPW_HUD_RestrictedArea_C">();
	}
	static class UBPW_HUD_RestrictedArea_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPW_HUD_RestrictedArea_C>();
	}
};
static_assert(alignof(UBPW_HUD_RestrictedArea_C) == 0x000008, "Wrong alignment on UBPW_HUD_RestrictedArea_C");
static_assert(sizeof(UBPW_HUD_RestrictedArea_C) == 0x000368, "Wrong size on UBPW_HUD_RestrictedArea_C");
static_assert(offsetof(UBPW_HUD_RestrictedArea_C, UberGraphFrame) == 0x0002F8, "Member 'UBPW_HUD_RestrictedArea_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPW_HUD_RestrictedArea_C, FadeOut) == 0x000300, "Member 'UBPW_HUD_RestrictedArea_C::FadeOut' has a wrong offset!");
static_assert(offsetof(UBPW_HUD_RestrictedArea_C, Punch) == 0x000308, "Member 'UBPW_HUD_RestrictedArea_C::Punch' has a wrong offset!");
static_assert(offsetof(UBPW_HUD_RestrictedArea_C, Border_Background) == 0x000310, "Member 'UBPW_HUD_RestrictedArea_C::Border_Background' has a wrong offset!");
static_assert(offsetof(UBPW_HUD_RestrictedArea_C, CanvasPanel_RestrictedArea) == 0x000318, "Member 'UBPW_HUD_RestrictedArea_C::CanvasPanel_RestrictedArea' has a wrong offset!");
static_assert(offsetof(UBPW_HUD_RestrictedArea_C, TextBlock_RestrictedArea) == 0x000320, "Member 'UBPW_HUD_RestrictedArea_C::TextBlock_RestrictedArea' has a wrong offset!");
static_assert(offsetof(UBPW_HUD_RestrictedArea_C, QuestManagerRef) == 0x000328, "Member 'UBPW_HUD_RestrictedArea_C::QuestManagerRef' has a wrong offset!");
static_assert(offsetof(UBPW_HUD_RestrictedArea_C, Timers) == 0x000330, "Member 'UBPW_HUD_RestrictedArea_C::Timers' has a wrong offset!");
static_assert(offsetof(UBPW_HUD_RestrictedArea_C, NormalColor) == 0x000340, "Member 'UBPW_HUD_RestrictedArea_C::NormalColor' has a wrong offset!");
static_assert(offsetof(UBPW_HUD_RestrictedArea_C, WarningColor) == 0x000350, "Member 'UBPW_HUD_RestrictedArea_C::WarningColor' has a wrong offset!");
static_assert(offsetof(UBPW_HUD_RestrictedArea_C, ShouldBeVisible) == 0x000360, "Member 'UBPW_HUD_RestrictedArea_C::ShouldBeVisible' has a wrong offset!");
static_assert(offsetof(UBPW_HUD_RestrictedArea_C, IsCurrentlyVisible) == 0x000361, "Member 'UBPW_HUD_RestrictedArea_C::IsCurrentlyVisible' has a wrong offset!");
static_assert(offsetof(UBPW_HUD_RestrictedArea_C, CurrentViolationState) == 0x000362, "Member 'UBPW_HUD_RestrictedArea_C::CurrentViolationState' has a wrong offset!");
static_assert(offsetof(UBPW_HUD_RestrictedArea_C, PreviousViolationState) == 0x000363, "Member 'UBPW_HUD_RestrictedArea_C::PreviousViolationState' has a wrong offset!");

}

