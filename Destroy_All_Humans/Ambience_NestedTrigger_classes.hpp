#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ambience_NestedTrigger

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Ambience_NestedTrigger.Ambience_NestedTrigger_C
// 0x00D8 (0x04B8 - 0x03E0)
class AAmbience_NestedTrigger_C final : public ATriggerBox
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Ambientsound_DistantStereo;                        // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VolumeSize;                                        // 0x03F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TextSize;                                          // 0x03FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0400(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Pawn;                                              // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayerInsideTrigger;                             // 0x0418(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          WasPlayerInsideTrigger;                            // 0x0419(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DebugMode;                                         // 0x041A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41B[0x1];                                      // 0x041B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Immersed_DistStart;                                // 0x041C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Immersed_DistComplete;                             // 0x0420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Audioparam_Immersed_norm;                          // 0x0424(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Audioparam_Immersed_dist;                          // 0x0428(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Ambience_StartDuration;                            // 0x042C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Nested_Fadeout_Duration;                           // 0x0430(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistantStereo_PlaybackPercent;                     // 0x0434(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABFGAmbientSound*                       Soundsource_Main1;                                 // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABFGAmbientSound*                       Soundsource_Main2;                                 // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABFGAmbientSound*                       Soundsource_Main3;                                 // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABFGAmbientSound*                       Soundsource_Main4;                                 // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABFGAmbientSound*                       Soundsource_Nested1;                               // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABFGAmbientSound*                       Soundsource_Nested2;                               // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABFGAmbientSound*                       Soundsource_Nested3;                               // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABFGAmbientSound*                       Soundsource_Nested4;                               // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  Expected_Gameplay_Tags;                            // 0x0478(0x0020)(Edit, BlueprintVisible)
	int32                                         Next_Matching_AttachedActor;                       // 0x0498(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Debug_Delta_since_Print;                           // 0x049C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max_Random_Start_Time_Deviation;                   // 0x04A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllSystemsReady;                                   // 0x04A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          FadingOut4Sources;                                 // 0x04A5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A6[0x2];                                      // 0x04A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RandomStartSec;                                    // 0x04A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentPlaytime_Raw;                               // 0x04AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxDuration;                                       // 0x04B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SizeSelector;                                      // 0x04B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CalculateDistance();
	void Calculate_Current_PlaybackPercent(float* CurrentSec);
	void AreAllSoundsourcesPlaying(bool* All_Playing, bool* All_Off, bool* Abort);
	void Debug_PrintEveryXSeconds(float EveryXSeconds, float Delta, bool* ShouldWePrint);
	void AudioParameter_Prepare();
	void Initialize_NestedAmbience();
	void AudioParameter_Handover();
	void Start_4_Soundsources();
	void Stop_4_Soundsources();
	void BndEvt__Ambientsound_DistantStereo_K2Node_ComponentBoundEvent_0_OnAudioFinished__DelegateSignature();
	void BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__Ambientsound_DistantStereo_K2Node_ComponentBoundEvent_3_ActorComponentActivatedSignature__DelegateSignature(class UActorComponent* Component, bool bReset);
	void BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void Event_OnAudioCurrentPlaybackPercent(const class USoundWave* PlayingSoundWave, const float PlaybackPercent);
	void ExecuteUbergraph_Ambience_NestedTrigger(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ambience_NestedTrigger_C">();
	}
	static class AAmbience_NestedTrigger_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAmbience_NestedTrigger_C>();
	}
};
static_assert(alignof(AAmbience_NestedTrigger_C) == 0x000008, "Wrong alignment on AAmbience_NestedTrigger_C");
static_assert(sizeof(AAmbience_NestedTrigger_C) == 0x0004B8, "Wrong size on AAmbience_NestedTrigger_C");
static_assert(offsetof(AAmbience_NestedTrigger_C, UberGraphFrame) == 0x0003E0, "Member 'AAmbience_NestedTrigger_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AAmbience_NestedTrigger_C, Ambientsound_DistantStereo) == 0x0003E8, "Member 'AAmbience_NestedTrigger_C::Ambientsound_DistantStereo' has a wrong offset!");
static_assert(offsetof(AAmbience_NestedTrigger_C, VolumeSize) == 0x0003F0, "Member 'AAmbience_NestedTrigger_C::VolumeSize' has a wrong offset!");
static_assert(offsetof(AAmbience_NestedTrigger_C, TextSize) == 0x0003FC, "Member 'AAmbience_NestedTrigger_C::TextSize' has a wrong offset!");
static_assert(offsetof(AAmbience_NestedTrigger_C, Color) == 0x000400, "Member 'AAmbience_NestedTrigger_C::Color' has a wrong offset!");
static_assert(offsetof(AAmbience_NestedTrigger_C, Pawn) == 0x000410, "Member 'AAmbience_NestedTrigger_C::Pawn' has a wrong offset!");
static_assert(offsetof(AAmbience_NestedTrigger_C, IsPlayerInsideTrigger) == 0x000418, "Member 'AAmbience_NestedTrigger_C::IsPlayerInsideTrigger' has a wrong offset!");
static_assert(offsetof(AAmbience_NestedTrigger_C, WasPlayerInsideTrigger) == 0x000419, "Member 'AAmbience_NestedTrigger_C::WasPlayerInsideTrigger' has a wrong offset!");
static_assert(offsetof(AAmbience_NestedTrigger_C, DebugMode) == 0x00041A, "Member 'AAmbience_NestedTrigger_C::DebugMode' has a wrong offset!");
static_assert(offsetof(AAmbience_NestedTrigger_C, Immersed_DistStart) == 0x00041C, "Member 'AAmbience_NestedTrigger_C::Immersed_DistStart' has a wrong offset!");
static_assert(offsetof(AAmbience_NestedTrigger_C, Immersed_DistComplete) == 0x000420, "Member 'AAmbience_NestedTrigger_C::Immersed_DistComplete' has a wrong offset!");
static_assert(offsetof(AAmbience_NestedTrigger_C, Audioparam_Immersed_norm) == 0x000424, "Member 'AAmbience_NestedTrigger_C::Audioparam_Immersed_norm' has a wrong offset!");
static_assert(offsetof(AAmbience_NestedTrigger_C, Audioparam_Immersed_dist) == 0x000428, "Member 'AAmbience_NestedTrigger_C::Audioparam_Immersed_dist' has a wrong offset!");
static_assert(offsetof(AAmbience_NestedTrigger_C, Ambience_StartDuration) == 0x00042C, "Member 'AAmbience_NestedTrigger_C::Ambience_StartDuration' has a wrong offset!");
static_assert(offsetof(AAmbience_NestedTrigger_C, Nested_Fadeout_Duration) == 0x000430, "Member 'AAmbience_NestedTrigger_C::Nested_Fadeout_Duration' has a wrong offset!");
static_assert(offsetof(AAmbience_NestedTrigger_C, DistantStereo_PlaybackPercent) == 0x000434, "Member 'AAmbience_NestedTrigger_C::DistantStereo_PlaybackPercent' has a wrong offset!");
static_assert(offsetof(AAmbience_NestedTrigger_C, Soundsource_Main1) == 0x000438, "Member 'AAmbience_NestedTrigger_C::Soundsource_Main1' has a wrong offset!");
static_assert(offsetof(AAmbience_NestedTrigger_C, Soundsource_Main2) == 0x000440, "Member 'AAmbience_NestedTrigger_C::Soundsource_Main2' has a wrong offset!");
static_assert(offsetof(AAmbience_NestedTrigger_C, Soundsource_Main3) == 0x000448, "Member 'AAmbience_NestedTrigger_C::Soundsource_Main3' has a wrong offset!");
static_assert(offsetof(AAmbience_NestedTrigger_C, Soundsource_Main4) == 0x000450, "Member 'AAmbience_NestedTrigger_C::Soundsource_Main4' has a wrong offset!");
static_assert(offsetof(AAmbience_NestedTrigger_C, Soundsource_Nested1) == 0x000458, "Member 'AAmbience_NestedTrigger_C::Soundsource_Nested1' has a wrong offset!");
static_assert(offsetof(AAmbience_NestedTrigger_C, Soundsource_Nested2) == 0x000460, "Member 'AAmbience_NestedTrigger_C::Soundsource_Nested2' has a wrong offset!");
static_assert(offsetof(AAmbience_NestedTrigger_C, Soundsource_Nested3) == 0x000468, "Member 'AAmbience_NestedTrigger_C::Soundsource_Nested3' has a wrong offset!");
static_assert(offsetof(AAmbience_NestedTrigger_C, Soundsource_Nested4) == 0x000470, "Member 'AAmbience_NestedTrigger_C::Soundsource_Nested4' has a wrong offset!");
static_assert(offsetof(AAmbience_NestedTrigger_C, Expected_Gameplay_Tags) == 0x000478, "Member 'AAmbience_NestedTrigger_C::Expected_Gameplay_Tags' has a wrong offset!");
static_assert(offsetof(AAmbience_NestedTrigger_C, Next_Matching_AttachedActor) == 0x000498, "Member 'AAmbience_NestedTrigger_C::Next_Matching_AttachedActor' has a wrong offset!");
static_assert(offsetof(AAmbience_NestedTrigger_C, Debug_Delta_since_Print) == 0x00049C, "Member 'AAmbience_NestedTrigger_C::Debug_Delta_since_Print' has a wrong offset!");
static_assert(offsetof(AAmbience_NestedTrigger_C, Max_Random_Start_Time_Deviation) == 0x0004A0, "Member 'AAmbience_NestedTrigger_C::Max_Random_Start_Time_Deviation' has a wrong offset!");
static_assert(offsetof(AAmbience_NestedTrigger_C, AllSystemsReady) == 0x0004A4, "Member 'AAmbience_NestedTrigger_C::AllSystemsReady' has a wrong offset!");
static_assert(offsetof(AAmbience_NestedTrigger_C, FadingOut4Sources) == 0x0004A5, "Member 'AAmbience_NestedTrigger_C::FadingOut4Sources' has a wrong offset!");
static_assert(offsetof(AAmbience_NestedTrigger_C, RandomStartSec) == 0x0004A8, "Member 'AAmbience_NestedTrigger_C::RandomStartSec' has a wrong offset!");
static_assert(offsetof(AAmbience_NestedTrigger_C, CurrentPlaytime_Raw) == 0x0004AC, "Member 'AAmbience_NestedTrigger_C::CurrentPlaytime_Raw' has a wrong offset!");
static_assert(offsetof(AAmbience_NestedTrigger_C, MaxDuration) == 0x0004B0, "Member 'AAmbience_NestedTrigger_C::MaxDuration' has a wrong offset!");
static_assert(offsetof(AAmbience_NestedTrigger_C, SizeSelector) == 0x0004B4, "Member 'AAmbience_NestedTrigger_C::SizeSelector' has a wrong offset!");

}

