#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ActorComponent_NPCBehaviorVO

#include "Basic.hpp"

#include "Enum_WhichBehaviorSound_structs.hpp"
#include "BFGCore_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_ActorComponent_NPCBehaviorVO.BP_ActorComponent_NPCBehaviorVO_C.ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO
// 0x00F0 (0x00F0 - 0x0000)
struct BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBFGBehaviourState_NPC                        K2Node_Event__previousState;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBFGBehaviourState_NPC                        K2Node_Event__newState;                            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBFGCuriosityReason_NPC                       K2Node_Event__curiosityReason;                     // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event__rTag1;                               // 0x0008(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event__rTag;                                // 0x0010(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event__fDamage;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event__pDamageCauser;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UBFGDamageType*                   K2Node_Event__pDamageType;                         // 0x0028(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event__rShotDirection;                      // 0x0030(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event__oHitResult;                          // 0x003C(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_Event__bWasFriendlyFire;                    // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C6[0x2];                                       // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event__vHitDirection;                       // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event__fVelocity;                           // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event__pHitByActor;                         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event__pFirelineActor;                      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO) == 0x000008, "Wrong alignment on BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO");
static_assert(sizeof(BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO) == 0x0000F0, "Wrong size on BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO, EntryPoint) == 0x000000, "Member 'BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO, K2Node_Event__previousState) == 0x000004, "Member 'BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO::K2Node_Event__previousState' has a wrong offset!");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO, K2Node_Event__newState) == 0x000005, "Member 'BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO::K2Node_Event__newState' has a wrong offset!");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO, K2Node_Event__curiosityReason) == 0x000006, "Member 'BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO::K2Node_Event__curiosityReason' has a wrong offset!");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO, K2Node_Event__rTag1) == 0x000008, "Member 'BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO::K2Node_Event__rTag1' has a wrong offset!");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO, K2Node_Event__rTag) == 0x000010, "Member 'BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO::K2Node_Event__rTag' has a wrong offset!");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000018, "Member 'BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO, K2Node_Event__fDamage) == 0x00001C, "Member 'BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO::K2Node_Event__fDamage' has a wrong offset!");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO, K2Node_Event__pDamageCauser) == 0x000020, "Member 'BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO::K2Node_Event__pDamageCauser' has a wrong offset!");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO, K2Node_Event__pDamageType) == 0x000028, "Member 'BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO::K2Node_Event__pDamageType' has a wrong offset!");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO, K2Node_Event__rShotDirection) == 0x000030, "Member 'BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO::K2Node_Event__rShotDirection' has a wrong offset!");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO, K2Node_Event__oHitResult) == 0x00003C, "Member 'BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO::K2Node_Event__oHitResult' has a wrong offset!");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO, K2Node_Event__bWasFriendlyFire) == 0x0000C4, "Member 'BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO::K2Node_Event__bWasFriendlyFire' has a wrong offset!");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO, CallFunc_IsValid_ReturnValue1) == 0x0000C5, "Member 'BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO, K2Node_Event__vHitDirection) == 0x0000C8, "Member 'BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO::K2Node_Event__vHitDirection' has a wrong offset!");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO, K2Node_Event__fVelocity) == 0x0000D4, "Member 'BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO::K2Node_Event__fVelocity' has a wrong offset!");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO, K2Node_Event__pHitByActor) == 0x0000D8, "Member 'BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO::K2Node_Event__pHitByActor' has a wrong offset!");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO, K2Node_Event__pFirelineActor) == 0x0000E0, "Member 'BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO::K2Node_Event__pFirelineActor' has a wrong offset!");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO, CallFunc_IsValid_ReturnValue2) == 0x0000E8, "Member 'BP_ActorComponent_NPCBehaviorVO_C_ExecuteUbergraph_BP_ActorComponent_NPCBehaviorVO::CallFunc_IsValid_ReturnValue2' has a wrong offset!");

// Function BP_ActorComponent_NPCBehaviorVO.BP_ActorComponent_NPCBehaviorVO_C.OnRanInFireline
// 0x0008 (0x0008 - 0x0000)
struct BP_ActorComponent_NPCBehaviorVO_C_OnRanInFireline final
{
public:
	class AActor*                                 _pFirelineActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActorComponent_NPCBehaviorVO_C_OnRanInFireline) == 0x000008, "Wrong alignment on BP_ActorComponent_NPCBehaviorVO_C_OnRanInFireline");
static_assert(sizeof(BP_ActorComponent_NPCBehaviorVO_C_OnRanInFireline) == 0x000008, "Wrong size on BP_ActorComponent_NPCBehaviorVO_C_OnRanInFireline");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_OnRanInFireline, _pFirelineActor) == 0x000000, "Member 'BP_ActorComponent_NPCBehaviorVO_C_OnRanInFireline::_pFirelineActor' has a wrong offset!");

// Function BP_ActorComponent_NPCBehaviorVO.BP_ActorComponent_NPCBehaviorVO_C.OnPlayerBumped
// 0x0018 (0x0018 - 0x0000)
struct BP_ActorComponent_NPCBehaviorVO_C_OnPlayerBumped final
{
public:
	struct FVector                                _vHitDirection;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _fVelocity;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 _pHitByActor;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActorComponent_NPCBehaviorVO_C_OnPlayerBumped) == 0x000008, "Wrong alignment on BP_ActorComponent_NPCBehaviorVO_C_OnPlayerBumped");
static_assert(sizeof(BP_ActorComponent_NPCBehaviorVO_C_OnPlayerBumped) == 0x000018, "Wrong size on BP_ActorComponent_NPCBehaviorVO_C_OnPlayerBumped");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_OnPlayerBumped, _vHitDirection) == 0x000000, "Member 'BP_ActorComponent_NPCBehaviorVO_C_OnPlayerBumped::_vHitDirection' has a wrong offset!");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_OnPlayerBumped, _fVelocity) == 0x00000C, "Member 'BP_ActorComponent_NPCBehaviorVO_C_OnPlayerBumped::_fVelocity' has a wrong offset!");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_OnPlayerBumped, _pHitByActor) == 0x000010, "Member 'BP_ActorComponent_NPCBehaviorVO_C_OnPlayerBumped::_pHitByActor' has a wrong offset!");

// Function BP_ActorComponent_NPCBehaviorVO.BP_ActorComponent_NPCBehaviorVO_C.OnHealthDamage
// 0x00B0 (0x00B0 - 0x0000)
struct BP_ActorComponent_NPCBehaviorVO_C_OnHealthDamage final
{
public:
	float                                         _fDamage;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 _pDamageCauser;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UBFGDamageType*                   _pDamageType;                                      // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                _rShotDirection;                                   // 0x0018(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             _oHitResult;                                       // 0x0024(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          _bWasFriendlyFire;                                 // 0x00AC(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ActorComponent_NPCBehaviorVO_C_OnHealthDamage) == 0x000008, "Wrong alignment on BP_ActorComponent_NPCBehaviorVO_C_OnHealthDamage");
static_assert(sizeof(BP_ActorComponent_NPCBehaviorVO_C_OnHealthDamage) == 0x0000B0, "Wrong size on BP_ActorComponent_NPCBehaviorVO_C_OnHealthDamage");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_OnHealthDamage, _fDamage) == 0x000000, "Member 'BP_ActorComponent_NPCBehaviorVO_C_OnHealthDamage::_fDamage' has a wrong offset!");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_OnHealthDamage, _pDamageCauser) == 0x000008, "Member 'BP_ActorComponent_NPCBehaviorVO_C_OnHealthDamage::_pDamageCauser' has a wrong offset!");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_OnHealthDamage, _pDamageType) == 0x000010, "Member 'BP_ActorComponent_NPCBehaviorVO_C_OnHealthDamage::_pDamageType' has a wrong offset!");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_OnHealthDamage, _rShotDirection) == 0x000018, "Member 'BP_ActorComponent_NPCBehaviorVO_C_OnHealthDamage::_rShotDirection' has a wrong offset!");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_OnHealthDamage, _oHitResult) == 0x000024, "Member 'BP_ActorComponent_NPCBehaviorVO_C_OnHealthDamage::_oHitResult' has a wrong offset!");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_OnHealthDamage, _bWasFriendlyFire) == 0x0000AC, "Member 'BP_ActorComponent_NPCBehaviorVO_C_OnHealthDamage::_bWasFriendlyFire' has a wrong offset!");

// Function BP_ActorComponent_NPCBehaviorVO.BP_ActorComponent_NPCBehaviorVO_C.OnGameplayEffectTagInactive
// 0x0008 (0x0008 - 0x0000)
struct BP_ActorComponent_NPCBehaviorVO_C_OnGameplayEffectTagInactive final
{
public:
	struct FGameplayTag                           _rTag;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActorComponent_NPCBehaviorVO_C_OnGameplayEffectTagInactive) == 0x000004, "Wrong alignment on BP_ActorComponent_NPCBehaviorVO_C_OnGameplayEffectTagInactive");
static_assert(sizeof(BP_ActorComponent_NPCBehaviorVO_C_OnGameplayEffectTagInactive) == 0x000008, "Wrong size on BP_ActorComponent_NPCBehaviorVO_C_OnGameplayEffectTagInactive");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_OnGameplayEffectTagInactive, _rTag) == 0x000000, "Member 'BP_ActorComponent_NPCBehaviorVO_C_OnGameplayEffectTagInactive::_rTag' has a wrong offset!");

// Function BP_ActorComponent_NPCBehaviorVO.BP_ActorComponent_NPCBehaviorVO_C.OnGameplayEffectTagActive
// 0x0008 (0x0008 - 0x0000)
struct BP_ActorComponent_NPCBehaviorVO_C_OnGameplayEffectTagActive final
{
public:
	struct FGameplayTag                           _rTag;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActorComponent_NPCBehaviorVO_C_OnGameplayEffectTagActive) == 0x000004, "Wrong alignment on BP_ActorComponent_NPCBehaviorVO_C_OnGameplayEffectTagActive");
static_assert(sizeof(BP_ActorComponent_NPCBehaviorVO_C_OnGameplayEffectTagActive) == 0x000008, "Wrong size on BP_ActorComponent_NPCBehaviorVO_C_OnGameplayEffectTagActive");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_OnGameplayEffectTagActive, _rTag) == 0x000000, "Member 'BP_ActorComponent_NPCBehaviorVO_C_OnGameplayEffectTagActive::_rTag' has a wrong offset!");

// Function BP_ActorComponent_NPCBehaviorVO.BP_ActorComponent_NPCBehaviorVO_C.OnAIStateChanged
// 0x0003 (0x0003 - 0x0000)
struct BP_ActorComponent_NPCBehaviorVO_C_OnAIStateChanged final
{
public:
	EBFGBehaviourState_NPC                        _previousState;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBFGBehaviourState_NPC                        _newState;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBFGCuriosityReason_NPC                       _curiosityReason;                                  // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActorComponent_NPCBehaviorVO_C_OnAIStateChanged) == 0x000001, "Wrong alignment on BP_ActorComponent_NPCBehaviorVO_C_OnAIStateChanged");
static_assert(sizeof(BP_ActorComponent_NPCBehaviorVO_C_OnAIStateChanged) == 0x000003, "Wrong size on BP_ActorComponent_NPCBehaviorVO_C_OnAIStateChanged");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_OnAIStateChanged, _previousState) == 0x000000, "Member 'BP_ActorComponent_NPCBehaviorVO_C_OnAIStateChanged::_previousState' has a wrong offset!");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_OnAIStateChanged, _newState) == 0x000001, "Member 'BP_ActorComponent_NPCBehaviorVO_C_OnAIStateChanged::_newState' has a wrong offset!");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_OnAIStateChanged, _curiosityReason) == 0x000002, "Member 'BP_ActorComponent_NPCBehaviorVO_C_OnAIStateChanged::_curiosityReason' has a wrong offset!");

// Function BP_ActorComponent_NPCBehaviorVO.BP_ActorComponent_NPCBehaviorVO_C.Poke_BehaviourVO
// 0x0002 (0x0002 - 0x0000)
struct BP_ActorComponent_NPCBehaviorVO_C_Poke_BehaviourVO final
{
public:
	Enum_WhichBehaviorSound                       WhichSituation;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ActorComponent_NPCBehaviorVO_C_Poke_BehaviourVO) == 0x000001, "Wrong alignment on BP_ActorComponent_NPCBehaviorVO_C_Poke_BehaviourVO");
static_assert(sizeof(BP_ActorComponent_NPCBehaviorVO_C_Poke_BehaviourVO) == 0x000002, "Wrong size on BP_ActorComponent_NPCBehaviorVO_C_Poke_BehaviourVO");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_Poke_BehaviourVO, WhichSituation) == 0x000000, "Member 'BP_ActorComponent_NPCBehaviorVO_C_Poke_BehaviourVO::WhichSituation' has a wrong offset!");
static_assert(offsetof(BP_ActorComponent_NPCBehaviorVO_C_Poke_BehaviourVO, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_ActorComponent_NPCBehaviorVO_C_Poke_BehaviourVO::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

