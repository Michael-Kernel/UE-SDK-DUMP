#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Weapon_UFO_DeathRay

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BFGCore_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Weapon_UFO_DeathRay.BP_Weapon_UFO_DeathRay_C
// 0x00A8 (0x0830 - 0x0788)
class ABP_Weapon_UFO_DeathRay_C final : public ABFGWeapon_UFO_DeathRay
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0788(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          IsHitting;                                         // 0x0790(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_791[0x7];                                      // 0x0791(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP__deathRay_water_hit_C*              WaterHitActor;                                     // 0x0798(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x07A0(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0828(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Weapon_UFO_DeathRay(int32 EntryPoint);
	void OnShotImpact(const struct FHitResult& _oHitResult);
	void HitWater(const struct FHitResult& HitResult_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Weapon_UFO_DeathRay_C">();
	}
	static class ABP_Weapon_UFO_DeathRay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Weapon_UFO_DeathRay_C>();
	}
};
static_assert(alignof(ABP_Weapon_UFO_DeathRay_C) == 0x000008, "Wrong alignment on ABP_Weapon_UFO_DeathRay_C");
static_assert(sizeof(ABP_Weapon_UFO_DeathRay_C) == 0x000830, "Wrong size on ABP_Weapon_UFO_DeathRay_C");
static_assert(offsetof(ABP_Weapon_UFO_DeathRay_C, UberGraphFrame) == 0x000788, "Member 'ABP_Weapon_UFO_DeathRay_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Weapon_UFO_DeathRay_C, IsHitting) == 0x000790, "Member 'ABP_Weapon_UFO_DeathRay_C::IsHitting' has a wrong offset!");
static_assert(offsetof(ABP_Weapon_UFO_DeathRay_C, WaterHitActor) == 0x000798, "Member 'ABP_Weapon_UFO_DeathRay_C::WaterHitActor' has a wrong offset!");
static_assert(offsetof(ABP_Weapon_UFO_DeathRay_C, HitResult) == 0x0007A0, "Member 'ABP_Weapon_UFO_DeathRay_C::HitResult' has a wrong offset!");
static_assert(offsetof(ABP_Weapon_UFO_DeathRay_C, HitComponent) == 0x000828, "Member 'ABP_Weapon_UFO_DeathRay_C::HitComponent' has a wrong offset!");

}

