#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PropActor_Newspaper

#include "Basic.hpp"

#include "BFGCore_structs.hpp"


namespace SDK::Params
{

// Function BP_PropActor_Newspaper.BP_PropActor_Newspaper_C.ExecuteUbergraph_BP_PropActor_Newspaper
// 0x0138 (0x0138 - 0x0000)
struct BP_PropActor_Newspaper_C_ExecuteUbergraph_BP_PropActor_Newspaper final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBFGInteractAnimationData              K2Node_Event__animationData;                       // 0x0008(0x0060)(ConstParm, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E[0x2];                                       // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBFGInteractAnimationData              K2Node_Event__newData;                             // 0x0070(0x0060)(ConstParm, NoDestructor)
	struct FBFGInteractAnimationData              K2Node_Event__oldData;                             // 0x00D0(0x0060)(ConstParm, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue3;         // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue4;         // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PropActor_Newspaper_C_ExecuteUbergraph_BP_PropActor_Newspaper) == 0x000008, "Wrong alignment on BP_PropActor_Newspaper_C_ExecuteUbergraph_BP_PropActor_Newspaper");
static_assert(sizeof(BP_PropActor_Newspaper_C_ExecuteUbergraph_BP_PropActor_Newspaper) == 0x000138, "Wrong size on BP_PropActor_Newspaper_C_ExecuteUbergraph_BP_PropActor_Newspaper");
static_assert(offsetof(BP_PropActor_Newspaper_C_ExecuteUbergraph_BP_PropActor_Newspaper, EntryPoint) == 0x000000, "Member 'BP_PropActor_Newspaper_C_ExecuteUbergraph_BP_PropActor_Newspaper::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PropActor_Newspaper_C_ExecuteUbergraph_BP_PropActor_Newspaper, K2Node_Event__animationData) == 0x000008, "Member 'BP_PropActor_Newspaper_C_ExecuteUbergraph_BP_PropActor_Newspaper::K2Node_Event__animationData' has a wrong offset!");
static_assert(offsetof(BP_PropActor_Newspaper_C_ExecuteUbergraph_BP_PropActor_Newspaper, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000068, "Member 'BP_PropActor_Newspaper_C_ExecuteUbergraph_BP_PropActor_Newspaper::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PropActor_Newspaper_C_ExecuteUbergraph_BP_PropActor_Newspaper, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x000069, "Member 'BP_PropActor_Newspaper_C_ExecuteUbergraph_BP_PropActor_Newspaper::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_PropActor_Newspaper_C_ExecuteUbergraph_BP_PropActor_Newspaper, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x00006A, "Member 'BP_PropActor_Newspaper_C_ExecuteUbergraph_BP_PropActor_Newspaper::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_PropActor_Newspaper_C_ExecuteUbergraph_BP_PropActor_Newspaper, K2Node_SwitchEnum_CmpSuccess) == 0x00006B, "Member 'BP_PropActor_Newspaper_C_ExecuteUbergraph_BP_PropActor_Newspaper::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PropActor_Newspaper_C_ExecuteUbergraph_BP_PropActor_Newspaper, CallFunc_BooleanOR_ReturnValue) == 0x00006C, "Member 'BP_PropActor_Newspaper_C_ExecuteUbergraph_BP_PropActor_Newspaper::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PropActor_Newspaper_C_ExecuteUbergraph_BP_PropActor_Newspaper, CallFunc_BooleanAND_ReturnValue) == 0x00006D, "Member 'BP_PropActor_Newspaper_C_ExecuteUbergraph_BP_PropActor_Newspaper::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PropActor_Newspaper_C_ExecuteUbergraph_BP_PropActor_Newspaper, K2Node_Event__newData) == 0x000070, "Member 'BP_PropActor_Newspaper_C_ExecuteUbergraph_BP_PropActor_Newspaper::K2Node_Event__newData' has a wrong offset!");
static_assert(offsetof(BP_PropActor_Newspaper_C_ExecuteUbergraph_BP_PropActor_Newspaper, K2Node_Event__oldData) == 0x0000D0, "Member 'BP_PropActor_Newspaper_C_ExecuteUbergraph_BP_PropActor_Newspaper::K2Node_Event__oldData' has a wrong offset!");
static_assert(offsetof(BP_PropActor_Newspaper_C_ExecuteUbergraph_BP_PropActor_Newspaper, CallFunc_EqualEqual_ByteByte_ReturnValue3) == 0x000130, "Member 'BP_PropActor_Newspaper_C_ExecuteUbergraph_BP_PropActor_Newspaper::CallFunc_EqualEqual_ByteByte_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_PropActor_Newspaper_C_ExecuteUbergraph_BP_PropActor_Newspaper, CallFunc_EqualEqual_ByteByte_ReturnValue4) == 0x000131, "Member 'BP_PropActor_Newspaper_C_ExecuteUbergraph_BP_PropActor_Newspaper::CallFunc_EqualEqual_ByteByte_ReturnValue4' has a wrong offset!");

// Function BP_PropActor_Newspaper.BP_PropActor_Newspaper_C.OnInteractAnimationChanged
// 0x00C0 (0x00C0 - 0x0000)
struct BP_PropActor_Newspaper_C_OnInteractAnimationChanged final
{
public:
	struct FBFGInteractAnimationData              _newData;                                          // 0x0000(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FBFGInteractAnimationData              _oldData;                                          // 0x0060(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_PropActor_Newspaper_C_OnInteractAnimationChanged) == 0x000008, "Wrong alignment on BP_PropActor_Newspaper_C_OnInteractAnimationChanged");
static_assert(sizeof(BP_PropActor_Newspaper_C_OnInteractAnimationChanged) == 0x0000C0, "Wrong size on BP_PropActor_Newspaper_C_OnInteractAnimationChanged");
static_assert(offsetof(BP_PropActor_Newspaper_C_OnInteractAnimationChanged, _newData) == 0x000000, "Member 'BP_PropActor_Newspaper_C_OnInteractAnimationChanged::_newData' has a wrong offset!");
static_assert(offsetof(BP_PropActor_Newspaper_C_OnInteractAnimationChanged, _oldData) == 0x000060, "Member 'BP_PropActor_Newspaper_C_OnInteractAnimationChanged::_oldData' has a wrong offset!");

// Function BP_PropActor_Newspaper.BP_PropActor_Newspaper_C.OnSwitchedToHighRes
// 0x0060 (0x0060 - 0x0000)
struct BP_PropActor_Newspaper_C_OnSwitchedToHighRes final
{
public:
	struct FBFGInteractAnimationData              _animationData;                                    // 0x0000(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_PropActor_Newspaper_C_OnSwitchedToHighRes) == 0x000008, "Wrong alignment on BP_PropActor_Newspaper_C_OnSwitchedToHighRes");
static_assert(sizeof(BP_PropActor_Newspaper_C_OnSwitchedToHighRes) == 0x000060, "Wrong size on BP_PropActor_Newspaper_C_OnSwitchedToHighRes");
static_assert(offsetof(BP_PropActor_Newspaper_C_OnSwitchedToHighRes, _animationData) == 0x000000, "Member 'BP_PropActor_Newspaper_C_OnSwitchedToHighRes::_animationData' has a wrong offset!");

}

