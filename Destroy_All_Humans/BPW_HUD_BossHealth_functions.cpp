#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPW_HUD_BossHealth

#include "Basic.hpp"

#include "BPW_HUD_BossHealth_classes.hpp"
#include "BPW_HUD_BossHealth_parameters.hpp"


namespace SDK
{

// Function BPW_HUD_BossHealth.BPW_HUD_BossHealth_C.PhasePending
// (Public, BlueprintCallable, BlueprintEvent)

void UBPW_HUD_BossHealth_C::PhasePending()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_HUD_BossHealth_C", "PhasePending");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPW_HUD_BossHealth.BPW_HUD_BossHealth_C.PhaseDone
// (Public, BlueprintCallable, BlueprintEvent)

void UBPW_HUD_BossHealth_C::PhaseDone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_HUD_BossHealth_C", "PhaseDone");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPW_HUD_BossHealth.BPW_HUD_BossHealth_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBPW_HUD_BossHealth_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_HUD_BossHealth_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPW_HUD_BossHealth.BPW_HUD_BossHealth_C.ExecuteUbergraph_BPW_HUD_BossHealth
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPW_HUD_BossHealth_C::ExecuteUbergraph_BPW_HUD_BossHealth(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_HUD_BossHealth_C", "ExecuteUbergraph_BPW_HUD_BossHealth");

	Params::BPW_HUD_BossHealth_C_ExecuteUbergraph_BPW_HUD_BossHealth Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

