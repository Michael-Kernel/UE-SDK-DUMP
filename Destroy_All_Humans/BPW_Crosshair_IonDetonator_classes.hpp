#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPW_Crosshair_IonDetonator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BFGCore_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BPW_Crosshair_IonDetonator.BPW_Crosshair_IonDetonator_C
// 0x0030 (0x0350 - 0x0320)
class UBPW_Crosshair_IonDetonator_C final : public UBFGWidget_HUD_Crosshair
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0320(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_crosshair;                                   // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UObject*                                ImageDetonation;                                   // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                ImageNormal;                                       // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                ImageCurrent;                                      // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowingDetonationCrosshair;                        // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	float Get_Bar_IonDetonator_Percent_0();
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void SetCrosshair(bool DetonationCrosshair);
	void WeaponAndAbilitySharedTargetChanged(bool _bNewValue);
	void ExecuteUbergraph_BPW_Crosshair_IonDetonator(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPW_Crosshair_IonDetonator_C">();
	}
	static class UBPW_Crosshair_IonDetonator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPW_Crosshair_IonDetonator_C>();
	}
};
static_assert(alignof(UBPW_Crosshair_IonDetonator_C) == 0x000008, "Wrong alignment on UBPW_Crosshair_IonDetonator_C");
static_assert(sizeof(UBPW_Crosshair_IonDetonator_C) == 0x000350, "Wrong size on UBPW_Crosshair_IonDetonator_C");
static_assert(offsetof(UBPW_Crosshair_IonDetonator_C, UberGraphFrame) == 0x000320, "Member 'UBPW_Crosshair_IonDetonator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPW_Crosshair_IonDetonator_C, Image_crosshair) == 0x000328, "Member 'UBPW_Crosshair_IonDetonator_C::Image_crosshair' has a wrong offset!");
static_assert(offsetof(UBPW_Crosshair_IonDetonator_C, ImageDetonation) == 0x000330, "Member 'UBPW_Crosshair_IonDetonator_C::ImageDetonation' has a wrong offset!");
static_assert(offsetof(UBPW_Crosshair_IonDetonator_C, ImageNormal) == 0x000338, "Member 'UBPW_Crosshair_IonDetonator_C::ImageNormal' has a wrong offset!");
static_assert(offsetof(UBPW_Crosshair_IonDetonator_C, ImageCurrent) == 0x000340, "Member 'UBPW_Crosshair_IonDetonator_C::ImageCurrent' has a wrong offset!");
static_assert(offsetof(UBPW_Crosshair_IonDetonator_C, ShowingDetonationCrosshair) == 0x000348, "Member 'UBPW_Crosshair_IonDetonator_C::ShowingDetonationCrosshair' has a wrong offset!");

}

