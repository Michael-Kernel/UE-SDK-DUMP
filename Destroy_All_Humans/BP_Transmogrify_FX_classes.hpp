#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Transmogrify_FX

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BFGCore_classes.hpp"


namespace SDK
{

// DynamicClass BP_Transmogrify_FX.BP_Transmogrify_FX_C
// 0x0198 (0x05E0 - 0x0448)
class ABP_Transmogrify_FX_C final : public ABFGEffectActor
{
public:
	class UStaticMeshComponent*                   Sphere;                                            // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Control_Transmog_cloud_Transmog_Radius_853BBBD4406665F32A71FF8149AA6783; // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Control_Transmog_cloud_Transmog_value_853BBBD4406665F32A71FF8149AA6783; // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETimelineDirection                            Control_Transmog_cloud__Direction_853BBBD4406665F32A71FF8149AA6783; // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Control_Transmog_cloud;                            // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInstanceDynamic*>       DynMat_Array;                                      // 0x0470(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FVector                                Singularity_position;                              // 0x0480(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Physics_Radius;                                    // 0x048C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Transmog_active;                                   // 0x0490(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_491[0x3];                                      // 0x0491(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Mesh_location;                                     // 0x0494(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshComponent*                         Mesh_reference;                                    // 0x04A0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Mesh_radius;                                       // 0x04A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4AC[0x4];                                      // 0x04AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               DynMat_Cloud;                                      // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Transmog_Radius;                                   // 0x04B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4BC[0x4];                                      // 0x04BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABFGEffectActor*                        Singularity_reference;                             // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMeshComponent*>                 Mesh_Reference_Array;                              // 0x04C8(0x0010)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*               PFX_lightning;                                     // 0x04D8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Final_burst_triggered;                             // 0x04E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               PFX_sphere;                                        // 0x04E8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MAX_Object_Radius;                                 // 0x04F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VFX_scaling_value;                                 // 0x04F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Scale_parameter_vector;                            // 0x04F8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Using_multiTransmog;                               // 0x0504(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Is_masterObject;                                   // 0x0505(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_506[0x2];                                      // 0x0506(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Transmog_Run_progress;                             // 0x0508(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Temp_int_Variable;                                 // 0x050C(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0510(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0514(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0518(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Temp_int_Variable1;                                // 0x051C(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0520(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_524[0x4];                                      // 0x0524(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_Array_Get_Item;                           // 0x0528(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshComponent*                         CallFunc_Array_Get_Item1;                          // 0x0530(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshComponent*                         CallFunc_Array_Get_Item2;                          // 0x0538(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Temp_int_Variable2;                                // 0x0540(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_544[0x4];                                      // 0x0544(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_Array_Get_Item3;                          // 0x0548(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Temp_int_Variable3;                                // 0x0550(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_554[0x4];                                      // 0x0554(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_Array_Get_Item4;                          // 0x0558(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector_X;                            // 0x0560(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector_Y;                            // 0x0564(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector_Z;                            // 0x0568(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Temp_int_Variable4;                                // 0x056C(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshComponent*                         CallFunc_Array_Get_Item5;                          // 0x0570(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0578(0x000C)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0584(0x000C)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0590(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CallFunc_GetComponentBounds_Origin1;               // 0x0594(0x000C)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent1;            // 0x05A0(0x000C)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_GetComponentBounds_SphereRadius1;         // 0x05AC(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x05B0(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5B4[0x4];                                      // 0x05B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item6;                          // 0x05B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Temp_int_Variable5;                                // 0x05C0(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C4[0x4];                                      // 0x05C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_Array_Get_Item7;                          // 0x05C8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Temp_int_Variable6;                                // 0x05D0(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5D4[0x4];                                      // 0x05D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_Array_Get_Item8;                          // 0x05D8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void Update_transmogrify(const struct FVector& bpp__mesh_position__pf, float bpp__transmog_radius__pf);
	void Setup_dynamic_materials();
	void ReceiveTick(float bpp__DeltaSeconds__pf);
	void ReceiveDestroyed();
	void FindAllMeshes();
	void Control_Transmog_cloud__UpdateFunc();
	void Control_Transmog_cloud__FinishedFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BP_Transmogrify_FX_C">();
	}
	static class ABP_Transmogrify_FX_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Transmogrify_FX_C>();
	}
};
static_assert(alignof(ABP_Transmogrify_FX_C) == 0x000008, "Wrong alignment on ABP_Transmogrify_FX_C");
static_assert(sizeof(ABP_Transmogrify_FX_C) == 0x0005E0, "Wrong size on ABP_Transmogrify_FX_C");
static_assert(offsetof(ABP_Transmogrify_FX_C, Sphere) == 0x000448, "Member 'ABP_Transmogrify_FX_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, DefaultSceneRoot) == 0x000450, "Member 'ABP_Transmogrify_FX_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, Control_Transmog_cloud_Transmog_Radius_853BBBD4406665F32A71FF8149AA6783) == 0x000458, "Member 'ABP_Transmogrify_FX_C::Control_Transmog_cloud_Transmog_Radius_853BBBD4406665F32A71FF8149AA6783' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, Control_Transmog_cloud_Transmog_value_853BBBD4406665F32A71FF8149AA6783) == 0x00045C, "Member 'ABP_Transmogrify_FX_C::Control_Transmog_cloud_Transmog_value_853BBBD4406665F32A71FF8149AA6783' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, Control_Transmog_cloud__Direction_853BBBD4406665F32A71FF8149AA6783) == 0x000460, "Member 'ABP_Transmogrify_FX_C::Control_Transmog_cloud__Direction_853BBBD4406665F32A71FF8149AA6783' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, Control_Transmog_cloud) == 0x000468, "Member 'ABP_Transmogrify_FX_C::Control_Transmog_cloud' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, DynMat_Array) == 0x000470, "Member 'ABP_Transmogrify_FX_C::DynMat_Array' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, Singularity_position) == 0x000480, "Member 'ABP_Transmogrify_FX_C::Singularity_position' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, Physics_Radius) == 0x00048C, "Member 'ABP_Transmogrify_FX_C::Physics_Radius' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, Transmog_active) == 0x000490, "Member 'ABP_Transmogrify_FX_C::Transmog_active' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, Mesh_location) == 0x000494, "Member 'ABP_Transmogrify_FX_C::Mesh_location' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, Mesh_reference) == 0x0004A0, "Member 'ABP_Transmogrify_FX_C::Mesh_reference' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, Mesh_radius) == 0x0004A8, "Member 'ABP_Transmogrify_FX_C::Mesh_radius' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, DynMat_Cloud) == 0x0004B0, "Member 'ABP_Transmogrify_FX_C::DynMat_Cloud' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, Transmog_Radius) == 0x0004B8, "Member 'ABP_Transmogrify_FX_C::Transmog_Radius' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, Singularity_reference) == 0x0004C0, "Member 'ABP_Transmogrify_FX_C::Singularity_reference' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, Mesh_Reference_Array) == 0x0004C8, "Member 'ABP_Transmogrify_FX_C::Mesh_Reference_Array' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, PFX_lightning) == 0x0004D8, "Member 'ABP_Transmogrify_FX_C::PFX_lightning' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, Final_burst_triggered) == 0x0004E0, "Member 'ABP_Transmogrify_FX_C::Final_burst_triggered' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, PFX_sphere) == 0x0004E8, "Member 'ABP_Transmogrify_FX_C::PFX_sphere' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, MAX_Object_Radius) == 0x0004F0, "Member 'ABP_Transmogrify_FX_C::MAX_Object_Radius' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, VFX_scaling_value) == 0x0004F4, "Member 'ABP_Transmogrify_FX_C::VFX_scaling_value' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, Scale_parameter_vector) == 0x0004F8, "Member 'ABP_Transmogrify_FX_C::Scale_parameter_vector' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, Using_multiTransmog) == 0x000504, "Member 'ABP_Transmogrify_FX_C::Using_multiTransmog' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, Is_masterObject) == 0x000505, "Member 'ABP_Transmogrify_FX_C::Is_masterObject' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, Transmog_Run_progress) == 0x000508, "Member 'ABP_Transmogrify_FX_C::Transmog_Run_progress' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, Temp_int_Variable) == 0x00050C, "Member 'ABP_Transmogrify_FX_C::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, Temp_int_Array_Index_Variable) == 0x000510, "Member 'ABP_Transmogrify_FX_C::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, K2Node_Event_DeltaSeconds) == 0x000514, "Member 'ABP_Transmogrify_FX_C::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, Temp_int_Loop_Counter_Variable) == 0x000518, "Member 'ABP_Transmogrify_FX_C::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, Temp_int_Variable1) == 0x00051C, "Member 'ABP_Transmogrify_FX_C::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, Temp_int_Loop_Counter_Variable1) == 0x000520, "Member 'ABP_Transmogrify_FX_C::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, CallFunc_Array_Get_Item) == 0x000528, "Member 'ABP_Transmogrify_FX_C::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, CallFunc_Array_Get_Item1) == 0x000530, "Member 'ABP_Transmogrify_FX_C::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, CallFunc_Array_Get_Item2) == 0x000538, "Member 'ABP_Transmogrify_FX_C::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, Temp_int_Variable2) == 0x000540, "Member 'ABP_Transmogrify_FX_C::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, CallFunc_Array_Get_Item3) == 0x000548, "Member 'ABP_Transmogrify_FX_C::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, Temp_int_Variable3) == 0x000550, "Member 'ABP_Transmogrify_FX_C::Temp_int_Variable3' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, CallFunc_Array_Get_Item4) == 0x000558, "Member 'ABP_Transmogrify_FX_C::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, CallFunc_BreakVector_X) == 0x000560, "Member 'ABP_Transmogrify_FX_C::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, CallFunc_BreakVector_Y) == 0x000564, "Member 'ABP_Transmogrify_FX_C::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, CallFunc_BreakVector_Z) == 0x000568, "Member 'ABP_Transmogrify_FX_C::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, Temp_int_Variable4) == 0x00056C, "Member 'ABP_Transmogrify_FX_C::Temp_int_Variable4' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, CallFunc_Array_Get_Item5) == 0x000570, "Member 'ABP_Transmogrify_FX_C::CallFunc_Array_Get_Item5' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, CallFunc_GetComponentBounds_Origin) == 0x000578, "Member 'ABP_Transmogrify_FX_C::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, CallFunc_GetComponentBounds_BoxExtent) == 0x000584, "Member 'ABP_Transmogrify_FX_C::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, CallFunc_GetComponentBounds_SphereRadius) == 0x000590, "Member 'ABP_Transmogrify_FX_C::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, CallFunc_GetComponentBounds_Origin1) == 0x000594, "Member 'ABP_Transmogrify_FX_C::CallFunc_GetComponentBounds_Origin1' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, CallFunc_GetComponentBounds_BoxExtent1) == 0x0005A0, "Member 'ABP_Transmogrify_FX_C::CallFunc_GetComponentBounds_BoxExtent1' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, CallFunc_GetComponentBounds_SphereRadius1) == 0x0005AC, "Member 'ABP_Transmogrify_FX_C::CallFunc_GetComponentBounds_SphereRadius1' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, Temp_int_Array_Index_Variable1) == 0x0005B0, "Member 'ABP_Transmogrify_FX_C::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, CallFunc_Array_Get_Item6) == 0x0005B8, "Member 'ABP_Transmogrify_FX_C::CallFunc_Array_Get_Item6' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, Temp_int_Variable5) == 0x0005C0, "Member 'ABP_Transmogrify_FX_C::Temp_int_Variable5' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, CallFunc_Array_Get_Item7) == 0x0005C8, "Member 'ABP_Transmogrify_FX_C::CallFunc_Array_Get_Item7' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, Temp_int_Variable6) == 0x0005D0, "Member 'ABP_Transmogrify_FX_C::Temp_int_Variable6' has a wrong offset!");
static_assert(offsetof(ABP_Transmogrify_FX_C, CallFunc_Array_Get_Item8) == 0x0005D8, "Member 'ABP_Transmogrify_FX_C::CallFunc_Array_Get_Item8' has a wrong offset!");

}

