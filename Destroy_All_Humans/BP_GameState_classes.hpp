#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameState

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DH1_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GameState.BP_GameState_C
// 0x0028 (0x0D20 - 0x0CF8)
class ABP_GameState_C final : public ADH1GameState
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0CF8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_ActorComponent_ChainReactionManager_C* BP_ActorComponent_ChainReactionManager;            // 0x0D00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_Component_PortalAssignator_C*       BP_Component_PortalAssignator;                     // 0x0D08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0D10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_MusicSystem_C*                      MusicSystem;                                       // 0x0D18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_GameState(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void OnOpenWorldPlayStarted();
	void Get_MusicSystem(bool* Valid, class ABP_MusicSystem_C** MusicSystem_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GameState_C">();
	}
	static class ABP_GameState_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GameState_C>();
	}
};
static_assert(alignof(ABP_GameState_C) == 0x000008, "Wrong alignment on ABP_GameState_C");
static_assert(sizeof(ABP_GameState_C) == 0x000D20, "Wrong size on ABP_GameState_C");
static_assert(offsetof(ABP_GameState_C, UberGraphFrame) == 0x000CF8, "Member 'ABP_GameState_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_GameState_C, BP_ActorComponent_ChainReactionManager) == 0x000D00, "Member 'ABP_GameState_C::BP_ActorComponent_ChainReactionManager' has a wrong offset!");
static_assert(offsetof(ABP_GameState_C, BP_Component_PortalAssignator) == 0x000D08, "Member 'ABP_GameState_C::BP_Component_PortalAssignator' has a wrong offset!");
static_assert(offsetof(ABP_GameState_C, DefaultSceneRoot) == 0x000D10, "Member 'ABP_GameState_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_GameState_C, MusicSystem) == 0x000D18, "Member 'ABP_GameState_C::MusicSystem' has a wrong offset!");

}

