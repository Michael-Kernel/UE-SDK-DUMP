#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BFGVisualEffects

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "BFGVisualEffects_structs.hpp"


namespace SDK
{

// Class BFGVisualEffects.BFGClipmapActor
// 0x0008 (0x03E0 - 0x03D8)
class ABFGClipmapActor final : public AActor
{
public:
	class UBFGClipmapComponent*                   BFGClipmapComponent;                               // 0x03D8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BFGClipmapActor">();
	}
	static class ABFGClipmapActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABFGClipmapActor>();
	}
};
static_assert(alignof(ABFGClipmapActor) == 0x000008, "Wrong alignment on ABFGClipmapActor");
static_assert(sizeof(ABFGClipmapActor) == 0x0003E0, "Wrong size on ABFGClipmapActor");
static_assert(offsetof(ABFGClipmapActor, BFGClipmapComponent) == 0x0003D8, "Member 'ABFGClipmapActor::BFGClipmapComponent' has a wrong offset!");

// Class BFGVisualEffects.BFGVirtualCrowdComponent
// 0x0260 (0x08F0 - 0x0690)
class UBFGVirtualCrowdComponent final : public UBoxComponent
{
public:
	uint8                                         Pad_690[0x88];                                     // 0x0690(0x0088)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          M_pSkeletalMesh;                                   // 0x0718(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_720[0x10];                                     // 0x0720(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBodyInstance                          M_DefaultBodyInstance;                             // 0x0730(0x0160)(NativeAccessSpecifierPublic)
	uint8                                         Pad_890[0x60];                                     // 0x0890(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BFGVirtualCrowdComponent">();
	}
	static class UBFGVirtualCrowdComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBFGVirtualCrowdComponent>();
	}
};
static_assert(alignof(UBFGVirtualCrowdComponent) == 0x000008, "Wrong alignment on UBFGVirtualCrowdComponent");
static_assert(sizeof(UBFGVirtualCrowdComponent) == 0x0008F0, "Wrong size on UBFGVirtualCrowdComponent");
static_assert(offsetof(UBFGVirtualCrowdComponent, M_pSkeletalMesh) == 0x000718, "Member 'UBFGVirtualCrowdComponent::M_pSkeletalMesh' has a wrong offset!");
static_assert(offsetof(UBFGVirtualCrowdComponent, M_DefaultBodyInstance) == 0x000730, "Member 'UBFGVirtualCrowdComponent::M_DefaultBodyInstance' has a wrong offset!");

// Class BFGVisualEffects.BFGClipmapComponent
// 0x0030 (0x06C0 - 0x0690)
class UBFGClipmapComponent final : public UMeshComponent
{
public:
	int32                                         M_iGridSize;                                       // 0x0690(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         M_fGridSpacing;                                    // 0x0694(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         M_iMaxTreeDepth;                                   // 0x0698(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         M_fUVScale;                                        // 0x069C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6A0[0x4];                                      // 0x06A0(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         M_iTessellationFactor;                             // 0x06A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         M_iSkirtHeight;                                    // 0x06A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         M_fMaximumDisplacement;                            // 0x06AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FClipmapMaterialLod>            M_aMaterialLodSetup;                               // 0x06B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BFGClipmapComponent">();
	}
	static class UBFGClipmapComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBFGClipmapComponent>();
	}
};
static_assert(alignof(UBFGClipmapComponent) == 0x000008, "Wrong alignment on UBFGClipmapComponent");
static_assert(sizeof(UBFGClipmapComponent) == 0x0006C0, "Wrong size on UBFGClipmapComponent");
static_assert(offsetof(UBFGClipmapComponent, M_iGridSize) == 0x000690, "Member 'UBFGClipmapComponent::M_iGridSize' has a wrong offset!");
static_assert(offsetof(UBFGClipmapComponent, M_fGridSpacing) == 0x000694, "Member 'UBFGClipmapComponent::M_fGridSpacing' has a wrong offset!");
static_assert(offsetof(UBFGClipmapComponent, M_iMaxTreeDepth) == 0x000698, "Member 'UBFGClipmapComponent::M_iMaxTreeDepth' has a wrong offset!");
static_assert(offsetof(UBFGClipmapComponent, M_fUVScale) == 0x00069C, "Member 'UBFGClipmapComponent::M_fUVScale' has a wrong offset!");
static_assert(offsetof(UBFGClipmapComponent, M_iTessellationFactor) == 0x0006A4, "Member 'UBFGClipmapComponent::M_iTessellationFactor' has a wrong offset!");
static_assert(offsetof(UBFGClipmapComponent, M_iSkirtHeight) == 0x0006A8, "Member 'UBFGClipmapComponent::M_iSkirtHeight' has a wrong offset!");
static_assert(offsetof(UBFGClipmapComponent, M_fMaximumDisplacement) == 0x0006AC, "Member 'UBFGClipmapComponent::M_fMaximumDisplacement' has a wrong offset!");
static_assert(offsetof(UBFGClipmapComponent, M_aMaterialLodSetup) == 0x0006B0, "Member 'UBFGClipmapComponent::M_aMaterialLodSetup' has a wrong offset!");

// Class BFGVisualEffects.BFGProjectedGridActor
// 0x0008 (0x03E0 - 0x03D8)
class ABFGProjectedGridActor final : public AActor
{
public:
	class UBFGProjectedGridComponent*             BFGProjectedGridComponent;                         // 0x03D8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BFGProjectedGridActor">();
	}
	static class ABFGProjectedGridActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABFGProjectedGridActor>();
	}
};
static_assert(alignof(ABFGProjectedGridActor) == 0x000008, "Wrong alignment on ABFGProjectedGridActor");
static_assert(sizeof(ABFGProjectedGridActor) == 0x0003E0, "Wrong size on ABFGProjectedGridActor");
static_assert(offsetof(ABFGProjectedGridActor, BFGProjectedGridComponent) == 0x0003D8, "Member 'ABFGProjectedGridActor::BFGProjectedGridComponent' has a wrong offset!");

// Class BFGVisualEffects.BFGProjectedGridComponent
// 0x0020 (0x06B0 - 0x0690)
class UBFGProjectedGridComponent final : public UMeshComponent
{
public:
	int32                                         M_iGridWidth;                                      // 0x0690(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         M_iGridHeight;                                     // 0x0694(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         M_fOversizeFactor;                                 // 0x0698(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         M_fUVScale;                                        // 0x069C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         M_fInfiniteDistance;                               // 0x06A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6A4[0xC];                                      // 0x06A4(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BFGProjectedGridComponent">();
	}
	static class UBFGProjectedGridComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBFGProjectedGridComponent>();
	}
};
static_assert(alignof(UBFGProjectedGridComponent) == 0x000008, "Wrong alignment on UBFGProjectedGridComponent");
static_assert(sizeof(UBFGProjectedGridComponent) == 0x0006B0, "Wrong size on UBFGProjectedGridComponent");
static_assert(offsetof(UBFGProjectedGridComponent, M_iGridWidth) == 0x000690, "Member 'UBFGProjectedGridComponent::M_iGridWidth' has a wrong offset!");
static_assert(offsetof(UBFGProjectedGridComponent, M_iGridHeight) == 0x000694, "Member 'UBFGProjectedGridComponent::M_iGridHeight' has a wrong offset!");
static_assert(offsetof(UBFGProjectedGridComponent, M_fOversizeFactor) == 0x000698, "Member 'UBFGProjectedGridComponent::M_fOversizeFactor' has a wrong offset!");
static_assert(offsetof(UBFGProjectedGridComponent, M_fUVScale) == 0x00069C, "Member 'UBFGProjectedGridComponent::M_fUVScale' has a wrong offset!");
static_assert(offsetof(UBFGProjectedGridComponent, M_fInfiniteDistance) == 0x0006A0, "Member 'UBFGProjectedGridComponent::M_fInfiniteDistance' has a wrong offset!");

// Class BFGVisualEffects.BFGQuadTreeActor
// 0x0008 (0x03E0 - 0x03D8)
class ABFGQuadTreeActor final : public AActor
{
public:
	class UBFGQuadTreeComponent*                  BFGQuadTreeComponent;                              // 0x03D8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BFGQuadTreeActor">();
	}
	static class ABFGQuadTreeActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABFGQuadTreeActor>();
	}
};
static_assert(alignof(ABFGQuadTreeActor) == 0x000008, "Wrong alignment on ABFGQuadTreeActor");
static_assert(sizeof(ABFGQuadTreeActor) == 0x0003E0, "Wrong size on ABFGQuadTreeActor");
static_assert(offsetof(ABFGQuadTreeActor, BFGQuadTreeComponent) == 0x0003D8, "Member 'ABFGQuadTreeActor::BFGQuadTreeComponent' has a wrong offset!");

// Class BFGVisualEffects.BFGQuadTreeComponent
// 0x0020 (0x06B0 - 0x0690)
class UBFGQuadTreeComponent final : public UMeshComponent
{
public:
	int32                                         M_iGridWidth;                                      // 0x0690(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         M_iGridHeight;                                     // 0x0694(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         M_iMaxDepth;                                       // 0x0698(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         M_fMaxDisplacement;                                // 0x069C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         M_fUVScale;                                        // 0x06A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         M_fLODBiasScale;                                   // 0x06A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6A8[0x8];                                      // 0x06A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BFGQuadTreeComponent">();
	}
	static class UBFGQuadTreeComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBFGQuadTreeComponent>();
	}
};
static_assert(alignof(UBFGQuadTreeComponent) == 0x000008, "Wrong alignment on UBFGQuadTreeComponent");
static_assert(sizeof(UBFGQuadTreeComponent) == 0x0006B0, "Wrong size on UBFGQuadTreeComponent");
static_assert(offsetof(UBFGQuadTreeComponent, M_iGridWidth) == 0x000690, "Member 'UBFGQuadTreeComponent::M_iGridWidth' has a wrong offset!");
static_assert(offsetof(UBFGQuadTreeComponent, M_iGridHeight) == 0x000694, "Member 'UBFGQuadTreeComponent::M_iGridHeight' has a wrong offset!");
static_assert(offsetof(UBFGQuadTreeComponent, M_iMaxDepth) == 0x000698, "Member 'UBFGQuadTreeComponent::M_iMaxDepth' has a wrong offset!");
static_assert(offsetof(UBFGQuadTreeComponent, M_fMaxDisplacement) == 0x00069C, "Member 'UBFGQuadTreeComponent::M_fMaxDisplacement' has a wrong offset!");
static_assert(offsetof(UBFGQuadTreeComponent, M_fUVScale) == 0x0006A0, "Member 'UBFGQuadTreeComponent::M_fUVScale' has a wrong offset!");
static_assert(offsetof(UBFGQuadTreeComponent, M_fLODBiasScale) == 0x0006A4, "Member 'UBFGQuadTreeComponent::M_fLODBiasScale' has a wrong offset!");

// Class BFGVisualEffects.BFGVirtualCrowd
// 0x0360 (0x0738 - 0x03D8)
class ABFGVirtualCrowd : public AActor
{
public:
	uint8                                         Pad_3D8[0x40];                                     // 0x03D8(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBodyInstance                          M_DefaultBodyInstance;                             // 0x0418(0x0160)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UAnimationSharingSetup*                 M_pAnimSetup;                                      // 0x0578(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UAnimationSharingSetup>     M_pLastSetSharingSetup;                            // 0x0580(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UAnimationSharingSetup>     M_pAnimationSharingSetupClass;                     // 0x0588(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UObject*>                        M_apDamageUserData;                                // 0x0590(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TMap<class UAnimSequence*, int32>             M_aDynamicAnimTable;                               // 0x05A0(0x0050)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FBFGVirtualActor>               M_aActorTable;                                     // 0x05F0(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<int32>                                 M_aFreeIndices;                                    // 0x0600(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_610[0x38];                                     // 0x0610(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, class UBFGVirtualCrowdComponent*> M_aMeshToComponent;                                // 0x0648(0x0050)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UBFGVirtualCrowdComponent*>      M_apComponents;                                    // 0x0698(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FBFGAnimationSetup>             M_aAnimStates;                                     // 0x06A8(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_6B8[0x20];                                     // 0x06B8(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FBFGCustomVariation> M_aCustomVariations;                               // 0x06D8(0x0050)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_728[0x10];                                     // 0x0728(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	int32 AddVirtualActor(class USkeletalMesh* _pMesh, const struct FTransform& _Transform, int32 _iInitialAnimState, bool _bCreateDamageProxy);
	int32 AddVirtualVariantActor(class UDataTable* _pDataTable, class FName _VariationName, const struct FTransform& _Transform, int32 _iInitialAnimState, bool _bCreateDamageProxy, int32 _iSubVariationId);
	class UBFGVirtualCrowdComponent* GetCrowdComponentByActorIndex(int32 _iIndex);
	struct FBFGVirtualActor GetVirtualActorByIndex(int32 _iIndex);
	void RemoveVirtualActor(int32 _iActorHandle);
	void Reset();
	void SetVirtualActorVisibility(int32 _iActorHandle, bool _bHidden);
	void UpdateVirtualActorAnimation(int32 _iActorHandle, int32 _iAnimState, bool _bForceTimeUpdate);
	void UpdateVirtualActorDamageProxy(int32 _iActorHandle, bool _bEnabled);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BFGVirtualCrowd">();
	}
	static class ABFGVirtualCrowd* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABFGVirtualCrowd>();
	}
};
static_assert(alignof(ABFGVirtualCrowd) == 0x000008, "Wrong alignment on ABFGVirtualCrowd");
static_assert(sizeof(ABFGVirtualCrowd) == 0x000738, "Wrong size on ABFGVirtualCrowd");
static_assert(offsetof(ABFGVirtualCrowd, M_DefaultBodyInstance) == 0x000418, "Member 'ABFGVirtualCrowd::M_DefaultBodyInstance' has a wrong offset!");
static_assert(offsetof(ABFGVirtualCrowd, M_pAnimSetup) == 0x000578, "Member 'ABFGVirtualCrowd::M_pAnimSetup' has a wrong offset!");
static_assert(offsetof(ABFGVirtualCrowd, M_pLastSetSharingSetup) == 0x000580, "Member 'ABFGVirtualCrowd::M_pLastSetSharingSetup' has a wrong offset!");
static_assert(offsetof(ABFGVirtualCrowd, M_pAnimationSharingSetupClass) == 0x000588, "Member 'ABFGVirtualCrowd::M_pAnimationSharingSetupClass' has a wrong offset!");
static_assert(offsetof(ABFGVirtualCrowd, M_apDamageUserData) == 0x000590, "Member 'ABFGVirtualCrowd::M_apDamageUserData' has a wrong offset!");
static_assert(offsetof(ABFGVirtualCrowd, M_aDynamicAnimTable) == 0x0005A0, "Member 'ABFGVirtualCrowd::M_aDynamicAnimTable' has a wrong offset!");
static_assert(offsetof(ABFGVirtualCrowd, M_aActorTable) == 0x0005F0, "Member 'ABFGVirtualCrowd::M_aActorTable' has a wrong offset!");
static_assert(offsetof(ABFGVirtualCrowd, M_aFreeIndices) == 0x000600, "Member 'ABFGVirtualCrowd::M_aFreeIndices' has a wrong offset!");
static_assert(offsetof(ABFGVirtualCrowd, M_aMeshToComponent) == 0x000648, "Member 'ABFGVirtualCrowd::M_aMeshToComponent' has a wrong offset!");
static_assert(offsetof(ABFGVirtualCrowd, M_apComponents) == 0x000698, "Member 'ABFGVirtualCrowd::M_apComponents' has a wrong offset!");
static_assert(offsetof(ABFGVirtualCrowd, M_aAnimStates) == 0x0006A8, "Member 'ABFGVirtualCrowd::M_aAnimStates' has a wrong offset!");
static_assert(offsetof(ABFGVirtualCrowd, M_aCustomVariations) == 0x0006D8, "Member 'ABFGVirtualCrowd::M_aCustomVariations' has a wrong offset!");

// Class BFGVisualEffects.BFGVisibilityProxyComponent
// 0x0000 (0x0690 - 0x0690)
class UBFGVisibilityProxyComponent final : public UBoxComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BFGVisibilityProxyComponent">();
	}
	static class UBFGVisibilityProxyComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBFGVisibilityProxyComponent>();
	}
};
static_assert(alignof(UBFGVisibilityProxyComponent) == 0x000008, "Wrong alignment on UBFGVisibilityProxyComponent");
static_assert(sizeof(UBFGVisibilityProxyComponent) == 0x000690, "Wrong size on UBFGVisibilityProxyComponent");

}

