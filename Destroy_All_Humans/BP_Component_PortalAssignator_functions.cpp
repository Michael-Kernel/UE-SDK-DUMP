#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Component_PortalAssignator

#include "Basic.hpp"

#include "BP_Component_PortalAssignator_classes.hpp"
#include "BP_Component_PortalAssignator_parameters.hpp"


namespace SDK
{

// Function BP_Component_PortalAssignator.BP_Component_PortalAssignator_C.Unregister_Skydome
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Tool_Skydome_C*               SkydomeToUnregister                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Component_PortalAssignator_C::Unregister_Skydome(const class ABP_Tool_Skydome_C*& SkydomeToUnregister)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Component_PortalAssignator_C", "Unregister_Skydome");

	Params::BP_Component_PortalAssignator_C_Unregister_Skydome Parms{};

	Parms.SkydomeToUnregister = SkydomeToUnregister;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Component_PortalAssignator.BP_Component_PortalAssignator_C.Unregister_Portal
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_MissionTriggerZone_Indoor_C*  PortalToUnregister                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Component_PortalAssignator_C::Unregister_Portal(const class ABP_MissionTriggerZone_Indoor_C*& PortalToUnregister)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Component_PortalAssignator_C", "Unregister_Portal");

	Params::BP_Component_PortalAssignator_C_Unregister_Portal Parms{};

	Parms.PortalToUnregister = PortalToUnregister;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Component_PortalAssignator.BP_Component_PortalAssignator_C.OnPortalTrackerChanges
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bQueryMoodTransition                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOutdoorToIndoor                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Component_PortalAssignator_C::OnPortalTrackerChanges(bool* bQueryMoodTransition, bool* bOutdoorToIndoor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Component_PortalAssignator_C", "OnPortalTrackerChanges");

	Params::BP_Component_PortalAssignator_C_OnPortalTrackerChanges Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bQueryMoodTransition != nullptr)
		*bQueryMoodTransition = Parms.bQueryMoodTransition;

	if (bOutdoorToIndoor != nullptr)
		*bOutdoorToIndoor = Parms.bOutdoorToIndoor;
}


// Function BP_Component_PortalAssignator.BP_Component_PortalAssignator_C.UpdateTrackerDelta
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIncrement                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Component_PortalAssignator_C::UpdateTrackerDelta(bool bIncrement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Component_PortalAssignator_C", "UpdateTrackerDelta");

	Params::BP_Component_PortalAssignator_C_UpdateTrackerDelta Parms{};

	Parms.bIncrement = bIncrement;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Component_PortalAssignator.BP_Component_PortalAssignator_C.Register_Portal
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_MissionTriggerZone_Indoor_C*  SkydomeToRegister                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Component_PortalAssignator_C::Register_Portal(const class ABP_MissionTriggerZone_Indoor_C*& SkydomeToRegister)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Component_PortalAssignator_C", "Register_Portal");

	Params::BP_Component_PortalAssignator_C_Register_Portal Parms{};

	Parms.SkydomeToRegister = SkydomeToRegister;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Component_PortalAssignator.BP_Component_PortalAssignator_C.PortalDebug
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Detail                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_Component_PortalAssignator_C::PortalDebug(const class FString& Text, const class FString& Detail)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Component_PortalAssignator_C", "PortalDebug");

	Params::BP_Component_PortalAssignator_C_PortalDebug Parms{};

	Parms.Text = std::move(Text);
	Parms.Detail = std::move(Detail);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Component_PortalAssignator.BP_Component_PortalAssignator_C.Register_Skydome
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Tool_Skydome_C*               SkydomeToRegister                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Component_PortalAssignator_C::Register_Skydome(const class ABP_Tool_Skydome_C*& SkydomeToRegister)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Component_PortalAssignator_C", "Register_Skydome");

	Params::BP_Component_PortalAssignator_C_Register_Skydome Parms{};

	Parms.SkydomeToRegister = SkydomeToRegister;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Component_PortalAssignator.BP_Component_PortalAssignator_C.OnPortalValidOverlap_Starts
// (BlueprintCallable, BlueprintEvent)

void UBP_Component_PortalAssignator_C::OnPortalValidOverlap_Starts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Component_PortalAssignator_C", "OnPortalValidOverlap_Starts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Component_PortalAssignator.BP_Component_PortalAssignator_C.OnPortalValidOverlap_Ends
// (BlueprintCallable, BlueprintEvent)

void UBP_Component_PortalAssignator_C::OnPortalValidOverlap_Ends()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Component_PortalAssignator_C", "OnPortalValidOverlap_Ends");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Component_PortalAssignator.BP_Component_PortalAssignator_C.ExecuteUbergraph_BP_Component_PortalAssignator
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Component_PortalAssignator_C::ExecuteUbergraph_BP_Component_PortalAssignator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Component_PortalAssignator_C", "ExecuteUbergraph_BP_Component_PortalAssignator");

	Params::BP_Component_PortalAssignator_C_ExecuteUbergraph_BP_Component_PortalAssignator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

