#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Disintegrator_Burn

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BFGCore_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Disintegrator_Burn.BP_Disintegrator_Burn_C
// 0x0040 (0x0488 - 0x0448)
class ABP_Disintegrator_Burn_C final : public ABFGEffectActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0448(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               PFX_EmbersSkeleteon;                               // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PFX_Fire_BurstCharacter;                           // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        FireBurst;                                         // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        FireBurst_horizontal;                              // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        EmbersSkeleton_horizontal;                         // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        EmbersSkeleton;                                    // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Disintegrator_Burn(int32 EntryPoint);
	void OnTriggerEffect();
	void SetupEffects();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Disintegrator_Burn_C">();
	}
	static class ABP_Disintegrator_Burn_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Disintegrator_Burn_C>();
	}
};
static_assert(alignof(ABP_Disintegrator_Burn_C) == 0x000008, "Wrong alignment on ABP_Disintegrator_Burn_C");
static_assert(sizeof(ABP_Disintegrator_Burn_C) == 0x000488, "Wrong size on ABP_Disintegrator_Burn_C");
static_assert(offsetof(ABP_Disintegrator_Burn_C, UberGraphFrame) == 0x000448, "Member 'ABP_Disintegrator_Burn_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Disintegrator_Burn_C, PFX_EmbersSkeleteon) == 0x000450, "Member 'ABP_Disintegrator_Burn_C::PFX_EmbersSkeleteon' has a wrong offset!");
static_assert(offsetof(ABP_Disintegrator_Burn_C, PFX_Fire_BurstCharacter) == 0x000458, "Member 'ABP_Disintegrator_Burn_C::PFX_Fire_BurstCharacter' has a wrong offset!");
static_assert(offsetof(ABP_Disintegrator_Burn_C, DefaultSceneRoot) == 0x000460, "Member 'ABP_Disintegrator_Burn_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Disintegrator_Burn_C, FireBurst) == 0x000468, "Member 'ABP_Disintegrator_Burn_C::FireBurst' has a wrong offset!");
static_assert(offsetof(ABP_Disintegrator_Burn_C, FireBurst_horizontal) == 0x000470, "Member 'ABP_Disintegrator_Burn_C::FireBurst_horizontal' has a wrong offset!");
static_assert(offsetof(ABP_Disintegrator_Burn_C, EmbersSkeleton_horizontal) == 0x000478, "Member 'ABP_Disintegrator_Burn_C::EmbersSkeleton_horizontal' has a wrong offset!");
static_assert(offsetof(ABP_Disintegrator_Burn_C, EmbersSkeleton) == 0x000480, "Member 'ABP_Disintegrator_Burn_C::EmbersSkeleton' has a wrong offset!");

}

