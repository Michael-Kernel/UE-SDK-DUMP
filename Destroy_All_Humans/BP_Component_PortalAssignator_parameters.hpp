#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Component_PortalAssignator

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_Component_PortalAssignator.BP_Component_PortalAssignator_C.Unregister_Skydome
// 0x0010 (0x0010 - 0x0000)
struct BP_Component_PortalAssignator_C_Unregister_Skydome final
{
public:
	const class ABP_Tool_Skydome_C*               SkydomeToUnregister;                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Component_PortalAssignator_C_Unregister_Skydome) == 0x000008, "Wrong alignment on BP_Component_PortalAssignator_C_Unregister_Skydome");
static_assert(sizeof(BP_Component_PortalAssignator_C_Unregister_Skydome) == 0x000010, "Wrong size on BP_Component_PortalAssignator_C_Unregister_Skydome");
static_assert(offsetof(BP_Component_PortalAssignator_C_Unregister_Skydome, SkydomeToUnregister) == 0x000000, "Member 'BP_Component_PortalAssignator_C_Unregister_Skydome::SkydomeToUnregister' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_Unregister_Skydome, CallFunc_Array_RemoveItem_ReturnValue) == 0x000008, "Member 'BP_Component_PortalAssignator_C_Unregister_Skydome::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_Component_PortalAssignator.BP_Component_PortalAssignator_C.Unregister_Portal
// 0x0010 (0x0010 - 0x0000)
struct BP_Component_PortalAssignator_C_Unregister_Portal final
{
public:
	const class ABP_MissionTriggerZone_Indoor_C*  PortalToUnregister;                                // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Component_PortalAssignator_C_Unregister_Portal) == 0x000008, "Wrong alignment on BP_Component_PortalAssignator_C_Unregister_Portal");
static_assert(sizeof(BP_Component_PortalAssignator_C_Unregister_Portal) == 0x000010, "Wrong size on BP_Component_PortalAssignator_C_Unregister_Portal");
static_assert(offsetof(BP_Component_PortalAssignator_C_Unregister_Portal, PortalToUnregister) == 0x000000, "Member 'BP_Component_PortalAssignator_C_Unregister_Portal::PortalToUnregister' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_Unregister_Portal, CallFunc_Array_RemoveItem_ReturnValue) == 0x000008, "Member 'BP_Component_PortalAssignator_C_Unregister_Portal::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_Component_PortalAssignator.BP_Component_PortalAssignator_C.OnPortalTrackerChanges
// 0x0008 (0x0008 - 0x0000)
struct BP_Component_PortalAssignator_C_OnPortalTrackerChanges final
{
public:
	bool                                          bQueryMoodTransition;                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOutdoorToIndoor;                                  // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue1;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue2;           // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Component_PortalAssignator_C_OnPortalTrackerChanges) == 0x000001, "Wrong alignment on BP_Component_PortalAssignator_C_OnPortalTrackerChanges");
static_assert(sizeof(BP_Component_PortalAssignator_C_OnPortalTrackerChanges) == 0x000008, "Wrong size on BP_Component_PortalAssignator_C_OnPortalTrackerChanges");
static_assert(offsetof(BP_Component_PortalAssignator_C_OnPortalTrackerChanges, bQueryMoodTransition) == 0x000000, "Member 'BP_Component_PortalAssignator_C_OnPortalTrackerChanges::bQueryMoodTransition' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_OnPortalTrackerChanges, bOutdoorToIndoor) == 0x000001, "Member 'BP_Component_PortalAssignator_C_OnPortalTrackerChanges::bOutdoorToIndoor' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_OnPortalTrackerChanges, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000002, "Member 'BP_Component_PortalAssignator_C_OnPortalTrackerChanges::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_OnPortalTrackerChanges, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000003, "Member 'BP_Component_PortalAssignator_C_OnPortalTrackerChanges::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_OnPortalTrackerChanges, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'BP_Component_PortalAssignator_C_OnPortalTrackerChanges::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_OnPortalTrackerChanges, CallFunc_EqualEqual_IntInt_ReturnValue1) == 0x000005, "Member 'BP_Component_PortalAssignator_C_OnPortalTrackerChanges::CallFunc_EqualEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_OnPortalTrackerChanges, CallFunc_EqualEqual_IntInt_ReturnValue2) == 0x000006, "Member 'BP_Component_PortalAssignator_C_OnPortalTrackerChanges::CallFunc_EqualEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_OnPortalTrackerChanges, CallFunc_BooleanAND_ReturnValue1) == 0x000007, "Member 'BP_Component_PortalAssignator_C_OnPortalTrackerChanges::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");

// Function BP_Component_PortalAssignator.BP_Component_PortalAssignator_C.UpdateTrackerDelta
// 0x0014 (0x0014 - 0x0000)
struct BP_Component_PortalAssignator_C_UpdateTrackerDelta final
{
public:
	bool                                          bIncrement;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable1;                                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Component_PortalAssignator_C_UpdateTrackerDelta) == 0x000004, "Wrong alignment on BP_Component_PortalAssignator_C_UpdateTrackerDelta");
static_assert(sizeof(BP_Component_PortalAssignator_C_UpdateTrackerDelta) == 0x000014, "Wrong size on BP_Component_PortalAssignator_C_UpdateTrackerDelta");
static_assert(offsetof(BP_Component_PortalAssignator_C_UpdateTrackerDelta, bIncrement) == 0x000000, "Member 'BP_Component_PortalAssignator_C_UpdateTrackerDelta::bIncrement' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_UpdateTrackerDelta, Temp_int_Variable) == 0x000004, "Member 'BP_Component_PortalAssignator_C_UpdateTrackerDelta::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_UpdateTrackerDelta, Temp_int_Variable1) == 0x000008, "Member 'BP_Component_PortalAssignator_C_UpdateTrackerDelta::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_UpdateTrackerDelta, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Component_PortalAssignator_C_UpdateTrackerDelta::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_UpdateTrackerDelta, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_Component_PortalAssignator_C_UpdateTrackerDelta::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Component_PortalAssignator.BP_Component_PortalAssignator_C.Register_Portal
// 0x0040 (0x0040 - 0x0000)
struct BP_Component_PortalAssignator_C_Register_Portal final
{
public:
	const class ABP_MissionTriggerZone_Indoor_C*  SkydomeToRegister;                                 // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Component_PortalAssignator_C_Register_Portal) == 0x000008, "Wrong alignment on BP_Component_PortalAssignator_C_Register_Portal");
static_assert(sizeof(BP_Component_PortalAssignator_C_Register_Portal) == 0x000040, "Wrong size on BP_Component_PortalAssignator_C_Register_Portal");
static_assert(offsetof(BP_Component_PortalAssignator_C_Register_Portal, SkydomeToRegister) == 0x000000, "Member 'BP_Component_PortalAssignator_C_Register_Portal::SkydomeToRegister' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_Register_Portal, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_Component_PortalAssignator_C_Register_Portal::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_Register_Portal, CallFunc_GetDisplayName_ReturnValue) == 0x000018, "Member 'BP_Component_PortalAssignator_C_Register_Portal::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_Register_Portal, K2Node_CreateDelegate_OutputDelegate1) == 0x000028, "Member 'BP_Component_PortalAssignator_C_Register_Portal::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_Register_Portal, CallFunc_Array_AddUnique_ReturnValue) == 0x000038, "Member 'BP_Component_PortalAssignator_C_Register_Portal::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_Component_PortalAssignator.BP_Component_PortalAssignator_C.PortalDebug
// 0x0060 (0x0060 - 0x0000)
struct BP_Component_PortalAssignator_C_PortalDebug final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Detail;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Component_PortalAssignator_C_PortalDebug) == 0x000008, "Wrong alignment on BP_Component_PortalAssignator_C_PortalDebug");
static_assert(sizeof(BP_Component_PortalAssignator_C_PortalDebug) == 0x000060, "Wrong size on BP_Component_PortalAssignator_C_PortalDebug");
static_assert(offsetof(BP_Component_PortalAssignator_C_PortalDebug, Text) == 0x000000, "Member 'BP_Component_PortalAssignator_C_PortalDebug::Text' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_PortalDebug, Detail) == 0x000010, "Member 'BP_Component_PortalAssignator_C_PortalDebug::Detail' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_PortalDebug, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'BP_Component_PortalAssignator_C_PortalDebug::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_PortalDebug, CallFunc_Concat_StrStr_ReturnValue1) == 0x000030, "Member 'BP_Component_PortalAssignator_C_PortalDebug::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_PortalDebug, CallFunc_Concat_StrStr_ReturnValue2) == 0x000040, "Member 'BP_Component_PortalAssignator_C_PortalDebug::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_PortalDebug, CallFunc_Concat_StrStr_ReturnValue3) == 0x000050, "Member 'BP_Component_PortalAssignator_C_PortalDebug::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");

// Function BP_Component_PortalAssignator.BP_Component_PortalAssignator_C.Register_Skydome
// 0x0020 (0x0020 - 0x0000)
struct BP_Component_PortalAssignator_C_Register_Skydome final
{
public:
	const class ABP_Tool_Skydome_C*               SkydomeToRegister;                                 // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Component_PortalAssignator_C_Register_Skydome) == 0x000008, "Wrong alignment on BP_Component_PortalAssignator_C_Register_Skydome");
static_assert(sizeof(BP_Component_PortalAssignator_C_Register_Skydome) == 0x000020, "Wrong size on BP_Component_PortalAssignator_C_Register_Skydome");
static_assert(offsetof(BP_Component_PortalAssignator_C_Register_Skydome, SkydomeToRegister) == 0x000000, "Member 'BP_Component_PortalAssignator_C_Register_Skydome::SkydomeToRegister' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_Register_Skydome, CallFunc_GetDisplayName_ReturnValue) == 0x000008, "Member 'BP_Component_PortalAssignator_C_Register_Skydome::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_Register_Skydome, CallFunc_Array_AddUnique_ReturnValue) == 0x000018, "Member 'BP_Component_PortalAssignator_C_Register_Skydome::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_Component_PortalAssignator.BP_Component_PortalAssignator_C.ExecuteUbergraph_BP_Component_PortalAssignator
// 0x0040 (0x0040 - 0x0000)
struct BP_Component_PortalAssignator_C_ExecuteUbergraph_BP_Component_PortalAssignator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Tool_Skydome_C*                     CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnPortalTrackerChanges_bQueryMoodTransition; // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnPortalTrackerChanges_bOutdoorToIndoor;  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Component_PortalAssignator_C_ExecuteUbergraph_BP_Component_PortalAssignator) == 0x000008, "Wrong alignment on BP_Component_PortalAssignator_C_ExecuteUbergraph_BP_Component_PortalAssignator");
static_assert(sizeof(BP_Component_PortalAssignator_C_ExecuteUbergraph_BP_Component_PortalAssignator) == 0x000040, "Wrong size on BP_Component_PortalAssignator_C_ExecuteUbergraph_BP_Component_PortalAssignator");
static_assert(offsetof(BP_Component_PortalAssignator_C_ExecuteUbergraph_BP_Component_PortalAssignator, EntryPoint) == 0x000000, "Member 'BP_Component_PortalAssignator_C_ExecuteUbergraph_BP_Component_PortalAssignator::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_ExecuteUbergraph_BP_Component_PortalAssignator, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_Component_PortalAssignator_C_ExecuteUbergraph_BP_Component_PortalAssignator::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_ExecuteUbergraph_BP_Component_PortalAssignator, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_Component_PortalAssignator_C_ExecuteUbergraph_BP_Component_PortalAssignator::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_ExecuteUbergraph_BP_Component_PortalAssignator, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_Component_PortalAssignator_C_ExecuteUbergraph_BP_Component_PortalAssignator::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_ExecuteUbergraph_BP_Component_PortalAssignator, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_Component_PortalAssignator_C_ExecuteUbergraph_BP_Component_PortalAssignator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_ExecuteUbergraph_BP_Component_PortalAssignator, CallFunc_GetDisplayName_ReturnValue) == 0x000020, "Member 'BP_Component_PortalAssignator_C_ExecuteUbergraph_BP_Component_PortalAssignator::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_ExecuteUbergraph_BP_Component_PortalAssignator, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_Component_PortalAssignator_C_ExecuteUbergraph_BP_Component_PortalAssignator::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_ExecuteUbergraph_BP_Component_PortalAssignator, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_Component_PortalAssignator_C_ExecuteUbergraph_BP_Component_PortalAssignator::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_ExecuteUbergraph_BP_Component_PortalAssignator, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_Component_PortalAssignator_C_ExecuteUbergraph_BP_Component_PortalAssignator::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_ExecuteUbergraph_BP_Component_PortalAssignator, CallFunc_OnPortalTrackerChanges_bQueryMoodTransition) == 0x000039, "Member 'BP_Component_PortalAssignator_C_ExecuteUbergraph_BP_Component_PortalAssignator::CallFunc_OnPortalTrackerChanges_bQueryMoodTransition' has a wrong offset!");
static_assert(offsetof(BP_Component_PortalAssignator_C_ExecuteUbergraph_BP_Component_PortalAssignator, CallFunc_OnPortalTrackerChanges_bOutdoorToIndoor) == 0x00003A, "Member 'BP_Component_PortalAssignator_C_ExecuteUbergraph_BP_Component_PortalAssignator::CallFunc_OnPortalTrackerChanges_bOutdoorToIndoor' has a wrong offset!");

}

