#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WheeledVehicle

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_WheeledVehicle.BP_WheeledVehicle_C.ExecuteUbergraph_BP_WheeledVehicle
// 0x0118 (0x0118 - 0x0000)
struct BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMeshComponent*>                 CallFunc_GetComponentsByClass_ReturnValue;         // 0x0020(0x0010)(ZeroConstructor, ReferenceParm)
	class UMeshComponent*                         CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGActorComponent_PawnDamage*          K2Node_ComponentBoundEvent__pPawnDamage;           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent__fDamage;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent__pDamageCauser;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UBFGDamageType*                   K2Node_ComponentBoundEvent__pDamageType;           // 0x0058(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent__rShotDirection;        // 0x0060(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent__oHitResult;            // 0x006C(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBFGEffectContainer*>            CallFunc_ActivateEffectAttachToActor_ReturnValue;  // 0x00F8(0x0010)(ZeroConstructor, ReferenceParm)
	struct FGameplayTag                           K2Node_ComponentBoundEvent__rTag;                  // 0x0108(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle) == 0x000008, "Wrong alignment on BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle");
static_assert(sizeof(BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle) == 0x000118, "Wrong size on BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle");
static_assert(offsetof(BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle, EntryPoint) == 0x000000, "Member 'BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle, Temp_int_Variable) == 0x000008, "Member 'BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle, CallFunc_Lerp_ReturnValue) == 0x000010, "Member 'BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle, Temp_bool_IsClosed_Variable) == 0x000014, "Member 'BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle, CallFunc_GetComponentsByClass_ReturnValue) == 0x000020, "Member 'BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle, K2Node_ComponentBoundEvent__pPawnDamage) == 0x000040, "Member 'BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle::K2Node_ComponentBoundEvent__pPawnDamage' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle, K2Node_ComponentBoundEvent__fDamage) == 0x000048, "Member 'BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle::K2Node_ComponentBoundEvent__fDamage' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle, K2Node_ComponentBoundEvent__pDamageCauser) == 0x000050, "Member 'BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle::K2Node_ComponentBoundEvent__pDamageCauser' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle, K2Node_ComponentBoundEvent__pDamageType) == 0x000058, "Member 'BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle::K2Node_ComponentBoundEvent__pDamageType' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle, K2Node_ComponentBoundEvent__rShotDirection) == 0x000060, "Member 'BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle::K2Node_ComponentBoundEvent__rShotDirection' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle, K2Node_ComponentBoundEvent__oHitResult) == 0x00006C, "Member 'BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle::K2Node_ComponentBoundEvent__oHitResult' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000F4, "Member 'BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle, CallFunc_ActivateEffectAttachToActor_ReturnValue) == 0x0000F8, "Member 'BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle::CallFunc_ActivateEffectAttachToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle, K2Node_ComponentBoundEvent__rTag) == 0x000108, "Member 'BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle::K2Node_ComponentBoundEvent__rTag' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000110, "Member 'BP_WheeledVehicle_C_ExecuteUbergraph_BP_WheeledVehicle::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");

// Function BP_WheeledVehicle.BP_WheeledVehicle_C.BndEvt__m_pGameplayEffectTagsComponent_K2Node_ComponentBoundEvent_1_BFGGameplayEffectTags_Event__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_WheeledVehicle_C_BndEvt__m_pGameplayEffectTagsComponent_K2Node_ComponentBoundEvent_1_BFGGameplayEffectTags_Event__DelegateSignature final
{
public:
	struct FGameplayTag                           _rTag;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WheeledVehicle_C_BndEvt__m_pGameplayEffectTagsComponent_K2Node_ComponentBoundEvent_1_BFGGameplayEffectTags_Event__DelegateSignature) == 0x000004, "Wrong alignment on BP_WheeledVehicle_C_BndEvt__m_pGameplayEffectTagsComponent_K2Node_ComponentBoundEvent_1_BFGGameplayEffectTags_Event__DelegateSignature");
static_assert(sizeof(BP_WheeledVehicle_C_BndEvt__m_pGameplayEffectTagsComponent_K2Node_ComponentBoundEvent_1_BFGGameplayEffectTags_Event__DelegateSignature) == 0x000008, "Wrong size on BP_WheeledVehicle_C_BndEvt__m_pGameplayEffectTagsComponent_K2Node_ComponentBoundEvent_1_BFGGameplayEffectTags_Event__DelegateSignature");
static_assert(offsetof(BP_WheeledVehicle_C_BndEvt__m_pGameplayEffectTagsComponent_K2Node_ComponentBoundEvent_1_BFGGameplayEffectTags_Event__DelegateSignature, _rTag) == 0x000000, "Member 'BP_WheeledVehicle_C_BndEvt__m_pGameplayEffectTagsComponent_K2Node_ComponentBoundEvent_1_BFGGameplayEffectTags_Event__DelegateSignature::_rTag' has a wrong offset!");

// Function BP_WheeledVehicle.BP_WheeledVehicle_C.BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature
// 0x00B8 (0x00B8 - 0x0000)
struct BP_WheeledVehicle_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature final
{
public:
	class UBFGActorComponent_PawnDamage*          _pPawnDamage;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _fDamage;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 _pDamageCauser;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UBFGDamageType*                   _pDamageType;                                      // 0x0018(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                _rShotDirection;                                   // 0x0020(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             _oHitResult;                                       // 0x002C(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_WheeledVehicle_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature) == 0x000008, "Wrong alignment on BP_WheeledVehicle_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature");
static_assert(sizeof(BP_WheeledVehicle_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature) == 0x0000B8, "Wrong size on BP_WheeledVehicle_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature");
static_assert(offsetof(BP_WheeledVehicle_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature, _pPawnDamage) == 0x000000, "Member 'BP_WheeledVehicle_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature::_pPawnDamage' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature, _fDamage) == 0x000008, "Member 'BP_WheeledVehicle_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature::_fDamage' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature, _pDamageCauser) == 0x000010, "Member 'BP_WheeledVehicle_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature::_pDamageCauser' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature, _pDamageType) == 0x000018, "Member 'BP_WheeledVehicle_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature::_pDamageType' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature, _rShotDirection) == 0x000020, "Member 'BP_WheeledVehicle_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature::_rShotDirection' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature, _oHitResult) == 0x00002C, "Member 'BP_WheeledVehicle_C_BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature::_oHitResult' has a wrong offset!");

// Function BP_WheeledVehicle.BP_WheeledVehicle_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_WheeledVehicle_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WheeledVehicle_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_WheeledVehicle_C_ReceiveTick");
static_assert(sizeof(BP_WheeledVehicle_C_ReceiveTick) == 0x000004, "Wrong size on BP_WheeledVehicle_C_ReceiveTick");
static_assert(offsetof(BP_WheeledVehicle_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_WheeledVehicle_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_WheeledVehicle.BP_WheeledVehicle_C.Audio_HandoverParameters
// 0x0080 (0x0080 - 0x0000)
struct BP_WheeledVehicle_C_Audio_HandoverParameters final
{
public:
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGEffectBlackboard*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloat_ReturnValue;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagQuery                      CallFunc_MakeGameplayTagQuery_ReturnValue;         // 0x0018(0x0048)()
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAffectedByQuery_ReturnValue;            // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Audio_Activate_NowActive;                 // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGEffectBlackboard*                   CallFunc_GetBlackboard_ReturnValue1;               // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloat_ReturnValue1;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue1;                   // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetForwardSpeed_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WheeledVehicle_C_Audio_HandoverParameters) == 0x000008, "Wrong alignment on BP_WheeledVehicle_C_Audio_HandoverParameters");
static_assert(sizeof(BP_WheeledVehicle_C_Audio_HandoverParameters) == 0x000080, "Wrong size on BP_WheeledVehicle_C_Audio_HandoverParameters");
static_assert(offsetof(BP_WheeledVehicle_C_Audio_HandoverParameters, CallFunc_MapRangeClamped_ReturnValue) == 0x000000, "Member 'BP_WheeledVehicle_C_Audio_HandoverParameters::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_Audio_HandoverParameters, CallFunc_GetBlackboard_ReturnValue) == 0x000008, "Member 'BP_WheeledVehicle_C_Audio_HandoverParameters::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_Audio_HandoverParameters, CallFunc_GetFloat_ReturnValue) == 0x000010, "Member 'BP_WheeledVehicle_C_Audio_HandoverParameters::CallFunc_GetFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_Audio_HandoverParameters, CallFunc_MakeGameplayTagQuery_ReturnValue) == 0x000018, "Member 'BP_WheeledVehicle_C_Audio_HandoverParameters::CallFunc_MakeGameplayTagQuery_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_Audio_HandoverParameters, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000060, "Member 'BP_WheeledVehicle_C_Audio_HandoverParameters::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_Audio_HandoverParameters, CallFunc_IsAffectedByQuery_ReturnValue) == 0x000061, "Member 'BP_WheeledVehicle_C_Audio_HandoverParameters::CallFunc_IsAffectedByQuery_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_Audio_HandoverParameters, CallFunc_BooleanOR_ReturnValue) == 0x000062, "Member 'BP_WheeledVehicle_C_Audio_HandoverParameters::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_Audio_HandoverParameters, CallFunc_Audio_Activate_NowActive) == 0x000063, "Member 'BP_WheeledVehicle_C_Audio_HandoverParameters::CallFunc_Audio_Activate_NowActive' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_Audio_HandoverParameters, CallFunc_IsPlaying_ReturnValue) == 0x000064, "Member 'BP_WheeledVehicle_C_Audio_HandoverParameters::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_Audio_HandoverParameters, CallFunc_GetBlackboard_ReturnValue1) == 0x000068, "Member 'BP_WheeledVehicle_C_Audio_HandoverParameters::CallFunc_GetBlackboard_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_Audio_HandoverParameters, CallFunc_GetFloat_ReturnValue1) == 0x000070, "Member 'BP_WheeledVehicle_C_Audio_HandoverParameters::CallFunc_GetFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_Audio_HandoverParameters, CallFunc_IsPlaying_ReturnValue1) == 0x000074, "Member 'BP_WheeledVehicle_C_Audio_HandoverParameters::CallFunc_IsPlaying_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_Audio_HandoverParameters, CallFunc_BooleanAND_ReturnValue) == 0x000075, "Member 'BP_WheeledVehicle_C_Audio_HandoverParameters::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_Audio_HandoverParameters, CallFunc_GetForwardSpeed_ReturnValue) == 0x000078, "Member 'BP_WheeledVehicle_C_Audio_HandoverParameters::CallFunc_GetForwardSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_Audio_HandoverParameters, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00007C, "Member 'BP_WheeledVehicle_C_Audio_HandoverParameters::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_WheeledVehicle.BP_WheeledVehicle_C.HonkAtObstacleInFront
// 0x0020 (0x0020 - 0x0000)
struct BP_WheeledVehicle_C_HonkAtObstacleInFront final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBFGEffectContainer*>            CallFunc_ActivateEffectAttachToActor_ReturnValue;  // 0x0008(0x0010)(ZeroConstructor, ReferenceParm)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WheeledVehicle_C_HonkAtObstacleInFront) == 0x000008, "Wrong alignment on BP_WheeledVehicle_C_HonkAtObstacleInFront");
static_assert(sizeof(BP_WheeledVehicle_C_HonkAtObstacleInFront) == 0x000020, "Wrong size on BP_WheeledVehicle_C_HonkAtObstacleInFront");
static_assert(offsetof(BP_WheeledVehicle_C_HonkAtObstacleInFront, ReturnValue) == 0x000000, "Member 'BP_WheeledVehicle_C_HonkAtObstacleInFront::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_HonkAtObstacleInFront, CallFunc_ActivateEffectAttachToActor_ReturnValue) == 0x000008, "Member 'BP_WheeledVehicle_C_HonkAtObstacleInFront::CallFunc_ActivateEffectAttachToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_HonkAtObstacleInFront, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_WheeledVehicle_C_HonkAtObstacleInFront::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_HonkAtObstacleInFront, CallFunc_RandomFloatInRange_ReturnValue) == 0x00001C, "Member 'BP_WheeledVehicle_C_HonkAtObstacleInFront::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");

// Function BP_WheeledVehicle.BP_WheeledVehicle_C.Audio_Activate
// 0x0020 (0x0020 - 0x0000)
struct BP_WheeledVehicle_C_Audio_Activate final
{
public:
	bool                                          NowActive;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue1;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGActorStat_Bool*                     CallFunc_GetIsDeadStat_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValue_ReturnValue;                     // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue1;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WheeledVehicle_C_Audio_Activate) == 0x000008, "Wrong alignment on BP_WheeledVehicle_C_Audio_Activate");
static_assert(sizeof(BP_WheeledVehicle_C_Audio_Activate) == 0x000020, "Wrong size on BP_WheeledVehicle_C_Audio_Activate");
static_assert(offsetof(BP_WheeledVehicle_C_Audio_Activate, NowActive) == 0x000000, "Member 'BP_WheeledVehicle_C_Audio_Activate::NowActive' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_Audio_Activate, CallFunc_IsPlaying_ReturnValue) == 0x000001, "Member 'BP_WheeledVehicle_C_Audio_Activate::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_Audio_Activate, CallFunc_IsPlaying_ReturnValue1) == 0x000002, "Member 'BP_WheeledVehicle_C_Audio_Activate::CallFunc_IsPlaying_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_Audio_Activate, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'BP_WheeledVehicle_C_Audio_Activate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_Audio_Activate, CallFunc_GetIsDeadStat_ReturnValue) == 0x000008, "Member 'BP_WheeledVehicle_C_Audio_Activate::CallFunc_GetIsDeadStat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_Audio_Activate, CallFunc_RandomFloatInRange_ReturnValue) == 0x000010, "Member 'BP_WheeledVehicle_C_Audio_Activate::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_Audio_Activate, CallFunc_GetValue_ReturnValue) == 0x000014, "Member 'BP_WheeledVehicle_C_Audio_Activate::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_Audio_Activate, CallFunc_Not_PreBool_ReturnValue1) == 0x000015, "Member 'BP_WheeledVehicle_C_Audio_Activate::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_Audio_Activate, CallFunc_BooleanAND_ReturnValue) == 0x000016, "Member 'BP_WheeledVehicle_C_Audio_Activate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_Audio_Activate, CallFunc_RandomFloatInRange_ReturnValue1) == 0x000018, "Member 'BP_WheeledVehicle_C_Audio_Activate::CallFunc_RandomFloatInRange_ReturnValue1' has a wrong offset!");

// Function BP_WheeledVehicle.BP_WheeledVehicle_C.HandleVehicleDeath
// 0x006C (0x006C - 0x0000)
struct BP_WheeledVehicle_C_HandleVehicleDeath final
{
public:
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue1;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue1;            // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WheeledVehicle_C_HandleVehicleDeath) == 0x000004, "Wrong alignment on BP_WheeledVehicle_C_HandleVehicleDeath");
static_assert(sizeof(BP_WheeledVehicle_C_HandleVehicleDeath) == 0x00006C, "Wrong size on BP_WheeledVehicle_C_HandleVehicleDeath");
static_assert(offsetof(BP_WheeledVehicle_C_HandleVehicleDeath, CallFunc_RandomUnitVector_ReturnValue) == 0x000000, "Member 'BP_WheeledVehicle_C_HandleVehicleDeath::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_HandleVehicleDeath, CallFunc_RandomFloatInRange_ReturnValue) == 0x00000C, "Member 'BP_WheeledVehicle_C_HandleVehicleDeath::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_HandleVehicleDeath, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000010, "Member 'BP_WheeledVehicle_C_HandleVehicleDeath::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_HandleVehicleDeath, CallFunc_RandomFloatInRange_ReturnValue1) == 0x00001C, "Member 'BP_WheeledVehicle_C_HandleVehicleDeath::CallFunc_RandomFloatInRange_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_HandleVehicleDeath, CallFunc_RandomUnitVector_ReturnValue1) == 0x000020, "Member 'BP_WheeledVehicle_C_HandleVehicleDeath::CallFunc_RandomUnitVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_HandleVehicleDeath, CallFunc_BreakVector_X) == 0x00002C, "Member 'BP_WheeledVehicle_C_HandleVehicleDeath::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_HandleVehicleDeath, CallFunc_BreakVector_Y) == 0x000030, "Member 'BP_WheeledVehicle_C_HandleVehicleDeath::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_HandleVehicleDeath, CallFunc_BreakVector_Z) == 0x000034, "Member 'BP_WheeledVehicle_C_HandleVehicleDeath::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_HandleVehicleDeath, CallFunc_Abs_ReturnValue) == 0x000038, "Member 'BP_WheeledVehicle_C_HandleVehicleDeath::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_HandleVehicleDeath, CallFunc_MakeVector_ReturnValue) == 0x00003C, "Member 'BP_WheeledVehicle_C_HandleVehicleDeath::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_HandleVehicleDeath, CallFunc_Add_VectorVector_ReturnValue) == 0x000048, "Member 'BP_WheeledVehicle_C_HandleVehicleDeath::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_HandleVehicleDeath, CallFunc_Normal_ReturnValue) == 0x000054, "Member 'BP_WheeledVehicle_C_HandleVehicleDeath::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_HandleVehicleDeath, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x000060, "Member 'BP_WheeledVehicle_C_HandleVehicleDeath::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");

// Function BP_WheeledVehicle.BP_WheeledVehicle_C.HandleBeginPlay
// 0x0020 (0x0020 - 0x0000)
struct BP_WheeledVehicle_C_HandleBeginPlay final
{
public:
	bool                                          CallFunc_Audio_Activate_NowActive;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGEffectBlackboard*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBFGEffectContainer*>            CallFunc_ActivateEffectAttachToActor_ReturnValue;  // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_WheeledVehicle_C_HandleBeginPlay) == 0x000008, "Wrong alignment on BP_WheeledVehicle_C_HandleBeginPlay");
static_assert(sizeof(BP_WheeledVehicle_C_HandleBeginPlay) == 0x000020, "Wrong size on BP_WheeledVehicle_C_HandleBeginPlay");
static_assert(offsetof(BP_WheeledVehicle_C_HandleBeginPlay, CallFunc_Audio_Activate_NowActive) == 0x000000, "Member 'BP_WheeledVehicle_C_HandleBeginPlay::CallFunc_Audio_Activate_NowActive' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_HandleBeginPlay, CallFunc_GetBlackboard_ReturnValue) == 0x000008, "Member 'BP_WheeledVehicle_C_HandleBeginPlay::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WheeledVehicle_C_HandleBeginPlay, CallFunc_ActivateEffectAttachToActor_ReturnValue) == 0x000010, "Member 'BP_WheeledVehicle_C_HandleBeginPlay::CallFunc_ActivateEffectAttachToActor_ReturnValue' has a wrong offset!");

}

