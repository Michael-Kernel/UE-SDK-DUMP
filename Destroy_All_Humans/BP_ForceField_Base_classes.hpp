#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ForceField_Base

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "BFGCore_classes.hpp"


namespace SDK
{

// DynamicClass BP_ForceField_Base.BP_ForceField_Base_C
// 0x0540 (0x0990 - 0x0450)
class ABP_ForceField_Base_C : public ABFGEffectActor_ForceField
{
public:
	class UPointLightComponent*                   Water_light;                                       // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                   SM_rippleMesh_01;                                  // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                   SM_Crypto_ForceField_water_occlusion;              // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                   Prototyping_impact_point_A;                        // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                   SM_Crypto_ForceField_02_static_sphere;             // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPointLightComponent*                   Impact_Light_1;                                    // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPointLightComponent*                   Impact_Light_3;                                    // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPointLightComponent*                   Impact_Light_2;                                    // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                   Prototyping_impact_point_C;                        // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                   Prototyping_impact_point_B;                        // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        Scene;                                             // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FullRecharge_timeline_sphere_visibility_D2D56CA647BCDB58DB0460A4409AC233; // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETimelineDirection                            FullRecharge_timeline__Direction_D2D56CA647BCDB58DB0460A4409AC233; // 0x04B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4B5[0x3];                                      // 0x04B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     FullRecharge_timeline;                             // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GracePeriod_fadeOUT_fadeOUT_166E39954BFD35E4669515BA17EE5BB4; // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETimelineDirection                            GracePeriod_fadeOUT__Direction_166E39954BFD35E4669515BA17EE5BB4; // 0x04C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C5[0x3];                                      // 0x04C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     GracePeriod_fadeOUT;                               // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GracePeriod_fadeIN_fadeIN_2BAB38F64BC9820D1268FDAAA0DF5FF7; // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETimelineDirection                            GracePeriod_fadeIN__Direction_2BAB38F64BC9820D1268FDAAA0DF5FF7; // 0x04D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D5[0x3];                                      // 0x04D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     GracePeriod_fadeIN;                                // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Timeline_2_sphere_visibility_F24C710545139A57B7DDBD9757601CA7; // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Timeline_2_light_intensity_F24C710545139A57B7DDBD9757601CA7; // 0x04E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Timeline_2_ripplePos_F24C710545139A57B7DDBD9757601CA7; // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETimelineDirection                            Timeline_2__Direction_F24C710545139A57B7DDBD9757601CA7; // 0x04EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4ED[0x3];                                      // 0x04ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_2;                                        // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Timeline_1_sphere_visibility_F8ED139C44A6643456269E9747E1F9AF; // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Timeline_1_light_intensity_F8ED139C44A6643456269E9747E1F9AF; // 0x04FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Timeline_1_ripplePos_F8ED139C44A6643456269E9747E1F9AF; // 0x0500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETimelineDirection                            Timeline_1__Direction_F8ED139C44A6643456269E9747E1F9AF; // 0x0504(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_505[0x3];                                      // 0x0505(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_1;                                        // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Timeline_0_sphere_visibility_7AA4C18545D0423CA8BC4B857A9F194A; // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Timeline_0_light_intensity_7AA4C18545D0423CA8BC4B857A9F194A; // 0x0514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Timeline_0_ripplePos_7AA4C18545D0423CA8BC4B857A9F194A; // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETimelineDirection                            Timeline_0__Direction_7AA4C18545D0423CA8BC4B857A9F194A; // 0x051C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51D[0x3];                                      // 0x051D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              Crosshair_screen_position;                         // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Impact_1_Pos;                                      // 0x0530(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Impact_2_Pos;                                      // 0x053C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Impact_3_Pos;                                      // 0x0548(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Impact_1_Radius;                                   // 0x0554(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Impact_2_Radius;                                   // 0x0558(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Impact_3_Radius;                                   // 0x055C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Impact_1_RipplePos;                                // 0x0560(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Impact_2_RipplePos;                                // 0x0564(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Impact_3_RipplePos;                                // 0x0568(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_56C[0x4];                                      // 0x056C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Material_Hexagon_Sides;                            // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*               Material_Hexagon_Top_Bottom;                       // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*               Material_Edges;                                    // 0x0580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Impact_1_isActive;                                 // 0x0588(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Impact_2_isActive;                                 // 0x0589(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Impact_3_isActive;                                 // 0x058A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Impact_Tick_enabled;                               // 0x058B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 Shield_Color_full;                                 // 0x058C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 Shield_Color_lowEnergy;                            // 0x0590(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShieldEnergy;                                      // 0x0594(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Impact_1_Pos_local;                                // 0x0598(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Impact_2_Pos_local;                                // 0x05A4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Impact_3_Pos_local;                                // 0x05B0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5BC[0x4];                                      // 0x05BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            DamageToRadiusCurve;                               // 0x05C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*               Material_Hexagon_Sides_Water;                      // 0x05C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*               Material_Hexagon_Top_Bottom_Water;                 // 0x05D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*               Material_Edges_Water;                              // 0x05D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WaterHeight;                                       // 0x05E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ForceField_radius;                                 // 0x05E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsInWater;                                         // 0x05E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5E9[0x7];                                      // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               DynamicRippleMaterial;                             // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageRadius_multiplier;                           // 0x05F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5FC[0x4];                                      // 0x05FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Impact_PFX_template;                               // 0x0600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            ForceFieldColor_sampleCurve;                       // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         boilingEdge_width;                                 // 0x0610(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          GracePeriod_active;                                // 0x0614(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          FullRecharge_active;                               // 0x0615(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Is_close_to_water;                                 // 0x0616(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_617[0x1];                                      // 0x0617(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event__iSlot;                               // 0x0618(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x061C(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61D[0x3];                                      // 0x061D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0620(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CallFunc_get_ImpactData_impact_direction;          // 0x0624(0x000C)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CallFunc_get_ImpactData_Impact_Position;           // 0x0630(0x000C)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CallFunc_get_ImpactData_Impact_Position_local;     // 0x063C(0x000C)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CallFunc_get_ImpactData_impact_normal;             // 0x0648(0x000C)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_get_ImpactData_Impact_Radius;             // 0x0654(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CallFunc_get_ImpactData_impact_direction1;         // 0x0658(0x000C)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CallFunc_get_ImpactData_Impact_Position1;          // 0x0664(0x000C)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CallFunc_get_ImpactData_Impact_Position_local1;    // 0x0670(0x000C)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CallFunc_get_ImpactData_impact_normal1;            // 0x067C(0x000C)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_get_ImpactData_Impact_Radius1;            // 0x0688(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x068C(0x0088)(Transient, DuplicateTransient, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult1;      // 0x0714(0x0088)(Transient, DuplicateTransient, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult2;      // 0x079C(0x0088)(Transient, DuplicateTransient, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector_X;                            // 0x0824(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector_Y;                            // 0x0828(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector_Z;                            // 0x082C(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult3;      // 0x0830(0x0088)(Transient, DuplicateTransient, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult4;      // 0x08B8(0x0088)(Transient, DuplicateTransient, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakColor_R;                             // 0x0940(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakColor_G;                             // 0x0944(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakColor_B;                             // 0x0948(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakColor_A;                             // 0x094C(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CallFunc_get_ImpactData_impact_direction2;         // 0x0950(0x000C)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CallFunc_get_ImpactData_Impact_Position2;          // 0x095C(0x000C)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CallFunc_get_ImpactData_Impact_Position_local2;    // 0x0968(0x000C)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CallFunc_get_ImpactData_impact_normal2;            // 0x0974(0x000C)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_get_ImpactData_Impact_Radius2;            // 0x0980(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector_X1;                           // 0x0984(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector_Y1;                           // 0x0988(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector_Z1;                           // 0x098C(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void UserConstructionScript();
	void TryStartGracePeriod();
	void TryActivateFullyRecharged();
	void Timeline_2__UpdateFunc();
	void Timeline_2__FinishedFunc();
	void Timeline_1__UpdateFunc();
	void Timeline_1__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void ReceiveTick(float bpp__DeltaSeconds__pf);
	void ReceiveBeginPlay();
	void OnTriggerEffectSlot(int32 bpp___iSlot__pf);
	void Impact_Slot_3();
	void Impact_Slot_2();
	void Impact_Slot_1();
	void GracePeriod_fadeOUT__UpdateFunc();
	void GracePeriod_fadeOUT__FinishedFunc();
	void GracePeriod_fadeIN__UpdateFunc();
	void GracePeriod_fadeIN__FinishedFunc();
	void Get_ImpactData(struct FVector* bpp__impact_direction__pf, struct FVector* bpp__Impact_Position__pf, struct FVector* bpp__Impact_Position_local__pf, struct FVector* bpp__impact_normal__pf, float* bpp__Impact_Radius__pf);
	void Get_availableSlot();
	void FullRecharge_timeline__UpdateFunc();
	void FullRecharge_timeline__FinishedFunc();
	void ExecuteUbergraph_BP_ForceField_Base_5(int32 bpp__EntryPoint__pf);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BP_ForceField_Base_C">();
	}
	static class ABP_ForceField_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ForceField_Base_C>();
	}
};
static_assert(alignof(ABP_ForceField_Base_C) == 0x000008, "Wrong alignment on ABP_ForceField_Base_C");
static_assert(sizeof(ABP_ForceField_Base_C) == 0x000990, "Wrong size on ABP_ForceField_Base_C");
static_assert(offsetof(ABP_ForceField_Base_C, Water_light) == 0x000450, "Member 'ABP_ForceField_Base_C::Water_light' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, SM_rippleMesh_01) == 0x000458, "Member 'ABP_ForceField_Base_C::SM_rippleMesh_01' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, SM_Crypto_ForceField_water_occlusion) == 0x000460, "Member 'ABP_ForceField_Base_C::SM_Crypto_ForceField_water_occlusion' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Prototyping_impact_point_A) == 0x000468, "Member 'ABP_ForceField_Base_C::Prototyping_impact_point_A' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, SM_Crypto_ForceField_02_static_sphere) == 0x000470, "Member 'ABP_ForceField_Base_C::SM_Crypto_ForceField_02_static_sphere' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Impact_Light_1) == 0x000478, "Member 'ABP_ForceField_Base_C::Impact_Light_1' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Impact_Light_3) == 0x000480, "Member 'ABP_ForceField_Base_C::Impact_Light_3' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Impact_Light_2) == 0x000488, "Member 'ABP_ForceField_Base_C::Impact_Light_2' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Prototyping_impact_point_C) == 0x000490, "Member 'ABP_ForceField_Base_C::Prototyping_impact_point_C' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Prototyping_impact_point_B) == 0x000498, "Member 'ABP_ForceField_Base_C::Prototyping_impact_point_B' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Scene) == 0x0004A0, "Member 'ABP_ForceField_Base_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, DefaultSceneRoot) == 0x0004A8, "Member 'ABP_ForceField_Base_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, FullRecharge_timeline_sphere_visibility_D2D56CA647BCDB58DB0460A4409AC233) == 0x0004B0, "Member 'ABP_ForceField_Base_C::FullRecharge_timeline_sphere_visibility_D2D56CA647BCDB58DB0460A4409AC233' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, FullRecharge_timeline__Direction_D2D56CA647BCDB58DB0460A4409AC233) == 0x0004B4, "Member 'ABP_ForceField_Base_C::FullRecharge_timeline__Direction_D2D56CA647BCDB58DB0460A4409AC233' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, FullRecharge_timeline) == 0x0004B8, "Member 'ABP_ForceField_Base_C::FullRecharge_timeline' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, GracePeriod_fadeOUT_fadeOUT_166E39954BFD35E4669515BA17EE5BB4) == 0x0004C0, "Member 'ABP_ForceField_Base_C::GracePeriod_fadeOUT_fadeOUT_166E39954BFD35E4669515BA17EE5BB4' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, GracePeriod_fadeOUT__Direction_166E39954BFD35E4669515BA17EE5BB4) == 0x0004C4, "Member 'ABP_ForceField_Base_C::GracePeriod_fadeOUT__Direction_166E39954BFD35E4669515BA17EE5BB4' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, GracePeriod_fadeOUT) == 0x0004C8, "Member 'ABP_ForceField_Base_C::GracePeriod_fadeOUT' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, GracePeriod_fadeIN_fadeIN_2BAB38F64BC9820D1268FDAAA0DF5FF7) == 0x0004D0, "Member 'ABP_ForceField_Base_C::GracePeriod_fadeIN_fadeIN_2BAB38F64BC9820D1268FDAAA0DF5FF7' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, GracePeriod_fadeIN__Direction_2BAB38F64BC9820D1268FDAAA0DF5FF7) == 0x0004D4, "Member 'ABP_ForceField_Base_C::GracePeriod_fadeIN__Direction_2BAB38F64BC9820D1268FDAAA0DF5FF7' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, GracePeriod_fadeIN) == 0x0004D8, "Member 'ABP_ForceField_Base_C::GracePeriod_fadeIN' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Timeline_2_sphere_visibility_F24C710545139A57B7DDBD9757601CA7) == 0x0004E0, "Member 'ABP_ForceField_Base_C::Timeline_2_sphere_visibility_F24C710545139A57B7DDBD9757601CA7' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Timeline_2_light_intensity_F24C710545139A57B7DDBD9757601CA7) == 0x0004E4, "Member 'ABP_ForceField_Base_C::Timeline_2_light_intensity_F24C710545139A57B7DDBD9757601CA7' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Timeline_2_ripplePos_F24C710545139A57B7DDBD9757601CA7) == 0x0004E8, "Member 'ABP_ForceField_Base_C::Timeline_2_ripplePos_F24C710545139A57B7DDBD9757601CA7' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Timeline_2__Direction_F24C710545139A57B7DDBD9757601CA7) == 0x0004EC, "Member 'ABP_ForceField_Base_C::Timeline_2__Direction_F24C710545139A57B7DDBD9757601CA7' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Timeline_2) == 0x0004F0, "Member 'ABP_ForceField_Base_C::Timeline_2' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Timeline_1_sphere_visibility_F8ED139C44A6643456269E9747E1F9AF) == 0x0004F8, "Member 'ABP_ForceField_Base_C::Timeline_1_sphere_visibility_F8ED139C44A6643456269E9747E1F9AF' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Timeline_1_light_intensity_F8ED139C44A6643456269E9747E1F9AF) == 0x0004FC, "Member 'ABP_ForceField_Base_C::Timeline_1_light_intensity_F8ED139C44A6643456269E9747E1F9AF' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Timeline_1_ripplePos_F8ED139C44A6643456269E9747E1F9AF) == 0x000500, "Member 'ABP_ForceField_Base_C::Timeline_1_ripplePos_F8ED139C44A6643456269E9747E1F9AF' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Timeline_1__Direction_F8ED139C44A6643456269E9747E1F9AF) == 0x000504, "Member 'ABP_ForceField_Base_C::Timeline_1__Direction_F8ED139C44A6643456269E9747E1F9AF' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Timeline_1) == 0x000508, "Member 'ABP_ForceField_Base_C::Timeline_1' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Timeline_0_sphere_visibility_7AA4C18545D0423CA8BC4B857A9F194A) == 0x000510, "Member 'ABP_ForceField_Base_C::Timeline_0_sphere_visibility_7AA4C18545D0423CA8BC4B857A9F194A' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Timeline_0_light_intensity_7AA4C18545D0423CA8BC4B857A9F194A) == 0x000514, "Member 'ABP_ForceField_Base_C::Timeline_0_light_intensity_7AA4C18545D0423CA8BC4B857A9F194A' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Timeline_0_ripplePos_7AA4C18545D0423CA8BC4B857A9F194A) == 0x000518, "Member 'ABP_ForceField_Base_C::Timeline_0_ripplePos_7AA4C18545D0423CA8BC4B857A9F194A' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Timeline_0__Direction_7AA4C18545D0423CA8BC4B857A9F194A) == 0x00051C, "Member 'ABP_ForceField_Base_C::Timeline_0__Direction_7AA4C18545D0423CA8BC4B857A9F194A' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Timeline_0) == 0x000520, "Member 'ABP_ForceField_Base_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Crosshair_screen_position) == 0x000528, "Member 'ABP_ForceField_Base_C::Crosshair_screen_position' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Impact_1_Pos) == 0x000530, "Member 'ABP_ForceField_Base_C::Impact_1_Pos' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Impact_2_Pos) == 0x00053C, "Member 'ABP_ForceField_Base_C::Impact_2_Pos' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Impact_3_Pos) == 0x000548, "Member 'ABP_ForceField_Base_C::Impact_3_Pos' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Impact_1_Radius) == 0x000554, "Member 'ABP_ForceField_Base_C::Impact_1_Radius' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Impact_2_Radius) == 0x000558, "Member 'ABP_ForceField_Base_C::Impact_2_Radius' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Impact_3_Radius) == 0x00055C, "Member 'ABP_ForceField_Base_C::Impact_3_Radius' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Impact_1_RipplePos) == 0x000560, "Member 'ABP_ForceField_Base_C::Impact_1_RipplePos' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Impact_2_RipplePos) == 0x000564, "Member 'ABP_ForceField_Base_C::Impact_2_RipplePos' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Impact_3_RipplePos) == 0x000568, "Member 'ABP_ForceField_Base_C::Impact_3_RipplePos' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Material_Hexagon_Sides) == 0x000570, "Member 'ABP_ForceField_Base_C::Material_Hexagon_Sides' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Material_Hexagon_Top_Bottom) == 0x000578, "Member 'ABP_ForceField_Base_C::Material_Hexagon_Top_Bottom' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Material_Edges) == 0x000580, "Member 'ABP_ForceField_Base_C::Material_Edges' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Impact_1_isActive) == 0x000588, "Member 'ABP_ForceField_Base_C::Impact_1_isActive' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Impact_2_isActive) == 0x000589, "Member 'ABP_ForceField_Base_C::Impact_2_isActive' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Impact_3_isActive) == 0x00058A, "Member 'ABP_ForceField_Base_C::Impact_3_isActive' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Impact_Tick_enabled) == 0x00058B, "Member 'ABP_ForceField_Base_C::Impact_Tick_enabled' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Shield_Color_full) == 0x00058C, "Member 'ABP_ForceField_Base_C::Shield_Color_full' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Shield_Color_lowEnergy) == 0x000590, "Member 'ABP_ForceField_Base_C::Shield_Color_lowEnergy' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, ShieldEnergy) == 0x000594, "Member 'ABP_ForceField_Base_C::ShieldEnergy' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Impact_1_Pos_local) == 0x000598, "Member 'ABP_ForceField_Base_C::Impact_1_Pos_local' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Impact_2_Pos_local) == 0x0005A4, "Member 'ABP_ForceField_Base_C::Impact_2_Pos_local' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Impact_3_Pos_local) == 0x0005B0, "Member 'ABP_ForceField_Base_C::Impact_3_Pos_local' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, DamageToRadiusCurve) == 0x0005C0, "Member 'ABP_ForceField_Base_C::DamageToRadiusCurve' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Material_Hexagon_Sides_Water) == 0x0005C8, "Member 'ABP_ForceField_Base_C::Material_Hexagon_Sides_Water' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Material_Hexagon_Top_Bottom_Water) == 0x0005D0, "Member 'ABP_ForceField_Base_C::Material_Hexagon_Top_Bottom_Water' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Material_Edges_Water) == 0x0005D8, "Member 'ABP_ForceField_Base_C::Material_Edges_Water' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, WaterHeight) == 0x0005E0, "Member 'ABP_ForceField_Base_C::WaterHeight' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, ForceField_radius) == 0x0005E4, "Member 'ABP_ForceField_Base_C::ForceField_radius' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, IsInWater) == 0x0005E8, "Member 'ABP_ForceField_Base_C::IsInWater' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, DynamicRippleMaterial) == 0x0005F0, "Member 'ABP_ForceField_Base_C::DynamicRippleMaterial' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, DamageRadius_multiplier) == 0x0005F8, "Member 'ABP_ForceField_Base_C::DamageRadius_multiplier' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Impact_PFX_template) == 0x000600, "Member 'ABP_ForceField_Base_C::Impact_PFX_template' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, ForceFieldColor_sampleCurve) == 0x000608, "Member 'ABP_ForceField_Base_C::ForceFieldColor_sampleCurve' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, boilingEdge_width) == 0x000610, "Member 'ABP_ForceField_Base_C::boilingEdge_width' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, GracePeriod_active) == 0x000614, "Member 'ABP_ForceField_Base_C::GracePeriod_active' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, FullRecharge_active) == 0x000615, "Member 'ABP_ForceField_Base_C::FullRecharge_active' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, Is_close_to_water) == 0x000616, "Member 'ABP_ForceField_Base_C::Is_close_to_water' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, K2Node_Event__iSlot) == 0x000618, "Member 'ABP_ForceField_Base_C::K2Node_Event__iSlot' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, K2Node_SwitchInteger_CmpSuccess) == 0x00061C, "Member 'ABP_ForceField_Base_C::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, K2Node_Event_DeltaSeconds) == 0x000620, "Member 'ABP_ForceField_Base_C::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, CallFunc_get_ImpactData_impact_direction) == 0x000624, "Member 'ABP_ForceField_Base_C::CallFunc_get_ImpactData_impact_direction' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, CallFunc_get_ImpactData_Impact_Position) == 0x000630, "Member 'ABP_ForceField_Base_C::CallFunc_get_ImpactData_Impact_Position' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, CallFunc_get_ImpactData_Impact_Position_local) == 0x00063C, "Member 'ABP_ForceField_Base_C::CallFunc_get_ImpactData_Impact_Position_local' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, CallFunc_get_ImpactData_impact_normal) == 0x000648, "Member 'ABP_ForceField_Base_C::CallFunc_get_ImpactData_impact_normal' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, CallFunc_get_ImpactData_Impact_Radius) == 0x000654, "Member 'ABP_ForceField_Base_C::CallFunc_get_ImpactData_Impact_Radius' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, CallFunc_get_ImpactData_impact_direction1) == 0x000658, "Member 'ABP_ForceField_Base_C::CallFunc_get_ImpactData_impact_direction1' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, CallFunc_get_ImpactData_Impact_Position1) == 0x000664, "Member 'ABP_ForceField_Base_C::CallFunc_get_ImpactData_Impact_Position1' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, CallFunc_get_ImpactData_Impact_Position_local1) == 0x000670, "Member 'ABP_ForceField_Base_C::CallFunc_get_ImpactData_Impact_Position_local1' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, CallFunc_get_ImpactData_impact_normal1) == 0x00067C, "Member 'ABP_ForceField_Base_C::CallFunc_get_ImpactData_impact_normal1' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, CallFunc_get_ImpactData_Impact_Radius1) == 0x000688, "Member 'ABP_ForceField_Base_C::CallFunc_get_ImpactData_Impact_Radius1' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x00068C, "Member 'ABP_ForceField_Base_C::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, CallFunc_K2_SetWorldLocation_SweepHitResult1) == 0x000714, "Member 'ABP_ForceField_Base_C::CallFunc_K2_SetWorldLocation_SweepHitResult1' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, CallFunc_K2_SetWorldLocation_SweepHitResult2) == 0x00079C, "Member 'ABP_ForceField_Base_C::CallFunc_K2_SetWorldLocation_SweepHitResult2' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, CallFunc_BreakVector_X) == 0x000824, "Member 'ABP_ForceField_Base_C::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, CallFunc_BreakVector_Y) == 0x000828, "Member 'ABP_ForceField_Base_C::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, CallFunc_BreakVector_Z) == 0x00082C, "Member 'ABP_ForceField_Base_C::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, CallFunc_K2_SetWorldLocation_SweepHitResult3) == 0x000830, "Member 'ABP_ForceField_Base_C::CallFunc_K2_SetWorldLocation_SweepHitResult3' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, CallFunc_K2_SetWorldLocation_SweepHitResult4) == 0x0008B8, "Member 'ABP_ForceField_Base_C::CallFunc_K2_SetWorldLocation_SweepHitResult4' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, CallFunc_BreakColor_R) == 0x000940, "Member 'ABP_ForceField_Base_C::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, CallFunc_BreakColor_G) == 0x000944, "Member 'ABP_ForceField_Base_C::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, CallFunc_BreakColor_B) == 0x000948, "Member 'ABP_ForceField_Base_C::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, CallFunc_BreakColor_A) == 0x00094C, "Member 'ABP_ForceField_Base_C::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, CallFunc_get_ImpactData_impact_direction2) == 0x000950, "Member 'ABP_ForceField_Base_C::CallFunc_get_ImpactData_impact_direction2' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, CallFunc_get_ImpactData_Impact_Position2) == 0x00095C, "Member 'ABP_ForceField_Base_C::CallFunc_get_ImpactData_Impact_Position2' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, CallFunc_get_ImpactData_Impact_Position_local2) == 0x000968, "Member 'ABP_ForceField_Base_C::CallFunc_get_ImpactData_Impact_Position_local2' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, CallFunc_get_ImpactData_impact_normal2) == 0x000974, "Member 'ABP_ForceField_Base_C::CallFunc_get_ImpactData_impact_normal2' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, CallFunc_get_ImpactData_Impact_Radius2) == 0x000980, "Member 'ABP_ForceField_Base_C::CallFunc_get_ImpactData_Impact_Radius2' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, CallFunc_BreakVector_X1) == 0x000984, "Member 'ABP_ForceField_Base_C::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, CallFunc_BreakVector_Y1) == 0x000988, "Member 'ABP_ForceField_Base_C::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(ABP_ForceField_Base_C, CallFunc_BreakVector_Z1) == 0x00098C, "Member 'ABP_ForceField_Base_C::CallFunc_BreakVector_Z1' has a wrong offset!");

}

