#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPW_ChallengePanel_Star

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "BFGCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BPW_ChallengePanel_Star.BPW_ChallengePanel_Star_C.Unlock
// 0x0118 (0x0118 - 0x0000)
struct BPW_ChallengePanel_Star_C_Unlock final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_MakeBrushFromSprite_ReturnValue;          // 0x0008(0x0088)()
	struct FSlateBrush                            CallFunc_MakeBrushFromSprite_ReturnValue1;         // 0x0090(0x0088)()
};
static_assert(alignof(BPW_ChallengePanel_Star_C_Unlock) == 0x000008, "Wrong alignment on BPW_ChallengePanel_Star_C_Unlock");
static_assert(sizeof(BPW_ChallengePanel_Star_C_Unlock) == 0x000118, "Wrong size on BPW_ChallengePanel_Star_C_Unlock");
static_assert(offsetof(BPW_ChallengePanel_Star_C_Unlock, Value) == 0x000000, "Member 'BPW_ChallengePanel_Star_C_Unlock::Value' has a wrong offset!");
static_assert(offsetof(BPW_ChallengePanel_Star_C_Unlock, CallFunc_MakeBrushFromSprite_ReturnValue) == 0x000008, "Member 'BPW_ChallengePanel_Star_C_Unlock::CallFunc_MakeBrushFromSprite_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_ChallengePanel_Star_C_Unlock, CallFunc_MakeBrushFromSprite_ReturnValue1) == 0x000090, "Member 'BPW_ChallengePanel_Star_C_Unlock::CallFunc_MakeBrushFromSprite_ReturnValue1' has a wrong offset!");

// Function BPW_ChallengePanel_Star.BPW_ChallengePanel_Star_C.ApplyInfo
// 0x0138 (0x0138 - 0x0000)
struct BPW_ChallengePanel_Star_C_ApplyInfo final
{
public:
	class FText                                   Format;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FBFGDataAsset_ChallengeInfo_StarDetails StarDetails;                                       // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UBFGQuestSettings*                      CallFunc_GetSettings_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetBeautifiedInt_BeautifiedText;          // 0x0038(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0050(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0068(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData1;             // 0x00A8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E8(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array1;                           // 0x00F8(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0108(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue1;                      // 0x0120(0x0018)()
};
static_assert(alignof(BPW_ChallengePanel_Star_C_ApplyInfo) == 0x000008, "Wrong alignment on BPW_ChallengePanel_Star_C_ApplyInfo");
static_assert(sizeof(BPW_ChallengePanel_Star_C_ApplyInfo) == 0x000138, "Wrong size on BPW_ChallengePanel_Star_C_ApplyInfo");
static_assert(offsetof(BPW_ChallengePanel_Star_C_ApplyInfo, Format) == 0x000000, "Member 'BPW_ChallengePanel_Star_C_ApplyInfo::Format' has a wrong offset!");
static_assert(offsetof(BPW_ChallengePanel_Star_C_ApplyInfo, StarDetails) == 0x000018, "Member 'BPW_ChallengePanel_Star_C_ApplyInfo::StarDetails' has a wrong offset!");
static_assert(offsetof(BPW_ChallengePanel_Star_C_ApplyInfo, CallFunc_GetSettings_ReturnValue) == 0x000030, "Member 'BPW_ChallengePanel_Star_C_ApplyInfo::CallFunc_GetSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_ChallengePanel_Star_C_ApplyInfo, CallFunc_GetBeautifiedInt_BeautifiedText) == 0x000038, "Member 'BPW_ChallengePanel_Star_C_ApplyInfo::CallFunc_GetBeautifiedInt_BeautifiedText' has a wrong offset!");
static_assert(offsetof(BPW_ChallengePanel_Star_C_ApplyInfo, CallFunc_Conv_IntToText_ReturnValue) == 0x000050, "Member 'BPW_ChallengePanel_Star_C_ApplyInfo::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_ChallengePanel_Star_C_ApplyInfo, K2Node_MakeStruct_FormatArgumentData) == 0x000068, "Member 'BPW_ChallengePanel_Star_C_ApplyInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BPW_ChallengePanel_Star_C_ApplyInfo, K2Node_MakeStruct_FormatArgumentData1) == 0x0000A8, "Member 'BPW_ChallengePanel_Star_C_ApplyInfo::K2Node_MakeStruct_FormatArgumentData1' has a wrong offset!");
static_assert(offsetof(BPW_ChallengePanel_Star_C_ApplyInfo, K2Node_MakeArray_Array) == 0x0000E8, "Member 'BPW_ChallengePanel_Star_C_ApplyInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPW_ChallengePanel_Star_C_ApplyInfo, K2Node_MakeArray_Array1) == 0x0000F8, "Member 'BPW_ChallengePanel_Star_C_ApplyInfo::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(BPW_ChallengePanel_Star_C_ApplyInfo, CallFunc_Format_ReturnValue) == 0x000108, "Member 'BPW_ChallengePanel_Star_C_ApplyInfo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_ChallengePanel_Star_C_ApplyInfo, CallFunc_Format_ReturnValue1) == 0x000120, "Member 'BPW_ChallengePanel_Star_C_ApplyInfo::CallFunc_Format_ReturnValue1' has a wrong offset!");

// Function BPW_ChallengePanel_Star.BPW_ChallengePanel_Star_C.SetBonus
// 0x0018 (0x0018 - 0x0000)
struct BPW_ChallengePanel_Star_C_SetBonus final
{
public:
	class FText                                   Bonus;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BPW_ChallengePanel_Star_C_SetBonus) == 0x000008, "Wrong alignment on BPW_ChallengePanel_Star_C_SetBonus");
static_assert(sizeof(BPW_ChallengePanel_Star_C_SetBonus) == 0x000018, "Wrong size on BPW_ChallengePanel_Star_C_SetBonus");
static_assert(offsetof(BPW_ChallengePanel_Star_C_SetBonus, Bonus) == 0x000000, "Member 'BPW_ChallengePanel_Star_C_SetBonus::Bonus' has a wrong offset!");

// Function BPW_ChallengePanel_Star.BPW_ChallengePanel_Star_C.SetCondition
// 0x0018 (0x0018 - 0x0000)
struct BPW_ChallengePanel_Star_C_SetCondition final
{
public:
	class FText                                   Condition;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BPW_ChallengePanel_Star_C_SetCondition) == 0x000008, "Wrong alignment on BPW_ChallengePanel_Star_C_SetCondition");
static_assert(sizeof(BPW_ChallengePanel_Star_C_SetCondition) == 0x000018, "Wrong size on BPW_ChallengePanel_Star_C_SetCondition");
static_assert(offsetof(BPW_ChallengePanel_Star_C_SetCondition, Condition) == 0x000000, "Member 'BPW_ChallengePanel_Star_C_SetCondition::Condition' has a wrong offset!");

}

