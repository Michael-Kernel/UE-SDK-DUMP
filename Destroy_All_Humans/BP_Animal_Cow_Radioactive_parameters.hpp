#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Animal_Cow_Radioactive

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Animal_Cow_Radioactive.BP_Animal_Cow_Radioactive_C.ExecuteUbergraph_BP_Animal_Cow_Radioactive
// 0x01B0 (0x01B0 - 0x0000)
struct BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* _pActor, class UBFGActorStat_Bool* _pStat)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0xC];                                       // 0x0074(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	TArray<class UBFGEffectContainer*>            CallFunc_ActivateEffectWithTransform_ReturnValue;  // 0x00B0(0x0010)(ZeroConstructor, ReferenceParm)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x00E4(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGActorStat_Bool*                     CallFunc_GetIsDeadStat_ReturnValue;                // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent__pActor;                        // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBFGActorStat_Bool*                     K2Node_CustomEvent__pStat;                         // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValue_ReturnValue;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABFGGameMode*                           K2Node_DynamicCast_AsBFGGame_Mode;                 // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsResetingActors_ReturnValue;             // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive) == 0x000010, "Wrong alignment on BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive");
static_assert(sizeof(BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive) == 0x0001B0, "Wrong size on BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive, EntryPoint) == 0x000000, "Member 'BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive, CallFunc_BreakTransform_Location) == 0x000050, "Member 'BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive, CallFunc_BreakTransform_Rotation) == 0x00005C, "Member 'BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive, CallFunc_BreakTransform_Scale) == 0x000068, "Member 'BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive, CallFunc_MakeTransform_ReturnValue) == 0x000080, "Member 'BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive, CallFunc_ActivateEffectWithTransform_ReturnValue) == 0x0000B0, "Member 'BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive::CallFunc_ActivateEffectWithTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive, K2Node_ComponentBoundEvent_HitComponent) == 0x0000C0, "Member 'BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive, K2Node_ComponentBoundEvent_OtherActor) == 0x0000C8, "Member 'BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive, K2Node_ComponentBoundEvent_OtherComp) == 0x0000D0, "Member 'BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive, K2Node_ComponentBoundEvent_NormalImpulse) == 0x0000D8, "Member 'BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive, K2Node_ComponentBoundEvent_Hit) == 0x0000E4, "Member 'BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive, CallFunc_GetIsDeadStat_ReturnValue) == 0x000170, "Member 'BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive::CallFunc_GetIsDeadStat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive, K2Node_CustomEvent__pActor) == 0x000178, "Member 'BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive::K2Node_CustomEvent__pActor' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive, K2Node_CustomEvent__pStat) == 0x000180, "Member 'BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive::K2Node_CustomEvent__pStat' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive, CallFunc_GetValue_ReturnValue) == 0x000188, "Member 'BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive, CallFunc_GetGameMode_ReturnValue) == 0x000190, "Member 'BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive, K2Node_DynamicCast_AsBFGGame_Mode) == 0x000198, "Member 'BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive::K2Node_DynamicCast_AsBFGGame_Mode' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive, K2Node_DynamicCast_bSuccess) == 0x0001A0, "Member 'BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive, CallFunc_IsResetingActors_ReturnValue) == 0x0001A1, "Member 'BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive::CallFunc_IsResetingActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive, CallFunc_Not_PreBool_ReturnValue) == 0x0001A2, "Member 'BP_Animal_Cow_Radioactive_C_ExecuteUbergraph_BP_Animal_Cow_Radioactive::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_Animal_Cow_Radioactive.BP_Animal_Cow_Radioactive_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Animal_Cow_Radioactive_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Animal_Cow_Radioactive_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Animal_Cow_Radioactive_C_ReceiveTick");
static_assert(sizeof(BP_Animal_Cow_Radioactive_C_ReceiveTick) == 0x000004, "Wrong size on BP_Animal_Cow_Radioactive_C_ReceiveTick");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Animal_Cow_Radioactive_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Animal_Cow_Radioactive.BP_Animal_Cow_Radioactive_C.On Death
// 0x0010 (0x0010 - 0x0000)
struct BP_Animal_Cow_Radioactive_C_On_Death final
{
public:
	class AActor*                                 _pActor;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBFGActorStat_Bool*                     _pStat;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Animal_Cow_Radioactive_C_On_Death) == 0x000008, "Wrong alignment on BP_Animal_Cow_Radioactive_C_On_Death");
static_assert(sizeof(BP_Animal_Cow_Radioactive_C_On_Death) == 0x000010, "Wrong size on BP_Animal_Cow_Radioactive_C_On_Death");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_On_Death, _pActor) == 0x000000, "Member 'BP_Animal_Cow_Radioactive_C_On_Death::_pActor' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_On_Death, _pStat) == 0x000008, "Member 'BP_Animal_Cow_Radioactive_C_On_Death::_pStat' has a wrong offset!");

// Function BP_Animal_Cow_Radioactive.BP_Animal_Cow_Radioactive_C.BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Animal_Cow_Radioactive_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0024(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Animal_Cow_Radioactive_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Animal_Cow_Radioactive_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(BP_Animal_Cow_Radioactive_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_Animal_Cow_Radioactive_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'BP_Animal_Cow_Radioactive_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Animal_Cow_Radioactive_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Animal_Cow_Radioactive_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'BP_Animal_Cow_Radioactive_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature, Hit) == 0x000024, "Member 'BP_Animal_Cow_Radioactive_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function BP_Animal_Cow_Radioactive.BP_Animal_Cow_Radioactive_C.HandleOnCapsuleHit
// 0x0138 (0x0138 - 0x0000)
struct BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComponent;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0010(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12A[0x2];                                      // 0x012A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ApplyAndReportDamage_ReturnValue;         // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionChannel                             CallFunc_GetCollisionObjectType_ReturnValue;       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit) == 0x000008, "Wrong alignment on BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit");
static_assert(sizeof(BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit) == 0x000138, "Wrong size on BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit, OtherActor) == 0x000000, "Member 'BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit, OtherComponent) == 0x000008, "Member 'BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit::OtherComponent' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit, Hit) == 0x000010, "Member 'BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit::Hit' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit, CallFunc_BreakHitResult_bBlockingHit) == 0x000098, "Member 'BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit, CallFunc_BreakHitResult_bInitialOverlap) == 0x000099, "Member 'BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit, CallFunc_BreakHitResult_Time) == 0x00009C, "Member 'BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit, CallFunc_BreakHitResult_Distance) == 0x0000A0, "Member 'BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit, CallFunc_BreakHitResult_Location) == 0x0000A4, "Member 'BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit, CallFunc_BreakHitResult_ImpactPoint) == 0x0000B0, "Member 'BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit, CallFunc_BreakHitResult_Normal) == 0x0000BC, "Member 'BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit, CallFunc_BreakHitResult_ImpactNormal) == 0x0000C8, "Member 'BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit, CallFunc_BreakHitResult_PhysMat) == 0x0000D8, "Member 'BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit, CallFunc_BreakHitResult_HitActor) == 0x0000E0, "Member 'BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit, CallFunc_BreakHitResult_HitComponent) == 0x0000E8, "Member 'BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit, CallFunc_BreakHitResult_HitBoneName) == 0x0000F0, "Member 'BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit, CallFunc_BreakHitResult_HitItem) == 0x0000F8, "Member 'BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit, CallFunc_BreakHitResult_FaceIndex) == 0x0000FC, "Member 'BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit, CallFunc_BreakHitResult_TraceStart) == 0x000100, "Member 'BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit, CallFunc_BreakHitResult_TraceEnd) == 0x00010C, "Member 'BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit, CallFunc_IsValid_ReturnValue) == 0x000118, "Member 'BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit, CallFunc_IsValid_ReturnValue1) == 0x000119, "Member 'BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit, CallFunc_GetController_ReturnValue) == 0x000120, "Member 'BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit, CallFunc_BooleanAND_ReturnValue) == 0x000128, "Member 'BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit, CallFunc_BooleanAND_ReturnValue1) == 0x000129, "Member 'BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit, CallFunc_ApplyAndReportDamage_ReturnValue) == 0x00012C, "Member 'BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit::CallFunc_ApplyAndReportDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit, CallFunc_GetCollisionObjectType_ReturnValue) == 0x000130, "Member 'BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit::CallFunc_GetCollisionObjectType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000131, "Member 'BP_Animal_Cow_Radioactive_C_HandleOnCapsuleHit::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

}

