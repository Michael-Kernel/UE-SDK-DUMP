#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ProjectileBullet

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "BFGCore_structs.hpp"


namespace SDK::Params
{

// Function BP_ProjectileBullet.BP_ProjectileBullet_C.SetBlackBoardVector
// 0x0020 (0x0020 - 0x0000)
struct BP_ProjectileBullet_C_SetBlackBoardVector final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Value;                                             // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGEffectBlackboard*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBullet_C_SetBlackBoardVector) == 0x000008, "Wrong alignment on BP_ProjectileBullet_C_SetBlackBoardVector");
static_assert(sizeof(BP_ProjectileBullet_C_SetBlackBoardVector) == 0x000020, "Wrong size on BP_ProjectileBullet_C_SetBlackBoardVector");
static_assert(offsetof(BP_ProjectileBullet_C_SetBlackBoardVector, Name_0) == 0x000000, "Member 'BP_ProjectileBullet_C_SetBlackBoardVector::Name_0' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBullet_C_SetBlackBoardVector, Value) == 0x000008, "Member 'BP_ProjectileBullet_C_SetBlackBoardVector::Value' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBullet_C_SetBlackBoardVector, CallFunc_GetBlackboard_ReturnValue) == 0x000018, "Member 'BP_ProjectileBullet_C_SetBlackBoardVector::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");

// Function BP_ProjectileBullet.BP_ProjectileBullet_C.SetBlackBoardName
// 0x0018 (0x0018 - 0x0000)
struct BP_ProjectileBullet_C_SetBlackBoardName final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Value;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBFGEffectBlackboard*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBullet_C_SetBlackBoardName) == 0x000008, "Wrong alignment on BP_ProjectileBullet_C_SetBlackBoardName");
static_assert(sizeof(BP_ProjectileBullet_C_SetBlackBoardName) == 0x000018, "Wrong size on BP_ProjectileBullet_C_SetBlackBoardName");
static_assert(offsetof(BP_ProjectileBullet_C_SetBlackBoardName, Name_0) == 0x000000, "Member 'BP_ProjectileBullet_C_SetBlackBoardName::Name_0' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBullet_C_SetBlackBoardName, Value) == 0x000008, "Member 'BP_ProjectileBullet_C_SetBlackBoardName::Value' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBullet_C_SetBlackBoardName, CallFunc_GetBlackboard_ReturnValue) == 0x000010, "Member 'BP_ProjectileBullet_C_SetBlackBoardName::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");

// Function BP_ProjectileBullet.BP_ProjectileBullet_C.SetBlackBoardDataTable
// 0x0018 (0x0018 - 0x0000)
struct BP_ProjectileBullet_C_SetBlackBoardDataTable final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Value;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBFGEffectBlackboard*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBullet_C_SetBlackBoardDataTable) == 0x000008, "Wrong alignment on BP_ProjectileBullet_C_SetBlackBoardDataTable");
static_assert(sizeof(BP_ProjectileBullet_C_SetBlackBoardDataTable) == 0x000018, "Wrong size on BP_ProjectileBullet_C_SetBlackBoardDataTable");
static_assert(offsetof(BP_ProjectileBullet_C_SetBlackBoardDataTable, Name_0) == 0x000000, "Member 'BP_ProjectileBullet_C_SetBlackBoardDataTable::Name_0' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBullet_C_SetBlackBoardDataTable, Value) == 0x000008, "Member 'BP_ProjectileBullet_C_SetBlackBoardDataTable::Value' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBullet_C_SetBlackBoardDataTable, CallFunc_GetBlackboard_ReturnValue) == 0x000010, "Member 'BP_ProjectileBullet_C_SetBlackBoardDataTable::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");

// Function BP_ProjectileBullet.BP_ProjectileBullet_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_ProjectileBullet_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBullet_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_ProjectileBullet_C_ReceiveTick");
static_assert(sizeof(BP_ProjectileBullet_C_ReceiveTick) == 0x000004, "Wrong size on BP_ProjectileBullet_C_ReceiveTick");
static_assert(offsetof(BP_ProjectileBullet_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_ProjectileBullet_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_ProjectileBullet.BP_ProjectileBullet_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_ProjectileBullet_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBullet_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_ProjectileBullet_C_ReceiveEndPlay");
static_assert(sizeof(BP_ProjectileBullet_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_ProjectileBullet_C_ReceiveEndPlay");
static_assert(offsetof(BP_ProjectileBullet_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_ProjectileBullet_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_ProjectileBullet.BP_ProjectileBullet_C.OnImpact
// 0x0030 (0x0030 - 0x0000)
struct BP_ProjectileBullet_C_OnImpact final
{
public:
	struct FVector                                _vLocation;                                        // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                _vDirection;                                       // 0x000C(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                _vNormal;                                          // 0x0018(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      _pMaterial;                                        // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBullet_C_OnImpact) == 0x000008, "Wrong alignment on BP_ProjectileBullet_C_OnImpact");
static_assert(sizeof(BP_ProjectileBullet_C_OnImpact) == 0x000030, "Wrong size on BP_ProjectileBullet_C_OnImpact");
static_assert(offsetof(BP_ProjectileBullet_C_OnImpact, _vLocation) == 0x000000, "Member 'BP_ProjectileBullet_C_OnImpact::_vLocation' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBullet_C_OnImpact, _vDirection) == 0x00000C, "Member 'BP_ProjectileBullet_C_OnImpact::_vDirection' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBullet_C_OnImpact, _vNormal) == 0x000018, "Member 'BP_ProjectileBullet_C_OnImpact::_vNormal' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBullet_C_OnImpact, _pMaterial) == 0x000028, "Member 'BP_ProjectileBullet_C_OnImpact::_pMaterial' has a wrong offset!");

// Function BP_ProjectileBullet.BP_ProjectileBullet_C.OnRetrieveFromPool
// 0x0001 (0x0001 - 0x0000)
struct BP_ProjectileBullet_C_OnRetrieveFromPool final
{
public:
	bool                                          _bAutomaticallyReactivateComponents;               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ProjectileBullet_C_OnRetrieveFromPool) == 0x000001, "Wrong alignment on BP_ProjectileBullet_C_OnRetrieveFromPool");
static_assert(sizeof(BP_ProjectileBullet_C_OnRetrieveFromPool) == 0x000001, "Wrong size on BP_ProjectileBullet_C_OnRetrieveFromPool");
static_assert(offsetof(BP_ProjectileBullet_C_OnRetrieveFromPool, _bAutomaticallyReactivateComponents) == 0x000000, "Member 'BP_ProjectileBullet_C_OnRetrieveFromPool::_bAutomaticallyReactivateComponents' has a wrong offset!");

// Function BP_ProjectileBullet.BP_ProjectileBullet_C.ExecuteUbergraph_BP_ProjectileBullet
// 0x0060 (0x0060 - 0x0000)
struct BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event__vLocation;                           // 0x0014(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event__vDirection;                          // 0x0020(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event__vNormal;                             // 0x002C(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      K2Node_Event__pMaterial;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPrimaryPlayerController_ReturnValue;   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBFGGameplayScaling                           CallFunc_GetCurrentGameplayScale_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event__bAutomaticallyReactivateComponents;  // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet) == 0x000008, "Wrong alignment on BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet");
static_assert(sizeof(BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet) == 0x000060, "Wrong size on BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet");
static_assert(offsetof(BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet, EntryPoint) == 0x000000, "Member 'BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet, K2Node_Event_EndPlayReason) == 0x000008, "Member 'BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet, CallFunc_GetDistanceTo_ReturnValue) == 0x00000C, "Member 'BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet, K2Node_Event__vLocation) == 0x000014, "Member 'BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet::K2Node_Event__vLocation' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet, K2Node_Event__vDirection) == 0x000020, "Member 'BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet::K2Node_Event__vDirection' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet, K2Node_Event__vNormal) == 0x00002C, "Member 'BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet::K2Node_Event__vNormal' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet, K2Node_Event__pMaterial) == 0x000038, "Member 'BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet::K2Node_Event__pMaterial' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet, Temp_bool_Has_Been_Initd_Variable) == 0x000040, "Member 'BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet, CallFunc_GetPrimaryPlayerController_ReturnValue) == 0x000048, "Member 'BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet::CallFunc_GetPrimaryPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet, CallFunc_K2_GetPawn_ReturnValue) == 0x000050, "Member 'BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet, CallFunc_GetCurrentGameplayScale_ReturnValue) == 0x000058, "Member 'BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet::CallFunc_GetCurrentGameplayScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet, K2Node_SwitchEnum_CmpSuccess) == 0x000059, "Member 'BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet, Temp_bool_IsClosed_Variable) == 0x00005A, "Member 'BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet, K2Node_Event__bAutomaticallyReactivateComponents) == 0x00005B, "Member 'BP_ProjectileBullet_C_ExecuteUbergraph_BP_ProjectileBullet::K2Node_Event__bAutomaticallyReactivateComponents' has a wrong offset!");

}

