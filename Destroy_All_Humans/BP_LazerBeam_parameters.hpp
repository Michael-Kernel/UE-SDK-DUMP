#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LazerBeam

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_LazerBeam.BP_LazerBeam_C.HandleVectorChanged
// 0x0014 (0x0014 - 0x0000)
struct BP_LazerBeam_C_HandleVectorChanged final
{
public:
	class FName                                   _rName;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                _rValue;                                           // 0x0008(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LazerBeam_C_HandleVectorChanged) == 0x000004, "Wrong alignment on BP_LazerBeam_C_HandleVectorChanged");
static_assert(sizeof(BP_LazerBeam_C_HandleVectorChanged) == 0x000014, "Wrong size on BP_LazerBeam_C_HandleVectorChanged");
static_assert(offsetof(BP_LazerBeam_C_HandleVectorChanged, _rName) == 0x000000, "Member 'BP_LazerBeam_C_HandleVectorChanged::_rName' has a wrong offset!");
static_assert(offsetof(BP_LazerBeam_C_HandleVectorChanged, _rValue) == 0x000008, "Member 'BP_LazerBeam_C_HandleVectorChanged::_rValue' has a wrong offset!");

// Function BP_LazerBeam.BP_LazerBeam_C.ExecuteUbergraph_BP_LazerBeam
// 0x001C (0x001C - 0x0000)
struct BP_LazerBeam_C_ExecuteUbergraph_BP_LazerBeam final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event__rName;                               // 0x0004(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event__rValue;                              // 0x000C(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue1;         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue2;         // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LazerBeam_C_ExecuteUbergraph_BP_LazerBeam) == 0x000004, "Wrong alignment on BP_LazerBeam_C_ExecuteUbergraph_BP_LazerBeam");
static_assert(sizeof(BP_LazerBeam_C_ExecuteUbergraph_BP_LazerBeam) == 0x00001C, "Wrong size on BP_LazerBeam_C_ExecuteUbergraph_BP_LazerBeam");
static_assert(offsetof(BP_LazerBeam_C_ExecuteUbergraph_BP_LazerBeam, EntryPoint) == 0x000000, "Member 'BP_LazerBeam_C_ExecuteUbergraph_BP_LazerBeam::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LazerBeam_C_ExecuteUbergraph_BP_LazerBeam, K2Node_Event__rName) == 0x000004, "Member 'BP_LazerBeam_C_ExecuteUbergraph_BP_LazerBeam::K2Node_Event__rName' has a wrong offset!");
static_assert(offsetof(BP_LazerBeam_C_ExecuteUbergraph_BP_LazerBeam, K2Node_Event__rValue) == 0x00000C, "Member 'BP_LazerBeam_C_ExecuteUbergraph_BP_LazerBeam::K2Node_Event__rValue' has a wrong offset!");
static_assert(offsetof(BP_LazerBeam_C_ExecuteUbergraph_BP_LazerBeam, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000018, "Member 'BP_LazerBeam_C_ExecuteUbergraph_BP_LazerBeam::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LazerBeam_C_ExecuteUbergraph_BP_LazerBeam, CallFunc_EqualEqual_NameName_ReturnValue1) == 0x000019, "Member 'BP_LazerBeam_C_ExecuteUbergraph_BP_LazerBeam::CallFunc_EqualEqual_NameName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_LazerBeam_C_ExecuteUbergraph_BP_LazerBeam, CallFunc_EqualEqual_NameName_ReturnValue2) == 0x00001A, "Member 'BP_LazerBeam_C_ExecuteUbergraph_BP_LazerBeam::CallFunc_EqualEqual_NameName_ReturnValue2' has a wrong offset!");

}

