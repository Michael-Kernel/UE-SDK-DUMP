#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UFO_Aperture_Beam

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_UFO_Aperture_Beam.BP_UFO_Aperture_Beam_C.UserConstructionScript
// 0x0020 (0x0020 - 0x0000)
struct BP_UFO_Aperture_Beam_C_UserConstructionScript final
{
public:
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue1;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue2;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue1; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UFO_Aperture_Beam_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_UFO_Aperture_Beam_C_UserConstructionScript");
static_assert(sizeof(BP_UFO_Aperture_Beam_C_UserConstructionScript) == 0x000020, "Wrong size on BP_UFO_Aperture_Beam_C_UserConstructionScript");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_UserConstructionScript, CallFunc_Lerp_ReturnValue) == 0x000000, "Member 'BP_UFO_Aperture_Beam_C_UserConstructionScript::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_UserConstructionScript, CallFunc_Lerp_ReturnValue1) == 0x000004, "Member 'BP_UFO_Aperture_Beam_C_UserConstructionScript::CallFunc_Lerp_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_UserConstructionScript, CallFunc_Lerp_ReturnValue2) == 0x000008, "Member 'BP_UFO_Aperture_Beam_C_UserConstructionScript::CallFunc_Lerp_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'BP_UFO_Aperture_Beam_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue1) == 0x000018, "Member 'BP_UFO_Aperture_Beam_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue1' has a wrong offset!");

// Function BP_UFO_Aperture_Beam.BP_UFO_Aperture_Beam_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_UFO_Aperture_Beam_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UFO_Aperture_Beam_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_UFO_Aperture_Beam_C_ReceiveTick");
static_assert(sizeof(BP_UFO_Aperture_Beam_C_ReceiveTick) == 0x000004, "Wrong size on BP_UFO_Aperture_Beam_C_ReceiveTick");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_UFO_Aperture_Beam_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_UFO_Aperture_Beam.BP_UFO_Aperture_Beam_C.ExecuteUbergraph_BP_UFO_Aperture_Beam
// 0x0098 (0x0098 - 0x0000)
struct BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue1; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue1;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue2;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable1;                      // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable1;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FInterpTo_Constant_ReturnValue;           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_Constant_ReturnValue1;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue3;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue4;                        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue5;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable2;                      // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable2;                // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue4;         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue5;         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue6;         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue7;         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue8;         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue9;         // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue10;        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue11;        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam) == 0x000008, "Wrong alignment on BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam");
static_assert(sizeof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam) == 0x000098, "Wrong size on BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, EntryPoint) == 0x000000, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, Temp_bool_IsClosed_Variable) == 0x000008, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, CallFunc_CreateDynamicMaterialInstance_ReturnValue1) == 0x000018, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::CallFunc_CreateDynamicMaterialInstance_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000028, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, CallFunc_Lerp_ReturnValue) == 0x00002C, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, CallFunc_MakeVector_ReturnValue) == 0x000030, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, CallFunc_Lerp_ReturnValue1) == 0x00003C, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::CallFunc_Lerp_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, CallFunc_Lerp_ReturnValue2) == 0x000040, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::CallFunc_Lerp_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, Temp_bool_Has_Been_Initd_Variable) == 0x000044, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, Temp_bool_IsClosed_Variable1) == 0x000045, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::Temp_bool_IsClosed_Variable1' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000046, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000047, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, Temp_bool_Has_Been_Initd_Variable1) == 0x000048, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::Temp_bool_Has_Been_Initd_Variable1' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, CallFunc_FInterpTo_Constant_ReturnValue) == 0x00004C, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, CallFunc_FInterpTo_Constant_ReturnValue1) == 0x000050, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::CallFunc_FInterpTo_Constant_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000054, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x000058, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, CallFunc_Lerp_ReturnValue3) == 0x00005C, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::CallFunc_Lerp_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, CallFunc_MakeVector_ReturnValue1) == 0x000060, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, CallFunc_Lerp_ReturnValue4) == 0x00006C, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::CallFunc_Lerp_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, CallFunc_Lerp_ReturnValue5) == 0x000070, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::CallFunc_Lerp_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, Temp_bool_IsClosed_Variable2) == 0x000074, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::Temp_bool_IsClosed_Variable2' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, Temp_bool_Has_Been_Initd_Variable2) == 0x000075, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::Temp_bool_Has_Been_Initd_Variable2' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, CallFunc_Multiply_FloatFloat_ReturnValue4) == 0x000078, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::CallFunc_Multiply_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, CallFunc_Multiply_FloatFloat_ReturnValue5) == 0x00007C, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::CallFunc_Multiply_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, CallFunc_Multiply_FloatFloat_ReturnValue6) == 0x000080, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::CallFunc_Multiply_FloatFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, CallFunc_Multiply_FloatFloat_ReturnValue7) == 0x000084, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::CallFunc_Multiply_FloatFloat_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, CallFunc_Multiply_FloatFloat_ReturnValue8) == 0x000088, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::CallFunc_Multiply_FloatFloat_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, CallFunc_Multiply_FloatFloat_ReturnValue9) == 0x00008C, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::CallFunc_Multiply_FloatFloat_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, CallFunc_Multiply_FloatFloat_ReturnValue10) == 0x000090, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::CallFunc_Multiply_FloatFloat_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam, CallFunc_Multiply_FloatFloat_ReturnValue11) == 0x000094, "Member 'BP_UFO_Aperture_Beam_C_ExecuteUbergraph_BP_UFO_Aperture_Beam::CallFunc_Multiply_FloatFloat_ReturnValue11' has a wrong offset!");

}

