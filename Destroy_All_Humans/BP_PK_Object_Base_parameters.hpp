#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PK_Object_Base

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "BFGCore_structs.hpp"


namespace SDK::Params
{

// Function BP_PK_Object_Base.BP_PK_Object_Base_C.ExecuteUbergraph_BP_PK_Object_Base
// 0x0148 (0x0148 - 0x0000)
struct BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABFGGameState*                          K2Node_DynamicCast_AsBFGGame_State;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGBurningGroundManager*               CallFunc_GetBurningGroundManager_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABFGBurningGround*                      CallFunc_GetBurningGroundActor_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BurningGround_C*                    K2Node_DynamicCast_AsBP_Burning_Ground;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0080(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_113[0x1];                                      // 0x0113(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxElement_ReturnValue;                // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base) == 0x000008, "Wrong alignment on BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base");
static_assert(sizeof(BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base) == 0x000148, "Wrong size on BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base");
static_assert(offsetof(BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base, EntryPoint) == 0x000000, "Member 'BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base, K2Node_DynamicCast_AsBFGGame_State) == 0x000010, "Member 'BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base::K2Node_DynamicCast_AsBFGGame_State' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base, CallFunc_GetBurningGroundManager_ReturnValue) == 0x000020, "Member 'BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base::CallFunc_GetBurningGroundManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base, CallFunc_GetBurningGroundActor_ReturnValue) == 0x000028, "Member 'BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base::CallFunc_GetBurningGroundActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base, K2Node_DynamicCast_AsBP_Burning_Ground) == 0x000030, "Member 'BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base::K2Node_DynamicCast_AsBP_Burning_Ground' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base, K2Node_DynamicCast_bSuccess1) == 0x000038, "Member 'BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base, K2Node_Event_MyComp) == 0x000040, "Member 'BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base, K2Node_Event_Other) == 0x000048, "Member 'BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base, K2Node_Event_OtherComp) == 0x000050, "Member 'BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base, K2Node_Event_bSelfMoved) == 0x000058, "Member 'BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base, K2Node_Event_HitLocation) == 0x00005C, "Member 'BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base, K2Node_Event_HitNormal) == 0x000068, "Member 'BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base, K2Node_Event_NormalImpulse) == 0x000074, "Member 'BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base, K2Node_Event_Hit) == 0x000080, "Member 'BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base, CallFunc_IsValid_ReturnValue) == 0x000108, "Member 'BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base, K2Node_Event_DeltaSeconds) == 0x00010C, "Member 'BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base, CallFunc_Not_PreBool_ReturnValue) == 0x000110, "Member 'BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base, CallFunc_BooleanAND_ReturnValue) == 0x000111, "Member 'BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base, CallFunc_IsValid_ReturnValue1) == 0x000112, "Member 'BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000114, "Member 'BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base, CallFunc_GetActorBounds_Origin) == 0x000120, "Member 'BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base, CallFunc_GetActorBounds_BoxExtent) == 0x00012C, "Member 'BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base, CallFunc_GetMaxElement_ReturnValue) == 0x000138, "Member 'BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base::CallFunc_GetMaxElement_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00013C, "Member 'BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base, CallFunc_IsValid_ReturnValue2) == 0x000140, "Member 'BP_PK_Object_Base_C_ExecuteUbergraph_BP_PK_Object_Base::CallFunc_IsValid_ReturnValue2' has a wrong offset!");

// Function BP_PK_Object_Base.BP_PK_Object_Base_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_PK_Object_Base_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PK_Object_Base_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_PK_Object_Base_C_ReceiveTick");
static_assert(sizeof(BP_PK_Object_Base_C_ReceiveTick) == 0x000004, "Wrong size on BP_PK_Object_Base_C_ReceiveTick");
static_assert(offsetof(BP_PK_Object_Base_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_PK_Object_Base_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_PK_Object_Base.BP_PK_Object_Base_C.ReceiveHit
// 0x00C8 (0x00C8 - 0x0000)
struct BP_PK_Object_Base_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0040(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_PK_Object_Base_C_ReceiveHit) == 0x000008, "Wrong alignment on BP_PK_Object_Base_C_ReceiveHit");
static_assert(sizeof(BP_PK_Object_Base_C_ReceiveHit) == 0x0000C8, "Wrong size on BP_PK_Object_Base_C_ReceiveHit");
static_assert(offsetof(BP_PK_Object_Base_C_ReceiveHit, MyComp) == 0x000000, "Member 'BP_PK_Object_Base_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_ReceiveHit, Other) == 0x000008, "Member 'BP_PK_Object_Base_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_ReceiveHit, OtherComp) == 0x000010, "Member 'BP_PK_Object_Base_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'BP_PK_Object_Base_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_ReceiveHit, HitLocation) == 0x00001C, "Member 'BP_PK_Object_Base_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_ReceiveHit, HitNormal) == 0x000028, "Member 'BP_PK_Object_Base_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_ReceiveHit, NormalImpulse) == 0x000034, "Member 'BP_PK_Object_Base_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_ReceiveHit, Hit) == 0x000040, "Member 'BP_PK_Object_Base_C_ReceiveHit::Hit' has a wrong offset!");

// Function BP_PK_Object_Base.BP_PK_Object_Base_C.SetOnFireInternal
// 0x0100 (0x0100 - 0x0000)
struct BP_PK_Object_Base_C_SetOnFireInternal final
{
public:
	class UBFGDataAsset_StaticMeshBurning*        LocalBurning;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBFGBuildingMaterialVariation          CallFunc_Array_Get_Item;                           // 0x0010(0x0010)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBFGDataAsset_StaticMeshBurning*        CallFunc_GetStaticMeshBurningDataAsset_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABFGGameState*                          K2Node_DynamicCast_AsBFGGame_State;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGDynamicStaticObjectManager*         CallFunc_GetDynamicStaticObjectManager_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Temp_struct_Variable;                              // 0x0050(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_AddComponent_ReturnValue;                 // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue;                    // 0x0098(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable1;                             // 0x00C0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UPointLightComponent*                   CallFunc_AddComponent_ReturnValue1;                // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PK_Object_Base_C_SetOnFireInternal) == 0x000010, "Wrong alignment on BP_PK_Object_Base_C_SetOnFireInternal");
static_assert(sizeof(BP_PK_Object_Base_C_SetOnFireInternal) == 0x000100, "Wrong size on BP_PK_Object_Base_C_SetOnFireInternal");
static_assert(offsetof(BP_PK_Object_Base_C_SetOnFireInternal, LocalBurning) == 0x000000, "Member 'BP_PK_Object_Base_C_SetOnFireInternal::LocalBurning' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_SetOnFireInternal, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_PK_Object_Base_C_SetOnFireInternal::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_SetOnFireInternal, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_PK_Object_Base_C_SetOnFireInternal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_SetOnFireInternal, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_PK_Object_Base_C_SetOnFireInternal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_SetOnFireInternal, CallFunc_IsValid_ReturnValue1) == 0x000020, "Member 'BP_PK_Object_Base_C_SetOnFireInternal::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_SetOnFireInternal, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_PK_Object_Base_C_SetOnFireInternal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_SetOnFireInternal, CallFunc_GetStaticMeshBurningDataAsset_ReturnValue) == 0x000028, "Member 'BP_PK_Object_Base_C_SetOnFireInternal::CallFunc_GetStaticMeshBurningDataAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_SetOnFireInternal, CallFunc_GetGameState_ReturnValue) == 0x000030, "Member 'BP_PK_Object_Base_C_SetOnFireInternal::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_SetOnFireInternal, K2Node_DynamicCast_AsBFGGame_State) == 0x000038, "Member 'BP_PK_Object_Base_C_SetOnFireInternal::K2Node_DynamicCast_AsBFGGame_State' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_SetOnFireInternal, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_PK_Object_Base_C_SetOnFireInternal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_SetOnFireInternal, CallFunc_GetDynamicStaticObjectManager_ReturnValue) == 0x000048, "Member 'BP_PK_Object_Base_C_SetOnFireInternal::CallFunc_GetDynamicStaticObjectManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_SetOnFireInternal, Temp_struct_Variable) == 0x000050, "Member 'BP_PK_Object_Base_C_SetOnFireInternal::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_SetOnFireInternal, Temp_int_Loop_Counter_Variable) == 0x000080, "Member 'BP_PK_Object_Base_C_SetOnFireInternal::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_SetOnFireInternal, CallFunc_AddComponent_ReturnValue) == 0x000088, "Member 'BP_PK_Object_Base_C_SetOnFireInternal::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_SetOnFireInternal, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'BP_PK_Object_Base_C_SetOnFireInternal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_SetOnFireInternal, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'BP_PK_Object_Base_C_SetOnFireInternal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_SetOnFireInternal, CallFunc_GetBounds_ReturnValue) == 0x000098, "Member 'BP_PK_Object_Base_C_SetOnFireInternal::CallFunc_GetBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_SetOnFireInternal, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000B4, "Member 'BP_PK_Object_Base_C_SetOnFireInternal::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_SetOnFireInternal, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0000B8, "Member 'BP_PK_Object_Base_C_SetOnFireInternal::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_SetOnFireInternal, Temp_struct_Variable1) == 0x0000C0, "Member 'BP_PK_Object_Base_C_SetOnFireInternal::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_SetOnFireInternal, CallFunc_AddComponent_ReturnValue1) == 0x0000F0, "Member 'BP_PK_Object_Base_C_SetOnFireInternal::CallFunc_AddComponent_ReturnValue1' has a wrong offset!");

// Function BP_PK_Object_Base.BP_PK_Object_Base_C.ExtinguishFire
// 0x0001 (0x0001 - 0x0000)
struct BP_PK_Object_Base_C_ExtinguishFire final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PK_Object_Base_C_ExtinguishFire) == 0x000001, "Wrong alignment on BP_PK_Object_Base_C_ExtinguishFire");
static_assert(sizeof(BP_PK_Object_Base_C_ExtinguishFire) == 0x000001, "Wrong size on BP_PK_Object_Base_C_ExtinguishFire");
static_assert(offsetof(BP_PK_Object_Base_C_ExtinguishFire, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PK_Object_Base_C_ExtinguishFire::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PK_Object_Base.BP_PK_Object_Base_C.BurnDown
// 0x0108 (0x0108 - 0x0000)
struct BP_PK_Object_Base_C_BurnDown final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue1;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABFGGameState*                          K2Node_DynamicCast_AsBFGGame_State;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGDynamicStaticObjectManager*         CallFunc_GetDynamicStaticObjectManager_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue;                    // 0x0034(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddWorldOffset_SweepHitResult;         // 0x006C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue4;         // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PK_Object_Base_C_BurnDown) == 0x000008, "Wrong alignment on BP_PK_Object_Base_C_BurnDown");
static_assert(sizeof(BP_PK_Object_Base_C_BurnDown) == 0x000108, "Wrong size on BP_PK_Object_Base_C_BurnDown");
static_assert(offsetof(BP_PK_Object_Base_C_BurnDown, DeltaTime) == 0x000000, "Member 'BP_PK_Object_Base_C_BurnDown::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_BurnDown, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_PK_Object_Base_C_BurnDown::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_BurnDown, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'BP_PK_Object_Base_C_BurnDown::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_BurnDown, CallFunc_LessEqual_FloatFloat_ReturnValue1) == 0x000010, "Member 'BP_PK_Object_Base_C_BurnDown::CallFunc_LessEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_BurnDown, K2Node_DynamicCast_AsBFGGame_State) == 0x000018, "Member 'BP_PK_Object_Base_C_BurnDown::K2Node_DynamicCast_AsBFGGame_State' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_BurnDown, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PK_Object_Base_C_BurnDown::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_BurnDown, CallFunc_GetDynamicStaticObjectManager_ReturnValue) == 0x000028, "Member 'BP_PK_Object_Base_C_BurnDown::CallFunc_GetDynamicStaticObjectManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_BurnDown, CallFunc_Less_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_PK_Object_Base_C_BurnDown::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_BurnDown, CallFunc_GetBounds_ReturnValue) == 0x000034, "Member 'BP_PK_Object_Base_C_BurnDown::CallFunc_GetBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_BurnDown, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_PK_Object_Base_C_BurnDown::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_BurnDown, CallFunc_FClamp_ReturnValue) == 0x000054, "Member 'BP_PK_Object_Base_C_BurnDown::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_BurnDown, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000058, "Member 'BP_PK_Object_Base_C_BurnDown::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_BurnDown, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x00005C, "Member 'BP_PK_Object_Base_C_BurnDown::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_BurnDown, CallFunc_MakeVector_ReturnValue) == 0x000060, "Member 'BP_PK_Object_Base_C_BurnDown::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_BurnDown, CallFunc_K2_AddWorldOffset_SweepHitResult) == 0x00006C, "Member 'BP_PK_Object_Base_C_BurnDown::CallFunc_K2_AddWorldOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_BurnDown, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x0000F4, "Member 'BP_PK_Object_Base_C_BurnDown::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_BurnDown, CallFunc_Multiply_FloatFloat_ReturnValue4) == 0x0000F8, "Member 'BP_PK_Object_Base_C_BurnDown::CallFunc_Multiply_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_BurnDown, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000FC, "Member 'BP_PK_Object_Base_C_BurnDown::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_BurnDown, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000100, "Member 'BP_PK_Object_Base_C_BurnDown::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_BurnDown, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x000104, "Member 'BP_PK_Object_Base_C_BurnDown::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");

// Function BP_PK_Object_Base.BP_PK_Object_Base_C.InitBuoyancy
// 0x0080 (0x0080 - 0x0000)
struct BP_PK_Object_Base_C_InitBuoyancy final
{
public:
	TArray<struct FVector>                        SplinePoints;                                      // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	struct FTransform                             PreResetTransform;                                 // 0x0010(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetSimulatingComponent_ReturnValue;       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PK_Object_Base_C_InitBuoyancy) == 0x000010, "Wrong alignment on BP_PK_Object_Base_C_InitBuoyancy");
static_assert(sizeof(BP_PK_Object_Base_C_InitBuoyancy) == 0x000080, "Wrong size on BP_PK_Object_Base_C_InitBuoyancy");
static_assert(offsetof(BP_PK_Object_Base_C_InitBuoyancy, SplinePoints) == 0x000000, "Member 'BP_PK_Object_Base_C_InitBuoyancy::SplinePoints' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_InitBuoyancy, PreResetTransform) == 0x000010, "Member 'BP_PK_Object_Base_C_InitBuoyancy::PreResetTransform' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_InitBuoyancy, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_PK_Object_Base_C_InitBuoyancy::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_InitBuoyancy, CallFunc_GetSimulatingComponent_ReturnValue) == 0x000048, "Member 'BP_PK_Object_Base_C_InitBuoyancy::CallFunc_GetSimulatingComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_InitBuoyancy, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_PK_Object_Base_C_InitBuoyancy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_InitBuoyancy, CallFunc_GetComponentVelocity_ReturnValue) == 0x000054, "Member 'BP_PK_Object_Base_C_InitBuoyancy::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_InitBuoyancy, CallFunc_VSize_ReturnValue) == 0x000060, "Member 'BP_PK_Object_Base_C_InitBuoyancy::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_InitBuoyancy, CallFunc_Normal_ReturnValue) == 0x000064, "Member 'BP_PK_Object_Base_C_InitBuoyancy::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_InitBuoyancy, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000070, "Member 'BP_PK_Object_Base_C_InitBuoyancy::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PK_Object_Base_C_InitBuoyancy, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x000074, "Member 'BP_PK_Object_Base_C_InitBuoyancy::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");

}

