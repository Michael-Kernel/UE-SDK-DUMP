#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GenericGraphRuntime

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// Class GenericGraphRuntime.GenericGraphNode
// 0x0088 (0x00B0 - 0x0028)
class UGenericGraphNode : public UObject
{
public:
	class UGenericGraph*                          Graph;                                             // 0x0028(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UGenericGraphNode*>              ParentNodes;                                       // 0x0030(0x0010)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UGenericGraphNode*>              ChildrenNodes;                                     // 0x0040(0x0010)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TMap<class UGenericGraphNode*, class UGenericGraphEdge*> Edges;                                             // 0x0050(0x0050)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGuid                                  M_guid;                                            // 0x00A0(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	class UGenericGraphEdge* GetEdge(class UGenericGraphNode* ChildNode);

	class FText GetDescription() const;
	class UGenericGraph* GetGraph() const;
	bool IsLeafNode() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GenericGraphNode">();
	}
	static class UGenericGraphNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGenericGraphNode>();
	}
};
static_assert(alignof(UGenericGraphNode) == 0x000008, "Wrong alignment on UGenericGraphNode");
static_assert(sizeof(UGenericGraphNode) == 0x0000B0, "Wrong size on UGenericGraphNode");
static_assert(offsetof(UGenericGraphNode, Graph) == 0x000028, "Member 'UGenericGraphNode::Graph' has a wrong offset!");
static_assert(offsetof(UGenericGraphNode, ParentNodes) == 0x000030, "Member 'UGenericGraphNode::ParentNodes' has a wrong offset!");
static_assert(offsetof(UGenericGraphNode, ChildrenNodes) == 0x000040, "Member 'UGenericGraphNode::ChildrenNodes' has a wrong offset!");
static_assert(offsetof(UGenericGraphNode, Edges) == 0x000050, "Member 'UGenericGraphNode::Edges' has a wrong offset!");
static_assert(offsetof(UGenericGraphNode, M_guid) == 0x0000A0, "Member 'UGenericGraphNode::M_guid' has a wrong offset!");

// Class GenericGraphRuntime.BFGGenericGraphOwner
// 0x0008 (0x0030 - 0x0028)
class UBFGGenericGraphOwner : public UObject
{
public:
	class UGenericGraph*                          M_pGraphInstance;                                  // 0x0028(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BFGGenericGraphOwner">();
	}
	static class UBFGGenericGraphOwner* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBFGGenericGraphOwner>();
	}
};
static_assert(alignof(UBFGGenericGraphOwner) == 0x000008, "Wrong alignment on UBFGGenericGraphOwner");
static_assert(sizeof(UBFGGenericGraphOwner) == 0x000030, "Wrong size on UBFGGenericGraphOwner");
static_assert(offsetof(UBFGGenericGraphOwner, M_pGraphInstance) == 0x000028, "Member 'UBFGGenericGraphOwner::M_pGraphInstance' has a wrong offset!");

// Class GenericGraphRuntime.EdNode_GenericGraphNodeInterface
// 0x0000 (0x0098 - 0x0098)
class UEdNode_GenericGraphNodeInterface final : public UEdGraphNode
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EdNode_GenericGraphNodeInterface">();
	}
	static class UEdNode_GenericGraphNodeInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEdNode_GenericGraphNodeInterface>();
	}
};
static_assert(alignof(UEdNode_GenericGraphNodeInterface) == 0x000008, "Wrong alignment on UEdNode_GenericGraphNodeInterface");
static_assert(sizeof(UEdNode_GenericGraphNodeInterface) == 0x000098, "Wrong size on UEdNode_GenericGraphNodeInterface");

// Class GenericGraphRuntime.EdNode_GenericGraphEdgeInterface
// 0x0000 (0x0098 - 0x0098)
class UEdNode_GenericGraphEdgeInterface final : public UEdGraphNode
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EdNode_GenericGraphEdgeInterface">();
	}
	static class UEdNode_GenericGraphEdgeInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEdNode_GenericGraphEdgeInterface>();
	}
};
static_assert(alignof(UEdNode_GenericGraphEdgeInterface) == 0x000008, "Wrong alignment on UEdNode_GenericGraphEdgeInterface");
static_assert(sizeof(UEdNode_GenericGraphEdgeInterface) == 0x000098, "Wrong size on UEdNode_GenericGraphEdgeInterface");

// Class GenericGraphRuntime.EdGraph_GenericGraphInterface
// 0x0000 (0x0068 - 0x0068)
class UEdGraph_GenericGraphInterface final : public UEdGraph
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EdGraph_GenericGraphInterface">();
	}
	static class UEdGraph_GenericGraphInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEdGraph_GenericGraphInterface>();
	}
};
static_assert(alignof(UEdGraph_GenericGraphInterface) == 0x000008, "Wrong alignment on UEdGraph_GenericGraphInterface");
static_assert(sizeof(UEdGraph_GenericGraphInterface) == 0x000068, "Wrong size on UEdGraph_GenericGraphInterface");

// Class GenericGraphRuntime.GenericGraph
// 0x0070 (0x0098 - 0x0028)
class UGenericGraph : public UObject
{
public:
	class FString                                 Name_0;                                            // 0x0028(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGenericGraphNode>          NodeType;                                          // 0x0038(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGenericGraphEdge>          EdgeType;                                          // 0x0040(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGenericGraphNode>          RootNodeType;                                      // 0x0048(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  GraphTags;                                         // 0x0050(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UGenericGraphNode*>              RootNodes;                                         // 0x0070(0x0010)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UGenericGraphNode*>              AllNodes;                                          // 0x0080(0x0010)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          bEdgeEnabled;                                      // 0x0090(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void GetNodesByLevel(int32 Level, TArray<class UGenericGraphNode*>* Nodes);
	void Print(bool ToConsole, bool ToScreen);

	int32 GetLevelNum() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GenericGraph">();
	}
	static class UGenericGraph* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGenericGraph>();
	}
};
static_assert(alignof(UGenericGraph) == 0x000008, "Wrong alignment on UGenericGraph");
static_assert(sizeof(UGenericGraph) == 0x000098, "Wrong size on UGenericGraph");
static_assert(offsetof(UGenericGraph, Name_0) == 0x000028, "Member 'UGenericGraph::Name_0' has a wrong offset!");
static_assert(offsetof(UGenericGraph, NodeType) == 0x000038, "Member 'UGenericGraph::NodeType' has a wrong offset!");
static_assert(offsetof(UGenericGraph, EdgeType) == 0x000040, "Member 'UGenericGraph::EdgeType' has a wrong offset!");
static_assert(offsetof(UGenericGraph, RootNodeType) == 0x000048, "Member 'UGenericGraph::RootNodeType' has a wrong offset!");
static_assert(offsetof(UGenericGraph, GraphTags) == 0x000050, "Member 'UGenericGraph::GraphTags' has a wrong offset!");
static_assert(offsetof(UGenericGraph, RootNodes) == 0x000070, "Member 'UGenericGraph::RootNodes' has a wrong offset!");
static_assert(offsetof(UGenericGraph, AllNodes) == 0x000080, "Member 'UGenericGraph::AllNodes' has a wrong offset!");
static_assert(offsetof(UGenericGraph, bEdgeEnabled) == 0x000090, "Member 'UGenericGraph::bEdgeEnabled' has a wrong offset!");

// Class GenericGraphRuntime.GenericGraphEdge
// 0x0018 (0x0040 - 0x0028)
class UGenericGraphEdge : public UObject
{
public:
	class UGenericGraph*                          Graph;                                             // 0x0028(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGenericGraphNode*                      StartNode;                                         // 0x0030(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGenericGraphNode*                      EndNode;                                           // 0x0038(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	class UGenericGraph* GetGraph() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GenericGraphEdge">();
	}
	static class UGenericGraphEdge* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGenericGraphEdge>();
	}
};
static_assert(alignof(UGenericGraphEdge) == 0x000008, "Wrong alignment on UGenericGraphEdge");
static_assert(sizeof(UGenericGraphEdge) == 0x000040, "Wrong size on UGenericGraphEdge");
static_assert(offsetof(UGenericGraphEdge, Graph) == 0x000028, "Member 'UGenericGraphEdge::Graph' has a wrong offset!");
static_assert(offsetof(UGenericGraphEdge, StartNode) == 0x000030, "Member 'UGenericGraphEdge::StartNode' has a wrong offset!");
static_assert(offsetof(UGenericGraphEdge, EndNode) == 0x000038, "Member 'UGenericGraphEdge::EndNode' has a wrong offset!");

}

