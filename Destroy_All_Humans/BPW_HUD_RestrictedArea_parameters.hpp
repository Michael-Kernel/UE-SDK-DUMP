#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPW_HUD_RestrictedArea

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BPW_HUD_RestrictedArea.BPW_HUD_RestrictedArea_C.IsInBossFight
// 0x0038 (0x0038 - 0x0000)
struct BPW_HUD_RestrictedArea_C_IsInBossFight final
{
public:
	bool                                          IsInBossFight_0;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABFGGameState*                          K2Node_DynamicCast_AsBFGGame_State;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGBossHealthHUDManager*               CallFunc_GetBossHealthHUDManager_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABFGNPCCharacterBoss*                   CallFunc_GetCurrentBossChracter_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPW_HUD_RestrictedArea_C_IsInBossFight) == 0x000008, "Wrong alignment on BPW_HUD_RestrictedArea_C_IsInBossFight");
static_assert(sizeof(BPW_HUD_RestrictedArea_C_IsInBossFight) == 0x000038, "Wrong size on BPW_HUD_RestrictedArea_C_IsInBossFight");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_IsInBossFight, IsInBossFight_0) == 0x000000, "Member 'BPW_HUD_RestrictedArea_C_IsInBossFight::IsInBossFight_0' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_IsInBossFight, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'BPW_HUD_RestrictedArea_C_IsInBossFight::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_IsInBossFight, K2Node_DynamicCast_AsBFGGame_State) == 0x000010, "Member 'BPW_HUD_RestrictedArea_C_IsInBossFight::K2Node_DynamicCast_AsBFGGame_State' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_IsInBossFight, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BPW_HUD_RestrictedArea_C_IsInBossFight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_IsInBossFight, CallFunc_GetBossHealthHUDManager_ReturnValue) == 0x000020, "Member 'BPW_HUD_RestrictedArea_C_IsInBossFight::CallFunc_GetBossHealthHUDManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_IsInBossFight, CallFunc_GetCurrentBossChracter_ReturnValue) == 0x000028, "Member 'BPW_HUD_RestrictedArea_C_IsInBossFight::CallFunc_GetCurrentBossChracter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_IsInBossFight, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BPW_HUD_RestrictedArea_C_IsInBossFight::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPW_HUD_RestrictedArea.BPW_HUD_RestrictedArea_C.UpdateLook
// 0x0040 (0x0040 - 0x0000)
struct BPW_HUD_RestrictedArea_C_UpdateLook final
{
public:
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABFGPlayerCharacter*                    K2Node_DynamicCast_AsBFGPlayer_Character;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABFGRestrictedArea*>             CallFunc_GetRestrictedAreaViolated_ReturnValue;    // 0x0028(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPW_HUD_RestrictedArea_C_UpdateLook) == 0x000008, "Wrong alignment on BPW_HUD_RestrictedArea_C_UpdateLook");
static_assert(sizeof(BPW_HUD_RestrictedArea_C_UpdateLook) == 0x000040, "Wrong size on BPW_HUD_RestrictedArea_C_UpdateLook");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_UpdateLook, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000000, "Member 'BPW_HUD_RestrictedArea_C_UpdateLook::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_UpdateLook, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BPW_HUD_RestrictedArea_C_UpdateLook::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_UpdateLook, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000002, "Member 'BPW_HUD_RestrictedArea_C_UpdateLook::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_UpdateLook, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'BPW_HUD_RestrictedArea_C_UpdateLook::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_UpdateLook, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BPW_HUD_RestrictedArea_C_UpdateLook::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_UpdateLook, K2Node_DynamicCast_AsBFGPlayer_Character) == 0x000018, "Member 'BPW_HUD_RestrictedArea_C_UpdateLook::K2Node_DynamicCast_AsBFGPlayer_Character' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_UpdateLook, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPW_HUD_RestrictedArea_C_UpdateLook::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_UpdateLook, CallFunc_GetRestrictedAreaViolated_ReturnValue) == 0x000028, "Member 'BPW_HUD_RestrictedArea_C_UpdateLook::CallFunc_GetRestrictedAreaViolated_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_UpdateLook, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BPW_HUD_RestrictedArea_C_UpdateLook::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_UpdateLook, CallFunc_Greater_IntInt_ReturnValue) == 0x00003C, "Member 'BPW_HUD_RestrictedArea_C_UpdateLook::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BPW_HUD_RestrictedArea.BPW_HUD_RestrictedArea_C.SetBackground
// 0x0098 (0x0098 - 0x0000)
struct BPW_HUD_RestrictedArea_C_SetBackground final
{
public:
	class UBorder*                                Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                InBrush_ResourceObject;                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0010(0x0088)()
};
static_assert(alignof(BPW_HUD_RestrictedArea_C_SetBackground) == 0x000008, "Wrong alignment on BPW_HUD_RestrictedArea_C_SetBackground");
static_assert(sizeof(BPW_HUD_RestrictedArea_C_SetBackground) == 0x000098, "Wrong size on BPW_HUD_RestrictedArea_C_SetBackground");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_SetBackground, Target) == 0x000000, "Member 'BPW_HUD_RestrictedArea_C_SetBackground::Target' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_SetBackground, InBrush_ResourceObject) == 0x000008, "Member 'BPW_HUD_RestrictedArea_C_SetBackground::InBrush_ResourceObject' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_SetBackground, K2Node_MakeStruct_SlateBrush) == 0x000010, "Member 'BPW_HUD_RestrictedArea_C_SetBackground::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function BPW_HUD_RestrictedArea.BPW_HUD_RestrictedArea_C.ValidateVisible
// 0x0060 (0x0060 - 0x0000)
struct BPW_HUD_RestrictedArea_C_ValidateVisible final
{
public:
	class UObject*                                Image_WrongDisguise;                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Image_Granted;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LocalIsTimerEmpty;                                 // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LocalIsQuestEmpty;                                 // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInBossFight_IsInBossFight;              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABFGPlayerCharacter*                    K2Node_DynamicCast_AsBFGPlayer_Character;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisitingAnyRestrictedArea_ReturnValue;  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue1;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingAnimation_ReturnValue;           // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPW_HUD_RestrictedArea_C_ValidateVisible) == 0x000008, "Wrong alignment on BPW_HUD_RestrictedArea_C_ValidateVisible");
static_assert(sizeof(BPW_HUD_RestrictedArea_C_ValidateVisible) == 0x000060, "Wrong size on BPW_HUD_RestrictedArea_C_ValidateVisible");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_ValidateVisible, Image_WrongDisguise) == 0x000000, "Member 'BPW_HUD_RestrictedArea_C_ValidateVisible::Image_WrongDisguise' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_ValidateVisible, Image_Granted) == 0x000008, "Member 'BPW_HUD_RestrictedArea_C_ValidateVisible::Image_Granted' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_ValidateVisible, LocalIsTimerEmpty) == 0x000010, "Member 'BPW_HUD_RestrictedArea_C_ValidateVisible::LocalIsTimerEmpty' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_ValidateVisible, LocalIsQuestEmpty) == 0x000011, "Member 'BPW_HUD_RestrictedArea_C_ValidateVisible::LocalIsQuestEmpty' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_ValidateVisible, CallFunc_IsInBossFight_IsInBossFight) == 0x000012, "Member 'BPW_HUD_RestrictedArea_C_ValidateVisible::CallFunc_IsInBossFight_IsInBossFight' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_ValidateVisible, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'BPW_HUD_RestrictedArea_C_ValidateVisible::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_ValidateVisible, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BPW_HUD_RestrictedArea_C_ValidateVisible::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_ValidateVisible, CallFunc_K2_GetPawn_ReturnValue) == 0x000028, "Member 'BPW_HUD_RestrictedArea_C_ValidateVisible::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_ValidateVisible, K2Node_DynamicCast_AsBFGPlayer_Character) == 0x000030, "Member 'BPW_HUD_RestrictedArea_C_ValidateVisible::K2Node_DynamicCast_AsBFGPlayer_Character' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_ValidateVisible, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BPW_HUD_RestrictedArea_C_ValidateVisible::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_ValidateVisible, CallFunc_PlayAnimation_ReturnValue) == 0x000040, "Member 'BPW_HUD_RestrictedArea_C_ValidateVisible::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_ValidateVisible, CallFunc_IsVisitingAnyRestrictedArea_ReturnValue) == 0x000048, "Member 'BPW_HUD_RestrictedArea_C_ValidateVisible::CallFunc_IsVisitingAnyRestrictedArea_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_ValidateVisible, CallFunc_PlayAnimation_ReturnValue1) == 0x000050, "Member 'BPW_HUD_RestrictedArea_C_ValidateVisible::CallFunc_PlayAnimation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_ValidateVisible, CallFunc_BooleanAND_ReturnValue) == 0x000058, "Member 'BPW_HUD_RestrictedArea_C_ValidateVisible::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_ValidateVisible, CallFunc_IsPlayingAnimation_ReturnValue) == 0x000059, "Member 'BPW_HUD_RestrictedArea_C_ValidateVisible::CallFunc_IsPlayingAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_ValidateVisible, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x00005A, "Member 'BPW_HUD_RestrictedArea_C_ValidateVisible::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BPW_HUD_RestrictedArea.BPW_HUD_RestrictedArea_C.Tick
// 0x003C (0x003C - 0x0000)
struct BPW_HUD_RestrictedArea_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_HUD_RestrictedArea_C_Tick) == 0x000004, "Wrong alignment on BPW_HUD_RestrictedArea_C_Tick");
static_assert(sizeof(BPW_HUD_RestrictedArea_C_Tick) == 0x00003C, "Wrong size on BPW_HUD_RestrictedArea_C_Tick");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_Tick, MyGeometry) == 0x000000, "Member 'BPW_HUD_RestrictedArea_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_Tick, InDeltaTime) == 0x000038, "Member 'BPW_HUD_RestrictedArea_C_Tick::InDeltaTime' has a wrong offset!");

// Function BPW_HUD_RestrictedArea.BPW_HUD_RestrictedArea_C.ExecuteUbergraph_BPW_HUD_RestrictedArea
// 0x0040 (0x0040 - 0x0000)
struct BPW_HUD_RestrictedArea_C_ExecuteUbergraph_BPW_HUD_RestrictedArea final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_HUD_RestrictedArea_C_ExecuteUbergraph_BPW_HUD_RestrictedArea) == 0x000004, "Wrong alignment on BPW_HUD_RestrictedArea_C_ExecuteUbergraph_BPW_HUD_RestrictedArea");
static_assert(sizeof(BPW_HUD_RestrictedArea_C_ExecuteUbergraph_BPW_HUD_RestrictedArea) == 0x000040, "Wrong size on BPW_HUD_RestrictedArea_C_ExecuteUbergraph_BPW_HUD_RestrictedArea");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_ExecuteUbergraph_BPW_HUD_RestrictedArea, EntryPoint) == 0x000000, "Member 'BPW_HUD_RestrictedArea_C_ExecuteUbergraph_BPW_HUD_RestrictedArea::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_ExecuteUbergraph_BPW_HUD_RestrictedArea, K2Node_Event_MyGeometry) == 0x000004, "Member 'BPW_HUD_RestrictedArea_C_ExecuteUbergraph_BPW_HUD_RestrictedArea::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BPW_HUD_RestrictedArea_C_ExecuteUbergraph_BPW_HUD_RestrictedArea, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'BPW_HUD_RestrictedArea_C_ExecuteUbergraph_BPW_HUD_RestrictedArea::K2Node_Event_InDeltaTime' has a wrong offset!");

}

