#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Item_Explosive_Base

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_Item_Explosive_Base.BP_Item_Explosive_Base_C.ExecuteUbergraph_BP_Item_Explosive_Base
// 0x00A8 (0x00A8 - 0x0000)
struct BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGActorComponent_MentallyInteractable* K2Node_ComponentBoundEvent__pMentallyInteractable2; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_ComponentBoundEvent__pController2;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBFGActorComponent_MentallyInteractable* K2Node_ComponentBoundEvent__pMentallyInteractable1; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_ComponentBoundEvent__pController1;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBFGActorComponent_MentallyInteractable* K2Node_ComponentBoundEvent__pMentallyInteractable; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_ComponentBoundEvent__pController;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_ReturnValue;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_ComponentBoundEvent__aHitActorList;         // 0x0048(0x0010)(ZeroConstructor, ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABFGGameState*                          K2Node_DynamicCast_AsBFGGame_State;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x007C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesActorHaveMatchingTag_ReturnValue;     // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWorld*                                 CallFunc_GetWorldFromContextObjectSafe_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base) == 0x000008, "Wrong alignment on BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base");
static_assert(sizeof(BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base) == 0x0000A8, "Wrong size on BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base");
static_assert(offsetof(BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base, EntryPoint) == 0x000000, "Member 'BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base, Temp_int_Variable) == 0x000008, "Member 'BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base, K2Node_ComponentBoundEvent__pMentallyInteractable2) == 0x000010, "Member 'BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base::K2Node_ComponentBoundEvent__pMentallyInteractable2' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base, K2Node_ComponentBoundEvent__pController2) == 0x000018, "Member 'BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base::K2Node_ComponentBoundEvent__pController2' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base, K2Node_ComponentBoundEvent__pMentallyInteractable1) == 0x000020, "Member 'BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base::K2Node_ComponentBoundEvent__pMentallyInteractable1' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base, K2Node_ComponentBoundEvent__pController1) == 0x000028, "Member 'BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base::K2Node_ComponentBoundEvent__pController1' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base, K2Node_ComponentBoundEvent__pMentallyInteractable) == 0x000030, "Member 'BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base::K2Node_ComponentBoundEvent__pMentallyInteractable' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base, K2Node_ComponentBoundEvent__pController) == 0x000038, "Member 'BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base::K2Node_ComponentBoundEvent__pController' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base, CallFunc_ApplyDamage_ReturnValue) == 0x000040, "Member 'BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base::CallFunc_ApplyDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base, K2Node_Event_DeltaSeconds) == 0x000044, "Member 'BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base, K2Node_ComponentBoundEvent__aHitActorList) == 0x000048, "Member 'BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base::K2Node_ComponentBoundEvent__aHitActorList' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base, CallFunc_GetGameState_ReturnValue) == 0x000068, "Member 'BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base, K2Node_DynamicCast_AsBFGGame_State) == 0x000070, "Member 'BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base::K2Node_DynamicCast_AsBFGGame_State' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x00007C, "Member 'BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base, CallFunc_DoesActorHaveMatchingTag_ReturnValue) == 0x000084, "Member 'BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base::CallFunc_DoesActorHaveMatchingTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00008C, "Member 'BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base, Temp_int_Loop_Counter_Variable) == 0x000090, "Member 'BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base, CallFunc_Add_IntInt_ReturnValue1) == 0x000098, "Member 'BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base, CallFunc_GetWorldFromContextObjectSafe_ReturnValue) == 0x0000A0, "Member 'BP_Item_Explosive_Base_C_ExecuteUbergraph_BP_Item_Explosive_Base::CallFunc_GetWorldFromContextObjectSafe_ReturnValue' has a wrong offset!");

// Function BP_Item_Explosive_Base.BP_Item_Explosive_Base_C.BndEvt__m_pExplosiveComponent_K2Node_ComponentBoundEvent_3_ActorComponent_ExplosiveItemExplosion__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_Item_Explosive_Base_C_BndEvt__m_pExplosiveComponent_K2Node_ComponentBoundEvent_3_ActorComponent_ExplosiveItemExplosion__DelegateSignature final
{
public:
	TArray<class AActor*>                         _aHitActorList;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_Item_Explosive_Base_C_BndEvt__m_pExplosiveComponent_K2Node_ComponentBoundEvent_3_ActorComponent_ExplosiveItemExplosion__DelegateSignature) == 0x000008, "Wrong alignment on BP_Item_Explosive_Base_C_BndEvt__m_pExplosiveComponent_K2Node_ComponentBoundEvent_3_ActorComponent_ExplosiveItemExplosion__DelegateSignature");
static_assert(sizeof(BP_Item_Explosive_Base_C_BndEvt__m_pExplosiveComponent_K2Node_ComponentBoundEvent_3_ActorComponent_ExplosiveItemExplosion__DelegateSignature) == 0x000010, "Wrong size on BP_Item_Explosive_Base_C_BndEvt__m_pExplosiveComponent_K2Node_ComponentBoundEvent_3_ActorComponent_ExplosiveItemExplosion__DelegateSignature");
static_assert(offsetof(BP_Item_Explosive_Base_C_BndEvt__m_pExplosiveComponent_K2Node_ComponentBoundEvent_3_ActorComponent_ExplosiveItemExplosion__DelegateSignature, _aHitActorList) == 0x000000, "Member 'BP_Item_Explosive_Base_C_BndEvt__m_pExplosiveComponent_K2Node_ComponentBoundEvent_3_ActorComponent_ExplosiveItemExplosion__DelegateSignature::_aHitActorList' has a wrong offset!");

// Function BP_Item_Explosive_Base.BP_Item_Explosive_Base_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Item_Explosive_Base_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Item_Explosive_Base_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Item_Explosive_Base_C_ReceiveTick");
static_assert(sizeof(BP_Item_Explosive_Base_C_ReceiveTick) == 0x000004, "Wrong size on BP_Item_Explosive_Base_C_ReceiveTick");
static_assert(offsetof(BP_Item_Explosive_Base_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Item_Explosive_Base_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Item_Explosive_Base.BP_Item_Explosive_Base_C.BndEvt__m_pMentallyInteractableComponent_K2Node_ComponentBoundEvent_2_Action_InteractAction__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_Item_Explosive_Base_C_BndEvt__m_pMentallyInteractableComponent_K2Node_ComponentBoundEvent_2_Action_InteractAction__DelegateSignature final
{
public:
	class UBFGActorComponent_MentallyInteractable* _pMentallyInteractable;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            _pController;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Item_Explosive_Base_C_BndEvt__m_pMentallyInteractableComponent_K2Node_ComponentBoundEvent_2_Action_InteractAction__DelegateSignature) == 0x000008, "Wrong alignment on BP_Item_Explosive_Base_C_BndEvt__m_pMentallyInteractableComponent_K2Node_ComponentBoundEvent_2_Action_InteractAction__DelegateSignature");
static_assert(sizeof(BP_Item_Explosive_Base_C_BndEvt__m_pMentallyInteractableComponent_K2Node_ComponentBoundEvent_2_Action_InteractAction__DelegateSignature) == 0x000010, "Wrong size on BP_Item_Explosive_Base_C_BndEvt__m_pMentallyInteractableComponent_K2Node_ComponentBoundEvent_2_Action_InteractAction__DelegateSignature");
static_assert(offsetof(BP_Item_Explosive_Base_C_BndEvt__m_pMentallyInteractableComponent_K2Node_ComponentBoundEvent_2_Action_InteractAction__DelegateSignature, _pMentallyInteractable) == 0x000000, "Member 'BP_Item_Explosive_Base_C_BndEvt__m_pMentallyInteractableComponent_K2Node_ComponentBoundEvent_2_Action_InteractAction__DelegateSignature::_pMentallyInteractable' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_BndEvt__m_pMentallyInteractableComponent_K2Node_ComponentBoundEvent_2_Action_InteractAction__DelegateSignature, _pController) == 0x000008, "Member 'BP_Item_Explosive_Base_C_BndEvt__m_pMentallyInteractableComponent_K2Node_ComponentBoundEvent_2_Action_InteractAction__DelegateSignature::_pController' has a wrong offset!");

// Function BP_Item_Explosive_Base.BP_Item_Explosive_Base_C.BndEvt__m_pMentallyInteractableComponent_K2Node_ComponentBoundEvent_1_Action_InteractAction__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_Item_Explosive_Base_C_BndEvt__m_pMentallyInteractableComponent_K2Node_ComponentBoundEvent_1_Action_InteractAction__DelegateSignature final
{
public:
	class UBFGActorComponent_MentallyInteractable* _pMentallyInteractable;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            _pController;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Item_Explosive_Base_C_BndEvt__m_pMentallyInteractableComponent_K2Node_ComponentBoundEvent_1_Action_InteractAction__DelegateSignature) == 0x000008, "Wrong alignment on BP_Item_Explosive_Base_C_BndEvt__m_pMentallyInteractableComponent_K2Node_ComponentBoundEvent_1_Action_InteractAction__DelegateSignature");
static_assert(sizeof(BP_Item_Explosive_Base_C_BndEvt__m_pMentallyInteractableComponent_K2Node_ComponentBoundEvent_1_Action_InteractAction__DelegateSignature) == 0x000010, "Wrong size on BP_Item_Explosive_Base_C_BndEvt__m_pMentallyInteractableComponent_K2Node_ComponentBoundEvent_1_Action_InteractAction__DelegateSignature");
static_assert(offsetof(BP_Item_Explosive_Base_C_BndEvt__m_pMentallyInteractableComponent_K2Node_ComponentBoundEvent_1_Action_InteractAction__DelegateSignature, _pMentallyInteractable) == 0x000000, "Member 'BP_Item_Explosive_Base_C_BndEvt__m_pMentallyInteractableComponent_K2Node_ComponentBoundEvent_1_Action_InteractAction__DelegateSignature::_pMentallyInteractable' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_BndEvt__m_pMentallyInteractableComponent_K2Node_ComponentBoundEvent_1_Action_InteractAction__DelegateSignature, _pController) == 0x000008, "Member 'BP_Item_Explosive_Base_C_BndEvt__m_pMentallyInteractableComponent_K2Node_ComponentBoundEvent_1_Action_InteractAction__DelegateSignature::_pController' has a wrong offset!");

// Function BP_Item_Explosive_Base.BP_Item_Explosive_Base_C.BndEvt__m_pMentallyInteractableComponent_K2Node_ComponentBoundEvent_0_Action_InteractAction__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_Item_Explosive_Base_C_BndEvt__m_pMentallyInteractableComponent_K2Node_ComponentBoundEvent_0_Action_InteractAction__DelegateSignature final
{
public:
	class UBFGActorComponent_MentallyInteractable* _pMentallyInteractable;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            _pController;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Item_Explosive_Base_C_BndEvt__m_pMentallyInteractableComponent_K2Node_ComponentBoundEvent_0_Action_InteractAction__DelegateSignature) == 0x000008, "Wrong alignment on BP_Item_Explosive_Base_C_BndEvt__m_pMentallyInteractableComponent_K2Node_ComponentBoundEvent_0_Action_InteractAction__DelegateSignature");
static_assert(sizeof(BP_Item_Explosive_Base_C_BndEvt__m_pMentallyInteractableComponent_K2Node_ComponentBoundEvent_0_Action_InteractAction__DelegateSignature) == 0x000010, "Wrong size on BP_Item_Explosive_Base_C_BndEvt__m_pMentallyInteractableComponent_K2Node_ComponentBoundEvent_0_Action_InteractAction__DelegateSignature");
static_assert(offsetof(BP_Item_Explosive_Base_C_BndEvt__m_pMentallyInteractableComponent_K2Node_ComponentBoundEvent_0_Action_InteractAction__DelegateSignature, _pMentallyInteractable) == 0x000000, "Member 'BP_Item_Explosive_Base_C_BndEvt__m_pMentallyInteractableComponent_K2Node_ComponentBoundEvent_0_Action_InteractAction__DelegateSignature::_pMentallyInteractable' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_BndEvt__m_pMentallyInteractableComponent_K2Node_ComponentBoundEvent_0_Action_InteractAction__DelegateSignature, _pController) == 0x000008, "Member 'BP_Item_Explosive_Base_C_BndEvt__m_pMentallyInteractableComponent_K2Node_ComponentBoundEvent_0_Action_InteractAction__DelegateSignature::_pController' has a wrong offset!");

// Function BP_Item_Explosive_Base.BP_Item_Explosive_Base_C.MentalShake
// 0x0040 (0x0040 - 0x0000)
struct BP_Item_Explosive_Base_C_MentalShake final
{
public:
	float                                         ShakeStrength;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShakeSpeed;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHoldTime_ReturnValue;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInteractTime_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sin_ReturnValue;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Item_Explosive_Base_C_MentalShake) == 0x000004, "Wrong alignment on BP_Item_Explosive_Base_C_MentalShake");
static_assert(sizeof(BP_Item_Explosive_Base_C_MentalShake) == 0x000040, "Wrong size on BP_Item_Explosive_Base_C_MentalShake");
static_assert(offsetof(BP_Item_Explosive_Base_C_MentalShake, ShakeStrength) == 0x000000, "Member 'BP_Item_Explosive_Base_C_MentalShake::ShakeStrength' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_MentalShake, ShakeSpeed) == 0x000004, "Member 'BP_Item_Explosive_Base_C_MentalShake::ShakeSpeed' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_MentalShake, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_Item_Explosive_Base_C_MentalShake::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_MentalShake, CallFunc_GetHoldTime_ReturnValue) == 0x00000C, "Member 'BP_Item_Explosive_Base_C_MentalShake::CallFunc_GetHoldTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_MentalShake, CallFunc_GetInteractTime_ReturnValue) == 0x000010, "Member 'BP_Item_Explosive_Base_C_MentalShake::CallFunc_GetInteractTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_MentalShake, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_Item_Explosive_Base_C_MentalShake::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_MentalShake, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_Item_Explosive_Base_C_MentalShake::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_MentalShake, CallFunc_Sin_ReturnValue) == 0x00001C, "Member 'BP_Item_Explosive_Base_C_MentalShake::CallFunc_Sin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_MentalShake, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000020, "Member 'BP_Item_Explosive_Base_C_MentalShake::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_MentalShake, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000024, "Member 'BP_Item_Explosive_Base_C_MentalShake::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_MentalShake, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000028, "Member 'BP_Item_Explosive_Base_C_MentalShake::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Explosive_Base_C_MentalShake, CallFunc_Add_VectorVector_ReturnValue) == 0x000034, "Member 'BP_Item_Explosive_Base_C_MentalShake::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

}

