#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Military_Tank

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BFGCore_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Military_Tank.BP_Military_Tank_C
// 0x0060 (0x0E60 - 0x0E00)
class ABP_Military_Tank_C final : public ABFGWheeledVehicleTank
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0E00(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_OverheadOpportunityWidgetComponent_C* BP_OverheadOpportunityWidgetComponent;             // 0x0E08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_HealthWidgetComponent_C*            BP_HealthWidgetComponent;                          // 0x0E10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_ActorComponent_RadarObject_Vehicle_C* BP_ActorComponent_RadarObject_Vehicle;             // 0x0E18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDH1ArmorComponent*                     DH1Armor;                                          // 0x0E20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       Track_Spline_L;                                    // 0x0E28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       Track_Spline_R;                                    // 0x0E30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBFGActorComponent_TankTrack*           BFGActorComponent_TankTrack1;                      // 0x0E38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBFGActorComponent_TankTrack*           BFGActorComponent_TankTrack;                       // 0x0E40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         OnDeathAnim_deformationWeight_29BDC26343802C06E2F749B745B8E642; // 0x0E48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            OnDeathAnim__Direction_29BDC26343802C06E2F749B745B8E642; // 0x0E4C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4D[0x3];                                      // 0x0E4D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     OnDeathAnim;                                       // 0x0E50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Military_Tank(int32 EntryPoint);
	void OnVehicleDeath();
	void BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_1_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature(class UBFGActorComponent_PawnDamage* _pPawnDamage, float _fDamage, class AActor* _pDamageCauser, const class UBFGDamageType* _pDamageType, const struct FVector& _rShotDirection, const struct FHitResult& _oHitResult);
	void OnDeathAnim__UpdateFunc();
	void OnDeathAnim__FinishedFunc();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Military_Tank_C">();
	}
	static class ABP_Military_Tank_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Military_Tank_C>();
	}
};
static_assert(alignof(ABP_Military_Tank_C) == 0x000010, "Wrong alignment on ABP_Military_Tank_C");
static_assert(sizeof(ABP_Military_Tank_C) == 0x000E60, "Wrong size on ABP_Military_Tank_C");
static_assert(offsetof(ABP_Military_Tank_C, UberGraphFrame) == 0x000E00, "Member 'ABP_Military_Tank_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Military_Tank_C, BP_OverheadOpportunityWidgetComponent) == 0x000E08, "Member 'ABP_Military_Tank_C::BP_OverheadOpportunityWidgetComponent' has a wrong offset!");
static_assert(offsetof(ABP_Military_Tank_C, BP_HealthWidgetComponent) == 0x000E10, "Member 'ABP_Military_Tank_C::BP_HealthWidgetComponent' has a wrong offset!");
static_assert(offsetof(ABP_Military_Tank_C, BP_ActorComponent_RadarObject_Vehicle) == 0x000E18, "Member 'ABP_Military_Tank_C::BP_ActorComponent_RadarObject_Vehicle' has a wrong offset!");
static_assert(offsetof(ABP_Military_Tank_C, DH1Armor) == 0x000E20, "Member 'ABP_Military_Tank_C::DH1Armor' has a wrong offset!");
static_assert(offsetof(ABP_Military_Tank_C, Track_Spline_L) == 0x000E28, "Member 'ABP_Military_Tank_C::Track_Spline_L' has a wrong offset!");
static_assert(offsetof(ABP_Military_Tank_C, Track_Spline_R) == 0x000E30, "Member 'ABP_Military_Tank_C::Track_Spline_R' has a wrong offset!");
static_assert(offsetof(ABP_Military_Tank_C, BFGActorComponent_TankTrack1) == 0x000E38, "Member 'ABP_Military_Tank_C::BFGActorComponent_TankTrack1' has a wrong offset!");
static_assert(offsetof(ABP_Military_Tank_C, BFGActorComponent_TankTrack) == 0x000E40, "Member 'ABP_Military_Tank_C::BFGActorComponent_TankTrack' has a wrong offset!");
static_assert(offsetof(ABP_Military_Tank_C, OnDeathAnim_deformationWeight_29BDC26343802C06E2F749B745B8E642) == 0x000E48, "Member 'ABP_Military_Tank_C::OnDeathAnim_deformationWeight_29BDC26343802C06E2F749B745B8E642' has a wrong offset!");
static_assert(offsetof(ABP_Military_Tank_C, OnDeathAnim__Direction_29BDC26343802C06E2F749B745B8E642) == 0x000E4C, "Member 'ABP_Military_Tank_C::OnDeathAnim__Direction_29BDC26343802C06E2F749B745B8E642' has a wrong offset!");
static_assert(offsetof(ABP_Military_Tank_C, OnDeathAnim) == 0x000E50, "Member 'ABP_Military_Tank_C::OnDeathAnim' has a wrong offset!");

}

