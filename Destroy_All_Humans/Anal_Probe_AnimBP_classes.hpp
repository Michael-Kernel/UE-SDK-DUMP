#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Anal_Probe_AnimBP

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "BFGCore_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Anal_Probe_AnimBP.Anal_Probe_AnimBP_C
// 0x08E8 (0x0CE8 - 0x0400)
class UAnal_Probe_AnimBP_C final : public UBFGAnimationInstance_Crypto
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0400(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root_58E3D16C4A27F1F2265BD789C1480E7C; // 0x0408(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_BFE7F63542D6F61CAECD958B35AA6301; // 0x0428(0x0078)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_2612B550455F6FA24B139B999FC8F955; // 0x04A0(0x00B8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_46CF15064E40BB6B6044588E41B0960E; // 0x0558(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8808473849A608D9D6FF0B8D454FDAD6; // 0x0580(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4172FB214010A9289348288A8B7EDD85; // 0x05A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_31A8AE8C4A1710705E78EFBCE2C00325; // 0x05D0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_74D942964A4D9AFFA3DD7995FE3C2B8C; // 0x05F8(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_01932E6545D938DAAE5DA4942489E0D1; // 0x0670(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_F759B97347B760A32D154586C5652406; // 0x0690(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_74E86FC447138C64F2BFF4AE80DF8410; // 0x0708(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_FC8EF9AD4D75A6E9EB31829B58EF5390; // 0x0728(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_AF1B25384BDA9CD2A0BFC2821A46C588; // 0x07A0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_507F82F64D3C77FE589679BF6FA5206F; // 0x07C0(0x00B0)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_36F75E8C4182F650C6C58F86A8C172A7; // 0x0870(0x00C8)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_B19F9C454B9ABED73CF09992F6D97D75; // 0x0938(0x0048)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_0B17CAEC4DBE4E2D62D1FC9C58406F4B; // 0x0980(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_434D894442D69D0E5F7E34BBD2744FEE; // 0x09C8(0x00A0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_D7B6CD264B38AD4A32F300B90D209219; // 0x0A68(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_40790FDE4764B96DC45D728B0C8BD99D; // 0x0AB0(0x0078)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_585B06574F6C2EC92A212D96234BC76D; // 0x0B28(0x00A0)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_8581B6D743AF0E325E737AA991D8F796; // 0x0BC8(0x00C8)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_47B5118440A7A5D58060ED9699897A4E; // 0x0C90(0x0048)()
	float                                         SpinRate;                                          // 0x0CD8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PulseRate;                                         // 0x0CDC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShootSwitch;                                       // 0x0CE0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PreviousWeaponShooting;                            // 0x0CE1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CE2[0x2];                                      // 0x0CE2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinigameValue;                                     // 0x0CE4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Anal_Probe_AnimBP(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Anal_Probe_AnimBP_AnimGraphNode_TransitionResult_46CF15064E40BB6B6044588E41B0960E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Anal_Probe_AnimBP_AnimGraphNode_TransitionResult_8808473849A608D9D6FF0B8D454FDAD6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Anal_Probe_AnimBP_AnimGraphNode_BlendListByBool_585B06574F6C2EC92A212D96234BC76D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Anal_Probe_AnimBP_AnimGraphNode_BlendListByBool_434D894442D69D0E5F7E34BBD2744FEE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Anal_Probe_AnimBP_AnimGraphNode_TransitionResult_4172FB214010A9289348288A8B7EDD85();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Anal_Probe_AnimBP_AnimGraphNode_TransitionResult_31A8AE8C4A1710705E78EFBCE2C00325();
	void HandleSpin();
	void PlayShootMontage();
	void SetPreviousVars();
	void RemapMiniGameValue();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Anal_Probe_AnimBP_C">();
	}
	static class UAnal_Probe_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnal_Probe_AnimBP_C>();
	}
};
static_assert(alignof(UAnal_Probe_AnimBP_C) == 0x000008, "Wrong alignment on UAnal_Probe_AnimBP_C");
static_assert(sizeof(UAnal_Probe_AnimBP_C) == 0x000CE8, "Wrong size on UAnal_Probe_AnimBP_C");
static_assert(offsetof(UAnal_Probe_AnimBP_C, UberGraphFrame) == 0x000400, "Member 'UAnal_Probe_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAnal_Probe_AnimBP_C, AnimGraphNode_Root_58E3D16C4A27F1F2265BD789C1480E7C) == 0x000408, "Member 'UAnal_Probe_AnimBP_C::AnimGraphNode_Root_58E3D16C4A27F1F2265BD789C1480E7C' has a wrong offset!");
static_assert(offsetof(UAnal_Probe_AnimBP_C, AnimGraphNode_SequencePlayer_BFE7F63542D6F61CAECD958B35AA6301) == 0x000428, "Member 'UAnal_Probe_AnimBP_C::AnimGraphNode_SequencePlayer_BFE7F63542D6F61CAECD958B35AA6301' has a wrong offset!");
static_assert(offsetof(UAnal_Probe_AnimBP_C, AnimGraphNode_LayeredBoneBlend_2612B550455F6FA24B139B999FC8F955) == 0x0004A0, "Member 'UAnal_Probe_AnimBP_C::AnimGraphNode_LayeredBoneBlend_2612B550455F6FA24B139B999FC8F955' has a wrong offset!");
static_assert(offsetof(UAnal_Probe_AnimBP_C, AnimGraphNode_TransitionResult_46CF15064E40BB6B6044588E41B0960E) == 0x000558, "Member 'UAnal_Probe_AnimBP_C::AnimGraphNode_TransitionResult_46CF15064E40BB6B6044588E41B0960E' has a wrong offset!");
static_assert(offsetof(UAnal_Probe_AnimBP_C, AnimGraphNode_TransitionResult_8808473849A608D9D6FF0B8D454FDAD6) == 0x000580, "Member 'UAnal_Probe_AnimBP_C::AnimGraphNode_TransitionResult_8808473849A608D9D6FF0B8D454FDAD6' has a wrong offset!");
static_assert(offsetof(UAnal_Probe_AnimBP_C, AnimGraphNode_TransitionResult_4172FB214010A9289348288A8B7EDD85) == 0x0005A8, "Member 'UAnal_Probe_AnimBP_C::AnimGraphNode_TransitionResult_4172FB214010A9289348288A8B7EDD85' has a wrong offset!");
static_assert(offsetof(UAnal_Probe_AnimBP_C, AnimGraphNode_TransitionResult_31A8AE8C4A1710705E78EFBCE2C00325) == 0x0005D0, "Member 'UAnal_Probe_AnimBP_C::AnimGraphNode_TransitionResult_31A8AE8C4A1710705E78EFBCE2C00325' has a wrong offset!");
static_assert(offsetof(UAnal_Probe_AnimBP_C, AnimGraphNode_SequencePlayer_74D942964A4D9AFFA3DD7995FE3C2B8C) == 0x0005F8, "Member 'UAnal_Probe_AnimBP_C::AnimGraphNode_SequencePlayer_74D942964A4D9AFFA3DD7995FE3C2B8C' has a wrong offset!");
static_assert(offsetof(UAnal_Probe_AnimBP_C, AnimGraphNode_StateResult_01932E6545D938DAAE5DA4942489E0D1) == 0x000670, "Member 'UAnal_Probe_AnimBP_C::AnimGraphNode_StateResult_01932E6545D938DAAE5DA4942489E0D1' has a wrong offset!");
static_assert(offsetof(UAnal_Probe_AnimBP_C, AnimGraphNode_SequencePlayer_F759B97347B760A32D154586C5652406) == 0x000690, "Member 'UAnal_Probe_AnimBP_C::AnimGraphNode_SequencePlayer_F759B97347B760A32D154586C5652406' has a wrong offset!");
static_assert(offsetof(UAnal_Probe_AnimBP_C, AnimGraphNode_StateResult_74E86FC447138C64F2BFF4AE80DF8410) == 0x000708, "Member 'UAnal_Probe_AnimBP_C::AnimGraphNode_StateResult_74E86FC447138C64F2BFF4AE80DF8410' has a wrong offset!");
static_assert(offsetof(UAnal_Probe_AnimBP_C, AnimGraphNode_SequencePlayer_FC8EF9AD4D75A6E9EB31829B58EF5390) == 0x000728, "Member 'UAnal_Probe_AnimBP_C::AnimGraphNode_SequencePlayer_FC8EF9AD4D75A6E9EB31829B58EF5390' has a wrong offset!");
static_assert(offsetof(UAnal_Probe_AnimBP_C, AnimGraphNode_StateResult_AF1B25384BDA9CD2A0BFC2821A46C588) == 0x0007A0, "Member 'UAnal_Probe_AnimBP_C::AnimGraphNode_StateResult_AF1B25384BDA9CD2A0BFC2821A46C588' has a wrong offset!");
static_assert(offsetof(UAnal_Probe_AnimBP_C, AnimGraphNode_StateMachine_507F82F64D3C77FE589679BF6FA5206F) == 0x0007C0, "Member 'UAnal_Probe_AnimBP_C::AnimGraphNode_StateMachine_507F82F64D3C77FE589679BF6FA5206F' has a wrong offset!");
static_assert(offsetof(UAnal_Probe_AnimBP_C, AnimGraphNode_ApplyAdditive_36F75E8C4182F650C6C58F86A8C172A7) == 0x000870, "Member 'UAnal_Probe_AnimBP_C::AnimGraphNode_ApplyAdditive_36F75E8C4182F650C6C58F86A8C172A7' has a wrong offset!");
static_assert(offsetof(UAnal_Probe_AnimBP_C, AnimGraphNode_SequenceEvaluator_B19F9C454B9ABED73CF09992F6D97D75) == 0x000938, "Member 'UAnal_Probe_AnimBP_C::AnimGraphNode_SequenceEvaluator_B19F9C454B9ABED73CF09992F6D97D75' has a wrong offset!");
static_assert(offsetof(UAnal_Probe_AnimBP_C, AnimGraphNode_SequenceEvaluator_0B17CAEC4DBE4E2D62D1FC9C58406F4B) == 0x000980, "Member 'UAnal_Probe_AnimBP_C::AnimGraphNode_SequenceEvaluator_0B17CAEC4DBE4E2D62D1FC9C58406F4B' has a wrong offset!");
static_assert(offsetof(UAnal_Probe_AnimBP_C, AnimGraphNode_BlendListByBool_434D894442D69D0E5F7E34BBD2744FEE) == 0x0009C8, "Member 'UAnal_Probe_AnimBP_C::AnimGraphNode_BlendListByBool_434D894442D69D0E5F7E34BBD2744FEE' has a wrong offset!");
static_assert(offsetof(UAnal_Probe_AnimBP_C, AnimGraphNode_Slot_D7B6CD264B38AD4A32F300B90D209219) == 0x000A68, "Member 'UAnal_Probe_AnimBP_C::AnimGraphNode_Slot_D7B6CD264B38AD4A32F300B90D209219' has a wrong offset!");
static_assert(offsetof(UAnal_Probe_AnimBP_C, AnimGraphNode_SequencePlayer_40790FDE4764B96DC45D728B0C8BD99D) == 0x000AB0, "Member 'UAnal_Probe_AnimBP_C::AnimGraphNode_SequencePlayer_40790FDE4764B96DC45D728B0C8BD99D' has a wrong offset!");
static_assert(offsetof(UAnal_Probe_AnimBP_C, AnimGraphNode_BlendListByBool_585B06574F6C2EC92A212D96234BC76D) == 0x000B28, "Member 'UAnal_Probe_AnimBP_C::AnimGraphNode_BlendListByBool_585B06574F6C2EC92A212D96234BC76D' has a wrong offset!");
static_assert(offsetof(UAnal_Probe_AnimBP_C, AnimGraphNode_TwoWayBlend_8581B6D743AF0E325E737AA991D8F796) == 0x000BC8, "Member 'UAnal_Probe_AnimBP_C::AnimGraphNode_TwoWayBlend_8581B6D743AF0E325E737AA991D8F796' has a wrong offset!");
static_assert(offsetof(UAnal_Probe_AnimBP_C, AnimGraphNode_SequenceEvaluator_47B5118440A7A5D58060ED9699897A4E) == 0x000C90, "Member 'UAnal_Probe_AnimBP_C::AnimGraphNode_SequenceEvaluator_47B5118440A7A5D58060ED9699897A4E' has a wrong offset!");
static_assert(offsetof(UAnal_Probe_AnimBP_C, SpinRate) == 0x000CD8, "Member 'UAnal_Probe_AnimBP_C::SpinRate' has a wrong offset!");
static_assert(offsetof(UAnal_Probe_AnimBP_C, PulseRate) == 0x000CDC, "Member 'UAnal_Probe_AnimBP_C::PulseRate' has a wrong offset!");
static_assert(offsetof(UAnal_Probe_AnimBP_C, ShootSwitch) == 0x000CE0, "Member 'UAnal_Probe_AnimBP_C::ShootSwitch' has a wrong offset!");
static_assert(offsetof(UAnal_Probe_AnimBP_C, PreviousWeaponShooting) == 0x000CE1, "Member 'UAnal_Probe_AnimBP_C::PreviousWeaponShooting' has a wrong offset!");
static_assert(offsetof(UAnal_Probe_AnimBP_C, MinigameValue) == 0x000CE4, "Member 'UAnal_Probe_AnimBP_C::MinigameValue' has a wrong offset!");

}

