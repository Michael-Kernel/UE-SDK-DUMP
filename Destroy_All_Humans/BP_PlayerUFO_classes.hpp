#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerUFO

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BFGCore_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PlayerUFO.BP_PlayerUFO_C
// 0x00D0 (0x0B10 - 0x0A40)
class ABP_PlayerUFO_C final : public ABFGPlayerUFO
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0A40(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPaperSpriteComponent*                  OOB_Indicator;                                     // 0x0A48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_SceneComponent_OOBNotifier_C*       BP_SceneComponent_OOBNotifier;                     // 0x0A50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_SceneComponent_HighlightableSceneObject_C* HighlightablePivot;                                // 0x0A58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   OOB_Plane;                                         // 0x0A60(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_OverheadOpportunityWidgetComponent_C* BP_OverheadOpportunityWidgetComponent;             // 0x0A68(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_ActorComponent_RadarObject_NPC_C*   BP_ActorComponent_RadarObject_NPC;                 // 0x0A70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio_Saucer_Basesound;                            // 0x0A78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 PilotMesh;                                         // 0x0A80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Animate_Destroyed_UFO_Transition_82BFCD2F418A41A16ABB818E1A760455; // 0x0A88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Animate_Destroyed_UFO__Direction_82BFCD2F418A41A16ABB818E1A760455; // 0x0A8C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A8D[0x3];                                      // 0x0A8D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Animate_Destroyed_UFO;                             // 0x0A90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   OnHideUI;                                          // 0x0A98(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnShowUI;                                          // 0x0AB0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsPossessed;                                       // 0x0AC8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AC9[0x3];                                      // 0x0AC9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FSequenceNumberOfGlowSegmentsStepDistance;         // 0x0ACC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Velocity_Vector;                                   // 0x0AD0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Velocity;                                          // 0x0ADC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Velocity_Normalized;                               // 0x0AE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Vertical_Velocity;                                 // 0x0AE4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Vertical_Velocity_Normalized;                      // 0x0AE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Shield_PlayShort;                                  // 0x0AEC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Onest_WeaponChange_happened;                       // 0x0AED(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AEE[0x2];                                      // 0x0AEE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               GlowMaterial;                                      // 0x0AF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          CryptoMesh;                                        // 0x0AF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CryptoMaterials;                                   // 0x0B00(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void ShieldImpactEffect(float Damage, const struct FHitResult& HitResult);
	class UPrimitiveComponent* GetTriggerZoneIndicatorComponent();
	void Animate_Destroyed_UFO__FinishedFunc();
	void Animate_Destroyed_UFO__UpdateFunc();
	void OnShowTriggerZoneMessage(bool _bIsOutside);
	void DeathEvent(class AActor* _pActor, class UBFGActorStat_Bool* _pStat);
	void OnStartedEnteringUFO();
	void BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_1_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature(class UBFGActorComponent_PawnDamage* _pPawnDamage, float _fDamage, class AActor* _pDamageCauser, const class UBFGDamageType* _pDamageType, const struct FVector& _rShotDirection, const struct FHitResult& _oHitResult);
	void ReceiveUnpossessed(class AController* OldController);
	void ReceivePossessed(class AController* NewController);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_0_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature(class UBFGActorComponent_PawnDamage* _pPawnDamage, float _fDamage, class AActor* _pDamageCauser, const class UBFGDamageType* _pDamageType, const struct FVector& _rShotDirection, const struct FHitResult& _oHitResult);
	void BndEvt__m_pEquipmentManagerComponent_K2Node_ComponentBoundEvent_2_BFGEquipmentManager_WeaponEvent__DelegateSignature(class ABFGWeapon* _pWeapon, bool _bEnabled);
	void BndEvt__m_pDamageComponent_K2Node_ComponentBoundEvent_3_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature(class UBFGActorComponent_PawnDamage* _pPawnDamage, float _fDamage, class AActor* _pDamageCauser, const class UBFGDamageType* _pDamageType, const struct FVector& _rShotDirection, const struct FHitResult& _oHitResult);
	void AssignPilotMesh(class USkeletalMeshComponent* _pSkeletalMeshComponent);
	void ExecuteUbergraph_BP_PlayerUFO(int32 EntryPoint);
	void OnShowUI__DelegateSignature();
	void OnHideUI__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PlayerUFO_C">();
	}
	static class ABP_PlayerUFO_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PlayerUFO_C>();
	}
};
static_assert(alignof(ABP_PlayerUFO_C) == 0x000010, "Wrong alignment on ABP_PlayerUFO_C");
static_assert(sizeof(ABP_PlayerUFO_C) == 0x000B10, "Wrong size on ABP_PlayerUFO_C");
static_assert(offsetof(ABP_PlayerUFO_C, UberGraphFrame) == 0x000A40, "Member 'ABP_PlayerUFO_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PlayerUFO_C, OOB_Indicator) == 0x000A48, "Member 'ABP_PlayerUFO_C::OOB_Indicator' has a wrong offset!");
static_assert(offsetof(ABP_PlayerUFO_C, BP_SceneComponent_OOBNotifier) == 0x000A50, "Member 'ABP_PlayerUFO_C::BP_SceneComponent_OOBNotifier' has a wrong offset!");
static_assert(offsetof(ABP_PlayerUFO_C, HighlightablePivot) == 0x000A58, "Member 'ABP_PlayerUFO_C::HighlightablePivot' has a wrong offset!");
static_assert(offsetof(ABP_PlayerUFO_C, OOB_Plane) == 0x000A60, "Member 'ABP_PlayerUFO_C::OOB_Plane' has a wrong offset!");
static_assert(offsetof(ABP_PlayerUFO_C, BP_OverheadOpportunityWidgetComponent) == 0x000A68, "Member 'ABP_PlayerUFO_C::BP_OverheadOpportunityWidgetComponent' has a wrong offset!");
static_assert(offsetof(ABP_PlayerUFO_C, BP_ActorComponent_RadarObject_NPC) == 0x000A70, "Member 'ABP_PlayerUFO_C::BP_ActorComponent_RadarObject_NPC' has a wrong offset!");
static_assert(offsetof(ABP_PlayerUFO_C, Audio_Saucer_Basesound) == 0x000A78, "Member 'ABP_PlayerUFO_C::Audio_Saucer_Basesound' has a wrong offset!");
static_assert(offsetof(ABP_PlayerUFO_C, PilotMesh) == 0x000A80, "Member 'ABP_PlayerUFO_C::PilotMesh' has a wrong offset!");
static_assert(offsetof(ABP_PlayerUFO_C, Animate_Destroyed_UFO_Transition_82BFCD2F418A41A16ABB818E1A760455) == 0x000A88, "Member 'ABP_PlayerUFO_C::Animate_Destroyed_UFO_Transition_82BFCD2F418A41A16ABB818E1A760455' has a wrong offset!");
static_assert(offsetof(ABP_PlayerUFO_C, Animate_Destroyed_UFO__Direction_82BFCD2F418A41A16ABB818E1A760455) == 0x000A8C, "Member 'ABP_PlayerUFO_C::Animate_Destroyed_UFO__Direction_82BFCD2F418A41A16ABB818E1A760455' has a wrong offset!");
static_assert(offsetof(ABP_PlayerUFO_C, Animate_Destroyed_UFO) == 0x000A90, "Member 'ABP_PlayerUFO_C::Animate_Destroyed_UFO' has a wrong offset!");
static_assert(offsetof(ABP_PlayerUFO_C, OnHideUI) == 0x000A98, "Member 'ABP_PlayerUFO_C::OnHideUI' has a wrong offset!");
static_assert(offsetof(ABP_PlayerUFO_C, OnShowUI) == 0x000AB0, "Member 'ABP_PlayerUFO_C::OnShowUI' has a wrong offset!");
static_assert(offsetof(ABP_PlayerUFO_C, IsPossessed) == 0x000AC8, "Member 'ABP_PlayerUFO_C::IsPossessed' has a wrong offset!");
static_assert(offsetof(ABP_PlayerUFO_C, FSequenceNumberOfGlowSegmentsStepDistance) == 0x000ACC, "Member 'ABP_PlayerUFO_C::FSequenceNumberOfGlowSegmentsStepDistance' has a wrong offset!");
static_assert(offsetof(ABP_PlayerUFO_C, Velocity_Vector) == 0x000AD0, "Member 'ABP_PlayerUFO_C::Velocity_Vector' has a wrong offset!");
static_assert(offsetof(ABP_PlayerUFO_C, Velocity) == 0x000ADC, "Member 'ABP_PlayerUFO_C::Velocity' has a wrong offset!");
static_assert(offsetof(ABP_PlayerUFO_C, Velocity_Normalized) == 0x000AE0, "Member 'ABP_PlayerUFO_C::Velocity_Normalized' has a wrong offset!");
static_assert(offsetof(ABP_PlayerUFO_C, Vertical_Velocity) == 0x000AE4, "Member 'ABP_PlayerUFO_C::Vertical_Velocity' has a wrong offset!");
static_assert(offsetof(ABP_PlayerUFO_C, Vertical_Velocity_Normalized) == 0x000AE8, "Member 'ABP_PlayerUFO_C::Vertical_Velocity_Normalized' has a wrong offset!");
static_assert(offsetof(ABP_PlayerUFO_C, Shield_PlayShort) == 0x000AEC, "Member 'ABP_PlayerUFO_C::Shield_PlayShort' has a wrong offset!");
static_assert(offsetof(ABP_PlayerUFO_C, Onest_WeaponChange_happened) == 0x000AED, "Member 'ABP_PlayerUFO_C::Onest_WeaponChange_happened' has a wrong offset!");
static_assert(offsetof(ABP_PlayerUFO_C, GlowMaterial) == 0x000AF0, "Member 'ABP_PlayerUFO_C::GlowMaterial' has a wrong offset!");
static_assert(offsetof(ABP_PlayerUFO_C, CryptoMesh) == 0x000AF8, "Member 'ABP_PlayerUFO_C::CryptoMesh' has a wrong offset!");
static_assert(offsetof(ABP_PlayerUFO_C, CryptoMaterials) == 0x000B00, "Member 'ABP_PlayerUFO_C::CryptoMaterials' has a wrong offset!");

}

