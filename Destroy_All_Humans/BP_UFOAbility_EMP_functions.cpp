#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UFOAbility_EMP

#include "Basic.hpp"

#include "BP_UFOAbility_EMP_classes.hpp"
#include "BP_UFOAbility_EMP_parameters.hpp"


namespace SDK
{

// Function BP_UFOAbility_EMP.BP_UFOAbility_EMP_C.ExecuteUbergraph_BP_UFOAbility_EMP
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UFOAbility_EMP_C::ExecuteUbergraph_BP_UFOAbility_EMP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UFOAbility_EMP_C", "ExecuteUbergraph_BP_UFOAbility_EMP");

	Params::BP_UFOAbility_EMP_C_ExecuteUbergraph_BP_UFOAbility_EMP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UFOAbility_EMP.BP_UFOAbility_EMP_C.OnAbilityEffect
// (Event, Protected, BlueprintEvent)

void UBP_UFOAbility_EMP_C::OnAbilityEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UFOAbility_EMP_C", "OnAbilityEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UFOAbility_EMP.BP_UFOAbility_EMP_C.OnProjectileEMPd
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ABFGProjectile*                   PProjectile                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UFOAbility_EMP_C::OnProjectileEMPd(class ABFGProjectile* PProjectile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UFOAbility_EMP_C", "OnProjectileEMPd");

	Params::BP_UFOAbility_EMP_C_OnProjectileEMPd Parms{};

	Parms.PProjectile = PProjectile;

	UObject::ProcessEvent(Func, &Parms);
}

}

