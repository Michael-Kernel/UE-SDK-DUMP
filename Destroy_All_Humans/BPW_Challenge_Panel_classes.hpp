#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPW_Challenge_Panel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BFGCore_structs.hpp"
#include "BFGCore_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BPW_Challenge_Panel.BPW_Challenge_Panel_C
// 0x00A8 (0x02F8 - 0x0250)
class UBPW_Challenge_Panel_C final : public UBFGWidget_AR_ChallengePanel
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0250(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Animation_MintoMax;                                // 0x0258(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Animation_PeekToMin;                               // 0x0260(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Animation_MaxToPeek;                               // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBPW_ChallengePanel_Star_C*             BPW_Star_1;                                        // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBPW_ChallengePanel_Star_C*             BPW_Star_2;                                        // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBPW_ChallengePanel_Star_C*             BPW_Star_3;                                        // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_ChallengeType;                                 // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_HighScore;                                     // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_Objective;                                     // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_TimeLimit;                                     // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RTB_Briefing;                                      // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RTB_HighScore;                                     // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RTB_Objective;                                     // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RTB_Reward;                                        // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RTB_TimeLimit;                                     // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RTB_Title;                                         // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RTB_Type;                                          // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VBox_DetailList;                                   // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UBPW_ChallengePanel_Star_C*>     Stars;                                             // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BPW_Challenge_Panel(int32 EntryPoint);
	void OnDataChanged();
	void OnPanelVisibilityChanged(EBFGChallengeStartingPoint_Visibility _eVisibility);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void ShowStarDetails(bool Show);
	void ApplyInfo();
	void EnsureSoftPointersLoaded();
	void SetIconAndType();
	void SetTitle();
	void SetStarDetails();
	void SetBriefing();
	void SetObjective();
	void SetTimeLimit();
	void Set_constraints_and_optional_objectives();
	void SetPersonalHighscore();
	void SetReward();
	void UpdateVisibility(EBFGChallengeStartingPoint_Visibility NewVisibility);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPW_Challenge_Panel_C">();
	}
	static class UBPW_Challenge_Panel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPW_Challenge_Panel_C>();
	}
};
static_assert(alignof(UBPW_Challenge_Panel_C) == 0x000008, "Wrong alignment on UBPW_Challenge_Panel_C");
static_assert(sizeof(UBPW_Challenge_Panel_C) == 0x0002F8, "Wrong size on UBPW_Challenge_Panel_C");
static_assert(offsetof(UBPW_Challenge_Panel_C, UberGraphFrame) == 0x000250, "Member 'UBPW_Challenge_Panel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPW_Challenge_Panel_C, Animation_MintoMax) == 0x000258, "Member 'UBPW_Challenge_Panel_C::Animation_MintoMax' has a wrong offset!");
static_assert(offsetof(UBPW_Challenge_Panel_C, Animation_PeekToMin) == 0x000260, "Member 'UBPW_Challenge_Panel_C::Animation_PeekToMin' has a wrong offset!");
static_assert(offsetof(UBPW_Challenge_Panel_C, Animation_MaxToPeek) == 0x000268, "Member 'UBPW_Challenge_Panel_C::Animation_MaxToPeek' has a wrong offset!");
static_assert(offsetof(UBPW_Challenge_Panel_C, BPW_Star_1) == 0x000270, "Member 'UBPW_Challenge_Panel_C::BPW_Star_1' has a wrong offset!");
static_assert(offsetof(UBPW_Challenge_Panel_C, BPW_Star_2) == 0x000278, "Member 'UBPW_Challenge_Panel_C::BPW_Star_2' has a wrong offset!");
static_assert(offsetof(UBPW_Challenge_Panel_C, BPW_Star_3) == 0x000280, "Member 'UBPW_Challenge_Panel_C::BPW_Star_3' has a wrong offset!");
static_assert(offsetof(UBPW_Challenge_Panel_C, Img_ChallengeType) == 0x000288, "Member 'UBPW_Challenge_Panel_C::Img_ChallengeType' has a wrong offset!");
static_assert(offsetof(UBPW_Challenge_Panel_C, Img_HighScore) == 0x000290, "Member 'UBPW_Challenge_Panel_C::Img_HighScore' has a wrong offset!");
static_assert(offsetof(UBPW_Challenge_Panel_C, IMG_Objective) == 0x000298, "Member 'UBPW_Challenge_Panel_C::IMG_Objective' has a wrong offset!");
static_assert(offsetof(UBPW_Challenge_Panel_C, Img_TimeLimit) == 0x0002A0, "Member 'UBPW_Challenge_Panel_C::Img_TimeLimit' has a wrong offset!");
static_assert(offsetof(UBPW_Challenge_Panel_C, RTB_Briefing) == 0x0002A8, "Member 'UBPW_Challenge_Panel_C::RTB_Briefing' has a wrong offset!");
static_assert(offsetof(UBPW_Challenge_Panel_C, RTB_HighScore) == 0x0002B0, "Member 'UBPW_Challenge_Panel_C::RTB_HighScore' has a wrong offset!");
static_assert(offsetof(UBPW_Challenge_Panel_C, RTB_Objective) == 0x0002B8, "Member 'UBPW_Challenge_Panel_C::RTB_Objective' has a wrong offset!");
static_assert(offsetof(UBPW_Challenge_Panel_C, RTB_Reward) == 0x0002C0, "Member 'UBPW_Challenge_Panel_C::RTB_Reward' has a wrong offset!");
static_assert(offsetof(UBPW_Challenge_Panel_C, RTB_TimeLimit) == 0x0002C8, "Member 'UBPW_Challenge_Panel_C::RTB_TimeLimit' has a wrong offset!");
static_assert(offsetof(UBPW_Challenge_Panel_C, RTB_Title) == 0x0002D0, "Member 'UBPW_Challenge_Panel_C::RTB_Title' has a wrong offset!");
static_assert(offsetof(UBPW_Challenge_Panel_C, RTB_Type) == 0x0002D8, "Member 'UBPW_Challenge_Panel_C::RTB_Type' has a wrong offset!");
static_assert(offsetof(UBPW_Challenge_Panel_C, VBox_DetailList) == 0x0002E0, "Member 'UBPW_Challenge_Panel_C::VBox_DetailList' has a wrong offset!");
static_assert(offsetof(UBPW_Challenge_Panel_C, Stars) == 0x0002E8, "Member 'UBPW_Challenge_Panel_C::Stars' has a wrong offset!");

}

