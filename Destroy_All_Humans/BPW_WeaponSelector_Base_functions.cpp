#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPW_WeaponSelector_Base

#include "Basic.hpp"

#include "BPW_WeaponSelector_Base_classes.hpp"
#include "BPW_WeaponSelector_Base_parameters.hpp"


namespace SDK
{

// Function BPW_WeaponSelector_Base.BPW_WeaponSelector_Base_C.ExecuteUbergraph_BPW_WeaponSelector_Base
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPW_WeaponSelector_Base_C::ExecuteUbergraph_BPW_WeaponSelector_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_WeaponSelector_Base_C", "ExecuteUbergraph_BPW_WeaponSelector_Base");

	Params::BPW_WeaponSelector_Base_C_ExecuteUbergraph_BPW_WeaponSelector_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPW_WeaponSelector_Base.BPW_WeaponSelector_Base_C.OnShowWeaponInformation
// (Event, Public, BlueprintEvent)
// Parameters:
// class UBFGUI_RadialMenu_Option*         _pOption                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    _bShow                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPW_WeaponSelector_Base_C::OnShowWeaponInformation(class UBFGUI_RadialMenu_Option* _pOption, bool _bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_WeaponSelector_Base_C", "OnShowWeaponInformation");

	Params::BPW_WeaponSelector_Base_C_OnShowWeaponInformation Parms{};

	Parms._pOption = _pOption;
	Parms._bShow = _bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPW_WeaponSelector_Base.BPW_WeaponSelector_Base_C.ClearAbilityHints
// (Event, Public, BlueprintEvent)

void UBPW_WeaponSelector_Base_C::ClearAbilityHints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_WeaponSelector_Base_C", "ClearAbilityHints");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPW_WeaponSelector_Base.BPW_WeaponSelector_Base_C.AddHintToLeftWing
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UBFGWeaponSelectorAbilityHint*    _pHint                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   _fAnchorVertical                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   _fAnchorHorizontal                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPW_WeaponSelector_Base_C::AddHintToLeftWing(class UBFGWeaponSelectorAbilityHint* _pHint, float _fAnchorVertical, float _fAnchorHorizontal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_WeaponSelector_Base_C", "AddHintToLeftWing");

	Params::BPW_WeaponSelector_Base_C_AddHintToLeftWing Parms{};

	Parms._pHint = _pHint;
	Parms._fAnchorVertical = _fAnchorVertical;
	Parms._fAnchorHorizontal = _fAnchorHorizontal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPW_WeaponSelector_Base.BPW_WeaponSelector_Base_C.AddHintToRightWing
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UBFGWeaponSelectorAbilityHint*    _pHint                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   _fAnchorVertical                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   _fAnchorHorizontal                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPW_WeaponSelector_Base_C::AddHintToRightWing(class UBFGWeaponSelectorAbilityHint* _pHint, float _fAnchorVertical, float _fAnchorHorizontal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_WeaponSelector_Base_C", "AddHintToRightWing");

	Params::BPW_WeaponSelector_Base_C_AddHintToRightWing Parms{};

	Parms._pHint = _pHint;
	Parms._fAnchorVertical = _fAnchorVertical;
	Parms._fAnchorHorizontal = _fAnchorHorizontal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPW_WeaponSelector_Base.BPW_WeaponSelector_Base_C.SetSelectionWheelBGImage
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FSlateBrush                      _image                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBPW_WeaponSelector_Base_C::SetSelectionWheelBGImage(const struct FSlateBrush& _image)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_WeaponSelector_Base_C", "SetSelectionWheelBGImage");

	Params::BPW_WeaponSelector_Base_C_SetSelectionWheelBGImage Parms{};

	Parms._image = std::move(_image);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPW_WeaponSelector_Base.BPW_WeaponSelector_Base_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPW_WeaponSelector_Base_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_WeaponSelector_Base_C", "Tick");

	Params::BPW_WeaponSelector_Base_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPW_WeaponSelector_Base.BPW_WeaponSelector_Base_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBPW_WeaponSelector_Base_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_WeaponSelector_Base_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPW_WeaponSelector_Base.BPW_WeaponSelector_Base_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPW_WeaponSelector_Base_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_WeaponSelector_Base_C", "PreConstruct");

	Params::BPW_WeaponSelector_Base_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPW_WeaponSelector_Base.BPW_WeaponSelector_Base_C.SetupLock
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Tag                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          Image_lock                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPW_WeaponSelector_Base_C::SetupLock(const struct FGameplayTag& Tag, class UWidget* Image_lock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_WeaponSelector_Base_C", "SetupLock");

	Params::BPW_WeaponSelector_Base_C_SetupLock Parms{};

	Parms.Tag = std::move(Tag);
	Parms.Image_lock = Image_lock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPW_WeaponSelector_Base.BPW_WeaponSelector_Base_C.AddHintToWing
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCanvasPanel*                     InCanvasWing                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBFGWeaponSelectorAbilityHint*    InHint                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InAnchorX                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InAnchorY                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InAlignmentX                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPW_WeaponSelector_Base_C::AddHintToWing(class UCanvasPanel* InCanvasWing, class UBFGWeaponSelectorAbilityHint* InHint, float InAnchorX, float InAnchorY, float InAlignmentX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_WeaponSelector_Base_C", "AddHintToWing");

	Params::BPW_WeaponSelector_Base_C_AddHintToWing Parms{};

	Parms.InCanvasWing = InCanvasWing;
	Parms.InHint = InHint;
	Parms.InAnchorX = InAnchorX;
	Parms.InAnchorY = InAnchorY;
	Parms.InAlignmentX = InAlignmentX;

	UObject::ProcessEvent(Func, &Parms);
}

}

