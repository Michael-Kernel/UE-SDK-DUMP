#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DisintegratorRayBP

#include "Basic.hpp"

#include "BFGCore_structs.hpp"
#include "BFGCore_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass DisintegratorRayBP.DisintegratorRayBP_C
// 0x0018 (0x07F8 - 0x07E0)
class ADisintegratorRayBP_C final : public ABFGWeapon_DisintegratorRay
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x07E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x07E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EWeaponFireAttemptResult                      NewVar_0;                                          // 0x07F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnShotImpact(const struct FHitResult& _oHitResult);
	void OnFailedFireAttempt(EWeaponFireAttemptResult _weaponFireResult);
	void OnWeaponFire(class FName _nSocketName);
	void ExecuteUbergraph_DisintegratorRayBP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DisintegratorRayBP_C">();
	}
	static class ADisintegratorRayBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADisintegratorRayBP_C>();
	}
};
static_assert(alignof(ADisintegratorRayBP_C) == 0x000008, "Wrong alignment on ADisintegratorRayBP_C");
static_assert(sizeof(ADisintegratorRayBP_C) == 0x0007F8, "Wrong size on ADisintegratorRayBP_C");
static_assert(offsetof(ADisintegratorRayBP_C, UberGraphFrame) == 0x0007E0, "Member 'ADisintegratorRayBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ADisintegratorRayBP_C, SkeletalMesh) == 0x0007E8, "Member 'ADisintegratorRayBP_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ADisintegratorRayBP_C, NewVar_0) == 0x0007F0, "Member 'ADisintegratorRayBP_C::NewVar_0' has a wrong offset!");

}

