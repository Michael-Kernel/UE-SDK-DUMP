#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MissionTriggerZone_CustomShape

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BFGCore_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MissionTriggerZone_CustomShape.BP_MissionTriggerZone_CustomShape_C
// 0x0038 (0x05D0 - 0x0598)
class ABP_MissionTriggerZone_CustomShape_C : public ABFGMissionCustomTriggerZone
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0598(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UProceduralMeshComponent*               ProceduralMesh;                                    // 0x05A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       Spline;                                            // 0x05A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        Vertices;                                          // 0x05B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<int32>                                 Triangles;                                         // 0x05C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_MissionTriggerZone_CustomShape(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void CalculateVertices(TArray<struct FSplinePoint>& ReferenceArray, TArray<struct FSplinePoint>& PointArray1, bool UseIndexPlus_Slot1, TArray<struct FSplinePoint>& PointArray2, bool UseIndexPlus_Slot2, TArray<struct FSplinePoint>& PointArray3, bool UseIndexPlus_Slot3);
	void CalculateOuterBounds();
	void DrawDebugLines(TArray<struct FSplinePoint>& SplinePointsInnerBoundsBottom, TArray<struct FSplinePoint>& SplinePointsInnerBoundsTop, TArray<struct FSplinePoint>& SplinePointsOuterBoundsBottom, TArray<struct FSplinePoint>& SplinePointsOuterBoundsTop);
	void DrawLoops(TArray<struct FSplinePoint>& SplinePoints);
	void DrawWalls(TArray<struct FSplinePoint>& SplinePointsBottom, TArray<struct FSplinePoint>& SplinePointsTop);
	void ConvertSplinePointToVector(TArray<struct FSplinePoint>& InArray, TArray<struct FVector>* OutVector);
	void ReverseWinding(TArray<int32>& InTriangles, TArray<int32>* OutTriangles);
	void CalculateCentroids(TArray<struct FSplinePoint>& SplinePointArray, struct FVector* Centroid);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MissionTriggerZone_CustomShape_C">();
	}
	static class ABP_MissionTriggerZone_CustomShape_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MissionTriggerZone_CustomShape_C>();
	}
};
static_assert(alignof(ABP_MissionTriggerZone_CustomShape_C) == 0x000008, "Wrong alignment on ABP_MissionTriggerZone_CustomShape_C");
static_assert(sizeof(ABP_MissionTriggerZone_CustomShape_C) == 0x0005D0, "Wrong size on ABP_MissionTriggerZone_CustomShape_C");
static_assert(offsetof(ABP_MissionTriggerZone_CustomShape_C, UberGraphFrame) == 0x000598, "Member 'ABP_MissionTriggerZone_CustomShape_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MissionTriggerZone_CustomShape_C, ProceduralMesh) == 0x0005A0, "Member 'ABP_MissionTriggerZone_CustomShape_C::ProceduralMesh' has a wrong offset!");
static_assert(offsetof(ABP_MissionTriggerZone_CustomShape_C, Spline) == 0x0005A8, "Member 'ABP_MissionTriggerZone_CustomShape_C::Spline' has a wrong offset!");
static_assert(offsetof(ABP_MissionTriggerZone_CustomShape_C, Vertices) == 0x0005B0, "Member 'ABP_MissionTriggerZone_CustomShape_C::Vertices' has a wrong offset!");
static_assert(offsetof(ABP_MissionTriggerZone_CustomShape_C, Triangles) == 0x0005C0, "Member 'ABP_MissionTriggerZone_CustomShape_C::Triangles' has a wrong offset!");

}

