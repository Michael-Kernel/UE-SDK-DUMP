#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: V2_Car01_AnimBlueprint

#include "Basic.hpp"


namespace SDK::Params
{

// Function V2_Car01_AnimBlueprint.V2_Car01_AnimBlueprint_C.ExecuteUbergraph_V2_Car01_AnimBlueprint
// 0x0010 (0x0010 - 0x0000)
struct V2_Car01_AnimBlueprint_C_ExecuteUbergraph_V2_Car01_AnimBlueprint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(V2_Car01_AnimBlueprint_C_ExecuteUbergraph_V2_Car01_AnimBlueprint) == 0x000004, "Wrong alignment on V2_Car01_AnimBlueprint_C_ExecuteUbergraph_V2_Car01_AnimBlueprint");
static_assert(sizeof(V2_Car01_AnimBlueprint_C_ExecuteUbergraph_V2_Car01_AnimBlueprint) == 0x000010, "Wrong size on V2_Car01_AnimBlueprint_C_ExecuteUbergraph_V2_Car01_AnimBlueprint");
static_assert(offsetof(V2_Car01_AnimBlueprint_C_ExecuteUbergraph_V2_Car01_AnimBlueprint, EntryPoint) == 0x000000, "Member 'V2_Car01_AnimBlueprint_C_ExecuteUbergraph_V2_Car01_AnimBlueprint::EntryPoint' has a wrong offset!");
static_assert(offsetof(V2_Car01_AnimBlueprint_C_ExecuteUbergraph_V2_Car01_AnimBlueprint, K2Node_Event_DeltaTimeX) == 0x000004, "Member 'V2_Car01_AnimBlueprint_C_ExecuteUbergraph_V2_Car01_AnimBlueprint::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(V2_Car01_AnimBlueprint_C_ExecuteUbergraph_V2_Car01_AnimBlueprint, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000008, "Member 'V2_Car01_AnimBlueprint_C_ExecuteUbergraph_V2_Car01_AnimBlueprint::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(V2_Car01_AnimBlueprint_C_ExecuteUbergraph_V2_Car01_AnimBlueprint, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'V2_Car01_AnimBlueprint_C_ExecuteUbergraph_V2_Car01_AnimBlueprint::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(V2_Car01_AnimBlueprint_C_ExecuteUbergraph_V2_Car01_AnimBlueprint, CallFunc_Add_FloatFloat_ReturnValue) == 0x00000C, "Member 'V2_Car01_AnimBlueprint_C_ExecuteUbergraph_V2_Car01_AnimBlueprint::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function V2_Car01_AnimBlueprint.V2_Car01_AnimBlueprint_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct V2_Car01_AnimBlueprint_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(V2_Car01_AnimBlueprint_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on V2_Car01_AnimBlueprint_C_BlueprintUpdateAnimation");
static_assert(sizeof(V2_Car01_AnimBlueprint_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on V2_Car01_AnimBlueprint_C_BlueprintUpdateAnimation");
static_assert(offsetof(V2_Car01_AnimBlueprint_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'V2_Car01_AnimBlueprint_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

}

