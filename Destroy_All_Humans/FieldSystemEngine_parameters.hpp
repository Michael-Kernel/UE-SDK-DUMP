#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FieldSystemEngine

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function FieldSystemEngine.FieldSystemComponent.ApplyLinearForce
// 0x0014 (0x0014 - 0x0000)
struct FieldSystemComponent_ApplyLinearForce final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Direction;                                         // 0x0004(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Magnitude;                                         // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FieldSystemComponent_ApplyLinearForce) == 0x000004, "Wrong alignment on FieldSystemComponent_ApplyLinearForce");
static_assert(sizeof(FieldSystemComponent_ApplyLinearForce) == 0x000014, "Wrong size on FieldSystemComponent_ApplyLinearForce");
static_assert(offsetof(FieldSystemComponent_ApplyLinearForce, Enabled) == 0x000000, "Member 'FieldSystemComponent_ApplyLinearForce::Enabled' has a wrong offset!");
static_assert(offsetof(FieldSystemComponent_ApplyLinearForce, Direction) == 0x000004, "Member 'FieldSystemComponent_ApplyLinearForce::Direction' has a wrong offset!");
static_assert(offsetof(FieldSystemComponent_ApplyLinearForce, Magnitude) == 0x000010, "Member 'FieldSystemComponent_ApplyLinearForce::Magnitude' has a wrong offset!");

// Function FieldSystemEngine.FieldSystemComponent.ApplyRadialForce
// 0x0014 (0x0014 - 0x0000)
struct FieldSystemComponent_ApplyRadialForce final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Position;                                          // 0x0004(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Magnitude;                                         // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FieldSystemComponent_ApplyRadialForce) == 0x000004, "Wrong alignment on FieldSystemComponent_ApplyRadialForce");
static_assert(sizeof(FieldSystemComponent_ApplyRadialForce) == 0x000014, "Wrong size on FieldSystemComponent_ApplyRadialForce");
static_assert(offsetof(FieldSystemComponent_ApplyRadialForce, Enabled) == 0x000000, "Member 'FieldSystemComponent_ApplyRadialForce::Enabled' has a wrong offset!");
static_assert(offsetof(FieldSystemComponent_ApplyRadialForce, Position) == 0x000004, "Member 'FieldSystemComponent_ApplyRadialForce::Position' has a wrong offset!");
static_assert(offsetof(FieldSystemComponent_ApplyRadialForce, Magnitude) == 0x000010, "Member 'FieldSystemComponent_ApplyRadialForce::Magnitude' has a wrong offset!");

// Function FieldSystemEngine.FieldSystemComponent.ApplyRadialVectorFalloffForce
// 0x0018 (0x0018 - 0x0000)
struct FieldSystemComponent_ApplyRadialVectorFalloffForce final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Position;                                          // 0x0004(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Magnitude;                                         // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FieldSystemComponent_ApplyRadialVectorFalloffForce) == 0x000004, "Wrong alignment on FieldSystemComponent_ApplyRadialVectorFalloffForce");
static_assert(sizeof(FieldSystemComponent_ApplyRadialVectorFalloffForce) == 0x000018, "Wrong size on FieldSystemComponent_ApplyRadialVectorFalloffForce");
static_assert(offsetof(FieldSystemComponent_ApplyRadialVectorFalloffForce, Enabled) == 0x000000, "Member 'FieldSystemComponent_ApplyRadialVectorFalloffForce::Enabled' has a wrong offset!");
static_assert(offsetof(FieldSystemComponent_ApplyRadialVectorFalloffForce, Position) == 0x000004, "Member 'FieldSystemComponent_ApplyRadialVectorFalloffForce::Position' has a wrong offset!");
static_assert(offsetof(FieldSystemComponent_ApplyRadialVectorFalloffForce, Radius) == 0x000010, "Member 'FieldSystemComponent_ApplyRadialVectorFalloffForce::Radius' has a wrong offset!");
static_assert(offsetof(FieldSystemComponent_ApplyRadialVectorFalloffForce, Magnitude) == 0x000014, "Member 'FieldSystemComponent_ApplyRadialVectorFalloffForce::Magnitude' has a wrong offset!");

// Function FieldSystemEngine.FieldSystemComponent.ApplyStayDynamicField
// 0x0018 (0x0018 - 0x0000)
struct FieldSystemComponent_ApplyStayDynamicField final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Position;                                          // 0x0004(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxLevelPerCommand;                                // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FieldSystemComponent_ApplyStayDynamicField) == 0x000004, "Wrong alignment on FieldSystemComponent_ApplyStayDynamicField");
static_assert(sizeof(FieldSystemComponent_ApplyStayDynamicField) == 0x000018, "Wrong size on FieldSystemComponent_ApplyStayDynamicField");
static_assert(offsetof(FieldSystemComponent_ApplyStayDynamicField, Enabled) == 0x000000, "Member 'FieldSystemComponent_ApplyStayDynamicField::Enabled' has a wrong offset!");
static_assert(offsetof(FieldSystemComponent_ApplyStayDynamicField, Position) == 0x000004, "Member 'FieldSystemComponent_ApplyStayDynamicField::Position' has a wrong offset!");
static_assert(offsetof(FieldSystemComponent_ApplyStayDynamicField, Radius) == 0x000010, "Member 'FieldSystemComponent_ApplyStayDynamicField::Radius' has a wrong offset!");
static_assert(offsetof(FieldSystemComponent_ApplyStayDynamicField, MaxLevelPerCommand) == 0x000014, "Member 'FieldSystemComponent_ApplyStayDynamicField::MaxLevelPerCommand' has a wrong offset!");

// Function FieldSystemEngine.FieldSystemComponent.ApplyUniformVectorFalloffForce
// 0x0024 (0x0024 - 0x0000)
struct FieldSystemComponent_ApplyUniformVectorFalloffForce final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Position;                                          // 0x0004(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Direction;                                         // 0x0010(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x001C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Magnitude;                                         // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FieldSystemComponent_ApplyUniformVectorFalloffForce) == 0x000004, "Wrong alignment on FieldSystemComponent_ApplyUniformVectorFalloffForce");
static_assert(sizeof(FieldSystemComponent_ApplyUniformVectorFalloffForce) == 0x000024, "Wrong size on FieldSystemComponent_ApplyUniformVectorFalloffForce");
static_assert(offsetof(FieldSystemComponent_ApplyUniformVectorFalloffForce, Enabled) == 0x000000, "Member 'FieldSystemComponent_ApplyUniformVectorFalloffForce::Enabled' has a wrong offset!");
static_assert(offsetof(FieldSystemComponent_ApplyUniformVectorFalloffForce, Position) == 0x000004, "Member 'FieldSystemComponent_ApplyUniformVectorFalloffForce::Position' has a wrong offset!");
static_assert(offsetof(FieldSystemComponent_ApplyUniformVectorFalloffForce, Direction) == 0x000010, "Member 'FieldSystemComponent_ApplyUniformVectorFalloffForce::Direction' has a wrong offset!");
static_assert(offsetof(FieldSystemComponent_ApplyUniformVectorFalloffForce, Radius) == 0x00001C, "Member 'FieldSystemComponent_ApplyUniformVectorFalloffForce::Radius' has a wrong offset!");
static_assert(offsetof(FieldSystemComponent_ApplyUniformVectorFalloffForce, Magnitude) == 0x000020, "Member 'FieldSystemComponent_ApplyUniformVectorFalloffForce::Magnitude' has a wrong offset!");

}

