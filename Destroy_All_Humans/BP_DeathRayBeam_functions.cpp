#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DeathRayBeam

#include "Basic.hpp"

#include "BP_DeathRayBeam_classes.hpp"
#include "BP_DeathRayBeam_parameters.hpp"


namespace SDK
{

// Function BP_DeathRayBeam.BP_DeathRayBeam_C.ExecuteUbergraph_BP_DeathRayBeam
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeathRayBeam_C::ExecuteUbergraph_BP_DeathRayBeam(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathRayBeam_C", "ExecuteUbergraph_BP_DeathRayBeam");

	Params::BP_DeathRayBeam_C_ExecuteUbergraph_BP_DeathRayBeam Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeathRayBeam.BP_DeathRayBeam_C.UpdateBeamOnOcean
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FVector                          _vTargetLocation                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    _bHitTarget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          _vImpactNormal                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeathRayBeam_C::UpdateBeamOnOcean(const struct FVector& _vTargetLocation, bool _bHitTarget, const struct FVector& _vImpactNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathRayBeam_C", "UpdateBeamOnOcean");

	Params::BP_DeathRayBeam_C_UpdateBeamOnOcean Parms{};

	Parms._vTargetLocation = std::move(_vTargetLocation);
	Parms._bHitTarget = _bHitTarget;
	Parms._vImpactNormal = std::move(_vImpactNormal);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeathRayBeam.BP_DeathRayBeam_C.OnWeaponEquipStateChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABFGWeapon*                       _pWeapon                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    _bEnabled                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DeathRayBeam_C::OnWeaponEquipStateChanged(class ABFGWeapon* _pWeapon, bool _bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathRayBeam_C", "OnWeaponEquipStateChanged");

	Params::BP_DeathRayBeam_C_OnWeaponEquipStateChanged Parms{};

	Parms._pWeapon = _pWeapon;
	Parms._bEnabled = _bEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeathRayBeam.BP_DeathRayBeam_C.OnBeamDelayStarted
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FVector                          _vTargetLocation                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    _bHitTarget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    _bHitEnvironment                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          _vImpactNormal                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeathRayBeam_C::OnBeamDelayStarted(const struct FVector& _vTargetLocation, bool _bHitTarget, bool _bHitEnvironment, const struct FVector& _vImpactNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathRayBeam_C", "OnBeamDelayStarted");

	Params::BP_DeathRayBeam_C_OnBeamDelayStarted Parms{};

	Parms._vTargetLocation = std::move(_vTargetLocation);
	Parms._bHitTarget = _bHitTarget;
	Parms._bHitEnvironment = _bHitEnvironment;
	Parms._vImpactNormal = std::move(_vImpactNormal);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeathRayBeam.BP_DeathRayBeam_C.OnHitFoliage
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FHitResult                       _oHitResult                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_DeathRayBeam_C::OnHitFoliage(const struct FHitResult& _oHitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathRayBeam_C", "OnHitFoliage");

	Params::BP_DeathRayBeam_C_OnHitFoliage Parms{};

	Parms._oHitResult = std::move(_oHitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeathRayBeam.BP_DeathRayBeam_C.OnTickDeadzone
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FBFGDeathrayZoneData             _oDeadzone                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void ABP_DeathRayBeam_C::OnTickDeadzone(const struct FBFGDeathrayZoneData& _oDeadzone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathRayBeam_C", "OnTickDeadzone");

	Params::BP_DeathRayBeam_C_OnTickDeadzone Parms{};

	Parms._oDeadzone = std::move(_oDeadzone);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeathRayBeam.BP_DeathRayBeam_C.UpdateBeamWhileInactive
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FVector                          _vTargetLocation                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    _bHitTarget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          _vImpactNormal                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeathRayBeam_C::UpdateBeamWhileInactive(const struct FVector& _vTargetLocation, bool _bHitTarget, const struct FVector& _vImpactNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathRayBeam_C", "UpdateBeamWhileInactive");

	Params::BP_DeathRayBeam_C_UpdateBeamWhileInactive Parms{};

	Parms._vTargetLocation = std::move(_vTargetLocation);
	Parms._bHitTarget = _bHitTarget;
	Parms._vImpactNormal = std::move(_vImpactNormal);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeathRayBeam.BP_DeathRayBeam_C.UpdateBeam
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FVector                          _vTargetLocation                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    _bHitTarget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          _vImpactNormal                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeathRayBeam_C::UpdateBeam(const struct FVector& _vTargetLocation, bool _bHitTarget, const struct FVector& _vImpactNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathRayBeam_C", "UpdateBeam");

	Params::BP_DeathRayBeam_C_UpdateBeam Parms{};

	Parms._vTargetLocation = std::move(_vTargetLocation);
	Parms._bHitTarget = _bHitTarget;
	Parms._vImpactNormal = std::move(_vImpactNormal);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeathRayBeam.BP_DeathRayBeam_C.StopBeam
// (Event, Public, BlueprintEvent)

void ABP_DeathRayBeam_C::StopBeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathRayBeam_C", "StopBeam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DeathRayBeam.BP_DeathRayBeam_C.StartBeam
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FVector                          _vTargetLocation                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    _bHitTarget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    _bHitEnvironment                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          _vImpactNormal                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeathRayBeam_C::StartBeam(const struct FVector& _vTargetLocation, bool _bHitTarget, bool _bHitEnvironment, const struct FVector& _vImpactNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathRayBeam_C", "StartBeam");

	Params::BP_DeathRayBeam_C_StartBeam Parms{};

	Parms._vTargetLocation = std::move(_vTargetLocation);
	Parms._bHitTarget = _bHitTarget;
	Parms._bHitEnvironment = _bHitEnvironment;
	Parms._vImpactNormal = std::move(_vImpactNormal);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeathRayBeam.BP_DeathRayBeam_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeathRayBeam_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathRayBeam_C", "ReceiveTick");

	Params::BP_DeathRayBeam_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeathRayBeam.BP_DeathRayBeam_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_DeathRayBeam_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathRayBeam_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DeathRayBeam.BP_DeathRayBeam_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void ABP_DeathRayBeam_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathRayBeam_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DeathRayBeam.BP_DeathRayBeam_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void ABP_DeathRayBeam_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathRayBeam_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DeathRayBeam.BP_DeathRayBeam_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_DeathRayBeam_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathRayBeam_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DeathRayBeam.BP_DeathRayBeam_C.HandleUpdateBeamVFX
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeathRayBeam_C::HandleUpdateBeamVFX(const struct FVector& Target, const struct FVector& Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathRayBeam_C", "HandleUpdateBeamVFX");

	Params::BP_DeathRayBeam_C_HandleUpdateBeamVFX Parms{};

	Parms.Target = std::move(Target);
	Parms.Source = std::move(Source);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeathRayBeam.BP_DeathRayBeam_C.HandleStartBeam
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          InTargetLocation                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeathRayBeam_C::HandleStartBeam(const struct FVector& InTargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathRayBeam_C", "HandleStartBeam");

	Params::BP_DeathRayBeam_C_HandleStartBeam Parms{};

	Parms.InTargetLocation = std::move(InTargetLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeathRayBeam.BP_DeathRayBeam_C.HandleStopBeam
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_DeathRayBeam_C::HandleStopBeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathRayBeam_C", "HandleStopBeam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DeathRayBeam.BP_DeathRayBeam_C.HandleUpdateBeam
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          InTargetLocation                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InHitTarget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          InImpactNormal                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   BurningDuration                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeathRayBeam_C::HandleUpdateBeam(const struct FVector& InTargetLocation, bool InHitTarget, const struct FVector& InImpactNormal, float BurningDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathRayBeam_C", "HandleUpdateBeam");

	Params::BP_DeathRayBeam_C_HandleUpdateBeam Parms{};

	Parms.InTargetLocation = std::move(InTargetLocation);
	Parms.InHitTarget = InHitTarget;
	Parms.InImpactNormal = std::move(InImpactNormal);
	Parms.BurningDuration = BurningDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeathRayBeam.BP_DeathRayBeam_C.HandleBeamWhenInactive
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          InTargetLocation                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          InTargetNormal                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeathRayBeam_C::HandleBeamWhenInactive(const struct FVector& InTargetLocation, const struct FVector& InTargetNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathRayBeam_C", "HandleBeamWhenInactive");

	Params::BP_DeathRayBeam_C_HandleBeamWhenInactive Parms{};

	Parms.InTargetLocation = std::move(InTargetLocation);
	Parms.InTargetNormal = std::move(InTargetNormal);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeathRayBeam.BP_DeathRayBeam_C.HitWater
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       HitRes                                                 (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_DeathRayBeam_C::HitWater(const struct FHitResult& HitRes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathRayBeam_C", "HitWater");

	Params::BP_DeathRayBeam_C_HitWater Parms{};

	Parms.HitRes = std::move(HitRes);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeathRayBeam.BP_DeathRayBeam_C.HitOcean
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       HitRes                                                 (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_DeathRayBeam_C::HitOcean(const struct FHitResult& HitRes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathRayBeam_C", "HitOcean");

	Params::BP_DeathRayBeam_C_HitOcean Parms{};

	Parms.HitRes = std::move(HitRes);

	UObject::ProcessEvent(Func, &Parms);
}

}

