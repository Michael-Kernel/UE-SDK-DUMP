#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPW_Crosshair_ZapOmatic

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BPW_Crosshair_ZapOmatic.BPW_Crosshair_ZapOMatic_C.Get_Bar_ZapOMatic_Percent_0
// 0x0008 (0x0008 - 0x0000)
struct BPW_Crosshair_ZapOMatic_C_Get_Bar_ZapOMatic_Percent_0 final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAvailableShotRatio_ReturnValue;        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_Crosshair_ZapOMatic_C_Get_Bar_ZapOMatic_Percent_0) == 0x000004, "Wrong alignment on BPW_Crosshair_ZapOMatic_C_Get_Bar_ZapOMatic_Percent_0");
static_assert(sizeof(BPW_Crosshair_ZapOMatic_C_Get_Bar_ZapOMatic_Percent_0) == 0x000008, "Wrong size on BPW_Crosshair_ZapOMatic_C_Get_Bar_ZapOMatic_Percent_0");
static_assert(offsetof(BPW_Crosshair_ZapOMatic_C_Get_Bar_ZapOMatic_Percent_0, ReturnValue) == 0x000000, "Member 'BPW_Crosshair_ZapOMatic_C_Get_Bar_ZapOMatic_Percent_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_Crosshair_ZapOMatic_C_Get_Bar_ZapOMatic_Percent_0, CallFunc_GetAvailableShotRatio_ReturnValue) == 0x000004, "Member 'BPW_Crosshair_ZapOMatic_C_Get_Bar_ZapOMatic_Percent_0::CallFunc_GetAvailableShotRatio_ReturnValue' has a wrong offset!");

// Function BPW_Crosshair_ZapOmatic.BPW_Crosshair_ZapOMatic_C.Tick
// 0x003C (0x003C - 0x0000)
struct BPW_Crosshair_ZapOMatic_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_Crosshair_ZapOMatic_C_Tick) == 0x000004, "Wrong alignment on BPW_Crosshair_ZapOMatic_C_Tick");
static_assert(sizeof(BPW_Crosshair_ZapOMatic_C_Tick) == 0x00003C, "Wrong size on BPW_Crosshair_ZapOMatic_C_Tick");
static_assert(offsetof(BPW_Crosshair_ZapOMatic_C_Tick, MyGeometry) == 0x000000, "Member 'BPW_Crosshair_ZapOMatic_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BPW_Crosshair_ZapOMatic_C_Tick, InDeltaTime) == 0x000038, "Member 'BPW_Crosshair_ZapOMatic_C_Tick::InDeltaTime' has a wrong offset!");

// Function BPW_Crosshair_ZapOmatic.BPW_Crosshair_ZapOMatic_C.WeaponAndAbilitySharedTargetChanged
// 0x0001 (0x0001 - 0x0000)
struct BPW_Crosshair_ZapOMatic_C_WeaponAndAbilitySharedTargetChanged final
{
public:
	bool                                          _bNewValue;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPW_Crosshair_ZapOMatic_C_WeaponAndAbilitySharedTargetChanged) == 0x000001, "Wrong alignment on BPW_Crosshair_ZapOMatic_C_WeaponAndAbilitySharedTargetChanged");
static_assert(sizeof(BPW_Crosshair_ZapOMatic_C_WeaponAndAbilitySharedTargetChanged) == 0x000001, "Wrong size on BPW_Crosshair_ZapOMatic_C_WeaponAndAbilitySharedTargetChanged");
static_assert(offsetof(BPW_Crosshair_ZapOMatic_C_WeaponAndAbilitySharedTargetChanged, _bNewValue) == 0x000000, "Member 'BPW_Crosshair_ZapOMatic_C_WeaponAndAbilitySharedTargetChanged::_bNewValue' has a wrong offset!");

// Function BPW_Crosshair_ZapOmatic.BPW_Crosshair_ZapOMatic_C.ExecuteUbergraph_BPW_Crosshair_ZapOMatic
// 0x0060 (0x0060 - 0x0000)
struct BPW_Crosshair_ZapOMatic_C_ExecuteUbergraph_BPW_Crosshair_ZapOMatic final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool _bNewValue)>              K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0014(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBFGActorComponent_GameplayToHud*       CallFunc_GetOwningGameplayToHud_ReturnValue;       // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent__bNewValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPW_Crosshair_ZapOMatic_C_ExecuteUbergraph_BPW_Crosshair_ZapOMatic) == 0x000008, "Wrong alignment on BPW_Crosshair_ZapOMatic_C_ExecuteUbergraph_BPW_Crosshair_ZapOMatic");
static_assert(sizeof(BPW_Crosshair_ZapOMatic_C_ExecuteUbergraph_BPW_Crosshair_ZapOMatic) == 0x000060, "Wrong size on BPW_Crosshair_ZapOMatic_C_ExecuteUbergraph_BPW_Crosshair_ZapOMatic");
static_assert(offsetof(BPW_Crosshair_ZapOMatic_C_ExecuteUbergraph_BPW_Crosshair_ZapOMatic, EntryPoint) == 0x000000, "Member 'BPW_Crosshair_ZapOMatic_C_ExecuteUbergraph_BPW_Crosshair_ZapOMatic::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPW_Crosshair_ZapOMatic_C_ExecuteUbergraph_BPW_Crosshair_ZapOMatic, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BPW_Crosshair_ZapOMatic_C_ExecuteUbergraph_BPW_Crosshair_ZapOMatic::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPW_Crosshair_ZapOMatic_C_ExecuteUbergraph_BPW_Crosshair_ZapOMatic, K2Node_Event_MyGeometry) == 0x000014, "Member 'BPW_Crosshair_ZapOMatic_C_ExecuteUbergraph_BPW_Crosshair_ZapOMatic::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BPW_Crosshair_ZapOMatic_C_ExecuteUbergraph_BPW_Crosshair_ZapOMatic, K2Node_Event_InDeltaTime) == 0x00004C, "Member 'BPW_Crosshair_ZapOMatic_C_ExecuteUbergraph_BPW_Crosshair_ZapOMatic::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BPW_Crosshair_ZapOMatic_C_ExecuteUbergraph_BPW_Crosshair_ZapOMatic, CallFunc_GetOwningGameplayToHud_ReturnValue) == 0x000050, "Member 'BPW_Crosshair_ZapOMatic_C_ExecuteUbergraph_BPW_Crosshair_ZapOMatic::CallFunc_GetOwningGameplayToHud_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_Crosshair_ZapOMatic_C_ExecuteUbergraph_BPW_Crosshair_ZapOMatic, K2Node_CustomEvent__bNewValue) == 0x000058, "Member 'BPW_Crosshair_ZapOMatic_C_ExecuteUbergraph_BPW_Crosshair_ZapOMatic::K2Node_CustomEvent__bNewValue' has a wrong offset!");
static_assert(offsetof(BPW_Crosshair_ZapOMatic_C_ExecuteUbergraph_BPW_Crosshair_ZapOMatic, CallFunc_IsValid_ReturnValue) == 0x000059, "Member 'BPW_Crosshair_ZapOMatic_C_ExecuteUbergraph_BPW_Crosshair_ZapOMatic::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

