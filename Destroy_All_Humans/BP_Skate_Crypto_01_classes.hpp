#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Skate_Crypto_01

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BFGCore_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Skate_Crypto_01.BP_Skate_Crypto_01_C
// 0x0080 (0x04C8 - 0x0448)
class ABP_Skate_Crypto_01_C final : public ABFGEffectActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0448(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_thruster_BL;                                    // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_thruster_BR;                                    // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 PlayerMesh_Ref;                                    // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPoseableMeshComponent*                 PosableMesh_Ref;                                   // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Ripple_Main;                                    // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Splash;                                            // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               SplashLeft;                                        // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                New_Velocity;                                      // 0x0490(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Old_velocity;                                      // 0x049C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                New_acceleration;                                  // 0x04A8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Current_acceleration;                              // 0x04B4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InitializedStaticMeshes;                           // 0x04C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void InitializeStaticMeshes();
	void ReceiveTick(float DeltaSeconds);
	void OnTriggerEffect();
	void OnStopEffect();
	void ExecuteUbergraph_BP_Skate_Crypto_01(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Skate_Crypto_01_C">();
	}
	static class ABP_Skate_Crypto_01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Skate_Crypto_01_C>();
	}
};
static_assert(alignof(ABP_Skate_Crypto_01_C) == 0x000008, "Wrong alignment on ABP_Skate_Crypto_01_C");
static_assert(sizeof(ABP_Skate_Crypto_01_C) == 0x0004C8, "Wrong size on ABP_Skate_Crypto_01_C");
static_assert(offsetof(ABP_Skate_Crypto_01_C, UberGraphFrame) == 0x000448, "Member 'ABP_Skate_Crypto_01_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Skate_Crypto_01_C, DefaultSceneRoot) == 0x000450, "Member 'ABP_Skate_Crypto_01_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Skate_Crypto_01_C, SM_thruster_BL) == 0x000458, "Member 'ABP_Skate_Crypto_01_C::SM_thruster_BL' has a wrong offset!");
static_assert(offsetof(ABP_Skate_Crypto_01_C, SM_thruster_BR) == 0x000460, "Member 'ABP_Skate_Crypto_01_C::SM_thruster_BR' has a wrong offset!");
static_assert(offsetof(ABP_Skate_Crypto_01_C, PlayerMesh_Ref) == 0x000468, "Member 'ABP_Skate_Crypto_01_C::PlayerMesh_Ref' has a wrong offset!");
static_assert(offsetof(ABP_Skate_Crypto_01_C, PosableMesh_Ref) == 0x000470, "Member 'ABP_Skate_Crypto_01_C::PosableMesh_Ref' has a wrong offset!");
static_assert(offsetof(ABP_Skate_Crypto_01_C, SM_Ripple_Main) == 0x000478, "Member 'ABP_Skate_Crypto_01_C::SM_Ripple_Main' has a wrong offset!");
static_assert(offsetof(ABP_Skate_Crypto_01_C, Splash) == 0x000480, "Member 'ABP_Skate_Crypto_01_C::Splash' has a wrong offset!");
static_assert(offsetof(ABP_Skate_Crypto_01_C, SplashLeft) == 0x000488, "Member 'ABP_Skate_Crypto_01_C::SplashLeft' has a wrong offset!");
static_assert(offsetof(ABP_Skate_Crypto_01_C, New_Velocity) == 0x000490, "Member 'ABP_Skate_Crypto_01_C::New_Velocity' has a wrong offset!");
static_assert(offsetof(ABP_Skate_Crypto_01_C, Old_velocity) == 0x00049C, "Member 'ABP_Skate_Crypto_01_C::Old_velocity' has a wrong offset!");
static_assert(offsetof(ABP_Skate_Crypto_01_C, New_acceleration) == 0x0004A8, "Member 'ABP_Skate_Crypto_01_C::New_acceleration' has a wrong offset!");
static_assert(offsetof(ABP_Skate_Crypto_01_C, Current_acceleration) == 0x0004B4, "Member 'ABP_Skate_Crypto_01_C::Current_acceleration' has a wrong offset!");
static_assert(offsetof(ABP_Skate_Crypto_01_C, InitializedStaticMeshes) == 0x0004C0, "Member 'ABP_Skate_Crypto_01_C::InitializedStaticMeshes' has a wrong offset!");

}

