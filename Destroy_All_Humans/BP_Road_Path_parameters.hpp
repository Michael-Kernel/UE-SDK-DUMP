#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Road_Path

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BP_Enum_SliceRule_structs.hpp"
#include "Engine_structs.hpp"
#include "BP_Enum_RoadSliceType_structs.hpp"
#include "BP_Struct_SplineMeshBuilder_structs.hpp"


namespace SDK::Params
{

// Function BP_Road_Path.BP_Road_Path_C.UserConstructionScript
// 0x0360 (0x0360 - 0x0000)
struct BP_Road_Path_C_UserConstructionScript final
{
public:
	int32                                         NewLocalVar_1;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              OnStartScaleShift;                                 // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              OnEndScaleShift;                                   // 0x000C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       LeftSplineHelper;                                  // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       RightSplineHelper;                                 // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        LeftHotSpline;                                     // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FVector>                        RightHotSpline;                                    // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_SetDeltaRotator_ReturnValue;              // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_Array_Get_Item1;                          // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_SetDeltaRotator_ReturnValue1;             // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0150(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue2;                  // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 K2Node_MakeArray_Array;                            // 0x01A0(0x0010)(ZeroConstructor, ReferenceParm)
	float                                         CallFunc_Array_Get_Item2;                          // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Stripe_Spline_Info_Location__local_;      // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Stripe_Spline_Info_Location__world_;      // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Stripe_Spline_Info_Tangent;               // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Stripe_Spline_Info_RightVector;           // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Stripe_Spline_Info_roll;                  // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Stripe_Spline_Info_direction;             // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0xC];                                      // 0x01F4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Stripe_Spline_Info_ReturnValue;           // 0x0200(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Get_Item3;                          // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x024C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x0264(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0280(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B1[0x3];                                      // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x02B4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        K2Node_MakeArray_Array1;                           // 0x0340(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351[0x3];                                      // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Build_Spline_chunksProcessed;             // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Road_Path_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_Road_Path_C_UserConstructionScript");
static_assert(sizeof(BP_Road_Path_C_UserConstructionScript) == 0x000360, "Wrong size on BP_Road_Path_C_UserConstructionScript");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, NewLocalVar_1) == 0x000000, "Member 'BP_Road_Path_C_UserConstructionScript::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, OnStartScaleShift) == 0x000004, "Member 'BP_Road_Path_C_UserConstructionScript::OnStartScaleShift' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, OnEndScaleShift) == 0x00000C, "Member 'BP_Road_Path_C_UserConstructionScript::OnEndScaleShift' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, LeftSplineHelper) == 0x000018, "Member 'BP_Road_Path_C_UserConstructionScript::LeftSplineHelper' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, RightSplineHelper) == 0x000020, "Member 'BP_Road_Path_C_UserConstructionScript::RightSplineHelper' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, LeftHotSpline) == 0x000028, "Member 'BP_Road_Path_C_UserConstructionScript::LeftHotSpline' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, RightHotSpline) == 0x000038, "Member 'BP_Road_Path_C_UserConstructionScript::RightHotSpline' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_Road_Path_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_Conv_IntToBool_ReturnValue) == 0x00004C, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_SelectInt_ReturnValue) == 0x000050, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, K2Node_SwitchEnum_CmpSuccess) == 0x000054, "Member 'BP_Road_Path_C_UserConstructionScript::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'BP_Road_Path_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, Temp_int_Array_Index_Variable1) == 0x000060, "Member 'BP_Road_Path_C_UserConstructionScript::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_SetDeltaRotator_ReturnValue) == 0x0000A0, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_SetDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_Array_Get_Item1) == 0x0000D0, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_SetDeltaRotator_ReturnValue1) == 0x000100, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_SetDeltaRotator_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000130, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue1) == 0x00013C, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000148, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, Temp_struct_Variable) == 0x000150, "Member 'BP_Road_Path_C_UserConstructionScript::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue2) == 0x000180, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue) == 0x000190, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_GetSplineLength_ReturnValue) == 0x000198, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x0001A0, "Member 'BP_Road_Path_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_Array_Get_Item2) == 0x0001B0, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_Stripe_Spline_Info_Location__local_) == 0x0001B4, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_Stripe_Spline_Info_Location__local_' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_Stripe_Spline_Info_Location__world_) == 0x0001C0, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_Stripe_Spline_Info_Location__world_' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_Stripe_Spline_Info_Tangent) == 0x0001CC, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_Stripe_Spline_Info_Tangent' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_Stripe_Spline_Info_RightVector) == 0x0001D8, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_Stripe_Spline_Info_RightVector' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_Stripe_Spline_Info_roll) == 0x0001E4, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_Stripe_Spline_Info_roll' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_Stripe_Spline_Info_direction) == 0x0001E8, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_Stripe_Spline_Info_direction' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_Stripe_Spline_Info_ReturnValue) == 0x000200, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_Stripe_Spline_Info_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_Array_Get_Item3) == 0x000230, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_Multiply_VectorInt_ReturnValue) == 0x000234, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_MakeRotator_ReturnValue) == 0x000240, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue) == 0x00024C, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000258, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue1) == 0x000264, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000270, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue1) == 0x00027C, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_MakeTransform_ReturnValue) == 0x000280, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x0002B0, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x0002B4, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, Temp_int_Loop_Counter_Variable1) == 0x00033C, "Member 'BP_Road_Path_C_UserConstructionScript::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, K2Node_MakeArray_Array1) == 0x000340, "Member 'BP_Road_Path_C_UserConstructionScript::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue1) == 0x000350, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue1) == 0x000354, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_UserConstructionScript, CallFunc_Build_Spline_chunksProcessed) == 0x000358, "Member 'BP_Road_Path_C_UserConstructionScript::CallFunc_Build_Spline_chunksProcessed' has a wrong offset!");

// Function BP_Road_Path.BP_Road_Path_C.Add SplineMesh
// 0x0580 (0x0580 - 0x0000)
struct BP_Road_Path_C_Add_SplineMesh final
{
public:
	class USplineComponent*                       Spline;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Mesh;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Start;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         End;                                               // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SideOffset;                                        // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HeightOffset;                                      // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         N;                                                 // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFlip;                                             // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   SplineMesh;                                        // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Local_endScale;                                    // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Local_startScale;                                  // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          Local_currentInstance;                             // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Local_endRoll;                                     // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Local_startRoll;                                   // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Local_endScaleX;                                   // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Local_ScaleY;                                      // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Local_startScaleX;                                 // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Local_endTangent;                                  // 0x0064(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Local_endPos;                                      // 0x0070(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Local_startPos;                                    // 0x007C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Local_startTangent;                                // 0x0088(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   SpawnedMesh;                                       // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue1;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X2;                           // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y2;                           // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z2;                           // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue2;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue3;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue1;                // 0x00EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0110(0x0030)(IsPlainOldData, NoDestructor)
	class UStaticMesh*                            CallFunc_Get_Custom_Mesh_Builder_MeshInSlot;       // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Custom_Mesh_Builder_bIsEmptySlot;     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Custom_Mesh_Builder_bFlip;            // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14A[0x2];                                      // 0x014A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Get_Custom_Mesh_Builder_offsetStartEnd;   // 0x014C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Custom_Mesh_Builder_bCastShadow;      // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Custom_Mesh_Builder_bEnableCollision; // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_156[0x2];                                      // 0x0156(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UHierarchicalInstancedStaticMeshComponent* CallFunc_AddComponent_ReturnValue;                 // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0178(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class UHierarchicalInstancedStaticMeshComponent*> CallFunc_GetComponentsByTag_ReturnValue;           // 0x0188(0x0010)(ZeroConstructor, ReferenceParm)
	class UHierarchicalInstancedStaticMeshComponent* CallFunc_Array_Get_Item;                           // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpAxis_ReturnValue;                    // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BE[0x2];                                      // 0x01BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            CallFunc_Get_Custom_Mesh_Builder_MeshInSlot1;      // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Custom_Mesh_Builder_bIsEmptySlot1;    // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Custom_Mesh_Builder_bFlip1;           // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CA[0x2];                                      // 0x01CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Get_Custom_Mesh_Builder_offsetStartEnd1;  // 0x01CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Custom_Mesh_Builder_bCastShadow1;     // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Custom_Mesh_Builder_bEnableCollision1; // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D6[0x2];                                      // 0x01D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetScaleAtDistanceAlongSpline_ReturnValue; // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetScaleAtDistanceAlongSpline_ReturnValue1; // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue4;         // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue5;         // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegreesToRadians_ReturnValue;             // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegreesToRadians_ReturnValue1;            // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegreesToRadians_ReturnValue2;            // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegreesToRadians_ReturnValue3;            // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Stripe_Spline_Info_Location__local_;      // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Stripe_Spline_Info_Location__world_;      // 0x0224(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Stripe_Spline_Info_Tangent;               // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Stripe_Spline_Info_RightVector;           // 0x023C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Stripe_Spline_Info_roll;                  // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Stripe_Spline_Info_direction;             // 0x024C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_258[0x8];                                      // 0x0258(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Stripe_Spline_Info_ReturnValue;           // 0x0260(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue1;               // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0xF];                                      // 0x0291(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Get_Custom_Chunk_Transform_outTransform;  // 0x02A0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_AddInstanceWorldSpace_ReturnValue;        // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x02D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x02E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x02EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x02F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x0304(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Stripe_Spline_Info_Location__local_1;     // 0x0310(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Stripe_Spline_Info_Location__world_1;     // 0x031C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Stripe_Spline_Info_Tangent1;              // 0x0328(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Stripe_Spline_Info_RightVector1;          // 0x0334(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Stripe_Spline_Info_roll1;                 // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Stripe_Spline_Info_direction1;            // 0x0344(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_Stripe_Spline_Info_ReturnValue1;          // 0x0350(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue2;                  // 0x0380(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue1;               // 0x0390(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue2;        // 0x03C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CC[0x4];                                      // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue1;                // 0x03D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x03D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue2;            // 0x03E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x03F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue3;            // 0x03FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_408[0x8];                                      // 0x0408(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue2;               // 0x0410(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Normal_ReturnValue1;                      // 0x0440(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextRenderComponent*                   CallFunc_AddComponent_ReturnValue2;                // 0x0450(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue3;        // 0x0458(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0464(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue1;          // 0x04EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC[0x4];                                      // 0x04FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0500(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_519[0x3];                                      // 0x0519(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x051C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue1;                // 0x052C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_539[0x3];                                      // 0x0539(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select1_Default;                            // 0x053C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x0544(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBP_Enum_RoadSliceType                        Temp_byte_Variable;                                // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_549[0x3];                                      // 0x0549(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select2_Default;                            // 0x054C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x0554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0558(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue6;         // 0x055C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0564(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue1;                        // 0x0568(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x056C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56D[0x3];                                      // 0x056D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue1;                      // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue1;              // 0x0574(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable1;                               // 0x0575(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_576[0x2];                                      // 0x0576(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 K2Node_MakeStruct_Color;                           // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable2;                               // 0x057C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x057D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             K2Node_Select3_Default;                            // 0x057E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Road_Path_C_Add_SplineMesh) == 0x000010, "Wrong alignment on BP_Road_Path_C_Add_SplineMesh");
static_assert(sizeof(BP_Road_Path_C_Add_SplineMesh) == 0x000580, "Wrong size on BP_Road_Path_C_Add_SplineMesh");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, Spline) == 0x000000, "Member 'BP_Road_Path_C_Add_SplineMesh::Spline' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, Mesh) == 0x000008, "Member 'BP_Road_Path_C_Add_SplineMesh::Mesh' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, Start) == 0x000010, "Member 'BP_Road_Path_C_Add_SplineMesh::Start' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, End) == 0x000014, "Member 'BP_Road_Path_C_Add_SplineMesh::End' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, SideOffset) == 0x000018, "Member 'BP_Road_Path_C_Add_SplineMesh::SideOffset' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, HeightOffset) == 0x00001C, "Member 'BP_Road_Path_C_Add_SplineMesh::HeightOffset' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, N) == 0x000020, "Member 'BP_Road_Path_C_Add_SplineMesh::N' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, bFlip) == 0x000024, "Member 'BP_Road_Path_C_Add_SplineMesh::bFlip' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, SplineMesh) == 0x000028, "Member 'BP_Road_Path_C_Add_SplineMesh::SplineMesh' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, Local_endScale) == 0x000030, "Member 'BP_Road_Path_C_Add_SplineMesh::Local_endScale' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, Local_startScale) == 0x00003C, "Member 'BP_Road_Path_C_Add_SplineMesh::Local_startScale' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, Local_currentInstance) == 0x000048, "Member 'BP_Road_Path_C_Add_SplineMesh::Local_currentInstance' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, Local_endRoll) == 0x000050, "Member 'BP_Road_Path_C_Add_SplineMesh::Local_endRoll' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, Local_startRoll) == 0x000054, "Member 'BP_Road_Path_C_Add_SplineMesh::Local_startRoll' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, Local_endScaleX) == 0x000058, "Member 'BP_Road_Path_C_Add_SplineMesh::Local_endScaleX' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, Local_ScaleY) == 0x00005C, "Member 'BP_Road_Path_C_Add_SplineMesh::Local_ScaleY' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, Local_startScaleX) == 0x000060, "Member 'BP_Road_Path_C_Add_SplineMesh::Local_startScaleX' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, Local_endTangent) == 0x000064, "Member 'BP_Road_Path_C_Add_SplineMesh::Local_endTangent' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, Local_endPos) == 0x000070, "Member 'BP_Road_Path_C_Add_SplineMesh::Local_endPos' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, Local_startPos) == 0x00007C, "Member 'BP_Road_Path_C_Add_SplineMesh::Local_startPos' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, Local_startTangent) == 0x000088, "Member 'BP_Road_Path_C_Add_SplineMesh::Local_startTangent' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, SpawnedMesh) == 0x000098, "Member 'BP_Road_Path_C_Add_SplineMesh::SpawnedMesh' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_BreakVector_X) == 0x0000A0, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_BreakVector_Y) == 0x0000A4, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_BreakVector_Z) == 0x0000A8, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_BreakVector_X1) == 0x0000AC, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_BreakVector_Y1) == 0x0000B0, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_BreakVector_Z1) == 0x0000B4, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_SelectFloat_ReturnValue) == 0x0000B8, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_SelectFloat_ReturnValue1) == 0x0000BC, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_SelectFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000C0, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x0000C4, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_MakeVector2D_ReturnValue) == 0x0000C8, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_BreakVector_X2) == 0x0000D0, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_BreakVector_X2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_BreakVector_Y2) == 0x0000D4, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_BreakVector_Y2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_BreakVector_Z2) == 0x0000D8, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_BreakVector_Z2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_SelectFloat_ReturnValue2) == 0x0000DC, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_SelectFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x0000E0, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_SelectFloat_ReturnValue3) == 0x0000E4, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_SelectFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x0000E8, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_MakeVector2D_ReturnValue1) == 0x0000EC, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_MakeVector2D_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_MakeVector_ReturnValue) == 0x0000F4, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_MakeVector_ReturnValue1) == 0x000100, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_MakeTransform_ReturnValue) == 0x000110, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Get_Custom_Mesh_Builder_MeshInSlot) == 0x000140, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Get_Custom_Mesh_Builder_MeshInSlot' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Get_Custom_Mesh_Builder_bIsEmptySlot) == 0x000148, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Get_Custom_Mesh_Builder_bIsEmptySlot' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Get_Custom_Mesh_Builder_bFlip) == 0x000149, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Get_Custom_Mesh_Builder_bFlip' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Get_Custom_Mesh_Builder_offsetStartEnd) == 0x00014C, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Get_Custom_Mesh_Builder_offsetStartEnd' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Get_Custom_Mesh_Builder_bCastShadow) == 0x000154, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Get_Custom_Mesh_Builder_bCastShadow' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Get_Custom_Mesh_Builder_bEnableCollision) == 0x000155, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Get_Custom_Mesh_Builder_bEnableCollision' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_AddComponent_ReturnValue) == 0x000158, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_GetDisplayName_ReturnValue) == 0x000160, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Conv_StringToName_ReturnValue) == 0x000170, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, K2Node_MakeArray_Array) == 0x000178, "Member 'BP_Road_Path_C_Add_SplineMesh::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_GetComponentsByTag_ReturnValue) == 0x000188, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Array_Get_Item) == 0x000198, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_SetStaticMesh_ReturnValue) == 0x0001A0, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Array_Add_ReturnValue) == 0x0001A4, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_GetUpAxis_ReturnValue) == 0x0001A8, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_GetUpAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0001B4, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Array_Find_ReturnValue) == 0x0001B8, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, K2Node_SwitchEnum_CmpSuccess) == 0x0001BC, "Member 'BP_Road_Path_C_Add_SplineMesh::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001BD, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Get_Custom_Mesh_Builder_MeshInSlot1) == 0x0001C0, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Get_Custom_Mesh_Builder_MeshInSlot1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Get_Custom_Mesh_Builder_bIsEmptySlot1) == 0x0001C8, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Get_Custom_Mesh_Builder_bIsEmptySlot1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Get_Custom_Mesh_Builder_bFlip1) == 0x0001C9, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Get_Custom_Mesh_Builder_bFlip1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Get_Custom_Mesh_Builder_offsetStartEnd1) == 0x0001CC, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Get_Custom_Mesh_Builder_offsetStartEnd1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Get_Custom_Mesh_Builder_bCastShadow1) == 0x0001D4, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Get_Custom_Mesh_Builder_bCastShadow1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Get_Custom_Mesh_Builder_bEnableCollision1) == 0x0001D5, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Get_Custom_Mesh_Builder_bEnableCollision1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_BreakVector2D_X) == 0x0001D8, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_BreakVector2D_Y) == 0x0001DC, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Add_FloatFloat_ReturnValue) == 0x0001E0, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Add_FloatFloat_ReturnValue1) == 0x0001E4, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_GetScaleAtDistanceAlongSpline_ReturnValue) == 0x0001E8, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_GetScaleAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_GetScaleAtDistanceAlongSpline_ReturnValue1) == 0x0001F4, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_GetScaleAtDistanceAlongSpline_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Multiply_FloatFloat_ReturnValue4) == 0x000200, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Multiply_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Multiply_FloatFloat_ReturnValue5) == 0x000204, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Multiply_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_DegreesToRadians_ReturnValue) == 0x000208, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_DegreesToRadians_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_DegreesToRadians_ReturnValue1) == 0x00020C, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_DegreesToRadians_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_DegreesToRadians_ReturnValue2) == 0x000210, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_DegreesToRadians_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_DegreesToRadians_ReturnValue3) == 0x000214, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_DegreesToRadians_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Stripe_Spline_Info_Location__local_) == 0x000218, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Stripe_Spline_Info_Location__local_' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Stripe_Spline_Info_Location__world_) == 0x000224, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Stripe_Spline_Info_Location__world_' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Stripe_Spline_Info_Tangent) == 0x000230, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Stripe_Spline_Info_Tangent' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Stripe_Spline_Info_RightVector) == 0x00023C, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Stripe_Spline_Info_RightVector' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Stripe_Spline_Info_roll) == 0x000248, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Stripe_Spline_Info_roll' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Stripe_Spline_Info_direction) == 0x00024C, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Stripe_Spline_Info_direction' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Stripe_Spline_Info_ReturnValue) == 0x000260, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Stripe_Spline_Info_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_SetStaticMesh_ReturnValue1) == 0x000290, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_SetStaticMesh_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Get_Custom_Chunk_Transform_outTransform) == 0x0002A0, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Get_Custom_Chunk_Transform_outTransform' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_AddInstanceWorldSpace_ReturnValue) == 0x0002D0, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_AddInstanceWorldSpace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0002D4, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Normal_ReturnValue) == 0x0002E0, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Add_VectorVector_ReturnValue) == 0x0002EC, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x0002F8, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Multiply_VectorInt_ReturnValue) == 0x000304, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Stripe_Spline_Info_Location__local_1) == 0x000310, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Stripe_Spline_Info_Location__local_1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Stripe_Spline_Info_Location__world_1) == 0x00031C, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Stripe_Spline_Info_Location__world_1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Stripe_Spline_Info_Tangent1) == 0x000328, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Stripe_Spline_Info_Tangent1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Stripe_Spline_Info_RightVector1) == 0x000334, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Stripe_Spline_Info_RightVector1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Stripe_Spline_Info_roll1) == 0x000340, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Stripe_Spline_Info_roll1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Stripe_Spline_Info_direction1) == 0x000344, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Stripe_Spline_Info_direction1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Stripe_Spline_Info_ReturnValue1) == 0x000350, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Stripe_Spline_Info_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_MakeVector_ReturnValue2) == 0x000380, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_MakeVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_MakeTransform_ReturnValue1) == 0x000390, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_MakeTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Multiply_VectorFloat_ReturnValue2) == 0x0003C0, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Multiply_VectorFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_AddComponent_ReturnValue1) == 0x0003D0, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_AddComponent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Add_VectorVector_ReturnValue1) == 0x0003D8, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Add_VectorVector_ReturnValue2) == 0x0003E4, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Add_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Divide_VectorFloat_ReturnValue) == 0x0003F0, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Add_VectorVector_ReturnValue3) == 0x0003FC, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Add_VectorVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_MakeTransform_ReturnValue2) == 0x000410, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_MakeTransform_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Normal_ReturnValue1) == 0x000440, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Normal_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_AddComponent_ReturnValue2) == 0x000450, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_AddComponent_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Multiply_VectorFloat_ReturnValue3) == 0x000458, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Multiply_VectorFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000464, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Multiply_VectorInt_ReturnValue1) == 0x0004EC, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Multiply_VectorInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0004F8, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Conv_IntToText_ReturnValue) == 0x000500, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, Temp_bool_Variable) == 0x000518, "Member 'BP_Road_Path_C_Add_SplineMesh::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_SelectVector_ReturnValue) == 0x00051C, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, K2Node_Select_Default) == 0x000528, "Member 'BP_Road_Path_C_Add_SplineMesh::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_SelectVector_ReturnValue1) == 0x00052C, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_SelectVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, Temp_bool_Variable1) == 0x000538, "Member 'BP_Road_Path_C_Add_SplineMesh::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, K2Node_Select1_Default) == 0x00053C, "Member 'BP_Road_Path_C_Add_SplineMesh::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, Temp_float_Variable) == 0x000540, "Member 'BP_Road_Path_C_Add_SplineMesh::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, Temp_float_Variable1) == 0x000544, "Member 'BP_Road_Path_C_Add_SplineMesh::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, Temp_byte_Variable) == 0x000548, "Member 'BP_Road_Path_C_Add_SplineMesh::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, K2Node_Select2_Default) == 0x00054C, "Member 'BP_Road_Path_C_Add_SplineMesh::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Array_LastIndex_ReturnValue) == 0x000550, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x000554, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000558, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Multiply_FloatFloat_ReturnValue6) == 0x00055C, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Multiply_FloatFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Lerp_ReturnValue) == 0x000560, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_FTrunc_ReturnValue) == 0x000564, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Lerp_ReturnValue1) == 0x000568, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Lerp_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Conv_IntToByte_ReturnValue) == 0x00056C, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_FTrunc_ReturnValue1) == 0x000570, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_FTrunc_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, CallFunc_Conv_IntToByte_ReturnValue1) == 0x000574, "Member 'BP_Road_Path_C_Add_SplineMesh::CallFunc_Conv_IntToByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, Temp_byte_Variable1) == 0x000575, "Member 'BP_Road_Path_C_Add_SplineMesh::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, K2Node_MakeStruct_Color) == 0x000578, "Member 'BP_Road_Path_C_Add_SplineMesh::K2Node_MakeStruct_Color' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, Temp_byte_Variable2) == 0x00057C, "Member 'BP_Road_Path_C_Add_SplineMesh::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, Temp_bool_Variable2) == 0x00057D, "Member 'BP_Road_Path_C_Add_SplineMesh::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Add_SplineMesh, K2Node_Select3_Default) == 0x00057E, "Member 'BP_Road_Path_C_Add_SplineMesh::K2Node_Select3_Default' has a wrong offset!");

// Function BP_Road_Path.BP_Road_Path_C.Stripe Spline Info
// 0x0100 (0x0100 - 0x0000)
struct BP_Road_Path_C_Stripe_Spline_Info final
{
public:
	class USplineComponent*                       Spline;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         QueriedDistance;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location__local_;                                  // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location__world_;                                  // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Tangent;                                           // 0x0024(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RightVector;                                       // 0x0030(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Roll;                                              // 0x003C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0040(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ReturnValue;                                       // 0x0050(0x0030)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue; // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue; // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetRollAtDistanceAlongSpline_ReturnValue; // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVectorAtDistanceAlongSpline_ReturnValue; // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue; // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue1; // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Road_Path_C_Stripe_Spline_Info) == 0x000010, "Wrong alignment on BP_Road_Path_C_Stripe_Spline_Info");
static_assert(sizeof(BP_Road_Path_C_Stripe_Spline_Info) == 0x000100, "Wrong size on BP_Road_Path_C_Stripe_Spline_Info");
static_assert(offsetof(BP_Road_Path_C_Stripe_Spline_Info, Spline) == 0x000000, "Member 'BP_Road_Path_C_Stripe_Spline_Info::Spline' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Stripe_Spline_Info, QueriedDistance) == 0x000008, "Member 'BP_Road_Path_C_Stripe_Spline_Info::QueriedDistance' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Stripe_Spline_Info, Location__local_) == 0x00000C, "Member 'BP_Road_Path_C_Stripe_Spline_Info::Location__local_' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Stripe_Spline_Info, Location__world_) == 0x000018, "Member 'BP_Road_Path_C_Stripe_Spline_Info::Location__world_' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Stripe_Spline_Info, Tangent) == 0x000024, "Member 'BP_Road_Path_C_Stripe_Spline_Info::Tangent' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Stripe_Spline_Info, RightVector) == 0x000030, "Member 'BP_Road_Path_C_Stripe_Spline_Info::RightVector' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Stripe_Spline_Info, Roll) == 0x00003C, "Member 'BP_Road_Path_C_Stripe_Spline_Info::Roll' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Stripe_Spline_Info, Direction) == 0x000040, "Member 'BP_Road_Path_C_Stripe_Spline_Info::Direction' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Stripe_Spline_Info, ReturnValue) == 0x000050, "Member 'BP_Road_Path_C_Stripe_Spline_Info::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Stripe_Spline_Info, CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue) == 0x000080, "Member 'BP_Road_Path_C_Stripe_Spline_Info::CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Stripe_Spline_Info, CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue) == 0x000090, "Member 'BP_Road_Path_C_Stripe_Spline_Info::CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Stripe_Spline_Info, CallFunc_GetRollAtDistanceAlongSpline_ReturnValue) == 0x0000C0, "Member 'BP_Road_Path_C_Stripe_Spline_Info::CallFunc_GetRollAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Stripe_Spline_Info, CallFunc_GetRightVectorAtDistanceAlongSpline_ReturnValue) == 0x0000C4, "Member 'BP_Road_Path_C_Stripe_Spline_Info::CallFunc_GetRightVectorAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Stripe_Spline_Info, CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue) == 0x0000D0, "Member 'BP_Road_Path_C_Stripe_Spline_Info::CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Stripe_Spline_Info, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x0000DC, "Member 'BP_Road_Path_C_Stripe_Spline_Info::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Stripe_Spline_Info, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue1) == 0x0000E8, "Member 'BP_Road_Path_C_Stripe_Spline_Info::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue1' has a wrong offset!");

// Function BP_Road_Path.BP_Road_Path_C.Build Spline
// 0x0340 (0x0340 - 0x0000)
struct BP_Road_Path_C_Build_Spline final
{
public:
	int32                                         ChunksProcessed;                                   // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Local_deltaShift;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Local_mismatchSegments;                            // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Loca_;                                             // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Local_chunksProcessed;                             // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Local_normalizedChunkLenght;                       // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Local_currentPathLimit;                            // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Local_lastDistance;                                // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Local_chunkPointer;                                // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Local_distanceCovered;                             // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Local_pathTotalLenght;                             // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaLength;                                       // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberOfChunks;                                    // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ChunkLenght;                                       // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable1;                                // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable2;                                // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue1;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MinOfIntArray_IndexOfMinValue;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MinOfIntArray_MinValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Get_Item;                           // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item1;                          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue1;             // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SignOfInteger_ReturnValue;                // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue2;             // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue1;             // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable3;                                // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue3;             // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue4;             // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue1;              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue;                    // 0x00FC(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X1;                           // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBP_Enum_SliceRule                            Temp_byte_Variable;                                // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable4;                                // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue5;             // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue6;             // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue; // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue1; // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue2;           // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMod_Remainder;                           // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue;                         // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue4;                  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable5;                                // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue2; // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue3; // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue5;                  // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue4; // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue5; // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue1;                         // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue1;     // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue7;             // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue1;            // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A5[0x3];                                      // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue6;                  // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            CallFunc_Get_Custom_Mesh_Builder_MeshInSlot;       // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Custom_Mesh_Builder_bIsEmptySlot;     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Custom_Mesh_Builder_bFlip;            // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C2[0x2];                                      // 0x01C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Get_Custom_Mesh_Builder_offsetStartEnd;   // 0x01C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Custom_Mesh_Builder_bCastShadow;      // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Custom_Mesh_Builder_bEnableCollision; // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CE[0x2];                                      // 0x01CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue2;              // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue3;              // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue4;              // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue1;                      // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue7;                  // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue2;         // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue2;                         // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F5[0x3];                                      // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_Add_SplineMesh_splineMesh;                // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue6; // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue7; // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplineMeshAxis                               Temp_byte_Variable1;                               // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue3;         // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Correct_Chunk_Size_CorrectedChunkSize;    // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue2;     // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue8;             // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue2;            // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21D[0x3];                                      // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSplineLength_ReturnValue1;             // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X2;                           // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y2;                           // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z2;                           // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue1;                   // 0x0234(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X3;                           // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y3;                           // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z3;                           // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25D[0x3];                                      // 0x025D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X4;                           // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y4;                           // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z4;                           // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBP_Enum_SliceRule                            Temp_byte_Variable2;                               // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable6;                                // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable7;                                // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0285(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_286[0x2];                                      // 0x0286(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue5;              // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select1_Default;                            // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue1;           // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue6;              // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue7;              // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue2;                   // 0x029C(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X5;                           // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y5;                           // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z5;                           // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue4;         // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue4;         // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D1[0x3];                                      // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue5;         // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMod_Remainder1;                          // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue1;                        // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue1;                         // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue8;                  // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2ED[0x3];                                      // 0x02ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue9;                  // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable8;                                // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue10;                 // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select2_Default;                            // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue9;             // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue2;           // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue3;            // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            CallFunc_Get_Custom_Mesh_Builder_MeshInSlot1;      // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Custom_Mesh_Builder_bIsEmptySlot1;    // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Custom_Mesh_Builder_bFlip1;           // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31A[0x2];                                      // 0x031A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Get_Custom_Mesh_Builder_offsetStartEnd1;  // 0x031C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Custom_Mesh_Builder_bCastShadow1;     // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Custom_Mesh_Builder_bEnableCollision1; // 0x0325(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_326[0x2];                                      // 0x0326(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue8;              // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_Add_SplineMesh_splineMesh1;               // 0x0338(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Road_Path_C_Build_Spline) == 0x000010, "Wrong alignment on BP_Road_Path_C_Build_Spline");
static_assert(sizeof(BP_Road_Path_C_Build_Spline) == 0x000340, "Wrong size on BP_Road_Path_C_Build_Spline");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, ChunksProcessed) == 0x000000, "Member 'BP_Road_Path_C_Build_Spline::ChunksProcessed' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, Local_deltaShift) == 0x000004, "Member 'BP_Road_Path_C_Build_Spline::Local_deltaShift' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, Local_mismatchSegments) == 0x000008, "Member 'BP_Road_Path_C_Build_Spline::Local_mismatchSegments' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, Loca_) == 0x000018, "Member 'BP_Road_Path_C_Build_Spline::Loca_' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, Local_chunksProcessed) == 0x00001C, "Member 'BP_Road_Path_C_Build_Spline::Local_chunksProcessed' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, Local_normalizedChunkLenght) == 0x000020, "Member 'BP_Road_Path_C_Build_Spline::Local_normalizedChunkLenght' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, Local_currentPathLimit) == 0x000024, "Member 'BP_Road_Path_C_Build_Spline::Local_currentPathLimit' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, Local_lastDistance) == 0x000028, "Member 'BP_Road_Path_C_Build_Spline::Local_lastDistance' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, Local_chunkPointer) == 0x00002C, "Member 'BP_Road_Path_C_Build_Spline::Local_chunkPointer' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, Local_distanceCovered) == 0x000030, "Member 'BP_Road_Path_C_Build_Spline::Local_distanceCovered' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, Local_pathTotalLenght) == 0x000034, "Member 'BP_Road_Path_C_Build_Spline::Local_pathTotalLenght' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, DeltaLength) == 0x000038, "Member 'BP_Road_Path_C_Build_Spline::DeltaLength' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, NumberOfChunks) == 0x00003C, "Member 'BP_Road_Path_C_Build_Spline::NumberOfChunks' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, ChunkLenght) == 0x000040, "Member 'BP_Road_Path_C_Build_Spline::ChunkLenght' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, Temp_bool_Has_Been_Initd_Variable) == 0x000044, "Member 'BP_Road_Path_C_Build_Spline::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, Temp_int_Variable) == 0x000048, "Member 'BP_Road_Path_C_Build_Spline::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, Temp_int_Variable1) == 0x00004C, "Member 'BP_Road_Path_C_Build_Spline::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BP_Road_Path_C_Build_Spline::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00005C, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, Temp_int_Variable2) == 0x000060, "Member 'BP_Road_Path_C_Build_Spline::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Subtract_IntInt_ReturnValue) == 0x000064, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_EqualEqual_IntInt_ReturnValue1) == 0x000068, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_EqualEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Greater_IntInt_ReturnValue) == 0x000069, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Add_IntInt_ReturnValue1) == 0x00006C, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_MinOfIntArray_IndexOfMinValue) == 0x000070, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_MinOfIntArray_IndexOfMinValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_MinOfIntArray_MinValue) == 0x000074, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_MinOfIntArray_MinValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_MakeTransform_ReturnValue) == 0x000080, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Array_Get_Item1) == 0x0000B4, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Array_Add_ReturnValue) == 0x0000B8, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000BC, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_MakeLiteralInt_ReturnValue) == 0x0000C4, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Subtract_IntInt_ReturnValue1) == 0x0000C8, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Subtract_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x0000CC, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_SignOfInteger_ReturnValue) == 0x0000D0, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_SignOfInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Subtract_IntInt_ReturnValue2) == 0x0000D4, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Subtract_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_NotEqual_IntInt_ReturnValue1) == 0x0000D8, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_NotEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, Temp_int_Variable3) == 0x0000DC, "Member 'BP_Road_Path_C_Build_Spline::Temp_int_Variable3' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Subtract_IntInt_ReturnValue3) == 0x0000E0, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Subtract_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Subtract_IntInt_ReturnValue4) == 0x0000E4, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Subtract_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Greater_IntInt_ReturnValue1) == 0x0000E8, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Greater_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Add_IntInt_ReturnValue2) == 0x0000EC, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_BreakVector_X) == 0x0000F0, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_BreakVector_Y) == 0x0000F4, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_BreakVector_Z) == 0x0000F8, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_GetBounds_ReturnValue) == 0x0000FC, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_GetBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_BreakVector_X1) == 0x000118, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_BreakVector_Y1) == 0x00011C, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_BreakVector_Z1) == 0x000120, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, Temp_byte_Variable) == 0x000124, "Member 'BP_Road_Path_C_Build_Spline::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000128, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x00012C, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Add_IntInt_ReturnValue3) == 0x000130, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, Temp_int_Variable4) == 0x000134, "Member 'BP_Road_Path_C_Build_Spline::Temp_int_Variable4' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Subtract_IntInt_ReturnValue5) == 0x000138, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Subtract_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, K2Node_SwitchEnum_CmpSuccess) == 0x00013C, "Member 'BP_Road_Path_C_Build_Spline::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Subtract_IntInt_ReturnValue6) == 0x000140, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Subtract_IntInt_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue) == 0x000144, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue1) == 0x000148, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_EqualEqual_IntInt_ReturnValue2) == 0x00014C, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_EqualEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000150, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Abs_ReturnValue) == 0x000154, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_FMod_Remainder) == 0x000158, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_FMod_Remainder' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_FMod_ReturnValue) == 0x00015C, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_FMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000160, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000164, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000168, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Max_ReturnValue) == 0x00016C, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Add_IntInt_ReturnValue4) == 0x000170, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Add_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x000174, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_GetSplineLength_ReturnValue) == 0x000178, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, Temp_int_Variable5) == 0x00017C, "Member 'BP_Road_Path_C_Build_Spline::Temp_int_Variable5' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue2) == 0x000180, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue3) == 0x000184, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Add_IntInt_ReturnValue5) == 0x000188, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Add_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue4) == 0x00018C, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue5) == 0x000190, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x000194, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Abs_ReturnValue1) == 0x000198, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Abs_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_GetNumberOfSplinePoints_ReturnValue1) == 0x00019C, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_GetNumberOfSplinePoints_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Subtract_IntInt_ReturnValue7) == 0x0001A0, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Subtract_IntInt_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_LessEqual_IntInt_ReturnValue1) == 0x0001A4, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_LessEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Add_IntInt_ReturnValue6) == 0x0001A8, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Add_IntInt_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, Temp_bool_IsClosed_Variable) == 0x0001AC, "Member 'BP_Road_Path_C_Build_Spline::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0001B0, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Add_FloatFloat_ReturnValue) == 0x0001B4, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Get_Custom_Mesh_Builder_MeshInSlot) == 0x0001B8, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Get_Custom_Mesh_Builder_MeshInSlot' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Get_Custom_Mesh_Builder_bIsEmptySlot) == 0x0001C0, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Get_Custom_Mesh_Builder_bIsEmptySlot' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Get_Custom_Mesh_Builder_bFlip) == 0x0001C1, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Get_Custom_Mesh_Builder_bFlip' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Get_Custom_Mesh_Builder_offsetStartEnd) == 0x0001C4, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Get_Custom_Mesh_Builder_offsetStartEnd' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Get_Custom_Mesh_Builder_bCastShadow) == 0x0001CC, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Get_Custom_Mesh_Builder_bCastShadow' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Get_Custom_Mesh_Builder_bEnableCollision) == 0x0001CD, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Get_Custom_Mesh_Builder_bEnableCollision' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Add_FloatFloat_ReturnValue1) == 0x0001D0, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Add_FloatFloat_ReturnValue2) == 0x0001D4, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Add_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_FClamp_ReturnValue) == 0x0001D8, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Add_FloatFloat_ReturnValue3) == 0x0001DC, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Add_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Add_FloatFloat_ReturnValue4) == 0x0001E0, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Add_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_FClamp_ReturnValue1) == 0x0001E4, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_FClamp_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Add_IntInt_ReturnValue7) == 0x0001E8, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Add_IntInt_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Subtract_FloatFloat_ReturnValue2) == 0x0001EC, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Subtract_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Abs_ReturnValue2) == 0x0001F0, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Abs_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001F4, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Add_SplineMesh_splineMesh) == 0x0001F8, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Add_SplineMesh_splineMesh' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue6) == 0x000200, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue7) == 0x000204, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, Temp_byte_Variable1) == 0x000208, "Member 'BP_Road_Path_C_Build_Spline::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Subtract_FloatFloat_ReturnValue3) == 0x00020C, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Subtract_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Correct_Chunk_Size_CorrectedChunkSize) == 0x000210, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Correct_Chunk_Size_CorrectedChunkSize' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_GetNumberOfSplinePoints_ReturnValue2) == 0x000214, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_GetNumberOfSplinePoints_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Subtract_IntInt_ReturnValue8) == 0x000218, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Subtract_IntInt_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_LessEqual_IntInt_ReturnValue2) == 0x00021C, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_LessEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_GetSplineLength_ReturnValue1) == 0x000220, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_GetSplineLength_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_BreakVector_X2) == 0x000224, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_BreakVector_X2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_BreakVector_Y2) == 0x000228, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_BreakVector_Y2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_BreakVector_Z2) == 0x00022C, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_BreakVector_Z2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, K2Node_SwitchEnum1_CmpSuccess) == 0x000230, "Member 'BP_Road_Path_C_Build_Spline::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_GetBounds_ReturnValue1) == 0x000234, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_GetBounds_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_BreakVector_X3) == 0x000250, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_BreakVector_X3' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_BreakVector_Y3) == 0x000254, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_BreakVector_Y3' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_BreakVector_Z3) == 0x000258, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_BreakVector_Z3' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Less_FloatFloat_ReturnValue) == 0x00025C, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, K2Node_Select_Default) == 0x000260, "Member 'BP_Road_Path_C_Build_Spline::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000264, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x000268, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_BreakVector_X4) == 0x00026C, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_BreakVector_X4' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_BreakVector_Y4) == 0x000270, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_BreakVector_Y4' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_BreakVector_Z4) == 0x000274, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_BreakVector_Z4' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, Temp_byte_Variable2) == 0x000278, "Member 'BP_Road_Path_C_Build_Spline::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, Temp_int_Variable6) == 0x00027C, "Member 'BP_Road_Path_C_Build_Spline::Temp_int_Variable6' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, Temp_int_Variable7) == 0x000280, "Member 'BP_Road_Path_C_Build_Spline::Temp_int_Variable7' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000284, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Not_PreBool_ReturnValue) == 0x000285, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Add_FloatFloat_ReturnValue5) == 0x000288, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Add_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, K2Node_Select1_Default) == 0x00028C, "Member 'BP_Road_Path_C_Build_Spline::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Multiply_IntFloat_ReturnValue1) == 0x000290, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Multiply_IntFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Add_FloatFloat_ReturnValue6) == 0x000294, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Add_FloatFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Add_FloatFloat_ReturnValue7) == 0x000298, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Add_FloatFloat_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_GetBounds_ReturnValue2) == 0x00029C, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_GetBounds_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_FMin_ReturnValue) == 0x0002B8, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_BreakVector_X5) == 0x0002BC, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_BreakVector_X5' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_BreakVector_Y5) == 0x0002C0, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_BreakVector_Y5' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_BreakVector_Z5) == 0x0002C4, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_BreakVector_Z5' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Subtract_FloatFloat_ReturnValue4) == 0x0002C8, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Subtract_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Multiply_FloatFloat_ReturnValue4) == 0x0002CC, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Multiply_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0002D0, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Multiply_FloatFloat_ReturnValue5) == 0x0002D4, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Multiply_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_FMod_Remainder1) == 0x0002D8, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_FMod_Remainder1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_FMod_ReturnValue1) == 0x0002DC, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_FMod_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, Temp_int_Loop_Counter_Variable) == 0x0002E0, "Member 'BP_Road_Path_C_Build_Spline::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Max_ReturnValue1) == 0x0002E4, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Max_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Add_IntInt_ReturnValue8) == 0x0002E8, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Add_IntInt_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Less_IntInt_ReturnValue1) == 0x0002EC, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Add_IntInt_ReturnValue9) == 0x0002F0, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Add_IntInt_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, Temp_int_Variable8) == 0x0002F4, "Member 'BP_Road_Path_C_Build_Spline::Temp_int_Variable8' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Add_IntInt_ReturnValue10) == 0x0002F8, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Add_IntInt_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, K2Node_Select2_Default) == 0x0002FC, "Member 'BP_Road_Path_C_Build_Spline::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Subtract_IntInt_ReturnValue9) == 0x000300, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Subtract_IntInt_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Multiply_IntFloat_ReturnValue2) == 0x000304, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Multiply_IntFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_LessEqual_IntInt_ReturnValue3) == 0x000308, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_LessEqual_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Get_Custom_Mesh_Builder_MeshInSlot1) == 0x000310, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Get_Custom_Mesh_Builder_MeshInSlot1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Get_Custom_Mesh_Builder_bIsEmptySlot1) == 0x000318, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Get_Custom_Mesh_Builder_bIsEmptySlot1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Get_Custom_Mesh_Builder_bFlip1) == 0x000319, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Get_Custom_Mesh_Builder_bFlip1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Get_Custom_Mesh_Builder_offsetStartEnd1) == 0x00031C, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Get_Custom_Mesh_Builder_offsetStartEnd1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Get_Custom_Mesh_Builder_bCastShadow1) == 0x000324, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Get_Custom_Mesh_Builder_bCastShadow1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Get_Custom_Mesh_Builder_bEnableCollision1) == 0x000325, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Get_Custom_Mesh_Builder_bEnableCollision1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_BreakVector2D_X) == 0x000328, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_BreakVector2D_Y) == 0x00032C, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Add_FloatFloat_ReturnValue8) == 0x000330, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Add_FloatFloat_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Build_Spline, CallFunc_Add_SplineMesh_splineMesh1) == 0x000338, "Member 'BP_Road_Path_C_Build_Spline::CallFunc_Add_SplineMesh_splineMesh1' has a wrong offset!");

// Function BP_Road_Path.BP_Road_Path_C.Apply Vertex Color
// 0x0098 (0x0098 - 0x0000)
struct BP_Road_Path_C_Apply_Vertex_Color final
{
public:
	bool                                          bIsTip;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   Mesh;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsRight;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsLeft;                                           // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor1;                    // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor2;                    // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor3;                    // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor4;                    // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor5;                    // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor6;                    // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor7;                    // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Road_Path_C_Apply_Vertex_Color) == 0x000008, "Wrong alignment on BP_Road_Path_C_Apply_Vertex_Color");
static_assert(sizeof(BP_Road_Path_C_Apply_Vertex_Color) == 0x000098, "Wrong size on BP_Road_Path_C_Apply_Vertex_Color");
static_assert(offsetof(BP_Road_Path_C_Apply_Vertex_Color, bIsTip) == 0x000000, "Member 'BP_Road_Path_C_Apply_Vertex_Color::bIsTip' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Apply_Vertex_Color, Mesh) == 0x000008, "Member 'BP_Road_Path_C_Apply_Vertex_Color::Mesh' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Apply_Vertex_Color, bIsRight) == 0x000010, "Member 'BP_Road_Path_C_Apply_Vertex_Color::bIsRight' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Apply_Vertex_Color, bIsLeft) == 0x000011, "Member 'BP_Road_Path_C_Apply_Vertex_Color::bIsLeft' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Apply_Vertex_Color, K2Node_MakeStruct_LinearColor) == 0x000014, "Member 'BP_Road_Path_C_Apply_Vertex_Color::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Apply_Vertex_Color, K2Node_MakeStruct_LinearColor1) == 0x000024, "Member 'BP_Road_Path_C_Apply_Vertex_Color::K2Node_MakeStruct_LinearColor1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Apply_Vertex_Color, K2Node_MakeStruct_LinearColor2) == 0x000034, "Member 'BP_Road_Path_C_Apply_Vertex_Color::K2Node_MakeStruct_LinearColor2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Apply_Vertex_Color, K2Node_MakeStruct_LinearColor3) == 0x000044, "Member 'BP_Road_Path_C_Apply_Vertex_Color::K2Node_MakeStruct_LinearColor3' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Apply_Vertex_Color, K2Node_MakeStruct_LinearColor4) == 0x000054, "Member 'BP_Road_Path_C_Apply_Vertex_Color::K2Node_MakeStruct_LinearColor4' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Apply_Vertex_Color, K2Node_MakeStruct_LinearColor5) == 0x000064, "Member 'BP_Road_Path_C_Apply_Vertex_Color::K2Node_MakeStruct_LinearColor5' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Apply_Vertex_Color, K2Node_MakeStruct_LinearColor6) == 0x000074, "Member 'BP_Road_Path_C_Apply_Vertex_Color::K2Node_MakeStruct_LinearColor6' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Apply_Vertex_Color, K2Node_MakeStruct_LinearColor7) == 0x000084, "Member 'BP_Road_Path_C_Apply_Vertex_Color::K2Node_MakeStruct_LinearColor7' has a wrong offset!");

// Function BP_Road_Path.BP_Road_Path_C.Snap Points
// 0x0128 (0x0128 - 0x0000)
struct BP_Road_Path_C_Snap_Points final
{
public:
	float                                         CheckRadius;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0010(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array1;                           // 0x0050(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Get_Item1;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array2;                           // 0x0068(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array3;                           // 0x0088(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item2;                          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            CallFunc_SphereOverlapComponents_OutComponents;    // 0x00C0(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_SphereOverlapComponents_ReturnValue;      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item3;                          // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue1;     // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Road_Path_C_Snap_Points) == 0x000008, "Wrong alignment on BP_Road_Path_C_Snap_Points");
static_assert(sizeof(BP_Road_Path_C_Snap_Points) == 0x000128, "Wrong size on BP_Road_Path_C_Snap_Points");
static_assert(offsetof(BP_Road_Path_C_Snap_Points, CheckRadius) == 0x000000, "Member 'BP_Road_Path_C_Snap_Points::CheckRadius' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Snap_Points, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_Road_Path_C_Snap_Points::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Snap_Points, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_Road_Path_C_Snap_Points::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Snap_Points, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Road_Path_C_Snap_Points::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Snap_Points, Temp_object_Variable) == 0x000010, "Member 'BP_Road_Path_C_Snap_Points::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Snap_Points, CallFunc_MakeVector_ReturnValue) == 0x000020, "Member 'BP_Road_Path_C_Snap_Points::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Snap_Points, K2Node_MakeArray_Array) == 0x000030, "Member 'BP_Road_Path_C_Snap_Points::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Snap_Points, CallFunc_MakeVector_ReturnValue1) == 0x000040, "Member 'BP_Road_Path_C_Snap_Points::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Snap_Points, CallFunc_Array_Get_Item) == 0x00004C, "Member 'BP_Road_Path_C_Snap_Points::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Snap_Points, K2Node_MakeArray_Array1) == 0x000050, "Member 'BP_Road_Path_C_Snap_Points::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Snap_Points, CallFunc_Array_Get_Item1) == 0x000060, "Member 'BP_Road_Path_C_Snap_Points::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Snap_Points, K2Node_MakeArray_Array2) == 0x000068, "Member 'BP_Road_Path_C_Snap_Points::K2Node_MakeArray_Array2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Snap_Points, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000078, "Member 'BP_Road_Path_C_Snap_Points::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Snap_Points, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x00007C, "Member 'BP_Road_Path_C_Snap_Points::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Snap_Points, CallFunc_Subtract_IntInt_ReturnValue) == 0x000080, "Member 'BP_Road_Path_C_Snap_Points::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Snap_Points, K2Node_MakeArray_Array3) == 0x000088, "Member 'BP_Road_Path_C_Snap_Points::K2Node_MakeArray_Array3' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Snap_Points, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'BP_Road_Path_C_Snap_Points::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Snap_Points, CallFunc_Array_Get_Item2) == 0x00009C, "Member 'BP_Road_Path_C_Snap_Points::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Snap_Points, CallFunc_Less_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_Road_Path_C_Snap_Points::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Snap_Points, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x0000A4, "Member 'BP_Road_Path_C_Snap_Points::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Snap_Points, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000B0, "Member 'BP_Road_Path_C_Snap_Points::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Snap_Points, CallFunc_SphereOverlapComponents_OutComponents) == 0x0000C0, "Member 'BP_Road_Path_C_Snap_Points::CallFunc_SphereOverlapComponents_OutComponents' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Snap_Points, CallFunc_SphereOverlapComponents_ReturnValue) == 0x0000D0, "Member 'BP_Road_Path_C_Snap_Points::CallFunc_SphereOverlapComponents_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Snap_Points, CallFunc_Array_Get_Item3) == 0x0000D8, "Member 'BP_Road_Path_C_Snap_Points::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Snap_Points, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000E0, "Member 'BP_Road_Path_C_Snap_Points::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Snap_Points, CallFunc_GetUpVector_ReturnValue) == 0x0000EC, "Member 'BP_Road_Path_C_Snap_Points::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Snap_Points, CallFunc_Add_VectorVector_ReturnValue) == 0x0000F8, "Member 'BP_Road_Path_C_Snap_Points::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Snap_Points, CallFunc_GetForwardVector_ReturnValue) == 0x000104, "Member 'BP_Road_Path_C_Snap_Points::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Snap_Points, CallFunc_K2_GetComponentLocation_ReturnValue1) == 0x000110, "Member 'BP_Road_Path_C_Snap_Points::CallFunc_K2_GetComponentLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Snap_Points, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00011C, "Member 'BP_Road_Path_C_Snap_Points::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function BP_Road_Path.BP_Road_Path_C.Get Custom Mesh Builder
// 0x0070 (0x0070 - 0x0000)
struct BP_Road_Path_C_Get_Custom_Mesh_Builder final
{
public:
	int32                                         N;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            MeshInSlot;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsEmptySlot;                                      // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bFlip;                                             // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              OffsetStartEnd;                                    // 0x0014(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCastShadow;                                       // 0x001C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bEnableCollision;                                  // 0x001D(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBP_Struct_SplineMeshBuilder           CallFunc_Array_Get_Item;                           // 0x0020(0x0018)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FBP_Struct_SplineMeshBuilder           CallFunc_Array_Get_Item1;                          // 0x0038(0x0018)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FBP_Struct_SplineMeshBuilder           CallFunc_Array_Get_Item2;                          // 0x0050(0x0018)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Road_Path_C_Get_Custom_Mesh_Builder) == 0x000008, "Wrong alignment on BP_Road_Path_C_Get_Custom_Mesh_Builder");
static_assert(sizeof(BP_Road_Path_C_Get_Custom_Mesh_Builder) == 0x000070, "Wrong size on BP_Road_Path_C_Get_Custom_Mesh_Builder");
static_assert(offsetof(BP_Road_Path_C_Get_Custom_Mesh_Builder, N) == 0x000000, "Member 'BP_Road_Path_C_Get_Custom_Mesh_Builder::N' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Get_Custom_Mesh_Builder, MeshInSlot) == 0x000008, "Member 'BP_Road_Path_C_Get_Custom_Mesh_Builder::MeshInSlot' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Get_Custom_Mesh_Builder, bIsEmptySlot) == 0x000010, "Member 'BP_Road_Path_C_Get_Custom_Mesh_Builder::bIsEmptySlot' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Get_Custom_Mesh_Builder, bFlip) == 0x000011, "Member 'BP_Road_Path_C_Get_Custom_Mesh_Builder::bFlip' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Get_Custom_Mesh_Builder, OffsetStartEnd) == 0x000014, "Member 'BP_Road_Path_C_Get_Custom_Mesh_Builder::OffsetStartEnd' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Get_Custom_Mesh_Builder, bCastShadow) == 0x00001C, "Member 'BP_Road_Path_C_Get_Custom_Mesh_Builder::bCastShadow' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Get_Custom_Mesh_Builder, bEnableCollision) == 0x00001D, "Member 'BP_Road_Path_C_Get_Custom_Mesh_Builder::bEnableCollision' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Get_Custom_Mesh_Builder, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_Road_Path_C_Get_Custom_Mesh_Builder::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Get_Custom_Mesh_Builder, CallFunc_Array_Get_Item1) == 0x000038, "Member 'BP_Road_Path_C_Get_Custom_Mesh_Builder::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Get_Custom_Mesh_Builder, CallFunc_Array_Get_Item2) == 0x000050, "Member 'BP_Road_Path_C_Get_Custom_Mesh_Builder::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Get_Custom_Mesh_Builder, CallFunc_Array_LastIndex_ReturnValue) == 0x000068, "Member 'BP_Road_Path_C_Get_Custom_Mesh_Builder::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Get_Custom_Mesh_Builder, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00006C, "Member 'BP_Road_Path_C_Get_Custom_Mesh_Builder::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Get_Custom_Mesh_Builder, CallFunc_IsValid_ReturnValue) == 0x00006D, "Member 'BP_Road_Path_C_Get_Custom_Mesh_Builder::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Road_Path.BP_Road_Path_C.PrintError
// 0x0040 (0x0040 - 0x0000)
struct BP_Road_Path_C_PrintError final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Road_Path_C_PrintError) == 0x000008, "Wrong alignment on BP_Road_Path_C_PrintError");
static_assert(sizeof(BP_Road_Path_C_PrintError) == 0x000040, "Wrong size on BP_Road_Path_C_PrintError");
static_assert(offsetof(BP_Road_Path_C_PrintError, Message) == 0x000000, "Member 'BP_Road_Path_C_PrintError::Message' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_PrintError, CallFunc_GetDisplayName_ReturnValue) == 0x000010, "Member 'BP_Road_Path_C_PrintError::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_PrintError, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'BP_Road_Path_C_PrintError::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_PrintError, CallFunc_Concat_StrStr_ReturnValue1) == 0x000030, "Member 'BP_Road_Path_C_PrintError::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");

// Function BP_Road_Path.BP_Road_Path_C.Get Custom Chunk Transform
// 0x0330 (0x0330 - 0x0000)
struct BP_Road_Path_C_Get_Custom_Chunk_Transform final
{
public:
	int32                                         N;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CurrentTransform;                                  // 0x0010(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FTransform                             OutTransform;                                      // 0x0040(0x0030)(ConstParm, Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FTransform                             NewLocalVar_0;                                     // 0x0070(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_Array_Get_Item1;                          // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_Array_Get_Item2;                          // 0x0130(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0160(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_Array_Get_Item3;                          // 0x0190(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01C0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_Array_Get_Item4;                          // 0x01F0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_TransformTransform_ReturnValue; // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0xF];                                      // 0x0221(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item5;                          // 0x0230(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ConvertTransformToRelative_ReturnValue;   // 0x0260(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_Array_Get_Item6;                          // 0x0290(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_TransformTransform_ReturnValue1; // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1[0xF];                                      // 0x02C1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item7;                          // 0x02D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue1;           // 0x0300(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Road_Path_C_Get_Custom_Chunk_Transform) == 0x000010, "Wrong alignment on BP_Road_Path_C_Get_Custom_Chunk_Transform");
static_assert(sizeof(BP_Road_Path_C_Get_Custom_Chunk_Transform) == 0x000330, "Wrong size on BP_Road_Path_C_Get_Custom_Chunk_Transform");
static_assert(offsetof(BP_Road_Path_C_Get_Custom_Chunk_Transform, N) == 0x000000, "Member 'BP_Road_Path_C_Get_Custom_Chunk_Transform::N' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Get_Custom_Chunk_Transform, CurrentTransform) == 0x000010, "Member 'BP_Road_Path_C_Get_Custom_Chunk_Transform::CurrentTransform' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Get_Custom_Chunk_Transform, OutTransform) == 0x000040, "Member 'BP_Road_Path_C_Get_Custom_Chunk_Transform::OutTransform' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Get_Custom_Chunk_Transform, NewLocalVar_0) == 0x000070, "Member 'BP_Road_Path_C_Get_Custom_Chunk_Transform::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Get_Custom_Chunk_Transform, CallFunc_GetTransform_ReturnValue) == 0x0000A0, "Member 'BP_Road_Path_C_Get_Custom_Chunk_Transform::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Get_Custom_Chunk_Transform, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'BP_Road_Path_C_Get_Custom_Chunk_Transform::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Get_Custom_Chunk_Transform, CallFunc_Array_Get_Item1) == 0x000100, "Member 'BP_Road_Path_C_Get_Custom_Chunk_Transform::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Get_Custom_Chunk_Transform, CallFunc_Array_Get_Item2) == 0x000130, "Member 'BP_Road_Path_C_Get_Custom_Chunk_Transform::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Get_Custom_Chunk_Transform, CallFunc_ComposeTransforms_ReturnValue) == 0x000160, "Member 'BP_Road_Path_C_Get_Custom_Chunk_Transform::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Get_Custom_Chunk_Transform, CallFunc_Array_Get_Item3) == 0x000190, "Member 'BP_Road_Path_C_Get_Custom_Chunk_Transform::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Get_Custom_Chunk_Transform, CallFunc_MakeTransform_ReturnValue) == 0x0001C0, "Member 'BP_Road_Path_C_Get_Custom_Chunk_Transform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Get_Custom_Chunk_Transform, CallFunc_Array_Get_Item4) == 0x0001F0, "Member 'BP_Road_Path_C_Get_Custom_Chunk_Transform::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Get_Custom_Chunk_Transform, CallFunc_EqualEqual_TransformTransform_ReturnValue) == 0x000220, "Member 'BP_Road_Path_C_Get_Custom_Chunk_Transform::CallFunc_EqualEqual_TransformTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Get_Custom_Chunk_Transform, CallFunc_Array_Get_Item5) == 0x000230, "Member 'BP_Road_Path_C_Get_Custom_Chunk_Transform::CallFunc_Array_Get_Item5' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Get_Custom_Chunk_Transform, CallFunc_ConvertTransformToRelative_ReturnValue) == 0x000260, "Member 'BP_Road_Path_C_Get_Custom_Chunk_Transform::CallFunc_ConvertTransformToRelative_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Get_Custom_Chunk_Transform, CallFunc_Array_Get_Item6) == 0x000290, "Member 'BP_Road_Path_C_Get_Custom_Chunk_Transform::CallFunc_Array_Get_Item6' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Get_Custom_Chunk_Transform, CallFunc_EqualEqual_TransformTransform_ReturnValue1) == 0x0002C0, "Member 'BP_Road_Path_C_Get_Custom_Chunk_Transform::CallFunc_EqualEqual_TransformTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Get_Custom_Chunk_Transform, CallFunc_Array_Get_Item7) == 0x0002D0, "Member 'BP_Road_Path_C_Get_Custom_Chunk_Transform::CallFunc_Array_Get_Item7' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Get_Custom_Chunk_Transform, CallFunc_ComposeTransforms_ReturnValue1) == 0x000300, "Member 'BP_Road_Path_C_Get_Custom_Chunk_Transform::CallFunc_ComposeTransforms_ReturnValue1' has a wrong offset!");

// Function BP_Road_Path.BP_Road_Path_C.Transform to Point
// 0x0100 (0x0100 - 0x0000)
struct BP_Road_Path_C_Transform_to_Point final
{
public:
	struct FTransform                             InTransform;                                       // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                          bAdd;                                              // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0xF];                                       // 0x0031(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ReturnValue;                                       // 0x0040(0x0030)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0xC];                                       // 0x00C4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Road_Path_C_Transform_to_Point) == 0x000010, "Wrong alignment on BP_Road_Path_C_Transform_to_Point");
static_assert(sizeof(BP_Road_Path_C_Transform_to_Point) == 0x000100, "Wrong size on BP_Road_Path_C_Transform_to_Point");
static_assert(offsetof(BP_Road_Path_C_Transform_to_Point, InTransform) == 0x000000, "Member 'BP_Road_Path_C_Transform_to_Point::InTransform' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Transform_to_Point, bAdd) == 0x000030, "Member 'BP_Road_Path_C_Transform_to_Point::bAdd' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Transform_to_Point, ReturnValue) == 0x000040, "Member 'BP_Road_Path_C_Transform_to_Point::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Transform_to_Point, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000070, "Member 'BP_Road_Path_C_Transform_to_Point::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Transform_to_Point, CallFunc_BreakTransform_Location) == 0x00007C, "Member 'BP_Road_Path_C_Transform_to_Point::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Transform_to_Point, CallFunc_BreakTransform_Rotation) == 0x000088, "Member 'BP_Road_Path_C_Transform_to_Point::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Transform_to_Point, CallFunc_BreakTransform_Scale) == 0x000094, "Member 'BP_Road_Path_C_Transform_to_Point::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Transform_to_Point, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000A0, "Member 'BP_Road_Path_C_Transform_to_Point::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Transform_to_Point, CallFunc_Add_VectorVector_ReturnValue) == 0x0000AC, "Member 'BP_Road_Path_C_Transform_to_Point::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Transform_to_Point, CallFunc_SelectVector_ReturnValue) == 0x0000B8, "Member 'BP_Road_Path_C_Transform_to_Point::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Transform_to_Point, CallFunc_MakeTransform_ReturnValue) == 0x0000D0, "Member 'BP_Road_Path_C_Transform_to_Point::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BP_Road_Path.BP_Road_Path_C.Correct Chunk Size
// 0x0048 (0x0048 - 0x0000)
struct BP_Road_Path_C_Correct_Chunk_Size final
{
public:
	float                                         Length;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Chunk;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CorrectedChunkSize;                                // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Local_chunkRatio;                                  // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Local_bDivideByZero;                               // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue1;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue1;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Road_Path_C_Correct_Chunk_Size) == 0x000004, "Wrong alignment on BP_Road_Path_C_Correct_Chunk_Size");
static_assert(sizeof(BP_Road_Path_C_Correct_Chunk_Size) == 0x000048, "Wrong size on BP_Road_Path_C_Correct_Chunk_Size");
static_assert(offsetof(BP_Road_Path_C_Correct_Chunk_Size, Length) == 0x000000, "Member 'BP_Road_Path_C_Correct_Chunk_Size::Length' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Correct_Chunk_Size, Chunk) == 0x000004, "Member 'BP_Road_Path_C_Correct_Chunk_Size::Chunk' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Correct_Chunk_Size, CorrectedChunkSize) == 0x000008, "Member 'BP_Road_Path_C_Correct_Chunk_Size::CorrectedChunkSize' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Correct_Chunk_Size, Local_chunkRatio) == 0x00000C, "Member 'BP_Road_Path_C_Correct_Chunk_Size::Local_chunkRatio' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Correct_Chunk_Size, Local_bDivideByZero) == 0x000010, "Member 'BP_Road_Path_C_Correct_Chunk_Size::Local_bDivideByZero' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Correct_Chunk_Size, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000011, "Member 'BP_Road_Path_C_Correct_Chunk_Size::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Correct_Chunk_Size, CallFunc_SelectFloat_ReturnValue) == 0x000014, "Member 'BP_Road_Path_C_Correct_Chunk_Size::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Correct_Chunk_Size, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_Road_Path_C_Correct_Chunk_Size::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Correct_Chunk_Size, CallFunc_FTrunc_ReturnValue) == 0x00001C, "Member 'BP_Road_Path_C_Correct_Chunk_Size::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Correct_Chunk_Size, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000020, "Member 'BP_Road_Path_C_Correct_Chunk_Size::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Correct_Chunk_Size, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_Road_Path_C_Correct_Chunk_Size::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Correct_Chunk_Size, CallFunc_EqualEqual_FloatFloat_ReturnValue1) == 0x000028, "Member 'BP_Road_Path_C_Correct_Chunk_Size::CallFunc_EqualEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Correct_Chunk_Size, CallFunc_FTrunc_ReturnValue1) == 0x00002C, "Member 'BP_Road_Path_C_Correct_Chunk_Size::CallFunc_FTrunc_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Correct_Chunk_Size, CallFunc_SelectFloat_ReturnValue1) == 0x000030, "Member 'BP_Road_Path_C_Correct_Chunk_Size::CallFunc_SelectFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Correct_Chunk_Size, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x000034, "Member 'BP_Road_Path_C_Correct_Chunk_Size::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Correct_Chunk_Size, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x000038, "Member 'BP_Road_Path_C_Correct_Chunk_Size::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Correct_Chunk_Size, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x00003C, "Member 'BP_Road_Path_C_Correct_Chunk_Size::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Correct_Chunk_Size, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_Road_Path_C_Correct_Chunk_Size::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Correct_Chunk_Size, CallFunc_Add_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_Road_Path_C_Correct_Chunk_Size::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_Road_Path.BP_Road_Path_C.Propagate Changes
// 0x0050 (0x0050 - 0x0000)
struct BP_Road_Path_C_Propagate_Changes final
{
public:
	struct FBP_Struct_SplineMeshBuilder           Local_splineMeshChunkPropagator;                   // 0x0000(0x0018)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Local_iterator;                                    // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBP_Struct_SplineMeshBuilder           CallFunc_Array_Get_Item;                           // 0x0030(0x0018)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Road_Path_C_Propagate_Changes) == 0x000008, "Wrong alignment on BP_Road_Path_C_Propagate_Changes");
static_assert(sizeof(BP_Road_Path_C_Propagate_Changes) == 0x000050, "Wrong size on BP_Road_Path_C_Propagate_Changes");
static_assert(offsetof(BP_Road_Path_C_Propagate_Changes, Local_splineMeshChunkPropagator) == 0x000000, "Member 'BP_Road_Path_C_Propagate_Changes::Local_splineMeshChunkPropagator' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Propagate_Changes, Local_iterator) == 0x000018, "Member 'BP_Road_Path_C_Propagate_Changes::Local_iterator' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Propagate_Changes, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_Road_Path_C_Propagate_Changes::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Propagate_Changes, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_Road_Path_C_Propagate_Changes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Propagate_Changes, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_Road_Path_C_Propagate_Changes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Propagate_Changes, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_Road_Path_C_Propagate_Changes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Propagate_Changes, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_Road_Path_C_Propagate_Changes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Propagate_Changes, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_Road_Path_C_Propagate_Changes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_Propagate_Changes, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_Road_Path_C_Propagate_Changes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Road_Path.BP_Road_Path_C.GetUpAxis
// 0x0040 (0x0040 - 0x0000)
struct BP_Road_Path_C_GetUpAxis final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplineMeshAxis                               Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue2;                  // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0034(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Road_Path_C_GetUpAxis) == 0x000004, "Wrong alignment on BP_Road_Path_C_GetUpAxis");
static_assert(sizeof(BP_Road_Path_C_GetUpAxis) == 0x000040, "Wrong size on BP_Road_Path_C_GetUpAxis");
static_assert(offsetof(BP_Road_Path_C_GetUpAxis, ReturnValue) == 0x000000, "Member 'BP_Road_Path_C_GetUpAxis::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_GetUpAxis, Temp_byte_Variable) == 0x00000C, "Member 'BP_Road_Path_C_GetUpAxis::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_GetUpAxis, CallFunc_MakeVector_ReturnValue) == 0x000010, "Member 'BP_Road_Path_C_GetUpAxis::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_GetUpAxis, CallFunc_MakeVector_ReturnValue1) == 0x00001C, "Member 'BP_Road_Path_C_GetUpAxis::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_GetUpAxis, CallFunc_MakeVector_ReturnValue2) == 0x000028, "Member 'BP_Road_Path_C_GetUpAxis::CallFunc_MakeVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_GetUpAxis, K2Node_Select_Default) == 0x000034, "Member 'BP_Road_Path_C_GetUpAxis::K2Node_Select_Default' has a wrong offset!");

// Function BP_Road_Path.BP_Road_Path_C.SetDeltaRotator
// 0x00C0 (0x00C0 - 0x0000)
struct BP_Road_Path_C_SetDeltaRotator final
{
public:
	struct FTransform                             InTransform;                                       // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FTransform                             ReturnValue;                                       // 0x0030(0x0030)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Road_Path_C_SetDeltaRotator) == 0x000010, "Wrong alignment on BP_Road_Path_C_SetDeltaRotator");
static_assert(sizeof(BP_Road_Path_C_SetDeltaRotator) == 0x0000C0, "Wrong size on BP_Road_Path_C_SetDeltaRotator");
static_assert(offsetof(BP_Road_Path_C_SetDeltaRotator, InTransform) == 0x000000, "Member 'BP_Road_Path_C_SetDeltaRotator::InTransform' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_SetDeltaRotator, ReturnValue) == 0x000030, "Member 'BP_Road_Path_C_SetDeltaRotator::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_SetDeltaRotator, CallFunc_BreakTransform_Location) == 0x000060, "Member 'BP_Road_Path_C_SetDeltaRotator::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_SetDeltaRotator, CallFunc_BreakTransform_Rotation) == 0x00006C, "Member 'BP_Road_Path_C_SetDeltaRotator::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_SetDeltaRotator, CallFunc_BreakTransform_Scale) == 0x000078, "Member 'BP_Road_Path_C_SetDeltaRotator::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_SetDeltaRotator, CallFunc_ComposeRotators_ReturnValue) == 0x000084, "Member 'BP_Road_Path_C_SetDeltaRotator::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_SetDeltaRotator, CallFunc_MakeTransform_ReturnValue) == 0x000090, "Member 'BP_Road_Path_C_SetDeltaRotator::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BP_Road_Path.BP_Road_Path_C.SetMaterial
// 0x0010 (0x0010 - 0x0000)
struct BP_Road_Path_C_SetMaterial final
{
public:
	class UPrimitiveComponent*                    Primitive;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Road_Path_C_SetMaterial) == 0x000008, "Wrong alignment on BP_Road_Path_C_SetMaterial");
static_assert(sizeof(BP_Road_Path_C_SetMaterial) == 0x000010, "Wrong size on BP_Road_Path_C_SetMaterial");
static_assert(offsetof(BP_Road_Path_C_SetMaterial, Primitive) == 0x000000, "Member 'BP_Road_Path_C_SetMaterial::Primitive' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_SetMaterial, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_Road_Path_C_SetMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Road_Path.BP_Road_Path_C.CollisionSetup_Water
// 0x0008 (0x0008 - 0x0000)
struct BP_Road_Path_C_CollisionSetup_Water final
{
public:
	class UPrimitiveComponent*                    SpawnedMesh;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Road_Path_C_CollisionSetup_Water) == 0x000008, "Wrong alignment on BP_Road_Path_C_CollisionSetup_Water");
static_assert(sizeof(BP_Road_Path_C_CollisionSetup_Water) == 0x000008, "Wrong size on BP_Road_Path_C_CollisionSetup_Water");
static_assert(offsetof(BP_Road_Path_C_CollisionSetup_Water, SpawnedMesh) == 0x000000, "Member 'BP_Road_Path_C_CollisionSetup_Water::SpawnedMesh' has a wrong offset!");

// Function BP_Road_Path.BP_Road_Path_C.CollisionSetup_Other
// 0x0010 (0x0010 - 0x0000)
struct BP_Road_Path_C_CollisionSetup_Other final
{
public:
	class UStaticMesh*                            InStaticMesh;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    SpawnedMesh;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Road_Path_C_CollisionSetup_Other) == 0x000008, "Wrong alignment on BP_Road_Path_C_CollisionSetup_Other");
static_assert(sizeof(BP_Road_Path_C_CollisionSetup_Other) == 0x000010, "Wrong size on BP_Road_Path_C_CollisionSetup_Other");
static_assert(offsetof(BP_Road_Path_C_CollisionSetup_Other, InStaticMesh) == 0x000000, "Member 'BP_Road_Path_C_CollisionSetup_Other::InStaticMesh' has a wrong offset!");
static_assert(offsetof(BP_Road_Path_C_CollisionSetup_Other, SpawnedMesh) == 0x000008, "Member 'BP_Road_Path_C_CollisionSetup_Other::SpawnedMesh' has a wrong offset!");

}

