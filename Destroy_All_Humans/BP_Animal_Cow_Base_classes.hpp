#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Animal_Cow_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_Animal_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Animal_Cow_Base.BP_Animal_Cow_Base_C
// 0x0050 (0x0C80 - 0x0C30)
#pragma pack(push, 0x1)
class alignas(0x10) ABP_Animal_Cow_Base_C : public ABP_Animal_Base_C
{
public:
	uint8                                         Pad_C22[0x6];                                      // 0x0C22(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Animal_Cow_Base_C;               // 0x0C28(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBFGActorComponent_RagdollOptimizer*    BFGActorComponent_RagdollOptimizer;                // 0x0C30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicalAnimationComponent*            PhysicalAnimation;                                 // 0x0C38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             PrevTransform;                                     // 0x0C40(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AllowGrazing;                                      // 0x0C70(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ReceiveBeginPlay();
	void PKPhysicalAnimation(class FName PhysicalProfile);
	void OnTagInactive(const struct FGameplayTag& _rTag);
	void OnTagActive(const struct FGameplayTag& _rTag);
	void BndEvt__m_pGameplayEffectTagsComponent_K2Node_ComponentBoundEvent_2_BFGGameplayEffectTags_EventWithTarget__DelegateSignature(const struct FGameplayTag& _rTag, class AActor* _pTarget);
	void ReceiveTick(float DeltaSeconds);
	void ExecuteUbergraph_BP_Animal_Cow_Base(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Animal_Cow_Base_C">();
	}
	static class ABP_Animal_Cow_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Animal_Cow_Base_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(ABP_Animal_Cow_Base_C) == 0x000010, "Wrong alignment on ABP_Animal_Cow_Base_C");
static_assert(sizeof(ABP_Animal_Cow_Base_C) == 0x000C80, "Wrong size on ABP_Animal_Cow_Base_C");
static_assert(offsetof(ABP_Animal_Cow_Base_C, UberGraphFrame_BP_Animal_Cow_Base_C) == 0x000C28, "Member 'ABP_Animal_Cow_Base_C::UberGraphFrame_BP_Animal_Cow_Base_C' has a wrong offset!");
static_assert(offsetof(ABP_Animal_Cow_Base_C, BFGActorComponent_RagdollOptimizer) == 0x000C30, "Member 'ABP_Animal_Cow_Base_C::BFGActorComponent_RagdollOptimizer' has a wrong offset!");
static_assert(offsetof(ABP_Animal_Cow_Base_C, PhysicalAnimation) == 0x000C38, "Member 'ABP_Animal_Cow_Base_C::PhysicalAnimation' has a wrong offset!");
static_assert(offsetof(ABP_Animal_Cow_Base_C, PrevTransform) == 0x000C40, "Member 'ABP_Animal_Cow_Base_C::PrevTransform' has a wrong offset!");
static_assert(offsetof(ABP_Animal_Cow_Base_C, AllowGrazing) == 0x000C70, "Member 'ABP_Animal_Cow_Base_C::AllowGrazing' has a wrong offset!");

}

