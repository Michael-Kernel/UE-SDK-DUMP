#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPW_UI_HUDGamepadHints

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BPW_UI_HUDGamepadHints.BPW_UI_HUDGamepadHints_C.SwitchToMode
// 0x0002 (0x0002 - 0x0000)
struct BPW_UI_HUDGamepadHints_C_SwitchToMode final
{
public:
	bool                                          InIsGround;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPW_UI_HUDGamepadHints_C_SwitchToMode) == 0x000001, "Wrong alignment on BPW_UI_HUDGamepadHints_C_SwitchToMode");
static_assert(sizeof(BPW_UI_HUDGamepadHints_C_SwitchToMode) == 0x000002, "Wrong size on BPW_UI_HUDGamepadHints_C_SwitchToMode");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_SwitchToMode, InIsGround) == 0x000000, "Member 'BPW_UI_HUDGamepadHints_C_SwitchToMode::InIsGround' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_SwitchToMode, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BPW_UI_HUDGamepadHints_C_SwitchToMode::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BPW_UI_HUDGamepadHints.BPW_UI_HUDGamepadHints_C.IsUnlocked
// 0x0020 (0x0020 - 0x0000)
struct BPW_UI_HUDGamepadHints_C_IsUnlocked final
{
public:
	struct FGameplayTag                           GameplayTag;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUnlocked_0;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_GameplayTag_ReturnValue;         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGPlayerState_Unlocks*                CallFunc_GetPlayerStateUnlocks_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUnlockedTagExact_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPW_UI_HUDGamepadHints_C_IsUnlocked) == 0x000008, "Wrong alignment on BPW_UI_HUDGamepadHints_C_IsUnlocked");
static_assert(sizeof(BPW_UI_HUDGamepadHints_C_IsUnlocked) == 0x000020, "Wrong size on BPW_UI_HUDGamepadHints_C_IsUnlocked");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_IsUnlocked, GameplayTag) == 0x000000, "Member 'BPW_UI_HUDGamepadHints_C_IsUnlocked::GameplayTag' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_IsUnlocked, IsUnlocked_0) == 0x000008, "Member 'BPW_UI_HUDGamepadHints_C_IsUnlocked::IsUnlocked_0' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_IsUnlocked, CallFunc_NotEqual_GameplayTag_ReturnValue) == 0x000009, "Member 'BPW_UI_HUDGamepadHints_C_IsUnlocked::CallFunc_NotEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_IsUnlocked, CallFunc_GetPlayerStateUnlocks_ReturnValue) == 0x000010, "Member 'BPW_UI_HUDGamepadHints_C_IsUnlocked::CallFunc_GetPlayerStateUnlocks_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_IsUnlocked, CallFunc_IsUnlockedTagExact_ReturnValue) == 0x000018, "Member 'BPW_UI_HUDGamepadHints_C_IsUnlocked::CallFunc_IsUnlockedTagExact_ReturnValue' has a wrong offset!");

// Function BPW_UI_HUDGamepadHints.BPW_UI_HUDGamepadHints_C.UpdateAll
// 0x0078 (0x0078 - 0x0000)
struct BPW_UI_HUDGamepadHints_C_UpdateAll final
{
public:
	int32                                         NumActiveHintsOnDPad;                              // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable3;                               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item1;                          // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUnlocked_IsUnlocked;                    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable4;                               // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable5;                               // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item2;                          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select1_Default;                            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_Array_Get_Item3;                          // 0x0064(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUnlocked_IsUnlocked1;                   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select2_Default;                            // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPW_UI_HUDGamepadHints_C_UpdateAll) == 0x000008, "Wrong alignment on BPW_UI_HUDGamepadHints_C_UpdateAll");
static_assert(sizeof(BPW_UI_HUDGamepadHints_C_UpdateAll) == 0x000078, "Wrong size on BPW_UI_HUDGamepadHints_C_UpdateAll");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateAll, NumActiveHintsOnDPad) == 0x000000, "Member 'BPW_UI_HUDGamepadHints_C_UpdateAll::NumActiveHintsOnDPad' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateAll, Temp_byte_Variable) == 0x000004, "Member 'BPW_UI_HUDGamepadHints_C_UpdateAll::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateAll, Temp_byte_Variable1) == 0x000005, "Member 'BPW_UI_HUDGamepadHints_C_UpdateAll::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateAll, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BPW_UI_HUDGamepadHints_C_UpdateAll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateAll, Temp_bool_Variable) == 0x00000C, "Member 'BPW_UI_HUDGamepadHints_C_UpdateAll::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateAll, Temp_int_Variable) == 0x000010, "Member 'BPW_UI_HUDGamepadHints_C_UpdateAll::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateAll, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BPW_UI_HUDGamepadHints_C_UpdateAll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateAll, Temp_byte_Variable2) == 0x000018, "Member 'BPW_UI_HUDGamepadHints_C_UpdateAll::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateAll, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BPW_UI_HUDGamepadHints_C_UpdateAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateAll, Temp_int_Loop_Counter_Variable1) == 0x000020, "Member 'BPW_UI_HUDGamepadHints_C_UpdateAll::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateAll, CallFunc_Add_IntInt_ReturnValue1) == 0x000024, "Member 'BPW_UI_HUDGamepadHints_C_UpdateAll::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateAll, Temp_int_Array_Index_Variable1) == 0x000028, "Member 'BPW_UI_HUDGamepadHints_C_UpdateAll::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateAll, Temp_byte_Variable3) == 0x00002C, "Member 'BPW_UI_HUDGamepadHints_C_UpdateAll::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateAll, CallFunc_Array_Get_Item) == 0x000030, "Member 'BPW_UI_HUDGamepadHints_C_UpdateAll::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateAll, CallFunc_Array_Get_Item1) == 0x000038, "Member 'BPW_UI_HUDGamepadHints_C_UpdateAll::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateAll, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BPW_UI_HUDGamepadHints_C_UpdateAll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateAll, CallFunc_IsUnlocked_IsUnlocked) == 0x000044, "Member 'BPW_UI_HUDGamepadHints_C_UpdateAll::CallFunc_IsUnlocked_IsUnlocked' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateAll, CallFunc_Less_IntInt_ReturnValue) == 0x000045, "Member 'BPW_UI_HUDGamepadHints_C_UpdateAll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateAll, Temp_bool_Variable1) == 0x000046, "Member 'BPW_UI_HUDGamepadHints_C_UpdateAll::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateAll, Temp_byte_Variable4) == 0x000047, "Member 'BPW_UI_HUDGamepadHints_C_UpdateAll::Temp_byte_Variable4' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateAll, CallFunc_Greater_IntInt_ReturnValue) == 0x000048, "Member 'BPW_UI_HUDGamepadHints_C_UpdateAll::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateAll, CallFunc_Add_IntInt_ReturnValue2) == 0x00004C, "Member 'BPW_UI_HUDGamepadHints_C_UpdateAll::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateAll, K2Node_Select_Default) == 0x000050, "Member 'BPW_UI_HUDGamepadHints_C_UpdateAll::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateAll, Temp_byte_Variable5) == 0x000051, "Member 'BPW_UI_HUDGamepadHints_C_UpdateAll::Temp_byte_Variable5' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateAll, Temp_bool_Variable2) == 0x000052, "Member 'BPW_UI_HUDGamepadHints_C_UpdateAll::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateAll, CallFunc_Array_Get_Item2) == 0x000058, "Member 'BPW_UI_HUDGamepadHints_C_UpdateAll::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateAll, K2Node_Select1_Default) == 0x000060, "Member 'BPW_UI_HUDGamepadHints_C_UpdateAll::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateAll, CallFunc_Array_Get_Item3) == 0x000064, "Member 'BPW_UI_HUDGamepadHints_C_UpdateAll::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateAll, CallFunc_Array_Length_ReturnValue1) == 0x00006C, "Member 'BPW_UI_HUDGamepadHints_C_UpdateAll::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateAll, CallFunc_IsUnlocked_IsUnlocked1) == 0x000070, "Member 'BPW_UI_HUDGamepadHints_C_UpdateAll::CallFunc_IsUnlocked_IsUnlocked1' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateAll, CallFunc_Less_IntInt_ReturnValue1) == 0x000071, "Member 'BPW_UI_HUDGamepadHints_C_UpdateAll::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateAll, K2Node_Select2_Default) == 0x000072, "Member 'BPW_UI_HUDGamepadHints_C_UpdateAll::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateAll, CallFunc_BooleanAND_ReturnValue) == 0x000073, "Member 'BPW_UI_HUDGamepadHints_C_UpdateAll::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BPW_UI_HUDGamepadHints.BPW_UI_HUDGamepadHints_C.UpdateHorizontalBox
// 0x0138 (0x0138 - 0x0000)
struct BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox final
{
public:
	class UHorizontalBox*                         HorizontalBox;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   ArrayGameplayTags;                                 // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class UObject*>                        ArrayImageObjects;                                 // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class FText>                           ArrayKeyHintTexts;                                 // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                          bInSaucer;                                         // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InSaucer;                                          // 0x0039(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBox*                         ThisHorizontalBox;                                 // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGPlayerState_Unlocks*                CallFunc_GetPlayerStateUnlocks_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USpacer*                                CallFunc_SpawnObject_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUnlockedTagExact_ReturnValue;           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_GameplayTag_ReturnValue;         // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Array_Get_Item1;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0090(0x0088)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPW_UI_HUDKeyHints_HintElement_C*      CallFunc_Create_ReturnValue;                       // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue1;     // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox) == 0x000008, "Wrong alignment on BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox");
static_assert(sizeof(BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox) == 0x000138, "Wrong size on BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox, HorizontalBox) == 0x000000, "Member 'BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox::HorizontalBox' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox, ArrayGameplayTags) == 0x000008, "Member 'BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox::ArrayGameplayTags' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox, ArrayImageObjects) == 0x000018, "Member 'BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox::ArrayImageObjects' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox, ArrayKeyHintTexts) == 0x000028, "Member 'BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox::ArrayKeyHintTexts' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox, bInSaucer) == 0x000038, "Member 'BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox::bInSaucer' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox, InSaucer) == 0x000039, "Member 'BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox::InSaucer' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox, ThisHorizontalBox) == 0x000040, "Member 'BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox::ThisHorizontalBox' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox, CallFunc_Array_Length_ReturnValue1) == 0x000054, "Member 'BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox, CallFunc_GetPlayerStateUnlocks_ReturnValue) == 0x000060, "Member 'BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox::CallFunc_GetPlayerStateUnlocks_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox, Temp_int_Array_Index_Variable) == 0x000068, "Member 'BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox, CallFunc_SpawnObject_ReturnValue) == 0x000070, "Member 'BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox, CallFunc_Array_Get_Item) == 0x000078, "Member 'BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox, CallFunc_IsUnlockedTagExact_ReturnValue) == 0x000080, "Member 'BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox::CallFunc_IsUnlockedTagExact_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox, CallFunc_NotEqual_GameplayTag_ReturnValue) == 0x000081, "Member 'BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox::CallFunc_NotEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox, CallFunc_Array_Get_Item1) == 0x000088, "Member 'BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox, K2Node_MakeStruct_SlateBrush) == 0x000090, "Member 'BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox, CallFunc_IsValid_ReturnValue) == 0x000118, "Member 'BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox, CallFunc_Less_IntInt_ReturnValue1) == 0x000119, "Member 'BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000120, "Member 'BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox, CallFunc_Create_ReturnValue) == 0x000128, "Member 'BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox, CallFunc_AddChildToHorizontalBox_ReturnValue1) == 0x000130, "Member 'BPW_UI_HUDGamepadHints_C_UpdateHorizontalBox::CallFunc_AddChildToHorizontalBox_ReturnValue1' has a wrong offset!");

// Function BPW_UI_HUDGamepadHints.BPW_UI_HUDGamepadHints_C.OnInputDeviceChanged
// 0x0001 (0x0001 - 0x0000)
struct BPW_UI_HUDGamepadHints_C_OnInputDeviceChanged final
{
public:
	bool                                          InIsGamepad;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPW_UI_HUDGamepadHints_C_OnInputDeviceChanged) == 0x000001, "Wrong alignment on BPW_UI_HUDGamepadHints_C_OnInputDeviceChanged");
static_assert(sizeof(BPW_UI_HUDGamepadHints_C_OnInputDeviceChanged) == 0x000001, "Wrong size on BPW_UI_HUDGamepadHints_C_OnInputDeviceChanged");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_OnInputDeviceChanged, InIsGamepad) == 0x000000, "Member 'BPW_UI_HUDGamepadHints_C_OnInputDeviceChanged::InIsGamepad' has a wrong offset!");

// Function BPW_UI_HUDGamepadHints.BPW_UI_HUDGamepadHints_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BPW_UI_HUDGamepadHints_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPW_UI_HUDGamepadHints_C_PreConstruct) == 0x000001, "Wrong alignment on BPW_UI_HUDGamepadHints_C_PreConstruct");
static_assert(sizeof(BPW_UI_HUDGamepadHints_C_PreConstruct) == 0x000001, "Wrong size on BPW_UI_HUDGamepadHints_C_PreConstruct");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BPW_UI_HUDGamepadHints_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BPW_UI_HUDGamepadHints.BPW_UI_HUDGamepadHints_C.Tick
// 0x003C (0x003C - 0x0000)
struct BPW_UI_HUDGamepadHints_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_UI_HUDGamepadHints_C_Tick) == 0x000004, "Wrong alignment on BPW_UI_HUDGamepadHints_C_Tick");
static_assert(sizeof(BPW_UI_HUDGamepadHints_C_Tick) == 0x00003C, "Wrong size on BPW_UI_HUDGamepadHints_C_Tick");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_Tick, MyGeometry) == 0x000000, "Member 'BPW_UI_HUDGamepadHints_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_Tick, InDeltaTime) == 0x000038, "Member 'BPW_UI_HUDGamepadHints_C_Tick::InDeltaTime' has a wrong offset!");

// Function BPW_UI_HUDGamepadHints.BPW_UI_HUDGamepadHints_C.ExecuteUbergraph_BPW_UI_HUDGamepadHints
// 0x0120 (0x0120 - 0x0000)
struct BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool _bValue)>                 K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsPlayerInSaucer_IsInSaucer;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBFGGameInstance*                       K2Node_DynamicCast_AsBFGGame_Instance;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGUIInputDeviceTracker*               CallFunc_GetInputDeviceTracker_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBFGPlayerState_Unlocks*                CallFunc_GetPlayerStateUnlocks_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue1;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_GetTags__tagsOut;                         // 0x0060(0x0020)()
	class UBFGGameInstance*                       K2Node_DynamicCast_AsBFGGame_Instance1;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x0090(0x0010)(ZeroConstructor, ReferenceParm)
	class UBFGUIInputDeviceTracker*               CallFunc_GetInputDeviceTracker_ReturnValue1;       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamepadCurrentDevice_ReturnValue;       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00AC(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Identical_ReturnValue;              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class UWidget*>                        K2Node_MakeArray_Array1;                           // 0x0100(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class UWidget*>                        K2Node_MakeArray_Array2;                           // 0x0110(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints) == 0x000008, "Wrong alignment on BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints");
static_assert(sizeof(BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints) == 0x000120, "Wrong size on BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints, EntryPoint) == 0x000000, "Member 'BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints, CallFunc_IsPlayerInSaucer_IsInSaucer) == 0x000020, "Member 'BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints::CallFunc_IsPlayerInSaucer_IsInSaucer' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints, CallFunc_GetGameInstance_ReturnValue) == 0x000028, "Member 'BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints, K2Node_DynamicCast_AsBFGGame_Instance) == 0x000030, "Member 'BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints::K2Node_DynamicCast_AsBFGGame_Instance' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints, CallFunc_GetInputDeviceTracker_ReturnValue) == 0x000040, "Member 'BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints::CallFunc_GetInputDeviceTracker_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints, CallFunc_GetPlayerStateUnlocks_ReturnValue) == 0x000050, "Member 'BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints::CallFunc_GetPlayerStateUnlocks_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints, CallFunc_GetGameInstance_ReturnValue1) == 0x000058, "Member 'BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints::CallFunc_GetGameInstance_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints, CallFunc_GetTags__tagsOut) == 0x000060, "Member 'BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints::CallFunc_GetTags__tagsOut' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints, K2Node_DynamicCast_AsBFGGame_Instance1) == 0x000080, "Member 'BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints::K2Node_DynamicCast_AsBFGGame_Instance1' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints, K2Node_DynamicCast_bSuccess1) == 0x000088, "Member 'BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x000090, "Member 'BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints, CallFunc_GetInputDeviceTracker_ReturnValue1) == 0x0000A0, "Member 'BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints::CallFunc_GetInputDeviceTracker_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints, CallFunc_IsGamepadCurrentDevice_ReturnValue) == 0x0000A8, "Member 'BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints::CallFunc_IsGamepadCurrentDevice_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints, CallFunc_IsValid_ReturnValue1) == 0x0000A9, "Member 'BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints, K2Node_Event_MyGeometry) == 0x0000AC, "Member 'BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints, K2Node_Event_InDeltaTime) == 0x0000E4, "Member 'BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints, CallFunc_Array_Identical_ReturnValue) == 0x0000E8, "Member 'BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints::CallFunc_Array_Identical_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints, K2Node_Event_IsDesignTime) == 0x0000E9, "Member 'BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints, K2Node_MakeArray_Array) == 0x0000F0, "Member 'BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints, K2Node_MakeArray_Array1) == 0x000100, "Member 'BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints, K2Node_MakeArray_Array2) == 0x000110, "Member 'BPW_UI_HUDGamepadHints_C_ExecuteUbergraph_BPW_UI_HUDGamepadHints::K2Node_MakeArray_Array2' has a wrong offset!");

}

