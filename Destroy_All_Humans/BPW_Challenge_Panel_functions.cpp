#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPW_Challenge_Panel

#include "Basic.hpp"

#include "BPW_Challenge_Panel_classes.hpp"
#include "BPW_Challenge_Panel_parameters.hpp"


namespace SDK
{

// Function BPW_Challenge_Panel.BPW_Challenge_Panel_C.ExecuteUbergraph_BPW_Challenge_Panel
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPW_Challenge_Panel_C::ExecuteUbergraph_BPW_Challenge_Panel(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_Challenge_Panel_C", "ExecuteUbergraph_BPW_Challenge_Panel");

	Params::BPW_Challenge_Panel_C_ExecuteUbergraph_BPW_Challenge_Panel Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPW_Challenge_Panel.BPW_Challenge_Panel_C.OnDataChanged
// (Event, Public, BlueprintEvent)

void UBPW_Challenge_Panel_C::OnDataChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_Challenge_Panel_C", "OnDataChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPW_Challenge_Panel.BPW_Challenge_Panel_C.OnPanelVisibilityChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// EBFGChallengeStartingPoint_Visibility   _eVisibility                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPW_Challenge_Panel_C::OnPanelVisibilityChanged(EBFGChallengeStartingPoint_Visibility _eVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_Challenge_Panel_C", "OnPanelVisibilityChanged");

	Params::BPW_Challenge_Panel_C_OnPanelVisibilityChanged Parms{};

	Parms._eVisibility = _eVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPW_Challenge_Panel.BPW_Challenge_Panel_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBPW_Challenge_Panel_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_Challenge_Panel_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPW_Challenge_Panel.BPW_Challenge_Panel_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPW_Challenge_Panel_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_Challenge_Panel_C", "PreConstruct");

	Params::BPW_Challenge_Panel_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPW_Challenge_Panel.BPW_Challenge_Panel_C.ShowStarDetails
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPW_Challenge_Panel_C::ShowStarDetails(bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_Challenge_Panel_C", "ShowStarDetails");

	Params::BPW_Challenge_Panel_C_ShowStarDetails Parms{};

	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPW_Challenge_Panel.BPW_Challenge_Panel_C.ApplyInfo
// (Public, BlueprintCallable, BlueprintEvent)

void UBPW_Challenge_Panel_C::ApplyInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_Challenge_Panel_C", "ApplyInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPW_Challenge_Panel.BPW_Challenge_Panel_C.EnsureSoftPointersLoaded
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPW_Challenge_Panel_C::EnsureSoftPointersLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_Challenge_Panel_C", "EnsureSoftPointersLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPW_Challenge_Panel.BPW_Challenge_Panel_C.SetIconAndType
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPW_Challenge_Panel_C::SetIconAndType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_Challenge_Panel_C", "SetIconAndType");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPW_Challenge_Panel.BPW_Challenge_Panel_C.SetTitle
// (Public, BlueprintCallable, BlueprintEvent)

void UBPW_Challenge_Panel_C::SetTitle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_Challenge_Panel_C", "SetTitle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPW_Challenge_Panel.BPW_Challenge_Panel_C.SetStarDetails
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPW_Challenge_Panel_C::SetStarDetails()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_Challenge_Panel_C", "SetStarDetails");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPW_Challenge_Panel.BPW_Challenge_Panel_C.SetBriefing
// (Public, BlueprintCallable, BlueprintEvent)

void UBPW_Challenge_Panel_C::SetBriefing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_Challenge_Panel_C", "SetBriefing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPW_Challenge_Panel.BPW_Challenge_Panel_C.SetObjective
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPW_Challenge_Panel_C::SetObjective()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_Challenge_Panel_C", "SetObjective");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPW_Challenge_Panel.BPW_Challenge_Panel_C.SetTimeLimit
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPW_Challenge_Panel_C::SetTimeLimit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_Challenge_Panel_C", "SetTimeLimit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPW_Challenge_Panel.BPW_Challenge_Panel_C.Set constraints and optional objectives
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPW_Challenge_Panel_C::Set_constraints_and_optional_objectives()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_Challenge_Panel_C", "Set constraints and optional objectives");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPW_Challenge_Panel.BPW_Challenge_Panel_C.SetPersonalHighscore
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPW_Challenge_Panel_C::SetPersonalHighscore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_Challenge_Panel_C", "SetPersonalHighscore");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPW_Challenge_Panel.BPW_Challenge_Panel_C.SetReward
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPW_Challenge_Panel_C::SetReward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_Challenge_Panel_C", "SetReward");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPW_Challenge_Panel.BPW_Challenge_Panel_C.UpdateVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBFGChallengeStartingPoint_Visibility   NewVisibility                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPW_Challenge_Panel_C::UpdateVisibility(EBFGChallengeStartingPoint_Visibility NewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPW_Challenge_Panel_C", "UpdateVisibility");

	Params::BPW_Challenge_Panel_C_UpdateVisibility Parms{};

	Parms.NewVisibility = NewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}

}

