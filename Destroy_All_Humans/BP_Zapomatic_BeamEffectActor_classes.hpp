#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Zapomatic_BeamEffectActor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BFGCore_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Zapomatic_BeamEffectActor.BP_Zapomatic_BeamEffectActor_C
// 0x0060 (0x04D0 - 0x0470)
class ABP_Zapomatic_BeamEffectActor_C final : public ABFGEffectActor_Beam
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0470(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Audio_weaponloop;                                  // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight_source;                                 // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Lightning_Beam;                                    // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PFX_ZapMinusoMinusMatic_permanent_01;              // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PFX_hit_loop_01;                                   // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight_target;                                 // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Lightning_Beam_2;                                  // 0x04A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x04B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Dyn_beam_material;                                 // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Dyn_beam_material_2;                               // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Target_light_offset;                               // 0x04C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TickDelta;                                         // 0x04CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateBeamFVX(const struct FVector& Target, const struct FVector& Source);
	void UserConstructionScript();
	void ReceiveTick(float DeltaSeconds);
	void StartBeam();
	void StopBeam();
	void UpdateBeam(class AActor* _pTargetActor, const struct FVector& _vTargetLocation, const struct FVector& _vTargetNormal);
	void OnReturnToPool();
	void ExecuteUbergraph_BP_Zapomatic_BeamEffectActor(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Zapomatic_BeamEffectActor_C">();
	}
	static class ABP_Zapomatic_BeamEffectActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Zapomatic_BeamEffectActor_C>();
	}
};
static_assert(alignof(ABP_Zapomatic_BeamEffectActor_C) == 0x000008, "Wrong alignment on ABP_Zapomatic_BeamEffectActor_C");
static_assert(sizeof(ABP_Zapomatic_BeamEffectActor_C) == 0x0004D0, "Wrong size on ABP_Zapomatic_BeamEffectActor_C");
static_assert(offsetof(ABP_Zapomatic_BeamEffectActor_C, UberGraphFrame) == 0x000470, "Member 'ABP_Zapomatic_BeamEffectActor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Zapomatic_BeamEffectActor_C, Audio_weaponloop) == 0x000478, "Member 'ABP_Zapomatic_BeamEffectActor_C::Audio_weaponloop' has a wrong offset!");
static_assert(offsetof(ABP_Zapomatic_BeamEffectActor_C, PointLight_source) == 0x000480, "Member 'ABP_Zapomatic_BeamEffectActor_C::PointLight_source' has a wrong offset!");
static_assert(offsetof(ABP_Zapomatic_BeamEffectActor_C, Lightning_Beam) == 0x000488, "Member 'ABP_Zapomatic_BeamEffectActor_C::Lightning_Beam' has a wrong offset!");
static_assert(offsetof(ABP_Zapomatic_BeamEffectActor_C, PFX_ZapMinusoMinusMatic_permanent_01) == 0x000490, "Member 'ABP_Zapomatic_BeamEffectActor_C::PFX_ZapMinusoMinusMatic_permanent_01' has a wrong offset!");
static_assert(offsetof(ABP_Zapomatic_BeamEffectActor_C, PFX_hit_loop_01) == 0x000498, "Member 'ABP_Zapomatic_BeamEffectActor_C::PFX_hit_loop_01' has a wrong offset!");
static_assert(offsetof(ABP_Zapomatic_BeamEffectActor_C, PointLight_target) == 0x0004A0, "Member 'ABP_Zapomatic_BeamEffectActor_C::PointLight_target' has a wrong offset!");
static_assert(offsetof(ABP_Zapomatic_BeamEffectActor_C, Lightning_Beam_2) == 0x0004A8, "Member 'ABP_Zapomatic_BeamEffectActor_C::Lightning_Beam_2' has a wrong offset!");
static_assert(offsetof(ABP_Zapomatic_BeamEffectActor_C, DefaultSceneRoot) == 0x0004B0, "Member 'ABP_Zapomatic_BeamEffectActor_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Zapomatic_BeamEffectActor_C, Dyn_beam_material) == 0x0004B8, "Member 'ABP_Zapomatic_BeamEffectActor_C::Dyn_beam_material' has a wrong offset!");
static_assert(offsetof(ABP_Zapomatic_BeamEffectActor_C, Dyn_beam_material_2) == 0x0004C0, "Member 'ABP_Zapomatic_BeamEffectActor_C::Dyn_beam_material_2' has a wrong offset!");
static_assert(offsetof(ABP_Zapomatic_BeamEffectActor_C, Target_light_offset) == 0x0004C8, "Member 'ABP_Zapomatic_BeamEffectActor_C::Target_light_offset' has a wrong offset!");
static_assert(offsetof(ABP_Zapomatic_BeamEffectActor_C, TickDelta) == 0x0004CC, "Member 'ABP_Zapomatic_BeamEffectActor_C::TickDelta' has a wrong offset!");

}

