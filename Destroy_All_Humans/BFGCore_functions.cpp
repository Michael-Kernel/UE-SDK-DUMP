#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BFGCore

#include "Basic.hpp"

#include "BFGCore_classes.hpp"
#include "BFGCore_parameters.hpp"


namespace SDK
{

// Function BFGCore.BFGScriptedSequence_Task.OnActorDestroyed
// (Native, Protected)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGScriptedSequence_Task::OnActorDestroyed(class AActor* _pActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGScriptedSequence_Task", "OnActorDestroyed");

	Params::BFGScriptedSequence_Task_OnActorDestroyed Parms{};

	Parms._pActor = _pActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGScriptedSequence_Task.OnActorIsDeadStatChanged
// (Native, Protected)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGActorStat_Bool*               _pDeathStat                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGScriptedSequence_Task::OnActorIsDeadStatChanged(class AActor* _pActor, class UBFGActorStat_Bool* _pDeathStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGScriptedSequence_Task", "OnActorIsDeadStatChanged");

	Params::BFGScriptedSequence_Task_OnActorIsDeadStatChanged Parms{};

	Parms._pActor = _pActor;
	Parms._pDeathStat = _pDeathStat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGScriptedSequence_Task.OnAITaskAborted
// (Native, Protected)
// Parameters:
// class UBFGNetworkPathAgent_AIStateBase* _pTask                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGScriptedSequence_Task::OnAITaskAborted(class UBFGNetworkPathAgent_AIStateBase* _pTask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGScriptedSequence_Task", "OnAITaskAborted");

	Params::BFGScriptedSequence_Task_OnAITaskAborted Parms{};

	Parms._pTask = _pTask;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGScriptedSequence_Task.OnAITaskFinished
// (Native, Protected)
// Parameters:
// class UBFGNetworkPathAgent_AIStateBase* _pTask                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGScriptedSequence_Task::OnAITaskFinished(class UBFGNetworkPathAgent_AIStateBase* _pTask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGScriptedSequence_Task", "OnAITaskFinished");

	Params::BFGScriptedSequence_Task_OnAITaskFinished Parms{};

	Parms._pTask = _pTask;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGScriptedSequence_Task.OnAITaskStarted
// (Native, Protected)
// Parameters:
// class UBFGNetworkPathAgent_AIStateBase* _pTask                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGScriptedSequence_Task::OnAITaskStarted(class UBFGNetworkPathAgent_AIStateBase* _pTask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGScriptedSequence_Task", "OnAITaskStarted");

	Params::BFGScriptedSequence_Task_OnAITaskStarted Parms{};

	Parms._pTask = _pTask;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGScriptedSequence_Task.OnCrowdLifeSystemJoined
// (Native, Protected)

void UBFGScriptedSequence_Task::OnCrowdLifeSystemJoined()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGScriptedSequence_Task", "OnCrowdLifeSystemJoined");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGScriptedSequence_Task.OnCrowdLifeSystemLeft
// (Native, Protected)

void UBFGScriptedSequence_Task::OnCrowdLifeSystemLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGScriptedSequence_Task", "OnCrowdLifeSystemLeft");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEventTrigger_DestroyedStaticObject.OnStaticObjectDestroyed
// (Final, Native, Protected)
// Parameters:
// class ABFGObject_StaticWithPhysics*     _pDestroyedObject                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_DestroyedStaticObject::OnStaticObjectDestroyed(class ABFGObject_StaticWithPhysics* _pDestroyedObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_DestroyedStaticObject", "OnStaticObjectDestroyed");

	Params::BFGEventTrigger_DestroyedStaticObject_OnStaticObjectDestroyed Parms{};

	Parms._pDestroyedObject = _pDestroyedObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidgetSceneObjectHighlighter.GetContainerOffscreenPointer
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UBFGWidgetSceneObjectHighlighter::GetContainerOffscreenPointer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidgetSceneObjectHighlighter", "GetContainerOffscreenPointer");

	Params::BFGWidgetSceneObjectHighlighter_GetContainerOffscreenPointer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidgetSceneObjectHighlighter.GetImageIcon
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UImage*                           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UImage* UBFGWidgetSceneObjectHighlighter::GetImageIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidgetSceneObjectHighlighter", "GetImageIcon");

	Params::BFGWidgetSceneObjectHighlighter_GetImageIcon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidgetSceneObjectHighlighter.GetImageOffscreenPointer
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UImage*                           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UImage* UBFGWidgetSceneObjectHighlighter::GetImageOffscreenPointer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidgetSceneObjectHighlighter", "GetImageOffscreenPointer");

	Params::BFGWidgetSceneObjectHighlighter_GetImageOffscreenPointer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFG_AISenseAgression.ReportAgressiveEvent
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          _pWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _pAggressiveEventLocation                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pInstigator                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pVictim                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Tag                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fMaxRange                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFG_AISenseAgression::ReportAgressiveEvent(class UObject* _pWorldContextObject, const struct FVector& _pAggressiveEventLocation, class AActor* _pInstigator, class AActor* _pVictim, class FName Tag, float _fMaxRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFG_AISenseAgression", "ReportAgressiveEvent");

	Params::BFG_AISenseAgression_ReportAgressiveEvent Parms{};

	Parms._pWorldContextObject = _pWorldContextObject;
	Parms._pAggressiveEventLocation = std::move(_pAggressiveEventLocation);
	Parms._pInstigator = _pInstigator;
	Parms._pVictim = _pVictim;
	Parms.Tag = Tag;
	Parms._fMaxRange = _fMaxRange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_GameplayEffectTags.ClearTags
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_GameplayEffectTags::ClearTags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_GameplayEffectTags", "ClearTags");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_GameplayEffectTags.DecrementGameplayEffectTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     _rTag                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_GameplayEffectTags::DecrementGameplayEffectTag(const struct FGameplayTag& _rTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_GameplayEffectTags", "DecrementGameplayEffectTag");

	Params::BFGActorComponent_GameplayEffectTags_DecrementGameplayEffectTag Parms{};

	Parms._rTag = std::move(_rTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_GameplayEffectTags.DecrementGameplayEffectTags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            _rTags                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGActorComponent_GameplayEffectTags::DecrementGameplayEffectTags(const struct FGameplayTagContainer& _rTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_GameplayEffectTags", "DecrementGameplayEffectTags");

	Params::BFGActorComponent_GameplayEffectTags_DecrementGameplayEffectTags Parms{};

	Parms._rTags = std::move(_rTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_GameplayEffectTags.GetTagCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     _oTag                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGActorComponent_GameplayEffectTags::GetTagCount(const struct FGameplayTag& _oTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_GameplayEffectTags", "GetTagCount");

	Params::BFGActorComponent_GameplayEffectTags_GetTagCount Parms{};

	Parms._oTag = std::move(_oTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_GameplayEffectTags.IncrementGameplayEffectTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     _rTag                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_GameplayEffectTags::IncrementGameplayEffectTag(const struct FGameplayTag& _rTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_GameplayEffectTags", "IncrementGameplayEffectTag");

	Params::BFGActorComponent_GameplayEffectTags_IncrementGameplayEffectTag Parms{};

	Parms._rTag = std::move(_rTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_GameplayEffectTags.IncrementGameplayEffectTags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            _rTags                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGActorComponent_GameplayEffectTags::IncrementGameplayEffectTags(const struct FGameplayTagContainer& _rTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_GameplayEffectTags", "IncrementGameplayEffectTags");

	Params::BFGActorComponent_GameplayEffectTags_IncrementGameplayEffectTags Parms{};

	Parms._rTags = std::move(_rTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_GameplayEffectTags.IncrementGameplayEffectTagsTimer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayEffectTagsTimer         _rTagsTimer                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGActorComponent_GameplayEffectTags::IncrementGameplayEffectTagsTimer(const struct FGameplayEffectTagsTimer& _rTagsTimer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_GameplayEffectTags", "IncrementGameplayEffectTagsTimer");

	Params::BFGActorComponent_GameplayEffectTags_IncrementGameplayEffectTagsTimer Parms{};

	Parms._rTagsTimer = std::move(_rTagsTimer);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_GameplayEffectTags.IsAffectedByAllTags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            _rTags                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_GameplayEffectTags::IsAffectedByAllTags(const struct FGameplayTagContainer& _rTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_GameplayEffectTags", "IsAffectedByAllTags");

	Params::BFGActorComponent_GameplayEffectTags_IsAffectedByAllTags Parms{};

	Parms._rTags = std::move(_rTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_GameplayEffectTags.IsAffectedByAnyTags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            _rTags                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_GameplayEffectTags::IsAffectedByAnyTags(const struct FGameplayTagContainer& _rTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_GameplayEffectTags", "IsAffectedByAnyTags");

	Params::BFGActorComponent_GameplayEffectTags_IsAffectedByAnyTags Parms{};

	Parms._rTags = std::move(_rTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_GameplayEffectTags.IsAffectedByTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     _rTag                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_GameplayEffectTags::IsAffectedByTag(const struct FGameplayTag& _rTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_GameplayEffectTags", "IsAffectedByTag");

	Params::BFGActorComponent_GameplayEffectTags_IsAffectedByTag Parms{};

	Parms._rTag = std::move(_rTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_GameplayEffectTags.RemoveGameplayEffectTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     _rTag                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_GameplayEffectTags::RemoveGameplayEffectTag(const struct FGameplayTag& _rTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_GameplayEffectTags", "RemoveGameplayEffectTag");

	Params::BFGActorComponent_GameplayEffectTags_RemoveGameplayEffectTag Parms{};

	Parms._rTag = std::move(_rTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_GameplayEffectTags.RemoveGameplayEffectTags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            _rTags                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGActorComponent_GameplayEffectTags::RemoveGameplayEffectTags(const struct FGameplayTagContainer& _rTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_GameplayEffectTags", "RemoveGameplayEffectTags");

	Params::BFGActorComponent_GameplayEffectTags_RemoveGameplayEffectTags Parms{};

	Parms._rTags = std::move(_rTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_GameplayEffectTags.AffectedTimeLeftForQuery
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagQuery                _rQuery                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayEffectTagsTimer         ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayEffectTagsTimer UBFGActorComponent_GameplayEffectTags::AffectedTimeLeftForQuery(const struct FGameplayTagQuery& _rQuery) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_GameplayEffectTags", "AffectedTimeLeftForQuery");

	Params::BFGActorComponent_GameplayEffectTags_AffectedTimeLeftForQuery Parms{};

	Parms._rQuery = std::move(_rQuery);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_GameplayEffectTags.IsAffectedByQuery
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagQuery                _rQuery                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_GameplayEffectTags::IsAffectedByQuery(const struct FGameplayTagQuery& _rQuery) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_GameplayEffectTags", "IsAffectedByQuery");

	Params::BFGActorComponent_GameplayEffectTags_IsAffectedByQuery Parms{};

	Parms._rQuery = std::move(_rQuery);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGInputUserWidget.AdvancePressed
// (Native, Event, Public, BlueprintEvent)

void UBFGInputUserWidget::AdvancePressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputUserWidget", "AdvancePressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGInputUserWidget.AdvanceReleased
// (Native, Event, Public, BlueprintEvent)

void UBFGInputUserWidget::AdvanceReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputUserWidget", "AdvanceReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGInputUserWidget.AnyKeyPressed
// (Native, Event, Public, BlueprintEvent)

void UBFGInputUserWidget::AnyKeyPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputUserWidget", "AnyKeyPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGInputUserWidget.BackPressed
// (Native, Event, Public, BlueprintEvent)

void UBFGInputUserWidget::BackPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputUserWidget", "BackPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGInputUserWidget.BackReleased
// (Native, Event, Public, BlueprintEvent)

void UBFGInputUserWidget::BackReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputUserWidget", "BackReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGInputUserWidget.ChangeProfilePressed
// (Native, Event, Public, BlueprintEvent)

void UBFGInputUserWidget::ChangeProfilePressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputUserWidget", "ChangeProfilePressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGInputUserWidget.ChangeProfileReleased
// (Native, Event, Public, BlueprintEvent)

void UBFGInputUserWidget::ChangeProfileReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputUserWidget", "ChangeProfileReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGInputUserWidget.ModeBackPressed
// (Native, Event, Public, BlueprintEvent)

void UBFGInputUserWidget::ModeBackPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputUserWidget", "ModeBackPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGInputUserWidget.ModeBackReleased
// (Native, Event, Public, BlueprintEvent)

void UBFGInputUserWidget::ModeBackReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputUserWidget", "ModeBackReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGInputUserWidget.ModeForwardPressed
// (Native, Event, Public, BlueprintEvent)

void UBFGInputUserWidget::ModeForwardPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputUserWidget", "ModeForwardPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGInputUserWidget.ModeForwardReleased
// (Native, Event, Public, BlueprintEvent)

void UBFGInputUserWidget::ModeForwardReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputUserWidget", "ModeForwardReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGInputUserWidget.OpenDebugMenuPressed
// (Native, Event, Public, BlueprintEvent)

void UBFGInputUserWidget::OpenDebugMenuPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputUserWidget", "OpenDebugMenuPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGInputUserWidget.OpenDebugMenuReleased
// (Native, Event, Public, BlueprintEvent)

void UBFGInputUserWidget::OpenDebugMenuReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputUserWidget", "OpenDebugMenuReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGInputUserWidget.Option1Pressed
// (Native, Event, Public, BlueprintEvent)

void UBFGInputUserWidget::Option1Pressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputUserWidget", "Option1Pressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGInputUserWidget.Option1Released
// (Native, Event, Public, BlueprintEvent)

void UBFGInputUserWidget::Option1Released()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputUserWidget", "Option1Released");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGInputUserWidget.Option2Pressed
// (Native, Event, Public, BlueprintEvent)

void UBFGInputUserWidget::Option2Pressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputUserWidget", "Option2Pressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGInputUserWidget.Option2Released
// (Native, Event, Public, BlueprintEvent)

void UBFGInputUserWidget::Option2Released()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputUserWidget", "Option2Released");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGInputUserWidget.UpdateAxis1
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                                   _fValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGInputUserWidget::UpdateAxis1(float _fValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputUserWidget", "UpdateAxis1");

	Params::BFGInputUserWidget_UpdateAxis1 Parms{};

	Parms._fValue = _fValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGInputUserWidget.UpdateAxis2
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                                   _fValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGInputUserWidget::UpdateAxis2(float _fValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputUserWidget", "UpdateAxis2");

	Params::BFGInputUserWidget_UpdateAxis2 Parms{};

	Parms._fValue = _fValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGInputUserWidget.UpdateAxis3
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                                   _fValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGInputUserWidget::UpdateAxis3(float _fValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputUserWidget", "UpdateAxis3");

	Params::BFGInputUserWidget_UpdateAxis3 Parms{};

	Parms._fValue = _fValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGInputUserWidget.UpdateAxis4
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                                   _fValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGInputUserWidget::UpdateAxis4(float _fValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputUserWidget", "UpdateAxis4");

	Params::BFGInputUserWidget_UpdateAxis4 Parms{};

	Parms._fValue = _fValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BFGCore.BFGWidget_MenuBase.Action__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UBFGWidget_MenuBase*              _pMenu                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_MenuBase::Action__DelegateSignature(class UBFGWidget_MenuBase* _pMenu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MenuBase", "Action__DelegateSignature");

	Params::BFGWidget_MenuBase_Action__DelegateSignature Parms{};

	Parms._pMenu = _pMenu;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_MenuBase.FadeIn
// (Event, Public, BlueprintEvent)

void UBFGWidget_MenuBase::FadeIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MenuBase", "FadeIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_MenuBase.FadeOut
// (Event, Public, BlueprintEvent)

void UBFGWidget_MenuBase::FadeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MenuBase", "FadeOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_MenuBase.Invalidate
// (Final, Native, Public, BlueprintCallable)

void UBFGWidget_MenuBase::Invalidate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MenuBase", "Invalidate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_MenuBase.NativeBeforeDiscard
// (Native, Event, Public, BlueprintEvent)

void UBFGWidget_MenuBase::NativeBeforeDiscard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MenuBase", "NativeBeforeDiscard");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_MenuBase.NativeOnExit
// (Native, Event, Public, BlueprintEvent)

void UBFGWidget_MenuBase::NativeOnExit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MenuBase", "NativeOnExit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_MenuBase.NativeOnInit
// (Native, Event, Public, BlueprintEvent)

void UBFGWidget_MenuBase::NativeOnInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MenuBase", "NativeOnInit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_MenuBase.OnInputDeviceChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bIsGamepad                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_MenuBase::OnInputDeviceChanged(bool _bIsGamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MenuBase", "OnInputDeviceChanged");

	Params::BFGWidget_MenuBase_OnInputDeviceChanged Parms{};

	Parms._bIsGamepad = _bIsGamepad;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_MenuBase.OnRefresh
// (Native, Event, Public, BlueprintEvent)

void UBFGWidget_MenuBase::OnRefresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MenuBase", "OnRefresh");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_MenuBase.ComputeFadingSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGWidget_MenuBase::ComputeFadingSpeed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MenuBase", "ComputeFadingSpeed");

	Params::BFGWidget_MenuBase_ComputeFadingSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction BFGCore.BFGWidget_GenericDialog.Action__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UBFGWidget_GenericDialog::Action__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericDialog", "Action__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction BFGCore.BFGWidget_GenericDialog.ActionIndex__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GenericDialog::ActionIndex__DelegateSignature(int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericDialog", "ActionIndex__DelegateSignature");

	Params::BFGWidget_GenericDialog_ActionIndex__DelegateSignature Parms{};

	Parms._iIndex = _iIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BFGCore.BFGWidget_GenericDialog.ActionName__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class FName                             _oName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GenericDialog::ActionName__DelegateSignature(class FName _oName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericDialog", "ActionName__DelegateSignature");

	Params::BFGWidget_GenericDialog_ActionName__DelegateSignature Parms{};

	Parms._oName = _oName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_GenericDialog.ArrangeOptions
// (Native, Event, Public, BlueprintEvent)

void UBFGWidget_GenericDialog::ArrangeOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericDialog", "ArrangeOptions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_GenericDialog.Cancel
// (Final, Native, Public, BlueprintCallable)

void UBFGWidget_GenericDialog::Cancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericDialog", "Cancel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_GenericDialog.ClearOptions
// (Final, Native, Public, BlueprintCallable)

void UBFGWidget_GenericDialog::ClearOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericDialog", "ClearOptions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_GenericDialog.DisableOption
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGWidget_DialogOption*          _pOption                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bDisabled                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GenericDialog::DisableOption(class UBFGWidget_DialogOption* _pOption, bool _bDisabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericDialog", "DisableOption");

	Params::BFGWidget_GenericDialog_DisableOption Parms{};

	Parms._pOption = _pOption;
	Parms._bDisabled = _bDisabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_GenericDialog.GetAcceptButton
// (Event, Public, BlueprintEvent)
// Parameters:
// class UBFGWidget_DialogOption*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGWidget_DialogOption* UBFGWidget_GenericDialog::GetAcceptButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericDialog", "GetAcceptButton");

	Params::BFGWidget_GenericDialog_GetAcceptButton Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_GenericDialog.GetBackButton
// (Event, Public, BlueprintEvent)
// Parameters:
// class UBFGWidget_DialogOption*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGWidget_DialogOption* UBFGWidget_GenericDialog::GetBackButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericDialog", "GetBackButton");

	Params::BFGWidget_GenericDialog_GetBackButton Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_GenericDialog.GetOption1Button
// (Event, Public, BlueprintEvent)
// Parameters:
// class UBFGWidget_DialogOption*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGWidget_DialogOption* UBFGWidget_GenericDialog::GetOption1Button()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericDialog", "GetOption1Button");

	Params::BFGWidget_GenericDialog_GetOption1Button Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_GenericDialog.OnOptionHover
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBFGWidget_DialogOption*          _pOption                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GenericDialog::OnOptionHover(class UBFGWidget_DialogOption* _pOption)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericDialog", "OnOptionHover");

	Params::BFGWidget_GenericDialog_OnOptionHover Parms{};

	Parms._pOption = _pOption;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_GenericDialog.OnOptionPressed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBFGWidget_DialogOption*          _pOption                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GenericDialog::OnOptionPressed(class UBFGWidget_DialogOption* _pOption)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericDialog", "OnOptionPressed");

	Params::BFGWidget_GenericDialog_OnOptionPressed Parms{};

	Parms._pOption = _pOption;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_GenericDialog.OnOptionReleased
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBFGWidget_DialogOption*          _pOption                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GenericDialog::OnOptionReleased(class UBFGWidget_DialogOption* _pOption)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericDialog", "OnOptionReleased");

	Params::BFGWidget_GenericDialog_OnOptionReleased Parms{};

	Parms._pOption = _pOption;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_GenericDialog.OnOptionUnhover
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBFGWidget_DialogOption*          _pOption                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GenericDialog::OnOptionUnhover(class UBFGWidget_DialogOption* _pOption)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericDialog", "OnOptionUnhover");

	Params::BFGWidget_GenericDialog_OnOptionUnhover Parms{};

	Parms._pOption = _pOption;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_GenericDialog.OnSFX_Cancel
// (Event, Public, BlueprintEvent)

void UBFGWidget_GenericDialog::OnSFX_Cancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericDialog", "OnSFX_Cancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_GenericDialog.OnSFX_Option1
// (Event, Public, BlueprintEvent)

void UBFGWidget_GenericDialog::OnSFX_Option1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericDialog", "OnSFX_Option1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_GenericDialog.OnSFX_Option2
// (Event, Public, BlueprintEvent)

void UBFGWidget_GenericDialog::OnSFX_Option2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericDialog", "OnSFX_Option2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_GenericDialog.OnSFX_OptionAccepted
// (Event, Public, BlueprintEvent)

void UBFGWidget_GenericDialog::OnSFX_OptionAccepted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericDialog", "OnSFX_OptionAccepted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_GenericDialog.OnSFX_OptionGamepadKBAccept
// (Event, Public, BlueprintEvent)

void UBFGWidget_GenericDialog::OnSFX_OptionGamepadKBAccept()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericDialog", "OnSFX_OptionGamepadKBAccept");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_GenericDialog.OnSFX_OptionGamepadKBSelect
// (Event, Public, BlueprintEvent)

void UBFGWidget_GenericDialog::OnSFX_OptionGamepadKBSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericDialog", "OnSFX_OptionGamepadKBSelect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_GenericDialog.OnSFX_OptionMouseHover
// (Event, Public, BlueprintEvent)

void UBFGWidget_GenericDialog::OnSFX_OptionMouseHover()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericDialog", "OnSFX_OptionMouseHover");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_GenericDialog.OnSFX_OptionMousePressed
// (Event, Public, BlueprintEvent)

void UBFGWidget_GenericDialog::OnSFX_OptionMousePressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericDialog", "OnSFX_OptionMousePressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_GenericDialog.OnSFX_OptionMouseReleased
// (Event, Public, BlueprintEvent)

void UBFGWidget_GenericDialog::OnSFX_OptionMouseReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericDialog", "OnSFX_OptionMouseReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_GenericDialog.OnSFX_OptionMouseUnhover
// (Event, Public, BlueprintEvent)

void UBFGWidget_GenericDialog::OnSFX_OptionMouseUnhover()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericDialog", "OnSFX_OptionMouseUnhover");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_GenericDialog.OnSFX_OptionSelected
// (Event, Public, BlueprintEvent)

void UBFGWidget_GenericDialog::OnSFX_OptionSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericDialog", "OnSFX_OptionSelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_GenericDialog.RegisterOption
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGWidget_DialogOption*          _pOption                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _targetHandlerName                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GenericDialog::RegisterOption(class UBFGWidget_DialogOption* _pOption, class FName _targetHandlerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericDialog", "RegisterOption");

	Params::BFGWidget_GenericDialog_RegisterOption Parms{};

	Parms._pOption = _pOption;
	Parms._targetHandlerName = _targetHandlerName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_GenericDialog.RemoveOption
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _iIndexOption                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GenericDialog::RemoveOption(int32 _iIndexOption)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericDialog", "RemoveOption");

	Params::BFGWidget_GenericDialog_RemoveOption Parms{};

	Parms._iIndexOption = _iIndexOption;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_GenericDialog.SelectOption
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGWidget_DialogOption*          _pOption                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GenericDialog::SelectOption(class UBFGWidget_DialogOption* _pOption)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericDialog", "SelectOption");

	Params::BFGWidget_GenericDialog_SelectOption Parms{};

	Parms._pOption = _pOption;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_GenericDialog.GetNumOptions
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGWidget_GenericDialog::GetNumOptions() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericDialog", "GetNumOptions");

	Params::BFGWidget_GenericDialog_GetNumOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_GenericDialog.GetOptionAtIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGWidget_DialogOption*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGWidget_DialogOption* UBFGWidget_GenericDialog::GetOptionAtIndex(int32 _iIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericDialog", "GetOptionAtIndex");

	Params::BFGWidget_GenericDialog_GetOptionAtIndex Parms{};

	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_GenericDialog.GetOptionByHandlerName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             _oHandlerName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGWidget_DialogOption*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGWidget_DialogOption* UBFGWidget_GenericDialog::GetOptionByHandlerName(class FName _oHandlerName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericDialog", "GetOptionByHandlerName");

	Params::BFGWidget_GenericDialog_GetOptionByHandlerName Parms{};

	Parms._oHandlerName = _oHandlerName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_GenericDialog.GetSelectedOption
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGWidget_DialogOption*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGWidget_DialogOption* UBFGWidget_GenericDialog::GetSelectedOption() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericDialog", "GetSelectedOption");

	Params::BFGWidget_GenericDialog_GetSelectedOption Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_TutorialHandbook.EnsureChapter
// (Final, Native, Protected)
// Parameters:
// class UBFGDataAsset_TutorialChapter*    _pDataAssetChapter                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGWidget_TutorialHandbookChapter*ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGWidget_TutorialHandbookChapter* UBFGWidget_TutorialHandbook::EnsureChapter(class UBFGDataAsset_TutorialChapter* _pDataAssetChapter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialHandbook", "EnsureChapter");

	Params::BFGWidget_TutorialHandbook_EnsureChapter Parms{};

	Parms._pDataAssetChapter = _pDataAssetChapter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_TutorialHandbook.SetHandbookEntry
// (Final, Native, Public)
// Parameters:
// class FName                             _targetHandlerName                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGWidget_DialogOption*          POptions                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGDataAsset_TutorialPage*       _pDataAssetPage                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGDataAsset_TutorialChapter*    _pDataAssetChapter                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_TutorialHandbook::SetHandbookEntry(class FName _targetHandlerName, class UBFGWidget_DialogOption* POptions, class UBFGDataAsset_TutorialPage* _pDataAssetPage, class UBFGDataAsset_TutorialChapter* _pDataAssetChapter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialHandbook", "SetHandbookEntry");

	Params::BFGWidget_TutorialHandbook_SetHandbookEntry Parms{};

	Parms._targetHandlerName = _targetHandlerName;
	Parms.POptions = POptions;
	Parms._pDataAssetPage = _pDataAssetPage;
	Parms._pDataAssetChapter = _pDataAssetChapter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_TutorialHandbook.GetPoolManager
// (Final, Native, Protected, Const)
// Parameters:
// class UBFGWidgetPoolManager*            ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGWidgetPoolManager* UBFGWidget_TutorialHandbook::GetPoolManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialHandbook", "GetPoolManager");

	Params::BFGWidget_TutorialHandbook_GetPoolManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacter.GetMainMeshComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPrimitiveComponent* ABFGNPCCharacter::GetMainMeshComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacter", "GetMainMeshComponent");

	Params::BFGNPCCharacter_GetMainMeshComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacter.TriggerVO
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             _event                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacter::TriggerVO(class FName _event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacter", "TriggerVO");

	Params::BFGNPCCharacter_TriggerVO Parms{};

	Parms._event = _event;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BFGCore.BFGWidget_GenericMenuTree.Action__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UBFGWidget_GenericMenuTree::Action__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericMenuTree", "Action__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_GenericMenuTree.AddOptionToLayout
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UBFGWidget_DialogOption*          _pOption                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GenericMenuTree::AddOptionToLayout(class UBFGWidget_DialogOption* _pOption)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericMenuTree", "AddOptionToLayout");

	Params::BFGWidget_GenericMenuTree_AddOptionToLayout Parms{};

	Parms._pOption = _pOption;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_GenericMenuTree.AddWidgetToLayout
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UBFGWidget_GenericMenuTree*       _pWidget                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GenericMenuTree::AddWidgetToLayout(class UBFGWidget_GenericMenuTree* _pWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericMenuTree", "AddWidgetToLayout");

	Params::BFGWidget_GenericMenuTree_AddWidgetToLayout Parms{};

	Parms._pWidget = _pWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_GenericMenuTree.ClearOptionLayout
// (Event, Protected, BlueprintEvent)

void UBFGWidget_GenericMenuTree::ClearOptionLayout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericMenuTree", "ClearOptionLayout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_GenericMenuTree.ClearWidgetLayout
// (Event, Protected, BlueprintEvent)

void UBFGWidget_GenericMenuTree::ClearWidgetLayout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericMenuTree", "ClearWidgetLayout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_GenericMenuTree.HideSelf
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _bDown                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GenericMenuTree::HideSelf(bool _bDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericMenuTree", "HideSelf");

	Params::BFGWidget_GenericMenuTree_HideSelf Parms{};

	Parms._bDown = _bDown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_GenericMenuTree.OnChildNotificationSeen
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class FName                             _oHandlerName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GenericMenuTree::OnChildNotificationSeen(class FName _oHandlerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericMenuTree", "OnChildNotificationSeen");

	Params::BFGWidget_GenericMenuTree_OnChildNotificationSeen Parms{};

	Parms._oHandlerName = _oHandlerName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_GenericMenuTree.OnDialogCancel
// (Native, Public, BlueprintCallable)

void UBFGWidget_GenericMenuTree::OnDialogCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericMenuTree", "OnDialogCancel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_GenericMenuTree.OnDialogChangedSelection
// (Native, Public, BlueprintCallable)

void UBFGWidget_GenericMenuTree::OnDialogChangedSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericMenuTree", "OnDialogChangedSelection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_GenericMenuTree.OnDialogOption
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   IIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GenericMenuTree::OnDialogOption(int32 IIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericMenuTree", "OnDialogOption");

	Params::BFGWidget_GenericMenuTree_OnDialogOption Parms{};

	Parms.IIndex = IIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_GenericMenuTree.OnOptionClicked
// (Final, Native, Protected)

void UBFGWidget_GenericMenuTree::OnOptionClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericMenuTree", "OnOptionClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_GenericMenuTree.OnSFX_TreeAdvance
// (Event, Public, BlueprintEvent)

void UBFGWidget_GenericMenuTree::OnSFX_TreeAdvance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericMenuTree", "OnSFX_TreeAdvance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_GenericMenuTree.OnSFX_TreeBack
// (Event, Public, BlueprintEvent)

void UBFGWidget_GenericMenuTree::OnSFX_TreeBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericMenuTree", "OnSFX_TreeBack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_GenericMenuTree.ShowSelf
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _bDown                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GenericMenuTree::ShowSelf(bool _bDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericMenuTree", "ShowSelf");

	Params::BFGWidget_GenericMenuTree_ShowSelf Parms{};

	Parms._bDown = _bDown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_GenericMenuTree.GetInternalName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UBFGWidget_GenericMenuTree::GetInternalName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericMenuTree", "GetInternalName");

	Params::BFGWidget_GenericMenuTree_GetInternalName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_GenericMenuTree.GetNiceName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UBFGWidget_GenericMenuTree::GetNiceName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericMenuTree", "GetNiceName");

	Params::BFGWidget_GenericMenuTree_GetNiceName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_Archive_SubMenu.GetDescription
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UBFGWidget_Archive_SubMenu::GetDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive_SubMenu", "GetDescription");

	Params::BFGWidget_Archive_SubMenu_GetDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_Archive_SubMenu.GetTitle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UBFGWidget_Archive_SubMenu::GetTitle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive_SubMenu", "GetTitle");

	Params::BFGWidget_Archive_SubMenu_GetTitle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_Archive_SubMenu.GetTopic
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UBFGWidget_Archive_SubMenu::GetTopic() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive_SubMenu", "GetTopic");

	Params::BFGWidget_Archive_SubMenu_GetTopic Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_Archive_Furonigami.GetSpinningWidget
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBFGSpinningWidget*               ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGSpinningWidget* UBFGWidget_Archive_Furonigami::GetSpinningWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive_Furonigami", "GetSpinningWidget");

	Params::BFGWidget_Archive_Furonigami_GetSpinningWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_Archive_Furonigami.HasSpinningWidget
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGWidget_Archive_Furonigami::HasSpinningWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive_Furonigami", "HasSpinningWidget");

	Params::BFGWidget_Archive_Furonigami_HasSpinningWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_Archive_Furonigami.OnMediaPlaybackFinished
// (Final, Native, Protected)
// Parameters:
// EBFGDialogMessage                       _eMessage                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Archive_Furonigami::OnMediaPlaybackFinished(EBFGDialogMessage _eMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive_Furonigami", "OnMediaPlaybackFinished");

	Params::BFGWidget_Archive_Furonigami_OnMediaPlaybackFinished Parms{};

	Parms._eMessage = _eMessage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_Archive_Furonigami.OnMediaWidgetOpened
// (Final, Native, Protected)
// Parameters:
// class UBFGWidget_GenericDialog*         _pDialog                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Archive_Furonigami::OnMediaWidgetOpened(class UBFGWidget_GenericDialog* _pDialog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive_Furonigami", "OnMediaWidgetOpened");

	Params::BFGWidget_Archive_Furonigami_OnMediaWidgetOpened Parms{};

	Parms._pDialog = _pDialog;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_Archive_Furonigami.OnSpinningWidgetAccepted
// (Final, Native, Protected)

void UBFGWidget_Archive_Furonigami::OnSpinningWidgetAccepted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive_Furonigami", "OnSpinningWidgetAccepted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_Archive_Furonigami.OnSpinningWidgetIndexChanged
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Archive_Furonigami::OnSpinningWidgetIndexChanged(int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive_Furonigami", "OnSpinningWidgetIndexChanged");

	Params::BFGWidget_Archive_Furonigami_OnSpinningWidgetIndexChanged Parms{};

	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterGameplay.ChangePhysicsAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPhysicsAsset*                    _pNewPhysicsAsset                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bAttemptToKeepRagdollTransform                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterGameplay::ChangePhysicsAsset(class UPhysicsAsset* _pNewPhysicsAsset, bool _bAttemptToKeepRagdollTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "ChangePhysicsAsset");

	Params::BFGNPCCharacterGameplay_ChangePhysicsAsset Parms{};

	Parms._pNewPhysicsAsset = _pNewPhysicsAsset;
	Parms._bAttemptToKeepRagdollTransform = _bAttemptToKeepRagdollTransform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterGameplay.DisableCharacter
// (Final, Native, Public, BlueprintCallable)

void ABFGNPCCharacterGameplay::DisableCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "DisableCharacter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterGameplay.ForceAllyNonActive
// (Final, Native, Public, BlueprintCallable)

void ABFGNPCCharacterGameplay::ForceAllyNonActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "ForceAllyNonActive");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterGameplay.ForceCoward
// (Final, Native, Public, BlueprintCallable)

void ABFGNPCCharacterGameplay::ForceCoward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "ForceCoward");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterGameplay.FreezeMeshShowSkeleton
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    M_bHideMesh                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterGameplay::FreezeMeshShowSkeleton(bool M_bHideMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "FreezeMeshShowSkeleton");

	Params::BFGNPCCharacterGameplay_FreezeMeshShowSkeleton Parms{};

	Parms.M_bHideMesh = M_bHideMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BFGCore.BFGNPCCharacterGameplay.GameplayCharacterOnPickupSignature__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AActor*                           _pSourceActor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterGameplay::GameplayCharacterOnPickupSignature__DelegateSignature(class AActor* _pSourceActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "GameplayCharacterOnPickupSignature__DelegateSignature");

	Params::BFGNPCCharacterGameplay_GameplayCharacterOnPickupSignature__DelegateSignature Parms{};

	Parms._pSourceActor = _pSourceActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGNPCCharacterGameplay.GetCustomMovementVelocity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ABFGNPCCharacterGameplay::GetCustomMovementVelocity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "GetCustomMovementVelocity");

	Params::BFGNPCCharacterGameplay_GetCustomMovementVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterGameplay.GetStandupAnimationDuration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABFGNPCCharacterGameplay::GetStandupAnimationDuration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "GetStandupAnimationDuration");

	Params::BFGNPCCharacterGameplay_GetStandupAnimationDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterGameplay.GetStandupProgress
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABFGNPCCharacterGameplay::GetStandupProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "GetStandupProgress");

	Params::BFGNPCCharacterGameplay_GetStandupProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterGameplay.OnCanNotStandUp
// (Event, Public, BlueprintEvent)

void ABFGNPCCharacterGameplay::OnCanNotStandUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "OnCanNotStandUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGNPCCharacterGameplay.OnDeathStatChanged
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGActorStat_Bool*               _pStat                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterGameplay::OnDeathStatChanged(class AActor* _pActor, class UBFGActorStat_Bool* _pStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "OnDeathStatChanged");

	Params::BFGNPCCharacterGameplay_OnDeathStatChanged Parms{};

	Parms._pActor = _pActor;
	Parms._pStat = _pStat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterGameplay.OnFinishedStandingUp
// (Event, Public, BlueprintEvent)

void ABFGNPCCharacterGameplay::OnFinishedStandingUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "OnFinishedStandingUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGNPCCharacterGameplay.OnFireExinguished
// (Event, Public, BlueprintEvent)

void ABFGNPCCharacterGameplay::OnFireExinguished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "OnFireExinguished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGNPCCharacterGameplay.OnPKDrop
// (Event, Public, BlueprintEvent)

void ABFGNPCCharacterGameplay::OnPKDrop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "OnPKDrop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGNPCCharacterGameplay.OnPKPickUp
// (Event, Public, BlueprintEvent)

void ABFGNPCCharacterGameplay::OnPKPickUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "OnPKPickUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGNPCCharacterGameplay.OnReadyToStandUp
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    _bIsFaceDown                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPoseSnapshot                    _oAnimationSnapshot                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ABFGNPCCharacterGameplay::OnReadyToStandUp(bool _bIsFaceDown, const struct FPoseSnapshot& _oAnimationSnapshot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "OnReadyToStandUp");

	Params::BFGNPCCharacterGameplay_OnReadyToStandUp Parms{};

	Parms._bIsFaceDown = _bIsFaceDown;
	Parms._oAnimationSnapshot = std::move(_oAnimationSnapshot);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGNPCCharacterGameplay.OnSetOnFire
// (Event, Public, BlueprintEvent)

void ABFGNPCCharacterGameplay::OnSetOnFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "OnSetOnFire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGNPCCharacterGameplay.OnShowHealthBar
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABFGNPCCharacterGameplay::OnShowHealthBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "OnShowHealthBar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGNPCCharacterGameplay.OnTakesFireDamage
// (Event, Public, BlueprintEvent)

void ABFGNPCCharacterGameplay::OnTakesFireDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "OnTakesFireDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGNPCCharacterGameplay.OnWasHolobobed
// (Event, Public, BlueprintEvent)

void ABFGNPCCharacterGameplay::OnWasHolobobed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "OnWasHolobobed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGNPCCharacterGameplay.OnWeaponEquipChanged
// (Final, Native, Protected)
// Parameters:
// class ABFGWeapon*                       _pWeapon                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterGameplay::OnWeaponEquipChanged(class ABFGWeapon* _pWeapon, bool _bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "OnWeaponEquipChanged");

	Params::BFGNPCCharacterGameplay_OnWeaponEquipChanged Parms{};

	Parms._pWeapon = _pWeapon;
	Parms._bEnabled = _bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterGameplay.OnWeaponFireChanged
// (Native, Protected)
// Parameters:
// class ABFGWeapon*                       _pWeapon                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterGameplay::OnWeaponFireChanged(class ABFGWeapon* _pWeapon, bool _bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "OnWeaponFireChanged");

	Params::BFGNPCCharacterGameplay_OnWeaponFireChanged Parms{};

	Parms._pWeapon = _pWeapon;
	Parms._bEnabled = _bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterGameplay.OnWeaponReloadDone
// (Native, Protected)
// Parameters:
// class ABFGWeapon*                       _pWeapon                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterGameplay::OnWeaponReloadDone(class ABFGWeapon* _pWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "OnWeaponReloadDone");

	Params::BFGNPCCharacterGameplay_OnWeaponReloadDone Parms{};

	Parms._pWeapon = _pWeapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterGameplay.OnWeaponReloadStarted
// (Native, Protected)
// Parameters:
// class ABFGWeapon*                       _pWeapon                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterGameplay::OnWeaponReloadStarted(class ABFGWeapon* _pWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "OnWeaponReloadStarted");

	Params::BFGNPCCharacterGameplay_OnWeaponReloadStarted Parms{};

	Parms._pWeapon = _pWeapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterGameplay.ResetMissionTargetData
// (Final, Native, Public, BlueprintCallable)

void ABFGNPCCharacterGameplay::ResetMissionTargetData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "ResetMissionTargetData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterGameplay.SetCuriosityReason
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBFGCuriosityReason_NPC                 _curiosityReason                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterGameplay::SetCuriosityReason(EBFGCuriosityReason_NPC _curiosityReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "SetCuriosityReason");

	Params::BFGNPCCharacterGameplay_SetCuriosityReason Parms{};

	Parms._curiosityReason = _curiosityReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterGameplay.SetCurrentMissionTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterGameplay::SetCurrentMissionTarget(class AActor* _pActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "SetCurrentMissionTarget");

	Params::BFGNPCCharacterGameplay_SetCurrentMissionTarget Parms{};

	Parms._pActor = _pActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterGameplay.SetCurrentMissionTargetAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBFGMissionTargetAction_NPC             _eMissionTargetAction                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterGameplay::SetCurrentMissionTargetAction(EBFGMissionTargetAction_NPC _eMissionTargetAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "SetCurrentMissionTargetAction");

	Params::BFGNPCCharacterGameplay_SetCurrentMissionTargetAction Parms{};

	Parms._eMissionTargetAction = _eMissionTargetAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterGameplay.SetCurrentSusciousTargetAndLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           _pTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterGameplay::SetCurrentSusciousTargetAndLocation(class AActor* _pTarget, const struct FVector& _vLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "SetCurrentSusciousTargetAndLocation");

	Params::BFGNPCCharacterGameplay_SetCurrentSusciousTargetAndLocation Parms{};

	Parms._pTarget = _pTarget;
	Parms._vLocation = std::move(_vLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterGameplay.SetCurrentTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _pTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterGameplay::SetCurrentTarget(class AActor* _pTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "SetCurrentTarget");

	Params::BFGNPCCharacterGameplay_SetCurrentTarget Parms{};

	Parms._pTarget = _pTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterGameplay.SetForceTargetEvenIfDisguised
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterGameplay::SetForceTargetEvenIfDisguised(bool _bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "SetForceTargetEvenIfDisguised");

	Params::BFGNPCCharacterGameplay_SetForceTargetEvenIfDisguised Parms{};

	Parms._bValue = _bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterGameplay.SetForceTargetEvenIfNotInPerceptionRange
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bForceTargetEvenIfNotInPerceptionRange                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterGameplay::SetForceTargetEvenIfNotInPerceptionRange(bool _bForceTargetEvenIfNotInPerceptionRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "SetForceTargetEvenIfNotInPerceptionRange");

	Params::BFGNPCCharacterGameplay_SetForceTargetEvenIfNotInPerceptionRange Parms{};

	Parms._bForceTargetEvenIfNotInPerceptionRange = _bForceTargetEvenIfNotInPerceptionRange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterGameplay.GetCuriosityReason
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBFGCuriosityReason_NPC                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBFGCuriosityReason_NPC ABFGNPCCharacterGameplay::GetCuriosityReason() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "GetCuriosityReason");

	Params::BFGNPCCharacterGameplay_GetCuriosityReason Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterGameplay.GetCurrentMissionTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* ABFGNPCCharacterGameplay::GetCurrentMissionTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "GetCurrentMissionTarget");

	Params::BFGNPCCharacterGameplay_GetCurrentMissionTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterGameplay.GetCurrentMissionTargetAction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBFGMissionTargetAction_NPC             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBFGMissionTargetAction_NPC ABFGNPCCharacterGameplay::GetCurrentMissionTargetAction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "GetCurrentMissionTargetAction");

	Params::BFGNPCCharacterGameplay_GetCurrentMissionTargetAction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterGameplay.GetCurrentTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* ABFGNPCCharacterGameplay::GetCurrentTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "GetCurrentTarget");

	Params::BFGNPCCharacterGameplay_GetCurrentTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterGameplay.GetCurrentVectorToSuspiciousLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ABFGNPCCharacterGameplay::GetCurrentVectorToSuspiciousLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "GetCurrentVectorToSuspiciousLocation");

	Params::BFGNPCCharacterGameplay_GetCurrentVectorToSuspiciousLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterGameplay.GetCurrentVectorToTarget
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ABFGNPCCharacterGameplay::GetCurrentVectorToTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "GetCurrentVectorToTarget");

	Params::BFGNPCCharacterGameplay_GetCurrentVectorToTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterGameplay.GetForceTargetEvenIfDisguised
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGNPCCharacterGameplay::GetForceTargetEvenIfDisguised() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "GetForceTargetEvenIfDisguised");

	Params::BFGNPCCharacterGameplay_GetForceTargetEvenIfDisguised Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterGameplay.GetForceTargetEvenIfNotInPerceptionRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGNPCCharacterGameplay::GetForceTargetEvenIfNotInPerceptionRange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "GetForceTargetEvenIfNotInPerceptionRange");

	Params::BFGNPCCharacterGameplay_GetForceTargetEvenIfNotInPerceptionRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterGameplay.IsOnFire
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGNPCCharacterGameplay::IsOnFire() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "IsOnFire");

	Params::BFGNPCCharacterGameplay_IsOnFire Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterGameplay.IsPKed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGNPCCharacterGameplay::IsPKed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterGameplay", "IsPKed");

	Params::BFGNPCCharacterGameplay_IsPKed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGTaskNode_BossBase.ActionComplete
// (Final, Native, Protected)

void UBFGTaskNode_BossBase::ActionComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTaskNode_BossBase", "ActionComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_HolobobSuppressionAura.SetupRadarComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGActorComponent_RadarObject_ExactRadius*_pRadarComponent                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_HolobobSuppressionAura::SetupRadarComponent(class UBFGActorComponent_RadarObject_ExactRadius* _pRadarComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_HolobobSuppressionAura", "SetupRadarComponent");

	Params::BFGActorComponent_HolobobSuppressionAura_SetupRadarComponent Parms{};

	Parms._pRadarComponent = _pRadarComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEventTrigger_FadeFinished.OnFadeFinished
// (Final, Native, Protected)
// Parameters:
// class FName                             _strFadeIdentifier                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bFadeOut                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_FadeFinished::OnFadeFinished(class FName _strFadeIdentifier, bool _bFadeOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_FadeFinished", "OnFadeFinished");

	Params::BFGEventTrigger_FadeFinished_OnFadeFinished Parms{};

	Parms._strFadeIdentifier = _strFadeIdentifier;
	Parms._bFadeOut = _bFadeOut;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BFGCore.BFGNPCCharacterHuman.ActionBehaviourState__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EBFGBehaviourState_NPC                  _eState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterHuman::ActionBehaviourState__DelegateSignature(EBFGBehaviourState_NPC _eState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterHuman", "ActionBehaviourState__DelegateSignature");

	Params::BFGNPCCharacterHuman_ActionBehaviourState__DelegateSignature Parms{};

	Parms._eState = _eState;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BFGCore.BFGNPCCharacterHuman.ActionBool__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    _bState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterHuman::ActionBool__DelegateSignature(bool _bState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterHuman", "ActionBool__DelegateSignature");

	Params::BFGNPCCharacterHuman_ActionBool__DelegateSignature Parms{};

	Parms._bState = _bState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGNPCCharacterHuman.DoDecapitateDressing
// (Event, Protected, BlueprintEvent)

void ABFGNPCCharacterHuman::DoDecapitateDressing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterHuman", "DoDecapitateDressing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGNPCCharacterHuman.OnAIStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// EBFGBehaviourState_NPC                  _newState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterHuman::OnAIStateChanged(EBFGBehaviourState_NPC _newState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterHuman", "OnAIStateChanged");

	Params::BFGNPCCharacterHuman_OnAIStateChanged Parms{};

	Parms._newState = _newState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGNPCCharacterHuman.OnDeadStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _bNewState                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterHuman::OnDeadStateChanged(bool _bNewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterHuman", "OnDeadStateChanged");

	Params::BFGNPCCharacterHuman_OnDeadStateChanged Parms{};

	Parms._bNewState = _bNewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGNPCCharacterHuman.OnStatDeadStateChanged
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pTargetActor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGActorStat_Bool*               _pStat                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterHuman::OnStatDeadStateChanged(class AActor* _pTargetActor, class UBFGActorStat_Bool* _pStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterHuman", "OnStatDeadStateChanged");

	Params::BFGNPCCharacterHuman_OnStatDeadStateChanged Parms{};

	Parms._pTargetActor = _pTargetActor;
	Parms._pStat = _pStat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterHuman.TriggerEventAIStateChanged
// (Final, Native, Protected)
// Parameters:
// EBFGBehaviourState_NPC                  _newState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterHuman::TriggerEventAIStateChanged(EBFGBehaviourState_NPC _newState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterHuman", "TriggerEventAIStateChanged");

	Params::BFGNPCCharacterHuman_TriggerEventAIStateChanged Parms{};

	Parms._newState = _newState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterHuman.GetBrainSpawnLocation
// (Event, Protected, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ABFGNPCCharacterHuman::GetBrainSpawnLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterHuman", "GetBrainSpawnLocation");

	Params::BFGNPCCharacterHuman_GetBrainSpawnLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_ConfirmUpgrade.Setup
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _strUpgradeName                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   _iUpgradeCost                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_ConfirmUpgrade::Setup(const class FText& _strUpgradeName, int32 _iUpgradeCost)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_ConfirmUpgrade", "Setup");

	Params::BFGWidget_ConfirmUpgrade_Setup Parms{};

	Parms._strUpgradeName = std::move(_strUpgradeName);
	Parms._iUpgradeCost = _iUpgradeCost;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGHUDVisibilityStateCapable.ComputeDesiredVisibility
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IBFGHUDVisibilityStateCapable::ComputeDesiredVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGHUDVisibilityStateCapable", "ComputeDesiredVisibility");

	Params::BFGHUDVisibilityStateCapable_ComputeDesiredVisibility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGHUDVisibilityStateCapable.SetManagedVisibilityState
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bVisible                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IBFGHUDVisibilityStateCapable::SetManagedVisibilityState(bool _bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGHUDVisibilityStateCapable", "SetManagedVisibilityState");

	Params::BFGHUDVisibilityStateCapable_SetManagedVisibilityState Parms{};

	Parms._bVisible = _bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGHUDVisibilityStateCapable.SetRegistered
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bRegistered                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IBFGHUDVisibilityStateCapable::SetRegistered(bool _bRegistered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGHUDVisibilityStateCapable", "SetRegistered");

	Params::BFGHUDVisibilityStateCapable_SetRegistered Parms{};

	Parms._bRegistered = _bRegistered;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_HUDVisibilityStateManager.AddState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBFGHUDVisibilityState                  _eState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_HUDVisibilityStateManager::AddState(EBFGHUDVisibilityState _eState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_HUDVisibilityStateManager", "AddState");

	Params::BFGActorComponent_HUDVisibilityStateManager_AddState Parms{};

	Parms._eState = _eState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_HUDVisibilityStateManager.ForceUpdateNextFrame
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_HUDVisibilityStateManager::ForceUpdateNextFrame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_HUDVisibilityStateManager", "ForceUpdateNextFrame");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_HUDVisibilityStateManager.RegisterObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class IBFGHUDVisibilityStateCapable>_pObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)

void UBFGActorComponent_HUDVisibilityStateManager::RegisterObject(TScriptInterface<class IBFGHUDVisibilityStateCapable> _pObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_HUDVisibilityStateManager", "RegisterObject");

	Params::BFGActorComponent_HUDVisibilityStateManager_RegisterObject Parms{};

	Parms._pObject = _pObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_HUDVisibilityStateManager.RemoveState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBFGHUDVisibilityState                  _eState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_HUDVisibilityStateManager::RemoveState(EBFGHUDVisibilityState _eState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_HUDVisibilityStateManager", "RemoveState");

	Params::BFGActorComponent_HUDVisibilityStateManager_RemoveState Parms{};

	Parms._eState = _eState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_HUDVisibilityStateManager.UnregisterObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class IBFGHUDVisibilityStateCapable>_pObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)

void UBFGActorComponent_HUDVisibilityStateManager::UnregisterObject(TScriptInterface<class IBFGHUDVisibilityStateCapable> _pObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_HUDVisibilityStateManager", "UnregisterObject");

	Params::BFGActorComponent_HUDVisibilityStateManager_UnregisterObject Parms{};

	Parms._pObject = _pObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNetworkPathAgent_AIStateBase.OnAgentAttachedActorResetCallback
// (Final, Native, Protected)
// Parameters:
// class UBFGNetworkPathAgent*             _pAgent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGNetworkPathAgent_AIStateBase::OnAgentAttachedActorResetCallback(class UBFGNetworkPathAgent* _pAgent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNetworkPathAgent_AIStateBase", "OnAgentAttachedActorResetCallback");

	Params::BFGNetworkPathAgent_AIStateBase_OnAgentAttachedActorResetCallback Parms{};

	Parms._pAgent = _pAgent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNetworkPathAgent_AIStateCrowdLife.OnAnimationSequenceChanged
// (Final, Native, Protected)
// Parameters:
// class UBFGCrowdLifeStationComponent*    _pStation                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGNetworkPathAgent_AIStateCrowdLife::OnAnimationSequenceChanged(class UBFGCrowdLifeStationComponent* _pStation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNetworkPathAgent_AIStateCrowdLife", "OnAnimationSequenceChanged");

	Params::BFGNetworkPathAgent_AIStateCrowdLife_OnAnimationSequenceChanged Parms{};

	Parms._pStation = _pStation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNetworkPathAgent_AIStateCrowdLife.OnAttachedACtorChanged
// (Final, Native, Protected)
// Parameters:
// class UBFGNetworkPathAgent*             _pAgent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bIsAttached                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGNetworkPathAgent_AIStateCrowdLife::OnAttachedACtorChanged(class UBFGNetworkPathAgent* _pAgent, class AActor* _pActor, bool _bIsAttached)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNetworkPathAgent_AIStateCrowdLife", "OnAttachedACtorChanged");

	Params::BFGNetworkPathAgent_AIStateCrowdLife_OnAttachedACtorChanged Parms{};

	Parms._pAgent = _pAgent;
	Parms._pActor = _pActor;
	Parms._bIsAttached = _bIsAttached;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEventTrigger_AITaskFinished.OnFinishedTask
// (Final, Native, Protected)
// Parameters:
// class APawn*                            _pPawn                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      _pController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFG_AITask*                      _pTask                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_AITaskFinished::OnFinishedTask(class APawn* _pPawn, class AController* _pController, class UBFG_AITask* _pTask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_AITaskFinished", "OnFinishedTask");

	Params::BFGEventTrigger_AITaskFinished_OnFinishedTask Parms{};

	Parms._pPawn = _pPawn;
	Parms._pController = _pController;
	Parms._pTask = _pTask;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterEnemy_Turret_Roboprez.Awaken
// (Final, Native, Public)

void ABFGNPCCharacterEnemy_Turret_Roboprez::Awaken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterEnemy_Turret_Roboprez", "Awaken");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterEnemy_Turret_Roboprez.OnAwaken
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABFGNPCCharacterEnemy_Turret_Roboprez::OnAwaken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterEnemy_Turret_Roboprez", "OnAwaken");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGNPCCharacterEnemy_Turret_Roboprez.OnBecomeDormant
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABFGNPCCharacterEnemy_Turret_Roboprez::OnBecomeDormant()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterEnemy_Turret_Roboprez", "OnBecomeDormant");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGNPCCharacterEnemy_Turret_Roboprez.StartCountdownIfPhaseMatches
// (Final, Native, Public)
// Parameters:
// int32                                   M_iPhase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterEnemy_Turret_Roboprez::StartCountdownIfPhaseMatches(int32 M_iPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterEnemy_Turret_Roboprez", "StartCountdownIfPhaseMatches");

	Params::BFGNPCCharacterEnemy_Turret_Roboprez_StartCountdownIfPhaseMatches Parms{};

	Parms.M_iPhase = M_iPhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterEnemy_Turret_Roboprez.StartCountdownToAwaken
// (Final, Native, Public)

void ABFGNPCCharacterEnemy_Turret_Roboprez::StartCountdownToAwaken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterEnemy_Turret_Roboprez", "StartCountdownToAwaken");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTaskNode_Action_MetaPattern.OnShootingComplete
// (Final, Native, Protected)

void UBFGTaskNode_Action_MetaPattern::OnShootingComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTaskNode_Action_MetaPattern", "OnShootingComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTaskNode_Action_MetaPattern.OnShootingStarted
// (Final, Native, Protected)

void UBFGTaskNode_Action_MetaPattern::OnShootingStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTaskNode_Action_MetaPattern", "OnShootingStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMaterialUtils.GetCurrentPostProcessVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWorld*                           _pWorld                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APostProcessVolume*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APostProcessVolume* UBFGMaterialUtils::GetCurrentPostProcessVolume(class UWorld* _pWorld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGMaterialUtils", "GetCurrentPostProcessVolume");

	Params::BFGMaterialUtils_GetCurrentPostProcessVolume Parms{};

	Parms._pWorld = _pWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMaterialUtils.SetTextureParameterValueBySprite
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         _pMaterialInstance                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _parameterName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPaperSprite*                     _pSprite                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGMaterialUtils::SetTextureParameterValueBySprite(class UMaterialInstanceDynamic* _pMaterialInstance, class FName _parameterName, class UPaperSprite* _pSprite)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGMaterialUtils", "SetTextureParameterValueBySprite");

	Params::BFGMaterialUtils_SetTextureParameterValueBySprite Parms{};

	Parms._pMaterialInstance = _pMaterialInstance;
	Parms._parameterName = _parameterName;
	Parms._pSprite = _pSprite;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMaterialUtils.SetVectorParameterValueBySprite
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         _pMaterialInstance                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _parameterName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPaperSprite*                     _pSprite                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGMaterialUtils::SetVectorParameterValueBySprite(class UMaterialInstanceDynamic* _pMaterialInstance, class FName _parameterName, class UPaperSprite* _pSprite)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGMaterialUtils", "SetVectorParameterValueBySprite");

	Params::BFGMaterialUtils_SetVectorParameterValueBySprite Parms{};

	Parms._pMaterialInstance = _pMaterialInstance;
	Parms._parameterName = _parameterName;
	Parms._pSprite = _pSprite;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_HUD.GetGameState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ABFGGameState*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGGameState* UBFGWidget_HUD::GetGameState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD", "GetGameState");

	Params::BFGWidget_HUD_GetGameState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_HUD.ValidateData
// (Event, Public, BlueprintEvent)

void UBFGWidget_HUD::ValidateData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD", "ValidateData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_HUD.GetOwningGameplayToHud
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGActorComponent_GameplayToHud* ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGActorComponent_GameplayToHud* UBFGWidget_HUD::GetOwningGameplayToHud() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD", "GetOwningGameplayToHud");

	Params::BFGWidget_HUD_GetOwningGameplayToHud Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_HUD_Subtitle.OnUpdateMessage
// (Event, Public, BlueprintEvent)

void UBFGWidget_HUD_Subtitle::OnUpdateMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_Subtitle", "OnUpdateMessage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_HUD_Subtitle.PlayHideAnimation
// (Event, Public, BlueprintEvent)

void UBFGWidget_HUD_Subtitle::PlayHideAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_Subtitle", "PlayHideAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_HUD_Subtitle.PlayShowAnimation
// (Event, Public, BlueprintEvent)

void UBFGWidget_HUD_Subtitle::PlayShowAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_Subtitle", "PlayShowAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_HUD_Subtitle.ShowWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_Subtitle::ShowWidget(bool _bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_Subtitle", "ShowWidget");

	Params::BFGWidget_HUD_Subtitle_ShowWidget Parms{};

	Parms._bShow = _bShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_HUD_QuestTracker.BeforeQuestRemove
// (Event, Public, BlueprintEvent)
// Parameters:
// class UBFGWidget_QuestEntry*            _pQuestEntry                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_QuestTracker::BeforeQuestRemove(class UBFGWidget_QuestEntry* _pQuestEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_QuestTracker", "BeforeQuestRemove");

	Params::BFGWidget_HUD_QuestTracker_BeforeQuestRemove Parms{};

	Parms._pQuestEntry = _pQuestEntry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_HUD_QuestTracker.GetContainer
// (Event, Public, BlueprintEvent)
// Parameters:
// class UCanvasPanel*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCanvasPanel* UBFGWidget_HUD_QuestTracker::GetContainer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_QuestTracker", "GetContainer");

	Params::BFGWidget_HUD_QuestTracker_GetContainer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_HUD_QuestTracker.OnHide
// (Event, Public, BlueprintEvent)

void UBFGWidget_HUD_QuestTracker::OnHide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_QuestTracker", "OnHide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_HUD_QuestTracker.OnNewQuestAdded
// (Event, Public, BlueprintEvent)
// Parameters:
// class UBFGWidget_QuestEntry*            _pQuestEntry                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_QuestTracker::OnNewQuestAdded(class UBFGWidget_QuestEntry* _pQuestEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_QuestTracker", "OnNewQuestAdded");

	Params::BFGWidget_HUD_QuestTracker_OnNewQuestAdded Parms{};

	Parms._pQuestEntry = _pQuestEntry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_HUD_QuestTracker.OnQuestEntryHideAnimationFinished
// (Final, Native, Public)
// Parameters:
// class UBFGWidget_QuestEntry*            _pQuestEntry                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_QuestTracker::OnQuestEntryHideAnimationFinished(class UBFGWidget_QuestEntry* _pQuestEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_QuestTracker", "OnQuestEntryHideAnimationFinished");

	Params::BFGWidget_HUD_QuestTracker_OnQuestEntryHideAnimationFinished Parms{};

	Parms._pQuestEntry = _pQuestEntry;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_HUD_QuestTracker.OnShow
// (Event, Public, BlueprintEvent)

void UBFGWidget_HUD_QuestTracker::OnShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_QuestTracker", "OnShow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_HUD_QuestTracker.OnSwap
// (Event, Public, BlueprintEvent)

void UBFGWidget_HUD_QuestTracker::OnSwap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_QuestTracker", "OnSwap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_HUD_QuestTracker.RebuildLayoutNative
// (Native, Event, Public, BlueprintEvent)

void UBFGWidget_HUD_QuestTracker::RebuildLayoutNative()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_QuestTracker", "RebuildLayoutNative");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_HUD_QuestTracker.SetSpacerSize
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector2D                        _vSize                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_QuestTracker::SetSpacerSize(const struct FVector2D& _vSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_QuestTracker", "SetSpacerSize");

	Params::BFGWidget_HUD_QuestTracker_SetSpacerSize Parms{};

	Parms._vSize = std::move(_vSize);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGAchievementAwardActor.OnAchievementAwarded
// (Event, Public, BlueprintEvent)
// Parameters:
// class APlayerController*                _pPlayerController                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _nAchievementID                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fAchievementProgress                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bShouldSaved                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGAchievementAwardActor::OnAchievementAwarded(class APlayerController* _pPlayerController, class FName _nAchievementID, float _fAchievementProgress, bool _bShouldSaved)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAchievementAwardActor", "OnAchievementAwarded");

	Params::BFGAchievementAwardActor_OnAchievementAwarded Parms{};

	Parms._pPlayerController = _pPlayerController;
	Parms._nAchievementID = _nAchievementID;
	Parms._fAchievementProgress = _fAchievementProgress;
	Parms._bShouldSaved = _bShouldSaved;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGInteractable.OnInteract
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           _pOtherActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGInteractable::OnInteract(class AActor* _pOtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInteractable", "OnInteract");

	Params::BFGInteractable_OnInteract Parms{};

	Parms._pOtherActor = _pOtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGQuest_Element.GetChallenge
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGQuest_Challenge*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGQuest_Challenge* UBFGQuest_Element::GetChallenge() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Element", "GetChallenge");

	Params::BFGQuest_Element_GetChallenge Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_ElementCheckpoint.OnEnterdQuestStep
// (Final, Native, Public)
// Parameters:
// class UBFGQuest_Element*                _pElement                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGQuest_ElementCheckpoint::OnEnterdQuestStep(class UBFGQuest_Element* _pElement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_ElementCheckpoint", "OnEnterdQuestStep");

	Params::BFGQuest_ElementCheckpoint_OnEnterdQuestStep Parms{};

	Parms._pElement = _pElement;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAchievementManager.AwardAchievement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWorld*                           _pWorldContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _nAchievementID                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fAchievementProgress                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bShouldSave                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAchievementManager::AwardAchievement(class UWorld* _pWorldContext, class FName _nAchievementID, float _fAchievementProgress, bool _bShouldSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAchievementManager", "AwardAchievement");

	Params::BFGAchievementManager_AwardAchievement Parms{};

	Parms._pWorldContext = _pWorldContext;
	Parms._nAchievementID = _nAchievementID;
	Parms._fAchievementProgress = _fAchievementProgress;
	Parms._bShouldSave = _bShouldSave;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAchievementManager.AwardAchievementsFailed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWorld*                           _pWorldContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _nAchievementID                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fAchievementProgress                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bShouldSave                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAchievementManager::AwardAchievementsFailed(class UWorld* _pWorldContext, class FName _nAchievementID, float _fAchievementProgress, bool _bShouldSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAchievementManager", "AwardAchievementsFailed");

	Params::BFGAchievementManager_AwardAchievementsFailed Parms{};

	Parms._pWorldContext = _pWorldContext;
	Parms._nAchievementID = _nAchievementID;
	Parms._fAchievementProgress = _fAchievementProgress;
	Parms._bShouldSave = _bShouldSave;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAchievementManager.AwardAchievementsSuccess
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWorld*                           _pWorldContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _nAchievementID                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fAchievementProgress                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bShouldSave                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAchievementManager::AwardAchievementsSuccess(class UWorld* _pWorldContext, class FName _nAchievementID, float _fAchievementProgress, bool _bShouldSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAchievementManager", "AwardAchievementsSuccess");

	Params::BFGAchievementManager_AwardAchievementsSuccess Parms{};

	Parms._pWorldContext = _pWorldContext;
	Parms._nAchievementID = _nAchievementID;
	Parms._fAchievementProgress = _fAchievementProgress;
	Parms._bShouldSave = _bShouldSave;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAchievementManager.ReApplyAchievements
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWorld*                           _pWorldContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAchievementManager::ReApplyAchievements(class UWorld* _pWorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAchievementManager", "ReApplyAchievements");

	Params::BFGAchievementManager_ReApplyAchievements Parms{};

	Parms._pWorldContext = _pWorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGScriptedSequence_TaskEnterVehicle.CreateAndAddScriptedSequence_TaskEnterVehicle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBFGScriptedSequence*             _pScriptedSequence                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagQuery                _vehicleTag                                            (Parm, NativeAccessSpecifierPublic)
// EBFGVehiclePassenger_Spot               _eSpot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGScriptedSequence_TaskEnterVehicle::CreateAndAddScriptedSequence_TaskEnterVehicle(class UBFGScriptedSequence* _pScriptedSequence, const struct FGameplayTagQuery& _vehicleTag, EBFGVehiclePassenger_Spot _eSpot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGScriptedSequence_TaskEnterVehicle", "CreateAndAddScriptedSequence_TaskEnterVehicle");

	Params::BFGScriptedSequence_TaskEnterVehicle_CreateAndAddScriptedSequence_TaskEnterVehicle Parms{};

	Parms._pScriptedSequence = _pScriptedSequence;
	Parms._vehicleTag = std::move(_vehicleTag);
	Parms._eSpot = _eSpot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGScriptedSequence_TaskPlayAnim.CreateAndAddScriptedSequence_TaskPlayAnim
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBFGScriptedSequence*             _pScriptedSequence                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class AActor>            _softDestination                                       (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBFGInteractAnimationSequence    _animSequenceData                                      (Parm, NativeAccessSpecifierPublic)
// bool                                    _bLooping                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fDuration                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bFinishTaskWhenAnimStarted                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGScriptedSequence_TaskPlayAnim::CreateAndAddScriptedSequence_TaskPlayAnim(class UBFGScriptedSequence* _pScriptedSequence, TSoftObjectPtr<class AActor> _softDestination, const struct FBFGInteractAnimationSequence& _animSequenceData, bool _bLooping, float _fDuration, bool _bFinishTaskWhenAnimStarted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGScriptedSequence_TaskPlayAnim", "CreateAndAddScriptedSequence_TaskPlayAnim");

	Params::BFGScriptedSequence_TaskPlayAnim_CreateAndAddScriptedSequence_TaskPlayAnim Parms{};

	Parms._pScriptedSequence = _pScriptedSequence;
	Parms._softDestination = _softDestination;
	Parms._animSequenceData = std::move(_animSequenceData);
	Parms._bLooping = _bLooping;
	Parms._fDuration = _fDuration;
	Parms._bFinishTaskWhenAnimStarted = _bFinishTaskWhenAnimStarted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActor_Silhouette_SpinTornado.ActivateTornadoVFX
// (Event, Protected, BlueprintEvent)

void ABFGActor_Silhouette_SpinTornado::ActivateTornadoVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActor_Silhouette_SpinTornado", "ActivateTornadoVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGActor_Silhouette_SpinTornado.DeactivateTornadoVFX
// (Event, Protected, BlueprintEvent)

void ABFGActor_Silhouette_SpinTornado::DeactivateTornadoVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActor_Silhouette_SpinTornado", "DeactivateTornadoVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGActor_Silhouette_SpinTornado.EndSpinning
// (Final, Native, Public)

void ABFGActor_Silhouette_SpinTornado::EndSpinning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActor_Silhouette_SpinTornado", "EndSpinning");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActor_Silhouette_SpinTornado.ShootBeam
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          _vSpawnLocation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         _vSpawnRotation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class ABFGProjectile_Object*            _pOwnerProjectile                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGActor_Silhouette_SpinTornado::ShootBeam(const struct FVector& _vSpawnLocation, const struct FRotator& _vSpawnRotation, class ABFGProjectile_Object* _pOwnerProjectile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActor_Silhouette_SpinTornado", "ShootBeam");

	Params::BFGActor_Silhouette_SpinTornado_ShootBeam Parms{};

	Parms._vSpawnLocation = std::move(_vSpawnLocation);
	Parms._vSpawnRotation = std::move(_vSpawnRotation);
	Parms._pOwnerProjectile = _pOwnerProjectile;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGActor_Silhouette_SpinTornado.StartSpinning
// (Final, Native, Public)

void ABFGActor_Silhouette_SpinTornado::StartSpinning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActor_Silhouette_SpinTornado", "StartSpinning");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BFGCore.BFGMentalAbilityBase.BoolEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UBFGMentalAbilityBase*            _pAbility                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGMentalAbilityBase::BoolEvent__DelegateSignature(class UBFGMentalAbilityBase* _pAbility, bool _bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbilityBase", "BoolEvent__DelegateSignature");

	Params::BFGMentalAbilityBase_BoolEvent__DelegateSignature Parms{};

	Parms._pAbility = _pAbility;
	Parms._bEnabled = _bEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGMentalAbilityBase.ForceStop
// (Native, Public, BlueprintCallable)

void UBFGMentalAbilityBase::ForceStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbilityBase", "ForceStop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMentalAbilityBase.MovedOutOfRange
// (Event, Protected, BlueprintEvent)

void UBFGMentalAbilityBase::MovedOutOfRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbilityBase", "MovedOutOfRange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGMentalAbilityBase.OnAbilityActivationFailed
// (Event, Protected, BlueprintEvent)
// Parameters:
// EAbilityActivationResult                _abilityFailReason                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGMentalAbilityBase::OnAbilityActivationFailed(EAbilityActivationResult _abilityFailReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbilityBase", "OnAbilityActivationFailed");

	Params::BFGMentalAbilityBase_OnAbilityActivationFailed Parms{};

	Parms._abilityFailReason = _abilityFailReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGMentalAbilityBase.OnAbilityEffect
// (Event, Protected, BlueprintEvent)

void UBFGMentalAbilityBase::OnAbilityEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbilityBase", "OnAbilityEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGMentalAbilityBase.OnAbilityEnd
// (Event, Protected, BlueprintEvent)

void UBFGMentalAbilityBase::OnAbilityEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbilityBase", "OnAbilityEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGMentalAbilityBase.OnCooldownFinished
// (Event, Protected, BlueprintEvent)

void UBFGMentalAbilityBase::OnCooldownFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbilityBase", "OnCooldownFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGMentalAbilityBase.OnSmashedDuringEffect
// (Event, Protected, BlueprintEvent)

void UBFGMentalAbilityBase::OnSmashedDuringEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbilityBase", "OnSmashedDuringEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGMentalAbilityBase.OnSmashedDuringLink
// (Event, Protected, BlueprintEvent)

void UBFGMentalAbilityBase::OnSmashedDuringLink()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbilityBase", "OnSmashedDuringLink");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGMentalAbilityBase.OnTick
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   _fDeltaTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGMentalAbilityBase::OnTick(float _fDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbilityBase", "OnTick");

	Params::BFGMentalAbilityBase_OnTick Parms{};

	Parms._fDeltaTime = _fDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGMentalAbilityBase.SetState
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EAbilityState                           _eState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bForceBroadcast                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGMentalAbilityBase::SetState(EAbilityState _eState, bool _bForceBroadcast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbilityBase", "SetState");

	Params::BFGMentalAbilityBase_SetState Parms{};

	Parms._eState = _eState;
	Parms._bForceBroadcast = _bForceBroadcast;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMentalAbilityBase.StartedMentalLink
// (Event, Protected, BlueprintEvent)

void UBFGMentalAbilityBase::StartedMentalLink()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbilityBase", "StartedMentalLink");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGMentalAbilityBase.StoppedMentalLink
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _wasSuccessfull                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGMentalAbilityBase::StoppedMentalLink(bool _wasSuccessfull)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbilityBase", "StoppedMentalLink");

	Params::BFGMentalAbilityBase_StoppedMentalLink Parms{};

	Parms._wasSuccessfull = _wasSuccessfull;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGMentalAbilityBase.UpdateAbilityDressing
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   _fDeltaTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGMentalAbilityBase::UpdateAbilityDressing(float _fDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbilityBase", "UpdateAbilityDressing");

	Params::BFGMentalAbilityBase_UpdateAbilityDressing Parms{};

	Parms._fDeltaTime = _fDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGMentalAbilityBase.CheckIsUpgradeUnlocked
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     _rTag                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGMentalAbilityBase::CheckIsUpgradeUnlocked(const struct FGameplayTag& _rTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbilityBase", "CheckIsUpgradeUnlocked");

	Params::BFGMentalAbilityBase_CheckIsUpgradeUnlocked Parms{};

	Parms._rTag = std::move(_rTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMentalAbilityBase.GetActiveTarget
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UBFGMentalAbilityBase::GetActiveTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbilityBase", "GetActiveTarget");

	Params::BFGMentalAbilityBase_GetActiveTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMentalAbilityBase.GetAnimationPosture
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBFGAnimation_MentalAbilityPosture      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBFGAnimation_MentalAbilityPosture UBFGMentalAbilityBase::GetAnimationPosture() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbilityBase", "GetAnimationPosture");

	Params::BFGMentalAbilityBase_GetAnimationPosture Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMentalAbilityBase.GetBFGGameState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ABFGGameState*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGGameState* UBFGMentalAbilityBase::GetBFGGameState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbilityBase", "GetBFGGameState");

	Params::BFGMentalAbilityBase_GetBFGGameState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMentalAbilityBase.GetCurrentChannelPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGMentalAbilityBase::GetCurrentChannelPercent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbilityBase", "GetCurrentChannelPercent");

	Params::BFGMentalAbilityBase_GetCurrentChannelPercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMentalAbilityBase.GetCurrentEffectProgressPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGMentalAbilityBase::GetCurrentEffectProgressPercent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbilityBase", "GetCurrentEffectProgressPercent");

	Params::BFGMentalAbilityBase_GetCurrentEffectProgressPercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMentalAbilityBase.GetState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAbilityState                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAbilityState UBFGMentalAbilityBase::GetState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbilityBase", "GetState");

	Params::BFGMentalAbilityBase_GetState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMentalAbilityBase.GetUser
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UBFGMentalAbilityBase::GetUser() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbilityBase", "GetUser");

	Params::BFGMentalAbilityBase_GetUser Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMentalAbilityBase.IsAvailable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGMentalAbilityBase::IsAvailable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbilityBase", "IsAvailable");

	Params::BFGMentalAbilityBase_IsAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMentalAbility_Hypnotize.HandleTargetTakeDamage
// (Final, Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// class UBFGActorComponent_PawnDamage*    _pPawnDamage                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fDamage                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pDamageCauser                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGDamageType*                   _pDamageType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _rShotDirection                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       _oHitResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UBFGMentalAbility_Hypnotize::HandleTargetTakeDamage(class UBFGActorComponent_PawnDamage* _pPawnDamage, float _fDamage, class AActor* _pDamageCauser, class UBFGDamageType* _pDamageType, const struct FVector& _rShotDirection, const struct FHitResult& _oHitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Hypnotize", "HandleTargetTakeDamage");

	Params::BFGMentalAbility_Hypnotize_HandleTargetTakeDamage Parms{};

	Parms._pPawnDamage = _pPawnDamage;
	Parms._fDamage = _fDamage;
	Parms._pDamageCauser = _pDamageCauser;
	Parms._pDamageType = _pDamageType;
	Parms._rShotDirection = std::move(_rShotDirection);
	Parms._oHitResult = std::move(_oHitResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_IngameMainMenu.SetChallengeDisabled
// (Event, Protected, BlueprintEvent)
// Parameters:
// EBFGChallengeType                       _eType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bDisabled                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_IngameMainMenu::SetChallengeDisabled(EBFGChallengeType _eType, bool _bDisabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_IngameMainMenu", "SetChallengeDisabled");

	Params::BFGWidget_IngameMainMenu_SetChallengeDisabled Parms{};

	Parms._eType = _eType;
	Parms._bDisabled = _bDisabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_IngameMainMenu.SetChallengeRating
// (Event, Protected, BlueprintEvent)
// Parameters:
// EBFGChallengeType                       _eType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iRating                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_IngameMainMenu::SetChallengeRating(EBFGChallengeType _eType, int32 _iRating)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_IngameMainMenu", "SetChallengeRating");

	Params::BFGWidget_IngameMainMenu_SetChallengeRating Parms{};

	Parms._eType = _eType;
	Parms._iRating = _iRating;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_IngameMainMenu.SetDNAAmount
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   _iDNAAmount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_IngameMainMenu::SetDNAAmount(int32 _iDNAAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_IngameMainMenu", "SetDNAAmount");

	Params::BFGWidget_IngameMainMenu_SetDNAAmount Parms{};

	Parms._iDNAAmount = _iDNAAmount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_IngameMainMenu.SetDroneCount
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   _iMax                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iCurrent                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_IngameMainMenu::SetDroneCount(int32 _iMax, int32 _iCurrent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_IngameMainMenu", "SetDroneCount");

	Params::BFGWidget_IngameMainMenu_SetDroneCount Parms{};

	Parms._iMax = _iMax;
	Parms._iCurrent = _iCurrent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_IngameMainMenu.SetWorldInfoEnabled
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _bEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_IngameMainMenu::SetWorldInfoEnabled(bool _bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_IngameMainMenu", "SetWorldInfoEnabled");

	Params::BFGWidget_IngameMainMenu_SetWorldInfoEnabled Parms{};

	Parms._bEnabled = _bEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_IngameMainMenu.UpdateWorldDescription
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _oDescription                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_IngameMainMenu::UpdateWorldDescription(const class FText& _oDescription)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_IngameMainMenu", "UpdateWorldDescription");

	Params::BFGWidget_IngameMainMenu_UpdateWorldDescription Parms{};

	Parms._oDescription = std::move(_oDescription);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGActorAlertSystem.EnableAlertSystem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGActorAlertSystem::EnableAlertSystem(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorAlertSystem", "EnableAlertSystem");

	Params::BFGActorAlertSystem_EnableAlertSystem Parms{};

	Parms.Enable = Enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorAlertSystem.IsAlertSystemEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGActorAlertSystem::IsAlertSystemEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorAlertSystem", "IsAlertSystemEnabled");

	Params::BFGActorAlertSystem_IsAlertSystemEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction BFGCore.BFGWidget_HUD_TutorialIndicator.ActionTutorialIndictorAnimationState__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EBFGTutorialIndicatorAnimationState     _eCurrentState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_TutorialIndicator::ActionTutorialIndictorAnimationState__DelegateSignature(EBFGTutorialIndicatorAnimationState _eCurrentState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_TutorialIndicator", "ActionTutorialIndictorAnimationState__DelegateSignature");

	Params::BFGWidget_HUD_TutorialIndicator_ActionTutorialIndictorAnimationState__DelegateSignature Parms{};

	Parms._eCurrentState = _eCurrentState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_HUD_TutorialIndicator.ComputeSpeedInterpolate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGWidget_HUD_TutorialIndicator::ComputeSpeedInterpolate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_TutorialIndicator", "ComputeSpeedInterpolate");

	Params::BFGWidget_HUD_TutorialIndicator_ComputeSpeedInterpolate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_HUD_TutorialIndicator.ComputeSpeedPopup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGWidget_HUD_TutorialIndicator::ComputeSpeedPopup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_TutorialIndicator", "ComputeSpeedPopup");

	Params::BFGWidget_HUD_TutorialIndicator_ComputeSpeedPopup Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_HUD_TutorialIndicator.ComputeSpeedVanish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGWidget_HUD_TutorialIndicator::ComputeSpeedVanish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_TutorialIndicator", "ComputeSpeedVanish");

	Params::BFGWidget_HUD_TutorialIndicator_ComputeSpeedVanish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_HUD_TutorialIndicator.PlayIndicatorHideAnimation
// (Event, Public, BlueprintEvent)

void UBFGWidget_HUD_TutorialIndicator::PlayIndicatorHideAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_TutorialIndicator", "PlayIndicatorHideAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_HUD_TutorialIndicator.PlayIndicatorShowAnimation
// (Event, Public, BlueprintEvent)

void UBFGWidget_HUD_TutorialIndicator::PlayIndicatorShowAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_TutorialIndicator", "PlayIndicatorShowAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_HUD_TutorialIndicator.SetIndicatorIcon
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FSlateBrush                      _slateBrush                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_TutorialIndicator::SetIndicatorIcon(const struct FSlateBrush& _slateBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_TutorialIndicator", "SetIndicatorIcon");

	Params::BFGWidget_HUD_TutorialIndicator_SetIndicatorIcon Parms{};

	Parms._slateBrush = std::move(_slateBrush);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_HUD_TutorialIndicator.SetIndicatorVisibility
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bVisible                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_TutorialIndicator::SetIndicatorVisibility(bool _bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_TutorialIndicator", "SetIndicatorVisibility");

	Params::BFGWidget_HUD_TutorialIndicator_SetIndicatorVisibility Parms{};

	Parms._bVisible = _bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_HUD_TutorialIndicator.UpdateIndicatorPosition
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector2D                        _vPosition                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_TutorialIndicator::UpdateIndicatorPosition(const struct FVector2D& _vPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_TutorialIndicator", "UpdateIndicatorPosition");

	Params::BFGWidget_HUD_TutorialIndicator_UpdateIndicatorPosition Parms{};

	Parms._vPosition = std::move(_vPosition);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGActorBuilding.AddEffect_CS
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FBFGBuildingDestructionCloudEffects_effect                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ABFGActorBuilding::AddEffect_CS(const struct FBFGBuildingDestructionCloudEffects& _effect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "AddEffect_CS");

	Params::BFGActorBuilding_AddEffect_CS Parms{};

	Parms._effect = std::move(_effect);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.AddEffect_DS
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FBFGBuildingDestructionDetailEffects_effect                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ABFGActorBuilding::AddEffect_DS(const struct FBFGBuildingDestructionDetailEffects& _effect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "AddEffect_DS");

	Params::BFGActorBuilding_AddEffect_DS Parms{};

	Parms._effect = std::move(_effect);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.AddEffect_FS
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FBFGBuildingFluffEffects         _effect                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ABFGActorBuilding::AddEffect_FS(const struct FBFGBuildingFluffEffects& _effect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "AddEffect_FS");

	Params::BFGActorBuilding_AddEffect_FS Parms{};

	Parms._effect = std::move(_effect);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.AddEffect_PS
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EBFGBuilding_DestructionPhase           _ePhase                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBFGBuildingDestructionPropagationEffects_effect                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ABFGActorBuilding::AddEffect_PS(EBFGBuilding_DestructionPhase _ePhase, const struct FBFGBuildingDestructionPropagationEffects& _effect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "AddEffect_PS");

	Params::BFGActorBuilding_AddEffect_PS Parms{};

	Parms._ePhase = _ePhase;
	Parms._effect = std::move(_effect);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.AddRuinElement
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform                       _Transform                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class UParticleSystem*                  _pPFX                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UStaticMesh*                      _pStaticMesh                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           _aMaterialVariationKeys                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class UMaterialInterface*>       _aMaterialVariationValues                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ABFGActorBuilding::AddRuinElement(const struct FTransform& _Transform, class UParticleSystem* _pPFX, class UStaticMesh* _pStaticMesh, const TArray<int32>& _aMaterialVariationKeys, const TArray<class UMaterialInterface*>& _aMaterialVariationValues)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "AddRuinElement");

	Params::BFGActorBuilding_AddRuinElement Parms{};

	Parms._Transform = std::move(_Transform);
	Parms._pPFX = _pPFX;
	Parms._pStaticMesh = _pStaticMesh;
	Parms._aMaterialVariationKeys = std::move(_aMaterialVariationKeys);
	Parms._aMaterialVariationValues = std::move(_aMaterialVariationValues);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.ApplyMaterialVariation
// (Final, Native, Public, BlueprintCallable)

void ABFGActorBuilding::ApplyMaterialVariation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "ApplyMaterialVariation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.ApplyRadialDamageToBuilding
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// EBFGBuilding_DestructionPhase           _ePhase                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       _effectTransform                                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ABFGActorBuilding::ApplyRadialDamageToBuilding(EBFGBuilding_DestructionPhase _ePhase, const struct FTransform& _effectTransform, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "ApplyRadialDamageToBuilding");

	Params::BFGActorBuilding_ApplyRadialDamageToBuilding Parms{};

	Parms._ePhase = _ePhase;
	Parms._effectTransform = std::move(_effectTransform);
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.BuildLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FBFGBuilding_Level               _levelData                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGActorBuilding::BuildLevel(const struct FBFGBuilding_Level& _levelData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "BuildLevel");

	Params::BFGActorBuilding_BuildLevel Parms{};

	Parms._levelData = std::move(_levelData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorBuilding.BuildLevelWithFloorHeight
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   _fFloorHeightInOut                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBFGBuilding_Level               _levelData                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGActorBuilding::BuildLevelWithFloorHeight(float* _fFloorHeightInOut, const struct FBFGBuilding_Level& _levelData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "BuildLevelWithFloorHeight");

	Params::BFGActorBuilding_BuildLevelWithFloorHeight Parms{};

	Parms._levelData = std::move(_levelData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_fFloorHeightInOut != nullptr)
		*_fFloorHeightInOut = Parms._fFloorHeightInOut;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorBuilding.ClearAllEffects
// (Final, Native, Public, BlueprintCallable)

void ABFGActorBuilding::ClearAllEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "ClearAllEffects");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.ClearDestructionPropagationIndexUseCounts
// (Final, Native, Public, BlueprintCallable)

void ABFGActorBuilding::ClearDestructionPropagationIndexUseCounts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "ClearDestructionPropagationIndexUseCounts");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.ClearRuinElements
// (Final, Native, Protected, BlueprintCallable)

void ABFGActorBuilding::ClearRuinElements()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "ClearRuinElements");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.DestroyAndClearAllSpawnedEffects
// (Final, Native, Protected, BlueprintCallable)

void ABFGActorBuilding::DestroyAndClearAllSpawnedEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "DestroyAndClearAllSpawnedEffects");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.DestroyAndClearAllSpawnedRuins
// (Final, Native, Protected, BlueprintCallable)

void ABFGActorBuilding::DestroyAndClearAllSpawnedRuins()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "DestroyAndClearAllSpawnedRuins");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.GenerateBuilding
// (Final, Native, Public, BlueprintCallable)

void ABFGActorBuilding::GenerateBuilding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "GenerateBuilding");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.IncDestructionPropagationIndexUseCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _iDPI                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABFGActorBuilding::IncDestructionPropagationIndexUseCount(int32 _iDPI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "IncDestructionPropagationIndexUseCount");

	Params::BFGActorBuilding_IncDestructionPropagationIndexUseCount Parms{};

	Parms._iDPI = _iDPI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorBuilding.InitializeRecording
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _fTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGActorBuilding::InitializeRecording(float _fTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "InitializeRecording");

	Params::BFGActorBuilding_InitializeRecording Parms{};

	Parms._fTime = _fTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.IsRecording
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGActorBuilding::IsRecording()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "IsRecording");

	Params::BFGActorBuilding_IsRecording Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorBuilding.OnBuildingNotHitSinceElapsedTime
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                                   _fElapsedTimeWithoutAHit                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGActorBuilding::OnBuildingNotHitSinceElapsedTime(float _fElapsedTimeWithoutAHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "OnBuildingNotHitSinceElapsedTime");

	Params::BFGActorBuilding_OnBuildingNotHitSinceElapsedTime Parms{};

	Parms._fElapsedTimeWithoutAHit = _fElapsedTimeWithoutAHit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.OnCreateBlastMeshComponent
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FTransform                       _relativeTransform                                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class UBlastMesh*                       _pBlastMesh                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBFGBuildingElement              _Element                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UBlastMeshComponent*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBlastMeshComponent* ABFGActorBuilding::OnCreateBlastMeshComponent(const struct FTransform& _relativeTransform, class UBlastMesh* _pBlastMesh, const struct FBFGBuildingElement& _Element)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "OnCreateBlastMeshComponent");

	Params::BFGActorBuilding_OnCreateBlastMeshComponent Parms{};

	Parms._relativeTransform = std::move(_relativeTransform);
	Parms._pBlastMesh = _pBlastMesh;
	Parms._Element = std::move(_Element);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorBuilding.OnCreateGeometryCacheComponent
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FTransform                       _relativeTransform                                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class UGeometryCache*                   _pGeometryCache                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBFGBuildingElement              _Element                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UGeometryCacheComponent*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGeometryCacheComponent* ABFGActorBuilding::OnCreateGeometryCacheComponent(const struct FTransform& _relativeTransform, class UGeometryCache* _pGeometryCache, const struct FBFGBuildingElement& _Element)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "OnCreateGeometryCacheComponent");

	Params::BFGActorBuilding_OnCreateGeometryCacheComponent Parms{};

	Parms._relativeTransform = std::move(_relativeTransform);
	Parms._pGeometryCache = _pGeometryCache;
	Parms._Element = std::move(_Element);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorBuilding.OnTriggerExtraEffectsOnStateChange
// (Event, Public, BlueprintEvent)
// Parameters:
// EBFGBuilding_DestructionState           _eNewState                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGActorBuilding::OnTriggerExtraEffectsOnStateChange(EBFGBuilding_DestructionState _eNewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "OnTriggerExtraEffectsOnStateChange");

	Params::BFGActorBuilding_OnTriggerExtraEffectsOnStateChange Parms{};

	Parms._eNewState = _eNewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGActorBuilding.ResetBuildingForCheckpoint
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bDestroyed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGActorBuilding::ResetBuildingForCheckpoint(bool _bDestroyed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "ResetBuildingForCheckpoint");

	Params::BFGActorBuilding_ResetBuildingForCheckpoint Parms{};

	Parms._bDestroyed = _bDestroyed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGActorBuilding.SetAttachedActorVisibilityState
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    _bVisible                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGActorBuilding::SetAttachedActorVisibilityState(bool _bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "SetAttachedActorVisibilityState");

	Params::BFGActorBuilding_SetAttachedActorVisibilityState Parms{};

	Parms._bVisible = _bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.SetDestructionState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBFGBuilding_DestructionState           _eDestructionState                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGActorBuilding::SetDestructionState(EBFGBuilding_DestructionState _eDestructionState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "SetDestructionState");

	Params::BFGActorBuilding_SetDestructionState Parms{};

	Parms._eDestructionState = _eDestructionState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.SetupInitialEffects
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void ABFGActorBuilding::SetupInitialEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "SetupInitialEffects");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.SortEffects_CS
// (Final, Native, Public, BlueprintCallable)

void ABFGActorBuilding::SortEffects_CS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "SortEffects_CS");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.SortEffects_DS
// (Final, Native, Public, BlueprintCallable)

void ABFGActorBuilding::SortEffects_DS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "SortEffects_DS");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.SortEffects_PS
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBFGBuilding_DestructionPhase           _ePhase                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGActorBuilding::SortEffects_PS(EBFGBuilding_DestructionPhase _ePhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "SortEffects_PS");

	Params::BFGActorBuilding_SortEffects_PS Parms{};

	Parms._ePhase = _ePhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.SortEffects_PS_RefLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// EBFGBuilding_DestructionPhase           _ePhase                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vReferenceLocation                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGActorBuilding::SortEffects_PS_RefLocation(EBFGBuilding_DestructionPhase _ePhase, const struct FVector& _vReferenceLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "SortEffects_PS_RefLocation");

	Params::BFGActorBuilding_SortEffects_PS_RefLocation Parms{};

	Parms._ePhase = _ePhase;
	Parms._vReferenceLocation = std::move(_vReferenceLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.SpawnDestructionEffect_Detail
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGActorBuilding::SpawnDestructionEffect_Detail(int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "SpawnDestructionEffect_Detail");

	Params::BFGActorBuilding_SpawnDestructionEffect_Detail Parms{};

	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.SpawnDestructionEffects_Clouds
// (Final, Native, Protected, BlueprintCallable)

void ABFGActorBuilding::SpawnDestructionEffects_Clouds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "SpawnDestructionEffects_Clouds");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.SpawnDestructionEffects_Details
// (Final, Native, Protected, BlueprintCallable)

void ABFGActorBuilding::SpawnDestructionEffects_Details()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "SpawnDestructionEffects_Details");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.SpawnDestructionEffects_Fluff
// (Final, Native, Protected, BlueprintCallable)

void ABFGActorBuilding::SpawnDestructionEffects_Fluff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "SpawnDestructionEffects_Fluff");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.SpawnDestructionEffects_Propagation
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EBFGBuilding_DestructionPhase           _eDestructionPhase                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGActorBuilding::SpawnDestructionEffects_Propagation(EBFGBuilding_DestructionPhase _eDestructionPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "SpawnDestructionEffects_Propagation");

	Params::BFGActorBuilding_SpawnDestructionEffects_Propagation Parms{};

	Parms._eDestructionPhase = _eDestructionPhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.SpawnDestructionMeshes
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EBFGBuilding_DestructionPhase           _ePhase                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGActorBuilding::SpawnDestructionMeshes(EBFGBuilding_DestructionPhase _ePhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "SpawnDestructionMeshes");

	Params::BFGActorBuilding_SpawnDestructionMeshes Parms{};

	Parms._ePhase = _ePhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.SpawnDestructionMeshes_Latent
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EBFGBuilding_DestructionPhase           _ePhase                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ABFGActorBuilding::SpawnDestructionMeshes_Latent(EBFGBuilding_DestructionPhase _ePhase, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "SpawnDestructionMeshes_Latent");

	Params::BFGActorBuilding_SpawnDestructionMeshes_Latent Parms{};

	Parms._ePhase = _ePhase;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.SpawnRuins
// (Final, Native, Protected, BlueprintCallable)

void ABFGActorBuilding::SpawnRuins()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "SpawnRuins");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.StartDamageEffects
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          _vHitAt                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGActorBuilding::StartDamageEffects(const struct FVector& _vHitAt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "StartDamageEffects");

	Params::BFGActorBuilding_StartDamageEffects Parms{};

	Parms._vHitAt = std::move(_vHitAt);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.StartDisablingSpawnedEffects_Details
// (Final, Native, Protected, BlueprintCallable)

void ABFGActorBuilding::StartDisablingSpawnedEffects_Details()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "StartDisablingSpawnedEffects_Details");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.StartDisablingSpawnedEffects_Fluff
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void ABFGActorBuilding::StartDisablingSpawnedEffects_Fluff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "StartDisablingSpawnedEffects_Fluff");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.Stat_IsDeadChanged
// (Final, Native, Public)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGActorStat_Bool*               _pStat                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGActorBuilding::Stat_IsDeadChanged(class AActor* _pActor, class UBFGActorStat_Bool* _pStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "Stat_IsDeadChanged");

	Params::BFGActorBuilding_Stat_IsDeadChanged Parms{};

	Parms._pActor = _pActor;
	Parms._pStat = _pStat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.UpdateDamageEffects
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          _vHitAt                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGActorBuilding::UpdateDamageEffects(const struct FVector& _vHitAt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "UpdateDamageEffects");

	Params::BFGActorBuilding_UpdateDamageEffects Parms{};

	Parms._vHitAt = std::move(_vHitAt);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGActorBuilding.UpdateRecordingComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _fTimeDelta                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGActorBuilding::UpdateRecordingComponent(float _fTimeDelta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "UpdateRecordingComponent");

	Params::BFGActorBuilding_UpdateRecordingComponent Parms{};

	Parms._fTimeDelta = _fTimeDelta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.UpdateRuntimeDestructState
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   _fDeltaTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGActorBuilding::UpdateRuntimeDestructState(float _fDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "UpdateRuntimeDestructState");

	Params::BFGActorBuilding_UpdateRuntimeDestructState Parms{};

	Parms._fDeltaTime = _fDeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorBuilding.CalcSumDestructionPropagationIndexUseCounts
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABFGActorBuilding::CalcSumDestructionPropagationIndexUseCounts() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "CalcSumDestructionPropagationIndexUseCounts");

	Params::BFGActorBuilding_CalcSumDestructionPropagationIndexUseCounts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorBuilding.GetDestructionPropagationIndexUseCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _iDPI                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABFGActorBuilding::GetDestructionPropagationIndexUseCount(int32 _iDPI) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "GetDestructionPropagationIndexUseCount");

	Params::BFGActorBuilding_GetDestructionPropagationIndexUseCount Parms{};

	Parms._iDPI = _iDPI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorBuilding.GetDestructionState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBFGBuilding_DestructionState           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBFGBuilding_DestructionState ABFGActorBuilding::GetDestructionState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "GetDestructionState");

	Params::BFGActorBuilding_GetDestructionState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorBuilding.GetEffects_PS
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBFGBuilding_DestructionPhase           _ePhase                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FBFGBuildingDestructionPropagationEffects>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<struct FBFGBuildingDestructionPropagationEffects> ABFGActorBuilding::GetEffects_PS(EBFGBuilding_DestructionPhase _ePhase) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "GetEffects_PS");

	Params::BFGActorBuilding_GetEffects_PS Parms{};

	Parms._ePhase = _ePhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorBuilding.GetLastHitResult
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHitResult                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

struct FHitResult ABFGActorBuilding::GetLastHitResult() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "GetLastHitResult");

	Params::BFGActorBuilding_GetLastHitResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorBuilding.GetOrLoadBuildingHelperClass
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class ABFGBuildingHelper>   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class ABFGBuildingHelper> ABFGActorBuilding::GetOrLoadBuildingHelperClass() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "GetOrLoadBuildingHelperClass");

	Params::BFGActorBuilding_GetOrLoadBuildingHelperClass Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorBuilding.GetOrLoadRuinsHelperClass
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class ABFGBuildingHelper>   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class ABFGBuildingHelper> ABFGActorBuilding::GetOrLoadRuinsHelperClass() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "GetOrLoadRuinsHelperClass");

	Params::BFGActorBuilding_GetOrLoadRuinsHelperClass Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorBuilding.HasEffectWithSocketName_CS
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             _socketName                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGActorBuilding::HasEffectWithSocketName_CS(const class FName& _socketName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "HasEffectWithSocketName_CS");

	Params::BFGActorBuilding_HasEffectWithSocketName_CS Parms{};

	Parms._socketName = _socketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorBuilding.HasEffectWithSocketName_DS
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             _socketName                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGActorBuilding::HasEffectWithSocketName_DS(const class FName& _socketName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "HasEffectWithSocketName_DS");

	Params::BFGActorBuilding_HasEffectWithSocketName_DS Parms{};

	Parms._socketName = _socketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorBuilding.HasEffectWithSocketName_FS
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             _socketName                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGActorBuilding::HasEffectWithSocketName_FS(const class FName& _socketName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "HasEffectWithSocketName_FS");

	Params::BFGActorBuilding_HasEffectWithSocketName_FS Parms{};

	Parms._socketName = _socketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorBuilding.HasEffectWithSocketName_PS
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBFGBuilding_DestructionPhase           _ePhase                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _socketName                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGActorBuilding::HasEffectWithSocketName_PS(EBFGBuilding_DestructionPhase _ePhase, const class FName& _socketName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "HasEffectWithSocketName_PS");

	Params::BFGActorBuilding_HasEffectWithSocketName_PS Parms{};

	Parms._ePhase = _ePhase;
	Parms._socketName = _socketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorBuilding.IsDead
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGActorBuilding::IsDead() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "IsDead");

	Params::BFGActorBuilding_IsDead Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorBuilding.SetPropsShouldBeVisible
// (Final, Native, Protected, BlueprintCallable, Const)
// Parameters:
// bool                                    _bShouldBeVisible                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGActorBuilding::SetPropsShouldBeVisible(bool _bShouldBeVisible) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorBuilding", "SetPropsShouldBeVisible");

	Params::BFGActorBuilding_SetPropsShouldBeVisible Parms{};

	Parms._bShouldBeVisible = _bShouldBeVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAutoPickupItem.OnCollected
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           PCollectedBy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGAutoPickupItem::OnCollected(class AActor* PCollectedBy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAutoPickupItem", "OnCollected");

	Params::BFGAutoPickupItem_OnCollected Parms{};

	Parms.PCollectedBy = PCollectedBy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGAutoPickupItem.OnInteractableBeginOverlap
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              _pOverlappedComponent                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pOtherActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              _pOtherComponent                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iOtherBodyIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bFromSweep                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       _sweepResult                                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ABFGAutoPickupItem::OnInteractableBeginOverlap(class UPrimitiveComponent* _pOverlappedComponent, class AActor* _pOtherActor, class UPrimitiveComponent* _pOtherComponent, int32 _iOtherBodyIndex, bool _bFromSweep, const struct FHitResult& _sweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAutoPickupItem", "OnInteractableBeginOverlap");

	Params::BFGAutoPickupItem_OnInteractableBeginOverlap Parms{};

	Parms._pOverlappedComponent = _pOverlappedComponent;
	Parms._pOtherActor = _pOtherActor;
	Parms._pOtherComponent = _pOtherComponent;
	Parms._iOtherBodyIndex = _iOtherBodyIndex;
	Parms._bFromSweep = _bFromSweep;
	Parms._sweepResult = std::move(_sweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAutoPickupItem.OnPlayerPawnChanged
// (Final, Native, Protected)
// Parameters:
// class APawn*                            _pPawn                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGAutoPickupItem::OnPlayerPawnChanged(class APawn* _pPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAutoPickupItem", "OnPlayerPawnChanged");

	Params::BFGAutoPickupItem_OnPlayerPawnChanged Parms{};

	Parms._pPawn = _pPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAutoPickupItem.SetFalling
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bFalling                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   _apFallIgnoreActors                                    (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// float                                   _fFallDelay                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fHeightOffset                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGAutoPickupItem::SetFalling(bool _bFalling, const TArray<class AActor*>& _apFallIgnoreActors, float _fFallDelay, float _fHeightOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAutoPickupItem", "SetFalling");

	Params::BFGAutoPickupItem_SetFalling Parms{};

	Parms._bFalling = _bFalling;
	Parms._apFallIgnoreActors = std::move(_apFallIgnoreActors);
	Parms._fFallDelay = _fFallDelay;
	Parms._fHeightOffset = _fHeightOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAutoPickupItem.SetFlying
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bFlying                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fFlyHeight                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fFlyDelay                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGAutoPickupItem::SetFlying(bool _bFlying, float _fFlyHeight, float _fFlyDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAutoPickupItem", "SetFlying");

	Params::BFGAutoPickupItem_SetFlying Parms{};

	Parms._bFlying = _bFlying;
	Parms._fFlyHeight = _fFlyHeight;
	Parms._fFlyDelay = _fFlyDelay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_AIAnimations.OnRep_ActiveFullbodyAnimation
// (Final, Native, Protected)

void UBFGActorComponent_AIAnimations::OnRep_ActiveFullbodyAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_AIAnimations", "OnRep_ActiveFullbodyAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_AIReactions.OnActorHit
// (Final, Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// class AActor*                           _pSelfActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pOtherActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vNormalImpulse                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       _hitResult                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UBFGActorComponent_AIReactions::OnActorHit(class AActor* _pSelfActor, class AActor* _pOtherActor, const struct FVector& _vNormalImpulse, const struct FHitResult& _hitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_AIReactions", "OnActorHit");

	Params::BFGActorComponent_AIReactions_OnActorHit Parms{};

	Parms._pSelfActor = _pSelfActor;
	Parms._pOtherActor = _pOtherActor;
	Parms._vNormalImpulse = std::move(_vNormalImpulse);
	Parms._hitResult = std::move(_hitResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_AIReactions.OnTagsChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGameplayTag                     _rTag                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_AIReactions::OnTagsChanged(const struct FGameplayTag& _rTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_AIReactions", "OnTagsChanged");

	Params::BFGActorComponent_AIReactions_OnTagsChanged Parms{};

	Parms._rTag = std::move(_rTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_AITarget.OnDeadStatChanged
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGActorStat_Bool*               _pStat                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_AITarget::OnDeadStatChanged(class AActor* _pActor, class UBFGActorStat_Bool* _pStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_AITarget", "OnDeadStatChanged");

	Params::BFGActorComponent_AITarget_OnDeadStatChanged Parms{};

	Parms._pActor = _pActor;
	Parms._pStat = _pStat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_AITarget.OnHolobobDisrupted
// (Final, Native, Protected)
// Parameters:
// class UBFGMentalAbilityBase*            _pAbility                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bDisrupted                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_AITarget::OnHolobobDisrupted(class UBFGMentalAbilityBase* _pAbility, bool _bDisrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_AITarget", "OnHolobobDisrupted");

	Params::BFGActorComponent_AITarget_OnHolobobDisrupted Parms{};

	Parms._pAbility = _pAbility;
	Parms._bDisrupted = _bDisrupted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_AITarget.OnInvisibleStatChanged
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGActorStat_Bool*               _pStat                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_AITarget::OnInvisibleStatChanged(class AActor* _pActor, class UBFGActorStat_Bool* _pStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_AITarget", "OnInvisibleStatChanged");

	Params::BFGActorComponent_AITarget_OnInvisibleStatChanged Parms{};

	Parms._pActor = _pActor;
	Parms._pStat = _pStat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_AITarget.OnTagsChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGameplayTag                     _rTag                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_AITarget::OnTagsChanged(const struct FGameplayTag& _rTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_AITarget", "OnTagsChanged");

	Params::BFGActorComponent_AITarget_OnTagsChanged Parms{};

	Parms._rTag = std::move(_rTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGProjectile.DestroyFromExternalSource
// (Final, Native, Public, BlueprintCallable)

void ABFGProjectile::DestroyFromExternalSource()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile", "DestroyFromExternalSource");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGProjectile.OnImpact
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          _vLocation                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vDirection                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vNormal                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPhysicalMaterial*                _pMaterial                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGProjectile::OnImpact(const struct FVector& _vLocation, const struct FVector& _vDirection, const struct FVector& _vNormal, class UPhysicalMaterial* _pMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile", "OnImpact");

	Params::BFGProjectile_OnImpact Parms{};

	Parms._vLocation = std::move(_vLocation);
	Parms._vDirection = std::move(_vDirection);
	Parms._vNormal = std::move(_vNormal);
	Parms._pMaterial = _pMaterial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGProjectile.SetWeapon
// (Native, Public, BlueprintCallable)
// Parameters:
// class ABFGWeapon*                       _pWeapon                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGProjectile::SetWeapon(class ABFGWeapon* _pWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile", "SetWeapon");

	Params::BFGProjectile_SetWeapon Parms{};

	Parms._pWeapon = _pWeapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGProjectile.GetHolderSafe
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* ABFGProjectile::GetHolderSafe() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile", "GetHolderSafe");

	Params::BFGProjectile_GetHolderSafe Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGProjectile.GetWeaponSafe
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ABFGWeapon*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGWeapon* ABFGProjectile::GetWeaponSafe() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile", "GetWeaponSafe");

	Params::BFGProjectile_GetWeaponSafe Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGProjectile_Object.FireProjectile
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// float                                   _fMaximumTravelDistance                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  _pHomingTargetComponent                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _rInitialDirection                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGProjectile_Object::FireProjectile(float _fMaximumTravelDistance, class USceneComponent* _pHomingTargetComponent, const struct FVector& _rInitialDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_Object", "FireProjectile");

	Params::BFGProjectile_Object_FireProjectile Parms{};

	Parms._fMaximumTravelDistance = _fMaximumTravelDistance;
	Parms._pHomingTargetComponent = _pHomingTargetComponent;
	Parms._rInitialDirection = std::move(_rInitialDirection);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGProjectile_Object.OnHomingCanceled
// (Native, Event, Public, BlueprintEvent)

void ABFGProjectile_Object::OnHomingCanceled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_Object", "OnHomingCanceled");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGProjectile_Object.OnPKHit
// (Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*              _pHitComponent                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pOtherActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              _pOtherComp                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vNormalImpulse                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       _rHit                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ABFGProjectile_Object::OnPKHit(class UPrimitiveComponent* _pHitComponent, class AActor* _pOtherActor, class UPrimitiveComponent* _pOtherComp, const struct FVector& _vNormalImpulse, const struct FHitResult& _rHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_Object", "OnPKHit");

	Params::BFGProjectile_Object_OnPKHit Parms{};

	Parms._pHitComponent = _pHitComponent;
	Parms._pOtherActor = _pOtherActor;
	Parms._pOtherComp = _pOtherComp;
	Parms._vNormalImpulse = std::move(_vNormalImpulse);
	Parms._rHit = std::move(_rHit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGProjectile_Object.OnProjectileBounce
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       _vHitResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ABFGProjectile_Object::OnProjectileBounce(const struct FHitResult& _vHitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_Object", "OnProjectileBounce");

	Params::BFGProjectile_Object_OnProjectileBounce Parms{};

	Parms._vHitResult = std::move(_vHitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGProjectile_Object.OnProjectileExplosion
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          _vLocation                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGProjectile_Object::OnProjectileExplosion(const struct FVector& _vLocation, float _fRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_Object", "OnProjectileExplosion");

	Params::BFGProjectile_Object_OnProjectileExplosion Parms{};

	Parms._vLocation = std::move(_vLocation);
	Parms._fRadius = _fRadius;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGProjectile_Object.OnProjectileFinishedFlying
// (Native, Event, Public, BlueprintEvent)

void ABFGProjectile_Object::OnProjectileFinishedFlying()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_Object", "OnProjectileFinishedFlying");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGProjectile_Object.OnProjectileFireDelayStarted
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   _fDelayDuration                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGProjectile_Object::OnProjectileFireDelayStarted(float _fDelayDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_Object", "OnProjectileFireDelayStarted");

	Params::BFGProjectile_Object_OnProjectileFireDelayStarted Parms{};

	Parms._fDelayDuration = _fDelayDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGProjectile_Object.OnProjectileSimulationStop
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FHitResult                       HitRes                                                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ABFGProjectile_Object::OnProjectileSimulationStop(const struct FHitResult& HitRes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_Object", "OnProjectileSimulationStop");

	Params::BFGProjectile_Object_OnProjectileSimulationStop Parms{};

	Parms.HitRes = std::move(HitRes);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGProjectile_Object.OnProjectileStartedFlying
// (Native, Event, Public, BlueprintEvent)

void ABFGProjectile_Object::OnProjectileStartedFlying()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_Object", "OnProjectileStartedFlying");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGProjectile_Object.IsTargetPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGProjectile_Object::IsTargetPlayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_Object", "IsTargetPlayer");

	Params::BFGProjectile_Object_IsTargetPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_Animation.BindEventsAndVariables
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           _pCustomMesh                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_Animation::BindEventsAndVariables(class USkeletalMeshComponent* _pCustomMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Animation", "BindEventsAndVariables");

	Params::BFGActorComponent_Animation_BindEventsAndVariables Parms{};

	Parms._pCustomMesh = _pCustomMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Animation.GetAnimationEvents
// (Final, Native, Public)
// Parameters:
// const TArray<class UBFGAnimation_Events*>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class UBFGAnimation_Events*> UBFGActorComponent_Animation::GetAnimationEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Animation", "GetAnimationEvents");

	Params::BFGActorComponent_Animation_GetAnimationEvents Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_Animation.OnAnimInitialized
// (Final, Native, Protected)

void UBFGActorComponent_Animation::OnAnimInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Animation", "OnAnimInitialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMentalAbility_ExtractBrain.OnBrainWasExtracted
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           _pTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           PBrain                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGMentalAbility_ExtractBrain::OnBrainWasExtracted(class AActor* _pTarget, class AActor* PBrain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_ExtractBrain", "OnBrainWasExtracted");

	Params::BFGMentalAbility_ExtractBrain_OnBrainWasExtracted Parms{};

	Parms._pTarget = _pTarget;
	Parms.PBrain = PBrain;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectActor.HandleActorChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _iValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGEffectActor::HandleActorChanged(const class FName _rName, class AActor* _iValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectActor", "HandleActorChanged");

	Params::BFGEffectActor_HandleActorChanged Parms{};

	Parms._rName = _rName;
	Parms._iValue = _iValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectActor.HandleBoolChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGEffectActor::HandleBoolChanged(const class FName _rName, bool _bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectActor", "HandleBoolChanged");

	Params::BFGEffectActor_HandleBoolChanged Parms{};

	Parms._rName = _rName;
	Parms._bValue = _bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectActor.HandleColorChanged
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FColor                           _rValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGEffectActor::HandleColorChanged(const class FName _rName, const struct FColor& _rValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectActor", "HandleColorChanged");

	Params::BFGEffectActor_HandleColorChanged Parms{};

	Parms._rName = _rName;
	Parms._rValue = std::move(_rValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectActor.HandleDataTableChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDataTable*                       _pValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGEffectActor::HandleDataTableChanged(const class FName _rName, class UDataTable* _pValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectActor", "HandleDataTableChanged");

	Params::BFGEffectActor_HandleDataTableChanged Parms{};

	Parms._rName = _rName;
	Parms._pValue = _pValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectActor.HandleFloatChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGEffectActor::HandleFloatChanged(const class FName _rName, float _fValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectActor", "HandleFloatChanged");

	Params::BFGEffectActor_HandleFloatChanged Parms{};

	Parms._rName = _rName;
	Parms._fValue = _fValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectActor.HandleIntChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGEffectActor::HandleIntChanged(const class FName _rName, int32 _iValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectActor", "HandleIntChanged");

	Params::BFGEffectActor_HandleIntChanged Parms{};

	Parms._rName = _rName;
	Parms._iValue = _iValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectActor.HandleNameChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _iValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGEffectActor::HandleNameChanged(const class FName _rName, class FName _iValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectActor", "HandleNameChanged");

	Params::BFGEffectActor_HandleNameChanged Parms{};

	Parms._rName = _rName;
	Parms._iValue = _iValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectActor.HandleObjectChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          _pValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGEffectActor::HandleObjectChanged(const class FName _rName, class UObject* _pValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectActor", "HandleObjectChanged");

	Params::BFGEffectActor_HandleObjectChanged Parms{};

	Parms._rName = _rName;
	Parms._pValue = _pValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectActor.HandleRotatorChanged
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         _rValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void ABFGEffectActor::HandleRotatorChanged(const class FName _rName, const struct FRotator& _rValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectActor", "HandleRotatorChanged");

	Params::BFGEffectActor_HandleRotatorChanged Parms{};

	Parms._rName = _rName;
	Parms._rValue = std::move(_rValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectActor.HandleVectorChanged
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _rValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGEffectActor::HandleVectorChanged(const class FName _rName, const struct FVector& _rValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectActor", "HandleVectorChanged");

	Params::BFGEffectActor_HandleVectorChanged Parms{};

	Parms._rName = _rName;
	Parms._rValue = std::move(_rValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectActor.IsEffectActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGEffectActor::IsEffectActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectActor", "IsEffectActive");

	Params::BFGEffectActor_IsEffectActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectActor.IsEffectFinished
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGEffectActor::IsEffectFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectActor", "IsEffectFinished");

	Params::BFGEffectActor_IsEffectFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectActor.OnStopEffect
// (Native, Event, Protected, BlueprintEvent)

void ABFGEffectActor::OnStopEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectActor", "OnStopEffect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectActor.OnTriggerEffect
// (Native, Event, Protected, BlueprintEvent)

void ABFGEffectActor::OnTriggerEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectActor", "OnTriggerEffect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectActor.SetBlackboard
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGEffectBlackboard*             _pBlackboard                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGEffectActor::SetBlackboard(class UBFGEffectBlackboard* _pBlackboard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectActor", "SetBlackboard");

	Params::BFGEffectActor_SetBlackboard Parms{};

	Parms._pBlackboard = _pBlackboard;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectActor.StopEffect
// (Final, Native, Public, BlueprintCallable)

void ABFGEffectActor::StopEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectActor", "StopEffect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectActor.TriggerEffect
// (Final, Native, Public, BlueprintCallable)

void ABFGEffectActor::TriggerEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectActor", "TriggerEffect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectActor.GetBlackboard
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGEffectBlackboard*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGEffectBlackboard* ABFGEffectActor::GetBlackboard() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectActor", "GetBlackboard");

	Params::BFGEffectActor_GetBlackboard Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectActor.GetContainerDescriptor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FBFGEffectContainerDescriptor    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

struct FBFGEffectContainerDescriptor ABFGEffectActor::GetContainerDescriptor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectActor", "GetContainerDescriptor");

	Params::BFGEffectActor_GetContainerDescriptor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectActor.GetEffectComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGActorComponent_Effect*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGActorComponent_Effect* ABFGEffectActor::GetEffectComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectActor", "GetEffectComponent");

	Params::BFGEffectActor_GetEffectComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectActor_Beam.ForceBeamUpdate
// (Final, Native, Public, BlueprintCallable)

void ABFGEffectActor_Beam::ForceBeamUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectActor_Beam", "ForceBeamUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectActor_Beam.SetTargetActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _TargetActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGEffectActor_Beam::SetTargetActor(class AActor* _TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectActor_Beam", "SetTargetActor");

	Params::BFGEffectActor_Beam_SetTargetActor Parms{};

	Parms._TargetActor = _TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectActor_Beam.SetTargetLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          _vTargetLocation                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vTargetNormal                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGEffectActor_Beam::SetTargetLocation(const struct FVector& _vTargetLocation, const struct FVector& _vTargetNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectActor_Beam", "SetTargetLocation");

	Params::BFGEffectActor_Beam_SetTargetLocation Parms{};

	Parms._vTargetLocation = std::move(_vTargetLocation);
	Parms._vTargetNormal = std::move(_vTargetNormal);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectActor_Beam.StartBeam
// (Event, Protected, BlueprintEvent)

void ABFGEffectActor_Beam::StartBeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectActor_Beam", "StartBeam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGEffectActor_Beam.StopBeam
// (Event, Protected, BlueprintEvent)

void ABFGEffectActor_Beam::StopBeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectActor_Beam", "StopBeam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGEffectActor_Beam.UpdateBeam
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor*                           _pTargetActor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vTargetLocation                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vTargetNormal                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGEffectActor_Beam::UpdateBeam(class AActor* _pTargetActor, const struct FVector& _vTargetLocation, const struct FVector& _vTargetNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectActor_Beam", "UpdateBeam");

	Params::BFGEffectActor_Beam_UpdateBeam Parms{};

	Parms._pTargetActor = _pTargetActor;
	Parms._vTargetLocation = std::move(_vTargetLocation);
	Parms._vTargetNormal = std::move(_vTargetNormal);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGActorComponent_AOEWarningMarker.BeginWarningTimeline
// (Final, Native, Public)

void UBFGActorComponent_AOEWarningMarker::BeginWarningTimeline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_AOEWarningMarker", "BeginWarningTimeline");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_AOEWarningMarker.SetMarkersHidden
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    _bHidden                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_AOEWarningMarker::SetMarkersHidden(bool _bHidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_AOEWarningMarker", "SetMarkersHidden");

	Params::BFGActorComponent_AOEWarningMarker_SetMarkersHidden Parms{};

	Parms._bHidden = _bHidden;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_AOEWarningMarker.SetupWarningMarkerComponents
// (Final, Native, Public, HasDefaults)
// Parameters:
// float                                   _fWarningMarkerRadius                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fWarningMarkerDuration                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vWarningMarkerLocation                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         _rWarningMarkerRotation                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UBFGActorComponent_AOEWarningMarker::SetupWarningMarkerComponents(float _fWarningMarkerRadius, float _fWarningMarkerDuration, const struct FVector& _vWarningMarkerLocation, const struct FRotator& _rWarningMarkerRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_AOEWarningMarker", "SetupWarningMarkerComponents");

	Params::BFGActorComponent_AOEWarningMarker_SetupWarningMarkerComponents Parms{};

	Parms._fWarningMarkerRadius = _fWarningMarkerRadius;
	Parms._fWarningMarkerDuration = _fWarningMarkerDuration;
	Parms._vWarningMarkerLocation = std::move(_vWarningMarkerLocation);
	Parms._rWarningMarkerRotation = std::move(_rWarningMarkerRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_AOEWarningMarker.WarningTimeline_FinishedCallback
// (Final, Native, Private)

void UBFGActorComponent_AOEWarningMarker::WarningTimeline_FinishedCallback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_AOEWarningMarker", "WarningTimeline_FinishedCallback");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_AOEWarningMarker.WarningTimeline_Interpolation
// (Final, Native, Private)
// Parameters:
// float                                   _fAlpha                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_AOEWarningMarker::WarningTimeline_Interpolation(float _fAlpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_AOEWarningMarker", "WarningTimeline_Interpolation");

	Params::BFGActorComponent_AOEWarningMarker_WarningTimeline_Interpolation Parms{};

	Parms._fAlpha = _fAlpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGProjectile_ProximityMine.OnFuseDone
// (Native, Event, Protected, BlueprintEvent)

void ABFGProjectile_ProximityMine::OnFuseDone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_ProximityMine", "OnFuseDone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGProjectile_ProximityMine.OnFuseUpdated
// (Native, Event, Protected, BlueprintEvent)

void ABFGProjectile_ProximityMine::OnFuseUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_ProximityMine", "OnFuseUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectActor_RBPWreckBeam.OnActivateBeamFiring
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ABFGEffectActor_RBPWreckBeam::OnActivateBeamFiring()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectActor_RBPWreckBeam", "OnActivateBeamFiring");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectActor_RBPWreckBeam.OnActivateTelegraph
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ABFGEffectActor_RBPWreckBeam::OnActivateTelegraph()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectActor_RBPWreckBeam", "OnActivateTelegraph");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectActor_RBPWreckBeam.OnStopBeamFiring
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ABFGEffectActor_RBPWreckBeam::OnStopBeamFiring()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectActor_RBPWreckBeam", "OnStopBeamFiring");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectActor_RBPWreckBeam.OnStopTelegraph
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    _bAborted                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGEffectActor_RBPWreckBeam::OnStopTelegraph(bool _bAborted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectActor_RBPWreckBeam", "OnStopTelegraph");

	Params::BFGEffectActor_RBPWreckBeam_OnStopTelegraph Parms{};

	Parms._bAborted = _bAborted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_BuildingLevel.BuildDecor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FBFGBuilding_LevelDecor          CurrDecorLayout                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UBFGActorComponent_BuildingLevel::BuildDecor(const struct FBFGBuilding_LevelDecor& CurrDecorLayout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_BuildingLevel", "BuildDecor");

	Params::BFGActorComponent_BuildingLevel_BuildDecor Parms{};

	Parms.CurrDecorLayout = std::move(CurrDecorLayout);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_BuildingLevel.BuildLevel
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class USceneComponent*                  _pParent                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       _relativeTranform                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FBFGBuilding_FloorData           _floorData                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FBFGBuilding_LevelDecor>  _aDecorLayouts                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGActorComponent_BuildingLevel::BuildLevel(class USceneComponent* _pParent, const struct FTransform& _relativeTranform, const struct FBFGBuilding_FloorData& _floorData, const TArray<struct FBFGBuilding_LevelDecor>& _aDecorLayouts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_BuildingLevel", "BuildLevel");

	Params::BFGActorComponent_BuildingLevel_BuildLevel Parms{};

	Parms._pParent = _pParent;
	Parms._relativeTranform = std::move(_relativeTranform);
	Parms._floorData = std::move(_floorData);
	Parms._aDecorLayouts = std::move(_aDecorLayouts);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_BuildingLevel.BuildLevelFromElement
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FBFGBuildingElement              _Element                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class USceneComponent*                  _pParent                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_BuildingLevel::BuildLevelFromElement(const struct FBFGBuildingElement& _Element, class USceneComponent* _pParent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_BuildingLevel", "BuildLevelFromElement");

	Params::BFGActorComponent_BuildingLevel_BuildLevelFromElement Parms{};

	Parms._Element = std::move(_Element);
	Parms._pParent = _pParent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_BuildingLevel.DestroyMainMeshComponent
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_BuildingLevel::DestroyMainMeshComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_BuildingLevel", "DestroyMainMeshComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_BuildingLevel.MoveRubble
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _fRubbleSinkRate                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_BuildingLevel::MoveRubble(float _fRubbleSinkRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_BuildingLevel", "MoveRubble");

	Params::BFGActorComponent_BuildingLevel_MoveRubble Parms{};

	Parms._fRubbleSinkRate = _fRubbleSinkRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_BuildingLevel.Reset
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_BuildingLevel::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_BuildingLevel", "Reset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_BuildingLevel.SwapDecorForDestruct
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBFGBuilding_DestructionPhase           _ePhase                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_BuildingLevel::SwapDecorForDestruct(EBFGBuilding_DestructionPhase _ePhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_BuildingLevel", "SwapDecorForDestruct");

	Params::BFGActorComponent_BuildingLevel_SwapDecorForDestruct Parms{};

	Parms._ePhase = _ePhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_BuildingLevel.SwapMainForDestruct
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBFGBuilding_DestructionPhase           _ePhase                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_BuildingLevel::SwapMainForDestruct(EBFGBuilding_DestructionPhase _ePhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_BuildingLevel", "SwapMainForDestruct");

	Params::BFGActorComponent_BuildingLevel_SwapMainForDestruct Parms{};

	Parms._ePhase = _ePhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_BuildingLevel.TurnIntoRubble
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_BuildingLevel::TurnIntoRubble()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_BuildingLevel", "TurnIntoRubble");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_BuildingLevel.GetDecorDestructionComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _iDecorIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UBlastMeshComponent*>      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UBlastMeshComponent*> UBFGActorComponent_BuildingLevel::GetDecorDestructionComponent(int32 _iDecorIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_BuildingLevel", "GetDecorDestructionComponent");

	Params::BFGActorComponent_BuildingLevel_GetDecorDestructionComponent Parms{};

	Parms._iDecorIndex = _iDecorIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_BuildingLevel.GetDecorMeshComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _iDecorIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UStaticMeshComponent*>     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UStaticMeshComponent*> UBFGActorComponent_BuildingLevel::GetDecorMeshComponent(int32 _iDecorIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_BuildingLevel", "GetDecorMeshComponent");

	Params::BFGActorComponent_BuildingLevel_GetDecorMeshComponent Parms{};

	Parms._iDecorIndex = _iDecorIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_BuildingLevel.GetMainDestructionComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBlastMeshComponent*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBlastMeshComponent* UBFGActorComponent_BuildingLevel::GetMainDestructionComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_BuildingLevel", "GetMainDestructionComponent");

	Params::BFGActorComponent_BuildingLevel_GetMainDestructionComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_BuildingLevel.GetMainMeshComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UStaticMeshComponent*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UStaticMeshComponent* UBFGActorComponent_BuildingLevel::GetMainMeshComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_BuildingLevel", "GetMainMeshComponent");

	Params::BFGActorComponent_BuildingLevel_GetMainMeshComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_BuildingLevel.GetNumDecorMeshComponents
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    _bDestruction                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGActorComponent_BuildingLevel::GetNumDecorMeshComponents(bool _bDestruction) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_BuildingLevel", "GetNumDecorMeshComponents");

	Params::BFGActorComponent_BuildingLevel_GetNumDecorMeshComponents Parms{};

	Parms._bDestruction = _bDestruction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMentalAbility_Holobob.ApplyFX_StartDisruptingAbility
// (Event, Protected, BlueprintEvent)

void UBFGMentalAbility_Holobob::ApplyFX_StartDisruptingAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Holobob", "ApplyFX_StartDisruptingAbility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGMentalAbility_Holobob.ApplyFX_StopDisruptingAbility
// (Event, Protected, BlueprintEvent)

void UBFGMentalAbility_Holobob::ApplyFX_StopDisruptingAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Holobob", "ApplyFX_StopDisruptingAbility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGMentalAbility_Holobob.ClearFakeAccessoryList
// (Final, Native, Public, BlueprintCallable)

void UBFGMentalAbility_Holobob::ClearFakeAccessoryList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Holobob", "ClearFakeAccessoryList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMentalAbility_Holobob.ClearTargetAccessoryList
// (Final, Native, Public, BlueprintCallable)

void UBFGMentalAbility_Holobob::ClearTargetAccessoryList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Holobob", "ClearTargetAccessoryList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMentalAbility_Holobob.HandleInputPackChanged
// (Final, Native, Protected)
// Parameters:
// int32                                   _iInputPackIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGMentalAbility_Holobob::HandleInputPackChanged(int32 _iInputPackIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Holobob", "HandleInputPackChanged");

	Params::BFGMentalAbility_Holobob_HandleInputPackChanged Parms{};

	Parms._iInputPackIndex = _iInputPackIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMentalAbility_Holobob.HideHoloPlayerVisibility
// (Final, Native, Public, BlueprintCallable)

void UBFGMentalAbility_Holobob::HideHoloPlayerVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Holobob", "HideHoloPlayerVisibility");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMentalAbility_Holobob.OnActorAttachedToPK
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGMentalAbility_Holobob::OnActorAttachedToPK(class AActor* _pTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Holobob", "OnActorAttachedToPK");

	Params::BFGMentalAbility_Holobob_OnActorAttachedToPK Parms{};

	Parms._pTarget = _pTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMentalAbility_Holobob.OnActorReleasedFromPK
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bThrownOrDropped                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGMentalAbility_Holobob::OnActorReleasedFromPK(class AActor* _pActor, bool _bThrownOrDropped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Holobob", "OnActorReleasedFromPK");

	Params::BFGMentalAbility_Holobob_OnActorReleasedFromPK Parms{};

	Parms._pActor = _pActor;
	Parms._bThrownOrDropped = _bThrownOrDropped;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMentalAbility_Holobob.OnBrainExtracted
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pBrain                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bIsFromInfection                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGMentalAbility_Holobob::OnBrainExtracted(class AActor* _pTarget, class AActor* _pBrain, bool _bIsFromInfection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Holobob", "OnBrainExtracted");

	Params::BFGMentalAbility_Holobob_OnBrainExtracted Parms{};

	Parms._pTarget = _pTarget;
	Parms._pBrain = _pBrain;
	Parms._bIsFromInfection = _bIsFromInfection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMentalAbility_Holobob.OnRefreshByCortexScan
// (Event, Protected, BlueprintEvent)

void UBFGMentalAbility_Holobob::OnRefreshByCortexScan()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Holobob", "OnRefreshByCortexScan");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGMentalAbility_Holobob.OnTransmogAbilityEffect
// (Final, Native, Protected)
// Parameters:
// class UBFGMentalAbilityBase*            _pMentalAbility                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGMentalAbility_Holobob::OnTransmogAbilityEffect(class UBFGMentalAbilityBase* _pMentalAbility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Holobob", "OnTransmogAbilityEffect");

	Params::BFGMentalAbility_Holobob_OnTransmogAbilityEffect Parms{};

	Parms._pMentalAbility = _pMentalAbility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMentalAbility_Holobob.ReceiveOnSuppressionAuraStateChanged
// (Event, Protected, BlueprintEvent)

void UBFGMentalAbility_Holobob::ReceiveOnSuppressionAuraStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Holobob", "ReceiveOnSuppressionAuraStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGMentalAbility_Holobob.RemoveFakeHolobobMesh
// (Final, Native, Public, BlueprintCallable)

void UBFGMentalAbility_Holobob::RemoveFakeHolobobMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Holobob", "RemoveFakeHolobobMesh");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMentalAbility_Holobob.RemoveHoloPlayerMesh
// (Final, Native, Public, BlueprintCallable)

void UBFGMentalAbility_Holobob::RemoveHoloPlayerMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Holobob", "RemoveHoloPlayerMesh");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMentalAbility_Holobob.ShowHoloPlayerVisibility
// (Final, Native, Public, BlueprintCallable)

void UBFGMentalAbility_Holobob::ShowHoloPlayerVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Holobob", "ShowHoloPlayerVisibility");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMentalAbility_Holobob.GetConcentrationDrainedPerSecond
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGMentalAbility_Holobob::GetConcentrationDrainedPerSecond() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Holobob", "GetConcentrationDrainedPerSecond");

	Params::BFGMentalAbility_Holobob_GetConcentrationDrainedPerSecond Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMentalAbility_Holobob.GetCurrentConcentrationPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    _bAnimateWhenDisrupted                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGMentalAbility_Holobob::GetCurrentConcentrationPercent(bool _bAnimateWhenDisrupted) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Holobob", "GetCurrentConcentrationPercent");

	Params::BFGMentalAbility_Holobob_GetCurrentConcentrationPercent Parms{};

	Parms._bAnimateWhenDisrupted = _bAnimateWhenDisrupted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMentalAbility_Holobob.GetFakeAccessories
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UStaticMeshComponent*>     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UStaticMeshComponent*> UBFGMentalAbility_Holobob::GetFakeAccessories() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Holobob", "GetFakeAccessories");

	Params::BFGMentalAbility_Holobob_GetFakeAccessories Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMentalAbility_Holobob.GetFakeMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* UBFGMentalAbility_Holobob::GetFakeMesh() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Holobob", "GetFakeMesh");

	Params::BFGMentalAbility_Holobob_GetFakeMesh Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMentalAbility_Holobob.GetHoloPlayerMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPoseableMeshComponent*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPoseableMeshComponent* UBFGMentalAbility_Holobob::GetHoloPlayerMesh() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Holobob", "GetHoloPlayerMesh");

	Params::BFGMentalAbility_Holobob_GetHoloPlayerMesh Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMentalAbility_Holobob.GetIsCorrupted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGMentalAbility_Holobob::GetIsCorrupted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Holobob", "GetIsCorrupted");

	Params::BFGMentalAbility_Holobob_GetIsCorrupted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMentalAbility_Holobob.GetLastTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UBFGMentalAbility_Holobob::GetLastTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Holobob", "GetLastTarget");

	Params::BFGMentalAbility_Holobob_GetLastTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMentalAbility_Holobob.GetMaxConcentration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGMentalAbility_Holobob::GetMaxConcentration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Holobob", "GetMaxConcentration");

	Params::BFGMentalAbility_Holobob_GetMaxConcentration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMentalAbility_Holobob.GetTargetAccessories
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UStaticMeshComponent*>     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UStaticMeshComponent*> UBFGMentalAbility_Holobob::GetTargetAccessories() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Holobob", "GetTargetAccessories");

	Params::BFGMentalAbility_Holobob_GetTargetAccessories Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMentalAbility_Holobob.IsAbilityDisrupted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGMentalAbility_Holobob::IsAbilityDisrupted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Holobob", "IsAbilityDisrupted");

	Params::BFGMentalAbility_Holobob_IsAbilityDisrupted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMentalAbility_Holobob.IsHolobobSuppressionAuraActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGMentalAbility_Holobob::IsHolobobSuppressionAuraActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Holobob", "IsHolobobSuppressionAuraActive");

	Params::BFGMentalAbility_Holobob_IsHolobobSuppressionAuraActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_CameraHandle.AddTimeCurve
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBFGCameraTimeCurveFunction             _eFunction                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      _pCurve                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fStartTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fDuration                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bKeepLastValue                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_CameraHandle::AddTimeCurve(EBFGCameraTimeCurveFunction _eFunction, class UCurveFloat* _pCurve, float _fStartTime, float _fDuration, bool _bKeepLastValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_CameraHandle", "AddTimeCurve");

	Params::BFGActorComponent_CameraHandle_AddTimeCurve Parms{};

	Parms._eFunction = _eFunction;
	Parms._pCurve = _pCurve;
	Parms._fStartTime = _fStartTime;
	Parms._fDuration = _fDuration;
	Parms._bKeepLastValue = _bKeepLastValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_CameraHandle.ClearTimeCurves
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_CameraHandle::ClearTimeCurves()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_CameraHandle", "ClearTimeCurves");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_CameraHandle.ClearTimeCurvesByFunction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBFGCameraTimeCurveFunction             _eFunction                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_CameraHandle::ClearTimeCurvesByFunction(EBFGCameraTimeCurveFunction _eFunction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_CameraHandle", "ClearTimeCurvesByFunction");

	Params::BFGActorComponent_CameraHandle_ClearTimeCurvesByFunction Parms{};

	Parms._eFunction = _eFunction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_CameraHandle.ReplaceTimeCurve
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBFGCameraTimeCurveFunction             _eFunction                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      _pCurve                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fStartTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fDuration                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bKeepLastValue                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_CameraHandle::ReplaceTimeCurve(EBFGCameraTimeCurveFunction _eFunction, class UCurveFloat* _pCurve, float _fStartTime, float _fDuration, bool _bKeepLastValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_CameraHandle", "ReplaceTimeCurve");

	Params::BFGActorComponent_CameraHandle_ReplaceTimeCurve Parms{};

	Parms._eFunction = _eFunction;
	Parms._pCurve = _pCurve;
	Parms._fStartTime = _fStartTime;
	Parms._fDuration = _fDuration;
	Parms._bKeepLastValue = _bKeepLastValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_CharacterPhysics.AddImpulse
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          _vVector                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _strBoneName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bVelChange                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_CharacterPhysics::AddImpulse(const struct FVector& _vVector, class FName _strBoneName, bool _bVelChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_CharacterPhysics", "AddImpulse");

	Params::BFGActorComponent_CharacterPhysics_AddImpulse Parms{};

	Parms._vVector = std::move(_vVector);
	Parms._strBoneName = _strBoneName;
	Parms._bVelChange = _bVelChange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_CharacterPhysics.AddImpulseDefault
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          _vVector                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_CharacterPhysics::AddImpulseDefault(const struct FVector& _vVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_CharacterPhysics", "AddImpulseDefault");

	Params::BFGActorComponent_CharacterPhysics_AddImpulseDefault Parms{};

	Parms._vVector = std::move(_vVector);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_CharacterPhysics.DropAccessories
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_CharacterPhysics::DropAccessories()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_CharacterPhysics", "DropAccessories");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_CharacterPhysics.FreezeCharacterAndDisableComponent
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_CharacterPhysics::FreezeCharacterAndDisableComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_CharacterPhysics", "FreezeCharacterAndDisableComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_CharacterPhysics.SetPhysicsSimulationState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bResetToNonPhysicsActorWhenDone                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_CharacterPhysics::SetPhysicsSimulationState(bool _bEnabled, bool _bResetToNonPhysicsActorWhenDone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_CharacterPhysics", "SetPhysicsSimulationState");

	Params::BFGActorComponent_CharacterPhysics_SetPhysicsSimulationState Parms{};

	Parms._bEnabled = _bEnabled;
	Parms._bResetToNonPhysicsActorWhenDone = _bResetToNonPhysicsActorWhenDone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_CharacterPhysics.GetEstimatedCapsuleVelocity
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UBFGActorComponent_CharacterPhysics::GetEstimatedCapsuleVelocity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_CharacterPhysics", "GetEstimatedCapsuleVelocity");

	Params::BFGActorComponent_CharacterPhysics_GetEstimatedCapsuleVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_CharacterPhysics.GetSimulatingComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPrimitiveComponent*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPrimitiveComponent* UBFGActorComponent_CharacterPhysics::GetSimulatingComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_CharacterPhysics", "GetSimulatingComponent");

	Params::BFGActorComponent_CharacterPhysics_GetSimulatingComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_CharacterPhysics.IsSimulatingPhysics
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_CharacterPhysics::IsSimulatingPhysics() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_CharacterPhysics", "IsSimulatingPhysics");

	Params::BFGActorComponent_CharacterPhysics_IsSimulatingPhysics Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_StatsBase.ToString
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UBFGActorComponent_StatsBase::ToString() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_StatsBase", "ToString");

	Params::BFGActorComponent_StatsBase_ToString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_PawnStats.OnAIAlertStateStatChanged
// (Native, Protected)
// Parameters:
// class AActor*                           _pOwner                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGActorStat_uint8*              _pStat                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_PawnStats::OnAIAlertStateStatChanged(class AActor* _pOwner, class UBFGActorStat_uint8* _pStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PawnStats", "OnAIAlertStateStatChanged");

	Params::BFGActorComponent_PawnStats_OnAIAlertStateStatChanged Parms{};

	Parms._pOwner = _pOwner;
	Parms._pStat = _pStat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_PawnStats.OnHealthChanged
// (Native, Protected)
// Parameters:
// class AActor*                           _pOwner                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGActorStat_Float*              _pStat                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_PawnStats::OnHealthChanged(class AActor* _pOwner, class UBFGActorStat_Float* _pStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PawnStats", "OnHealthChanged");

	Params::BFGActorComponent_PawnStats_OnHealthChanged Parms{};

	Parms._pOwner = _pOwner;
	Parms._pStat = _pStat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_PawnStats.OnShieldChanged
// (Native, Protected)
// Parameters:
// class AActor*                           _pOwner                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGActorStat_Float*              _pStat                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_PawnStats::OnShieldChanged(class AActor* _pOwner, class UBFGActorStat_Float* _pStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PawnStats", "OnShieldChanged");

	Params::BFGActorComponent_PawnStats_OnShieldChanged Parms{};

	Parms._pOwner = _pOwner;
	Parms._pStat = _pStat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_PawnStats.GetCurrentAIAlertState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGActorStat_EnumBehaviourState_NPC*ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGActorStat_EnumBehaviourState_NPC* UBFGActorComponent_PawnStats::GetCurrentAIAlertState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PawnStats", "GetCurrentAIAlertState");

	Params::BFGActorComponent_PawnStats_GetCurrentAIAlertState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_PawnStats.GetHealthStat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGActorStat_Float*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGActorStat_Float* UBFGActorComponent_PawnStats::GetHealthStat() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PawnStats", "GetHealthStat");

	Params::BFGActorComponent_PawnStats_GetHealthStat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_PawnStats.GetIsDeadStat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGActorStat_Bool*               ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGActorStat_Bool* UBFGActorComponent_PawnStats::GetIsDeadStat() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PawnStats", "GetIsDeadStat");

	Params::BFGActorComponent_PawnStats_GetIsDeadStat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_PawnStats.GetIsInvisibleStat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGActorStat_Bool*               ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGActorStat_Bool* UBFGActorComponent_PawnStats::GetIsInvisibleStat() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PawnStats", "GetIsInvisibleStat");

	Params::BFGActorComponent_PawnStats_GetIsInvisibleStat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_PawnStats.GetIsInWaterStat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGActorStat_Bool*               ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGActorStat_Bool* UBFGActorComponent_PawnStats::GetIsInWaterStat() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PawnStats", "GetIsInWaterStat");

	Params::BFGActorComponent_PawnStats_GetIsInWaterStat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_PawnStats.GetShieldStat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGActorStat_Float*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGActorStat_Float* UBFGActorComponent_PawnStats::GetShieldStat() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PawnStats", "GetShieldStat");

	Params::BFGActorComponent_PawnStats_GetShieldStat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_CharacterStats.GetWillpowerStat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGActorStat_Float*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGActorStat_Float* UBFGActorComponent_CharacterStats::GetWillpowerStat() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_CharacterStats", "GetWillpowerStat");

	Params::BFGActorComponent_CharacterStats_GetWillpowerStat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_UIUpdateRequest.GetDescriptions
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<struct FBFGQuest_UIData_Description>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<struct FBFGQuest_UIData_Description> UBFGQuest_UIUpdateRequest::GetDescriptions() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_UIUpdateRequest", "GetDescriptions");

	Params::BFGQuest_UIUpdateRequest_GetDescriptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_UIUpdateRequest.GetIdentifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGQuest_UIUpdateRequest::GetIdentifier() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_UIUpdateRequest", "GetIdentifier");

	Params::BFGQuest_UIUpdateRequest_GetIdentifier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_UIUpdateRequest.GetTitle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UBFGQuest_UIUpdateRequest::GetTitle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_UIUpdateRequest", "GetTitle");

	Params::BFGQuest_UIUpdateRequest_GetTitle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_UIUpdateRequest.IsEmptyOrWhitespace
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGQuest_UIUpdateRequest::IsEmptyOrWhitespace() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_UIUpdateRequest", "IsEmptyOrWhitespace");

	Params::BFGQuest_UIUpdateRequest_IsEmptyOrWhitespace Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_UIUpdateRequest.IsMainQuest
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGQuest_UIUpdateRequest::IsMainQuest() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_UIUpdateRequest", "IsMainQuest");

	Params::BFGQuest_UIUpdateRequest_IsMainQuest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerController.ABFGVoiceoverPlaybackActor_OnItemPlaybackStopped_Server
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ABFGVoiceoverPlaybackActor*       _pCallback                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGPlayerController::ABFGVoiceoverPlaybackActor_OnItemPlaybackStopped_Server(class ABFGVoiceoverPlaybackActor* _pCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerController", "ABFGVoiceoverPlaybackActor_OnItemPlaybackStopped_Server");

	Params::BFGPlayerController_ABFGVoiceoverPlaybackActor_OnItemPlaybackStopped_Server Parms{};

	Parms._pCallback = _pCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPlayerController.GetCheatManager
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGCheatManager*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGCheatManager* ABFGPlayerController::GetCheatManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerController", "GetCheatManager");

	Params::BFGPlayerController_GetCheatManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerController.SwitchToGroundMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGPlayerController::SwitchToGroundMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerController", "SwitchToGroundMode");

	Params::BFGPlayerController_SwitchToGroundMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerController.SwitchToUFOMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGPlayerController::SwitchToUFOMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerController", "SwitchToUFOMode");

	Params::BFGPlayerController_SwitchToUFOMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerController.Test_SwitchToGroundMode
// (Native, Protected)

void ABFGPlayerController::Test_SwitchToGroundMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerController", "Test_SwitchToGroundMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPlayerController.Test_SwitchToUFOMode
// (Native, Protected)

void ABFGPlayerController::Test_SwitchToUFOMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerController", "Test_SwitchToUFOMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPlayerController.GetLastPressedKey
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FKey                             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKey ABFGPlayerController::GetLastPressedKey() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerController", "GetLastPressedKey");

	Params::BFGPlayerController_GetLastPressedKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerController.GetSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGPlayerCharacter_Settings*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGPlayerCharacter_Settings* ABFGPlayerController::GetSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerController", "GetSettings");

	Params::BFGPlayerController_GetSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerController.IsAnyKeyPressed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGPlayerController::IsAnyKeyPressed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerController", "IsAnyKeyPressed");

	Params::BFGPlayerController_IsAnyKeyPressed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerController.IsGameplayController
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGPlayerController::IsGameplayController() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerController", "IsGameplayController");

	Params::BFGPlayerController_IsGameplayController Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerController.IsGroundMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGPlayerController::IsGroundMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerController", "IsGroundMode");

	Params::BFGPlayerController_IsGroundMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerController.IsUsingGamepad
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGPlayerController::IsUsingGamepad() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerController", "IsUsingGamepad");

	Params::BFGPlayerController_IsUsingGamepad Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction BFGCore.BFGUI_RadialMenu_Option.Action__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UBFGUI_RadialMenu_Option*         _pOption                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGUI_RadialMenu_Option::Action__DelegateSignature(class UBFGUI_RadialMenu_Option* _pOption)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUI_RadialMenu_Option", "Action__DelegateSignature");

	Params::BFGUI_RadialMenu_Option_Action__DelegateSignature Parms{};

	Parms._pOption = _pOption;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGUI_RadialMenu_Option.GetMenuWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGRadialMenuUserWidget*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGRadialMenuUserWidget* UBFGUI_RadialMenu_Option::GetMenuWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUI_RadialMenu_Option", "GetMenuWidget");

	Params::BFGUI_RadialMenu_Option_GetMenuWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGUI_RadialMenu_Option.Highlight
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    _bEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGUI_RadialMenu_Option::Highlight(bool _bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUI_RadialMenu_Option", "Highlight");

	Params::BFGUI_RadialMenu_Option_Highlight Parms{};

	Parms._bEnabled = _bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGUI_RadialMenu_Option.InitializeOption
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             _strText                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             _strTooltip                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             _strDescription                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UObject*                          _pObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGUI_RadialMenu_Option::InitializeOption(const class FText& _strText, const class FText& _strTooltip, const class FText& _strDescription, class UObject* _pObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUI_RadialMenu_Option", "InitializeOption");

	Params::BFGUI_RadialMenu_Option_InitializeOption Parms{};

	Parms._strText = std::move(_strText);
	Parms._strTooltip = std::move(_strTooltip);
	Parms._strDescription = std::move(_strDescription);
	Parms._pObject = _pObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGUI_RadialMenu_Option.InvokeAction
// (Final, Native, Public, BlueprintCallable)

void UBFGUI_RadialMenu_Option::InvokeAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUI_RadialMenu_Option", "InvokeAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGUI_RadialMenu_Option.SetIconTextures
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       _pDefault                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       _pHighlighted                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGUI_RadialMenu_Option::SetIconTextures(class UTexture2D* _pDefault, class UTexture2D* _pHighlighted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUI_RadialMenu_Option", "SetIconTextures");

	Params::BFGUI_RadialMenu_Option_SetIconTextures Parms{};

	Parms._pDefault = _pDefault;
	Parms._pHighlighted = _pHighlighted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGUI_RadialMenu_Option.SetOptionWidgets
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGWidget_RadialMenu_OptionIcon* _pWidget                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGUI_RadialMenu_Option::SetOptionWidgets(class UBFGWidget_RadialMenu_OptionIcon* _pWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUI_RadialMenu_Option", "SetOptionWidgets");

	Params::BFGUI_RadialMenu_Option_SetOptionWidgets Parms{};

	Parms._pWidget = _pWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGUI_RadialMenu_Option.GetOptionWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGWidget_RadialMenu_OptionIcon* ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGWidget_RadialMenu_OptionIcon* UBFGUI_RadialMenu_Option::GetOptionWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUI_RadialMenu_Option", "GetOptionWidget");

	Params::BFGUI_RadialMenu_Option_GetOptionWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_CheatHelper.CheckCheatCommandInput
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FBFGCheatTableEntry              _pEntry                                                (Parm, OutParm, NativeAccessSpecifierPublic)

void UBFGActorComponent_CheatHelper::CheckCheatCommandInput(struct FBFGCheatTableEntry* _pEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_CheatHelper", "CheckCheatCommandInput");

	Params::BFGActorComponent_CheatHelper_CheckCheatCommandInput Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_pEntry != nullptr)
		*_pEntry = std::move(Parms._pEntry);
}


// Function BFGCore.BFGActorComponent_CheatHelper.HideUI
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_CheatHelper::HideUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_CheatHelper", "HideUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_CheatHelper.KillPlayer
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_CheatHelper::KillPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_CheatHelper", "KillPlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_CheatHelper.NukeAll
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_CheatHelper::NukeAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_CheatHelper", "NukeAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_CheatHelper.NukeBuilding
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_CheatHelper::NukeBuilding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_CheatHelper", "NukeBuilding");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_CheatHelper.NukeEnemies
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_CheatHelper::NukeEnemies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_CheatHelper", "NukeEnemies");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_CheatHelper.ShowUI
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_CheatHelper::ShowUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_CheatHelper", "ShowUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_CheatHelper.ToggleFlyMode
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_CheatHelper::ToggleFlyMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_CheatHelper", "ToggleFlyMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_CheatHelper.ToggleInfiniteConcentration
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_CheatHelper::ToggleInfiniteConcentration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_CheatHelper", "ToggleInfiniteConcentration");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_CheatHelper.ToggleInfiniteHover
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_CheatHelper::ToggleInfiniteHover()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_CheatHelper", "ToggleInfiniteHover");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_CheatHelper.ToggleUFO
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_CheatHelper::ToggleUFO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_CheatHelper", "ToggleUFO");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_CheatHelper.ToggleUI
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_CheatHelper::ToggleUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_CheatHelper", "ToggleUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_CheatHelper.UIISShown
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_CheatHelper::UIISShown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_CheatHelper", "UIISShown");

	Params::BFGActorComponent_CheatHelper_UIISShown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_CortexScanResponse.OnOwnerDead
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGActorStat_Bool*               _pStat                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_CortexScanResponse::OnOwnerDead(class AActor* _pActor, class UBFGActorStat_Bool* _pStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_CortexScanResponse", "OnOwnerDead");

	Params::BFGActorComponent_CortexScanResponse_OnOwnerDead Parms{};

	Parms._pActor = _pActor;
	Parms._pStat = _pStat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BFGCore.BFGUserSignInManager.BFGUserSignInManagerEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UBFGUserSignInManager::BFGUserSignInManagerEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUserSignInManager", "BFGUserSignInManagerEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction BFGCore.BFGUserSignInManager.BFGUserSignInManagerEvent_Busy__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    _bIsBusy                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGUserSignInManager::BFGUserSignInManagerEvent_Busy__DelegateSignature(bool _bIsBusy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUserSignInManager", "BFGUserSignInManagerEvent_Busy__DelegateSignature");

	Params::BFGUserSignInManager_BFGUserSignInManagerEvent_Busy__DelegateSignature Parms{};

	Parms._bIsBusy = _bIsBusy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGUserSignInManager.HandleGameFlowChanges
// (Final, Native, Public)
// Parameters:
// bool                                    _bIsGameplay                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGUserSignInManager::HandleGameFlowChanges(bool _bIsGameplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUserSignInManager", "HandleGameFlowChanges");

	Params::BFGUserSignInManager_HandleGameFlowChanges Parms{};

	Parms._bIsGameplay = _bIsGameplay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGUserSignInManager.OnControllerDisconnectedButtonPressed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _iStableUserIndex                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGUserSignInManager::OnControllerDisconnectedButtonPressed(int32 _iStableUserIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUserSignInManager", "OnControllerDisconnectedButtonPressed");

	Params::BFGUserSignInManager_OnControllerDisconnectedButtonPressed Parms{};

	Parms._iStableUserIndex = _iStableUserIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGUserSignInManager.OnSwitchProfileButtonPressed
// (Final, Native, Public, BlueprintCallable)

void UBFGUserSignInManager::OnSwitchProfileButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUserSignInManager", "OnSwitchProfileButtonPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGUserSignInManager.OnUserSignedOutButtonPressed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bAcceptSignOut                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGUserSignInManager::OnUserSignedOutButtonPressed(bool _bAcceptSignOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUserSignInManager", "OnUserSignedOutButtonPressed");

	Params::BFGUserSignInManager_OnUserSignedOutButtonPressed Parms{};

	Parms._bAcceptSignOut = _bAcceptSignOut;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGUserSignInManager.SetControllerConnected
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    _bDisconnected                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGUserSignInManager::SetControllerConnected(bool _bDisconnected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUserSignInManager", "SetControllerConnected");

	Params::BFGUserSignInManager_SetControllerConnected Parms{};

	Parms._bDisconnected = _bDisconnected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGUserSignInManager.SetNeedIIS
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    _bForceIIS                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGUserSignInManager::SetNeedIIS(bool _bForceIIS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUserSignInManager", "SetNeedIIS");

	Params::BFGUserSignInManager_SetNeedIIS Parms{};

	Parms._bForceIIS = _bForceIIS;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGUserSignInManager.SetUserSignedIn
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    _bLoggedOut                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGUserSignInManager::SetUserSignedIn(bool _bLoggedOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUserSignInManager", "SetUserSignedIn");

	Params::BFGUserSignInManager_SetUserSignedIn Parms{};

	Parms._bLoggedOut = _bLoggedOut;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGUserSignInManager.ShouldShowControllerDisconnectedPopup
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGUserSignInManager::ShouldShowControllerDisconnectedPopup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUserSignInManager", "ShouldShowControllerDisconnectedPopup");

	Params::BFGUserSignInManager_ShouldShowControllerDisconnectedPopup Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGUserSignInManager.ShouldShowSwitchProfileButton
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGUserSignInManager::ShouldShowSwitchProfileButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUserSignInManager", "ShouldShowSwitchProfileButton");

	Params::BFGUserSignInManager_ShouldShowSwitchProfileButton Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGUserSignInManager.ShouldShowUserSignedOutPopup
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGUserSignInManager::ShouldShowUserSignedOutPopup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUserSignInManager", "ShouldShowUserSignedOutPopup");

	Params::BFGUserSignInManager_ShouldShowUserSignedOutPopup Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGUserSignInManager.ShowMessageBox
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           _strParam                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGUserSignInManager::ShowMessageBox(const class FString& _strParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUserSignInManager", "ShowMessageBox");

	Params::BFGUserSignInManager_ShowMessageBox Parms{};

	Parms._strParam = std::move(_strParam);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGUserSignInManager.IsBusyWithSignIn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGUserSignInManager::IsBusyWithSignIn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUserSignInManager", "IsBusyWithSignIn");

	Params::BFGUserSignInManager_IsBusyWithSignIn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction BFGCore.BFGActorComponent_Dash.BFGActorComponent_Dash_Event__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UBFGActorComponent_Dash*          _pDashComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_Dash::BFGActorComponent_Dash_Event__DelegateSignature(class UBFGActorComponent_Dash* _pDashComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Dash", "BFGActorComponent_Dash_Event__DelegateSignature");

	Params::BFGActorComponent_Dash_BFGActorComponent_Dash_Event__DelegateSignature Parms{};

	Parms._pDashComponent = _pDashComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BFGCore.BFGActorComponent_Dash.BFGActorComponent_DashPhase_Event__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UBFGActorComponent_Dash*          _pDashComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iPhase                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_Dash::BFGActorComponent_DashPhase_Event__DelegateSignature(class UBFGActorComponent_Dash* _pDashComponent, int32 _iPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Dash", "BFGActorComponent_DashPhase_Event__DelegateSignature");

	Params::BFGActorComponent_Dash_BFGActorComponent_DashPhase_Event__DelegateSignature Parms{};

	Parms._pDashComponent = _pDashComponent;
	Parms._iPhase = _iPhase;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGActorComponent_Dash.BlockAirDash
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_Dash::BlockAirDash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Dash", "BlockAirDash");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Dash.DisableDash
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_Dash::DisableDash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Dash", "DisableDash");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Dash.EnableDash
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_Dash::EnableDash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Dash", "EnableDash");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Dash.OnOwnerDamage
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _DamagedActor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fDamage                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDamageType*                      _pDamageType                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      _pInstigatedBy                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pDamageCauser                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_Dash::OnOwnerDamage(class AActor* _DamagedActor, float _fDamage, const class UDamageType* _pDamageType, class AController* _pInstigatedBy, class AActor* _pDamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Dash", "OnOwnerDamage");

	Params::BFGActorComponent_Dash_OnOwnerDamage Parms{};

	Parms._DamagedActor = _DamagedActor;
	Parms._fDamage = _fDamage;
	Parms._pDamageType = _pDamageType;
	Parms._pInstigatedBy = _pInstigatedBy;
	Parms._pDamageCauser = _pDamageCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Dash.ResetAirDashCount
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_Dash::ResetAirDashCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Dash", "ResetAirDashCount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Dash.TriggerDash
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_Dash::TriggerDash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Dash", "TriggerDash");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Dash.UnblockAirDash
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_Dash::UnblockAirDash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Dash", "UnblockAirDash");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Dash.IsDashEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_Dash::IsDashEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Dash", "IsDashEnabled");

	Params::BFGActorComponent_Dash_IsDashEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_Dash.IsEchotronRamjetsUnlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_Dash::IsEchotronRamjetsUnlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Dash", "IsEchotronRamjetsUnlocked");

	Params::BFGActorComponent_Dash_IsEchotronRamjetsUnlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_Dash.IsThrustATron2000Unlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_Dash::IsThrustATron2000Unlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Dash", "IsThrustATron2000Unlocked");

	Params::BFGActorComponent_Dash_IsThrustATron2000Unlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_Dash.IsThrustATron5000Unlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_Dash::IsThrustATron5000Unlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Dash", "IsThrustATron5000Unlocked");

	Params::BFGActorComponent_Dash_IsThrustATron5000Unlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_DetectionHelper.IsDisguised
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _pDisguisedActor                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bHandleConsequences                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bIgnoreChangingDisguiseFlag                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_DetectionHelper::IsDisguised(class AActor* _pDisguisedActor, bool _bHandleConsequences, bool _bIgnoreChangingDisguiseFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_DetectionHelper", "IsDisguised");

	Params::BFGActorComponent_DetectionHelper_IsDisguised Parms{};

	Parms._pDisguisedActor = _pDisguisedActor;
	Parms._bHandleConsequences = _bHandleConsequences;
	Parms._bIgnoreChangingDisguiseFlag = _bIgnoreChangingDisguiseFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_DetectionHelper.OnAIAlertStateChanged
// (Native, Protected)
// Parameters:
// EBFGBehaviourState_NPC                  _eState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_DetectionHelper::OnAIAlertStateChanged(EBFGBehaviourState_NPC _eState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_DetectionHelper", "OnAIAlertStateChanged");

	Params::BFGActorComponent_DetectionHelper_OnAIAlertStateChanged Parms{};

	Parms._eState = _eState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_DetectionHelper.SetLastSensorUpdateTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _fLastSensorUpdateTime                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_DetectionHelper::SetLastSensorUpdateTime(float _fLastSensorUpdateTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_DetectionHelper", "SetLastSensorUpdateTime");

	Params::BFGActorComponent_DetectionHelper_SetLastSensorUpdateTime Parms{};

	Parms._fLastSensorUpdateTime = _fLastSensorUpdateTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_DetectionHelper.GetShareKnowledge
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_DetectionHelper::GetShareKnowledge() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_DetectionHelper", "GetShareKnowledge");

	Params::BFGActorComponent_DetectionHelper_GetShareKnowledge Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_DetectionHelper.IsDetectable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           _pTargetActor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_DetectionHelper::IsDetectable(class AActor* _pTargetActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_DetectionHelper", "IsDetectable");

	Params::BFGActorComponent_DetectionHelper_IsDetectable Parms{};

	Parms._pTargetActor = _pTargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_DetectionHelper.IsHypnotized
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           _pTargetActor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_DetectionHelper::IsHypnotized(class AActor* _pTargetActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_DetectionHelper", "IsHypnotized");

	Params::BFGActorComponent_DetectionHelper_IsHypnotized Parms{};

	Parms._pTargetActor = _pTargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_DetectionHelper.IsInProtectiveBubble
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           _pTargetActor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_DetectionHelper::IsInProtectiveBubble(class AActor* _pTargetActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_DetectionHelper", "IsInProtectiveBubble");

	Params::BFGActorComponent_DetectionHelper_IsInProtectiveBubble Parms{};

	Parms._pTargetActor = _pTargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_DetectionHelper.IsStunned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_DetectionHelper::IsStunned() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_DetectionHelper", "IsStunned");

	Params::BFGActorComponent_DetectionHelper_IsStunned Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_DetectionHelper.IsTargetable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           _pTargetActor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_DetectionHelper::IsTargetable(class AActor* _pTargetActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_DetectionHelper", "IsTargetable");

	Params::BFGActorComponent_DetectionHelper_IsTargetable Parms{};

	Parms._pTargetActor = _pTargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_Effect.ActivateEffectAttachToActor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// EBFGEffect_Identifier                   _eIdentifier                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pAttachTo                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _oSocketName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttachmentRule                         _eLocationAttachRule                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttachmentRule                         _eRotationAttachRule                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttachmentRule                         _eScaleAttachRule                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ABFGPlayerController*             _pPlayerController                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _rRelativeLocation                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         _rRelativeRotation                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    _bAbsoluteLocation                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bAbsoluteRotation                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UBFGEffectContainer*>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UBFGEffectContainer*> UBFGActorComponent_Effect::ActivateEffectAttachToActor(EBFGEffect_Identifier _eIdentifier, class AActor* _pAttachTo, const class FName _oSocketName, EAttachmentRule _eLocationAttachRule, EAttachmentRule _eRotationAttachRule, EAttachmentRule _eScaleAttachRule, class ABFGPlayerController* _pPlayerController, const struct FVector& _rRelativeLocation, const struct FRotator& _rRelativeRotation, bool _bAbsoluteLocation, bool _bAbsoluteRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Effect", "ActivateEffectAttachToActor");

	Params::BFGActorComponent_Effect_ActivateEffectAttachToActor Parms{};

	Parms._eIdentifier = _eIdentifier;
	Parms._pAttachTo = _pAttachTo;
	Parms._oSocketName = _oSocketName;
	Parms._eLocationAttachRule = _eLocationAttachRule;
	Parms._eRotationAttachRule = _eRotationAttachRule;
	Parms._eScaleAttachRule = _eScaleAttachRule;
	Parms._pPlayerController = _pPlayerController;
	Parms._rRelativeLocation = std::move(_rRelativeLocation);
	Parms._rRelativeRotation = std::move(_rRelativeRotation);
	Parms._bAbsoluteLocation = _bAbsoluteLocation;
	Parms._bAbsoluteRotation = _bAbsoluteRotation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_Effect.ActivateEffectAttachToComponent
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// EBFGEffect_Identifier                   _eIdentifier                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  _pAttachTo                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _oSocketName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttachmentRule                         _eLocationAttachRule                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttachmentRule                         _eRotationAttachRule                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttachmentRule                         _eScaleAttachRule                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ABFGPlayerController*             _pPlayerController                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _rRelativeLocation                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         _rRelativeRotation                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    _bAbsoluteLocation                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bAbsoluteRotation                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UBFGEffectContainer*>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UBFGEffectContainer*> UBFGActorComponent_Effect::ActivateEffectAttachToComponent(EBFGEffect_Identifier _eIdentifier, class USceneComponent* _pAttachTo, const class FName _oSocketName, EAttachmentRule _eLocationAttachRule, EAttachmentRule _eRotationAttachRule, EAttachmentRule _eScaleAttachRule, class ABFGPlayerController* _pPlayerController, const struct FVector& _rRelativeLocation, const struct FRotator& _rRelativeRotation, bool _bAbsoluteLocation, bool _bAbsoluteRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Effect", "ActivateEffectAttachToComponent");

	Params::BFGActorComponent_Effect_ActivateEffectAttachToComponent Parms{};

	Parms._eIdentifier = _eIdentifier;
	Parms._pAttachTo = _pAttachTo;
	Parms._oSocketName = _oSocketName;
	Parms._eLocationAttachRule = _eLocationAttachRule;
	Parms._eRotationAttachRule = _eRotationAttachRule;
	Parms._eScaleAttachRule = _eScaleAttachRule;
	Parms._pPlayerController = _pPlayerController;
	Parms._rRelativeLocation = std::move(_rRelativeLocation);
	Parms._rRelativeRotation = std::move(_rRelativeRotation);
	Parms._bAbsoluteLocation = _bAbsoluteLocation;
	Parms._bAbsoluteRotation = _bAbsoluteRotation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_Effect.ActivateEffectWithTransform
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// EBFGEffect_Identifier                   _eIdentifier                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       _rTransform                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class ABFGPlayerController*             _pPlayerController                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UBFGEffectContainer*>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UBFGEffectContainer*> UBFGActorComponent_Effect::ActivateEffectWithTransform(EBFGEffect_Identifier _eIdentifier, const struct FTransform& _rTransform, class ABFGPlayerController* _pPlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Effect", "ActivateEffectWithTransform");

	Params::BFGActorComponent_Effect_ActivateEffectWithTransform Parms{};

	Parms._eIdentifier = _eIdentifier;
	Parms._rTransform = std::move(_rTransform);
	Parms._pPlayerController = _pPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_Effect.ActivateSlotEffectAttachToActor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// EBFGEffect_Identifier                   _eIdentifier                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pAttachTo                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _oSocketName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttachmentRule                         _eLocationAttachRule                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttachmentRule                         _eRotationAttachRule                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttachmentRule                         _eScaleAttachRule                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ABFGPlayerController*             _pPlayerController                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _rRelativeLocation                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         _rRelativeRotation                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    _bAbsoluteLocation                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bAbsoluteRotation                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UBFGEffectContainer*>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UBFGEffectContainer*> UBFGActorComponent_Effect::ActivateSlotEffectAttachToActor(EBFGEffect_Identifier _eIdentifier, int32 _iSlot, class AActor* _pAttachTo, const class FName _oSocketName, EAttachmentRule _eLocationAttachRule, EAttachmentRule _eRotationAttachRule, EAttachmentRule _eScaleAttachRule, class ABFGPlayerController* _pPlayerController, const struct FVector& _rRelativeLocation, const struct FRotator& _rRelativeRotation, bool _bAbsoluteLocation, bool _bAbsoluteRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Effect", "ActivateSlotEffectAttachToActor");

	Params::BFGActorComponent_Effect_ActivateSlotEffectAttachToActor Parms{};

	Parms._eIdentifier = _eIdentifier;
	Parms._iSlot = _iSlot;
	Parms._pAttachTo = _pAttachTo;
	Parms._oSocketName = _oSocketName;
	Parms._eLocationAttachRule = _eLocationAttachRule;
	Parms._eRotationAttachRule = _eRotationAttachRule;
	Parms._eScaleAttachRule = _eScaleAttachRule;
	Parms._pPlayerController = _pPlayerController;
	Parms._rRelativeLocation = std::move(_rRelativeLocation);
	Parms._rRelativeRotation = std::move(_rRelativeRotation);
	Parms._bAbsoluteLocation = _bAbsoluteLocation;
	Parms._bAbsoluteRotation = _bAbsoluteRotation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_Effect.ActivateSlotEffectAttachToComponent
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// EBFGEffect_Identifier                   _eIdentifier                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  _pAttachTo                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _oSocketName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttachmentRule                         _eLocationAttachRule                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttachmentRule                         _eRotationAttachRule                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttachmentRule                         _eScaleAttachRule                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ABFGPlayerController*             _pPlayerController                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _rRelativeLocation                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         _rRelativeRotation                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    _bAbsoluteLocation                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bAbsoluteRotation                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UBFGEffectContainer*>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UBFGEffectContainer*> UBFGActorComponent_Effect::ActivateSlotEffectAttachToComponent(EBFGEffect_Identifier _eIdentifier, int32 _iSlot, class USceneComponent* _pAttachTo, const class FName _oSocketName, EAttachmentRule _eLocationAttachRule, EAttachmentRule _eRotationAttachRule, EAttachmentRule _eScaleAttachRule, class ABFGPlayerController* _pPlayerController, const struct FVector& _rRelativeLocation, const struct FRotator& _rRelativeRotation, bool _bAbsoluteLocation, bool _bAbsoluteRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Effect", "ActivateSlotEffectAttachToComponent");

	Params::BFGActorComponent_Effect_ActivateSlotEffectAttachToComponent Parms{};

	Parms._eIdentifier = _eIdentifier;
	Parms._iSlot = _iSlot;
	Parms._pAttachTo = _pAttachTo;
	Parms._oSocketName = _oSocketName;
	Parms._eLocationAttachRule = _eLocationAttachRule;
	Parms._eRotationAttachRule = _eRotationAttachRule;
	Parms._eScaleAttachRule = _eScaleAttachRule;
	Parms._pPlayerController = _pPlayerController;
	Parms._rRelativeLocation = std::move(_rRelativeLocation);
	Parms._rRelativeRotation = std::move(_rRelativeRotation);
	Parms._bAbsoluteLocation = _bAbsoluteLocation;
	Parms._bAbsoluteRotation = _bAbsoluteRotation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_Effect.ActivateSlotEffectWithTransform
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// EBFGEffect_Identifier                   _eIdentifier                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       _rTransform                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class ABFGPlayerController*             _pPlayerController                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UBFGEffectContainer*>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UBFGEffectContainer*> UBFGActorComponent_Effect::ActivateSlotEffectWithTransform(EBFGEffect_Identifier _eIdentifier, int32 _iSlot, const struct FTransform& _rTransform, class ABFGPlayerController* _pPlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Effect", "ActivateSlotEffectWithTransform");

	Params::BFGActorComponent_Effect_ActivateSlotEffectWithTransform Parms{};

	Parms._eIdentifier = _eIdentifier;
	Parms._iSlot = _iSlot;
	Parms._rTransform = std::move(_rTransform);
	Parms._pPlayerController = _pPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_Effect.AddEffectBank
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGEffectBank*                   _pEffectBank                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_Effect::AddEffectBank(class UBFGEffectBank* _pEffectBank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Effect", "AddEffectBank");

	Params::BFGActorComponent_Effect_AddEffectBank Parms{};

	Parms._pEffectBank = _pEffectBank;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Effect.ComputeFreeSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGActorComponent_Effect::ComputeFreeSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Effect", "ComputeFreeSlot");

	Params::BFGActorComponent_Effect_ComputeFreeSlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_Effect.DeactivateAllEffects
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bIncludeNonPersistent                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_Effect::DeactivateAllEffects(bool _bIncludeNonPersistent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Effect", "DeactivateAllEffects");

	Params::BFGActorComponent_Effect_DeactivateAllEffects Parms{};

	Parms._bIncludeNonPersistent = _bIncludeNonPersistent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Effect.DeactivateEffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBFGEffect_Identifier                   _eIdentifier                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bIncludeNonPersistent                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_Effect::DeactivateEffect(EBFGEffect_Identifier _eIdentifier, bool _bIncludeNonPersistent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Effect", "DeactivateEffect");

	Params::BFGActorComponent_Effect_DeactivateEffect Parms{};

	Parms._eIdentifier = _eIdentifier;
	Parms._bIncludeNonPersistent = _bIncludeNonPersistent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Effect.DeactivateSlotEffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBFGEffect_Identifier                   _eIdentifier                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bIncludeNonPersistent                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_Effect::DeactivateSlotEffect(EBFGEffect_Identifier _eIdentifier, int32 _iSlot, bool _bIncludeNonPersistent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Effect", "DeactivateSlotEffect");

	Params::BFGActorComponent_Effect_DeactivateSlotEffect Parms{};

	Parms._eIdentifier = _eIdentifier;
	Parms._iSlot = _iSlot;
	Parms._bIncludeNonPersistent = _bIncludeNonPersistent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Effect.DestroyAllEffects
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bIncludeNonPersistent                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_Effect::DestroyAllEffects(bool _bIncludeNonPersistent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Effect", "DestroyAllEffects");

	Params::BFGActorComponent_Effect_DestroyAllEffects Parms{};

	Parms._bIncludeNonPersistent = _bIncludeNonPersistent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Effect.DestroyEffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBFGEffect_Identifier                   _eIdentifier                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bIncludeNonPersistent                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_Effect::DestroyEffect(EBFGEffect_Identifier _eIdentifier, bool _bIncludeNonPersistent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Effect", "DestroyEffect");

	Params::BFGActorComponent_Effect_DestroyEffect Parms{};

	Parms._eIdentifier = _eIdentifier;
	Parms._bIncludeNonPersistent = _bIncludeNonPersistent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Effect.DestroySlotEffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBFGEffect_Identifier                   _eIdentifier                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bIncludeNonPersistent                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_Effect::DestroySlotEffect(EBFGEffect_Identifier _eIdentifier, int32 _iSlot, bool _bIncludeNonPersistent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Effect", "DestroySlotEffect");

	Params::BFGActorComponent_Effect_DestroySlotEffect Parms{};

	Parms._eIdentifier = _eIdentifier;
	Parms._iSlot = _iSlot;
	Parms._bIncludeNonPersistent = _bIncludeNonPersistent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Effect.HandleActorChanged
// (Final, Native, Protected)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _iValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_Effect::HandleActorChanged(const class FName _rName, class AActor* _iValue, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Effect", "HandleActorChanged");

	Params::BFGActorComponent_Effect_HandleActorChanged Parms{};

	Parms._rName = _rName;
	Parms._iValue = _iValue;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Effect.HandleBoolChanged
// (Final, Native, Protected)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_Effect::HandleBoolChanged(const class FName _rName, bool _bValue, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Effect", "HandleBoolChanged");

	Params::BFGActorComponent_Effect_HandleBoolChanged Parms{};

	Parms._rName = _rName;
	Parms._bValue = _bValue;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Effect.HandleColorChanged
// (Final, Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FColor                           _rValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_Effect::HandleColorChanged(const class FName _rName, const struct FColor& _rValue, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Effect", "HandleColorChanged");

	Params::BFGActorComponent_Effect_HandleColorChanged Parms{};

	Parms._rName = _rName;
	Parms._rValue = std::move(_rValue);
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Effect.HandleContainerDeath
// (Final, Native, Protected)
// Parameters:
// class UBFGEffectContainer*              _pContainer                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_Effect::HandleContainerDeath(class UBFGEffectContainer* _pContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Effect", "HandleContainerDeath");

	Params::BFGActorComponent_Effect_HandleContainerDeath Parms{};

	Parms._pContainer = _pContainer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Effect.HandleDataTableChanged
// (Final, Native, Protected)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDataTable*                       _pValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_Effect::HandleDataTableChanged(const class FName _rName, class UDataTable* _pValue, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Effect", "HandleDataTableChanged");

	Params::BFGActorComponent_Effect_HandleDataTableChanged Parms{};

	Parms._rName = _rName;
	Parms._pValue = _pValue;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Effect.HandleFloatChanged
// (Final, Native, Protected)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_Effect::HandleFloatChanged(const class FName _rName, float _fValue, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Effect", "HandleFloatChanged");

	Params::BFGActorComponent_Effect_HandleFloatChanged Parms{};

	Parms._rName = _rName;
	Parms._fValue = _fValue;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Effect.HandleIntChanged
// (Final, Native, Protected)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_Effect::HandleIntChanged(const class FName _rName, int32 _iValue, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Effect", "HandleIntChanged");

	Params::BFGActorComponent_Effect_HandleIntChanged Parms{};

	Parms._rName = _rName;
	Parms._iValue = _iValue;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Effect.HandleNameChanged
// (Final, Native, Protected)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _iValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_Effect::HandleNameChanged(const class FName _rName, class FName _iValue, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Effect", "HandleNameChanged");

	Params::BFGActorComponent_Effect_HandleNameChanged Parms{};

	Parms._rName = _rName;
	Parms._iValue = _iValue;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Effect.HandleObjectChanged
// (Final, Native, Protected)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          _pValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_Effect::HandleObjectChanged(const class FName _rName, class UObject* _pValue, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Effect", "HandleObjectChanged");

	Params::BFGActorComponent_Effect_HandleObjectChanged Parms{};

	Parms._rName = _rName;
	Parms._pValue = _pValue;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Effect.HandleRandFloatChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBFGEffectBlackboardParameter_RandFloat_rValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_Effect::HandleRandFloatChanged(const class FName _rName, const struct FBFGEffectBlackboardParameter_RandFloat& _rValue, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Effect", "HandleRandFloatChanged");

	Params::BFGActorComponent_Effect_HandleRandFloatChanged Parms{};

	Parms._rName = _rName;
	Parms._rValue = std::move(_rValue);
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Effect.HandleRandVectorChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBFGEffectBlackboardParameter_RandVector_rValue                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_Effect::HandleRandVectorChanged(const class FName _rName, const struct FBFGEffectBlackboardParameter_RandVector& _rValue, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Effect", "HandleRandVectorChanged");

	Params::BFGActorComponent_Effect_HandleRandVectorChanged Parms{};

	Parms._rName = _rName;
	Parms._rValue = std::move(_rValue);
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Effect.HandleRotatorChanged
// (Final, Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         _rValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_Effect::HandleRotatorChanged(const class FName _rName, const struct FRotator& _rValue, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Effect", "HandleRotatorChanged");

	Params::BFGActorComponent_Effect_HandleRotatorChanged Parms{};

	Parms._rName = _rName;
	Parms._rValue = std::move(_rValue);
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Effect.HandleVectorChanged
// (Final, Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _rValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_Effect::HandleVectorChanged(const class FName _rName, const struct FVector& _rValue, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Effect", "HandleVectorChanged");

	Params::BFGActorComponent_Effect_HandleVectorChanged Parms{};

	Parms._rName = _rName;
	Parms._rValue = std::move(_rValue);
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Effect.RemoveEffectBank
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGEffectBank*                   _pEffectBank                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_Effect::RemoveEffectBank(class UBFGEffectBank* _pEffectBank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Effect", "RemoveEffectBank");

	Params::BFGActorComponent_Effect_RemoveEffectBank Parms{};

	Parms._pEffectBank = _pEffectBank;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Effect.GetBlackboard
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGEffectBlackboard*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGEffectBlackboard* UBFGActorComponent_Effect::GetBlackboard() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Effect", "GetBlackboard");

	Params::BFGActorComponent_Effect_GetBlackboard Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableAction_Boolean_SetFalse.GetActionName_BooleanSetFalse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableAction_Boolean_SetFalse::GetActionName_BooleanSetFalse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableAction_Boolean_SetFalse", "GetActionName_BooleanSetFalse");

	Params::BFGVariableAction_Boolean_SetFalse_GetActionName_BooleanSetFalse Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_DialogOption.Accept
// (Final, Native, Public, BlueprintCallable)

void UBFGWidget_DialogOption::Accept()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption", "Accept");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_DialogOption.Cancel
// (Final, Native, Public, BlueprintCallable)

void UBFGWidget_DialogOption::Cancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption", "Cancel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_DialogOption.HandleMouseHover
// (Final, Native, Public, BlueprintCallable)

void UBFGWidget_DialogOption::HandleMouseHover()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption", "HandleMouseHover");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_DialogOption.HandleMousePress
// (Final, Native, Public, BlueprintCallable)

void UBFGWidget_DialogOption::HandleMousePress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption", "HandleMousePress");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_DialogOption.HandleMouseRelease
// (Final, Native, Public, BlueprintCallable)

void UBFGWidget_DialogOption::HandleMouseRelease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption", "HandleMouseRelease");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_DialogOption.HandleMouseUnhover
// (Final, Native, Public, BlueprintCallable)

void UBFGWidget_DialogOption::HandleMouseUnhover()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption", "HandleMouseUnhover");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_DialogOption.HandleSecondaryAxisChange
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bToRight                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_DialogOption::HandleSecondaryAxisChange(bool _bToRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption", "HandleSecondaryAxisChange");

	Params::BFGWidget_DialogOption_HandleSecondaryAxisChange Parms{};

	Parms._bToRight = _bToRight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_DialogOption.OnHasNotification
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_DialogOption::OnHasNotification(bool _bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption", "OnHasNotification");

	Params::BFGWidget_DialogOption_OnHasNotification Parms{};

	Parms._bShow = _bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_DialogOption.OnNativeAccept
// (Native, Event, Public, BlueprintEvent)

void UBFGWidget_DialogOption::OnNativeAccept()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption", "OnNativeAccept");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_DialogOption.OnNativeCancel
// (Native, Event, Public, BlueprintEvent)

void UBFGWidget_DialogOption::OnNativeCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption", "OnNativeCancel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_DialogOption.OnOptionStateChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// EBFGDialogOptionSelectionState          _eState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_DialogOption::OnOptionStateChanged(EBFGDialogOptionSelectionState _eState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption", "OnOptionStateChanged");

	Params::BFGWidget_DialogOption_OnOptionStateChanged Parms{};

	Parms._eState = _eState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_DialogOption.SetNotificationFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_DialogOption::SetNotificationFlag(bool _bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption", "SetNotificationFlag");

	Params::BFGWidget_DialogOption_SetNotificationFlag Parms{};

	Parms._bValue = _bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_DialogOption.SetTargetHandlerName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _targetHandlerName                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_DialogOption::SetTargetHandlerName(class FName _targetHandlerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption", "SetTargetHandlerName");

	Params::BFGWidget_DialogOption_SetTargetHandlerName Parms{};

	Parms._targetHandlerName = _targetHandlerName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_DialogOption.UpdateTimescaledSecondaryAxisValue
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                                   _fAxis                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_DialogOption::UpdateTimescaledSecondaryAxisValue(float _fAxis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption", "UpdateTimescaledSecondaryAxisValue");

	Params::BFGWidget_DialogOption_UpdateTimescaledSecondaryAxisValue Parms{};

	Parms._fAxis = _fAxis;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_DialogOption.UpdateValueBool
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_DialogOption::UpdateValueBool(bool _bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption", "UpdateValueBool");

	Params::BFGWidget_DialogOption_UpdateValueBool Parms{};

	Parms._bValue = _bValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_DialogOption.HasNotificationFlag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGWidget_DialogOption::HasNotificationFlag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption", "HasNotificationFlag");

	Params::BFGWidget_DialogOption_HasNotificationFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_DialogOption.SupportsAccept
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGWidget_DialogOption::SupportsAccept() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption", "SupportsAccept");

	Params::BFGWidget_DialogOption_SupportsAccept Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_DialogOption_Customizable.OnUpdateDialogText
// (Event, Public, BlueprintEvent)

void UBFGWidget_DialogOption_Customizable::OnUpdateDialogText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption_Customizable", "OnUpdateDialogText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_DialogOption_Customizable.SetDialogOptionText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             _strText                                               (Parm, NativeAccessSpecifierPublic)
// bool                                    _isDirty                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_DialogOption_Customizable::SetDialogOptionText(const class FText& _strText, bool _isDirty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption_Customizable", "SetDialogOptionText");

	Params::BFGWidget_DialogOption_Customizable_SetDialogOptionText Parms{};

	Parms._strText = std::move(_strText);
	Parms._isDirty = _isDirty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_DialogOption_Customizable.GetDialogOptionText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UBFGWidget_DialogOption_Customizable::GetDialogOptionText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption_Customizable", "GetDialogOptionText");

	Params::BFGWidget_DialogOption_Customizable_GetDialogOptionText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_DialogOption_Customizable.IsDialogOptionTextCustomized
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGWidget_DialogOption_Customizable::IsDialogOptionTextCustomized() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption_Customizable", "IsDialogOptionTextCustomized");

	Params::BFGWidget_DialogOption_Customizable_IsDialogOptionTextCustomized Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_DialogOption_HoloPoxEntry.OnSetupData
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FBFGHolobobDeckSelectionInfo     _oOptionData                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_DialogOption_HoloPoxEntry::OnSetupData(const struct FBFGHolobobDeckSelectionInfo& _oOptionData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption_HoloPoxEntry", "OnSetupData");

	Params::BFGWidget_DialogOption_HoloPoxEntry_OnSetupData Parms{};

	Parms._oOptionData = std::move(_oOptionData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGActorComponent_EquipmentManager.GetCurrentWeaponAmmo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class ABFGWeapon>           _rWeaponClass                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGActorComponent_EquipmentManager::GetCurrentWeaponAmmo(const TSubclassOf<class ABFGWeapon>& _rWeaponClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_EquipmentManager", "GetCurrentWeaponAmmo");

	Params::BFGActorComponent_EquipmentManager_GetCurrentWeaponAmmo Parms{};

	Parms._rWeaponClass = _rWeaponClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_EquipmentManager.GetCurrentWeaponMaxAmmo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class ABFGWeapon>           _rWeaponClass                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGActorComponent_EquipmentManager::GetCurrentWeaponMaxAmmo(const TSubclassOf<class ABFGWeapon>& _rWeaponClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_EquipmentManager", "GetCurrentWeaponMaxAmmo");

	Params::BFGActorComponent_EquipmentManager_GetCurrentWeaponMaxAmmo Parms{};

	Parms._rWeaponClass = _rWeaponClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_EquipmentManager.GetCurrentWeaponOverheated
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class ABFGWeapon>           _rWeaponClass                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_EquipmentManager::GetCurrentWeaponOverheated(const TSubclassOf<class ABFGWeapon>& _rWeaponClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_EquipmentManager", "GetCurrentWeaponOverheated");

	Params::BFGActorComponent_EquipmentManager_GetCurrentWeaponOverheated Parms{};

	Parms._rWeaponClass = _rWeaponClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_EquipmentManager.OnWeaponAmmoChanged
// (Final, Native, Protected)
// Parameters:
// class ABFGWeapon*                       _pWeapon                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_EquipmentManager::OnWeaponAmmoChanged(class ABFGWeapon* _pWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_EquipmentManager", "OnWeaponAmmoChanged");

	Params::BFGActorComponent_EquipmentManager_OnWeaponAmmoChanged Parms{};

	Parms._pWeapon = _pWeapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_EquipmentManager.OnWeaponNotReady
// (Final, Native, Protected)
// Parameters:
// class UClass*                           _pWeaponClass                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_EquipmentManager::OnWeaponNotReady(class UClass* _pWeaponClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_EquipmentManager", "OnWeaponNotReady");

	Params::BFGActorComponent_EquipmentManager_OnWeaponNotReady Parms{};

	Parms._pWeaponClass = _pWeaponClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_EquipmentManager.OnWeaponNotVisibile
// (Final, Native, Protected)
// Parameters:
// class UClass*                           _pWeaponClass                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_EquipmentManager::OnWeaponNotVisibile(class UClass* _pWeaponClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_EquipmentManager", "OnWeaponNotVisibile");

	Params::BFGActorComponent_EquipmentManager_OnWeaponNotVisibile Parms{};

	Parms._pWeaponClass = _pWeaponClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_EquipmentManager.OnWeaponReady
// (Final, Native, Protected)
// Parameters:
// class UClass*                           _pWeaponClass                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_EquipmentManager::OnWeaponReady(class UClass* _pWeaponClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_EquipmentManager", "OnWeaponReady");

	Params::BFGActorComponent_EquipmentManager_OnWeaponReady Parms{};

	Parms._pWeaponClass = _pWeaponClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_EquipmentManager.OnWeaponVisibile
// (Final, Native, Protected)
// Parameters:
// class UClass*                           _pWeaponClass                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_EquipmentManager::OnWeaponVisibile(class UClass* _pWeaponClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_EquipmentManager", "OnWeaponVisibile");

	Params::BFGActorComponent_EquipmentManager_OnWeaponVisibile Parms{};

	Parms._pWeaponClass = _pWeaponClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_EquipmentManager.RequestFirstWeaponEquipped
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _iStartIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bSwapDirection                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_EquipmentManager::RequestFirstWeaponEquipped(int32 _iStartIndex, bool _bSwapDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_EquipmentManager", "RequestFirstWeaponEquipped");

	Params::BFGActorComponent_EquipmentManager_RequestFirstWeaponEquipped Parms{};

	Parms._iStartIndex = _iStartIndex;
	Parms._bSwapDirection = _bSwapDirection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_EquipmentManager.RequestWeaponEquipped
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ABFGWeapon*                       _pWeaponClass                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_EquipmentManager::RequestWeaponEquipped(class ABFGWeapon* _pWeaponClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_EquipmentManager", "RequestWeaponEquipped");

	Params::BFGActorComponent_EquipmentManager_RequestWeaponEquipped Parms{};

	Parms._pWeaponClass = _pWeaponClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_EquipmentManager.RequestWeaponEquippedByClass
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class ABFGWeapon>           _rWeaponClass                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_EquipmentManager::RequestWeaponEquippedByClass(const TSubclassOf<class ABFGWeapon>& _rWeaponClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_EquipmentManager", "RequestWeaponEquippedByClass");

	Params::BFGActorComponent_EquipmentManager_RequestWeaponEquippedByClass Parms{};

	Parms._rWeaponClass = _rWeaponClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_EquipmentManager.SetWidgetVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESlateVisibility                        _eVisibility                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_EquipmentManager::SetWidgetVisibility(ESlateVisibility _eVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_EquipmentManager", "SetWidgetVisibility");

	Params::BFGActorComponent_EquipmentManager_SetWidgetVisibility Parms{};

	Parms._eVisibility = _eVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_EquipmentManager.GetCurrentWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                           _pClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ABFGWeapon*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGWeapon* UBFGActorComponent_EquipmentManager::GetCurrentWeapon(class UClass* _pClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_EquipmentManager", "GetCurrentWeapon");

	Params::BFGActorComponent_EquipmentManager_GetCurrentWeapon Parms{};

	Parms._pClass = _pClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_EquipmentManager.GetCurrentWeapons
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class ABFGWeapon*>         ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class ABFGWeapon*> UBFGActorComponent_EquipmentManager::GetCurrentWeapons() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_EquipmentManager", "GetCurrentWeapons");

	Params::BFGActorComponent_EquipmentManager_GetCurrentWeapons Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_EquipmentManager.GetWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _iWeaponID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ABFGWeapon*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGWeapon* UBFGActorComponent_EquipmentManager::GetWeapon(int32 _iWeaponID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_EquipmentManager", "GetWeapon");

	Params::BFGActorComponent_EquipmentManager_GetWeapon Parms{};

	Parms._iWeaponID = _iWeaponID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableAction_MissionGroup_MakeAvailable.GetActionName_MissionGroupMakeAvailble
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableAction_MissionGroup_MakeAvailable::GetActionName_MissionGroupMakeAvailble()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableAction_MissionGroup_MakeAvailable", "GetActionName_MissionGroupMakeAvailble");

	Params::BFGVariableAction_MissionGroup_MakeAvailable_GetActionName_MissionGroupMakeAvailble Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction BFGCore.BFGActorComponent_ExplosiveItem.ActorComponent_ExplosiveItemExplosion__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// TArray<class AActor*>                   _aHitActorList                                         (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UBFGActorComponent_ExplosiveItem::ActorComponent_ExplosiveItemExplosion__DelegateSignature(const TArray<class AActor*>& _aHitActorList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_ExplosiveItem", "ActorComponent_ExplosiveItemExplosion__DelegateSignature");

	Params::BFGActorComponent_ExplosiveItem_ActorComponent_ExplosiveItemExplosion__DelegateSignature Parms{};

	Parms._aHitActorList = std::move(_aHitActorList);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGActorComponent_ExplosiveItem.OnEventExplosion
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    _bWithDelay                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_ExplosiveItem::OnEventExplosion(bool _bWithDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_ExplosiveItem", "OnEventExplosion");

	Params::BFGActorComponent_ExplosiveItem_OnEventExplosion Parms{};

	Parms._bWithDelay = _bWithDelay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_ExplosiveItem.ResetExplodedState
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_ExplosiveItem::ResetExplodedState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_ExplosiveItem", "ResetExplodedState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_FallDamage.Actor_OnHit
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// class AActor*                           _pSelfActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pOtherActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vNormalImpulse                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       _hit                                                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UBFGActorComponent_FallDamage::Actor_OnHit(class AActor* _pSelfActor, class AActor* _pOtherActor, const struct FVector& _vNormalImpulse, const struct FHitResult& _hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_FallDamage", "Actor_OnHit");

	Params::BFGActorComponent_FallDamage_Actor_OnHit Parms{};

	Parms._pSelfActor = _pSelfActor;
	Parms._pOtherActor = _pOtherActor;
	Parms._vNormalImpulse = std::move(_vNormalImpulse);
	Parms._hit = std::move(_hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_FallDamage.GetIsFalling
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_FallDamage::GetIsFalling() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_FallDamage", "GetIsFalling");

	Params::BFGActorComponent_FallDamage_GetIsFalling Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_GameplayEffectResponses.HasActiveResponseOfType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UBFGGameplayEffectResponse>_pClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_GameplayEffectResponses::HasActiveResponseOfType(TSubclassOf<class UBFGGameplayEffectResponse> _pClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_GameplayEffectResponses", "HasActiveResponseOfType");

	Params::BFGActorComponent_GameplayEffectResponses_HasActiveResponseOfType Parms{};

	Parms._pClass = _pClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_HumanoidStats.GetHasBrainStat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGActorStat_Bool*               ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGActorStat_Bool* UBFGActorComponent_HumanoidStats::GetHasBrainStat() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_HumanoidStats", "GetHasBrainStat");

	Params::BFGActorComponent_HumanoidStats_GetHasBrainStat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_InputActions.EnableInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_InputActions::EnableInput(bool _bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_InputActions", "EnableInput");

	Params::BFGActorComponent_InputActions_EnableInput Parms{};

	Parms._bEnable = _bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_InputActions.IncrementScheme
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_InputActions::IncrementScheme()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_InputActions", "IncrementScheme");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_InputActions.IsLastInputGamepad
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_InputActions::IsLastInputGamepad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_InputActions", "IsLastInputGamepad");

	Params::BFGActorComponent_InputActions_IsLastInputGamepad Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_InputActions.RefreshCache
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_InputActions::RefreshCache()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_InputActions", "RefreshCache");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_InputActions.RefreshCacheFromCallback
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _iDunnoWhat                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_InputActions::RefreshCacheFromCallback(int32 _iDunnoWhat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_InputActions", "RefreshCacheFromCallback");

	Params::BFGActorComponent_InputActions_RefreshCacheFromCallback Parms{};

	Parms._iDunnoWhat = _iDunnoWhat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_InputActions.SetCurrentInputSchemeIdentifier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EInputSchemeIdentifier                  _eIdentifier                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_InputActions::SetCurrentInputSchemeIdentifier(EInputSchemeIdentifier _eIdentifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_InputActions", "SetCurrentInputSchemeIdentifier");

	Params::BFGActorComponent_InputActions_SetCurrentInputSchemeIdentifier Parms{};

	Parms._eIdentifier = _eIdentifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_InputActions.FindInputActionsMatchingPattern
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FBFGInputPattern                 _rPattern                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    _bOnlyKeyAndState                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UBFGInputAction*>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UBFGInputAction*> UBFGActorComponent_InputActions::FindInputActionsMatchingPattern(const struct FBFGInputPattern& _rPattern, bool _bOnlyKeyAndState) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_InputActions", "FindInputActionsMatchingPattern");

	Params::BFGActorComponent_InputActions_FindInputActionsMatchingPattern Parms{};

	Parms._rPattern = std::move(_rPattern);
	Parms._bOnlyKeyAndState = _bOnlyKeyAndState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_InputActions.FindInputActionsMatchingPatternByKey
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FBFGInputPattern                 _rPattern                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    _bOnlyKey                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UBFGInputAction*>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UBFGInputAction*> UBFGActorComponent_InputActions::FindInputActionsMatchingPatternByKey(const struct FBFGInputPattern& _rPattern, bool _bOnlyKey) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_InputActions", "FindInputActionsMatchingPatternByKey");

	Params::BFGActorComponent_InputActions_FindInputActionsMatchingPatternByKey Parms{};

	Parms._rPattern = std::move(_rPattern);
	Parms._bOnlyKey = _bOnlyKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_InputActions.FindInputActionsMatchingPatternElement
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FBFGInputPatternElement          _rPatternElement                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    _bOnlyKeyAndState                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UBFGInputAction*>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UBFGInputAction*> UBFGActorComponent_InputActions::FindInputActionsMatchingPatternElement(const struct FBFGInputPatternElement& _rPatternElement, bool _bOnlyKeyAndState) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_InputActions", "FindInputActionsMatchingPatternElement");

	Params::BFGActorComponent_InputActions_FindInputActionsMatchingPatternElement Parms{};

	Parms._rPatternElement = std::move(_rPatternElement);
	Parms._bOnlyKeyAndState = _bOnlyKeyAndState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_InputActions.GetCurrentInputScheme
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGInputScheme*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGInputScheme* UBFGActorComponent_InputActions::GetCurrentInputScheme() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_InputActions", "GetCurrentInputScheme");

	Params::BFGActorComponent_InputActions_GetCurrentInputScheme Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_InputActions.TryGetCharacterOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACharacter*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ACharacter* UBFGActorComponent_InputActions::TryGetCharacterOwner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_InputActions", "TryGetCharacterOwner");

	Params::BFGActorComponent_InputActions_TryGetCharacterOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_InputActions.TryGetGameState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ABFGGameState*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGGameState* UBFGActorComponent_InputActions::TryGetGameState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_InputActions", "TryGetGameState");

	Params::BFGActorComponent_InputActions_TryGetGameState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_InputActions.TryGetPawnOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APawn*                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APawn* UBFGActorComponent_InputActions::TryGetPawnOwner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_InputActions", "TryGetPawnOwner");

	Params::BFGActorComponent_InputActions_TryGetPawnOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_InputActions.TryGetPlayerControllerOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ABFGPlayerController*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGPlayerController* UBFGActorComponent_InputActions::TryGetPlayerControllerOwner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_InputActions", "TryGetPlayerControllerOwner");

	Params::BFGActorComponent_InputActions_TryGetPlayerControllerOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_InputActions.TryGetPlayerOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ABFGPlayerCharacter*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGPlayerCharacter* UBFGActorComponent_InputActions::TryGetPlayerOwner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_InputActions", "TryGetPlayerOwner");

	Params::BFGActorComponent_InputActions_TryGetPlayerOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_InputActions.TryGetUFOOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ABFGPlayerUFO*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGPlayerUFO* UBFGActorComponent_InputActions::TryGetUFOOwner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_InputActions", "TryGetUFOOwner");

	Params::BFGActorComponent_InputActions_TryGetUFOOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_InteractableCharacterStats.GetCanBeInteractedWith
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGActorStat_Bool*               ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGActorStat_Bool* UBFGActorComponent_InteractableCharacterStats::GetCanBeInteractedWith() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_InteractableCharacterStats", "GetCanBeInteractedWith");

	Params::BFGActorComponent_InteractableCharacterStats_GetCanBeInteractedWith Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_InteractableCharacterStats.GetIsInteractedWithStat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGActorStat_Bool*               ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGActorStat_Bool* UBFGActorComponent_InteractableCharacterStats::GetIsInteractedWithStat() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_InteractableCharacterStats", "GetIsInteractedWithStat");

	Params::BFGActorComponent_InteractableCharacterStats_GetIsInteractedWithStat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_JetpackPilot.AddFuel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _fAmount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_JetpackPilot::AddFuel(float _fAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_JetpackPilot", "AddFuel");

	Params::BFGActorComponent_JetpackPilot_AddFuel Parms{};

	Parms._fAmount = _fAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BFGCore.BFGActorComponent_JetpackPilot.BFGActorComponent_Jetpack_Event__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UBFGActorComponent_JetpackPilot*  _pJetpackComponent                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_JetpackPilot::BFGActorComponent_Jetpack_Event__DelegateSignature(class UBFGActorComponent_JetpackPilot* _pJetpackComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_JetpackPilot", "BFGActorComponent_Jetpack_Event__DelegateSignature");

	Params::BFGActorComponent_JetpackPilot_BFGActorComponent_Jetpack_Event__DelegateSignature Parms{};

	Parms._pJetpackComponent = _pJetpackComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGActorComponent_JetpackPilot.BlockFuel
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_JetpackPilot::BlockFuel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_JetpackPilot", "BlockFuel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_JetpackPilot.ConsumeFuel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _fAmount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_JetpackPilot::ConsumeFuel(float _fAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_JetpackPilot", "ConsumeFuel");

	Params::BFGActorComponent_JetpackPilot_ConsumeFuel Parms{};

	Parms._fAmount = _fAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_JetpackPilot.DisableJetpack
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_JetpackPilot::DisableJetpack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_JetpackPilot", "DisableJetpack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_JetpackPilot.DisableSkate
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_JetpackPilot::DisableSkate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_JetpackPilot", "DisableSkate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_JetpackPilot.EnableJetpack
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_JetpackPilot::EnableJetpack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_JetpackPilot", "EnableJetpack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_JetpackPilot.EnableSkate
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_JetpackPilot::EnableSkate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_JetpackPilot", "EnableSkate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_JetpackPilot.PressHover
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_JetpackPilot::PressHover()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_JetpackPilot", "PressHover");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_JetpackPilot.PressSkate
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_JetpackPilot::PressSkate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_JetpackPilot", "PressSkate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_JetpackPilot.PressThrottle
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_JetpackPilot::PressThrottle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_JetpackPilot", "PressThrottle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_JetpackPilot.ReleaseHover
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_JetpackPilot::ReleaseHover()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_JetpackPilot", "ReleaseHover");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_JetpackPilot.ReleaseSkate
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_JetpackPilot::ReleaseSkate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_JetpackPilot", "ReleaseSkate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_JetpackPilot.ReleaseThrottle
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_JetpackPilot::ReleaseThrottle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_JetpackPilot", "ReleaseThrottle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_JetpackPilot.UnblockFuel
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_JetpackPilot::UnblockFuel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_JetpackPilot", "UnblockFuel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_JetpackPilot.GetCurrentFuel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGActorComponent_JetpackPilot::GetCurrentFuel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_JetpackPilot", "GetCurrentFuel");

	Params::BFGActorComponent_JetpackPilot_GetCurrentFuel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_JetpackPilot.GetCurrentFuelRatio
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGActorComponent_JetpackPilot::GetCurrentFuelRatio() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_JetpackPilot", "GetCurrentFuelRatio");

	Params::BFGActorComponent_JetpackPilot_GetCurrentFuelRatio Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_JetpackPilot.GetHoverActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_JetpackPilot::GetHoverActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_JetpackPilot", "GetHoverActive");

	Params::BFGActorComponent_JetpackPilot_GetHoverActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_JetpackPilot.GetJetpackDeployed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_JetpackPilot::GetJetpackDeployed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_JetpackPilot", "GetJetpackDeployed");

	Params::BFGActorComponent_JetpackPilot_GetJetpackDeployed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_JetpackPilot.GetSkateActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_JetpackPilot::GetSkateActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_JetpackPilot", "GetSkateActive");

	Params::BFGActorComponent_JetpackPilot_GetSkateActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_JetpackPilot.GetThrottleActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_JetpackPilot::GetThrottleActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_JetpackPilot", "GetThrottleActive");

	Params::BFGActorComponent_JetpackPilot_GetThrottleActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_JetpackPilot.IsJetpackEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_JetpackPilot::IsJetpackEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_JetpackPilot", "IsJetpackEnabled");

	Params::BFGActorComponent_JetpackPilot_IsJetpackEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_ChallengeEnd.GetChallengeObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGQuest_Challenge*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGQuest_Challenge* UBFGWidget_ChallengeEnd::GetChallengeObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_ChallengeEnd", "GetChallengeObject");

	Params::BFGWidget_ChallengeEnd_GetChallengeObject Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_ChallengeEnd.OnShowFail
// (Event, Public, BlueprintEvent)

void UBFGWidget_ChallengeEnd::OnShowFail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_ChallengeEnd", "OnShowFail");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_ChallengeEnd.OnUpdateChallengeUI
// (Event, Public, BlueprintEvent)

void UBFGWidget_ChallengeEnd::OnUpdateChallengeUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_ChallengeEnd", "OnUpdateChallengeUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_ChallengeEnd.SetContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pContext                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_ChallengeEnd::SetContext(class UObject* _pContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_ChallengeEnd", "SetContext");

	Params::BFGWidget_ChallengeEnd_SetContext Parms{};

	Parms._pContext = _pContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Levitate.BeginLevitation
// (Final, Native, Public)

void UBFGActorComponent_Levitate::BeginLevitation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Levitate", "BeginLevitation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Levitate.EndLevitation
// (Final, Native, Public)
// Parameters:
// bool                                    _bForced                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_Levitate::EndLevitation(bool _bForced)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Levitate", "EndLevitation");

	Params::BFGActorComponent_Levitate_EndLevitation Parms{};

	Parms._bForced = _bForced;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Levitate.ForceStopLevitationTimeline
// (Final, Native, Public)

void UBFGActorComponent_Levitate::ForceStopLevitationTimeline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Levitate", "ForceStopLevitationTimeline");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Levitate.Timeline_Levitate_DOWN_FinishedCallback
// (Final, Native, Private)

void UBFGActorComponent_Levitate::Timeline_Levitate_DOWN_FinishedCallback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Levitate", "Timeline_Levitate_DOWN_FinishedCallback");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Levitate.Timeline_Levitate_DOWN_Interpolation
// (Final, Native, Private)
// Parameters:
// float                                   Val                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_Levitate::Timeline_Levitate_DOWN_Interpolation(float Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Levitate", "Timeline_Levitate_DOWN_Interpolation");

	Params::BFGActorComponent_Levitate_Timeline_Levitate_DOWN_Interpolation Parms{};

	Parms.Val = Val;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Levitate.Timeline_Levitate_UP_FinishedCallback
// (Final, Native, Private)

void UBFGActorComponent_Levitate::Timeline_Levitate_UP_FinishedCallback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Levitate", "Timeline_Levitate_UP_FinishedCallback");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_Levitate.Timeline_Levitate_UP_Interpolation
// (Final, Native, Private)
// Parameters:
// float                                   Val                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_Levitate::Timeline_Levitate_UP_Interpolation(float Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Levitate", "Timeline_Levitate_UP_Interpolation");

	Params::BFGActorComponent_Levitate_Timeline_Levitate_UP_Interpolation Parms{};

	Parms.Val = Val;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEventTrigger_MonetaryValue.ValueChanged
// (Final, Native, Protected)
// Parameters:
// class ABFGPlayerState*                  _pState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_MonetaryValue::ValueChanged(class ABFGPlayerState* _pState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_MonetaryValue", "ValueChanged");

	Params::BFGEventTrigger_MonetaryValue_ValueChanged Parms{};

	Parms._pState = _pState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_LockOn.GetLockOnTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGActorComponent_LockOnTarget*  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGActorComponent_LockOnTarget* UBFGActorComponent_LockOn::GetLockOnTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_LockOn", "GetLockOnTarget");

	Params::BFGActorComponent_LockOn_GetLockOnTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_LockOn.HasValidLockOnTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_LockOn::HasValidLockOnTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_LockOn", "HasValidLockOnTarget");

	Params::BFGActorComponent_LockOn_HasValidLockOnTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEventTrigger_HealthChanged.OnHealthChanged
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_HealthChanged::OnHealthChanged(class AActor* _pActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_HealthChanged", "OnHealthChanged");

	Params::BFGEventTrigger_HealthChanged_OnHealthChanged Parms{};

	Parms._pActor = _pActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_MentalAbilities.ActivateAbilityEffectOnTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UBFGMentalAbilityBase>_rClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_MentalAbilities::ActivateAbilityEffectOnTarget(TSubclassOf<class UBFGMentalAbilityBase> _rClass, class AActor* _pTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_MentalAbilities", "ActivateAbilityEffectOnTarget");

	Params::BFGActorComponent_MentalAbilities_ActivateAbilityEffectOnTarget Parms{};

	Parms._rClass = _rClass;
	Parms._pTarget = _pTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_MentalAbilities.DeactivateAbilityEffectOnTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UBFGMentalAbilityBase>_rClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_MentalAbilities::DeactivateAbilityEffectOnTarget(TSubclassOf<class UBFGMentalAbilityBase> _rClass, class AActor* _pTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_MentalAbilities", "DeactivateAbilityEffectOnTarget");

	Params::BFGActorComponent_MentalAbilities_DeactivateAbilityEffectOnTarget Parms{};

	Parms._rClass = _rClass;
	Parms._pTarget = _pTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_MentalAbilities.Input_InteractState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bPressed                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UBFGMentalAbilityBase>_rClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bPlayInvalidTargetEffects                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_MentalAbilities::Input_InteractState(bool _bPressed, TSubclassOf<class UBFGMentalAbilityBase> _rClass, bool _bPlayInvalidTargetEffects)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_MentalAbilities", "Input_InteractState");

	Params::BFGActorComponent_MentalAbilities_Input_InteractState Parms{};

	Parms._bPressed = _bPressed;
	Parms._rClass = _rClass;
	Parms._bPlayInvalidTargetEffects = _bPlayInvalidTargetEffects;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_MentalAbilities.IsAnyAbilityActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_MentalAbilities::IsAnyAbilityActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_MentalAbilities", "IsAnyAbilityActive");

	Params::BFGActorComponent_MentalAbilities_IsAnyAbilityActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_MentalAbilities.IsAnyMentalLinkActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_MentalAbilities::IsAnyMentalLinkActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_MentalAbilities", "IsAnyMentalLinkActive");

	Params::BFGActorComponent_MentalAbilities_IsAnyMentalLinkActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_MentalAbilities.OnDataChanged
// (Final, Native, Protected, BlueprintCallable)

void UBFGActorComponent_MentalAbilities::OnDataChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_MentalAbilities", "OnDataChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_MentalAbilities.SetWidgetVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESlateVisibility                        _eVisibility                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_MentalAbilities::SetWidgetVisibility(ESlateVisibility _eVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_MentalAbilities", "SetWidgetVisibility");

	Params::BFGActorComponent_MentalAbilities_SetWidgetVisibility Parms{};

	Parms._eVisibility = _eVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_MentalAbilities.GetAbilityByClass
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UBFGMentalAbilityBase>_rClass                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGMentalAbilityBase*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGMentalAbilityBase* UBFGActorComponent_MentalAbilities::GetAbilityByClass(const TSubclassOf<class UBFGMentalAbilityBase>& _rClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_MentalAbilities", "GetAbilityByClass");

	Params::BFGActorComponent_MentalAbilities_GetAbilityByClass Parms{};

	Parms._rClass = _rClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_MentalAbilities.GetAllAbilities
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UBFGMentalAbilityBase*>    _apAbilitiesOut                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UBFGActorComponent_MentalAbilities::GetAllAbilities(TArray<class UBFGMentalAbilityBase*>* _apAbilitiesOut) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_MentalAbilities", "GetAllAbilities");

	Params::BFGActorComponent_MentalAbilities_GetAllAbilities Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_apAbilitiesOut != nullptr)
		*_apAbilitiesOut = std::move(Parms._apAbilitiesOut);
}


// Function BFGCore.BFGActorComponent_MentalAbilities.GetCurrentAimTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UBFGActorComponent_MentalAbilities::GetCurrentAimTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_MentalAbilities", "GetCurrentAimTarget");

	Params::BFGActorComponent_MentalAbilities_GetCurrentAimTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction BFGCore.BFGPlayerBase.BFGPlayerBase_DamageCausedEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AActor*                           _pDamagedActor                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fDamage                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bWasFatal                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UDamageType>          _damageType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGPlayerBase::BFGPlayerBase_DamageCausedEvent__DelegateSignature(class AActor* _pDamagedActor, float _fDamage, bool _bWasFatal, TSubclassOf<class UDamageType> _damageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerBase", "BFGPlayerBase_DamageCausedEvent__DelegateSignature");

	Params::BFGPlayerBase_BFGPlayerBase_DamageCausedEvent__DelegateSignature Parms{};

	Parms._pDamagedActor = _pDamagedActor;
	Parms._fDamage = _fDamage;
	Parms._bWasFatal = _bWasFatal;
	Parms._damageType = _damageType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGPlayerBase.BP_OnCutsceneStarted
// (Event, Protected, BlueprintEvent)

void ABFGPlayerBase::BP_OnCutsceneStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerBase", "BP_OnCutsceneStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGPlayerBase.Callback_OnCutsceneStarted
// (Final, Native, Protected)

void ABFGPlayerBase::Callback_OnCutsceneStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerBase", "Callback_OnCutsceneStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPlayerBase.DeactivateAllActiveWeaponsAndAbilities
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                           _pKeepAbilityActiveByClass                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGPlayerBase::DeactivateAllActiveWeaponsAndAbilities(class UClass* _pKeepAbilityActiveByClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerBase", "DeactivateAllActiveWeaponsAndAbilities");

	Params::BFGPlayerBase_DeactivateAllActiveWeaponsAndAbilities Parms{};

	Parms._pKeepAbilityActiveByClass = _pKeepAbilityActiveByClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPlayerBase.EnterGracePeriod
// (Final, Native, Public)
// Parameters:
// class FName                             _strFadeIdentifier                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bFadeOut                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGPlayerBase::EnterGracePeriod(class FName _strFadeIdentifier, bool _bFadeOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerBase", "EnterGracePeriod");

	Params::BFGPlayerBase_EnterGracePeriod Parms{};

	Parms._strFadeIdentifier = _strFadeIdentifier;
	Parms._bFadeOut = _bFadeOut;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPlayerBase.VisibilityHiddenIngameChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGPlayerBase::VisibilityHiddenIngameChanged(bool _bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerBase", "VisibilityHiddenIngameChanged");

	Params::BFGPlayerBase_VisibilityHiddenIngameChanged Parms{};

	Parms._bValue = _bValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGPlayerBase.GetDefaultCameraSpeedCoefCurve
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCurveFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCurveFloat* ABFGPlayerBase::GetDefaultCameraSpeedCoefCurve() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerBase", "GetDefaultCameraSpeedCoefCurve");

	Params::BFGPlayerBase_GetDefaultCameraSpeedCoefCurve Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerUFO.AssignPilotMesh
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           _pSkeletalMeshComponent                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGPlayerUFO::AssignPilotMesh(class USkeletalMeshComponent* _pSkeletalMeshComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerUFO", "AssignPilotMesh");

	Params::BFGPlayerUFO_AssignPilotMesh Parms{};

	Parms._pSkeletalMeshComponent = _pSkeletalMeshComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGPlayerUFO.IsAllowedToTriggerShieldImpact
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGPlayerUFO::IsAllowedToTriggerShieldImpact()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerUFO", "IsAllowedToTriggerShieldImpact");

	Params::BFGPlayerUFO_IsAllowedToTriggerShieldImpact Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerUFO.OnDeathStateChanged
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGActorStat_Bool*               _pStat                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGPlayerUFO::OnDeathStateChanged(class AActor* _pActor, class UBFGActorStat_Bool* _pStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerUFO", "OnDeathStateChanged");

	Params::BFGPlayerUFO_OnDeathStateChanged Parms{};

	Parms._pActor = _pActor;
	Parms._pStat = _pStat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPlayerUFO.OnShowTriggerZoneMessage
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bIsOutside                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGPlayerUFO::OnShowTriggerZoneMessage(bool _bIsOutside)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerUFO", "OnShowTriggerZoneMessage");

	Params::BFGPlayerUFO_OnShowTriggerZoneMessage Parms{};

	Parms._bIsOutside = _bIsOutside;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGPlayerUFO.OnStartedEnteringUFO
// (Event, Public, BlueprintEvent)

void ABFGPlayerUFO::OnStartedEnteringUFO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerUFO", "OnStartedEnteringUFO");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGPlayerUFO.TriggerBeamEffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGPlayerUFO::TriggerBeamEffect(bool _bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerUFO", "TriggerBeamEffect");

	Params::BFGPlayerUFO_TriggerBeamEffect Parms{};

	Parms._bEnable = _bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPlayerUFO.ComputeCurrentHeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABFGPlayerUFO::ComputeCurrentHeight() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerUFO", "ComputeCurrentHeight");

	Params::BFGPlayerUFO_ComputeCurrentHeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerUFO.GetSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGPlayerUFO_Settings*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGPlayerUFO_Settings* ABFGPlayerUFO::GetSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerUFO", "GetSettings");

	Params::BFGPlayerUFO_GetSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerUFO.PlayerCanTakeControl
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    _bIgnoreDistance                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGPlayerUFO::PlayerCanTakeControl(bool _bIgnoreDistance) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerUFO", "PlayerCanTakeControl");

	Params::BFGPlayerUFO_PlayerCanTakeControl Parms{};

	Parms._bIgnoreDistance = _bIgnoreDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerUFO.PlayerHasControl
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGPlayerUFO::PlayerHasControl() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerUFO", "PlayerHasControl");

	Params::BFGPlayerUFO_PlayerHasControl Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGScriptedSequence_TaskMoveTo.CreateAndAddScriptedSequence_TaskMoveTo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBFGScriptedSequence*             _pScriptedSequence                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class AActor>            _pActorToReach                                         (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBFGNPCCharacter_MoveSpeed              _moveSpeed                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fTolerance                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _ShouldGoIntoStandby                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGScriptedSequence_TaskMoveTo::CreateAndAddScriptedSequence_TaskMoveTo(class UBFGScriptedSequence* _pScriptedSequence, TSoftObjectPtr<class AActor> _pActorToReach, EBFGNPCCharacter_MoveSpeed _moveSpeed, float _fTolerance, bool _ShouldGoIntoStandby)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGScriptedSequence_TaskMoveTo", "CreateAndAddScriptedSequence_TaskMoveTo");

	Params::BFGScriptedSequence_TaskMoveTo_CreateAndAddScriptedSequence_TaskMoveTo Parms{};

	Parms._pScriptedSequence = _pScriptedSequence;
	Parms._pActorToReach = _pActorToReach;
	Parms._moveSpeed = _moveSpeed;
	Parms._fTolerance = _fTolerance;
	Parms._ShouldGoIntoStandby = _ShouldGoIntoStandby;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGScriptedSequence_TaskMoveTo.CreateAndAddScriptedSequence_TaskMoveToForVehicle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBFGScriptedSequence*             _pScriptedSequence                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class AActor>            _pActorToReach                                         (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bShouldStopAtEnd                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bShouldReleasePassenger                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fTolerance                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _doWaitInStandby                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _doIgnoreAvailabilityFlag                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fOverrideSpeed                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGScriptedSequence_TaskMoveTo::CreateAndAddScriptedSequence_TaskMoveToForVehicle(class UBFGScriptedSequence* _pScriptedSequence, TSoftObjectPtr<class AActor> _pActorToReach, bool _bShouldStopAtEnd, bool _bShouldReleasePassenger, float _fTolerance, bool _doWaitInStandby, bool _doIgnoreAvailabilityFlag, float _fOverrideSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGScriptedSequence_TaskMoveTo", "CreateAndAddScriptedSequence_TaskMoveToForVehicle");

	Params::BFGScriptedSequence_TaskMoveTo_CreateAndAddScriptedSequence_TaskMoveToForVehicle Parms{};

	Parms._pScriptedSequence = _pScriptedSequence;
	Parms._pActorToReach = _pActorToReach;
	Parms._bShouldStopAtEnd = _bShouldStopAtEnd;
	Parms._bShouldReleasePassenger = _bShouldReleasePassenger;
	Parms._fTolerance = _fTolerance;
	Parms._doWaitInStandby = _doWaitInStandby;
	Parms._doIgnoreAvailabilityFlag = _doIgnoreAvailabilityFlag;
	Parms._fOverrideSpeed = _fOverrideSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEventTrigger_BossObjective.OnBossObjectiveReached
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pBoss                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBFGQuest_BossObjective                 _objective                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_BossObjective::OnBossObjectiveReached(class AActor* _pBoss, EBFGQuest_BossObjective _objective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_BossObjective", "OnBossObjectiveReached");

	Params::BFGEventTrigger_BossObjective_OnBossObjectiveReached Parms{};

	Parms._pBoss = _pBoss;
	Parms._objective = _objective;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BFGCore.BFGActorComponent_MentallyInteractable.Action_Focused__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UBFGActorComponent_MentallyInteractable*_pMentallyInteractable                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      _pController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_MentallyInteractable::Action_Focused__DelegateSignature(class UBFGActorComponent_MentallyInteractable* _pMentallyInteractable, class AController* _pController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_MentallyInteractable", "Action_Focused__DelegateSignature");

	Params::BFGActorComponent_MentallyInteractable_Action_Focused__DelegateSignature Parms{};

	Parms._pMentallyInteractable = _pMentallyInteractable;
	Parms._pController = _pController;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BFGCore.BFGActorComponent_MentallyInteractable.Action_InteractAction__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UBFGActorComponent_MentallyInteractable*_pMentallyInteractable                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      _pController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_MentallyInteractable::Action_InteractAction__DelegateSignature(class UBFGActorComponent_MentallyInteractable* _pMentallyInteractable, class AController* _pController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_MentallyInteractable", "Action_InteractAction__DelegateSignature");

	Params::BFGActorComponent_MentallyInteractable_Action_InteractAction__DelegateSignature Parms{};

	Parms._pMentallyInteractable = _pMentallyInteractable;
	Parms._pController = _pController;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BFGCore.BFGActorComponent_MentallyInteractable.Action_Unfocused__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UBFGActorComponent_MentallyInteractable*_pMentallyInteractable                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_MentallyInteractable::Action_Unfocused__DelegateSignature(class UBFGActorComponent_MentallyInteractable* _pMentallyInteractable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_MentallyInteractable", "Action_Unfocused__DelegateSignature");

	Params::BFGActorComponent_MentallyInteractable_Action_Unfocused__DelegateSignature Parms{};

	Parms._pMentallyInteractable = _pMentallyInteractable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGActorComponent_MentallyInteractable.IsInteractable
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ABFGPlayerCharacter*              _pPlayer                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_MentallyInteractable::IsInteractable(class ABFGPlayerCharacter* _pPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_MentallyInteractable", "IsInteractable");

	Params::BFGActorComponent_MentallyInteractable_IsInteractable Parms{};

	Parms._pPlayer = _pPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_MentallyInteractable.SetEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_MentallyInteractable::SetEnabled(bool _bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_MentallyInteractable", "SetEnabled");

	Params::BFGActorComponent_MentallyInteractable_SetEnabled Parms{};

	Parms._bEnabled = _bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_MentallyInteractable.GetHoldTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGActorComponent_MentallyInteractable::GetHoldTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_MentallyInteractable", "GetHoldTime");

	Params::BFGActorComponent_MentallyInteractable_GetHoldTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_MentallyInteractable.GetInteractTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGActorComponent_MentallyInteractable::GetInteractTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_MentallyInteractable", "GetInteractTime");

	Params::BFGActorComponent_MentallyInteractable_GetInteractTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_MentallyInteractable.GetLastFailText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UBFGActorComponent_MentallyInteractable::GetLastFailText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_MentallyInteractable", "GetLastFailText");

	Params::BFGActorComponent_MentallyInteractable_GetLastFailText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_MentallyInteractable.GetPosture
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBFGAnimation_MentalAbilityPosture      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBFGAnimation_MentalAbilityPosture UBFGActorComponent_MentallyInteractable::GetPosture() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_MentallyInteractable", "GetPosture");

	Params::BFGActorComponent_MentallyInteractable_GetPosture Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_MentallyInteractable.IsEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_MentallyInteractable::IsEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_MentallyInteractable", "IsEnabled");

	Params::BFGActorComponent_MentallyInteractable_IsEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_MentallyInteractable.IsFocused
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_MentallyInteractable::IsFocused() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_MentallyInteractable", "IsFocused");

	Params::BFGActorComponent_MentallyInteractable_IsFocused Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_MissionGameplay.GetRestrictedAreaOverlapping
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class ABFGRestrictedArea*> ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class ABFGRestrictedArea*> UBFGActorComponent_MissionGameplay::GetRestrictedAreaOverlapping() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_MissionGameplay", "GetRestrictedAreaOverlapping");

	Params::BFGActorComponent_MissionGameplay_GetRestrictedAreaOverlapping Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_MissionGameplay.GetRestrictedAreaViolated
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class ABFGRestrictedArea*> ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class ABFGRestrictedArea*> UBFGActorComponent_MissionGameplay::GetRestrictedAreaViolated() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_MissionGameplay", "GetRestrictedAreaViolated");

	Params::BFGActorComponent_MissionGameplay_GetRestrictedAreaViolated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_MissionGameplay.IsVisitingAnyRestrictedArea
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_MissionGameplay::IsVisitingAnyRestrictedArea() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_MissionGameplay", "IsVisitingAnyRestrictedArea");

	Params::BFGActorComponent_MissionGameplay_IsVisitingAnyRestrictedArea Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGScriptedSequence.OnAgentDestroyed
// (Final, Native, Protected)
// Parameters:
// class UBFGNetworkPathAgent*             _pAgent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGScriptedSequence::OnAgentDestroyed(class UBFGNetworkPathAgent* _pAgent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGScriptedSequence", "OnAgentDestroyed");

	Params::BFGScriptedSequence_OnAgentDestroyed Parms{};

	Parms._pAgent = _pAgent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGScriptedSequence.RequestAbortSequence
// (Final, Native, Public, BlueprintCallable)

void UBFGScriptedSequence::RequestAbortSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGScriptedSequence", "RequestAbortSequence");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGScriptedSequence.RequestStartSequence
// (Final, Native, Public, BlueprintCallable)

void UBFGScriptedSequence::RequestStartSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGScriptedSequence", "RequestStartSequence");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGScriptedSequence.SetActivationAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBFGScriptedSequence_ActivationAction   _action                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGScriptedSequence::SetActivationAction(EBFGScriptedSequence_ActivationAction _action)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGScriptedSequence", "SetActivationAction");

	Params::BFGScriptedSequence_SetActivationAction Parms{};

	Parms._action = _action;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGScriptedSequence.GetAgent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGNetworkPathAgent*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGNetworkPathAgent* UBFGScriptedSequence::GetAgent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGScriptedSequence", "GetAgent");

	Params::BFGScriptedSequence_GetAgent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGScriptedSequence.GetCurrentTaskIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGScriptedSequence::GetCurrentTaskIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGScriptedSequence", "GetCurrentTaskIndex");

	Params::BFGScriptedSequence_GetCurrentTaskIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEventTrigger_MainMissionOrChallengeQuestEnded.OnMainMissionOrChallengeEnded
// (Final, Native, Protected)

void UBFGEventTrigger_MainMissionOrChallengeQuestEnded::OnMainMissionOrChallengeEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_MainMissionOrChallengeQuestEnded", "OnMainMissionOrChallengeEnded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_MonetaryValue.SetMonetaryValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _fValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_MonetaryValue::SetMonetaryValue(float _fValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_MonetaryValue", "SetMonetaryValue");

	Params::BFGActorComponent_MonetaryValue_SetMonetaryValue Parms{};

	Parms._fValue = _fValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_MonetaryValue.GetMonetaryValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGActorComponent_MonetaryValue::GetMonetaryValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_MonetaryValue", "GetMonetaryValue");

	Params::BFGActorComponent_MonetaryValue_GetMonetaryValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_MonetaryValue.HasMonetaryValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_MonetaryValue::HasMonetaryValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_MonetaryValue", "HasMonetaryValue");

	Params::BFGActorComponent_MonetaryValue_HasMonetaryValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_MonetaryValue.InitEffectComponent
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UBFGActorComponent_Effect*        _pEffectComponent                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_MonetaryValue::InitEffectComponent(class UBFGActorComponent_Effect* _pEffectComponent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_MonetaryValue", "InitEffectComponent");

	Params::BFGActorComponent_MonetaryValue_InitEffectComponent Parms{};

	Parms._pEffectComponent = _pEffectComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_NPCBehaviorVO.Internal_OnAIAlertStateStatChanged
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pOwner                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGActorStat_uint8*              _pStat                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_NPCBehaviorVO::Internal_OnAIAlertStateStatChanged(class AActor* _pOwner, class UBFGActorStat_uint8* _pStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_NPCBehaviorVO", "Internal_OnAIAlertStateStatChanged");

	Params::BFGActorComponent_NPCBehaviorVO_Internal_OnAIAlertStateStatChanged Parms{};

	Parms._pOwner = _pOwner;
	Parms._pStat = _pStat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_NPCBehaviorVO.Internal_OnPawnDamage
// (Final, Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// class UBFGActorComponent_PawnDamage*    _pPawnDamage                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fDamage                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pDamageCauser                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGDamageType*                   _pDamageType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _rShotDirection                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       _oHitResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UBFGActorComponent_NPCBehaviorVO::Internal_OnPawnDamage(class UBFGActorComponent_PawnDamage* _pPawnDamage, float _fDamage, class AActor* _pDamageCauser, class UBFGDamageType* _pDamageType, const struct FVector& _rShotDirection, const struct FHitResult& _oHitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_NPCBehaviorVO", "Internal_OnPawnDamage");

	Params::BFGActorComponent_NPCBehaviorVO_Internal_OnPawnDamage Parms{};

	Parms._pPawnDamage = _pPawnDamage;
	Parms._fDamage = _fDamage;
	Parms._pDamageCauser = _pDamageCauser;
	Parms._pDamageType = _pDamageType;
	Parms._rShotDirection = std::move(_rShotDirection);
	Parms._oHitResult = std::move(_oHitResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_NPCBehaviorVO.OnAIStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// EBFGBehaviourState_NPC                  _previousState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBFGBehaviourState_NPC                  _newState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBFGCuriosityReason_NPC                 _curiosityReason                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_NPCBehaviorVO::OnAIStateChanged(EBFGBehaviourState_NPC _previousState, EBFGBehaviourState_NPC _newState, EBFGCuriosityReason_NPC _curiosityReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_NPCBehaviorVO", "OnAIStateChanged");

	Params::BFGActorComponent_NPCBehaviorVO_OnAIStateChanged Parms{};

	Parms._previousState = _previousState;
	Parms._newState = _newState;
	Parms._curiosityReason = _curiosityReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGActorComponent_NPCBehaviorVO.OnEvade
// (Event, Public, BlueprintEvent)
// Parameters:
// EBFGEvadeDirection                      _direction                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pEvadeFromActor                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_NPCBehaviorVO::OnEvade(EBFGEvadeDirection _direction, class AActor* _pEvadeFromActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_NPCBehaviorVO", "OnEvade");

	Params::BFGActorComponent_NPCBehaviorVO_OnEvade Parms{};

	Parms._direction = _direction;
	Parms._pEvadeFromActor = _pEvadeFromActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGActorComponent_NPCBehaviorVO.OnGameplayEffectTagActive
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     _rTag                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_NPCBehaviorVO::OnGameplayEffectTagActive(const struct FGameplayTag& _rTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_NPCBehaviorVO", "OnGameplayEffectTagActive");

	Params::BFGActorComponent_NPCBehaviorVO_OnGameplayEffectTagActive Parms{};

	Parms._rTag = std::move(_rTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGActorComponent_NPCBehaviorVO.OnGameplayEffectTagInactive
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     _rTag                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_NPCBehaviorVO::OnGameplayEffectTagInactive(const struct FGameplayTag& _rTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_NPCBehaviorVO", "OnGameplayEffectTagInactive");

	Params::BFGActorComponent_NPCBehaviorVO_OnGameplayEffectTagInactive Parms{};

	Parms._rTag = std::move(_rTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGActorComponent_NPCBehaviorVO.OnHealthDamage
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// float                                   _fDamage                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pDamageCauser                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGDamageType*                   _pDamageType                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _rShotDirection                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       _oHitResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    _bWasFriendlyFire                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_NPCBehaviorVO::OnHealthDamage(float _fDamage, class AActor* _pDamageCauser, const class UBFGDamageType* _pDamageType, const struct FVector& _rShotDirection, const struct FHitResult& _oHitResult, bool _bWasFriendlyFire)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_NPCBehaviorVO", "OnHealthDamage");

	Params::BFGActorComponent_NPCBehaviorVO_OnHealthDamage Parms{};

	Parms._fDamage = _fDamage;
	Parms._pDamageCauser = _pDamageCauser;
	Parms._pDamageType = _pDamageType;
	Parms._rShotDirection = std::move(_rShotDirection);
	Parms._oHitResult = std::move(_oHitResult);
	Parms._bWasFriendlyFire = _bWasFriendlyFire;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGActorComponent_NPCBehaviorVO.OnPlayerBumped
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          _vHitDirection                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fVelocity                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pHitByActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_NPCBehaviorVO::OnPlayerBumped(const struct FVector& _vHitDirection, float _fVelocity, class AActor* _pHitByActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_NPCBehaviorVO", "OnPlayerBumped");

	Params::BFGActorComponent_NPCBehaviorVO_OnPlayerBumped Parms{};

	Parms._vHitDirection = std::move(_vHitDirection);
	Parms._fVelocity = _fVelocity;
	Parms._pHitByActor = _pHitByActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGActorComponent_NPCBehaviorVO.OnRanInFireline
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           _pFirelineActor                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_NPCBehaviorVO::OnRanInFireline(class AActor* _pFirelineActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_NPCBehaviorVO", "OnRanInFireline");

	Params::BFGActorComponent_NPCBehaviorVO_OnRanInFireline Parms{};

	Parms._pFirelineActor = _pFirelineActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGActorComponent_NPCBehaviorVO.OnSawPlayerDisguise
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           _pPlayerActor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_NPCBehaviorVO::OnSawPlayerDisguise(class AActor* _pPlayerActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_NPCBehaviorVO", "OnSawPlayerDisguise");

	Params::BFGActorComponent_NPCBehaviorVO_OnSawPlayerDisguise Parms{};

	Parms._pPlayerActor = _pPlayerActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGEventTrigger_SaveSystem.OnLoadDone
// (Final, Native, Protected)
// Parameters:
// class UBFGSaveSystem*                   _pSaveSystem                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGSaveSystem_Action*            _pAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_SaveSystem::OnLoadDone(class UBFGSaveSystem* _pSaveSystem, class UBFGSaveSystem_Action* _pAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_SaveSystem", "OnLoadDone");

	Params::BFGEventTrigger_SaveSystem_OnLoadDone Parms{};

	Parms._pSaveSystem = _pSaveSystem;
	Parms._pAction = _pAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEventTrigger_SaveSystem.OnSaveDone
// (Final, Native, Protected)
// Parameters:
// class UBFGSaveSystem*                   _pSaveSystem                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGSaveSystem_Action*            _pAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_SaveSystem::OnSaveDone(class UBFGSaveSystem* _pSaveSystem, class UBFGSaveSystem_Action* _pAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_SaveSystem", "OnSaveDone");

	Params::BFGEventTrigger_SaveSystem_OnSaveDone Parms{};

	Parms._pSaveSystem = _pSaveSystem;
	Parms._pAction = _pAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_NPCCharacterMovement.MoveSpeedAutoFill
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_NPCCharacterMovement::MoveSpeedAutoFill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_NPCCharacterMovement", "MoveSpeedAutoFill");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_NPCCharacterMovement.GetMoveSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBFGNPCCharacter_MoveSpeed              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBFGNPCCharacter_MoveSpeed UBFGActorComponent_NPCCharacterMovement::GetMoveSpeed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_NPCCharacterMovement", "GetMoveSpeed");

	Params::BFGActorComponent_NPCCharacterMovement_GetMoveSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEventTrigger_OverlapActor.OnOverlapActor
// (Final, Native, Public)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pOverlapsWith                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_OverlapActor::OnOverlapActor(class AActor* _pActor, class AActor* _pOverlapsWith)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_OverlapActor", "OnOverlapActor");

	Params::BFGEventTrigger_OverlapActor_OnOverlapActor Parms{};

	Parms._pActor = _pActor;
	Parms._pOverlapsWith = _pOverlapsWith;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTaskNode_Boss_FireRBPWreck.Firing
// (Final, Native, Protected)

void UBFGTaskNode_Boss_FireRBPWreck::Firing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTaskNode_Boss_FireRBPWreck", "Firing");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_ObjectiveMarkerScreen.OnMarkerAttached
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FBFGObjectiveMarkerInfoEntry     _info                                                  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UBFGActorComponent_ObjectiveMarkerScreen::OnMarkerAttached(const struct FBFGObjectiveMarkerInfoEntry& _info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_ObjectiveMarkerScreen", "OnMarkerAttached");

	Params::BFGActorComponent_ObjectiveMarkerScreen_OnMarkerAttached Parms{};

	Parms._info = std::move(_info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_ObjectiveMarkerScreen.RemoveMarker
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_ObjectiveMarkerScreen::RemoveMarker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_ObjectiveMarkerScreen", "RemoveMarker");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_ObjectiveMarkerScreen.SetMarkerEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_ObjectiveMarkerScreen::SetMarkerEnabled(bool _bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_ObjectiveMarkerScreen", "SetMarkerEnabled");

	Params::BFGActorComponent_ObjectiveMarkerScreen_SetMarkerEnabled Parms{};

	Parms._bEnabled = _bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_ObjectiveMarkerScreen.SetMarkerFadedInDistance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _fRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_ObjectiveMarkerScreen::SetMarkerFadedInDistance(float _fRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_ObjectiveMarkerScreen", "SetMarkerFadedInDistance");

	Params::BFGActorComponent_ObjectiveMarkerScreen_SetMarkerFadedInDistance Parms{};

	Parms._fRadius = _fRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_ObjectiveMarkerScreen.SetMarkerFadedOutDistance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _fRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_ObjectiveMarkerScreen::SetMarkerFadedOutDistance(float _fRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_ObjectiveMarkerScreen", "SetMarkerFadedOutDistance");

	Params::BFGActorComponent_ObjectiveMarkerScreen_SetMarkerFadedOutDistance Parms{};

	Parms._fRadius = _fRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGProjectile_Beam.OnBeamDelayStarted
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          _vTargetLocation                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bHitTarget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bHitEnvironment                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vImpactNormal                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGProjectile_Beam::OnBeamDelayStarted(const struct FVector& _vTargetLocation, bool _bHitTarget, bool _bHitEnvironment, const struct FVector& _vImpactNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_Beam", "OnBeamDelayStarted");

	Params::BFGProjectile_Beam_OnBeamDelayStarted Parms{};

	Parms._vTargetLocation = std::move(_vTargetLocation);
	Parms._bHitTarget = _bHitTarget;
	Parms._bHitEnvironment = _bHitEnvironment;
	Parms._vImpactNormal = std::move(_vImpactNormal);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGProjectile_Beam.StartBeam
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          _vTargetLocation                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bHitTarget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bHitEnvironment                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vImpactNormal                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGProjectile_Beam::StartBeam(const struct FVector& _vTargetLocation, bool _bHitTarget, bool _bHitEnvironment, const struct FVector& _vImpactNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_Beam", "StartBeam");

	Params::BFGProjectile_Beam_StartBeam Parms{};

	Parms._vTargetLocation = std::move(_vTargetLocation);
	Parms._bHitTarget = _bHitTarget;
	Parms._bHitEnvironment = _bHitEnvironment;
	Parms._vImpactNormal = std::move(_vImpactNormal);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGProjectile_Beam.StopBeam
// (Event, Public, BlueprintEvent)

void ABFGProjectile_Beam::StopBeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_Beam", "StopBeam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGProjectile_Beam.UpdateBeam
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          _vTargetLocation                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bHitTarget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vImpactNormal                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGProjectile_Beam::UpdateBeam(const struct FVector& _vTargetLocation, bool _bHitTarget, const struct FVector& _vImpactNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_Beam", "UpdateBeam");

	Params::BFGProjectile_Beam_UpdateBeam Parms{};

	Parms._vTargetLocation = std::move(_vTargetLocation);
	Parms._bHitTarget = _bHitTarget;
	Parms._vImpactNormal = std::move(_vImpactNormal);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGProjectile_Beam.UpdateBeamWhileInactive
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          _vTargetLocation                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bHitTarget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vImpactNormal                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGProjectile_Beam::UpdateBeamWhileInactive(const struct FVector& _vTargetLocation, bool _bHitTarget, const struct FVector& _vImpactNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_Beam", "UpdateBeamWhileInactive");

	Params::BFGProjectile_Beam_UpdateBeamWhileInactive Parms{};

	Parms._vTargetLocation = std::move(_vTargetLocation);
	Parms._bHitTarget = _bHitTarget;
	Parms._vImpactNormal = std::move(_vImpactNormal);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGProjectile_Beam.GetCurrentAimData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FCharacterAimData          ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

const struct FCharacterAimData ABFGProjectile_Beam::GetCurrentAimData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_Beam", "GetCurrentAimData");

	Params::BFGProjectile_Beam_GetCurrentAimData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGProjectile_Beam.GetStartupTimer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABFGProjectile_Beam::GetStartupTimer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_Beam", "GetStartupTimer");

	Params::BFGProjectile_Beam_GetStartupTimer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGProjectile_Beam_Roboprez.OnBeamDamageTick
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pActorToDamage                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGProjectile_Beam_Roboprez::OnBeamDamageTick(class AActor* _pActorToDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_Beam_Roboprez", "OnBeamDamageTick");

	Params::BFGProjectile_Beam_Roboprez_OnBeamDamageTick Parms{};

	Parms._pActorToDamage = _pActorToDamage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGProjectile_Beam_Roboprez.OnBeamDimensionsChanged
// (Event, Protected, BlueprintEvent)

void ABFGProjectile_Beam_Roboprez::OnBeamDimensionsChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_Beam_Roboprez", "OnBeamDimensionsChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGProjectile_Beam_Roboprez.OnBeamOverlapBegin
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ABFGProjectile_Beam_Roboprez::OnBeamOverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_Beam_Roboprez", "OnBeamOverlapBegin");

	Params::BFGProjectile_Beam_Roboprez_OnBeamOverlapBegin Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGProjectile_Beam_Roboprez.OnBeamOverlapEnd
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGProjectile_Beam_Roboprez::OnBeamOverlapEnd(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_Beam_Roboprez", "OnBeamOverlapEnd");

	Params::BFGProjectile_Beam_Roboprez_OnBeamOverlapEnd Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGProjectile_Beam_Roboprez.GetBeamAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABFGProjectile_Beam_Roboprez::GetBeamAngle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_Beam_Roboprez", "GetBeamAngle");

	Params::BFGProjectile_Beam_Roboprez_GetBeamAngle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEventTrigger_KilledActor.OnKilledActor
// (Final, Native, Protected)
// Parameters:
// class AController*                      _pInstigator                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pDamageSource                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pKilled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UDamageType>          _damageType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_KilledActor::OnKilledActor(class AController* _pInstigator, class AActor* _pDamageSource, class AActor* _pKilled, TSubclassOf<class UDamageType> _damageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_KilledActor", "OnKilledActor");

	Params::BFGEventTrigger_KilledActor_OnKilledActor Parms{};

	Parms._pInstigator = _pInstigator;
	Parms._pDamageSource = _pDamageSource;
	Parms._pKilled = _pKilled;
	Parms._damageType = _damageType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEventTrigger_ResourceValue.ValueChanged
// (Final, Native, Protected)
// Parameters:
// EItemValueTypeEnum                      _eType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fNewValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fOldValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_ResourceValue::ValueChanged(EItemValueTypeEnum _eType, float _fNewValue, float _fOldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_ResourceValue", "ValueChanged");

	Params::BFGEventTrigger_ResourceValue_ValueChanged Parms{};

	Parms._eType = _eType;
	Parms._fNewValue = _fNewValue;
	Parms._fOldValue = _fOldValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_OpportunityComponent.HideWidget
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UBFGActorComponent_OpportunityComponent::HideWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_OpportunityComponent", "HideWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_OpportunityComponent.PerformExpensiveUpdate
// (Event, Public, BlueprintEvent)

void UBFGActorComponent_OpportunityComponent::PerformExpensiveUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_OpportunityComponent", "PerformExpensiveUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGActorComponent_OpportunityComponent.ShouldShowOnBeginPlay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_OpportunityComponent::ShouldShowOnBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_OpportunityComponent", "ShouldShowOnBeginPlay");

	Params::BFGActorComponent_OpportunityComponent_ShouldShowOnBeginPlay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_OpportunityComponent.ShowWidget
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBFGAgentInstanceOpportunityData _data                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGActorComponent_OpportunityComponent::ShowWidget(const struct FBFGAgentInstanceOpportunityData& _data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_OpportunityComponent", "ShowWidget");

	Params::BFGActorComponent_OpportunityComponent_ShowWidget Parms{};

	Parms._data = std::move(_data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_OverheatManager.OverheatGlow_FinishedCallback
// (Final, Native, Private)

void UBFGActorComponent_OverheatManager::OverheatGlow_FinishedCallback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_OverheatManager", "OverheatGlow_FinishedCallback");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_OverheatManager.OverheatGlow_Interpolation
// (Final, Native, Private)
// Parameters:
// float                                   Val                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_OverheatManager::OverheatGlow_Interpolation(float Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_OverheatManager", "OverheatGlow_Interpolation");

	Params::BFGActorComponent_OverheatManager_OverheatGlow_Interpolation Parms{};

	Parms.Val = Val;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_OverheatManager.GetOverheatGlowState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBFGOverheatGlow                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBFGOverheatGlow UBFGActorComponent_OverheatManager::GetOverheatGlowState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_OverheatManager", "GetOverheatGlowState");

	Params::BFGActorComponent_OverheatManager_GetOverheatGlowState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_OverheatManager.GetOverheatValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGActorComponent_OverheatManager::GetOverheatValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_OverheatManager", "GetOverheatValue");

	Params::BFGActorComponent_OverheatManager_GetOverheatValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGTaskNode_Boss_RunSubtree.InterruptSubtree
// (Native, Protected)

void UBFGTaskNode_Boss_RunSubtree::InterruptSubtree()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTaskNode_Boss_RunSubtree", "InterruptSubtree");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEventTrigger_VariableChange.OnVariableValueChanged
// (Final, Native, Public)
// Parameters:
// class UBFGVariableMirror*               _pVarMirror                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGVariable*                     _pVariable                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _oldValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _newValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_VariableChange::OnVariableValueChanged(class UBFGVariableMirror* _pVarMirror, const class UBFGVariable* _pVariable, int32 _oldValue, int32 _newValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_VariableChange", "OnVariableValueChanged");

	Params::BFGEventTrigger_VariableChange_OnVariableValueChanged Parms{};

	Parms._pVarMirror = _pVarMirror;
	Parms._pVariable = _pVariable;
	Parms._oldValue = _oldValue;
	Parms._newValue = _newValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_PawnDamage.ApplyAndReportDamage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _pDamagedActor                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fDamage                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      _pInstigator                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pDamageSource                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UDamageType>          _damageType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bAllowFriendlyFire                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGActorComponent_PawnDamage::ApplyAndReportDamage(class AActor* _pDamagedActor, float _fDamage, class AController* _pInstigator, class AActor* _pDamageSource, TSubclassOf<class UDamageType> _damageType, bool _bAllowFriendlyFire)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGActorComponent_PawnDamage", "ApplyAndReportDamage");

	Params::BFGActorComponent_PawnDamage_ApplyAndReportDamage Parms{};

	Parms._pDamagedActor = _pDamagedActor;
	Parms._fDamage = _fDamage;
	Parms._pInstigator = _pInstigator;
	Parms._pDamageSource = _pDamageSource;
	Parms._damageType = _damageType;
	Parms._bAllowFriendlyFire = _bAllowFriendlyFire;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_PawnDamage.ApplyAndReportPointDamage
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           _pDamagedActor                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fDamage                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          HitFromDirection                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AController*                      _pInstigator                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pDamageSource                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UDamageType>          _damageType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bAllowFriendlyFire                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGActorComponent_PawnDamage::ApplyAndReportPointDamage(class AActor* _pDamagedActor, float _fDamage, const struct FVector& HitFromDirection, const struct FHitResult& HitInfo, class AController* _pInstigator, class AActor* _pDamageSource, TSubclassOf<class UDamageType> _damageType, bool _bAllowFriendlyFire)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGActorComponent_PawnDamage", "ApplyAndReportPointDamage");

	Params::BFGActorComponent_PawnDamage_ApplyAndReportPointDamage Parms{};

	Parms._pDamagedActor = _pDamagedActor;
	Parms._fDamage = _fDamage;
	Parms.HitFromDirection = std::move(HitFromDirection);
	Parms.HitInfo = std::move(HitInfo);
	Parms._pInstigator = _pInstigator;
	Parms._pDamageSource = _pDamageSource;
	Parms._damageType = _damageType;
	Parms._bAllowFriendlyFire = _bAllowFriendlyFire;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction BFGCore.BFGActorComponent_PawnDamage.BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams, HasDefaults)
// Parameters:
// class UBFGActorComponent_PawnDamage*    _pPawnDamage                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fDamage                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pDamageCauser                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGDamageType*                   _pDamageType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _rShotDirection                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       _oHitResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UBFGActorComponent_PawnDamage::BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature(class UBFGActorComponent_PawnDamage* _pPawnDamage, float _fDamage, class AActor* _pDamageCauser, class UBFGDamageType* _pDamageType, const struct FVector& _rShotDirection, const struct FHitResult& _oHitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PawnDamage", "BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature");

	Params::BFGActorComponent_PawnDamage_BFGActorComponent_PawnDamage_PointDamageEvent__DelegateSignature Parms{};

	Parms._pPawnDamage = _pPawnDamage;
	Parms._fDamage = _fDamage;
	Parms._pDamageCauser = _pDamageCauser;
	Parms._pDamageType = _pDamageType;
	Parms._rShotDirection = std::move(_rShotDirection);
	Parms._oHitResult = std::move(_oHitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGActorComponent_PawnDamage.ComputeCurrentShieldInvulnerabilityWindow
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGActorComponent_PawnDamage::ComputeCurrentShieldInvulnerabilityWindow() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PawnDamage", "ComputeCurrentShieldInvulnerabilityWindow");

	Params::BFGActorComponent_PawnDamage_ComputeCurrentShieldInvulnerabilityWindow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_PawnDamage.GetDamageTakenSince
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   _fMaxAgeSeconds                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGActorComponent_PawnDamage::GetDamageTakenSince(float _fMaxAgeSeconds) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PawnDamage", "GetDamageTakenSince");

	Params::BFGActorComponent_PawnDamage_GetDamageTakenSince Parms{};

	Parms._fMaxAgeSeconds = _fMaxAgeSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEventTrigger_SequenceFinished.OnNarrativeSequenceFinished
// (Final, Native, Protected)
// Parameters:
// class UBFGNarrativeSequence*            _pSequence                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_SequenceFinished::OnNarrativeSequenceFinished(class UBFGNarrativeSequence* _pSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_SequenceFinished", "OnNarrativeSequenceFinished");

	Params::BFGEventTrigger_SequenceFinished_OnNarrativeSequenceFinished Parms{};

	Parms._pSequence = _pSequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEventTrigger_SequenceFinished.OnSequenceFinished
// (Final, Native, Protected)
// Parameters:
// class ALevelSequenceActor*              _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bWasCutscene                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_SequenceFinished::OnSequenceFinished(class ALevelSequenceActor* _pActor, bool _bWasCutscene)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_SequenceFinished", "OnSequenceFinished");

	Params::BFGEventTrigger_SequenceFinished_OnSequenceFinished Parms{};

	Parms._pActor = _pActor;
	Parms._bWasCutscene = _bWasCutscene;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_PlayerCharacterMovement.GetJetpackUpVelocity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UBFGActorComponent_PlayerCharacterMovement::GetJetpackUpVelocity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PlayerCharacterMovement", "GetJetpackUpVelocity");

	Params::BFGActorComponent_PlayerCharacterMovement_GetJetpackUpVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_PlayerCharacterMovement.IsTouchingGround
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_PlayerCharacterMovement::IsTouchingGround() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PlayerCharacterMovement", "IsTouchingGround");

	Params::BFGActorComponent_PlayerCharacterMovement_IsTouchingGround Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEventTrigger_ProximityGoalReached.OnProximityGoalReached
// (Final, Native, Protected)
// Parameters:
// class UBFGQuest_ProximityMonitor*       _pProximityMonitor                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_ProximityGoalReached::OnProximityGoalReached(const class UBFGQuest_ProximityMonitor* _pProximityMonitor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_ProximityGoalReached", "OnProximityGoalReached");

	Params::BFGEventTrigger_ProximityGoalReached_OnProximityGoalReached Parms{};

	Parms._pProximityMonitor = _pProximityMonitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_PlayerInteractions.CanInteract
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_PlayerInteractions::CanInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PlayerInteractions", "CanInteract");

	Params::BFGActorComponent_PlayerInteractions_CanInteract Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_PlayerInteractions.CheckStillInteracting
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_PlayerInteractions::CheckStillInteracting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PlayerInteractions", "CheckStillInteracting");

	Params::BFGActorComponent_PlayerInteractions_CheckStillInteracting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_PlayerInteractions.OnInteractStart
// (Native, Event, Protected, BlueprintEvent)

void UBFGActorComponent_PlayerInteractions::OnInteractStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PlayerInteractions", "OnInteractStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_PlayerInteractions.OnInteractStop
// (Native, Event, Protected, BlueprintEvent)

void UBFGActorComponent_PlayerInteractions::OnInteractStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PlayerInteractions", "OnInteractStop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_PlayerInteractions.OnInteractTrigger
// (Native, Event, Protected, BlueprintEvent)

void UBFGActorComponent_PlayerInteractions::OnInteractTrigger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PlayerInteractions", "OnInteractTrigger");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEventTrigger_StreamingLevelState.Streaming_OnStateChanged
// (Final, Native, Protected)
// Parameters:
// class UBFGStreamingLevelHandle*         _pHandle                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_StreamingLevelState::Streaming_OnStateChanged(class UBFGStreamingLevelHandle* _pHandle, bool _bState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_StreamingLevelState", "Streaming_OnStateChanged");

	Params::BFGEventTrigger_StreamingLevelState_Streaming_OnStateChanged Parms{};

	Parms._pHandle = _pHandle;
	Parms._bState = _bState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGQuest_ElementReach.FindObjectiveTargetActors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> UBFGQuest_ElementReach::FindObjectiveTargetActors() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_ElementReach", "FindObjectiveTargetActors");

	Params::BFGQuest_ElementReach_FindObjectiveTargetActors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_ElementReach.GetObjectiveTargetVariable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGVariable*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGVariable* UBFGQuest_ElementReach::GetObjectiveTargetVariable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_ElementReach", "GetObjectiveTargetVariable");

	Params::BFGQuest_ElementReach_GetObjectiveTargetVariable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_PlayerWeapon.OnDataChanged
// (Final, Native, Protected)

void UBFGActorComponent_PlayerWeapon::OnDataChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PlayerWeapon", "OnDataChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_PlayerWeapon.OnWeaponAmmoChanged
// (Final, Native, Public)
// Parameters:
// class ABFGWeapon*                       _pWeapon                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_PlayerWeapon::OnWeaponAmmoChanged(class ABFGWeapon* _pWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PlayerWeapon", "OnWeaponAmmoChanged");

	Params::BFGActorComponent_PlayerWeapon_OnWeaponAmmoChanged Parms{};

	Parms._pWeapon = _pWeapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_PlayerWeapon.OnWeaponChanged
// (Final, Native, Protected)
// Parameters:
// class ABFGWeapon*                       _pWeapon                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_PlayerWeapon::OnWeaponChanged(class ABFGWeapon* _pWeapon, bool _bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PlayerWeapon", "OnWeaponChanged");

	Params::BFGActorComponent_PlayerWeapon_OnWeaponChanged Parms{};

	Parms._pWeapon = _pWeapon;
	Parms._bEnabled = _bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_PlayerWeapon.OnWeaponFireChanged
// (Final, Native, Protected)
// Parameters:
// class ABFGWeapon*                       _pWeapon                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_PlayerWeapon::OnWeaponFireChanged(class ABFGWeapon* _pWeapon, bool _bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PlayerWeapon", "OnWeaponFireChanged");

	Params::BFGActorComponent_PlayerWeapon_OnWeaponFireChanged Parms{};

	Parms._pWeapon = _pWeapon;
	Parms._bEnabled = _bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_PlayerWeapon.OnWeaponReloadDone
// (Final, Native, Protected)
// Parameters:
// class ABFGWeapon*                       _pWeapon                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_PlayerWeapon::OnWeaponReloadDone(class ABFGWeapon* _pWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PlayerWeapon", "OnWeaponReloadDone");

	Params::BFGActorComponent_PlayerWeapon_OnWeaponReloadDone Parms{};

	Parms._pWeapon = _pWeapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_PlayerWeapon.OnWeaponReloadStarted
// (Final, Native, Protected)
// Parameters:
// class ABFGWeapon*                       _pWeapon                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_PlayerWeapon::OnWeaponReloadStarted(class ABFGWeapon* _pWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PlayerWeapon", "OnWeaponReloadStarted");

	Params::BFGActorComponent_PlayerWeapon_OnWeaponReloadStarted Parms{};

	Parms._pWeapon = _pWeapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_PlayerWeapon.RequestEquipFirstAvailableWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_PlayerWeapon::RequestEquipFirstAvailableWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PlayerWeapon", "RequestEquipFirstAvailableWeapon");

	Params::BFGActorComponent_PlayerWeapon_RequestEquipFirstAvailableWeapon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_PlayerWeapon.RequestNextWeaponEquip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_PlayerWeapon::RequestNextWeaponEquip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PlayerWeapon", "RequestNextWeaponEquip");

	Params::BFGActorComponent_PlayerWeapon_RequestNextWeaponEquip Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_PlayerWeapon.RequestPreviousWeaponEquip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_PlayerWeapon::RequestPreviousWeaponEquip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PlayerWeapon", "RequestPreviousWeaponEquip");

	Params::BFGActorComponent_PlayerWeapon_RequestPreviousWeaponEquip Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_PlayerWeapon.RequestWeaponEquip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ABFGWeapon*                       _pWeapon                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_PlayerWeapon::RequestWeaponEquip(class ABFGWeapon* _pWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PlayerWeapon", "RequestWeaponEquip");

	Params::BFGActorComponent_PlayerWeapon_RequestWeaponEquip Parms{};

	Parms._pWeapon = _pWeapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_PlayerWeapon.RequestWeaponEquipByClass
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class ABFGWeapon>           _rClass                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_PlayerWeapon::RequestWeaponEquipByClass(const TSubclassOf<class ABFGWeapon>& _rClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PlayerWeapon", "RequestWeaponEquipByClass");

	Params::BFGActorComponent_PlayerWeapon_RequestWeaponEquipByClass Parms{};

	Parms._rClass = _rClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_PlayerWeapon.StartShooting
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UBFGActorComponent_PlayerWeapon::StartShooting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PlayerWeapon", "StartShooting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_PlayerWeapon.StopShooting
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UBFGActorComponent_PlayerWeapon::StopShooting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PlayerWeapon", "StopShooting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BFGCore.BFGActorComponent_PlayerWeaponAndAbilitySelector.ActionBool__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    _bValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_PlayerWeaponAndAbilitySelector::ActionBool__DelegateSignature(bool _bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PlayerWeaponAndAbilitySelector", "ActionBool__DelegateSignature");

	Params::BFGActorComponent_PlayerWeaponAndAbilitySelector_ActionBool__DelegateSignature Parms{};

	Parms._bValue = _bValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGActorComponent_PlayerWeaponAndAbilitySelector.OnActorIsDeadStatChanged
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGActorStat_Bool*               _pStat                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_PlayerWeaponAndAbilitySelector::OnActorIsDeadStatChanged(class AActor* _pActor, class UBFGActorStat_Bool* _pStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PlayerWeaponAndAbilitySelector", "OnActorIsDeadStatChanged");

	Params::BFGActorComponent_PlayerWeaponAndAbilitySelector_OnActorIsDeadStatChanged Parms{};

	Parms._pActor = _pActor;
	Parms._pStat = _pStat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_PlayerWeaponAndAbilitySelector.OnSelectionMenuClosed
// (Final, Native, Protected)
// Parameters:
// class UBFGRadialMenuUserWidget*         _pMenu                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_PlayerWeaponAndAbilitySelector::OnSelectionMenuClosed(class UBFGRadialMenuUserWidget* _pMenu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_PlayerWeaponAndAbilitySelector", "OnSelectionMenuClosed");

	Params::BFGActorComponent_PlayerWeaponAndAbilitySelector_OnSelectionMenuClosed Parms{};

	Parms._pMenu = _pMenu;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEventTrigger_SpawnManagerEveryoneDead.OnLoaded
// (Final, Native, Protected)
// Parameters:
// class ABFGMissionSpawnManager*          _pSpawnManager                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_SpawnManagerEveryoneDead::OnLoaded(class ABFGMissionSpawnManager* _pSpawnManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_SpawnManagerEveryoneDead", "OnLoaded");

	Params::BFGEventTrigger_SpawnManagerEveryoneDead_OnLoaded Parms{};

	Parms._pSpawnManager = _pSpawnManager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_ProxyChildActor.Actor_OnDestroy
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_ProxyChildActor::Actor_OnDestroy(class AActor* _pActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_ProxyChildActor", "Actor_OnDestroy");

	Params::BFGActorComponent_ProxyChildActor_Actor_OnDestroy Parms{};

	Parms._pActor = _pActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_ProxyChildActor.Agent_OnDestroy
// (Final, Native, Protected)
// Parameters:
// class UBFGNetworkPathAgent*             _pAgent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_ProxyChildActor::Agent_OnDestroy(class UBFGNetworkPathAgent* _pAgent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_ProxyChildActor", "Agent_OnDestroy");

	Params::BFGActorComponent_ProxyChildActor_Agent_OnDestroy Parms{};

	Parms._pAgent = _pAgent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_ProxyChildActor.OnAgentChanged
// (Final, Native, Protected)
// Parameters:
// class UBFGNetworkPathAgentComponent*    _pComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGNetworkPathAgent*             _pAgent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBFGNetworkPathAgentComponent_AgentChangeReason_reason                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_ProxyChildActor::OnAgentChanged(class UBFGNetworkPathAgentComponent* _pComponent, class UBFGNetworkPathAgent* _pAgent, EBFGNetworkPathAgentComponent_AgentChangeReason _reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_ProxyChildActor", "OnAgentChanged");

	Params::BFGActorComponent_ProxyChildActor_OnAgentChanged Parms{};

	Parms._pComponent = _pComponent;
	Parms._pAgent = _pAgent;
	Parms._reason = _reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_RadarObject_ExactRadius.OnMarkerEnabled
// (Final, Native, Protected)
// Parameters:
// bool                                    _bEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_RadarObject_ExactRadius::OnMarkerEnabled(bool _bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_RadarObject_ExactRadius", "OnMarkerEnabled");

	Params::BFGActorComponent_RadarObject_ExactRadius_OnMarkerEnabled Parms{};

	Parms._bEnabled = _bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGQuest_ProximityMonitor.OnIsActiveChanged
// (Final, Native, Public)
// Parameters:
// class UBFGVariableMirror*               _pVarMirror                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGVariable*                     _pVariable                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _oldValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _newValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGQuest_ProximityMonitor::OnIsActiveChanged(class UBFGVariableMirror* _pVarMirror, const class UBFGVariable* _pVariable, int32 _oldValue, int32 _newValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_ProximityMonitor", "OnIsActiveChanged");

	Params::BFGQuest_ProximityMonitor_OnIsActiveChanged Parms{};

	Parms._pVarMirror = _pVarMirror;
	Parms._pVariable = _pVariable;
	Parms._oldValue = _oldValue;
	Parms._newValue = _newValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGQuest_ProximityMonitor.OnSourceActorDestroyed
// (Final, Native, Public)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGQuest_ProximityMonitor::OnSourceActorDestroyed(class AActor* _pActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_ProximityMonitor", "OnSourceActorDestroyed");

	Params::BFGQuest_ProximityMonitor_OnSourceActorDestroyed Parms{};

	Parms._pActor = _pActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGQuest_ProximityMonitor.OnSourceAgentChanged
// (Final, Native, Public)
// Parameters:
// class UBFGNetworkPathAgentComponent*    _pComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGNetworkPathAgent*             _pAgent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBFGNetworkPathAgentComponent_AgentChangeReason_reason                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGQuest_ProximityMonitor::OnSourceAgentChanged(class UBFGNetworkPathAgentComponent* _pComponent, class UBFGNetworkPathAgent* _pAgent, EBFGNetworkPathAgentComponent_AgentChangeReason _reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_ProximityMonitor", "OnSourceAgentChanged");

	Params::BFGQuest_ProximityMonitor_OnSourceAgentChanged Parms{};

	Parms._pComponent = _pComponent;
	Parms._pAgent = _pAgent;
	Parms._reason = _reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGQuest_ProximityMonitor.OnSourceAgentDestroyed
// (Final, Native, Public)
// Parameters:
// class UBFGNetworkPathAgent*             _pAgent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGQuest_ProximityMonitor::OnSourceAgentDestroyed(class UBFGNetworkPathAgent* _pAgent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_ProximityMonitor", "OnSourceAgentDestroyed");

	Params::BFGQuest_ProximityMonitor_OnSourceAgentDestroyed Parms{};

	Parms._pAgent = _pAgent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGQuest_ProximityMonitor.OnTargetActorDestroyed
// (Final, Native, Public)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGQuest_ProximityMonitor::OnTargetActorDestroyed(class AActor* _pActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_ProximityMonitor", "OnTargetActorDestroyed");

	Params::BFGQuest_ProximityMonitor_OnTargetActorDestroyed Parms{};

	Parms._pActor = _pActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGQuest_ProximityMonitor.OnTargetAgentChanged
// (Final, Native, Public)
// Parameters:
// class UBFGNetworkPathAgentComponent*    _pComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGNetworkPathAgent*             _pAgent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBFGNetworkPathAgentComponent_AgentChangeReason_reason                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGQuest_ProximityMonitor::OnTargetAgentChanged(class UBFGNetworkPathAgentComponent* _pComponent, class UBFGNetworkPathAgent* _pAgent, EBFGNetworkPathAgentComponent_AgentChangeReason _reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_ProximityMonitor", "OnTargetAgentChanged");

	Params::BFGQuest_ProximityMonitor_OnTargetAgentChanged Parms{};

	Parms._pComponent = _pComponent;
	Parms._pAgent = _pAgent;
	Parms._reason = _reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGQuest_ProximityMonitor.OnTargetAgentDestroyed
// (Final, Native, Public)
// Parameters:
// class UBFGNetworkPathAgent*             _pAgent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGQuest_ProximityMonitor::OnTargetAgentDestroyed(class UBFGNetworkPathAgent* _pAgent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_ProximityMonitor", "OnTargetAgentDestroyed");

	Params::BFGQuest_ProximityMonitor_OnTargetAgentDestroyed Parms{};

	Parms._pAgent = _pAgent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_RadarObject_NPC.OnIsDeadStatChanged
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGActorStat_Bool*               _pStat                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_RadarObject_NPC::OnIsDeadStatChanged(class AActor* _pActor, class UBFGActorStat_Bool* _pStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_RadarObject_NPC", "OnIsDeadStatChanged");

	Params::BFGActorComponent_RadarObject_NPC_OnIsDeadStatChanged Parms{};

	Parms._pActor = _pActor;
	Parms._pStat = _pStat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_AR_ActorComponentWidget.GetWidgetComponent
// (Final, Native, Public)
// Parameters:
// class UBFGActorComponent_WidgetComponent*ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGActorComponent_WidgetComponent* UBFGWidget_AR_ActorComponentWidget::GetWidgetComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_AR_ActorComponentWidget", "GetWidgetComponent");

	Params::BFGWidget_AR_ActorComponentWidget_GetWidgetComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_AR_ActorComponentWidget.SetWidgetComponent
// (Native, Public)
// Parameters:
// class UBFGActorComponent_WidgetComponent*_pComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_AR_ActorComponentWidget::SetWidgetComponent(class UBFGActorComponent_WidgetComponent* _pComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_AR_ActorComponentWidget", "SetWidgetComponent");

	Params::BFGWidget_AR_ActorComponentWidget_SetWidgetComponent Parms{};

	Parms._pComponent = _pComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_AR_ActorComponentWidget.GetBFGGameInstance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGGameInstance*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGGameInstance* UBFGWidget_AR_ActorComponentWidget::GetBFGGameInstance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_AR_ActorComponentWidget", "GetBFGGameInstance");

	Params::BFGWidget_AR_ActorComponentWidget_GetBFGGameInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_RadarObject_QuestMarker.OnMarkerEnabled
// (Final, Native, Protected)
// Parameters:
// bool                                    _bEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_RadarObject_QuestMarker::OnMarkerEnabled(bool _bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_RadarObject_QuestMarker", "OnMarkerEnabled");

	Params::BFGActorComponent_RadarObject_QuestMarker_OnMarkerEnabled Parms{};

	Parms._bEnabled = _bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVariableAction_Quest_Abort.GetActionName_QuestAbort
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableAction_Quest_Abort::GetActionName_QuestAbort()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableAction_Quest_Abort", "GetActionName_QuestAbort");

	Params::BFGVariableAction_Quest_Abort_GetActionName_QuestAbort Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_ReinforcementManager.ActivateCurrentPhaseReinforcementSpawners
// (Final, Native, Protected)
// Parameters:
// int32                                   _iCurrentBossPhase                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_ReinforcementManager::ActivateCurrentPhaseReinforcementSpawners(int32 _iCurrentBossPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_ReinforcementManager", "ActivateCurrentPhaseReinforcementSpawners");

	Params::BFGActorComponent_ReinforcementManager_ActivateCurrentPhaseReinforcementSpawners Parms{};

	Parms._iCurrentBossPhase = _iCurrentBossPhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_ReinforcementManager.RemoveReinforcementThreatValue
// (Final, Native, Public)
// Parameters:
// float                                   _fThreatValue                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_ReinforcementManager::RemoveReinforcementThreatValue(float _fThreatValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_ReinforcementManager", "RemoveReinforcementThreatValue");

	Params::BFGActorComponent_ReinforcementManager_RemoveReinforcementThreatValue Parms{};

	Parms._fThreatValue = _fThreatValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_ReinforcementManager.SpawnReinforcements
// (Final, Native, Public)

void UBFGActorComponent_ReinforcementManager::SpawnReinforcements()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_ReinforcementManager", "SpawnReinforcements");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVariableAction_AITaskState_Start.GetActionName_AITaskState_Start
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableAction_AITaskState_Start::GetActionName_AITaskState_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableAction_AITaskState_Start", "GetActionName_AITaskState_Start");

	Params::BFGVariableAction_AITaskState_Start_GetActionName_AITaskState_Start Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_SpawnManagerStats.GetCurrentWaveStat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGActorStat_uint8*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGActorStat_uint8* UBFGActorComponent_SpawnManagerStats::GetCurrentWaveStat() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_SpawnManagerStats", "GetCurrentWaveStat");

	Params::BFGActorComponent_SpawnManagerStats_GetCurrentWaveStat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_SpawnManagerStats.GetIsActiveStat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGActorStat_Bool*               ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGActorStat_Bool* UBFGActorComponent_SpawnManagerStats::GetIsActiveStat() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_SpawnManagerStats", "GetIsActiveStat");

	Params::BFGActorComponent_SpawnManagerStats_GetIsActiveStat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWheeledVehicle.AddCarPlate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             SocketName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTextRenderComponent*             CenterText                                             (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTextRenderComponent*             TopText                                                (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTextRenderComponent*             BottomText                                             (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGWheeledVehicle::AddCarPlate(class FName SocketName, class UTextRenderComponent** CenterText, class UTextRenderComponent** TopText, class UTextRenderComponent** BottomText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWheeledVehicle", "AddCarPlate");

	Params::BFGWheeledVehicle_AddCarPlate Parms{};

	Parms.SocketName = SocketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CenterText != nullptr)
		*CenterText = Parms.CenterText;

	if (TopText != nullptr)
		*TopText = Parms.TopText;

	if (BottomText != nullptr)
		*BottomText = Parms.BottomText;
}


// Function BFGCore.BFGWheeledVehicle.HonkAtObstacleInFront
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABFGWheeledVehicle::HonkAtObstacleInFront()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWheeledVehicle", "HonkAtObstacleInFront");

	Params::BFGWheeledVehicle_HonkAtObstacleInFront Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWheeledVehicle.OnBrakeBoxBeginOverlap
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              _pOverlappedComponent                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pOtherActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              _pOtherComp                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iOtherBodyIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bFromSweep                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       _sweepResult                                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ABFGWheeledVehicle::OnBrakeBoxBeginOverlap(class UPrimitiveComponent* _pOverlappedComponent, class AActor* _pOtherActor, class UPrimitiveComponent* _pOtherComp, int32 _iOtherBodyIndex, bool _bFromSweep, const struct FHitResult& _sweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWheeledVehicle", "OnBrakeBoxBeginOverlap");

	Params::BFGWheeledVehicle_OnBrakeBoxBeginOverlap Parms{};

	Parms._pOverlappedComponent = _pOverlappedComponent;
	Parms._pOtherActor = _pOtherActor;
	Parms._pOtherComp = _pOtherComp;
	Parms._iOtherBodyIndex = _iOtherBodyIndex;
	Parms._bFromSweep = _bFromSweep;
	Parms._sweepResult = std::move(_sweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWheeledVehicle.OnBrakeBoxEndOverlap
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*              _pOverlappedComponent                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pOtherActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              _pOtherComp                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iOtherBodyIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGWheeledVehicle::OnBrakeBoxEndOverlap(class UPrimitiveComponent* _pOverlappedComponent, class AActor* _pOtherActor, class UPrimitiveComponent* _pOtherComp, int32 _iOtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWheeledVehicle", "OnBrakeBoxEndOverlap");

	Params::BFGWheeledVehicle_OnBrakeBoxEndOverlap Parms{};

	Parms._pOverlappedComponent = _pOverlappedComponent;
	Parms._pOtherActor = _pOtherActor;
	Parms._pOtherComp = _pOtherComp;
	Parms._iOtherBodyIndex = _iOtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWheeledVehicle.OnVehicleDeath
// (Event, Public, BlueprintEvent)

void ABFGWheeledVehicle::OnVehicleDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWheeledVehicle", "OnVehicleDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWheeledVehicle.SetCarPlates
// (Final, Native, Public, BlueprintCallable)

void ABFGWheeledVehicle::SetCarPlates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWheeledVehicle", "SetCarPlates");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWheeledVehicle.SetColorVariations
// (Final, Native, Public, BlueprintCallable)

void ABFGWheeledVehicle::SetColorVariations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWheeledVehicle", "SetColorVariations");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWheeledVehicle.SetDoorOpen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   IDoorIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOpen                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGWheeledVehicle::SetDoorOpen(int32 IDoorIndex, bool bOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWheeledVehicle", "SetDoorOpen");

	Params::BFGWheeledVehicle_SetDoorOpen Parms{};

	Parms.IDoorIndex = IDoorIndex;
	Parms.bOpen = bOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWheeledVehicle.SetDoors
// (Final, Native, Public, BlueprintCallable)

void ABFGWheeledVehicle::SetDoors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWheeledVehicle", "SetDoors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWheeledVehicle.SetEssentials
// (Final, Native, Public, BlueprintCallable)

void ABFGWheeledVehicle::SetEssentials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWheeledVehicle", "SetEssentials");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWheeledVehicle.SetLightBulbs
// (Final, Native, Public, BlueprintCallable)

void ABFGWheeledVehicle::SetLightBulbs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWheeledVehicle", "SetLightBulbs");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWheeledVehicle.SetPlugins
// (Final, Native, Public, BlueprintCallable)

void ABFGWheeledVehicle::SetPlugins()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWheeledVehicle", "SetPlugins");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWheeledVehicle.SetupVehicle
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ABFGWheeledVehicle::SetupVehicle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWheeledVehicle", "SetupVehicle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWheeledVehicle.SetupWheels
// (Final, Native, Public, BlueprintCallable)

void ABFGWheeledVehicle::SetupWheels()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWheeledVehicle", "SetupWheels");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWheeledVehicleTank.SetTrackUpdateFrequence
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _fNewTFrequence                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGWheeledVehicleTank::SetTrackUpdateFrequence(float _fNewTFrequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWheeledVehicleTank", "SetTrackUpdateFrequence");

	Params::BFGWheeledVehicleTank_SetTrackUpdateFrequence Parms{};

	Parms._fNewTFrequence = _fNewTFrequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_TankTrack.DisableInstancedTrack
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_TankTrack::DisableInstancedTrack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_TankTrack", "DisableInstancedTrack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_TankTrack.HideInstances
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_TankTrack::HideInstances()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_TankTrack", "HideInstances");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_TankTrack.SetTFrequence
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _fNewTFrequence                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_TankTrack::SetTFrequence(float _fNewTFrequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_TankTrack", "SetTFrequence");

	Params::BFGActorComponent_TankTrack_SetTFrequence Parms{};

	Parms._fNewTFrequence = _fNewTFrequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_TankTrack.ShowInstances
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_TankTrack::ShowInstances()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_TankTrack", "ShowInstances");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_Archive_FuronHandbookChapter.AddPageToLayout
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UBFGWidget_TutorialPage*          _pPage                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Archive_FuronHandbookChapter::AddPageToLayout(class UBFGWidget_TutorialPage* _pPage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive_FuronHandbookChapter", "AddPageToLayout");

	Params::BFGWidget_Archive_FuronHandbookChapter_AddPageToLayout Parms{};

	Parms._pPage = _pPage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Archive_FuronHandbookChapter.Scroll
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   _fValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Archive_FuronHandbookChapter::Scroll(float _fValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive_FuronHandbookChapter", "Scroll");

	Params::BFGWidget_Archive_FuronHandbookChapter_Scroll Parms{};

	Parms._fValue = _fValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Archive_FuronHandbookChapter.ScrolltoWidget
// (Event, Public, BlueprintEvent)
// Parameters:
// class UBFGWidget_DialogOption*          _pOption                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Archive_FuronHandbookChapter::ScrolltoWidget(class UBFGWidget_DialogOption* _pOption)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive_FuronHandbookChapter", "ScrolltoWidget");

	Params::BFGWidget_Archive_FuronHandbookChapter_ScrolltoWidget Parms{};

	Parms._pOption = _pOption;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGActorComponent_TargetSystem.GetActorTargetLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UBFGActorComponent_TargetSystem::GetActorTargetLocation(class AActor* _pActor, class FName BoneName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_TargetSystem", "GetActorTargetLocation");

	Params::BFGActorComponent_TargetSystem_GetActorTargetLocation Parms{};

	Parms._pActor = _pActor;
	Parms.BoneName = BoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_Timer.GetTimeLeft
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGActorComponent_Timer::GetTimeLeft() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_Timer", "GetTimeLeft");

	Params::BFGActorComponent_Timer_GetTimeLeft Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_WidgetComponent.DisableWidget
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_WidgetComponent::DisableWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_WidgetComponent", "DisableWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_WidgetComponent.EnableWidget
// (Final, Native, Public, BlueprintCallable)

void UBFGActorComponent_WidgetComponent::EnableWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_WidgetComponent", "EnableWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_WidgetComponent.EnsureWidgetInitialized
// (Final, Native, Protected)

void UBFGActorComponent_WidgetComponent::EnsureWidgetInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_WidgetComponent", "EnsureWidgetInitialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_WidgetComponent.GetCurrentActor
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UBFGActorComponent_WidgetComponent::GetCurrentActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_WidgetComponent", "GetCurrentActor");

	Params::BFGActorComponent_WidgetComponent_GetCurrentActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_WidgetComponent.GetWidgetfromPool
// (Final, Native, Protected)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UBFGActorComponent_WidgetComponent::GetWidgetfromPool()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_WidgetComponent", "GetWidgetfromPool");

	Params::BFGActorComponent_WidgetComponent_GetWidgetfromPool Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_WidgetComponent.ReleaseWidget
// (Final, Native, Protected)

void UBFGActorComponent_WidgetComponent::ReleaseWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_WidgetComponent", "ReleaseWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_WidgetComponent.SetEnableMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBFGWidgetComponentEnableMode           _eMode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_WidgetComponent::SetEnableMode(EBFGWidgetComponentEnableMode _eMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_WidgetComponent", "SetEnableMode");

	Params::BFGActorComponent_WidgetComponent_SetEnableMode Parms{};

	Parms._eMode = _eMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_WidgetComponent.SetMaxDistanceFromPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _fMaxDistance                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_WidgetComponent::SetMaxDistanceFromPlayer(float _fMaxDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_WidgetComponent", "SetMaxDistanceFromPlayer");

	Params::BFGActorComponent_WidgetComponent_SetMaxDistanceFromPlayer Parms{};

	Parms._fMaxDistance = _fMaxDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_WidgetComponent.GetAttachedActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UBFGActorComponent_WidgetComponent::GetAttachedActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_WidgetComponent", "GetAttachedActor");

	Params::BFGActorComponent_WidgetComponent_GetAttachedActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_WidgetComponent.IsWidgetInitialized
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponent_WidgetComponent::IsWidgetInitialized() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_WidgetComponent", "IsWidgetInitialized");

	Params::BFGActorComponent_WidgetComponent_IsWidgetInitialized Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_WidgetComponent_Health.OnDeadStatChanged
// (Final, Native, Public)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGActorStat_Bool*               _pBoolStat                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_WidgetComponent_Health::OnDeadStatChanged(class AActor* _pActor, class UBFGActorStat_Bool* _pBoolStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_WidgetComponent_Health", "OnDeadStatChanged");

	Params::BFGActorComponent_WidgetComponent_Health_OnDeadStatChanged Parms{};

	Parms._pActor = _pActor;
	Parms._pBoolStat = _pBoolStat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVariableAction_MissionGroup_Finish.GetActionName_MissionGroupFinish
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableAction_MissionGroup_Finish::GetActionName_MissionGroupFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableAction_MissionGroup_Finish", "GetActionName_MissionGroupFinish");

	Params::BFGVariableAction_MissionGroup_Finish_GetActionName_MissionGroupFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponent_WidgetComponent_Holobob.SetVisibilityState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bVisible                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bForceUpdate                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_WidgetComponent_Holobob::SetVisibilityState(bool _bVisible, bool _bForceUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_WidgetComponent_Holobob", "SetVisibilityState");

	Params::BFGActorComponent_WidgetComponent_Holobob_SetVisibilityState Parms{};

	Parms._bVisible = _bVisible;
	Parms._bForceUpdate = _bForceUpdate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponentInteractable.SetFocusable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponentInteractable::SetFocusable(bool _bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponentInteractable", "SetFocusable");

	Params::BFGActorComponentInteractable_SetFocusable Parms{};

	Parms._bValue = _bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponentInteractable.SetInteractEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponentInteractable::SetInteractEnabled(bool _bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponentInteractable", "SetInteractEnabled");

	Params::BFGActorComponentInteractable_SetInteractEnabled Parms{};

	Parms._bValue = _bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponentInteractable.IsFocused
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponentInteractable::IsFocused() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponentInteractable", "IsFocused");

	Params::BFGActorComponentInteractable_IsFocused Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorComponentInteractable.IsInteractableFocusable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorComponentInteractable::IsInteractableFocusable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponentInteractable", "IsInteractableFocusable");

	Params::BFGActorComponentInteractable_IsInteractableFocusable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorFallingLeaves.CheckEnvironment
// (Final, Native, Protected)

void ABFGActorFallingLeaves::CheckEnvironment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorFallingLeaves", "CheckEnvironment");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_MessageBox.SetupMessageBox
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FBFGMessageBoxParams             _params                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UBFGWidget_MessageBox::SetupMessageBox(const struct FBFGMessageBoxParams& _params)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MessageBox", "SetupMessageBox");

	Params::BFGWidget_MessageBox_SetupMessageBox Parms{};

	Parms._params = std::move(_params);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGActorInterface_EnvironmentMonitor.OnEnvironmentChanged
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBFGEnvironment*                  _pEnvironment                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IBFGActorInterface_EnvironmentMonitor::OnEnvironmentChanged(class UBFGEnvironment* _pEnvironment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorInterface_EnvironmentMonitor", "OnEnvironmentChanged");

	Params::BFGActorInterface_EnvironmentMonitor_OnEnvironmentChanged Parms{};

	Parms._pEnvironment = _pEnvironment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorOcean.CheckOceanInRadius
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          _vCentre                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _CheckRadius                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ABFGActorOcean::CheckOceanInRadius(const struct FVector& _vCentre, float _CheckRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorOcean", "CheckOceanInRadius");

	Params::BFGActorOcean_CheckOceanInRadius Parms{};

	Parms._vCentre = std::move(_vCentre);
	Parms._CheckRadius = _CheckRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorOcean.CreateOceanTexture
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FWaveParameter                   _stChannelRed                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FWaveParameter                   _stChannelGreen                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FWaveParameter                   _stChannelBlue                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FWaveParameter                   _stChannelAlpha                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ABFGActorOcean::CreateOceanTexture(const struct FWaveParameter& _stChannelRed, const struct FWaveParameter& _stChannelGreen, const struct FWaveParameter& _stChannelBlue, const struct FWaveParameter& _stChannelAlpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorOcean", "CreateOceanTexture");

	Params::BFGActorOcean_CreateOceanTexture Parms{};

	Parms._stChannelRed = std::move(_stChannelRed);
	Parms._stChannelGreen = std::move(_stChannelGreen);
	Parms._stChannelBlue = std::move(_stChannelBlue);
	Parms._stChannelAlpha = std::move(_stChannelAlpha);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorOcean.GenerateRandomPointOnMesh
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ABFGActorOcean::GenerateRandomPointOnMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorOcean", "GenerateRandomPointOnMesh");

	Params::BFGActorOcean_GenerateRandomPointOnMesh Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorOcean.GetOceanHeight
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          _vWorldPos                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABFGActorOcean::GetOceanHeight(const struct FVector& _vWorldPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorOcean", "GetOceanHeight");

	Params::BFGActorOcean_GetOceanHeight Parms{};

	Parms._vWorldPos = std::move(_vWorldPos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorOcean.IsLocationInOcean
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          _vLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGActorOcean::IsLocationInOcean(const struct FVector& _vLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorOcean", "IsLocationInOcean");

	Params::BFGActorOcean_IsLocationInOcean Parms{};

	Parms._vLocation = std::move(_vLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorOcean.IsLocationInOceanWithHeight
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          _vLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fOceanHeight                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGActorOcean::IsLocationInOceanWithHeight(const struct FVector& _vLocation, float _fOceanHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorOcean", "IsLocationInOceanWithHeight");

	Params::BFGActorOcean_IsLocationInOceanWithHeight Parms{};

	Parms._vLocation = std::move(_vLocation);
	Parms._fOceanHeight = _fOceanHeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterEnemy_Mecha.OnStompAttackStarted
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   M_fStompDuration                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bUsedRightFoot                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterEnemy_Mecha::OnStompAttackStarted(float M_fStompDuration, bool _bUsedRightFoot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterEnemy_Mecha", "OnStompAttackStarted");

	Params::BFGNPCCharacterEnemy_Mecha_OnStompAttackStarted Parms{};

	Parms.M_fStompDuration = M_fStompDuration;
	Parms._bUsedRightFoot = _bUsedRightFoot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGCheatManager.GetSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBFGCheatSettings*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGCheatSettings* UBFGCheatManager::GetSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGCheatManager", "GetSettings");

	Params::BFGCheatManager_GetSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGCheatManager.AddDNA
// (Exec, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _iAddedAmount                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGCheatManager::AddDNA(int32 _iAddedAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "AddDNA");

	Params::BFGCheatManager_AddDNA Parms{};

	Parms._iAddedAmount = _iAddedAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.CallUFO
// (Final, Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::CallUFO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "CallUFO");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.DecrementBFGMouseSensitivity
// (Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::DecrementBFGMouseSensitivity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "DecrementBFGMouseSensitivity");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.DisableMusic
// (Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::DisableMusic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "DisableMusic");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.FlyMode
// (Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::FlyMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "FlyMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.GenerateCrashDump
// (Final, Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::GenerateCrashDump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "GenerateCrashDump");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.IncrementBFGMouseSensitivity
// (Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::IncrementBFGMouseSensitivity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "IncrementBFGMouseSensitivity");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.IncrementInputPack
// (Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::IncrementInputPack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "IncrementInputPack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.IsHUDVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGCheatManager::IsHUDVisible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "IsHUDVisible");

	Params::BFGCheatManager_IsHUDVisible Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGCheatManager.KillPlayer
// (Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::KillPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "KillPlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.LockAll
// (Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bPermanent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGCheatManager::LockAll(bool _bPermanent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "LockAll");

	Params::BFGCheatManager_LockAll Parms{};

	Parms._bPermanent = _bPermanent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.LockAllAbilities
// (Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bPermanent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGCheatManager::LockAllAbilities(bool _bPermanent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "LockAllAbilities");

	Params::BFGCheatManager_LockAllAbilities Parms{};

	Parms._bPermanent = _bPermanent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.LockAllWeapons
// (Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bPermanent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGCheatManager::LockAllWeapons(bool _bPermanent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "LockAllWeapons");

	Params::BFGCheatManager_LockAllWeapons Parms{};

	Parms._bPermanent = _bPermanent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.LockUnlockAbilityCortexScan
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bPermanent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _tier                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGCheatManager::LockUnlockAbilityCortexScan(bool _bPermanent, int32 _tier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "LockUnlockAbilityCortexScan");

	Params::BFGCheatManager_LockUnlockAbilityCortexScan Parms{};

	Parms._bPermanent = _bPermanent;
	Parms._tier = _tier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.LockUnlockAbilityExtractBrain
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bPermanent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _tier                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGCheatManager::LockUnlockAbilityExtractBrain(bool _bPermanent, int32 _tier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "LockUnlockAbilityExtractBrain");

	Params::BFGCheatManager_LockUnlockAbilityExtractBrain Parms{};

	Parms._bPermanent = _bPermanent;
	Parms._tier = _tier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.LockUnlockAbilityHolobob
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bPermanent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _tier                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGCheatManager::LockUnlockAbilityHolobob(bool _bPermanent, int32 _tier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "LockUnlockAbilityHolobob");

	Params::BFGCheatManager_LockUnlockAbilityHolobob Parms{};

	Parms._bPermanent = _bPermanent;
	Parms._tier = _tier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.LockUnlockAbilityHypnotize
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bPermanent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _tier                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGCheatManager::LockUnlockAbilityHypnotize(bool _bPermanent, int32 _tier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "LockUnlockAbilityHypnotize");

	Params::BFGCheatManager_LockUnlockAbilityHypnotize Parms{};

	Parms._bPermanent = _bPermanent;
	Parms._tier = _tier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.LockUnlockAbilityPsycokinesis
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bPermanent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _tier                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGCheatManager::LockUnlockAbilityPsycokinesis(bool _bPermanent, int32 _tier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "LockUnlockAbilityPsycokinesis");

	Params::BFGCheatManager_LockUnlockAbilityPsycokinesis Parms{};

	Parms._bPermanent = _bPermanent;
	Parms._tier = _tier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.LockUnlockWeaponAnalProbe
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bPermanent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _tier                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGCheatManager::LockUnlockWeaponAnalProbe(bool _bPermanent, int32 _tier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "LockUnlockWeaponAnalProbe");

	Params::BFGCheatManager_LockUnlockWeaponAnalProbe Parms{};

	Parms._bPermanent = _bPermanent;
	Parms._tier = _tier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.LockUnlockWeaponDisintegratorRay
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bPermanent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _tier                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGCheatManager::LockUnlockWeaponDisintegratorRay(bool _bPermanent, int32 _tier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "LockUnlockWeaponDisintegratorRay");

	Params::BFGCheatManager_LockUnlockWeaponDisintegratorRay Parms{};

	Parms._bPermanent = _bPermanent;
	Parms._tier = _tier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.LockUnlockWeaponIonDetonator
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bPermanent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _tier                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGCheatManager::LockUnlockWeaponIonDetonator(bool _bPermanent, int32 _tier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "LockUnlockWeaponIonDetonator");

	Params::BFGCheatManager_LockUnlockWeaponIonDetonator Parms{};

	Parms._bPermanent = _bPermanent;
	Parms._tier = _tier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.LockUnlockWeaponZap
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bPermanent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _tier                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGCheatManager::LockUnlockWeaponZap(bool _bPermanent, int32 _tier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "LockUnlockWeaponZap");

	Params::BFGCheatManager_LockUnlockWeaponZap Parms{};

	Parms._bPermanent = _bPermanent;
	Parms._tier = _tier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.NukeEnemies
// (Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::NukeEnemies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "NukeEnemies");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.NukeEnemiesInRange
// (Exec, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _fRange                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGCheatManager::NukeEnemiesInRange(float _fRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "NukeEnemiesInRange");

	Params::BFGCheatManager_NukeEnemiesInRange Parms{};

	Parms._fRange = _fRange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.ReceiveInitCheatManager
// (Event, Protected, BlueprintEvent)

void UBFGCheatManager::ReceiveInitCheatManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "ReceiveInitCheatManager");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGCheatManager.RespawnPlayer
// (Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::RespawnPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "RespawnPlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.SetBFGMouseSensitivity
// (Exec, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _fSensitivity                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGCheatManager::SetBFGMouseSensitivity(float _fSensitivity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "SetBFGMouseSensitivity");

	Params::BFGCheatManager_SetBFGMouseSensitivity Parms{};

	Parms._fSensitivity = _fSensitivity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.SetCurrentLanguage
// (Exec, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           _strCulture                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGCheatManager::SetCurrentLanguage(const class FString& _strCulture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "SetCurrentLanguage");

	Params::BFGCheatManager_SetCurrentLanguage Parms{};

	Parms._strCulture = std::move(_strCulture);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.SetFuronigamiUnlocked
// (Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bUnlocked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGCheatManager::SetFuronigamiUnlocked(bool _bUnlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "SetFuronigamiUnlocked");

	Params::BFGCheatManager_SetFuronigamiUnlocked Parms{};

	Parms._bUnlocked = _bUnlocked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.SetGameIni
// (Exec, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           _strVariable                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iNewValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGCheatManager::SetGameIni(const class FString& _strVariable, int32 _iNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "SetGameIni");

	Params::BFGCheatManager_SetGameIni Parms{};

	Parms._strVariable = std::move(_strVariable);
	Parms._iNewValue = _iNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.SetPrePurchaseDLCUnlocked
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bUnlocked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGCheatManager::SetPrePurchaseDLCUnlocked(bool _bUnlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "SetPrePurchaseDLCUnlocked");

	Params::BFGCheatManager_SetPrePurchaseDLCUnlocked Parms{};

	Parms._bUnlocked = _bUnlocked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.ShowGameMenu
// (Exec, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _name                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGCheatManager::ShowGameMenu(class FName _name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "ShowGameMenu");

	Params::BFGCheatManager_ShowGameMenu Parms{};

	Parms._name = _name;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.SpawnCivilian
// (Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::SpawnCivilian()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "SpawnCivilian");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.SpawnCow
// (Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::SpawnCow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "SpawnCow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.SpawnDisintegratorAmmo
// (Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::SpawnDisintegratorAmmo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "SpawnDisintegratorAmmo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.SpawnEnemyCop
// (Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::SpawnEnemyCop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "SpawnEnemyCop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.SpawnEnemyFarmer
// (Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::SpawnEnemyFarmer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "SpawnEnemyFarmer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.SpawnEnemyMajestic
// (Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::SpawnEnemyMajestic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "SpawnEnemyMajestic");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.SpawnEnemyPowersuit
// (Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::SpawnEnemyPowersuit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "SpawnEnemyPowersuit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.SpawnEnemySoldier
// (Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::SpawnEnemySoldier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "SpawnEnemySoldier");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.SpawnIonDetonatorAmmo
// (Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::SpawnIonDetonatorAmmo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "SpawnIonDetonatorAmmo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.SpawnQuantumDeconstructor
// (Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::SpawnQuantumDeconstructor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "SpawnQuantumDeconstructor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.SpawnSonicBoomAmmo
// (Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::SpawnSonicBoomAmmo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "SpawnSonicBoomAmmo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.ToggleCrossHairHUDHidden
// (Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::ToggleCrossHairHUDHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "ToggleCrossHairHUDHidden");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.ToggleFreezeWorld
// (Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::ToggleFreezeWorld()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "ToggleFreezeWorld");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.ToggleHUD
// (Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::ToggleHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "ToggleHUD");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.ToggleImmortality
// (Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::ToggleImmortality()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "ToggleImmortality");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.ToggleInfiniteAmmo
// (Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::ToggleInfiniteAmmo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "ToggleInfiniteAmmo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.ToggleInfiniteCharge
// (Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::ToggleInfiniteCharge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "ToggleInfiniteCharge");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.ToggleInfiniteConcentration
// (Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::ToggleInfiniteConcentration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "ToggleInfiniteConcentration");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.ToggleInformativeHUDHidden
// (Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::ToggleInformativeHUDHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "ToggleInformativeHUDHidden");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.ToggleInvertYAimingAxis
// (Final, Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::ToggleInvertYAimingAxis()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "ToggleInvertYAimingAxis");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.ToggleInvisibility
// (Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::ToggleInvisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "ToggleInvisibility");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.ToggleInvulnerability
// (Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::ToggleInvulnerability()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "ToggleInvulnerability");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.ToggleLockOnTag
// (Exec, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _tag                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bPermanent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGCheatManager::ToggleLockOnTag(const class FName _tag, bool _bPermanent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "ToggleLockOnTag");

	Params::BFGCheatManager_ToggleLockOnTag Parms{};

	Parms._tag = _tag;
	Parms._bPermanent = _bPermanent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.ToggleMenu
// (Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::ToggleMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "ToggleMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.ToggleSaucer
// (Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::ToggleSaucer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "ToggleSaucer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.ToggleSubtitles
// (Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::ToggleSubtitles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "ToggleSubtitles");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.ToggleWorldHelpersHUDHidden
// (Exec, Native, Public, BlueprintCallable)

void UBFGCheatManager::ToggleWorldHelpersHUDHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "ToggleWorldHelpersHUDHidden");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.UnlockAlAbilities
// (Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bPermanent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGCheatManager::UnlockAlAbilities(bool _bPermanent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "UnlockAlAbilities");

	Params::BFGCheatManager_UnlockAlAbilities Parms{};

	Parms._bPermanent = _bPermanent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.UnlockAll
// (Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bPermanent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGCheatManager::UnlockAll(bool _bPermanent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "UnlockAll");

	Params::BFGCheatManager_UnlockAll Parms{};

	Parms._bPermanent = _bPermanent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCheatManager.UnlockAllWeapons
// (Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bPermanent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGCheatManager::UnlockAllWeapons(bool _bPermanent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatManager", "UnlockAllWeapons");

	Params::BFGCheatManager_UnlockAllWeapons Parms{};

	Parms._bPermanent = _bPermanent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorProxyCollect.OnPostCreateChildActor
// (Final, Native, Protected)
// Parameters:
// class UBFGActorComponent_ProxyChildActor*_pComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pChildActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGActorProxyCollect::OnPostCreateChildActor(class UBFGActorComponent_ProxyChildActor* _pComponent, class AActor* _pChildActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorProxyCollect", "OnPostCreateChildActor");

	Params::BFGActorProxyCollect_OnPostCreateChildActor Parms{};

	Parms._pComponent = _pComponent;
	Parms._pChildActor = _pChildActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVariableAction_Quest_Progress.GetActionNameQuestProgress
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableAction_Quest_Progress::GetActionNameQuestProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableAction_Quest_Progress", "GetActionNameQuestProgress");

	Params::BFGVariableAction_Quest_Progress_GetActionNameQuestProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGBuildingHelper.InitializeBuildingEditor
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABFGActorBuilding*                _pActorBuilding                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGBuildingHelper::InitializeBuildingEditor(class ABFGActorBuilding* _pActorBuilding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBuildingHelper", "InitializeBuildingEditor");

	Params::BFGBuildingHelper_InitializeBuildingEditor Parms{};

	Parms._pActorBuilding = _pActorBuilding;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGBuildingHelper.StoreBuildingEditor
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABFGBuildingHelper::StoreBuildingEditor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBuildingHelper", "StoreBuildingEditor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGBuildingHelper.ToggleBuildingEditor
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABFGBuildingHelper::ToggleBuildingEditor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBuildingHelper", "ToggleBuildingEditor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGActorStat.GetLastChangedTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGActorStat::GetLastChangedTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorStat", "GetLastChangedTime");

	Params::BFGActorStat_GetLastChangedTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorStat.IsFrozenEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorStat::IsFrozenEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorStat", "IsFrozenEnabled");

	Params::BFGActorStat_IsFrozenEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorStat_Bool.SetValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bBroadcast                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorStat_Bool::SetValue(bool _bValue, bool _bBroadcast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorStat_Bool", "SetValue");

	Params::BFGActorStat_Bool_SetValue Parms{};

	Parms._bValue = _bValue;
	Parms._bBroadcast = _bBroadcast;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorStat_Bool.GetValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorStat_Bool::GetValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorStat_Bool", "GetValue");

	Params::BFGActorStat_Bool_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction BFGCore.BFGWidget_MainMenu.Action__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UBFGWidget_MainMenu::Action__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MainMenu", "Action__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_MainMenu.GetCurrentMenuState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EBFGGameFlowState_MainMenu_State        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBFGGameFlowState_MainMenu_State UBFGWidget_MainMenu::GetCurrentMenuState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MainMenu", "GetCurrentMenuState");

	Params::BFGWidget_MainMenu_GetCurrentMenuState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_MainMenu.OnAcceptButtonClicked
// (Final, Native, Public, BlueprintCallable)

void UBFGWidget_MainMenu::OnAcceptButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MainMenu", "OnAcceptButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_MainMenu.OnDroneAcknowledged
// (Final, Native, Public, BlueprintCallable)

void UBFGWidget_MainMenu::OnDroneAcknowledged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MainMenu", "OnDroneAcknowledged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_MainMenu.OnFebruaryGiftsAcknowledged
// (Final, Native, Public, BlueprintCallable)

void UBFGWidget_MainMenu::OnFebruaryGiftsAcknowledged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MainMenu", "OnFebruaryGiftsAcknowledged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_MainMenu.OnGiftsAcknowledged
// (Final, Native, Public, BlueprintCallable)

void UBFGWidget_MainMenu::OnGiftsAcknowledged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MainMenu", "OnGiftsAcknowledged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_MainMenu.PlayFebruaryGiftsAnimation
// (Event, Public, BlueprintEvent)

void UBFGWidget_MainMenu::PlayFebruaryGiftsAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MainMenu", "PlayFebruaryGiftsAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_MainMenu.PlayGiftsAnimation
// (Event, Public, BlueprintEvent)

void UBFGWidget_MainMenu::PlayGiftsAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MainMenu", "PlayGiftsAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_MainMenu.PlayMainAnimation
// (Event, Public, BlueprintEvent)

void UBFGWidget_MainMenu::PlayMainAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MainMenu", "PlayMainAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGActorStat_uint8.SetValue
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _iValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bBroadcast                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorStat_uint8::SetValue(int32 _iValue, bool _bBroadcast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorStat_uint8", "SetValue");

	Params::BFGActorStat_uint8_SetValue Parms{};

	Parms._iValue = _iValue;
	Parms._bBroadcast = _bBroadcast;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorStat_uint8.GetValue
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UBFGActorStat_uint8::GetValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorStat_uint8", "GetValue");

	Params::BFGActorStat_uint8_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorStat_EnumBehaviourState_NPC.SetValueEnum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBFGBehaviourState_NPC                  _eValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bBroadcast                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorStat_EnumBehaviourState_NPC::SetValueEnum(EBFGBehaviourState_NPC _eValue, bool _bBroadcast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorStat_EnumBehaviourState_NPC", "SetValueEnum");

	Params::BFGActorStat_EnumBehaviourState_NPC_SetValueEnum Parms{};

	Parms._eValue = _eValue;
	Parms._bBroadcast = _bBroadcast;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorStat_EnumBehaviourState_NPC.GetValueEnum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBFGBehaviourState_NPC                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBFGBehaviourState_NPC UBFGActorStat_EnumBehaviourState_NPC::GetValueEnum() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorStat_EnumBehaviourState_NPC", "GetValueEnum");

	Params::BFGActorStat_EnumBehaviourState_NPC_GetValueEnum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGChallengeStartingPoint.OnPanelVisibilityChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// EBFGChallengeStartingPoint_Visibility   _eVisibility                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGChallengeStartingPoint::OnPanelVisibilityChanged(EBFGChallengeStartingPoint_Visibility _eVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGChallengeStartingPoint", "OnPanelVisibilityChanged");

	Params::BFGChallengeStartingPoint_OnPanelVisibilityChanged Parms{};

	Parms._eVisibility = _eVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidgetPoxLabEntryPoint.OnOptionMouseHover
// (Final, Native, Protected)
// Parameters:
// EBFGMotherShipPoxLabType                _eType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidgetPoxLabEntryPoint::OnOptionMouseHover(EBFGMotherShipPoxLabType _eType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidgetPoxLabEntryPoint", "OnOptionMouseHover");

	Params::BFGWidgetPoxLabEntryPoint_OnOptionMouseHover Parms{};

	Parms._eType = _eType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidgetPoxLabEntryPoint.OnOptionMousePress
// (Final, Native, Protected)
// Parameters:
// EBFGMotherShipPoxLabType                _eType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidgetPoxLabEntryPoint::OnOptionMousePress(EBFGMotherShipPoxLabType _eType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidgetPoxLabEntryPoint", "OnOptionMousePress");

	Params::BFGWidgetPoxLabEntryPoint_OnOptionMousePress Parms{};

	Parms._eType = _eType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorStat_Float.AddValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _fValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bBroadcast                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bRegisterChange                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorStat_Float::AddValue(float _fValue, bool _bBroadcast, bool _bRegisterChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorStat_Float", "AddValue");

	Params::BFGActorStat_Float_AddValue Parms{};

	Parms._fValue = _fValue;
	Parms._bBroadcast = _bBroadcast;
	Parms._bRegisterChange = _bRegisterChange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorStat_Float.ForceRegenEnabled
// (Final, Native, Public, BlueprintCallable)

void UBFGActorStat_Float::ForceRegenEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorStat_Float", "ForceRegenEnabled");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorStat_Float.SetRatio
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _fRatio                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bBroadcast                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bRegisterChange                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bForceInit                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorStat_Float::SetRatio(float _fRatio, bool _bBroadcast, bool _bRegisterChange, bool _bForceInit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorStat_Float", "SetRatio");

	Params::BFGActorStat_Float_SetRatio Parms{};

	Parms._fRatio = _fRatio;
	Parms._bBroadcast = _bBroadcast;
	Parms._bRegisterChange = _bRegisterChange;
	Parms._bForceInit = _bForceInit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorStat_Float.SetRegenEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bRegenEnabled                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorStat_Float::SetRegenEnabled(bool _bRegenEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorStat_Float", "SetRegenEnabled");

	Params::BFGActorStat_Float_SetRegenEnabled Parms{};

	Parms._bRegenEnabled = _bRegenEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorStat_Float.SetRegenerationDelayOverride
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _fOverride                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorStat_Float::SetRegenerationDelayOverride(float _fOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorStat_Float", "SetRegenerationDelayOverride");

	Params::BFGActorStat_Float_SetRegenerationDelayOverride Parms{};

	Parms._fOverride = _fOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorStat_Float.SetRegenerationRateOverride
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _fOverride                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorStat_Float::SetRegenerationRateOverride(float _fOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorStat_Float", "SetRegenerationRateOverride");

	Params::BFGActorStat_Float_SetRegenerationRateOverride Parms{};

	Parms._fOverride = _fOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorStat_Float.SetValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _fValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bBroadcast                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bRegisterChange                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bForceInit                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorStat_Float::SetValue(float _fValue, bool _bBroadcast, bool _bRegisterChange, bool _bForceInit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorStat_Float", "SetValue");

	Params::BFGActorStat_Float_SetValue Parms{};

	Parms._fValue = _fValue;
	Parms._bBroadcast = _bBroadcast;
	Parms._bRegisterChange = _bRegisterChange;
	Parms._bForceInit = _bForceInit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorStat_Float.GetCurrentRegenerationDelay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGActorStat_Float::GetCurrentRegenerationDelay() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorStat_Float", "GetCurrentRegenerationDelay");

	Params::BFGActorStat_Float_GetCurrentRegenerationDelay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorStat_Float.GetCurrentRegenerationRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGActorStat_Float::GetCurrentRegenerationRate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorStat_Float", "GetCurrentRegenerationRate");

	Params::BFGActorStat_Float_GetCurrentRegenerationRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorStat_Float.GetIsCurrentlyRegenerating
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorStat_Float::GetIsCurrentlyRegenerating() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorStat_Float", "GetIsCurrentlyRegenerating");

	Params::BFGActorStat_Float_GetIsCurrentlyRegenerating Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorStat_Float.GetRatio
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGActorStat_Float::GetRatio() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorStat_Float", "GetRatio");

	Params::BFGActorStat_Float_GetRatio Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorStat_Float.GetValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGActorStat_Float::GetValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorStat_Float", "GetValue");

	Params::BFGActorStat_Float_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorStat_Float.GetValueNorm
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGActorStat_Float::GetValueNorm() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorStat_Float", "GetValueNorm");

	Params::BFGActorStat_Float_GetValueNorm Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorStat_Float.IsRegenEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorStat_Float::IsRegenEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorStat_Float", "IsRegenEnabled");

	Params::BFGActorStat_Float_IsRegenEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAIController.Awake
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APawn*                            _pPawn                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGAIController::Awake(class APawn* _pPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAIController", "Awake");

	Params::BFGAIController_Awake Parms{};

	Parms._pPawn = _pPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAIController.Hibernate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _fInterval                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGAIController::Hibernate(float _fInterval)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAIController", "Hibernate");

	Params::BFGAIController_Hibernate Parms{};

	Parms._fInterval = _fInterval;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAIController.OnBehaviorTreeStarted
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UBehaviorTree*                    _pBehaviorTree                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGAIController::OnBehaviorTreeStarted(class UBehaviorTree* _pBehaviorTree)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAIController", "OnBehaviorTreeStarted");

	Params::BFGAIController_OnBehaviorTreeStarted Parms{};

	Parms._pBehaviorTree = _pBehaviorTree;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAIController.OnBoolStatChanged
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGActorStat_Bool*               _pStat                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGAIController::OnBoolStatChanged(class AActor* _pActor, class UBFGActorStat_Bool* _pStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAIController", "OnBoolStatChanged");

	Params::BFGAIController_OnBoolStatChanged Parms{};

	Parms._pActor = _pActor;
	Parms._pStat = _pStat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAIController.OnDeathStateChanged
// (Final, Native, Public)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGActorStat_Bool*               _pStat                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGAIController::OnDeathStateChanged(class AActor* _pActor, class UBFGActorStat_Bool* _pStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAIController", "OnDeathStateChanged");

	Params::BFGAIController_OnDeathStateChanged Parms{};

	Parms._pActor = _pActor;
	Parms._pStat = _pStat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAIController.IsHibernating
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGAIController::IsHibernating() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAIController", "IsHibernating");

	Params::BFGAIController_IsHibernating Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGCortexScanOverrideRule.AppliesToTarget
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AActor*                           _pTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGCortexScanOverrideRule::AppliesToTarget(class AActor* _pTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCortexScanOverrideRule", "AppliesToTarget");

	Params::BFGCortexScanOverrideRule_AppliesToTarget Parms{};

	Parms._pTarget = _pTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorUtils.ActivateExplosionFromBP
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           PSourceActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _atPosition                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fDamage                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fDamageToPlayer                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UDamageType>          M_pDamageType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fPhysicsImpulseStrength                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bTraceHitResults                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bCanDestroyEnvironment                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> UBFGActorUtils::ActivateExplosionFromBP(class AActor* PSourceActor, const struct FVector& _atPosition, float _fRadius, float _fDamage, float _fDamageToPlayer, TSubclassOf<class UDamageType> M_pDamageType, float _fPhysicsImpulseStrength, bool _bTraceHitResults, bool _bCanDestroyEnvironment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGActorUtils", "ActivateExplosionFromBP");

	Params::BFGActorUtils_ActivateExplosionFromBP Parms{};

	Parms.PSourceActor = PSourceActor;
	Parms._atPosition = std::move(_atPosition);
	Parms._fRadius = _fRadius;
	Parms._fDamage = _fDamage;
	Parms._fDamageToPlayer = _fDamageToPlayer;
	Parms.M_pDamageType = M_pDamageType;
	Parms._fPhysicsImpulseStrength = _fPhysicsImpulseStrength;
	Parms._bTraceHitResults = _bTraceHitResults;
	Parms._bCanDestroyEnvironment = _bCanDestroyEnvironment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorUtils.ApplyImpulseToActor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vImpulseAgainstNPC                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vImpulseAgainstPlayer                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorUtils::ApplyImpulseToActor(class AActor* _pActor, const struct FVector& _vImpulseAgainstNPC, const struct FVector& _vImpulseAgainstPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGActorUtils", "ApplyImpulseToActor");

	Params::BFGActorUtils_ApplyImpulseToActor Parms{};

	Parms._pActor = _pActor;
	Parms._vImpulseAgainstNPC = std::move(_vImpulseAgainstNPC);
	Parms._vImpulseAgainstPlayer = std::move(_vImpulseAgainstPlayer);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorUtils.CalcSkeletalMeshFeetHeight
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*                  _pComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGActorUtils::CalcSkeletalMeshFeetHeight(class USceneComponent* _pComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGActorUtils", "CalcSkeletalMeshFeetHeight");

	Params::BFGActorUtils_CalcSkeletalMeshFeetHeight Parms{};

	Parms._pComponent = _pComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorUtils.CalculateActorWaterInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBFGWaterPlaneInfo               ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FBFGWaterPlaneInfo UBFGActorUtils::CalculateActorWaterInfo(class AActor* _pActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGActorUtils", "CalculateActorWaterInfo");

	Params::BFGActorUtils_CalculateActorWaterInfo Parms{};

	Parms._pActor = _pActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorUtils.ComputeActorWeightClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EObjectWeightClass                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EObjectWeightClass UBFGActorUtils::ComputeActorWeightClass(class AActor* _pActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGActorUtils", "ComputeActorWeightClass");

	Params::BFGActorUtils_ComputeActorWeightClass Parms{};

	Parms._pActor = _pActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorUtils.CopyCollisionResponseToChannel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ECollisionChannel                       _eChannel                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UStaticMesh*                      _pSource                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              _pDestination                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorUtils::CopyCollisionResponseToChannel(ECollisionChannel _eChannel, const class UStaticMesh* _pSource, class UPrimitiveComponent* _pDestination)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGActorUtils", "CopyCollisionResponseToChannel");

	Params::BFGActorUtils_CopyCollisionResponseToChannel Parms{};

	Parms._eChannel = _eChannel;
	Parms._pSource = _pSource;
	Parms._pDestination = _pDestination;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorUtils.FindAllAttachedActors
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class AActor*>                   _apOutActors                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class AActor*                           _pRootActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorUtils::FindAllAttachedActors(TArray<class AActor*>* _apOutActors, class AActor* _pRootActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGActorUtils", "FindAllAttachedActors");

	Params::BFGActorUtils_FindAllAttachedActors Parms{};

	Parms._pRootActor = _pRootActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_apOutActors != nullptr)
		*_apOutActors = std::move(Parms._apOutActors);
}


// Function BFGCore.BFGActorUtils.GetCurrentGameplayScale
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _pWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBFGGameplayScaling                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBFGGameplayScaling UBFGActorUtils::GetCurrentGameplayScale(class UObject* _pWorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGActorUtils", "GetCurrentGameplayScale");

	Params::BFGActorUtils_GetCurrentGameplayScale Parms{};

	Parms._pWorldContextObject = _pWorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorUtils.GetLevelNameFromActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UBFGActorUtils::GetLevelNameFromActor(class AActor* _pActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGActorUtils", "GetLevelNameFromActor");

	Params::BFGActorUtils_GetLevelNameFromActor Parms{};

	Parms._pActor = _pActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorUtils.GetMeshFromActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPrimitiveComponent* UBFGActorUtils::GetMeshFromActor(class AActor* _pActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGActorUtils", "GetMeshFromActor");

	Params::BFGActorUtils_GetMeshFromActor Parms{};

	Parms._pActor = _pActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorUtils.GetMonetaryValue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EObjectWeightClass                      _eWeightClass                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGActorUtils::GetMonetaryValue(EObjectWeightClass _eWeightClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGActorUtils", "GetMonetaryValue");

	Params::BFGActorUtils_GetMonetaryValue Parms{};

	Parms._eWeightClass = _eWeightClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorUtils.GetPlayerBaseObject
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWorld*                           _pWorld                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ABFGPlayerBase*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGPlayerBase* UBFGActorUtils::GetPlayerBaseObject(class UWorld* _pWorld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGActorUtils", "GetPlayerBaseObject");

	Params::BFGActorUtils_GetPlayerBaseObject Parms{};

	Parms._pWorld = _pWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorUtils.GetPlayerCharacter
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWorld*                           _pWorld                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ABFGPlayerCharacter*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGPlayerCharacter* UBFGActorUtils::GetPlayerCharacter(class UWorld* _pWorld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGActorUtils", "GetPlayerCharacter");

	Params::BFGActorUtils_GetPlayerCharacter Parms{};

	Parms._pWorld = _pWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorUtils.GetPlayerCharacterFromWorldContext
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ABFGPlayerCharacter*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGPlayerCharacter* UBFGActorUtils::GetPlayerCharacterFromWorldContext(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGActorUtils", "GetPlayerCharacterFromWorldContext");

	Params::BFGActorUtils_GetPlayerCharacterFromWorldContext Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorUtils.GetPlayerUFO
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWorld*                           _pWorld                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ABFGPlayerUFO*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGPlayerUFO* UBFGActorUtils::GetPlayerUFO(class UWorld* _pWorld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGActorUtils", "GetPlayerUFO");

	Params::BFGActorUtils_GetPlayerUFO Parms{};

	Parms._pWorld = _pWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorUtils.GetPlayerUFOFromWorldContext
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ABFGPlayerUFO*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGPlayerUFO* UBFGActorUtils::GetPlayerUFOFromWorldContext(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGActorUtils", "GetPlayerUFOFromWorldContext");

	Params::BFGActorUtils_GetPlayerUFOFromWorldContext Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorUtils.GetPrimaryPlayerCharacter
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ABFGPlayerCharacter*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGPlayerCharacter* UBFGActorUtils::GetPrimaryPlayerCharacter(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGActorUtils", "GetPrimaryPlayerCharacter");

	Params::BFGActorUtils_GetPrimaryPlayerCharacter Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorUtils.GetPrimaryPlayerController
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APlayerController* UBFGActorUtils::GetPrimaryPlayerController(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGActorUtils", "GetPrimaryPlayerController");

	Params::BFGActorUtils_GetPrimaryPlayerController Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorUtils.GetPrimaryPlayerUFO
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ABFGPlayerUFO*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGPlayerUFO* UBFGActorUtils::GetPrimaryPlayerUFO(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGActorUtils", "GetPrimaryPlayerUFO");

	Params::BFGActorUtils_GetPrimaryPlayerUFO Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorUtils.GetStaticMeshSocketTagFromSocketName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UStaticMeshComponent*             _pComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _socketName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UBFGActorUtils::GetStaticMeshSocketTagFromSocketName(class UStaticMeshComponent* _pComponent, class FName _socketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGActorUtils", "GetStaticMeshSocketTagFromSocketName");

	Params::BFGActorUtils_GetStaticMeshSocketTagFromSocketName Parms{};

	Parms._pComponent = _pComponent;
	Parms._socketName = _socketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorUtils.GetTeleportLocationForCharacterCapsule
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vVec                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UBFGActorUtils::GetTeleportLocationForCharacterCapsule(class AActor* _pActor, const struct FVector& _vVec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGActorUtils", "GetTeleportLocationForCharacterCapsule");

	Params::BFGActorUtils_GetTeleportLocationForCharacterCapsule Parms{};

	Parms._pActor = _pActor;
	Parms._vVec = std::move(_vVec);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorUtils.GetWeightClassFromActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EObjectWeightClass                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EObjectWeightClass UBFGActorUtils::GetWeightClassFromActor(class AActor* _pActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGActorUtils", "GetWeightClassFromActor");

	Params::BFGActorUtils_GetWeightClassFromActor Parms{};

	Parms._pActor = _pActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorUtils.GetWorldFromContextObjectSafe
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _pWorldContextObject                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWorld*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWorld* UBFGActorUtils::GetWorldFromContextObjectSafe(const class UObject* _pWorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGActorUtils", "GetWorldFromContextObjectSafe");

	Params::BFGActorUtils_GetWorldFromContextObjectSafe Parms{};

	Parms._pWorldContextObject = _pWorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorUtils.ImpactEnvironmentObject
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           _pTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vAtLocation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fPhysicsImpulseStrength                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorUtils::ImpactEnvironmentObject(class AActor* _pTarget, const struct FVector& _vAtLocation, float _fPhysicsImpulseStrength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGActorUtils", "ImpactEnvironmentObject");

	Params::BFGActorUtils_ImpactEnvironmentObject Parms{};

	Parms._pTarget = _pTarget;
	Parms._vAtLocation = std::move(_vAtLocation);
	Parms._fPhysicsImpulseStrength = _fPhysicsImpulseStrength;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorUtils.IsPrespawningPoolPhase
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pWorldContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGActorUtils::IsPrespawningPoolPhase(class UObject* _pWorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGActorUtils", "IsPrespawningPoolPhase");

	Params::BFGActorUtils_IsPrespawningPoolPhase Parms{};

	Parms._pWorldContext = _pWorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorUtils.ResolveBindingArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _pWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBFGActorBinding                 _binding                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> UBFGActorUtils::ResolveBindingArray(class UObject* _pWorldContextObject, const struct FBFGActorBinding& _binding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGActorUtils", "ResolveBindingArray");

	Params::BFGActorUtils_ResolveBindingArray Parms{};

	Parms._pWorldContextObject = _pWorldContextObject;
	Parms._binding = std::move(_binding);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorUtils.ResolveBindingSingle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _pWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBFGActorBinding                 _binding                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UBFGActorUtils::ResolveBindingSingle(class UObject* _pWorldContextObject, const struct FBFGActorBinding& _binding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGActorUtils", "ResolveBindingSingle");

	Params::BFGActorUtils_ResolveBindingSingle Parms{};

	Parms._pWorldContextObject = _pWorldContextObject;
	Parms._binding = std::move(_binding);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGActorUtils.ReturnActorToPool
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorUtils::ReturnActorToPool(class AActor* _pActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGActorUtils", "ReturnActorToPool");

	Params::BFGActorUtils_ReturnActorToPool Parms{};

	Parms._pActor = _pActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorUtils.TraceNavLocationToPhysicalGround
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          VInNavLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UBFGActorUtils::TraceNavLocationToPhysicalGround(class UObject* WorldContextObject, const struct FVector& VInNavLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGActorUtils", "TraceNavLocationToPhysicalGround");

	Params::BFGActorUtils_TraceNavLocationToPhysicalGround Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.VInNavLocation = std::move(VInNavLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMothershipSubstate_MissionSelection.OnMissionAccepted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FBFGMissionSelectionInfo         _pInfo                                                 (Parm, OutParm, NativeAccessSpecifierPublic)

void UBFGMothershipSubstate_MissionSelection::OnMissionAccepted(struct FBFGMissionSelectionInfo* _pInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMothershipSubstate_MissionSelection", "OnMissionAccepted");

	Params::BFGMothershipSubstate_MissionSelection_OnMissionAccepted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_pInfo != nullptr)
		*_pInfo = std::move(Parms._pInfo);
}


// Function BFGCore.BFGMothershipSubstate_MissionSelection.OnSandboxStart
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FBFGMissionSelectionInfo         _pInfo                                                 (Parm, OutParm, NativeAccessSpecifierPublic)

void UBFGMothershipSubstate_MissionSelection::OnSandboxStart(struct FBFGMissionSelectionInfo* _pInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMothershipSubstate_MissionSelection", "OnSandboxStart");

	Params::BFGMothershipSubstate_MissionSelection_OnSandboxStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_pInfo != nullptr)
		*_pInfo = std::move(Parms._pInfo);
}


// Function BFGCore.BFGAICombatMediator.GetDistanceToFirelineSquared
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          _vFromLocation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vShooterLocation                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vTargetLocation                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGAICombatMediator::GetDistanceToFirelineSquared(const struct FVector& _vFromLocation, const struct FVector& _vShooterLocation, const struct FVector& _vTargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGAICombatMediator", "GetDistanceToFirelineSquared");

	Params::BFGAICombatMediator_GetDistanceToFirelineSquared Parms{};

	Parms._vFromLocation = std::move(_vFromLocation);
	Parms._vShooterLocation = std::move(_vShooterLocation);
	Parms._vTargetLocation = std::move(_vTargetLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAICombatMediator.GetTargetTracker
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGAICombatMediator_TargetTracker*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGAICombatMediator_TargetTracker* UBFGAICombatMediator::GetTargetTracker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAICombatMediator", "GetTargetTracker");

	Params::BFGAICombatMediator_GetTargetTracker Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAICombatMediator.GetClosestAttackingNPC
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          _vFromLocation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pAttackTarget                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TScriptInterface<class IBFGAICombatParticipant>_pExcludedPawn                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
// TScriptInterface<class IBFGAICombatParticipant>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)

TScriptInterface<class IBFGAICombatParticipant> UBFGAICombatMediator::GetClosestAttackingNPC(const struct FVector& _vFromLocation, class AActor* _pAttackTarget, TScriptInterface<class IBFGAICombatParticipant> _pExcludedPawn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAICombatMediator", "GetClosestAttackingNPC");

	Params::BFGAICombatMediator_GetClosestAttackingNPC Parms{};

	Parms._vFromLocation = std::move(_vFromLocation);
	Parms._pAttackTarget = _pAttackTarget;
	Parms._pExcludedPawn = _pExcludedPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAICombatMediator.GetClosestNPCForTargetsAndStates
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          _vFromLocation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   _apTargets                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<EBFGCombatState_NPC>             _aCombatStates                                         (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TScriptInterface<class IBFGAICombatParticipant>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)

TScriptInterface<class IBFGAICombatParticipant> UBFGAICombatMediator::GetClosestNPCForTargetsAndStates(const struct FVector& _vFromLocation, const TArray<class AActor*>& _apTargets, const TArray<EBFGCombatState_NPC>& _aCombatStates) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAICombatMediator", "GetClosestNPCForTargetsAndStates");

	Params::BFGAICombatMediator_GetClosestNPCForTargetsAndStates Parms{};

	Parms._vFromLocation = std::move(_vFromLocation);
	Parms._apTargets = std::move(_apTargets);
	Parms._aCombatStates = std::move(_aCombatStates);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAICombatMediator.GetClosestParticipant
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          _vFromLocation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vOutIntendedLocation                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            _pExcludedPawn                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TScriptInterface<class IBFGAICombatParticipant>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)

TScriptInterface<class IBFGAICombatParticipant> UBFGAICombatMediator::GetClosestParticipant(const struct FVector& _vFromLocation, struct FVector* _vOutIntendedLocation, class APawn* _pExcludedPawn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAICombatMediator", "GetClosestParticipant");

	Params::BFGAICombatMediator_GetClosestParticipant Parms{};

	Parms._vFromLocation = std::move(_vFromLocation);
	Parms._pExcludedPawn = _pExcludedPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_vOutIntendedLocation != nullptr)
		*_vOutIntendedLocation = std::move(Parms._vOutIntendedLocation);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAICombatMediator.GetCombatState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           _pAttackTarget                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TScriptInterface<class IBFGAICombatParticipant>_pParticipant                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
// EBFGCombatState_NPC                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBFGCombatState_NPC UBFGAICombatMediator::GetCombatState(class AActor* _pAttackTarget, TScriptInterface<class IBFGAICombatParticipant> _pParticipant) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAICombatMediator", "GetCombatState");

	Params::BFGAICombatMediator_GetCombatState Parms{};

	Parms._pAttackTarget = _pAttackTarget;
	Parms._pParticipant = _pParticipant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAICombatMediator.GetDistanceToClosestFireline
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          _vFromLocation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            _pExcludedPawn                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGAICombatMediator::GetDistanceToClosestFireline(const struct FVector& _vFromLocation, class APawn* _pExcludedPawn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAICombatMediator", "GetDistanceToClosestFireline");

	Params::BFGAICombatMediator_GetDistanceToClosestFireline Parms{};

	Parms._vFromLocation = std::move(_vFromLocation);
	Parms._pExcludedPawn = _pExcludedPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAICombatMediator.GetDistanceToClosestParticipant
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          _vFromLocation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            _pExcludedPawn                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGAICombatMediator::GetDistanceToClosestParticipant(const struct FVector& _vFromLocation, class APawn* _pExcludedPawn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAICombatMediator", "GetDistanceToClosestParticipant");

	Params::BFGAICombatMediator_GetDistanceToClosestParticipant Parms{};

	Parms._vFromLocation = std::move(_vFromLocation);
	Parms._pExcludedPawn = _pExcludedPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAICombatMediator.GetDistanceToParticipant
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          _vFromLocation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TScriptInterface<class IBFGAICombatParticipant>_pParticipant                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGAICombatMediator::GetDistanceToParticipant(const struct FVector& _vFromLocation, TScriptInterface<class IBFGAICombatParticipant> _pParticipant) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAICombatMediator", "GetDistanceToParticipant");

	Params::BFGAICombatMediator_GetDistanceToParticipant Parms{};

	Parms._vFromLocation = std::move(_vFromLocation);
	Parms._pParticipant = _pParticipant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAICombatMediator.IsTargeted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           _pAttackTarget                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGAICombatMediator::IsTargeted(class AActor* _pAttackTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAICombatMediator", "IsTargeted");

	Params::BFGAICombatMediator_IsTargeted Parms{};

	Parms._pAttackTarget = _pAttackTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGBurningGround.GetManager
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class UBFGBurningGroundManager*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGBurningGroundManager* ABFGBurningGround::GetManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBurningGround", "GetManager");

	Params::BFGBurningGround_GetManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGBurningGround.ConvertWorldToRenderTarget
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          _vWorldPos                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D ABFGBurningGround::ConvertWorldToRenderTarget(const struct FVector& _vWorldPos) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBurningGround", "ConvertWorldToRenderTarget");

	Params::BFGBurningGround_ConvertWorldToRenderTarget Parms{};

	Parms._vWorldPos = std::move(_vWorldPos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_Mothership_Submenu.Accept
// (Native, Public, BlueprintCallable)

void UBFGWidget_Mothership_Submenu::Accept()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_Submenu", "Accept");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BFGCore.BFGWidget_Mothership_Submenu.ActionMenuContext__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// TArray<struct FBFGTreeMenuContext>      _aMenuContextPath                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_Mothership_Submenu::ActionMenuContext__DelegateSignature(const TArray<struct FBFGTreeMenuContext>& _aMenuContextPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_Submenu", "ActionMenuContext__DelegateSignature");

	Params::BFGWidget_Mothership_Submenu_ActionMenuContext__DelegateSignature Parms{};

	Parms._aMenuContextPath = std::move(_aMenuContextPath);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Mothership_Submenu.OnDisabledInternal
// (Native, Event, Protected, BlueprintEvent)

void UBFGWidget_Mothership_Submenu::OnDisabledInternal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_Submenu", "OnDisabledInternal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_Mothership_Submenu.OnEnabledInternal
// (Native, Event, Protected, BlueprintEvent)

void UBFGWidget_Mothership_Submenu::OnEnabledInternal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_Submenu", "OnEnabledInternal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_Mothership_Submenu.PlayAnimationHide
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   _fPlaybackSpeed                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Mothership_Submenu::PlayAnimationHide(float _fPlaybackSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_Submenu", "PlayAnimationHide");

	Params::BFGWidget_Mothership_Submenu_PlayAnimationHide Parms{};

	Parms._fPlaybackSpeed = _fPlaybackSpeed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Mothership_Submenu.PlayAnimationShow
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   _fPlaybackSpeed                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Mothership_Submenu::PlayAnimationShow(float _fPlaybackSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_Submenu", "PlayAnimationShow");

	Params::BFGWidget_Mothership_Submenu_PlayAnimationShow Parms{};

	Parms._fPlaybackSpeed = _fPlaybackSpeed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Mothership_MissionSelect.EnableExploreInfo
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Mothership_MissionSelect::EnableExploreInfo(bool _bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_MissionSelect", "EnableExploreInfo");

	Params::BFGWidget_Mothership_MissionSelect_EnableExploreInfo Parms{};

	Parms._bEnabled = _bEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Mothership_MissionSelect.GetNodeByWorldIdentifier
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             _oWorldName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGWidgetMissionSelectionNode*   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGWidgetMissionSelectionNode* UBFGWidget_Mothership_MissionSelect::GetNodeByWorldIdentifier(class FName _oWorldName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_MissionSelect", "GetNodeByWorldIdentifier");

	Params::BFGWidget_Mothership_MissionSelect_GetNodeByWorldIdentifier Parms{};

	Parms._oWorldName = _oWorldName;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_Mothership_MissionSelect.OnNodeClicked
// (Final, Native, Protected)
// Parameters:
// class UBFGWidgetMissionSelectionNode*   _pNode                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Mothership_MissionSelect::OnNodeClicked(class UBFGWidgetMissionSelectionNode* _pNode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_MissionSelect", "OnNodeClicked");

	Params::BFGWidget_Mothership_MissionSelect_OnNodeClicked Parms{};

	Parms._pNode = _pNode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_Mothership_MissionSelect.OnNodeDoubleClicked
// (Final, Native, Protected)
// Parameters:
// class UBFGWidgetMissionSelectionNode*   _pNode                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Mothership_MissionSelect::OnNodeDoubleClicked(class UBFGWidgetMissionSelectionNode* _pNode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_MissionSelect", "OnNodeDoubleClicked");

	Params::BFGWidget_Mothership_MissionSelect_OnNodeDoubleClicked Parms{};

	Parms._pNode = _pNode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_Mothership_MissionSelect.OnSFX_NodeSelected
// (Event, Public, BlueprintEvent)

void UBFGWidget_Mothership_MissionSelect::OnSFX_NodeSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_MissionSelect", "OnSFX_NodeSelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_Mothership_MissionSelect.SetChallengeDisabled
// (Event, Public, BlueprintEvent)
// Parameters:
// EBFGChallengeType                       _eType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bDisabled                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Mothership_MissionSelect::SetChallengeDisabled(EBFGChallengeType _eType, bool _bDisabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_MissionSelect", "SetChallengeDisabled");

	Params::BFGWidget_Mothership_MissionSelect_SetChallengeDisabled Parms{};

	Parms._eType = _eType;
	Parms._bDisabled = _bDisabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Mothership_MissionSelect.SetChallengeRating
// (Event, Public, BlueprintEvent)
// Parameters:
// EBFGChallengeType                       _eType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iRating                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Mothership_MissionSelect::SetChallengeRating(EBFGChallengeType _eType, int32 _iRating)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_MissionSelect", "SetChallengeRating");

	Params::BFGWidget_Mothership_MissionSelect_SetChallengeRating Parms{};

	Parms._eType = _eType;
	Parms._iRating = _iRating;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Mothership_MissionSelect.SetDroneCount
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   _iMax                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iCurrent                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Mothership_MissionSelect::SetDroneCount(int32 _iMax, int32 _iCurrent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_MissionSelect", "SetDroneCount");

	Params::BFGWidget_Mothership_MissionSelect_SetDroneCount Parms{};

	Parms._iMax = _iMax;
	Parms._iCurrent = _iCurrent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Mothership_MissionSelect.SwitchToNewMissionStyle
// (Event, Public, BlueprintEvent)

void UBFGWidget_Mothership_MissionSelect::SwitchToNewMissionStyle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_MissionSelect", "SwitchToNewMissionStyle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_Mothership_MissionSelect.SwitchToSandboxStyle
// (Event, Public, BlueprintEvent)

void UBFGWidget_Mothership_MissionSelect::SwitchToSandboxStyle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_MissionSelect", "SwitchToSandboxStyle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_Mothership_MissionSelect.UpdateDescription
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _oDescription                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_Mothership_MissionSelect::UpdateDescription(const class FText& _oDescription)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_MissionSelect", "UpdateDescription");

	Params::BFGWidget_Mothership_MissionSelect_UpdateDescription Parms{};

	Parms._oDescription = std::move(_oDescription);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Mothership_MissionSelect.UpdateImage
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FSlateBrush                      _oImage                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_Mothership_MissionSelect::UpdateImage(const struct FSlateBrush& _oImage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_MissionSelect", "UpdateImage");

	Params::BFGWidget_Mothership_MissionSelect_UpdateImage Parms{};

	Parms._oImage = std::move(_oImage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Mothership_MissionSelect.UpdateTitle
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _oTitle                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_Mothership_MissionSelect::UpdateTitle(const class FText& _oTitle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_MissionSelect", "UpdateTitle");

	Params::BFGWidget_Mothership_MissionSelect_UpdateTitle Parms{};

	Parms._oTitle = std::move(_oTitle);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BFGCore.BFGWidget_SelectorItem.ActionInt__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int32                                   _iInteger                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_SelectorItem::ActionInt__DelegateSignature(int32 _iInteger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_SelectorItem", "ActionInt__DelegateSignature");

	Params::BFGWidget_SelectorItem_ActionInt__DelegateSignature Parms{};

	Parms._iInteger = _iInteger;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_SelectorItem.GetElementImage
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UImage*                           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UImage* UBFGWidget_SelectorItem::GetElementImage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_SelectorItem", "GetElementImage");

	Params::BFGWidget_SelectorItem_GetElementImage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_SelectorItem.OnButtonPressed
// (Final, Native, Protected, BlueprintCallable)

void UBFGWidget_SelectorItem::OnButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_SelectorItem", "OnButtonPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_SelectorItem.SetSelected
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bSelected                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_SelectorItem::SetSelected(bool _bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_SelectorItem", "SetSelected");

	Params::BFGWidget_SelectorItem_SetSelected Parms{};

	Parms._bSelected = _bSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGAICombatMediator_TargetTracker.OnObstaclePlaced
// (Final, Native, Private)
// Parameters:
// class ABFGDynamicObstacle_Sphere*       _pSphere                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAICombatMediator_TargetTracker::OnObstaclePlaced(class ABFGDynamicObstacle_Sphere* _pSphere)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAICombatMediator_TargetTracker", "OnObstaclePlaced");

	Params::BFGAICombatMediator_TargetTracker_OnObstaclePlaced Parms{};

	Parms._pSphere = _pSphere;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BFGCore.BFGWidget_DialogOption_ComboBox.ActionComboBox__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UBFGWidget_DialogOption_ComboBox* _pComboBox                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_DialogOption_ComboBox::ActionComboBox__DelegateSignature(class UBFGWidget_DialogOption_ComboBox* _pComboBox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption_ComboBox", "ActionComboBox__DelegateSignature");

	Params::BFGWidget_DialogOption_ComboBox_ActionComboBox__DelegateSignature Parms{};

	Parms._pComboBox = _pComboBox;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_DialogOption_ComboBox.ButtonLeftClicked
// (Final, Native, Protected, BlueprintCallable)

void UBFGWidget_DialogOption_ComboBox::ButtonLeftClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption_ComboBox", "ButtonLeftClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_DialogOption_ComboBox.ButtonRightClicked
// (Final, Native, Protected, BlueprintCallable)

void UBFGWidget_DialogOption_ComboBox::ButtonRightClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption_ComboBox", "ButtonRightClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_DialogOption_ComboBox.SetCurrentOptionText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _strText                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_DialogOption_ComboBox::SetCurrentOptionText(const class FText& _strText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption_ComboBox", "SetCurrentOptionText");

	Params::BFGWidget_DialogOption_ComboBox_SetCurrentOptionText Parms{};

	Parms._strText = std::move(_strText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGAimUtils.AimBallisticProjectileAtMovingTarget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _WorldContext                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBFGAimBallisticProjectileParameters_rParameters                                           (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FBFGAimBallisticProjectileResponseReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FBFGAimBallisticProjectileResponse UBFGAimUtils::AimBallisticProjectileAtMovingTarget(class UObject* _WorldContext, const struct FBFGAimBallisticProjectileParameters& _rParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGAimUtils", "AimBallisticProjectileAtMovingTarget");

	Params::BFGAimUtils_AimBallisticProjectileAtMovingTarget Parms{};

	Parms._WorldContext = _WorldContext;
	Parms._rParameters = std::move(_rParameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGCreditsLetter.OnCompHit
// (Final, Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*              _pHitComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pOtherActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              _pOtherComp                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _pNormalImpulse                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       _pHit                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ABFGCreditsLetter::OnCompHit(class UPrimitiveComponent* _pHitComp, class AActor* _pOtherActor, class UPrimitiveComponent* _pOtherComp, const struct FVector& _pNormalImpulse, const struct FHitResult& _pHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCreditsLetter", "OnCompHit");

	Params::BFGCreditsLetter_OnCompHit Parms{};

	Parms._pHitComp = _pHitComp;
	Parms._pOtherActor = _pOtherActor;
	Parms._pOtherComp = _pOtherComp;
	Parms._pNormalImpulse = std::move(_pNormalImpulse);
	Parms._pHit = std::move(_pHit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_GameOptionsCategory.AddOptionToLayout
// (Event, Public, BlueprintEvent)
// Parameters:
// class UBFGWidget_DialogOption*          _pOption                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GameOptionsCategory::AddOptionToLayout(class UBFGWidget_DialogOption* _pOption)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameOptionsCategory", "AddOptionToLayout");

	Params::BFGWidget_GameOptionsCategory_AddOptionToLayout Parms{};

	Parms._pOption = _pOption;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_GameOptionsCategory.ScrollIntoView
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UBFGWidget_DialogOption*          _pDialogOption                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GameOptionsCategory::ScrollIntoView(class UBFGWidget_DialogOption* _pDialogOption)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameOptionsCategory", "ScrollIntoView");

	Params::BFGWidget_GameOptionsCategory_ScrollIntoView Parms{};

	Parms._pDialogOption = _pDialogOption;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_GameOptionsGamepad.AddPanelToLayout
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UBFGWidget_GamepadPanel*          _pPanel                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GameOptionsGamepad::AddPanelToLayout(class UBFGWidget_GamepadPanel* _pPanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameOptionsGamepad", "AddPanelToLayout");

	Params::BFGWidget_GameOptionsGamepad_AddPanelToLayout Parms{};

	Parms._pPanel = _pPanel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_GameOptionsGamepad.OnLeftButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UBFGWidget_GameOptionsGamepad::OnLeftButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameOptionsGamepad", "OnLeftButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_GameOptionsGamepad.OnRightButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UBFGWidget_GameOptionsGamepad::OnRightButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameOptionsGamepad", "OnRightButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAINetworkPathChaseMediator.OnAgentDespawned
// (Final, Native, Protected)
// Parameters:
// class UBFGNetworkPathAgent*             _pAgent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAINetworkPathChaseMediator::OnAgentDespawned(class UBFGNetworkPathAgent* _pAgent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAINetworkPathChaseMediator", "OnAgentDespawned");

	Params::BFGAINetworkPathChaseMediator_OnAgentDespawned Parms{};

	Parms._pAgent = _pAgent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAISystem.OnWorldLoading
// (Final, Native, Private)
// Parameters:
// class UBFGGameInstance*                 _pGameInstance                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWorld*                           _pWorld                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAISystem::OnWorldLoading(class UBFGGameInstance* _pGameInstance, class UWorld* _pWorld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAISystem", "OnWorldLoading");

	Params::BFGAISystem_OnWorldLoading Parms{};

	Parms._pGameInstance = _pGameInstance;
	Parms._pWorld = _pWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAISystem.SetAIAmmoShotDelayLogBase
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _fNewBase                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAISystem::SetAIAmmoShotDelayLogBase(float _fNewBase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAISystem", "SetAIAmmoShotDelayLogBase");

	Params::BFGAISystem_SetAIAmmoShotDelayLogBase Parms{};

	Parms._fNewBase = _fNewBase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAISystem.SetAIAmmoShotDelayScalingFactor
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _fNewFactor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAISystem::SetAIAmmoShotDelayScalingFactor(float _fNewFactor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAISystem", "SetAIAmmoShotDelayScalingFactor");

	Params::BFGAISystem_SetAIAmmoShotDelayScalingFactor Parms{};

	Parms._fNewFactor = _fNewFactor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAISystem.SetAICombatReloadLogBase
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _fNewBase                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAISystem::SetAICombatReloadLogBase(float _fNewBase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAISystem", "SetAICombatReloadLogBase");

	Params::BFGAISystem_SetAICombatReloadLogBase Parms{};

	Parms._fNewBase = _fNewBase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAISystem.SetAICombatReloadTimeScalingFactor
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _fNewFactor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAISystem::SetAICombatReloadTimeScalingFactor(float _fNewFactor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAISystem", "SetAICombatReloadTimeScalingFactor");

	Params::BFGAISystem_SetAICombatReloadTimeScalingFactor Parms{};

	Parms._fNewFactor = _fNewFactor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAISystem.ToggleAIAlertDebug
// (Final, Exec, Native, Public, BlueprintCallable)

void UBFGAISystem::ToggleAIAlertDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAISystem", "ToggleAIAlertDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAISystem.ToggleAICombatDebug
// (Final, Exec, Native, Public, BlueprintCallable)

void UBFGAISystem::ToggleAICombatDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAISystem", "ToggleAICombatDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAISystem.ToggleAIDetectionDebug
// (Final, Exec, Native, Public, BlueprintCallable)

void UBFGAISystem::ToggleAIDetectionDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAISystem", "ToggleAIDetectionDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAISystem.ToggleAIRotationDebug
// (Final, Exec, Native, Public, BlueprintCallable)

void UBFGAISystem::ToggleAIRotationDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAISystem", "ToggleAIRotationDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAISystem.ToggleAIStatVariablesDebug
// (Final, Exec, Native, Public, BlueprintCallable)

void UBFGAISystem::ToggleAIStatVariablesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAISystem", "ToggleAIStatVariablesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAISystem.GetAlertSystemManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGAlertSystemManager*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGAlertSystemManager* UBFGAISystem::GetAlertSystemManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAISystem", "GetAlertSystemManager");

	Params::BFGAISystem_GetAlertSystemManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAISystem.GetCombatMediator
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGAICombatMediator*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGAICombatMediator* UBFGAISystem::GetCombatMediator() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAISystem", "GetCombatMediator");

	Params::BFGAISystem_GetCombatMediator Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAISystem.GetDyanmicObstaclePool_Box
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGDynamicObstaclePool_Box*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGDynamicObstaclePool_Box* UBFGAISystem::GetDyanmicObstaclePool_Box() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAISystem", "GetDyanmicObstaclePool_Box");

	Params::BFGAISystem_GetDyanmicObstaclePool_Box Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAISystem.GetDyanmicObstaclePool_Sphere
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGDynamicObstaclePool_Sphere*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGDynamicObstaclePool_Sphere* UBFGAISystem::GetDyanmicObstaclePool_Sphere() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAISystem", "GetDyanmicObstaclePool_Sphere");

	Params::BFGAISystem_GetDyanmicObstaclePool_Sphere Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAISystem.GetVisibilityCheckerPool_Box
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGVisibilityCheckerPool_Box*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGVisibilityCheckerPool_Box* UBFGAISystem::GetVisibilityCheckerPool_Box() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAISystem", "GetVisibilityCheckerPool_Box");

	Params::BFGAISystem_GetVisibilityCheckerPool_Box Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_Timer.GetDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGQuest_Timer::GetDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Timer", "GetDuration");

	Params::BFGQuest_Timer_GetDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_Timer.GetDurationTimespan
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimespan UBFGQuest_Timer::GetDurationTimespan() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Timer", "GetDurationTimespan");

	Params::BFGQuest_Timer_GetDurationTimespan Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_Timer.GetRemainingTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGQuest_Timer::GetRemainingTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Timer", "GetRemainingTime");

	Params::BFGQuest_Timer_GetRemainingTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_Timer.GetRemainingTimespan
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimespan UBFGQuest_Timer::GetRemainingTimespan() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Timer", "GetRemainingTimespan");

	Params::BFGQuest_Timer_GetRemainingTimespan Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_Timer.IsHUDVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGQuest_Timer::IsHUDVisible() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Timer", "IsHUDVisible");

	Params::BFGQuest_Timer_IsHUDVisible Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAIUtils.CheckFriendlyFire
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APawn*                            _pThis                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ABFGWeapon*                       _pSpecificWeapon                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UBFGAIUtils::CheckFriendlyFire(class APawn* _pThis, class AActor* _pTarget, class ABFGWeapon* _pSpecificWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGAIUtils", "CheckFriendlyFire");

	Params::BFGAIUtils_CheckFriendlyFire Parms{};

	Parms._pThis = _pThis;
	Parms._pTarget = _pTarget;
	Parms._pSpecificWeapon = _pSpecificWeapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAIUtils.ComputeClosestNetworkPathLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          _vLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fMaxRadius                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          _pWorldContextObject                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UBFGAIUtils::ComputeClosestNetworkPathLocation(const struct FVector& _vLocation, float _fMaxRadius, const class UObject* _pWorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGAIUtils", "ComputeClosestNetworkPathLocation");

	Params::BFGAIUtils_ComputeClosestNetworkPathLocation Parms{};

	Parms._vLocation = std::move(_vLocation);
	Parms._fMaxRadius = _fMaxRadius;
	Parms._pWorldContextObject = _pWorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAIUtils.FindMainGameplayTag
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGameplayTagContainer            _enemyTagContainer                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UBFGAIUtils::FindMainGameplayTag(const struct FGameplayTagContainer& _enemyTagContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGAIUtils", "FindMainGameplayTag");

	Params::BFGAIUtils_FindMainGameplayTag Parms{};

	Parms._enemyTagContainer = std::move(_enemyTagContainer);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAIUtils.GetAttackTarget
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APawn*                            _pPlayer                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UBFGAIUtils::GetAttackTarget(class APawn* _pPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGAIUtils", "GetAttackTarget");

	Params::BFGAIUtils_GetAttackTarget Parms{};

	Parms._pPlayer = _pPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAIUtils.GetBehaviorState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBFGBehaviourState_NPC                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBFGBehaviourState_NPC UBFGAIUtils::GetBehaviorState(class AActor* _pActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGAIUtils", "GetBehaviorState");

	Params::BFGAIUtils_GetBehaviorState Parms{};

	Parms._pActor = _pActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAIUtils.GetCryptosTarget
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APawn*                            _pPlayer                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UBFGAIUtils::GetCryptosTarget(class APawn* _pPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGAIUtils", "GetCryptosTarget");

	Params::BFGAIUtils_GetCryptosTarget Parms{};

	Parms._pPlayer = _pPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAIUtils.GetCurrentWeapon
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _pThis                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ABFGWeapon*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGWeapon* UBFGAIUtils::GetCurrentWeapon(class AActor* _pThis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGAIUtils", "GetCurrentWeapon");

	Params::BFGAIUtils_GetCurrentWeapon Parms{};

	Parms._pThis = _pThis;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAIUtils.GetNPCCurrentWeapon
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _pThis                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ABFGWeapon*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGWeapon* UBFGAIUtils::GetNPCCurrentWeapon(class AActor* _pThis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGAIUtils", "GetNPCCurrentWeapon");

	Params::BFGAIUtils_GetNPCCurrentWeapon Parms{};

	Parms._pThis = _pThis;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAIUtils.GetNPCWeapon
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _pThis                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftClassPtr<class UClass>             _specificClass                                         (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ABFGWeapon*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGWeapon* UBFGAIUtils::GetNPCWeapon(class AActor* _pThis, TSoftClassPtr<class UClass> _specificClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGAIUtils", "GetNPCWeapon");

	Params::BFGAIUtils_GetNPCWeapon Parms{};

	Parms._pThis = _pThis;
	Parms._specificClass = _specificClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAIUtils.GetPawnAndController
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           _pPawnOrController                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bRequirePawn                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            _pOutPawn                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bRequireController                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      _pOutController                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGAIUtils::GetPawnAndController(class AActor* _pPawnOrController, bool _bRequirePawn, class APawn** _pOutPawn, bool _bRequireController, class AController** _pOutController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGAIUtils", "GetPawnAndController");

	Params::BFGAIUtils_GetPawnAndController Parms{};

	Parms._pPawnOrController = _pPawnOrController;
	Parms._bRequirePawn = _bRequirePawn;
	Parms._bRequireController = _bRequireController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_pOutPawn != nullptr)
		*_pOutPawn = Parms._pOutPawn;

	if (_pOutController != nullptr)
		*_pOutController = Parms._pOutController;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAIUtils.GetSensorGameplayOverrideBehavior
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _pWorldContextObject                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBFGSensorGameplayOverrideBehavior      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBFGSensorGameplayOverrideBehavior UBFGAIUtils::GetSensorGameplayOverrideBehavior(const class UObject* _pWorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGAIUtils", "GetSensorGameplayOverrideBehavior");

	Params::BFGAIUtils_GetSensorGameplayOverrideBehavior Parms{};

	Parms._pWorldContextObject = _pWorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAIUtils.GetTargetType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _pTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBFGTargetType                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBFGTargetType UBFGAIUtils::GetTargetType(class AActor* _pTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGAIUtils", "GetTargetType");

	Params::BFGAIUtils_GetTargetType Parms{};

	Parms._pTarget = _pTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAIUtils.GetTargetTypeOfCurrentTarget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBFGTargetType                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBFGTargetType UBFGAIUtils::GetTargetTypeOfCurrentTarget(class AActor* _pActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGAIUtils", "GetTargetTypeOfCurrentTarget");

	Params::BFGAIUtils_GetTargetTypeOfCurrentTarget Parms{};

	Parms._pActor = _pActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAIUtils.HasLineOfFire
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APawn*                            _pThis                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pOther                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ABFGWeapon*                       _pSpecificWeapon                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGAIUtils::HasLineOfFire(class APawn* _pThis, class AActor* _pOther, class ABFGWeapon* _pSpecificWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGAIUtils", "HasLineOfFire");

	Params::BFGAIUtils_HasLineOfFire Parms{};

	Parms._pThis = _pThis;
	Parms._pOther = _pOther;
	Parms._pSpecificWeapon = _pSpecificWeapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAIUtils.HasLineOfSight
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _pThis                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pOther                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bCheckSightPie                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGAIUtils::HasLineOfSight(class AActor* _pThis, class AActor* _pOther, bool _bCheckSightPie)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGAIUtils", "HasLineOfSight");

	Params::BFGAIUtils_HasLineOfSight Parms{};

	Parms._pThis = _pThis;
	Parms._pOther = _pOther;
	Parms._bCheckSightPie = _bCheckSightPie;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAIUtils.IsActorAlive
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGAIUtils::IsActorAlive(class AActor* _pActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGAIUtils", "IsActorAlive");

	Params::BFGAIUtils_IsActorAlive Parms{};

	Parms._pActor = _pActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAIUtils.IsActorInAir
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           _pTargetActor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGAIUtils::IsActorInAir(class AActor* _pTargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGAIUtils", "IsActorInAir");

	Params::BFGAIUtils_IsActorInAir Parms{};

	Parms._pTargetActor = _pTargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAIUtils.IsActorInvisible
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGAIUtils::IsActorInvisible(class AActor* _pActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGAIUtils", "IsActorInvisible");

	Params::BFGAIUtils_IsActorInvisible Parms{};

	Parms._pActor = _pActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAIUtils.IsActorRotatingInPlace
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vOutRotatngDirection                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGAIUtils::IsActorRotatingInPlace(class AActor* _pActor, struct FVector* _vOutRotatngDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGAIUtils", "IsActorRotatingInPlace");

	Params::BFGAIUtils_IsActorRotatingInPlace Parms{};

	Parms._pActor = _pActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_vOutRotatngDirection != nullptr)
		*_vOutRotatngDirection = std::move(Parms._vOutRotatngDirection);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAIUtils.IsInMissionBoundaries
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          _vVector                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          _pWorldContextObject                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGAIUtils::IsInMissionBoundaries(const struct FVector& _vVector, const class UObject* _pWorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGAIUtils", "IsInMissionBoundaries");

	Params::BFGAIUtils_IsInMissionBoundaries Parms{};

	Parms._vVector = std::move(_vVector);
	Parms._pWorldContextObject = _pWorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAIUtils.IsPositionInViewFrustrum
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class ULocalPlayer*                     _pLocalPlayer                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _position                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGAIUtils::IsPositionInViewFrustrum(class ULocalPlayer* _pLocalPlayer, const struct FVector& _position, float _fRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGAIUtils", "IsPositionInViewFrustrum");

	Params::BFGAIUtils_IsPositionInViewFrustrum Parms{};

	Parms._pLocalPlayer = _pLocalPlayer;
	Parms._position = std::move(_position);
	Parms._fRadius = _fRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAIUtils.SetSensorGameplayOverrideBehavior
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EBFGSensorGameplayOverrideBehavior      _eBehavior                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          _pWorldContextObject                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGAIUtils::SetSensorGameplayOverrideBehavior(EBFGSensorGameplayOverrideBehavior _eBehavior, const class UObject* _pWorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGAIUtils", "SetSensorGameplayOverrideBehavior");

	Params::BFGAIUtils_SetSensorGameplayOverrideBehavior Parms{};

	Parms._eBehavior = _eBehavior;
	Parms._pWorldContextObject = _pWorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAlertResponseLevelState.DespawnAll
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bImmediate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAlertResponseLevelState::DespawnAll(bool _bImmediate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAlertResponseLevelState", "DespawnAll");

	Params::BFGAlertResponseLevelState_DespawnAll Parms{};

	Parms._bImmediate = _bImmediate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAlertResponseLevelState.OnAgentDead
// (Final, Native, Protected)
// Parameters:
// class UBFGNetworkPathAgent*             _pAgent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bIsAttched                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAlertResponseLevelState::OnAgentDead(class UBFGNetworkPathAgent* _pAgent, class AActor* _pActor, bool _bIsAttched)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAlertResponseLevelState", "OnAgentDead");

	Params::BFGAlertResponseLevelState_OnAgentDead Parms{};

	Parms._pAgent = _pAgent;
	Parms._pActor = _pActor;
	Parms._bIsAttched = _bIsAttched;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAlertResponseLevelState.OnAgentDestroyed
// (Final, Native, Protected)
// Parameters:
// class UBFGNetworkPathAgent*             _pAgent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAlertResponseLevelState::OnAgentDestroyed(class UBFGNetworkPathAgent* _pAgent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAlertResponseLevelState", "OnAgentDestroyed");

	Params::BFGAlertResponseLevelState_OnAgentDestroyed Parms{};

	Parms._pAgent = _pAgent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAlertResponseLevelState.OnEnter
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBFGAlertResponseLevelState*      _pPreviousState                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAlertResponseLevelState::OnEnter(class UBFGAlertResponseLevelState* _pPreviousState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAlertResponseLevelState", "OnEnter");

	Params::BFGAlertResponseLevelState_OnEnter Parms{};

	Parms._pPreviousState = _pPreviousState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAlertResponseLevelState.OnLeave
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UBFGAlertResponseLevelState::OnLeave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAlertResponseLevelState", "OnLeave");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAlertResponseLevelState.OnVehiclePassengersOut
// (Final, Native, Protected)
// Parameters:
// class UBFGNetworkPathAgent*             _pAgent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAlertResponseLevelState::OnVehiclePassengersOut(class UBFGNetworkPathAgent* _pAgent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAlertResponseLevelState", "OnVehiclePassengersOut");

	Params::BFGAlertResponseLevelState_OnVehiclePassengersOut Parms{};

	Parms._pAgent = _pAgent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAlertResponseLevelState.Update
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   _fDeltaTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAlertResponseLevelState::Update(float _fDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAlertResponseLevelState", "Update");

	Params::BFGAlertResponseLevelState_Update Parms{};

	Parms._fDeltaTime = _fDeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BFGCore.BFGWidget_GameOptions.Action__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UBFGWidget_GameOptions::Action__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameOptions", "Action__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction BFGCore.BFGWidget_GameOptions.ActionOptionFloat__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class FName                             _oOptionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _iOptionValue                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GameOptions::ActionOptionFloat__DelegateSignature(class FName _oOptionName, float _iOptionValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameOptions", "ActionOptionFloat__DelegateSignature");

	Params::BFGWidget_GameOptions_ActionOptionFloat__DelegateSignature Parms{};

	Parms._oOptionName = _oOptionName;
	Parms._iOptionValue = _iOptionValue;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BFGCore.BFGWidget_GameOptions.ActionOptionInt__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class FName                             _oOptionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iOptionValue                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GameOptions::ActionOptionInt__DelegateSignature(class FName _oOptionName, int32 _iOptionValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameOptions", "ActionOptionInt__DelegateSignature");

	Params::BFGWidget_GameOptions_ActionOptionInt__DelegateSignature Parms{};

	Parms._oOptionName = _oOptionName;
	Parms._iOptionValue = _iOptionValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_GameOptions.AddCategoryButtonToLayout
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UBFGWidget_DialogOption_Customizable*_pCategory                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GameOptions::AddCategoryButtonToLayout(class UBFGWidget_DialogOption_Customizable* _pCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameOptions", "AddCategoryButtonToLayout");

	Params::BFGWidget_GameOptions_AddCategoryButtonToLayout Parms{};

	Parms._pCategory = _pCategory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_GameOptions.AddCategoryToLayout
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UBFGWidget_GameOptionsCategory*   _pCategory                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GameOptions::AddCategoryToLayout(class UBFGWidget_GameOptionsCategory* _pCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameOptions", "AddCategoryToLayout");

	Params::BFGWidget_GameOptions_AddCategoryToLayout Parms{};

	Parms._pCategory = _pCategory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_GameOptions.AddKeyAssignmentWindowToLayout
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UBFGWidget_KeyAssignmentWindow*   _pWindow                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GameOptions::AddKeyAssignmentWindowToLayout(class UBFGWidget_KeyAssignmentWindow* _pWindow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameOptions", "AddKeyAssignmentWindowToLayout");

	Params::BFGWidget_GameOptions_AddKeyAssignmentWindowToLayout Parms{};

	Parms._pWindow = _pWindow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_GameOptions.OnCategoryEntrySelected
// (Final, Native, Protected)
// Parameters:
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GameOptions::OnCategoryEntrySelected(int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameOptions", "OnCategoryEntrySelected");

	Params::BFGWidget_GameOptions_OnCategoryEntrySelected Parms{};

	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_GameOptions.OnComboBoxOptionChanged
// (Final, Native, Protected)
// Parameters:
// class UBFGWidget_DialogOption_ComboBox* _pComboBox                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GameOptions::OnComboBoxOptionChanged(class UBFGWidget_DialogOption_ComboBox* _pComboBox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameOptions", "OnComboBoxOptionChanged");

	Params::BFGWidget_GameOptions_OnComboBoxOptionChanged Parms{};

	Parms._pComboBox = _pComboBox;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_GameOptions.OnKeyAssignmentBegin
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UBFGWidget_DialogOption_AssignKey*_pOption                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             _oKey                                                  (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GameOptions::OnKeyAssignmentBegin(class UBFGWidget_DialogOption_AssignKey* _pOption, const struct FKey& _oKey, int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameOptions", "OnKeyAssignmentBegin");

	Params::BFGWidget_GameOptions_OnKeyAssignmentBegin Parms{};

	Parms._pOption = _pOption;
	Parms._oKey = std::move(_oKey);
	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_GameOptions.OnKeyAssignmentDone
// (Final, Native, Protected)

void UBFGWidget_GameOptions::OnKeyAssignmentDone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameOptions", "OnKeyAssignmentDone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_GameOptions.OnResetButtonClicked
// (Final, Native, Public, BlueprintCallable)

void UBFGWidget_GameOptions::OnResetButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameOptions", "OnResetButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_GameOptions.OnSaveButtonClicked
// (Final, Native, Public, BlueprintCallable)

void UBFGWidget_GameOptions::OnSaveButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameOptions", "OnSaveButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_GameOptions.OnSelectorOptionChanged
// (Final, Native, Protected)
// Parameters:
// class UBFGWidget_DialogOption_Selector* _pSelector                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GameOptions::OnSelectorOptionChanged(class UBFGWidget_DialogOption_Selector* _pSelector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameOptions", "OnSelectorOptionChanged");

	Params::BFGWidget_GameOptions_OnSelectorOptionChanged Parms{};

	Parms._pSelector = _pSelector;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_GameOptions.OnSliderOptionChanged
// (Final, Native, Protected)
// Parameters:
// class UBFGWidget_DialogOption_Slider*   _pSlider                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GameOptions::OnSliderOptionChanged(class UBFGWidget_DialogOption_Slider* _pSlider)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameOptions", "OnSliderOptionChanged");

	Params::BFGWidget_GameOptions_OnSliderOptionChanged Parms{};

	Parms._pSlider = _pSlider;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_GameOptions.PlayTestSampleSFX
// (Event, Public, BlueprintEvent)

void UBFGWidget_GameOptions::PlayTestSampleSFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameOptions", "PlayTestSampleSFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_GameOptions.PlayTestSampleUI
// (Event, Public, BlueprintEvent)

void UBFGWidget_GameOptions::PlayTestSampleUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameOptions", "PlayTestSampleUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_GameOptions.PlayTestSampleVoice
// (Event, Public, BlueprintEvent)

void UBFGWidget_GameOptions::PlayTestSampleVoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameOptions", "PlayTestSampleVoice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_GameOptions.RemoveKeyAssignmentWindowFromLayout
// (Event, Protected, BlueprintEvent)

void UBFGWidget_GameOptions::RemoveKeyAssignmentWindowFromLayout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameOptions", "RemoveKeyAssignmentWindowFromLayout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_GameOptions.SetCategoryLabel
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _strText                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_GameOptions::SetCategoryLabel(const class FText& _strText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameOptions", "SetCategoryLabel");

	Params::BFGWidget_GameOptions_SetCategoryLabel Parms{};

	Parms._strText = std::move(_strText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_GameOptions.ShowAcceptHint
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _bShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GameOptions::ShowAcceptHint(bool _bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameOptions", "ShowAcceptHint");

	Params::BFGWidget_GameOptions_ShowAcceptHint Parms{};

	Parms._bShow = _bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_GameOptions.ShowControllerHints
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _bShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GameOptions::ShowControllerHints(bool _bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameOptions", "ShowControllerHints");

	Params::BFGWidget_GameOptions_ShowControllerHints Parms{};

	Parms._bShow = _bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_GameOptions.ShowEditHint
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _bShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GameOptions::ShowEditHint(bool _bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameOptions", "ShowEditHint");

	Params::BFGWidget_GameOptions_ShowEditHint Parms{};

	Parms._bShow = _bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_GameOptions.UpdateControllerHints
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UBFGWidget_DialogOption*          _pOption                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GameOptions::UpdateControllerHints(class UBFGWidget_DialogOption* _pOption)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameOptions", "UpdateControllerHints");

	Params::BFGWidget_GameOptions_UpdateControllerHints Parms{};

	Parms._pOption = _pOption;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_GameOptions.UpdateEntry_KeyInput
// (Final, Native, Public)
// Parameters:
// class FName                             _oOptionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GameOptions::UpdateEntry_KeyInput(class FName _oOptionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameOptions", "UpdateEntry_KeyInput");

	Params::BFGWidget_GameOptions_UpdateEntry_KeyInput Parms{};

	Parms._oOptionName = _oOptionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWeapon.AbortReload
// (Native, Public, BlueprintCallable)

void ABFGWeapon::AbortReload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "AbortReload");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWeapon.CanStartWeapon
// (Native, Public, BlueprintCallable)
// Parameters:
// EWeaponFireAttemptResult                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EWeaponFireAttemptResult ABFGWeapon::CanStartWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "CanStartWeapon");

	Params::BFGWeapon_CanStartWeapon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon.Disable
// (Final, Native, Public, BlueprintCallable)

void ABFGWeapon::Disable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "Disable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWeapon.DisplayTargetDecal
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fStartDelay                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fDuration                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGWeapon::DisplayTargetDecal(const struct FVector& Position, float Radius, float _fStartDelay, float _fDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "DisplayTargetDecal");

	Params::BFGWeapon_DisplayTargetDecal Parms{};

	Parms.Position = std::move(Position);
	Parms.Radius = Radius;
	Parms._fStartDelay = _fStartDelay;
	Parms._fDuration = _fDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWeapon.Enable
// (Final, Native, Public, BlueprintCallable)

void ABFGWeapon::Enable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "Enable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWeapon.GetAvailableMaximumShotCount
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABFGWeapon::GetAvailableMaximumShotCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "GetAvailableMaximumShotCount");

	Params::BFGWeapon_GetAvailableMaximumShotCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon.GetAvailableShotCount
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABFGWeapon::GetAvailableShotCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "GetAvailableShotCount");

	Params::BFGWeapon_GetAvailableShotCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon.GetAvailableShotRatio
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABFGWeapon::GetAvailableShotRatio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "GetAvailableShotRatio");

	Params::BFGWeapon_GetAvailableShotRatio Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon.GetMuzzleLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ABFGWeapon::GetMuzzleLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "GetMuzzleLocation");

	Params::BFGWeapon_GetMuzzleLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon.HitReaction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _pOwner                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pDamageCauser                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGDamageType*                   _pDamageType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            _pInstigator                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGWeapon::HitReaction(class AActor* _pOwner, class AActor* _pDamageCauser, class UBFGDamageType* _pDamageType, class APawn* _pInstigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "HitReaction");

	Params::BFGWeapon_HitReaction Parms{};

	Parms._pOwner = _pOwner;
	Parms._pDamageCauser = _pDamageCauser;
	Parms._pDamageType = _pDamageType;
	Parms._pInstigator = _pInstigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWeapon.OnDisable
// (Native, Event, Protected, BlueprintEvent)

void ABFGWeapon::OnDisable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "OnDisable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWeapon.OnEnable
// (Native, Event, Protected, BlueprintEvent)

void ABFGWeapon::OnEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "OnEnable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWeapon.OnFailedFireAttempt
// (Event, Public, BlueprintEvent)
// Parameters:
// EWeaponFireAttemptResult                _weaponFireResult                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGWeapon::OnFailedFireAttempt(EWeaponFireAttemptResult _weaponFireResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "OnFailedFireAttempt");

	Params::BFGWeapon_OnFailedFireAttempt Parms{};

	Parms._weaponFireResult = _weaponFireResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWeapon.OnHitReaction
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           _pDamageCauser                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            _pInstigator                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGWeapon::OnHitReaction(class AActor* _pDamageCauser, class APawn* _pInstigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "OnHitReaction");

	Params::BFGWeapon_OnHitReaction Parms{};

	Parms._pDamageCauser = _pDamageCauser;
	Parms._pInstigator = _pInstigator;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWeapon.OnHoldEnd
// (Native, Event, Protected, BlueprintEvent)

void ABFGWeapon::OnHoldEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "OnHoldEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWeapon.OnHoldStart
// (Native, Event, Protected, BlueprintEvent)

void ABFGWeapon::OnHoldStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "OnHoldStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWeapon.OnReloadEnd
// (Native, Event, Public, BlueprintEvent)

void ABFGWeapon::OnReloadEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "OnReloadEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWeapon.OnReloadStart
// (Native, Event, Public, BlueprintEvent)

void ABFGWeapon::OnReloadStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "OnReloadStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWeapon.OnShotImpact
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FHitResult                       _oHitResult                                            (Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ABFGWeapon::OnShotImpact(const struct FHitResult& _oHitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "OnShotImpact");

	Params::BFGWeapon_OnShotImpact Parms{};

	Parms._oHitResult = std::move(_oHitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWeapon.OnStartedFire
// (Native, Event, Protected, BlueprintEvent)

void ABFGWeapon::OnStartedFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "OnStartedFire");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWeapon.OnStoppedFire
// (Native, Event, Protected, BlueprintEvent)

void ABFGWeapon::OnStoppedFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "OnStoppedFire");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWeapon.OnTelegraphEnd
// (Native, Event, Protected, BlueprintEvent)

void ABFGWeapon::OnTelegraphEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "OnTelegraphEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWeapon.OnTelegraphStart
// (Native, Event, Protected, BlueprintEvent)

void ABFGWeapon::OnTelegraphStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "OnTelegraphStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWeapon.OnWeaponFire
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             _nSocketName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGWeapon::OnWeaponFire(class FName _nSocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "OnWeaponFire");

	Params::BFGWeapon_OnWeaponFire Parms{};

	Parms._nSocketName = _nSocketName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWeapon.SetAddedReloadTimeFactor
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   _fReloadTimeFactor                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGWeapon::SetAddedReloadTimeFactor(float _fReloadTimeFactor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "SetAddedReloadTimeFactor");

	Params::BFGWeapon_SetAddedReloadTimeFactor Parms{};

	Parms._fReloadTimeFactor = _fReloadTimeFactor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWeapon.SetAiming
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bAiming                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fStopAimingDelay                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGWeapon::SetAiming(bool _bAiming, float _fStopAimingDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "SetAiming");

	Params::BFGWeapon_SetAiming Parms{};

	Parms._bAiming = _bAiming;
	Parms._fStopAimingDelay = _fStopAimingDelay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWeapon.SetEquipmentManager
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBFGActorComponent_EquipmentManager*_pManager                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGWeapon::SetEquipmentManager(class UBFGActorComponent_EquipmentManager* _pManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "SetEquipmentManager");

	Params::BFGWeapon_SetEquipmentManager Parms{};

	Parms._pManager = _pManager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWeapon.SetHolder
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           _pHolder                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGWeapon::SetHolder(class AActor* _pHolder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "SetHolder");

	Params::BFGWeapon_SetHolder Parms{};

	Parms._pHolder = _pHolder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWeapon.SetRequestWeaponFire
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bRequestFireEnabled                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGWeapon::SetRequestWeaponFire(bool _bRequestFireEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "SetRequestWeaponFire");

	Params::BFGWeapon_SetRequestWeaponFire Parms{};

	Parms._bRequestFireEnabled = _bRequestFireEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWeapon.SetWidgetVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESlateVisibility                        _eVisibility                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGWeapon::SetWidgetVisibility(ESlateVisibility _eVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "SetWidgetVisibility");

	Params::BFGWeapon_SetWidgetVisibility Parms{};

	Parms._eVisibility = _eVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWeapon.TriggerReload
// (Final, Native, Public, BlueprintCallable)

void ABFGWeapon::TriggerReload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "TriggerReload");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWeapon.GetAmmoRatio
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABFGWeapon::GetAmmoRatio() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "GetAmmoRatio");

	Params::BFGWeapon_GetAmmoRatio Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon.GetAnimPosture
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBFGAnimation_WeaponPosture             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBFGAnimation_WeaponPosture ABFGWeapon::GetAnimPosture() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "GetAnimPosture");

	Params::BFGWeapon_GetAnimPosture Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon.GetBFGGameState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ABFGGameState*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGGameState* ABFGWeapon::GetBFGGameState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "GetBFGGameState");

	Params::BFGWeapon_GetBFGGameState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon.GetCurrentAimData
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FCharacterAimData                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

struct FCharacterAimData ABFGWeapon::GetCurrentAimData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "GetCurrentAimData");

	Params::BFGWeapon_GetCurrentAimData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon.GetCurrentLocketTarget
// (Final, Native, Public, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* ABFGWeapon::GetCurrentLocketTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "GetCurrentLocketTarget");

	Params::BFGWeapon_GetCurrentLocketTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon.GetEquipTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABFGWeapon::GetEquipTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "GetEquipTime");

	Params::BFGWeapon_GetEquipTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon.GetFirstAutolockedTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* ABFGWeapon::GetFirstAutolockedTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "GetFirstAutolockedTarget");

	Params::BFGWeapon_GetFirstAutolockedTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon.GetHolderSafe
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* ABFGWeapon::GetHolderSafe() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "GetHolderSafe");

	Params::BFGWeapon_GetHolderSafe Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon.GetIsDisabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGWeapon::GetIsDisabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "GetIsDisabled");

	Params::BFGWeapon_GetIsDisabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon.GetMaximumRange
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           _pTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABFGWeapon::GetMaximumRange(class AActor* _pTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "GetMaximumRange");

	Params::BFGWeapon_GetMaximumRange Parms{};

	Parms._pTarget = _pTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon.GetMinimalRange
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           _pTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABFGWeapon::GetMinimalRange(class AActor* _pTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "GetMinimalRange");

	Params::BFGWeapon_GetMinimalRange Parms{};

	Parms._pTarget = _pTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon.GetOptimalRange
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           _pTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABFGWeapon::GetOptimalRange(class AActor* _pTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "GetOptimalRange");

	Params::BFGWeapon_GetOptimalRange Parms{};

	Parms._pTarget = _pTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon.GetProjectileRange
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           _pTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABFGWeapon::GetProjectileRange(class AActor* _pTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "GetProjectileRange");

	Params::BFGWeapon_GetProjectileRange Parms{};

	Parms._pTarget = _pTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon.GetReloadTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABFGWeapon::GetReloadTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "GetReloadTime");

	Params::BFGWeapon_GetReloadTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon.GetTimeReloading
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABFGWeapon::GetTimeReloading() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "GetTimeReloading");

	Params::BFGWeapon_GetTimeReloading Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon.GetWeaponName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText ABFGWeapon::GetWeaponName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "GetWeaponName");

	Params::BFGWeapon_GetWeaponName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon.IsAiming
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGWeapon::IsAiming() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "IsAiming");

	Params::BFGWeapon_IsAiming Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon.IsEquip
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGWeapon::IsEquip() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "IsEquip");

	Params::BFGWeapon_IsEquip Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon.IsHolding
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGWeapon::IsHolding() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "IsHolding");

	Params::BFGWeapon_IsHolding Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon.IsOverheated
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGWeapon::IsOverheated() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "IsOverheated");

	Params::BFGWeapon_IsOverheated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon.IsReloading
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGWeapon::IsReloading() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "IsReloading");

	Params::BFGWeapon_IsReloading Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon.IsRequestWeaponFireEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGWeapon::IsRequestWeaponFireEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "IsRequestWeaponFireEnabled");

	Params::BFGWeapon_IsRequestWeaponFireEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon.IsShooting
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGWeapon::IsShooting() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "IsShooting");

	Params::BFGWeapon_IsShooting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon.IsTelegraphing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGWeapon::IsTelegraphing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "IsTelegraphing");

	Params::BFGWeapon_IsTelegraphing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon.TrySetHitActorOnFire
// (Final, Native, Protected, HasOutParams, BlueprintCallable, Const)
// Parameters:
// struct FHitResult                       _hitResult                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ABFGWeapon::TrySetHitActorOnFire(const struct FHitResult& _hitResult) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon", "TrySetHitActorOnFire");

	Params::BFGWeapon_TrySetHitActorOnFire Parms{};

	Parms._hitResult = std::move(_hitResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWeapon_BaseProjectile.OnShootProjectile
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class ABFGProjectile_Object*            _pProjectile                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGWeapon_BaseProjectile::OnShootProjectile(class ABFGProjectile_Object* _pProjectile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon_BaseProjectile", "OnShootProjectile");

	Params::BFGWeapon_BaseProjectile_OnShootProjectile Parms{};

	Parms._pProjectile = _pProjectile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWeapon_BaseProjectile.OnShootProjectileWave
// (Event, Protected, BlueprintEvent)

void ABFGWeapon_BaseProjectile::OnShootProjectileWave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon_BaseProjectile", "OnShootProjectileWave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWeapon_Enemy.OnSalvoEnded
// (Native, Event, Protected, BlueprintEvent)

void ABFGWeapon_Enemy::OnSalvoEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon_Enemy", "OnSalvoEnded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWeapon_Enemy.IsBusyFiringSalvo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGWeapon_Enemy::IsBusyFiringSalvo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon_Enemy", "IsBusyFiringSalvo");

	Params::BFGWeapon_Enemy_IsBusyFiringSalvo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMissionWorldState.GetNextQuestTitle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UBFGMissionWorldState::GetNextQuestTitle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionWorldState", "GetNextQuestTitle");

	Params::BFGMissionWorldState_GetNextQuestTitle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAlertSystemManager.IsUndetected
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGAlertSystemManager::IsUndetected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAlertSystemManager", "IsUndetected");

	Params::BFGAlertSystemManager_IsUndetected Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAlertSystemManager.LowerResponseLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAlertSystemManager::LowerResponseLevel(int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAlertSystemManager", "LowerResponseLevel");

	Params::BFGAlertSystemManager_LowerResponseLevel Parms{};

	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAlertSystemManager.OnChangeAlarmState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _iResponseLevelIndex                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAlertSystemManager::OnChangeAlarmState(int32 _iResponseLevelIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAlertSystemManager", "OnChangeAlarmState");

	Params::BFGAlertSystemManager_OnChangeAlarmState Parms{};

	Parms._iResponseLevelIndex = _iResponseLevelIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAlertSystemManager.OnPlayerRespawnAtCheckPoint
// (Final, Native, Public, BlueprintCallable)

void UBFGAlertSystemManager::OnPlayerRespawnAtCheckPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAlertSystemManager", "OnPlayerRespawnAtCheckPoint");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAlertSystemManager.Reset
// (Final, Native, Public, BlueprintCallable)

void UBFGAlertSystemManager::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAlertSystemManager", "Reset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAlertSystemManager.ResetDecay
// (Final, Native, Public, BlueprintCallable)

void UBFGAlertSystemManager::ResetDecay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAlertSystemManager", "ResetDecay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAlertSystemManager.RiseResponseLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAlertSystemManager::RiseResponseLevel(int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAlertSystemManager", "RiseResponseLevel");

	Params::BFGAlertSystemManager_RiseResponseLevel Parms{};

	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAlertSystemManager.SetMaxResponseLevelIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAlertSystemManager::SetMaxResponseLevelIndex(int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAlertSystemManager", "SetMaxResponseLevelIndex");

	Params::BFGAlertSystemManager_SetMaxResponseLevelIndex Parms{};

	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAlertSystemManager.SetResponseLevelIndex
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bReportPlayerLKP                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAlertSystemManager::SetResponseLevelIndex(int32 _iIndex, bool _bReportPlayerLKP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAlertSystemManager", "SetResponseLevelIndex");

	Params::BFGAlertSystemManager_SetResponseLevelIndex Parms{};

	Parms._iIndex = _iIndex;
	Parms._bReportPlayerLKP = _bReportPlayerLKP;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAlertSystemManager.SetResponseLevelLockedMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bLocked                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAlertSystemManager::SetResponseLevelLockedMode(bool _bLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAlertSystemManager", "SetResponseLevelLockedMode");

	Params::BFGAlertSystemManager_SetResponseLevelLockedMode Parms{};

	Parms._bLocked = _bLocked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAlertSystemManager.SetSpawningEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAlertSystemManager::SetSpawningEnabled(bool _bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAlertSystemManager", "SetSpawningEnabled");

	Params::BFGAlertSystemManager_SetSpawningEnabled Parms{};

	Parms._bEnabled = _bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAlertSystemManager.SetStealthWarning
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBFGAlertSystemState                    _state                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAlertSystemManager::SetStealthWarning(bool _bEnabled, EBFGAlertSystemState _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAlertSystemManager", "SetStealthWarning");

	Params::BFGAlertSystemManager_SetStealthWarning Parms{};

	Parms._bEnabled = _bEnabled;
	Parms._state = _state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAlertSystemManager.SetUndetected
// (Final, Native, Public, BlueprintCallable)

void UBFGAlertSystemManager::SetUndetected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAlertSystemManager", "SetUndetected");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAlertSystemManager.GetCurrentAlertSystemState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBFGAlertSystemState                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBFGAlertSystemState UBFGAlertSystemManager::GetCurrentAlertSystemState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAlertSystemManager", "GetCurrentAlertSystemState");

	Params::BFGAlertSystemManager_GetCurrentAlertSystemState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAlertSystemManager.GetCurrentResponseLevelIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGAlertSystemManager::GetCurrentResponseLevelIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAlertSystemManager", "GetCurrentResponseLevelIndex");

	Params::BFGAlertSystemManager_GetCurrentResponseLevelIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAlertSystemManager.GetCurrentResponseLevelName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UBFGAlertSystemManager::GetCurrentResponseLevelName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAlertSystemManager", "GetCurrentResponseLevelName");

	Params::BFGAlertSystemManager_GetCurrentResponseLevelName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAlertSystemManager.GetDetectionCuriosityScale
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGAlertSystemManager::GetDetectionCuriosityScale() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAlertSystemManager", "GetDetectionCuriosityScale");

	Params::BFGAlertSystemManager_GetDetectionCuriosityScale Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAlertSystemManager.GetMaxResponseLevelIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGAlertSystemManager::GetMaxResponseLevelIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAlertSystemManager", "GetMaxResponseLevelIndex");

	Params::BFGAlertSystemManager_GetMaxResponseLevelIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAlertSystemManager.GetPotentialResponseValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGAlertSystemManager::GetPotentialResponseValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAlertSystemManager", "GetPotentialResponseValue");

	Params::BFGAlertSystemManager_GetPotentialResponseValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAlertSystemManager.GetResponseValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGAlertSystemManager::GetResponseValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAlertSystemManager", "GetResponseValue");

	Params::BFGAlertSystemManager_GetResponseValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAlertSystemManager.GetSeenState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBFGAlertSystemSeenState                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBFGAlertSystemSeenState UBFGAlertSystemManager::GetSeenState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAlertSystemManager", "GetSeenState");

	Params::BFGAlertSystemManager_GetSeenState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAlertSystemManager.IsResponseLevelLocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGAlertSystemManager::IsResponseLevelLocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAlertSystemManager", "IsResponseLevelLocked");

	Params::BFGAlertSystemManager_IsResponseLevelLocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAlertSystemManager.IsSpawningEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGAlertSystemManager::IsSpawningEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAlertSystemManager", "IsSpawningEnabled");

	Params::BFGAlertSystemManager_IsSpawningEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGCrowdScriptConSettings.GetSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBFGCrowdScriptConSettings*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGCrowdScriptConSettings* UBFGCrowdScriptConSettings::GetSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGCrowdScriptConSettings", "GetSettings");

	Params::BFGCrowdScriptConSettings_GetSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_ElementInteract.GetSparseQuestCounterVariables
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UBFGVariable*>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UBFGVariable*> UBFGQuest_ElementInteract::GetSparseQuestCounterVariables() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_ElementInteract", "GetSparseQuestCounterVariables");

	Params::BFGQuest_ElementInteract_GetSparseQuestCounterVariables Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAmbientSoundManager.FindAllSoundsMatchingAllGameplayTags
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer            _tagContainer                                          (Parm, NativeAccessSpecifierPublic)
// TArray<class ABFGAmbientSound*>         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class ABFGAmbientSound*> UBFGAmbientSoundManager::FindAllSoundsMatchingAllGameplayTags(const struct FGameplayTagContainer& _tagContainer) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAmbientSoundManager", "FindAllSoundsMatchingAllGameplayTags");

	Params::BFGAmbientSoundManager_FindAllSoundsMatchingAllGameplayTags Parms{};

	Parms._tagContainer = std::move(_tagContainer);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAmbientSoundManager.FindAllSoundsMatchingAnyGameplayTags
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer            _tagContainer                                          (Parm, NativeAccessSpecifierPublic)
// TArray<class ABFGAmbientSound*>         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class ABFGAmbientSound*> UBFGAmbientSoundManager::FindAllSoundsMatchingAnyGameplayTags(const struct FGameplayTagContainer& _tagContainer) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAmbientSoundManager", "FindAllSoundsMatchingAnyGameplayTags");

	Params::BFGAmbientSoundManager_FindAllSoundsMatchingAnyGameplayTags Parms{};

	Parms._tagContainer = std::move(_tagContainer);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAmbientSoundManager.FindAllSoundsMatchingGameplayTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     _tag                                                   (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ABFGAmbientSound*>         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class ABFGAmbientSound*> UBFGAmbientSoundManager::FindAllSoundsMatchingGameplayTag(const struct FGameplayTag& _tag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAmbientSoundManager", "FindAllSoundsMatchingGameplayTag");

	Params::BFGAmbientSoundManager_FindAllSoundsMatchingGameplayTag Parms{};

	Parms._tag = std::move(_tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon_UFO_QuantumDeconstructor.OnUFODealtDamage
// (Final, Native, Public)
// Parameters:
// class AActor*                           _pTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fDamage                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bFatal                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UDamageType>          _damageType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGWeapon_UFO_QuantumDeconstructor::OnUFODealtDamage(class AActor* _pTarget, float _fDamage, bool _bFatal, TSubclassOf<class UDamageType> _damageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon_UFO_QuantumDeconstructor", "OnUFODealtDamage");

	Params::BFGWeapon_UFO_QuantumDeconstructor_OnUFODealtDamage Parms{};

	Parms._pTarget = _pTarget;
	Parms._fDamage = _fDamage;
	Parms._bFatal = _bFatal;
	Parms._damageType = _damageType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVariableAction_MissionGroup_Lock.GetActionName_MissionGroupLock
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableAction_MissionGroup_Lock::GetActionName_MissionGroupLock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableAction_MissionGroup_Lock", "GetActionName_MissionGroupLock");

	Params::BFGVariableAction_MissionGroup_Lock_GetActionName_MissionGroupLock Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNetworkPathAgent.OnAttachedActorChange
// (Final, Native, Protected)
// Parameters:
// class UBFGNetworkPathAgent*             _pAgent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bIsAttached                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGNetworkPathAgent::OnAttachedActorChange(class UBFGNetworkPathAgent* _pAgent, class AActor* _pActor, bool _bIsAttached)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNetworkPathAgent", "OnAttachedActorChange");

	Params::BFGNetworkPathAgent_OnAttachedActorChange Parms{};

	Parms._pAgent = _pAgent;
	Parms._pActor = _pActor;
	Parms._bIsAttached = _bIsAttached;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNetworkPathAgent.OnLevelRemovedFromWorld
// (Final, Native, Protected)
// Parameters:
// class ULevel*                           _pLevel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWorld*                           _pWorld                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGNetworkPathAgent::OnLevelRemovedFromWorld(class ULevel* _pLevel, class UWorld* _pWorld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNetworkPathAgent", "OnLevelRemovedFromWorld");

	Params::BFGNetworkPathAgent_OnLevelRemovedFromWorld Parms{};

	Parms._pLevel = _pLevel;
	Parms._pWorld = _pWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAnimation_Variables.GetSquenceVariationsCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBFGAnimation_Sequence                  _sequence                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGAnimation_Variables::GetSquenceVariationsCount(EBFGAnimation_Sequence _sequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimation_Variables", "GetSquenceVariationsCount");

	Params::BFGAnimation_Variables_GetSquenceVariationsCount Parms{};

	Parms._sequence = _sequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGDamageCauserInterface.GetDamageInitiator
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* IBFGDamageCauserInterface::GetDamageInitiator() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDamageCauserInterface", "GetDamageInitiator");

	Params::BFGDamageCauserInterface_GetDamageInitiator Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGDamageCauserInterface.GetMentalAbilityClass
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UBFGMentalAbilityBase>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UBFGMentalAbilityBase> IBFGDamageCauserInterface::GetMentalAbilityClass() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDamageCauserInterface", "GetMentalAbilityClass");

	Params::BFGDamageCauserInterface_GetMentalAbilityClass Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGDamageCauserInterface.GetWeaponClass
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class ABFGWeapon>           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class ABFGWeapon> IBFGDamageCauserInterface::GetWeaponClass() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDamageCauserInterface", "GetWeaponClass");

	Params::BFGDamageCauserInterface_GetWeaponClass Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon_BaseRay.RechargeWeapon
// (Native, Protected)
// Parameters:
// float                                   _fInDelta                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGWeapon_BaseRay::RechargeWeapon(float _fInDelta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon_BaseRay", "RechargeWeapon");

	Params::BFGWeapon_BaseRay_RechargeWeapon Parms{};

	Parms._fInDelta = _fInDelta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_LoadingScreenBase.LoadingScreen_Begin
// (Final, Native, Protected)
// Parameters:
// class FString                           _strMapName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_LoadingScreenBase::LoadingScreen_Begin(const class FString& _strMapName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_LoadingScreenBase", "LoadingScreen_Begin");

	Params::BFGGameFlowState_LoadingScreenBase_LoadingScreen_Begin Parms{};

	Parms._strMapName = std::move(_strMapName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_LoadingScreenBase.LoadingScreen_Begin_Internal
// (Final, Native, Protected)
// Parameters:
// class FString                           _strMapName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bShowBackgroundPicture                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_LoadingScreenBase::LoadingScreen_Begin_Internal(const class FString& _strMapName, bool _bShowBackgroundPicture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_LoadingScreenBase", "LoadingScreen_Begin_Internal");

	Params::BFGGameFlowState_LoadingScreenBase_LoadingScreen_Begin_Internal Parms{};

	Parms._strMapName = std::move(_strMapName);
	Parms._bShowBackgroundPicture = _bShowBackgroundPicture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_LoadingScreenBase.LoadingScreen_End
// (Final, Native, Protected)
// Parameters:
// class UWorld*                           _pWorld                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_LoadingScreenBase::LoadingScreen_End(class UWorld* _pWorld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_LoadingScreenBase", "LoadingScreen_End");

	Params::BFGGameFlowState_LoadingScreenBase_LoadingScreen_End Parms{};

	Parms._pWorld = _pWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_LoadMap.StartMapLoad
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBFGGameInstance*                 _pGameInstance                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _strLevelName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSaveToSlot                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bDoNotFadeIn                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bForceFadeIn                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGGameFlowState_LoadMap::StartMapLoad(class UBFGGameInstance* _pGameInstance, const class FString& _strLevelName, int32 _iSaveToSlot, bool _bDoNotFadeIn, bool _bForceFadeIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGGameFlowState_LoadMap", "StartMapLoad");

	Params::BFGGameFlowState_LoadMap_StartMapLoad Parms{};

	Parms._pGameInstance = _pGameInstance;
	Parms._strLevelName = std::move(_strLevelName);
	Parms._iSaveToSlot = _iSaveToSlot;
	Parms._bDoNotFadeIn = _bDoNotFadeIn;
	Parms._bForceFadeIn = _bForceFadeIn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_HUD_SceneObjectHighlighter.AddHighlighterToCanvas
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UBFGWidgetSceneObjectHighlighter* _pHighlighter                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_SceneObjectHighlighter::AddHighlighterToCanvas(class UBFGWidgetSceneObjectHighlighter* _pHighlighter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_SceneObjectHighlighter", "AddHighlighterToCanvas");

	Params::BFGWidget_HUD_SceneObjectHighlighter_AddHighlighterToCanvas Parms{};

	Parms._pHighlighter = _pHighlighter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGDataAsset_StaticMesh.GetFromComponent
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UStaticMeshComponent*             _pComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGDataAsset_StaticMesh*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGDataAsset_StaticMesh* UBFGDataAsset_StaticMesh::GetFromComponent(class UStaticMeshComponent* _pComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGDataAsset_StaticMesh", "GetFromComponent");

	Params::BFGDataAsset_StaticMesh_GetFromComponent Parms{};

	Parms._pComponent = _pComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGDataAsset_StaticMesh.GetFromMesh
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UStaticMesh*                      _pMesh                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGDataAsset_StaticMesh*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGDataAsset_StaticMesh* UBFGDataAsset_StaticMesh::GetFromMesh(class UStaticMesh* _pMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGDataAsset_StaticMesh", "GetFromMesh");

	Params::BFGDataAsset_StaticMesh_GetFromMesh Parms{};

	Parms._pMesh = _pMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction BFGCore.BFGVoiceoverPlaybackComponent.BFGVoiceoverPlaybackCompoment_Event__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UBFGVoiceoverPlaybackComponent::BFGVoiceoverPlaybackCompoment_Event__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVoiceoverPlaybackComponent", "BFGVoiceoverPlaybackCompoment_Event__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGVoiceoverPlaybackComponent.CancelPlaybackItem
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                                   _fOverriddenFadeoutDuration                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGVoiceoverPlaybackComponent::CancelPlaybackItem(float _fOverriddenFadeoutDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVoiceoverPlaybackComponent", "CancelPlaybackItem");

	Params::BFGVoiceoverPlaybackComponent_CancelPlaybackItem Parms{};

	Parms._fOverriddenFadeoutDuration = _fOverriddenFadeoutDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVoiceoverPlaybackComponent.DoEndPlayback
// (Final, Native, Public, BlueprintCallable)

void UBFGVoiceoverPlaybackComponent::DoEndPlayback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVoiceoverPlaybackComponent", "DoEndPlayback");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVoiceoverPlaybackComponent.SetPauseItem
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bIsPaused                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGVoiceoverPlaybackComponent::SetPauseItem(bool _bIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVoiceoverPlaybackComponent", "SetPauseItem");

	Params::BFGVoiceoverPlaybackComponent_SetPauseItem Parms{};

	Parms._bIsPaused = _bIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVoiceoverPlaybackComponent.StartPlaybackItem
// (Native, Event, Public, BlueprintEvent)

void UBFGVoiceoverPlaybackComponent::StartPlaybackItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVoiceoverPlaybackComponent", "StartPlaybackItem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGDynamicSpacer.SetMaxSize
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        _vMaxSize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGDynamicSpacer::SetMaxSize(const struct FVector2D& _vMaxSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDynamicSpacer", "SetMaxSize");

	Params::BFGDynamicSpacer_SetMaxSize Parms{};

	Parms._vMaxSize = std::move(_vMaxSize);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGDynamicSpacer.SetSizeMultiplier
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        _vMultiplier                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGDynamicSpacer::SetSizeMultiplier(const struct FVector2D& _vMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDynamicSpacer", "SetSizeMultiplier");

	Params::BFGDynamicSpacer_SetSizeMultiplier Parms{};

	Parms._vMultiplier = std::move(_vMultiplier);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAnimationInstance.AddActivePostPivotAnimationDistanceLookup
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UAnimSequence*                    _pAnimation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAnimationInstance::AddActivePostPivotAnimationDistanceLookup(class UAnimSequence* _pAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "AddActivePostPivotAnimationDistanceLookup");

	Params::BFGAnimationInstance_AddActivePostPivotAnimationDistanceLookup Parms{};

	Parms._pAnimation = _pAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAnimationInstance.AddActivePrePivotAnimationDistanceLookup
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UAnimSequence*                    _pAnimation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAnimationInstance::AddActivePrePivotAnimationDistanceLookup(class UAnimSequence* _pAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "AddActivePrePivotAnimationDistanceLookup");

	Params::BFGAnimationInstance_AddActivePrePivotAnimationDistanceLookup Parms{};

	Parms._pAnimation = _pAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAnimationInstance.AddActiveStartAnimationDistanceLookup
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UAnimSequence*                    _pAnimation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAnimationInstance::AddActiveStartAnimationDistanceLookup(class UAnimSequence* _pAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "AddActiveStartAnimationDistanceLookup");

	Params::BFGAnimationInstance_AddActiveStartAnimationDistanceLookup Parms{};

	Parms._pAnimation = _pAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAnimationInstance.AddActiveStartTurnAnimationDistanceLookup
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UAnimSequence*                    _pAnimation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAnimationInstance::AddActiveStartTurnAnimationDistanceLookup(class UAnimSequence* _pAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "AddActiveStartTurnAnimationDistanceLookup");

	Params::BFGAnimationInstance_AddActiveStartTurnAnimationDistanceLookup Parms{};

	Parms._pAnimation = _pAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAnimationInstance.AddActiveStopAnimationDistanceLookup
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UAnimSequence*                    _pAnimation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAnimationInstance::AddActiveStopAnimationDistanceLookup(class UAnimSequence* _pAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "AddActiveStopAnimationDistanceLookup");

	Params::BFGAnimationInstance_AddActiveStopAnimationDistanceLookup Parms{};

	Parms._pAnimation = _pAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAnimationInstance.AddActiveTurningAnimationDistanceLookup
// (Native, Protected, BlueprintCallable)
// Parameters:
// class UAnimSequence*                    _pAnimation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAnimationInstance::AddActiveTurningAnimationDistanceLookup(class UAnimSequence* _pAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "AddActiveTurningAnimationDistanceLookup");

	Params::BFGAnimationInstance_AddActiveTurningAnimationDistanceLookup Parms{};

	Parms._pAnimation = _pAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAnimationInstance.ClearActivePostPivotAnimationDistanceLookups
// (Final, Native, Protected, BlueprintCallable)

void UBFGAnimationInstance::ClearActivePostPivotAnimationDistanceLookups()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "ClearActivePostPivotAnimationDistanceLookups");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAnimationInstance.ClearActivePrePivotAnimationDistanceLookups
// (Final, Native, Protected, BlueprintCallable)

void UBFGAnimationInstance::ClearActivePrePivotAnimationDistanceLookups()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "ClearActivePrePivotAnimationDistanceLookups");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAnimationInstance.ClearActiveStartAnimationDistanceLookups
// (Final, Native, Protected, BlueprintCallable)

void UBFGAnimationInstance::ClearActiveStartAnimationDistanceLookups()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "ClearActiveStartAnimationDistanceLookups");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAnimationInstance.ClearActiveStartTurnAnimationDistanceLookups
// (Final, Native, Protected, BlueprintCallable)

void UBFGAnimationInstance::ClearActiveStartTurnAnimationDistanceLookups()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "ClearActiveStartTurnAnimationDistanceLookups");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAnimationInstance.ClearActiveStopAnimationDistanceLookups
// (Final, Native, Protected, BlueprintCallable)

void UBFGAnimationInstance::ClearActiveStopAnimationDistanceLookups()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "ClearActiveStopAnimationDistanceLookups");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAnimationInstance.ClearActiveTurningAnimationDistanceLookups
// (Final, Native, Protected, BlueprintCallable)

void UBFGAnimationInstance::ClearActiveTurningAnimationDistanceLookups()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "ClearActiveTurningAnimationDistanceLookups");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAnimationInstance.G2ACryptoUFOInteraction
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _bIsEntering                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAnimationInstance::G2ACryptoUFOInteraction(bool _bIsEntering)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "G2ACryptoUFOInteraction");

	Params::BFGAnimationInstance_G2ACryptoUFOInteraction Parms{};

	Parms._bIsEntering = _bIsEntering;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGAnimationInstance.G2AGetHit
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          _vHitDirection                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGDamageType*                   _pDamageType                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAnimationInstance::G2AGetHit(const struct FVector& _vHitDirection, const class UBFGDamageType* _pDamageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "G2AGetHit");

	Params::BFGAnimationInstance_G2AGetHit Parms{};

	Parms._vHitDirection = std::move(_vHitDirection);
	Parms._pDamageType = _pDamageType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGAnimationInstance.G2AHitByPhysicsObject
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          _vHitDirection                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fVelocity                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pHitByActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAnimationInstance::G2AHitByPhysicsObject(const struct FVector& _vHitDirection, float _fVelocity, class AActor* _pHitByActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "G2AHitByPhysicsObject");

	Params::BFGAnimationInstance_G2AHitByPhysicsObject Parms{};

	Parms._vHitDirection = std::move(_vHitDirection);
	Parms._fVelocity = _fVelocity;
	Parms._pHitByActor = _pHitByActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGAnimationInstance.G2AShotFire
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             _nSocketName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAnimationInstance::G2AShotFire(class FName _nSocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "G2AShotFire");

	Params::BFGAnimationInstance_G2AShotFire Parms{};

	Parms._nSocketName = _nSocketName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGAnimationInstance.G2AWeaponShotFired
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ABFGWeapon*                       _pWeapon                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAnimationInstance::G2AWeaponShotFired(class ABFGWeapon* _pWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "G2AWeaponShotFired");

	Params::BFGAnimationInstance_G2AWeaponShotFired Parms{};

	Parms._pWeapon = _pWeapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGAnimationInstance.G2AWeaponTelegraphingEnd
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ABFGWeapon*                       _pWeapon                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAnimationInstance::G2AWeaponTelegraphingEnd(class ABFGWeapon* _pWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "G2AWeaponTelegraphingEnd");

	Params::BFGAnimationInstance_G2AWeaponTelegraphingEnd Parms{};

	Parms._pWeapon = _pWeapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGAnimationInstance.G2AWeaponTelegraphingStart
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ABFGWeapon*                       _pWeapon                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAnimationInstance::G2AWeaponTelegraphingStart(class ABFGWeapon* _pWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "G2AWeaponTelegraphingStart");

	Params::BFGAnimationInstance_G2AWeaponTelegraphingStart Parms{};

	Parms._pWeapon = _pWeapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGAnimationInstance.GetActiveStopAnimationDistanceLookups
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// TArray<class UAnimSequence*>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UAnimSequence*> UBFGAnimationInstance::GetActiveStopAnimationDistanceLookups()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "GetActiveStopAnimationDistanceLookups");

	Params::BFGAnimationInstance_GetActiveStopAnimationDistanceLookups Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAnimationInstance.LodTransitionStarted
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPoseSnapshot                    _oPoseSnapshot                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   _fTransitionTime                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAnimationInstance::LodTransitionStarted(const struct FPoseSnapshot& _oPoseSnapshot, float _fTransitionTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "LodTransitionStarted");

	Params::BFGAnimationInstance_LodTransitionStarted Parms{};

	Parms._oPoseSnapshot = std::move(_oPoseSnapshot);
	Parms._fTransitionTime = _fTransitionTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGAnimationInstance.LodTransitionUpdated
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPoseSnapshot                    _oPoseSnapshot                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGAnimationInstance::LodTransitionUpdated(const struct FPoseSnapshot& _oPoseSnapshot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "LodTransitionUpdated");

	Params::BFGAnimationInstance_LodTransitionUpdated Parms{};

	Parms._oPoseSnapshot = std::move(_oPoseSnapshot);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGAnimationInstance.RemoveActivePostPivotAnimationDistanceLookup
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UAnimSequence*                    _pAnimation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAnimationInstance::RemoveActivePostPivotAnimationDistanceLookup(class UAnimSequence* _pAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "RemoveActivePostPivotAnimationDistanceLookup");

	Params::BFGAnimationInstance_RemoveActivePostPivotAnimationDistanceLookup Parms{};

	Parms._pAnimation = _pAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAnimationInstance.RemoveActivePrePivotAnimationDistanceLookup
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UAnimSequence*                    _pAnimation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAnimationInstance::RemoveActivePrePivotAnimationDistanceLookup(class UAnimSequence* _pAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "RemoveActivePrePivotAnimationDistanceLookup");

	Params::BFGAnimationInstance_RemoveActivePrePivotAnimationDistanceLookup Parms{};

	Parms._pAnimation = _pAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAnimationInstance.RemoveActiveStartAnimationDistanceLookup
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UAnimSequence*                    _pAnimation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAnimationInstance::RemoveActiveStartAnimationDistanceLookup(class UAnimSequence* _pAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "RemoveActiveStartAnimationDistanceLookup");

	Params::BFGAnimationInstance_RemoveActiveStartAnimationDistanceLookup Parms{};

	Parms._pAnimation = _pAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAnimationInstance.RemoveActiveStartTurnAnimationDistanceLookup
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UAnimSequence*                    _pAnimation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAnimationInstance::RemoveActiveStartTurnAnimationDistanceLookup(class UAnimSequence* _pAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "RemoveActiveStartTurnAnimationDistanceLookup");

	Params::BFGAnimationInstance_RemoveActiveStartTurnAnimationDistanceLookup Parms{};

	Parms._pAnimation = _pAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAnimationInstance.RemoveActiveStopAnimationDistanceLookup
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UAnimSequence*                    _pAnimation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAnimationInstance::RemoveActiveStopAnimationDistanceLookup(class UAnimSequence* _pAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "RemoveActiveStopAnimationDistanceLookup");

	Params::BFGAnimationInstance_RemoveActiveStopAnimationDistanceLookup Parms{};

	Parms._pAnimation = _pAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAnimationInstance.RemoveActiveTurningAnimationDistanceLookup
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UAnimSequence*                    _pAnimation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAnimationInstance::RemoveActiveTurningAnimationDistanceLookup(class UAnimSequence* _pAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "RemoveActiveTurningAnimationDistanceLookup");

	Params::BFGAnimationInstance_RemoveActiveTurningAnimationDistanceLookup Parms{};

	Parms._pAnimation = _pAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAnimationInstance.StandUpFinished
// (Event, Protected, BlueprintEvent)

void UBFGAnimationInstance::StandUpFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "StandUpFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGAnimationInstance.StandUpStarted
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    _bIsFaceDown                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPoseSnapshot                    _oPoseSnapshot                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGAnimationInstance::StandUpStarted(bool _bIsFaceDown, const struct FPoseSnapshot& _oPoseSnapshot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "StandUpStarted");

	Params::BFGAnimationInstance_StandUpStarted Parms{};

	Parms._bIsFaceDown = _bIsFaceDown;
	Parms._oPoseSnapshot = std::move(_oPoseSnapshot);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGAnimationInstance.GetEvents
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGAnimation_Events*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGAnimation_Events* UBFGAnimationInstance::GetEvents() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "GetEvents");

	Params::BFGAnimationInstance_GetEvents Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAnimationInstance.GetGameplayEffectTags
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTagContainer      ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGameplayTagContainer UBFGAnimationInstance::GetGameplayEffectTags() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "GetGameplayEffectTags");

	Params::BFGAnimationInstance_GetGameplayEffectTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAnimationInstance.GetMaxFloorDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGAnimationInstance::GetMaxFloorDistance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "GetMaxFloorDistance");

	Params::BFGAnimationInstance_GetMaxFloorDistance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAnimationInstance.GetPostPivotAnimationDistanceResult
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequence*                    _pAnimation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGAnimationInstance::GetPostPivotAnimationDistanceResult(class UAnimSequence* _pAnimation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "GetPostPivotAnimationDistanceResult");

	Params::BFGAnimationInstance_GetPostPivotAnimationDistanceResult Parms{};

	Parms._pAnimation = _pAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAnimationInstance.GetPrePivotAnimationDistanceResult
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequence*                    _pAnimation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGAnimationInstance::GetPrePivotAnimationDistanceResult(class UAnimSequence* _pAnimation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "GetPrePivotAnimationDistanceResult");

	Params::BFGAnimationInstance_GetPrePivotAnimationDistanceResult Parms{};

	Parms._pAnimation = _pAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAnimationInstance.GetStartAnimationDistanceResult
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequence*                    _pAnimation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGAnimationInstance::GetStartAnimationDistanceResult(class UAnimSequence* _pAnimation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "GetStartAnimationDistanceResult");

	Params::BFGAnimationInstance_GetStartAnimationDistanceResult Parms{};

	Parms._pAnimation = _pAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAnimationInstance.GetStartTurnAnimationDistanceResult
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequence*                    _pAnimation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGAnimationInstance::GetStartTurnAnimationDistanceResult(class UAnimSequence* _pAnimation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "GetStartTurnAnimationDistanceResult");

	Params::BFGAnimationInstance_GetStartTurnAnimationDistanceResult Parms{};

	Parms._pAnimation = _pAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAnimationInstance.GetStopAnimationDistanceResult
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequence*                    _pAnimation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGAnimationInstance::GetStopAnimationDistanceResult(class UAnimSequence* _pAnimation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "GetStopAnimationDistanceResult");

	Params::BFGAnimationInstance_GetStopAnimationDistanceResult Parms{};

	Parms._pAnimation = _pAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAnimationInstance.GetTurningAnimationDistanceResult
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequence*                    _pAnimation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGAnimationInstance::GetTurningAnimationDistanceResult(class UAnimSequence* _pAnimation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "GetTurningAnimationDistanceResult");

	Params::BFGAnimationInstance_GetTurningAnimationDistanceResult Parms{};

	Parms._pAnimation = _pAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAnimationInstance.GetVariables
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGAnimation_Variables*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGAnimation_Variables* UBFGAnimationInstance::GetVariables() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance", "GetVariables");

	Params::BFGAnimationInstance_GetVariables Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGObject_StaticWithPhysics.GetDisableTargeting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGObject_StaticWithPhysics::GetDisableTargeting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGObject_StaticWithPhysics", "GetDisableTargeting");

	Params::BFGObject_StaticWithPhysics_GetDisableTargeting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGObject_StaticWithPhysics.OnDestructionTriggered
// (Event, Public, BlueprintEvent)

void ABFGObject_StaticWithPhysics::OnDestructionTriggered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGObject_StaticWithPhysics", "OnDestructionTriggered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGObject_StaticWithPhysics.OnPKDrop
// (Event, Protected, BlueprintEvent)

void ABFGObject_StaticWithPhysics::OnPKDrop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGObject_StaticWithPhysics", "OnPKDrop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGObject_StaticWithPhysics.OnPKPickUp
// (Event, Protected, BlueprintEvent)

void ABFGObject_StaticWithPhysics::OnPKPickUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGObject_StaticWithPhysics", "OnPKPickUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGObject_StaticWithPhysics.SetDisableTargeting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bIsTargetingDisabled                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGObject_StaticWithPhysics::SetDisableTargeting(bool _bIsTargetingDisabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGObject_StaticWithPhysics", "SetDisableTargeting");

	Params::BFGObject_StaticWithPhysics_SetDisableTargeting Parms{};

	Parms._bIsTargetingDisabled = _bIsTargetingDisabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGObject_StaticWithPhysics.SetMeshFromBlueprint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UStaticMeshComponent*             PStaticMesh                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGObject_StaticWithPhysics::SetMeshFromBlueprint(class UStaticMeshComponent* PStaticMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGObject_StaticWithPhysics", "SetMeshFromBlueprint");

	Params::BFGObject_StaticWithPhysics_SetMeshFromBlueprint Parms{};

	Parms.PStaticMesh = PStaticMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGObject_StaticWithPhysics.SetOnFire
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void ABFGObject_StaticWithPhysics::SetOnFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGObject_StaticWithPhysics", "SetOnFire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGObject_StaticWithPhysics.TriggerObjectBlastMeshDestruction
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          _fImpulse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGObject_StaticWithPhysics::TriggerObjectBlastMeshDestruction(const struct FVector& _fImpulse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGObject_StaticWithPhysics", "TriggerObjectBlastMeshDestruction");

	Params::BFGObject_StaticWithPhysics_TriggerObjectBlastMeshDestruction Parms{};

	Parms._fImpulse = std::move(_fImpulse);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGObject_StaticWithPhysics.GetIsDestructionInProgess
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGObject_StaticWithPhysics::GetIsDestructionInProgess() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGObject_StaticWithPhysics", "GetIsDestructionInProgess");

	Params::BFGObject_StaticWithPhysics_GetIsDestructionInProgess Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGObject_StaticWithPhysics.GetIsHeldInPK
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGObject_StaticWithPhysics::GetIsHeldInPK() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGObject_StaticWithPhysics", "GetIsHeldInPK");

	Params::BFGObject_StaticWithPhysics_GetIsHeldInPK Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGObject_StaticWithPhysics.GetStaticMeshBurningDataAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGDataAsset_StaticMeshBurning*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGDataAsset_StaticMeshBurning* ABFGObject_StaticWithPhysics::GetStaticMeshBurningDataAsset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGObject_StaticWithPhysics", "GetStaticMeshBurningDataAsset");

	Params::BFGObject_StaticWithPhysics_GetStaticMeshBurningDataAsset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGObject_StaticWithPhysics.GetStaticMeshComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UStaticMeshComponent*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UStaticMeshComponent* ABFGObject_StaticWithPhysics::GetStaticMeshComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGObject_StaticWithPhysics", "GetStaticMeshComponent");

	Params::BFGObject_StaticWithPhysics_GetStaticMeshComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGObject_StaticWithPhysics.GetStaticMeshDataAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGDataAsset_StaticMesh*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGDataAsset_StaticMesh* ABFGObject_StaticWithPhysics::GetStaticMeshDataAsset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGObject_StaticWithPhysics", "GetStaticMeshDataAsset");

	Params::BFGObject_StaticWithPhysics_GetStaticMeshDataAsset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGObject_StaticWithPhysics.GetStaticMeshDestructionDataAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGDataAsset_StaticMeshDestruction*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGDataAsset_StaticMeshDestruction* ABFGObject_StaticWithPhysics::GetStaticMeshDestructionDataAsset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGObject_StaticWithPhysics", "GetStaticMeshDestructionDataAsset");

	Params::BFGObject_StaticWithPhysics_GetStaticMeshDestructionDataAsset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGObject_StaticWithPhysics.IsDestructable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGObject_StaticWithPhysics::IsDestructable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGObject_StaticWithPhysics", "IsDestructable");

	Params::BFGObject_StaticWithPhysics_IsDestructable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAnimationInstance_Npc.ClearInteractAnimations
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bRestoreCollisions                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAnimationInstance_Npc::ClearInteractAnimations(bool _bRestoreCollisions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Npc", "ClearInteractAnimations");

	Params::BFGAnimationInstance_Npc_ClearInteractAnimations Parms{};

	Parms._bRestoreCollisions = _bRestoreCollisions;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAnimationInstance_Npc.G2AAlert
// (Event, Public, BlueprintEvent)

void UBFGAnimationInstance_Npc::G2AAlert()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Npc", "G2AAlert");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGAnimationInstance_Npc.G2AEvade
// (Event, Public, BlueprintEvent)
// Parameters:
// EBFGEvadeDirection                      _direction                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pEvadeFromActor                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAnimationInstance_Npc::G2AEvade(EBFGEvadeDirection _direction, class AActor* _pEvadeFromActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Npc", "G2AEvade");

	Params::BFGAnimationInstance_Npc_G2AEvade Parms{};

	Parms._direction = _direction;
	Parms._pEvadeFromActor = _pEvadeFromActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGAnimationInstance_Npc.G2APlayerBumped
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          _vHitDirection                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fVelocity                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pHitByActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAnimationInstance_Npc::G2APlayerBumped(const struct FVector& _vHitDirection, float _fVelocity, class AActor* _pHitByActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Npc", "G2APlayerBumped");

	Params::BFGAnimationInstance_Npc_G2APlayerBumped Parms{};

	Parms._vHitDirection = std::move(_vHitDirection);
	Parms._fVelocity = _fVelocity;
	Parms._pHitByActor = _pHitByActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGAnimationInstance_Npc.OnOrchestratorInteractAnimationPop
// (Final, Native, Protected, HasOutParams)
// Parameters:
// TScriptInterface<class IBFGInteractAnimationPlayerInterface>_pOrchestrator                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
// struct FBFGInteractAnimationData        _data                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FBFGInteractAnimationData        _oldData                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UBFGAnimationInstance_Npc::OnOrchestratorInteractAnimationPop(TScriptInterface<class IBFGInteractAnimationPlayerInterface> _pOrchestrator, const struct FBFGInteractAnimationData& _data, const struct FBFGInteractAnimationData& _oldData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Npc", "OnOrchestratorInteractAnimationPop");

	Params::BFGAnimationInstance_Npc_OnOrchestratorInteractAnimationPop Parms{};

	Parms._pOrchestrator = _pOrchestrator;
	Parms._data = std::move(_data);
	Parms._oldData = std::move(_oldData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAnimationInstance_Npc.PeekInteractAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FBFGInteractAnimationData        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FBFGInteractAnimationData UBFGAnimationInstance_Npc::PeekInteractAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Npc", "PeekInteractAnimation");

	Params::BFGAnimationInstance_Npc_PeekInteractAnimation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAnimationInstance_Npc.PopInteractAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FBFGInteractAnimationData        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FBFGInteractAnimationData UBFGAnimationInstance_Npc::PopInteractAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Npc", "PopInteractAnimation");

	Params::BFGAnimationInstance_Npc_PopInteractAnimation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAnimationInstance_Npc.FindWeaponState
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftClassPtr<class UClass>             _pWeaponType                                           (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBFGAnimationVariables_Weapon    _weaponState                                           (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGAnimationInstance_Npc::FindWeaponState(TSoftClassPtr<class UClass> _pWeaponType, struct FBFGAnimationVariables_Weapon* _weaponState) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Npc", "FindWeaponState");

	Params::BFGAnimationInstance_Npc_FindWeaponState Parms{};

	Parms._pWeaponType = _pWeaponType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_weaponState != nullptr)
		*_weaponState = std::move(Parms._weaponState);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAnimationInstance_Npc.GetEvents_Npc
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGAnimation_Events_Npc*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGAnimation_Events_Npc* UBFGAnimationInstance_Npc::GetEvents_Npc() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Npc", "GetEvents_Npc");

	Params::BFGAnimationInstance_Npc_GetEvents_Npc Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAnimationInstance_Npc.GetVariables_Npc
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGAnimation_Variables_Npc*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGAnimation_Variables_Npc* UBFGAnimationInstance_Npc::GetVariables_Npc() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Npc", "GetVariables_Npc");

	Params::BFGAnimationInstance_Npc_GetVariables_Npc Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_HUD_SavingSpinner.ShowWidget
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _bShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_SavingSpinner::ShowWidget(bool _bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_SavingSpinner", "ShowWidget");

	Params::BFGWidget_HUD_SavingSpinner_ShowWidget Parms{};

	Parms._bShow = _bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGAnimationInstance_Animal.GetEvents_Animal
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGAnimation_Events_Animal*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGAnimation_Events_Animal* UBFGAnimationInstance_Animal::GetEvents_Animal() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Animal", "GetEvents_Animal");

	Params::BFGAnimationInstance_Animal_GetEvents_Animal Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAnimationInstance_Animal.GetVariables_Animal
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGAnimation_Variables_Animal*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGAnimation_Variables_Animal* UBFGAnimationInstance_Animal::GetVariables_Animal() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Animal", "GetVariables_Animal");

	Params::BFGAnimationInstance_Animal_GetVariables_Animal Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGDiscordWrapper.Init
// (Event, Public, BlueprintEvent)

void UBFGDiscordWrapper::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDiscordWrapper", "Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGDiscordWrapper.Shutdown
// (Event, Public, BlueprintEvent)

void UBFGDiscordWrapper::Shutdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDiscordWrapper", "Shutdown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGDiscordWrapper.Update
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   _fDeltaTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGDiscordWrapper::Update(float _fDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDiscordWrapper", "Update");

	Params::BFGDiscordWrapper_Update Parms{};

	Parms._fDeltaTime = _fDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGDiscordWrapper.GetIsEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGDiscordWrapper::GetIsEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDiscordWrapper", "GetIsEnabled");

	Params::BFGDiscordWrapper_GetIsEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameFlowState_GamestartSequence.OnActionDone
// (Final, Native, Protected)
// Parameters:
// class UBFGSaveSystem*                   _pSaveSystem                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGSaveSystem_Action*            _pAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBFGSaveSystem_ActionResult             _result                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_GamestartSequence::OnActionDone(class UBFGSaveSystem* _pSaveSystem, class UBFGSaveSystem_Action* _pAction, EBFGSaveSystem_ActionResult _result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_GamestartSequence", "OnActionDone");

	Params::BFGGameFlowState_GamestartSequence_OnActionDone Parms{};

	Parms._pSaveSystem = _pSaveSystem;
	Parms._pAction = _pAction;
	Parms._result = _result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_GamestartSequence.OnIISClosed
// (Final, Native, Protected)
// Parameters:
// EBFGDialogMessage                       _eMessage                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_GamestartSequence::OnIISClosed(EBFGDialogMessage _eMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_GamestartSequence", "OnIISClosed");

	Params::BFGGameFlowState_GamestartSequence_OnIISClosed Parms{};

	Parms._eMessage = _eMessage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAnimationInstance_Boss.G2ABossActionEvasion
// (Event, Protected, BlueprintEvent)
// Parameters:
// EBFGAttackQuadrant                      _eEvasionQuadrant                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAnimationInstance_Boss::G2ABossActionEvasion(EBFGAttackQuadrant _eEvasionQuadrant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Boss", "G2ABossActionEvasion");

	Params::BFGAnimationInstance_Boss_G2ABossActionEvasion Parms{};

	Parms._eEvasionQuadrant = _eEvasionQuadrant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGAnimationInstance_Boss.G2ABossActionKnockDown
// (Event, Protected, BlueprintEvent)
// Parameters:
// EBFGAttackQuadrant                      _eHitQuadrant                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAnimationInstance_Boss::G2ABossActionKnockDown(EBFGAttackQuadrant _eHitQuadrant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Boss", "G2ABossActionKnockDown");

	Params::BFGAnimationInstance_Boss_G2ABossActionKnockDown Parms{};

	Parms._eHitQuadrant = _eHitQuadrant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGAnimationInstance_Boss.G2ABossActionNasalProbeShotLeft
// (Event, Protected, BlueprintEvent)

void UBFGAnimationInstance_Boss::G2ABossActionNasalProbeShotLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Boss", "G2ABossActionNasalProbeShotLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGAnimationInstance_Boss.G2ABossActionNasalProbeShotRight
// (Event, Protected, BlueprintEvent)

void UBFGAnimationInstance_Boss::G2ABossActionNasalProbeShotRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Boss", "G2ABossActionNasalProbeShotRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGAnimationInstance_Boss.G2ABossActionNasalProbeStarted
// (Event, Protected, BlueprintEvent)

void UBFGAnimationInstance_Boss::G2ABossActionNasalProbeStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Boss", "G2ABossActionNasalProbeStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGAnimationInstance_Boss.G2ABossActionRocketLaunched
// (Event, Protected, BlueprintEvent)
// Parameters:
// EBFGRocketSocket                        _eRocketSocket                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAnimationInstance_Boss::G2ABossActionRocketLaunched(EBFGRocketSocket _eRocketSocket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Boss", "G2ABossActionRocketLaunched");

	Params::BFGAnimationInstance_Boss_G2ABossActionRocketLaunched Parms{};

	Parms._eRocketSocket = _eRocketSocket;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGAnimationInstance_Boss.G2ABossActionStandUp
// (Event, Protected, BlueprintEvent)

void UBFGAnimationInstance_Boss::G2ABossActionStandUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Boss", "G2ABossActionStandUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGAnimationInstance_Boss.G2ABossActionStompLeft
// (Event, Protected, BlueprintEvent)

void UBFGAnimationInstance_Boss::G2ABossActionStompLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Boss", "G2ABossActionStompLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGAnimationInstance_Boss.G2ABossActionStompRight
// (Event, Protected, BlueprintEvent)

void UBFGAnimationInstance_Boss::G2ABossActionStompRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Boss", "G2ABossActionStompRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGAnimationInstance_Boss.G2ABossCallReinforcementAction
// (Event, Protected, BlueprintEvent)

void UBFGAnimationInstance_Boss::G2ABossCallReinforcementAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Boss", "G2ABossCallReinforcementAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGAnimationInstance_Boss.G2ABossEnrageBeforeCharge
// (Event, Protected, BlueprintEvent)

void UBFGAnimationInstance_Boss::G2ABossEnrageBeforeCharge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Boss", "G2ABossEnrageBeforeCharge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGAnimationInstance_Boss.G2ABossInterruptedByDamage
// (Event, Protected, BlueprintEvent)
// Parameters:
// EBFGAttackQuadrant                      _eHitQuadrant                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAnimationInstance_Boss::G2ABossInterruptedByDamage(EBFGAttackQuadrant _eHitQuadrant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Boss", "G2ABossInterruptedByDamage");

	Params::BFGAnimationInstance_Boss_G2ABossInterruptedByDamage Parms{};

	Parms._eHitQuadrant = _eHitQuadrant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGAnimationInstance_Boss.G2ABossLeapAction
// (Event, Protected, BlueprintEvent)

void UBFGAnimationInstance_Boss::G2ABossLeapAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Boss", "G2ABossLeapAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGAnimationInstance_Boss.G2ABossStompActionStarted
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class AActor*                           _pOwnerActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pTargetActor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAnimationInstance_Boss::G2ABossStompActionStarted(class AActor* _pOwnerActor, class AActor* _pTargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Boss", "G2ABossStompActionStarted");

	Params::BFGAnimationInstance_Boss_G2ABossStompActionStarted Parms{};

	Parms._pOwnerActor = _pOwnerActor;
	Parms._pTargetActor = _pTargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAnimationInstance_Boss.G2APhaseTransitionTriggered
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   _iCurrentPhaseNumber                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAnimationInstance_Boss::G2APhaseTransitionTriggered(int32 _iCurrentPhaseNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Boss", "G2APhaseTransitionTriggered");

	Params::BFGAnimationInstance_Boss_G2APhaseTransitionTriggered Parms{};

	Parms._iCurrentPhaseNumber = _iCurrentPhaseNumber;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGAnimationInstance_Boss.GetEvents_Boss
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGAnimation_Events_Boss*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGAnimation_Events_Boss* UBFGAnimationInstance_Boss::GetEvents_Boss() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Boss", "GetEvents_Boss");

	Params::BFGAnimationInstance_Boss_GetEvents_Boss Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAnimationInstance_Boss.GetVariables_Boss
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGAnimation_Variables_Boss*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGAnimation_Variables_Boss* UBFGAnimationInstance_Boss::GetVariables_Boss() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Boss", "GetVariables_Boss");

	Params::BFGAnimationInstance_Boss_GetVariables_Boss Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_IIS.HidePrompt
// (Event, Protected, BlueprintEvent)

void UBFGWidget_IIS::HidePrompt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_IIS", "HidePrompt");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_IIS.OnApplicationPostInputKeyDownEvent
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FKeyEvent                        _keyEvent                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_IIS::OnApplicationPostInputKeyDownEvent(const struct FKeyEvent& _keyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_IIS", "OnApplicationPostInputKeyDownEvent");

	Params::BFGWidget_IIS_OnApplicationPostInputKeyDownEvent Parms{};

	Parms._keyEvent = std::move(_keyEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_IIS.OnBusyWithSigninStateChange
// (Final, Native, Protected)
// Parameters:
// bool                                    _bBusy                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_IIS::OnBusyWithSigninStateChange(bool _bBusy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_IIS", "OnBusyWithSigninStateChange");

	Params::BFGWidget_IIS_OnBusyWithSigninStateChange Parms{};

	Parms._bBusy = _bBusy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_IIS.OnMousePressed
// (Final, Native, Protected, BlueprintCallable)

void UBFGWidget_IIS::OnMousePressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_IIS", "OnMousePressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_IIS.ShowSpinner
// (Event, Protected, BlueprintEvent)

void UBFGWidget_IIS::ShowSpinner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_IIS", "ShowSpinner");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGAnimationInstance_Crypto.GetEvents_Crypto
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGAnimation_Events_Crypto*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGAnimation_Events_Crypto* UBFGAnimationInstance_Crypto::GetEvents_Crypto() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Crypto", "GetEvents_Crypto");

	Params::BFGAnimationInstance_Crypto_GetEvents_Crypto Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAnimationInstance_Crypto.GetVariables_Crypto
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGAnimation_Variables_Crypto*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGAnimation_Variables_Crypto* UBFGAnimationInstance_Crypto::GetVariables_Crypto() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Crypto", "GetVariables_Crypto");

	Params::BFGAnimationInstance_Crypto_GetVariables_Crypto Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAnimationInstance_Human.GetEvents_Human
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGAnimation_Events_Human*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGAnimation_Events_Human* UBFGAnimationInstance_Human::GetEvents_Human() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Human", "GetEvents_Human");

	Params::BFGAnimationInstance_Human_GetEvents_Human Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAnimationInstance_Human.GetVariables_Human
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGAnimation_Variables_Human*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGAnimation_Variables_Human* UBFGAnimationInstance_Human::GetVariables_Human() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Human", "GetVariables_Human");

	Params::BFGAnimationInstance_Human_GetVariables_Human Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon_EnemyBallistic.ComputeBallisticRange
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABFGWeapon_EnemyBallistic::ComputeBallisticRange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon_EnemyBallistic", "ComputeBallisticRange");

	Params::BFGWeapon_EnemyBallistic_ComputeBallisticRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGDataHub.OnDataChanged
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _tag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TScriptInterface<class IBFGDataProvider>_pSourceProvider                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)

void UBFGDataHub::OnDataChanged(class FName _tag, TScriptInterface<class IBFGDataProvider> _pSourceProvider)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDataHub", "OnDataChanged");

	Params::BFGDataHub_OnDataChanged Parms{};

	Parms._tag = _tag;
	Parms._pSourceProvider = _pSourceProvider;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGDataHub.RegisterDataProvider
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _name                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TScriptInterface<class IBFGDataProvider>_pProvider                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)

void UBFGDataHub::RegisterDataProvider(class FName _name, TScriptInterface<class IBFGDataProvider> _pProvider)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDataHub", "RegisterDataProvider");

	Params::BFGDataHub_RegisterDataProvider Parms{};

	Parms._name = _name;
	Parms._pProvider = _pProvider;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGDataHub.RegisterDataSubscriber
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _name                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TScriptInterface<class IBFGDataSubscriber>_pSubscriber                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)

void UBFGDataHub::RegisterDataSubscriber(class FName _name, TScriptInterface<class IBFGDataSubscriber> _pSubscriber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDataHub", "RegisterDataSubscriber");

	Params::BFGDataHub_RegisterDataSubscriber Parms{};

	Parms._name = _name;
	Parms._pSubscriber = _pSubscriber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGDataHub.UnregisterDataProvider
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _name                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TScriptInterface<class IBFGDataProvider>_pProvider                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)

void UBFGDataHub::UnregisterDataProvider(class FName _name, TScriptInterface<class IBFGDataProvider> _pProvider)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDataHub", "UnregisterDataProvider");

	Params::BFGDataHub_UnregisterDataProvider Parms{};

	Parms._name = _name;
	Parms._pProvider = _pProvider;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAnimationInstance_Pox.G2APlayAnimationSequenceByName
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             _oName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGAnimationInstance_Pox::G2APlayAnimationSequenceByName(class FName _oName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Pox", "G2APlayAnimationSequenceByName");

	Params::BFGAnimationInstance_Pox_G2APlayAnimationSequenceByName Parms{};

	Parms._oName = _oName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGAnimationInstance_Pox.G2AStopCurrentAnimationSequence
// (Event, Public, BlueprintEvent)

void UBFGAnimationInstance_Pox::G2AStopCurrentAnimationSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Pox", "G2AStopCurrentAnimationSequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGAnimationInstance_Pox.GetEvents_Pox
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGAnimation_Events_Pox*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGAnimation_Events_Pox* UBFGAnimationInstance_Pox::GetEvents_Pox() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Pox", "GetEvents_Pox");

	Params::BFGAnimationInstance_Pox_GetEvents_Pox Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAnimationInstance_Pox.GetVariables_Pox
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGAnimation_Variables_Pox*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGAnimation_Variables_Pox* UBFGAnimationInstance_Pox::GetVariables_Pox() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInstance_Pox", "GetVariables_Pox");

	Params::BFGAnimationInstance_Pox_GetVariables_Pox Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAnimationInteractPlayer.OnOrchestratorInteractAnimationPop
// (Final, Native, Protected, HasOutParams)
// Parameters:
// TScriptInterface<class IBFGInteractAnimationPlayerInterface>_pOrchestrator                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
// struct FBFGInteractAnimationData        _data                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FBFGInteractAnimationData        _oldData                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UBFGAnimationInteractPlayer::OnOrchestratorInteractAnimationPop(TScriptInterface<class IBFGInteractAnimationPlayerInterface> _pOrchestrator, const struct FBFGInteractAnimationData& _data, const struct FBFGInteractAnimationData& _oldData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInteractPlayer", "OnOrchestratorInteractAnimationPop");

	Params::BFGAnimationInteractPlayer_OnOrchestratorInteractAnimationPop Parms{};

	Parms._pOrchestrator = _pOrchestrator;
	Parms._data = std::move(_data);
	Parms._oldData = std::move(_oldData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVoiceoverSystem.GetItemResolver
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGVoiceoverItemResolver*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGVoiceoverItemResolver* UBFGVoiceoverSystem::GetItemResolver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVoiceoverSystem", "GetItemResolver");

	Params::BFGVoiceoverSystem_GetItemResolver Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVoiceoverSystem.GetSettings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGVoiceoverSettings*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGVoiceoverSettings* UBFGVoiceoverSystem::GetSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVoiceoverSystem", "GetSettings");

	Params::BFGVoiceoverSystem_GetSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVoiceoverSystem.GetStatistics
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGVoiceoverStatistics*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGVoiceoverStatistics* UBFGVoiceoverSystem::GetStatistics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVoiceoverSystem", "GetStatistics");

	Params::BFGVoiceoverSystem_GetStatistics Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVoiceoverSystem.ToggleVoiceoverSkipThroughMode
// (Final, Exec, Native, Public, BlueprintCallable)

void UBFGVoiceoverSystem::ToggleVoiceoverSkipThroughMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVoiceoverSystem", "ToggleVoiceoverSkipThroughMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVoiceoverSystem.ToggleVoiceoverSystemDebug
// (Final, Exec, Native, Public, BlueprintCallable)

void UBFGVoiceoverSystem::ToggleVoiceoverSystemDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVoiceoverSystem", "ToggleVoiceoverSystemDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGDataAsset_StaticMeshDestruction.GetDestructionMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBlastMesh*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBlastMesh* UBFGDataAsset_StaticMeshDestruction::GetDestructionMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDataAsset_StaticMeshDestruction", "GetDestructionMesh");

	Params::BFGDataAsset_StaticMeshDestruction_GetDestructionMesh Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGDataAsset_StaticMeshDestruction.IsValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGDataAsset_StaticMeshDestruction::IsValid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDataAsset_StaticMeshDestruction", "IsValid");

	Params::BFGDataAsset_StaticMeshDestruction_IsValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAnimationInteractPlayerStaticMesh.OnOrchestratorInteractAnimationPop
// (Final, Native, Protected, HasOutParams)
// Parameters:
// TScriptInterface<class IBFGInteractAnimationPlayerInterface>_pOrchestrator                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
// struct FBFGInteractAnimationData        _data                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FBFGInteractAnimationData        _oldData                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UBFGAnimationInteractPlayerStaticMesh::OnOrchestratorInteractAnimationPop(TScriptInterface<class IBFGInteractAnimationPlayerInterface> _pOrchestrator, const struct FBFGInteractAnimationData& _data, const struct FBFGInteractAnimationData& _oldData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAnimationInteractPlayerStaticMesh", "OnOrchestratorInteractAnimationPop");

	Params::BFGAnimationInteractPlayerStaticMesh_OnOrchestratorInteractAnimationPop Parms{};

	Parms._pOrchestrator = _pOrchestrator;
	Parms._data = std::move(_data);
	Parms._oldData = std::move(_oldData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWeaponSlot.Clear
// (Event, Public, BlueprintEvent)

void UBFGWeaponSlot::Clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeaponSlot", "Clear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWeaponSlot.SetBrush
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FSlateBrush                      _oBrush                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWeaponSlot::SetBrush(const struct FSlateBrush& _oBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeaponSlot", "SetBrush");

	Params::BFGWeaponSlot_SetBrush Parms{};

	Parms._oBrush = std::move(_oBrush);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWeaponSlot.SetEquipped
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bEquipped                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWeaponSlot::SetEquipped(bool _bEquipped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeaponSlot", "SetEquipped");

	Params::BFGWeaponSlot_SetEquipped Parms{};

	Parms._bEquipped = _bEquipped;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWeaponSlot.SetInputActionName
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             _strInputActionName                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWeaponSlot::SetInputActionName(class FName _strInputActionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeaponSlot", "SetInputActionName");

	Params::BFGWeaponSlot_SetInputActionName Parms{};

	Parms._strInputActionName = _strInputActionName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWeaponSlot.SetInputHintEnabled
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWeaponSlot::SetInputHintEnabled(bool _bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeaponSlot", "SetInputHintEnabled");

	Params::BFGWeaponSlot_SetInputHintEnabled Parms{};

	Parms._bEnabled = _bEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWeaponSlot.SetJammed
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bJammed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWeaponSlot::SetJammed(bool _bJammed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeaponSlot", "SetJammed");

	Params::BFGWeaponSlot_SetJammed Parms{};

	Parms._bJammed = _bJammed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWeaponSlot.SetUnlocked
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bLocked                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWeaponSlot::SetUnlocked(bool _bLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeaponSlot", "SetUnlocked");

	Params::BFGWeaponSlot_SetUnlocked Parms{};

	Parms._bLocked = _bLocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGGameFlowState_GameplayEndSequence.GameplayEndFadeOut
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameInstance*                    _pGameInstance                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_GameplayEndSequence::GameplayEndFadeOut(class UGameInstance* _pGameInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGGameFlowState_GameplayEndSequence", "GameplayEndFadeOut");

	Params::BFGGameFlowState_GameplayEndSequence_GameplayEndFadeOut Parms{};

	Parms._pGameInstance = _pGameInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_GameplayEndSequence.GameplayEndStartNewEnding
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameInstance*                    _pGameInstance                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_GameplayEndSequence::GameplayEndStartNewEnding(class UGameInstance* _pGameInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGGameFlowState_GameplayEndSequence", "GameplayEndStartNewEnding");

	Params::BFGGameFlowState_GameplayEndSequence_GameplayEndStartNewEnding Parms{};

	Parms._pGameInstance = _pGameInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_GameplayEndSequence.OnEndEffectsRemoved
// (Final, Native, Protected)
// Parameters:
// class UBFGGameplayEndSession*           _pSession                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGGameplayEndEffects*           _pEndEffects                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_GameplayEndSequence::OnEndEffectsRemoved(class UBFGGameplayEndSession* _pSession, class UBFGGameplayEndEffects* _pEndEffects)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_GameplayEndSequence", "OnEndEffectsRemoved");

	Params::BFGGameFlowState_GameplayEndSequence_OnEndEffectsRemoved Parms{};

	Parms._pSession = _pSession;
	Parms._pEndEffects = _pEndEffects;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_GameplayEndSequence.OnNarrativeSequenceEnds
// (Final, Native, Protected)
// Parameters:
// class UBFGNarrativeSequence*            _pNarrativeSequence                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_GameplayEndSequence::OnNarrativeSequenceEnds(class UBFGNarrativeSequence* _pNarrativeSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_GameplayEndSequence", "OnNarrativeSequenceEnds");

	Params::BFGGameFlowState_GameplayEndSequence_OnNarrativeSequenceEnds Parms{};

	Parms._pNarrativeSequence = _pNarrativeSequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BFGCore.BFGDialogOptionHandler_Base.ActionOptionHandler__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UBFGDialogOptionHandler_Base*     _pHandler                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBFGDialogMessage                       _message                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGDialogOptionHandler_Base::ActionOptionHandler__DelegateSignature(class UBFGDialogOptionHandler_Base* _pHandler, EBFGDialogMessage _message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDialogOptionHandler_Base", "ActionOptionHandler__DelegateSignature");

	Params::BFGDialogOptionHandler_Base_ActionOptionHandler__DelegateSignature Parms{};

	Parms._pHandler = _pHandler;
	Parms._message = _message;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGDialogOptionHandler_Base.Handle
// (Native, Event, Public, BlueprintEvent)

void UBFGDialogOptionHandler_Base::Handle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDialogOptionHandler_Base", "Handle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGDialogOptionHandler_Base.Init
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UBFGGameInstance*                 _pGameInstance                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGDialogOptionHandler_Base::Init(class UBFGGameInstance* _pGameInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDialogOptionHandler_Base", "Init");

	Params::BFGDialogOptionHandler_Base_Init Parms{};

	Parms._pGameInstance = _pGameInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGDialogOptionHandler_SubDialogState.OnDialogMessage
// (Final, Native, Protected)
// Parameters:
// EBFGDialogMessage                       _eMessage                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGDialogOptionHandler_SubDialogState::OnDialogMessage(EBFGDialogMessage _eMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDialogOptionHandler_SubDialogState", "OnDialogMessage");

	Params::BFGDialogOptionHandler_SubDialogState_OnDialogMessage Parms{};

	Parms._eMessage = _eMessage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAOE.CastAOE
// (Final, Native, Private)
// Parameters:
// struct FAOEData                         _oData                                                 (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)

void ABFGAOE::CastAOE(const struct FAOEData& _oData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAOE", "CastAOE");

	Params::BFGAOE_CastAOE Parms{};

	Parms._oData = std::move(_oData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_LevelSwitch.StartLevelSwitch
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBFGGameInstance*                 _pGameInstance                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _strLevelName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGGameFlowState_LevelSwitch::StartLevelSwitch(class UBFGGameInstance* _pGameInstance, const class FString& _strLevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGGameFlowState_LevelSwitch", "StartLevelSwitch");

	Params::BFGGameFlowState_LevelSwitch_StartLevelSwitch Parms{};

	Parms._pGameInstance = _pGameInstance;
	Parms._strLevelName = std::move(_strLevelName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameFlowState_LevelSwitch.OnSaveSystemActionCompleted
// (Final, Native, Protected)
// Parameters:
// class UBFGSaveSystem*                   _pSaveSystem                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGSaveSystem_Action*            _pAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBFGSaveSystem_ActionResult             _result                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_LevelSwitch::OnSaveSystemActionCompleted(class UBFGSaveSystem* _pSaveSystem, class UBFGSaveSystem_Action* _pAction, EBFGSaveSystem_ActionResult _result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_LevelSwitch", "OnSaveSystemActionCompleted");

	Params::BFGGameFlowState_LevelSwitch_OnSaveSystemActionCompleted Parms{};

	Parms._pSaveSystem = _pSaveSystem;
	Parms._pAction = _pAction;
	Parms._result = _result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGAOE_Boss.OnWarningFinished
// (Final, Native, Private)

void ABFGAOE_Boss::OnWarningFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGAOE_Boss", "OnWarningFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVariableAction_Timer_End.GetActionName_TimerEnd
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableAction_Timer_End::GetActionName_TimerEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableAction_Timer_End", "GetActionName_TimerEnd");

	Params::BFGVariableAction_Timer_End_GetActionName_TimerEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAudio.GetSoundClassVolume
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           ClassName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Volume                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGAudio::GetSoundClassVolume(const class FString& ClassName, float* Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGAudio", "GetSoundClassVolume");

	Params::BFGAudio_GetSoundClassVolume Parms{};

	Parms.ClassName = std::move(ClassName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Volume != nullptr)
		*Volume = Parms.Volume;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGAudio.SetSoundClassVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ClassName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Volume                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGAudio::SetSoundClassVolume(const class FString& ClassName, float Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGAudio", "SetSoundClassVolume");

	Params::BFGAudio_SetSoundClassVolume Parms{};

	Parms.ClassName = std::move(ClassName);
	Parms.Volume = Volume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon_BossBase.SetActivePattern
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _iWeaponPatternIndex                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGWeapon_BossBase::SetActivePattern(int32 _iWeaponPatternIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon_BossBase", "SetActivePattern");

	Params::BFGWeapon_BossBase_SetActivePattern Parms{};

	Parms._iWeaponPatternIndex = _iWeaponPatternIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWeapon_BossBase.TryActivatePattern
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGWeapon_BossBase::TryActivatePattern()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon_BossBase", "TryActivatePattern");

	Params::BFGWeapon_BossBase_TryActivatePattern Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon_BossBase.TryClearActivePattern
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGWeapon_BossBase::TryClearActivePattern()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon_BossBase", "TryClearActivePattern");

	Params::BFGWeapon_BossBase_TryClearActivePattern Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon_BossBase.TryPreparePattern
// (Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class ABFGPattern_Base>     _pPatternClass                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGWeapon_BossBase::TryPreparePattern(TSubclassOf<class ABFGPattern_Base> _pPatternClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon_BossBase", "TryPreparePattern");

	Params::BFGWeapon_BossBase_TryPreparePattern Parms{};

	Parms._pPatternClass = _pPatternClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon_BossBase.GetActivePattern
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ABFGPattern_Base*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGPattern_Base* ABFGWeapon_BossBase::GetActivePattern() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon_BossBase", "GetActivePattern");

	Params::BFGWeapon_BossBase_GetActivePattern Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon_BossBase.GetAimDirection
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ABFGWeapon_BossBase::GetAimDirection() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon_BossBase", "GetAimDirection");

	Params::BFGWeapon_BossBase_GetAimDirection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon_BossBase.HasActivePattern
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGWeapon_BossBase::HasActivePattern() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon_BossBase", "HasActivePattern");

	Params::BFGWeapon_BossBase_HasActivePattern Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGBasicVehicle.DisablePassengers
// (Final, Native, Public, BlueprintCallable)

void ABFGBasicVehicle::DisablePassengers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBasicVehicle", "DisablePassengers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGBasicVehicle.EnablePassengers
// (Final, Native, Public, BlueprintCallable)

void ABFGBasicVehicle::EnablePassengers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBasicVehicle", "EnablePassengers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGBasicVehicle.HonkAtObstacleInFront
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABFGBasicVehicle::HonkAtObstacleInFront()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBasicVehicle", "HonkAtObstacleInFront");

	Params::BFGBasicVehicle_HonkAtObstacleInFront Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGBasicVehicle.OnBeforeCreatePhysicsState
// (Final, Native, Protected)
// Parameters:
// class UActorComponent*                  _pComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGBasicVehicle::OnBeforeCreatePhysicsState(class UActorComponent* _pComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBasicVehicle", "OnBeforeCreatePhysicsState");

	Params::BFGBasicVehicle_OnBeforeCreatePhysicsState Parms{};

	Parms._pComponent = _pComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGBasicVehicle.OnTransmogrifyStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _bActive                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGBasicVehicle::OnTransmogrifyStateChanged(bool _bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBasicVehicle", "OnTransmogrifyStateChanged");

	Params::BFGBasicVehicle_OnTransmogrifyStateChanged Parms{};

	Parms._bActive = _bActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGBasicVehicle.OnVehicleDeath
// (Event, Protected, BlueprintEvent)

void ABFGBasicVehicle::OnVehicleDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBasicVehicle", "OnVehicleDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGBasicVehicle.RestartAudio
// (Event, Protected, BlueprintEvent)

void ABFGBasicVehicle::RestartAudio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBasicVehicle", "RestartAudio");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGBasicVehicle.SetPhysicsEnabled
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    _bEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGBasicVehicle::SetPhysicsEnabled(bool _bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBasicVehicle", "SetPhysicsEnabled");

	Params::BFGBasicVehicle_SetPhysicsEnabled Parms{};

	Parms._bEnabled = _bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGBasicVehicle.SpawnPhysicsVehicle
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// TSubclassOf<class ABFGWheeledVehicle>   _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       _Transform                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class ABFGWheeledVehicle*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGWheeledVehicle* ABFGBasicVehicle::SpawnPhysicsVehicle(TSubclassOf<class ABFGWheeledVehicle> _type, const struct FTransform& _Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBasicVehicle", "SpawnPhysicsVehicle");

	Params::BFGBasicVehicle_SpawnPhysicsVehicle Parms{};

	Parms._type = _type;
	Parms._Transform = std::move(_Transform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGBasicVehicle.GetReplacementWheeledVehicleType
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// TSubclassOf<class ABFGWheeledVehicle>   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class ABFGWheeledVehicle> ABFGBasicVehicle::GetReplacementWheeledVehicleType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBasicVehicle", "GetReplacementWheeledVehicleType");

	Params::BFGBasicVehicle_GetReplacementWheeledVehicleType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGBasicVehicle.IsPhysicsEnabled
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGBasicVehicle::IsPhysicsEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBasicVehicle", "IsPhysicsEnabled");

	Params::BFGBasicVehicle_IsPhysicsEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGBasicVehicleTank.SetTrackUpdateFrequence
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _fNewTFrequence                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGBasicVehicleTank::SetTrackUpdateFrequence(float _fNewTFrequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBasicVehicleTank", "SetTrackUpdateFrequence");

	Params::BFGBasicVehicleTank_SetTrackUpdateFrequence Parms{};

	Parms._fNewTFrequence = _fNewTFrequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGBendableAntenna.HandleMentallyInteractabledUse
// (Final, Native, Protected)
// Parameters:
// class UBFGActorComponent_MentallyInteractable*_pMentallyInteractable                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      _pController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGBendableAntenna::HandleMentallyInteractabledUse(class UBFGActorComponent_MentallyInteractable* _pMentallyInteractable, class AController* _pController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBendableAntenna", "HandleMentallyInteractabledUse");

	Params::BFGBendableAntenna_HandleMentallyInteractabledUse Parms{};

	Parms._pMentallyInteractable = _pMentallyInteractable;
	Parms._pController = _pController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGBendableAntenna.OnBend
// (Event, Protected, BlueprintEvent)

void ABFGBendableAntenna::OnBend()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBendableAntenna", "OnBend");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGBombTruckInterface.GetBombTruckTimerAsString
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString IBFGBombTruckInterface::GetBombTruckTimerAsString()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBombTruckInterface", "GetBombTruckTimerAsString");

	Params::BFGBombTruckInterface_GetBombTruckTimerAsString Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGBombTruckInterface.SetBombTruckTimerEnabled
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    _bEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IBFGBombTruckInterface::SetBombTruckTimerEnabled(bool _bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBombTruckInterface", "SetBombTruckTimerEnabled");

	Params::BFGBombTruckInterface_SetBombTruckTimerEnabled Parms{};

	Parms._bEnabled = _bEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGBombTruckInterface.IsBombTruckTimerEnabled
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IBFGBombTruckInterface::IsBombTruckTimerEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBombTruckInterface", "IsBombTruckTimerEnabled");

	Params::BFGBombTruckInterface_IsBombTruckTimerEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGProjectile_PulseField.OnPulse
// (Native, Event, Protected, BlueprintEvent)

void ABFGProjectile_PulseField::OnPulse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_PulseField", "OnPulse");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGProjectile_PulseField.OnPulseEnter
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FBFGPulseActorData               _rData                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ABFGProjectile_PulseField::OnPulseEnter(const struct FBFGPulseActorData& _rData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_PulseField", "OnPulseEnter");

	Params::BFGProjectile_PulseField_OnPulseEnter Parms{};

	Parms._rData = std::move(_rData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGProjectile_PulseField.OnPulseExit
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FBFGPulseActorData               _rData                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ABFGProjectile_PulseField::OnPulseExit(const struct FBFGPulseActorData& _rData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_PulseField", "OnPulseExit");

	Params::BFGProjectile_PulseField_OnPulseExit Parms{};

	Parms._rData = std::move(_rData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGProjectile_PsiGrenade.OnFuseDone
// (Native, Event, Protected, BlueprintEvent)

void ABFGProjectile_PsiGrenade::OnFuseDone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_PsiGrenade", "OnFuseDone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGProjectile_PsiGrenade.OnFuseUpdated
// (Native, Event, Protected, BlueprintEvent)

void ABFGProjectile_PsiGrenade::OnFuseUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_PsiGrenade", "OnFuseUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVariableType_Dialog.GetState_DialogFinishedDoMultiple
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableType_Dialog::GetState_DialogFinishedDoMultiple()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_Dialog", "GetState_DialogFinishedDoMultiple");

	Params::BFGVariableType_Dialog_GetState_DialogFinishedDoMultiple Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_Dialog.GetState_DialogFinishedDoOnce
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableType_Dialog::GetState_DialogFinishedDoOnce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_Dialog", "GetState_DialogFinishedDoOnce");

	Params::BFGVariableType_Dialog_GetState_DialogFinishedDoOnce Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_Dialog.GetState_DialogNewDoMultiple
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableType_Dialog::GetState_DialogNewDoMultiple()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_Dialog", "GetState_DialogNewDoMultiple");

	Params::BFGVariableType_Dialog_GetState_DialogNewDoMultiple Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_Dialog.GetState_DialogNewDoOnce
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableType_Dialog::GetState_DialogNewDoOnce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_Dialog", "GetState_DialogNewDoOnce");

	Params::BFGVariableType_Dialog_GetState_DialogNewDoOnce Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_Dialog.GetTypeName_Dialog
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableType_Dialog::GetTypeName_Dialog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_Dialog", "GetTypeName_Dialog");

	Params::BFGVariableType_Dialog_GetTypeName_Dialog Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_Dialog.GetValueNamesForFinished
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UBFGVariableType_Dialog::GetValueNamesForFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_Dialog", "GetValueNamesForFinished");

	Params::BFGVariableType_Dialog_GetValueNamesForFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_Dialog.GetValueNamesForNew
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UBFGVariableType_Dialog::GetValueNamesForNew()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_Dialog", "GetValueNamesForNew");

	Params::BFGVariableType_Dialog_GetValueNamesForNew Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGBoss_TriggerBox.OnBeginOverlap
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pOverlappedActor                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pOtherActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGBoss_TriggerBox::OnBeginOverlap(class AActor* _pOverlappedActor, class AActor* _pOtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBoss_TriggerBox", "OnBeginOverlap");

	Params::BFGBoss_TriggerBox_OnBeginOverlap Parms{};

	Parms._pOverlappedActor = _pOverlappedActor;
	Parms._pOtherActor = _pOtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGBoss_TriggerBox.OnEndOverlap
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pOverlappedActor                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pOtherActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGBoss_TriggerBox::OnEndOverlap(class AActor* _pOverlappedActor, class AActor* _pOtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBoss_TriggerBox", "OnEndOverlap");

	Params::BFGBoss_TriggerBox_OnEndOverlap Parms{};

	Parms._pOverlappedActor = _pOverlappedActor;
	Parms._pOtherActor = _pOtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGBossHealthHUDManager.GetCurrentBossChracter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ABFGNPCCharacterBoss*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGNPCCharacterBoss* UBFGBossHealthHUDManager::GetCurrentBossChracter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBossHealthHUDManager", "GetCurrentBossChracter");

	Params::BFGBossHealthHUDManager_GetCurrentBossChracter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGBossReinforcementSpawner.OnReinforcementDeathStatChanged
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGActorStat_Bool*               _pStat                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGBossReinforcementSpawner::OnReinforcementDeathStatChanged(class AActor* _pActor, class UBFGActorStat_Bool* _pStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBossReinforcementSpawner", "OnReinforcementDeathStatChanged");

	Params::BFGBossReinforcementSpawner_OnReinforcementDeathStatChanged Parms{};

	Parms._pActor = _pActor;
	Parms._pStat = _pStat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGBossReinforcementSpawner.SetActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bActive                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGBossReinforcementSpawner::SetActive(bool _bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBossReinforcementSpawner", "SetActive");

	Params::BFGBossReinforcementSpawner_SetActive Parms{};

	Parms._bActive = _bActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGBossReinforcementSpawner.TrySpawnNPC
// (Final, Native, Public)
// Parameters:
// bool                                    _bAdjustSpawnLocation                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* ABFGBossReinforcementSpawner::TrySpawnNPC(bool _bAdjustSpawnLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBossReinforcementSpawner", "TrySpawnNPC");

	Params::BFGBossReinforcementSpawner_TrySpawnNPC Parms{};

	Parms._bAdjustSpawnLocation = _bAdjustSpawnLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGBossReinforcementSpawner.IsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGBossReinforcementSpawner::IsActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBossReinforcementSpawner", "IsActive");

	Params::BFGBossReinforcementSpawner_IsActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_Overhead.SetRichTextString
// (Event, Public, BlueprintEvent)
// Parameters:
// class FString                           _strText                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Overhead::SetRichTextString(const class FString& _strText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Overhead", "SetRichTextString");

	Params::BFGWidget_Overhead_SetRichTextString Parms{};

	Parms._strText = std::move(_strText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGTransitionManager.AddWorldRenderingDisabledRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGTransitionManager::AddWorldRenderingDisabledRequest(class UObject* _pObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTransitionManager", "AddWorldRenderingDisabledRequest");

	Params::BFGTransitionManager_AddWorldRenderingDisabledRequest Parms{};

	Parms._pObject = _pObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTransitionManager.GetFadeSystem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGFadeSystem*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGFadeSystem* UBFGTransitionManager::GetFadeSystem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTransitionManager", "GetFadeSystem");

	Params::BFGTransitionManager_GetFadeSystem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGTransitionManager.GetGameInstance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGGameInstance*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGGameInstance* UBFGTransitionManager::GetGameInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTransitionManager", "GetGameInstance");

	Params::BFGTransitionManager_GetGameInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGTransitionManager.RemoveWorldRenderingDisabledRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGTransitionManager::RemoveWorldRenderingDisabledRequest(class UObject* _pObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTransitionManager", "RemoveWorldRenderingDisabledRequest");

	Params::BFGTransitionManager_RemoveWorldRenderingDisabledRequest Parms{};

	Parms._pObject = _pObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTransitionManager.IsControlEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGTransitionManager::IsControlEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTransitionManager", "IsControlEnabled");

	Params::BFGTransitionManager_IsControlEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGTransitionManager.IsFadeOut
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGTransitionManager::IsFadeOut() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTransitionManager", "IsFadeOut");

	Params::BFGTransitionManager_IsFadeOut Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGTransitionManager.IsFading
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGTransitionManager::IsFading() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTransitionManager", "IsFading");

	Params::BFGTransitionManager_IsFading Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGTransitionManager.IsHidden
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGTransitionManager::IsHidden() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTransitionManager", "IsHidden");

	Params::BFGTransitionManager_IsHidden Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGTransitionManager.IsLoadingScreenShown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGTransitionManager::IsLoadingScreenShown() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTransitionManager", "IsLoadingScreenShown");

	Params::BFGTransitionManager_IsLoadingScreenShown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGBossReinforcementSpawner_Silhouette.DestroyPickup
// (Final, Native, Protected)

void ABFGBossReinforcementSpawner_Silhouette::DestroyPickup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBossReinforcementSpawner_Silhouette", "DestroyPickup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGBossReinforcementSpawner_Silhouette.GetIsAscending
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGBossReinforcementSpawner_Silhouette::GetIsAscending()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBossReinforcementSpawner_Silhouette", "GetIsAscending");

	Params::BFGBossReinforcementSpawner_Silhouette_GetIsAscending Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGBossReinforcementSpawner_Silhouette.GetIsDescending
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGBossReinforcementSpawner_Silhouette::GetIsDescending()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBossReinforcementSpawner_Silhouette", "GetIsDescending");

	Params::BFGBossReinforcementSpawner_Silhouette_GetIsDescending Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGBossReinforcementSpawner_Silhouette.GetIsInUse
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGBossReinforcementSpawner_Silhouette::GetIsInUse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBossReinforcementSpawner_Silhouette", "GetIsInUse");

	Params::BFGBossReinforcementSpawner_Silhouette_GetIsInUse Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGBossReinforcementSpawner_Silhouette.OnAnimationFinished
// (Final, Native, Protected, BlueprintCallable)

void ABFGBossReinforcementSpawner_Silhouette::OnAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBossReinforcementSpawner_Silhouette", "OnAnimationFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGBossReinforcementSpawner_Silhouette.OnBeginElevatorAscent
// (Event, Public, BlueprintEvent)

void ABFGBossReinforcementSpawner_Silhouette::OnBeginElevatorAscent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBossReinforcementSpawner_Silhouette", "OnBeginElevatorAscent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGBossReinforcementSpawner_Silhouette.OnBeginElevatorDescent
// (Event, Public, BlueprintEvent)

void ABFGBossReinforcementSpawner_Silhouette::OnBeginElevatorDescent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBossReinforcementSpawner_Silhouette", "OnBeginElevatorDescent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGBossReinforcementSpawner_Silhouette.OnBoxOverlapBegin
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ABFGBossReinforcementSpawner_Silhouette::OnBoxOverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBossReinforcementSpawner_Silhouette", "OnBoxOverlapBegin");

	Params::BFGBossReinforcementSpawner_Silhouette_OnBoxOverlapBegin Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGBossReinforcementSpawner_Silhouette.OnBoxOverlapEnd
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGBossReinforcementSpawner_Silhouette::OnBoxOverlapEnd(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBossReinforcementSpawner_Silhouette", "OnBoxOverlapEnd");

	Params::BFGBossReinforcementSpawner_Silhouette_OnBoxOverlapEnd Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGBossReinforcementSpawner_Silhouette.OnElevatorStopAscent
// (Event, Public, BlueprintEvent)

void ABFGBossReinforcementSpawner_Silhouette::OnElevatorStopAscent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBossReinforcementSpawner_Silhouette", "OnElevatorStopAscent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGBossReinforcementSpawner_Silhouette.OnElevatorStopDescent
// (Event, Public, BlueprintEvent)

void ABFGBossReinforcementSpawner_Silhouette::OnElevatorStopDescent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBossReinforcementSpawner_Silhouette", "OnElevatorStopDescent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGBossReinforcementSpawner_Silhouette.SetupChildReinforcementSpawners
// (Final, Native, Public, BlueprintCallable)

void ABFGBossReinforcementSpawner_Silhouette::SetupChildReinforcementSpawners()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBossReinforcementSpawner_Silhouette", "SetupChildReinforcementSpawners");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGBossReinforcementSpawner_Silhouette.StartSpawningSequence
// (Native, Public, BlueprintCallable)

void ABFGBossReinforcementSpawner_Silhouette::StartSpawningSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBossReinforcementSpawner_Silhouette", "StartSpawningSequence");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGBossSupportActor.BeginSupportAction
// (Native, Protected)

void ABFGBossSupportActor::BeginSupportAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBossSupportActor", "BeginSupportAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGBossSupportActor.BeginSupportTelegraph
// (Native, Protected)

void ABFGBossSupportActor::BeginSupportTelegraph()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBossSupportActor", "BeginSupportTelegraph");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGBossSupportActor.EndSupportAction
// (Native, Protected)

void ABFGBossSupportActor::EndSupportAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBossSupportActor", "EndSupportAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGBossSupportActor.IsSupportAvailable
// (Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGBossSupportActor::IsSupportAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBossSupportActor", "IsSupportAvailable");

	Params::BFGBossSupportActor_IsSupportAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGBossSupportActor.RequestSupport
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _pTargetActor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iPhaseNumber                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iStepIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGBossSupportActor::RequestSupport(class AActor* _pTargetActor, int32 _iPhaseNumber, int32 _iStepIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBossSupportActor", "RequestSupport");

	Params::BFGBossSupportActor_RequestSupport Parms{};

	Parms._pTargetActor = _pTargetActor;
	Parms._iPhaseNumber = _iPhaseNumber;
	Parms._iStepIndex = _iStepIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGTextWrapper.SetText
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _pText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGTextWrapper::SetText(const class FText& _pText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTextWrapper", "SetText");

	Params::BFGTextWrapper_SetText Parms{};

	Parms._pText = std::move(_pText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGNarrativeSequenceNode_PlayLevelSequence.FinishedSequence
// (Final, Native, Protected)
// Parameters:
// class ALevelSequenceActor*              _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bWasCutscene                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGNarrativeSequenceNode_PlayLevelSequence::FinishedSequence(class ALevelSequenceActor* _pActor, bool _bWasCutscene)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNarrativeSequenceNode_PlayLevelSequence", "FinishedSequence");

	Params::BFGNarrativeSequenceNode_PlayLevelSequence_FinishedSequence Parms{};

	Parms._pActor = _pActor;
	Parms._bWasCutscene = _bWasCutscene;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGBoundariesTriggerInterface.GetTriggerZoneIndicator
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMeshComponent*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UStaticMeshComponent* IBFGBoundariesTriggerInterface::GetTriggerZoneIndicator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBoundariesTriggerInterface", "GetTriggerZoneIndicator");

	Params::BFGBoundariesTriggerInterface_GetTriggerZoneIndicator Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGBoundariesTriggerInterface.GetTriggerZoneIndicatorComponent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPrimitiveComponent* IBFGBoundariesTriggerInterface::GetTriggerZoneIndicatorComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBoundariesTriggerInterface", "GetTriggerZoneIndicatorComponent");

	Params::BFGBoundariesTriggerInterface_GetTriggerZoneIndicatorComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGBoundariesTriggerInterface.TriggerZoneMessage
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    _bOut                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IBFGBoundariesTriggerInterface::TriggerZoneMessage(bool _bOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBoundariesTriggerInterface", "TriggerZoneMessage");

	Params::BFGBoundariesTriggerInterface_TriggerZoneMessage Parms{};

	Parms._bOut = _bOut;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_Newspaper_Content.GenerateTextImage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             _strText                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           _styleName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _oTextID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETextJustify                            _eTextJustification                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bBlockAlignment                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Newspaper_Content::GenerateTextImage(const class FText& _strText, const class FString& _styleName, class FName _oTextID, ETextJustify _eTextJustification, bool bBlockAlignment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Newspaper_Content", "GenerateTextImage");

	Params::BFGWidget_Newspaper_Content_GenerateTextImage Parms{};

	Parms._strText = std::move(_strText);
	Parms._styleName = std::move(_styleName);
	Parms._oTextID = _oTextID;
	Parms._eTextJustification = _eTextJustification;
	Parms.bBlockAlignment = bBlockAlignment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_Newspaper_Content.GetDrawSizeForTextID
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class FName                             _oName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UBFGWidget_Newspaper_Content::GetDrawSizeForTextID(class FName _oName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Newspaper_Content", "GetDrawSizeForTextID");

	Params::BFGWidget_Newspaper_Content_GetDrawSizeForTextID Parms{};

	Parms._oName = _oName;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_Newspaper_Content.GetObjectName
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UBFGWidget_Newspaper_Content::GetObjectName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Newspaper_Content", "GetObjectName");

	Params::BFGWidget_Newspaper_Content_GetObjectName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_Newspaper_Content.SetAdvertisement
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FSlateBrush                      _oImage                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   IIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Newspaper_Content::SetAdvertisement(const struct FSlateBrush& _oImage, int32 IIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Newspaper_Content", "SetAdvertisement");

	Params::BFGWidget_Newspaper_Content_SetAdvertisement Parms{};

	Parms._oImage = std::move(_oImage);
	Parms.IIndex = IIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Newspaper_Content.SetFrontImage
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FSlateBrush                      _oImage                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_Newspaper_Content::SetFrontImage(const struct FSlateBrush& _oImage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Newspaper_Content", "SetFrontImage");

	Params::BFGWidget_Newspaper_Content_SetFrontImage Parms{};

	Parms._oImage = std::move(_oImage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Newspaper_Content.SetTextImage
// (Event, Public, BlueprintEvent)
// Parameters:
// class UTextureRenderTarget2D*           _pImage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _oName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Newspaper_Content::SetTextImage(class UTextureRenderTarget2D* _pImage, class FName _oName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Newspaper_Content", "SetTextImage");

	Params::BFGWidget_Newspaper_Content_SetTextImage Parms{};

	Parms._pImage = _pImage;
	Parms._oName = _oName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGUFOAbility_EMP.OnProjectileEMPd
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ABFGProjectile*                   PProjectile                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGUFOAbility_EMP::OnProjectileEMPd(class ABFGProjectile* PProjectile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUFOAbility_EMP", "OnProjectileEMPd");

	Params::BFGUFOAbility_EMP_OnProjectileEMPd Parms{};

	Parms.PProjectile = PProjectile;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGDestructionEffect.StartDisablingEffect
// (Final, Native, Public, BlueprintCallable)

void ABFGDestructionEffect::StartDisablingEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDestructionEffect", "StartDisablingEffect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGDestructionEffect_Propagation.SetupPFX
// (Final, Native, Public, BlueprintCallable)

void ABFGDestructionEffect_Propagation::SetupPFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDestructionEffect_Propagation", "SetupPFX");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_SelectPlayerOption.SetQuestion
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _strQuestion                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_SelectPlayerOption::SetQuestion(const class FText& _strQuestion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_SelectPlayerOption", "SetQuestion");

	Params::BFGWidget_SelectPlayerOption_SetQuestion Parms{};

	Parms._strQuestion = std::move(_strQuestion);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_SelectPlayerOption.GetOptions
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class UBFGWidget_DialogOption*>ReturnValue                                            (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

const TArray<class UBFGWidget_DialogOption*> UBFGWidget_SelectPlayerOption::GetOptions() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_SelectPlayerOption", "GetOptions");

	Params::BFGWidget_SelectPlayerOption_GetOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGDestructionEffect_Clouds.SetupPFX
// (Final, Native, Public, BlueprintCallable)

void ABFGDestructionEffect_Clouds::SetupPFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDestructionEffect_Clouds", "SetupPFX");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_HUD_BossHealthbar.OnHealthChanged
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _fHealth                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_BossHealthbar::OnHealthChanged(float _fHealth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_BossHealthbar", "OnHealthChanged");

	Params::BFGWidget_HUD_BossHealthbar_OnHealthChanged Parms{};

	Parms._fHealth = _fHealth;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_HUD_BossHealthbar.OnPhaseChanged
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _iPhase                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_BossHealthbar::OnPhaseChanged(int32 _iPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_BossHealthbar", "OnPhaseChanged");

	Params::BFGWidget_HUD_BossHealthbar_OnPhaseChanged Parms{};

	Parms._iPhase = _iPhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_HUD_BossHealthbar.OnSetMaxBossPhases
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _iMaxPhases                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_BossHealthbar::OnSetMaxBossPhases(int32 _iMaxPhases)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_BossHealthbar", "OnSetMaxBossPhases");

	Params::BFGWidget_HUD_BossHealthbar_OnSetMaxBossPhases Parms{};

	Parms._iMaxPhases = _iMaxPhases;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_HUD_BossHealthbar.OnSetupPhase
// (Event, Public, BlueprintEvent)

void UBFGWidget_HUD_BossHealthbar::OnSetupPhase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_BossHealthbar", "OnSetupPhase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGNetworkPathAgent_AttachedEntity.OnActorSpawned
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bPreFinalize                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGNetworkPathAgent_AttachedEntity::OnActorSpawned(class AActor* _pActor, bool _bPreFinalize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNetworkPathAgent_AttachedEntity", "OnActorSpawned");

	Params::BFGNetworkPathAgent_AttachedEntity_OnActorSpawned Parms{};

	Parms._pActor = _pActor;
	Parms._bPreFinalize = _bPreFinalize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNetworkPathAgent_AttachedEntity.OnAIStateChanged
// (Final, Native, Protected)
// Parameters:
// EBFGBehaviourState_NPC                  _newState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGNetworkPathAgent_AttachedEntity::OnAIStateChanged(EBFGBehaviourState_NPC _newState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNetworkPathAgent_AttachedEntity", "OnAIStateChanged");

	Params::BFGNetworkPathAgent_AttachedEntity_OnAIStateChanged Parms{};

	Parms._newState = _newState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNetworkPathAgent_AttachedEntity.OnAttachedActorDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGNetworkPathAgent_AttachedEntity::OnAttachedActorDestroyed(class AActor* _pActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNetworkPathAgent_AttachedEntity", "OnAttachedActorDestroyed");

	Params::BFGNetworkPathAgent_AttachedEntity_OnAttachedActorDestroyed Parms{};

	Parms._pActor = _pActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNetworkPathAgent_AttachedEntity.OnDeadStatusChanged
// (Native, Protected)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGActorStat_Bool*               _pStat                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGNetworkPathAgent_AttachedEntity::OnDeadStatusChanged(class AActor* _pActor, class UBFGActorStat_Bool* _pStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNetworkPathAgent_AttachedEntity", "OnDeadStatusChanged");

	Params::BFGNetworkPathAgent_AttachedEntity_OnDeadStatusChanged Parms{};

	Parms._pActor = _pActor;
	Parms._pStat = _pStat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNetworkPathAgent_AttachedEntity.OnHealthChanged
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGActorStat_Float*              _pStat                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGNetworkPathAgent_AttachedEntity::OnHealthChanged(class AActor* _pActor, class UBFGActorStat_Float* _pStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNetworkPathAgent_AttachedEntity", "OnHealthChanged");

	Params::BFGNetworkPathAgent_AttachedEntity_OnHealthChanged Parms{};

	Parms._pActor = _pActor;
	Parms._pStat = _pStat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNetworkPathAgent_AttachedEntity.OnHealthDamaged
// (Final, Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// class UBFGActorComponent_PawnDamage*    _pPawnDamage                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fDamage                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pDamageCauser                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGDamageType*                   _pDamageType                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _rShotDirection                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       _oHitResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UBFGNetworkPathAgent_AttachedEntity::OnHealthDamaged(class UBFGActorComponent_PawnDamage* _pPawnDamage, float _fDamage, class AActor* _pDamageCauser, const class UBFGDamageType* _pDamageType, const struct FVector& _rShotDirection, const struct FHitResult& _oHitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNetworkPathAgent_AttachedEntity", "OnHealthDamaged");

	Params::BFGNetworkPathAgent_AttachedEntity_OnHealthDamaged Parms{};

	Parms._pPawnDamage = _pPawnDamage;
	Parms._fDamage = _fDamage;
	Parms._pDamageCauser = _pDamageCauser;
	Parms._pDamageType = _pDamageType;
	Parms._rShotDirection = std::move(_rShotDirection);
	Parms._oHitResult = std::move(_oHitResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNetworkPathAgent_AttachedEntity.GetLightweightActorHandle
// (Final, Native, Public, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGNetworkPathAgent_AttachedEntity::GetLightweightActorHandle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNetworkPathAgent_AttachedEntity", "GetLightweightActorHandle");

	Params::BFGNetworkPathAgent_AttachedEntity_GetLightweightActorHandle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGTransmogrifyTargetInterface.OnTransmogrifyComplete
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IBFGTransmogrifyTargetInterface::OnTransmogrifyComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTransmogrifyTargetInterface", "OnTransmogrifyComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTransmogrifyTargetInterface.OnTransmogrifyStart
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IBFGTransmogrifyTargetInterface::OnTransmogrifyStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTransmogrifyTargetInterface", "OnTransmogrifyStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTransmogrifyTargetInterface.IsImmuneToTransmog
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IBFGTransmogrifyTargetInterface::IsImmuneToTransmog() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTransmogrifyTargetInterface", "IsImmuneToTransmog");

	Params::BFGTransmogrifyTargetInterface_IsImmuneToTransmog Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_HUD_ProximityMonitors.OnLayoutChanged
// (Event, Public, BlueprintEvent)

void UBFGWidget_HUD_ProximityMonitors::OnLayoutChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_ProximityMonitors", "OnLayoutChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGNPCCharacterEnemy_PSIStation.OnDrainStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bIsBeingDrained                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterEnemy_PSIStation::OnDrainStateChanged(bool _bIsBeingDrained)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterEnemy_PSIStation", "OnDrainStateChanged");

	Params::BFGNPCCharacterEnemy_PSIStation_OnDrainStateChanged Parms{};

	Parms._bIsBeingDrained = _bIsBeingDrained;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGNPCCharacterEnemy_PSIStation.OnStationActivation
// (Event, Public, BlueprintEvent)

void ABFGNPCCharacterEnemy_PSIStation::OnStationActivation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterEnemy_PSIStation", "OnStationActivation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGNPCCharacterEnemy_PSIStation.GetIsBeingActivelyDrained
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGNPCCharacterEnemy_PSIStation::GetIsBeingActivelyDrained() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterEnemy_PSIStation", "GetIsBeingActivelyDrained");

	Params::BFGNPCCharacterEnemy_PSIStation_GetIsBeingActivelyDrained Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterEnemy_PSIStation.IsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGNPCCharacterEnemy_PSIStation::IsActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterEnemy_PSIStation", "IsActive");

	Params::BFGNPCCharacterEnemy_PSIStation_IsActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_HUD_PlayerStats.OnRegainShield
// (Event, Public, BlueprintEvent)

void UBFGWidget_HUD_PlayerStats::OnRegainShield()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_PlayerStats", "OnRegainShield");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_HUD_PlayerStats.UpdateVisuals
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   InDeltaTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_PlayerStats::UpdateVisuals(float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_PlayerStats", "UpdateVisuals");

	Params::BFGWidget_HUD_PlayerStats_UpdateVisuals Parms{};

	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGInputAxis.OnUpdate
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UBFGActorComponent_InputActions*  _pInputAxissComponent                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGInputAxis::OnUpdate(class UBFGActorComponent_InputActions* _pInputAxissComponent, float _fValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputAxis", "OnUpdate");

	Params::BFGInputAxis_OnUpdate Parms{};

	Parms._pInputAxissComponent = _pInputAxissComponent;
	Parms._fValue = _fValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGInputAction.OnActionInvalid
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UBFGActorComponent_InputActions*  _pInputActionsComponent                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGInputAction::OnActionInvalid(class UBFGActorComponent_InputActions* _pInputActionsComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputAction", "OnActionInvalid");

	Params::BFGInputAction_OnActionInvalid Parms{};

	Parms._pInputActionsComponent = _pInputActionsComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGInputAction.OnActionValid
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UBFGActorComponent_InputActions*  _pInputActionsComponent                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGInputAction::OnActionValid(class UBFGActorComponent_InputActions* _pInputActionsComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputAction", "OnActionValid");

	Params::BFGInputAction_OnActionValid Parms{};

	Parms._pInputActionsComponent = _pInputActionsComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGInputAction.OnCheckCanceled
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UBFGActorComponent_InputActions*  _pInputActionsComponent                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGInputAction::OnCheckCanceled(class UBFGActorComponent_InputActions* _pInputActionsComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputAction", "OnCheckCanceled");

	Params::BFGInputAction_OnCheckCanceled Parms{};

	Parms._pInputActionsComponent = _pInputActionsComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGInputAction.OnInputInvalid
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UBFGActorComponent_InputActions*  _pInputActionsComponent                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGInputAction::OnInputInvalid(class UBFGActorComponent_InputActions* _pInputActionsComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputAction", "OnInputInvalid");

	Params::BFGInputAction_OnInputInvalid Parms{};

	Parms._pInputActionsComponent = _pInputActionsComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGInputAction.OnInputValid
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UBFGActorComponent_InputActions*  _pInputActionsComponent                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGInputAction::OnInputValid(class UBFGActorComponent_InputActions* _pInputActionsComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputAction", "OnInputValid");

	Params::BFGInputAction_OnInputValid Parms{};

	Parms._pInputActionsComponent = _pInputActionsComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGBurningGroundManager.AddBurntInstance
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UStaticMesh*                      _pMesh                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       _Transform                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    _bAddToPendingCheckpointList                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGFoliageBurnt*                 ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGFoliageBurnt* UBFGBurningGroundManager::AddBurntInstance(class UStaticMesh* _pMesh, const struct FTransform& _Transform, bool _bAddToPendingCheckpointList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBurningGroundManager", "AddBurntInstance");

	Params::BFGBurningGroundManager_AddBurntInstance Parms{};

	Parms._pMesh = _pMesh;
	Parms._Transform = std::move(_Transform);
	Parms._bAddToPendingCheckpointList = _bAddToPendingCheckpointList;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGBurningGroundManager.AddWriteEvent
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        _vPosition                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fDrawSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bChanneled                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fAngle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fGlow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fBurningDuration                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGBurningGroundManager::AddWriteEvent(const struct FVector2D& _vPosition, float _fDrawSize, bool _bChanneled, float _fAngle, float _fGlow, float _fBurningDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBurningGroundManager", "AddWriteEvent");

	Params::BFGBurningGroundManager_AddWriteEvent Parms{};

	Parms._vPosition = std::move(_vPosition);
	Parms._fDrawSize = _fDrawSize;
	Parms._bChanneled = _bChanneled;
	Parms._fAngle = _fAngle;
	Parms._fGlow = _fGlow;
	Parms._fBurningDuration = _fBurningDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGBurningGroundManager.GetBurningGroundActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ABFGBurningGround*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGBurningGround* UBFGBurningGroundManager::GetBurningGroundActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBurningGroundManager", "GetBurningGroundActor");

	Params::BFGBurningGroundManager_GetBurningGroundActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGBurningGroundManager.GetRenderTargetSize
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   _iOutWidth                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iOutHeight                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGBurningGroundManager::GetRenderTargetSize(int32* _iOutWidth, int32* _iOutHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBurningGroundManager", "GetRenderTargetSize");

	Params::BFGBurningGroundManager_GetRenderTargetSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_iOutWidth != nullptr)
		*_iOutWidth = Parms._iOutWidth;

	if (_iOutHeight != nullptr)
		*_iOutHeight = Parms._iOutHeight;
}


// Function BFGCore.BFGBurningGroundManager.Initialize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTextureRenderTarget2D*           _pRTPing                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTextureRenderTarget2D*           _pRTPong                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         _pWriteChanneled                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         _pWriteSplash                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         _pMaterialGlowDecay                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _GlowParam                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _GlowDecaySourceParam                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _TransitionMeshEnabledParam                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _TransitionMeshLocationParam                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fMaxGlowTime                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGBurningGroundManager::Initialize(class UTextureRenderTarget2D* _pRTPing, class UTextureRenderTarget2D* _pRTPong, class UMaterialInstanceDynamic* _pWriteChanneled, class UMaterialInstanceDynamic* _pWriteSplash, class UMaterialInstanceDynamic* _pMaterialGlowDecay, class FName _GlowParam, class FName _GlowDecaySourceParam, class FName _TransitionMeshEnabledParam, class FName _TransitionMeshLocationParam, float _fMaxGlowTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBurningGroundManager", "Initialize");

	Params::BFGBurningGroundManager_Initialize Parms{};

	Parms._pRTPing = _pRTPing;
	Parms._pRTPong = _pRTPong;
	Parms._pWriteChanneled = _pWriteChanneled;
	Parms._pWriteSplash = _pWriteSplash;
	Parms._pMaterialGlowDecay = _pMaterialGlowDecay;
	Parms._GlowParam = _GlowParam;
	Parms._GlowDecaySourceParam = _GlowDecaySourceParam;
	Parms._TransitionMeshEnabledParam = _TransitionMeshEnabledParam;
	Parms._TransitionMeshLocationParam = _TransitionMeshLocationParam;
	Parms._fMaxGlowTime = _fMaxGlowTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGBurningGroundManager.IsActorTouchingBurningGround
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          _vLocation                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGBurningGroundManager::IsActorTouchingBurningGround(const struct FVector& _vLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBurningGroundManager", "IsActorTouchingBurningGround");

	Params::BFGBurningGroundManager_IsActorTouchingBurningGround Parms{};

	Parms._vLocation = std::move(_vLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGBurningGroundManager.RegisterTransitionMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGFoliageDitheredMeshTransition*_pComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGBurningGroundManager::RegisterTransitionMesh(class UBFGFoliageDitheredMeshTransition* _pComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBurningGroundManager", "RegisterTransitionMesh");

	Params::BFGBurningGroundManager_RegisterTransitionMesh Parms{};

	Parms._pComponent = _pComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGBurningGroundManager.RemoveNormalInstance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFoliageInstancedStaticMeshComponent*_pComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iInstanceId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGBurningGroundManager::RemoveNormalInstance(class UFoliageInstancedStaticMeshComponent* _pComponent, int32 _iInstanceId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBurningGroundManager", "RemoveNormalInstance");

	Params::BFGBurningGroundManager_RemoveNormalInstance Parms{};

	Parms._pComponent = _pComponent;
	Parms._iInstanceId = _iInstanceId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGBurningGroundManager.GetCurrentBurningGroundActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ABFGBurningGround*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGBurningGround* UBFGBurningGroundManager::GetCurrentBurningGroundActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBurningGroundManager", "GetCurrentBurningGroundActor");

	Params::BFGBurningGroundManager_GetCurrentBurningGroundActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMissionTriggerZone.ActivateEndTrigger
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _pWithActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGMissionTriggerZone::ActivateEndTrigger(class AActor* _pWithActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionTriggerZone", "ActivateEndTrigger");

	Params::BFGMissionTriggerZone_ActivateEndTrigger Parms{};

	Parms._pWithActor = _pWithActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMissionTriggerZone.ActivateTrigger
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _pWithActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGMissionTriggerZone::ActivateTrigger(class AActor* _pWithActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionTriggerZone", "ActivateTrigger");

	Params::BFGMissionTriggerZone_ActivateTrigger Parms{};

	Parms._pWithActor = _pWithActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMissionTriggerZone.CanActivateWith
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGMissionTriggerZone::CanActivateWith(class AActor* _pActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionTriggerZone", "CanActivateWith");

	Params::BFGMissionTriggerZone_CanActivateWith Parms{};

	Parms._pActor = _pActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMissionTriggerZone.GetActiveOverlappingActors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class AActor*>             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class AActor*> ABFGMissionTriggerZone::GetActiveOverlappingActors() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionTriggerZone", "GetActiveOverlappingActors");

	Params::BFGMissionTriggerZone_GetActiveOverlappingActors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMissionTriggerZone.IsIntersectingSlow
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FVector                          _vLocation                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGMissionTriggerZone::IsIntersectingSlow(const struct FVector& _vLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionTriggerZone", "IsIntersectingSlow");

	Params::BFGMissionTriggerZone_IsIntersectingSlow Parms{};

	Parms._vLocation = std::move(_vLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGCheatUIMenu.AddUIEelement
// (Event, Public, BlueprintEvent)
// Parameters:
// class FString                           _strCategoryName                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGCheatUIMenu::AddUIEelement(const class FString& _strCategoryName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatUIMenu", "AddUIEelement");

	Params::BFGCheatUIMenu_AddUIEelement Parms{};

	Parms._strCategoryName = std::move(_strCategoryName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGCheatUIMenu.CreateCheatCategoryButton
// (Event, Public, BlueprintEvent)
// Parameters:
// class FString                           _strTitleText                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UBFGCheatUIMenu::CreateCheatCategoryButton(const class FString& _strTitleText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatUIMenu", "CreateCheatCategoryButton");

	Params::BFGCheatUIMenu_CreateCheatCategoryButton Parms{};

	Parms._strTitleText = std::move(_strTitleText);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGCheatUIMenu.CreateCheatCommandButton
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FBFGCheatTableEntry              _entry                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UBFGCheatUIMenu::CreateCheatCommandButton(const struct FBFGCheatTableEntry& _entry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatUIMenu", "CreateCheatCommandButton");

	Params::BFGCheatUIMenu_CreateCheatCommandButton Parms{};

	Parms._entry = std::move(_entry);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGCheatUIMenu.GoToPreviousMenu
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGCheatUIMenu::GoToPreviousMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatUIMenu", "GoToPreviousMenu");

	Params::BFGCheatUIMenu_GoToPreviousMenu Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGCheatUIMenu.RefreshUIElements
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           _strCategoryName                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGCheatUIMenu::RefreshUIElements(const class FString& _strCategoryName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCheatUIMenu", "RefreshUIElements");

	Params::BFGCheatUIMenu_RefreshUIElements Parms{};

	Parms._strCategoryName = std::move(_strCategoryName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCollisionUtils.ConvertCollisionChannelToBFG
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECollisionChannel                       _eCollisionChannel                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBFGCollisionChannel                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBFGCollisionChannel UBFGCollisionUtils::ConvertCollisionChannelToBFG(ECollisionChannel _eCollisionChannel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGCollisionUtils", "ConvertCollisionChannelToBFG");

	Params::BFGCollisionUtils_ConvertCollisionChannelToBFG Parms{};

	Parms._eCollisionChannel = _eCollisionChannel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGCollisionUtils.ConvertCollisionChannelToECC
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EBFGCollisionChannel                    _eBFGCollisionChannel                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECollisionChannel                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECollisionChannel UBFGCollisionUtils::ConvertCollisionChannelToECC(EBFGCollisionChannel _eBFGCollisionChannel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGCollisionUtils", "ConvertCollisionChannelToECC");

	Params::BFGCollisionUtils_ConvertCollisionChannelToECC Parms{};

	Parms._eBFGCollisionChannel = _eBFGCollisionChannel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGCollisionUtils.IsCollisionProfileName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             _name                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCollisionProfileName            _profileName                                           (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGCollisionUtils::IsCollisionProfileName(class FName _name, const struct FCollisionProfileName& _profileName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGCollisionUtils", "IsCollisionProfileName");

	Params::BFGCollisionUtils_IsCollisionProfileName Parms{};

	Parms._name = _name;
	Parms._profileName = std::move(_profileName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction BFGCore.BFGGameFlowState_GenericDialog.Action__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UBFGGameFlowState_GenericDialog::Action__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_GenericDialog", "Action__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction BFGCore.BFGGameFlowState_GenericDialog.ActionDialogMessage__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EBFGDialogMessage                       _eMessage                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_GenericDialog::ActionDialogMessage__DelegateSignature(EBFGDialogMessage _eMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_GenericDialog", "ActionDialogMessage__DelegateSignature");

	Params::BFGGameFlowState_GenericDialog_ActionDialogMessage__DelegateSignature Parms{};

	Parms._eMessage = _eMessage;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BFGCore.BFGGameFlowState_GenericDialog.ActionGenericDialog__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UBFGWidget_GenericDialog*         _pDialog                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_GenericDialog::ActionGenericDialog__DelegateSignature(class UBFGWidget_GenericDialog* _pDialog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_GenericDialog", "ActionGenericDialog__DelegateSignature");

	Params::BFGGameFlowState_GenericDialog_ActionGenericDialog__DelegateSignature Parms{};

	Parms._pDialog = _pDialog;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BFGCore.BFGGameFlowState_GenericDialog.ActionIndex__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_GenericDialog::ActionIndex__DelegateSignature(int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_GenericDialog", "ActionIndex__DelegateSignature");

	Params::BFGGameFlowState_GenericDialog_ActionIndex__DelegateSignature Parms{};

	Parms._iIndex = _iIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGGameFlowState_GenericDialog.OnDialogCancel
// (Native, Event, Public, BlueprintEvent)

void UBFGGameFlowState_GenericDialog::OnDialogCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_GenericDialog", "OnDialogCancel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_GenericDialog.OnDialogChangedSelection
// (Native, Event, Public, BlueprintEvent)

void UBFGGameFlowState_GenericDialog::OnDialogChangedSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_GenericDialog", "OnDialogChangedSelection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_GenericDialog.OnDialogOption
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// int32                                   IIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_GenericDialog::OnDialogOption(int32 IIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_GenericDialog", "OnDialogOption");

	Params::BFGGameFlowState_GenericDialog_OnDialogOption Parms{};

	Parms.IIndex = IIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_GenericDialog.OnOptionHandlerMessage
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UBFGDialogOptionHandler_Base*     _pHandler                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBFGDialogMessage                       _eMessage                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_GenericDialog::OnOptionHandlerMessage(class UBFGDialogOptionHandler_Base* _pHandler, EBFGDialogMessage _eMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_GenericDialog", "OnOptionHandlerMessage");

	Params::BFGGameFlowState_GenericDialog_OnOptionHandlerMessage Parms{};

	Parms._pHandler = _pHandler;
	Parms._eMessage = _eMessage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_GenericDialog.FindOptionHandlerByName
// (Final, Native, Public, Const)
// Parameters:
// class FName                             _name                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGDialogOptionHandler_Base*     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGDialogOptionHandler_Base* UBFGGameFlowState_GenericDialog::FindOptionHandlerByName(class FName _name) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_GenericDialog", "FindOptionHandlerByName");

	Params::BFGGameFlowState_GenericDialog_FindOptionHandlerByName Parms{};

	Parms._name = _name;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameFlowState_GenericDialog_Customizable.OnCustomOptionRegistered
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_GenericDialog_Customizable::OnCustomOptionRegistered(int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_GenericDialog_Customizable", "OnCustomOptionRegistered");

	Params::BFGGameFlowState_GenericDialog_Customizable_OnCustomOptionRegistered Parms{};

	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_WaitForChunkload.OnPurchaseScreenClosed
// (Final, Native, Public)
// Parameters:
// bool                                    _bPurchased                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_WaitForChunkload::OnPurchaseScreenClosed(bool _bPurchased)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_WaitForChunkload", "OnPurchaseScreenClosed");

	Params::BFGGameFlowState_WaitForChunkload_OnPurchaseScreenClosed Parms{};

	Parms._bPurchased = _bPurchased;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGQuest_ElementInsideTriggerTimer.OnEnterdQuestStep
// (Final, Native, Protected)
// Parameters:
// class UBFGQuest_Element*                _pElement                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGQuest_ElementInsideTriggerTimer::OnEnterdQuestStep(class UBFGQuest_Element* _pElement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_ElementInsideTriggerTimer", "OnEnterdQuestStep");

	Params::BFGQuest_ElementInsideTriggerTimer_OnEnterdQuestStep Parms{};

	Parms._pElement = _pElement;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGInputScheme.GetLayoutTexture
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UBFGInputScheme::GetLayoutTexture() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputScheme", "GetLayoutTexture");

	Params::BFGInputScheme_GetLayoutTexture Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGInputScheme.GetName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UBFGInputScheme::GetName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputScheme", "GetName");

	Params::BFGInputScheme_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGCrowdLifeStationComponent.SetStationEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGCrowdLifeStationComponent::SetStationEnabled(bool _bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCrowdLifeStationComponent", "SetStationEnabled");

	Params::BFGCrowdLifeStationComponent_SetStationEnabled Parms{};

	Parms._bEnabled = _bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCrowdLifeStationComponent.IsStationEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGCrowdLifeStationComponent::IsStationEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCrowdLifeStationComponent", "IsStationEnabled");

	Params::BFGCrowdLifeStationComponent_IsStationEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameplayEffectResponse.OnActivate
// (Native, Event, Protected, BlueprintEvent)

void UBFGGameplayEffectResponse::OnActivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameplayEffectResponse", "OnActivate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameplayEffectResponse.OnDeactivate
// (Native, Event, Protected, BlueprintEvent)

void UBFGGameplayEffectResponse::OnDeactivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameplayEffectResponse", "OnDeactivate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameplayEffectResponse.OnSustain
// (Native, Event, Protected, BlueprintEvent)

void UBFGGameplayEffectResponse::OnSustain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameplayEffectResponse", "OnSustain");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCrowdScriptConComponent.OnParticipantDead
// (Final, Native, Protected)
// Parameters:
// class UBFGNetworkPathAgent*             _pAgent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bIsAttached                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGCrowdScriptConComponent::OnParticipantDead(class UBFGNetworkPathAgent* _pAgent, class AActor* _pActor, bool _bIsAttached)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCrowdScriptConComponent", "OnParticipantDead");

	Params::BFGCrowdScriptConComponent_OnParticipantDead Parms{};

	Parms._pAgent = _pAgent;
	Parms._pActor = _pActor;
	Parms._bIsAttached = _bIsAttached;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCrowdScriptConComponent.OnParticipantDestroyed
// (Final, Native, Protected)
// Parameters:
// class UBFGNetworkPathAgent*             _pAgent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGCrowdScriptConComponent::OnParticipantDestroyed(class UBFGNetworkPathAgent* _pAgent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCrowdScriptConComponent", "OnParticipantDestroyed");

	Params::BFGCrowdScriptConComponent_OnParticipantDestroyed Parms{};

	Parms._pAgent = _pAgent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCrowdScriptConComponent.SetEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGCrowdScriptConComponent::SetEnabled(bool _bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCrowdScriptConComponent", "SetEnabled");

	Params::BFGCrowdScriptConComponent_SetEnabled Parms{};

	Parms._bEnabled = _bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCrowdScriptConComponent.IsEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGCrowdScriptConComponent::IsEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCrowdScriptConComponent", "IsEnabled");

	Params::BFGCrowdScriptConComponent_IsEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGCustomDataVariable.SetDataValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _fValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGCustomDataVariable::SetDataValue(float _fValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCustomDataVariable", "SetDataValue");

	Params::BFGCustomDataVariable_SetDataValue Parms{};

	Parms._fValue = _fValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGCustomDataVariable.GetDataValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGCustomDataVariable::GetDataValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGCustomDataVariable", "GetDataValue");

	Params::BFGCustomDataVariable_GetDataValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGDataAsset_ChallengeInfo.GetCurrentHighscore
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGDataAsset_ChallengeInfo::GetCurrentHighscore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDataAsset_ChallengeInfo", "GetCurrentHighscore");

	Params::BFGDataAsset_ChallengeInfo_GetCurrentHighscore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGDataAsset_ChallengeInfo.GetMinimumValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGDataAsset_ChallengeInfo::GetMinimumValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDataAsset_ChallengeInfo", "GetMinimumValue");

	Params::BFGDataAsset_ChallengeInfo_GetMinimumValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGDataAsset_ChallengeInfo.GetStarValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   _fScore                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGDataAsset_ChallengeInfo::GetStarValue(float _fScore) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDataAsset_ChallengeInfo", "GetStarValue");

	Params::BFGDataAsset_ChallengeInfo_GetStarValue Parms{};

	Parms._fScore = _fScore;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMissionConsequence.GetContext
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FBFGMissionConsequence_ContextReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FBFGMissionConsequence_Context UBFGMissionConsequence::GetContext() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionConsequence", "GetContext");

	Params::BFGMissionConsequence_GetContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMissionConsequence.GetDevName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGMissionConsequence::GetDevName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionConsequence", "GetDevName");

	Params::BFGMissionConsequence_GetDevName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMissionConsequence.GetDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGMissionConsequence::GetDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionConsequence", "GetDuration");

	Params::BFGMissionConsequence_GetDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMissionConsequence.GetGameState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ABFGGameState*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGGameState* UBFGMissionConsequence::GetGameState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionConsequence", "GetGameState");

	Params::BFGMissionConsequence_GetGameState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMissionConsequence.GetOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UObject>              _pClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UBFGMissionConsequence::GetOwner(TSubclassOf<class UObject> _pClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionConsequence", "GetOwner");

	Params::BFGMissionConsequence_GetOwner Parms{};

	Parms._pClass = _pClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMissionConsequence.GetTimeActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGMissionConsequence::GetTimeActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionConsequence", "GetTimeActive");

	Params::BFGMissionConsequence_GetTimeActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMissionConsequence.IsExpired
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGMissionConsequence::IsExpired() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionConsequence", "IsExpired");

	Params::BFGMissionConsequence_IsExpired Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGDataAsset_StaticMeshBurning.IsValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGDataAsset_StaticMeshBurning::IsValid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDataAsset_StaticMeshBurning", "IsValid");

	Params::BFGDataAsset_StaticMeshBurning_IsValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMissionLevelSwitcher.GetLevelName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ABFGMissionLevelSwitcher::GetLevelName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionLevelSwitcher", "GetLevelName");

	Params::BFGMissionLevelSwitcher_GetLevelName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMissionLevelSwitcher.GetLevelPath
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ABFGMissionLevelSwitcher::GetLevelPath() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionLevelSwitcher", "GetLevelPath");

	Params::BFGMissionLevelSwitcher_GetLevelPath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGDebugUtils.DebugBreak
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGDebugUtils::DebugBreak(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGDebugUtils", "DebugBreak");

	Params::BFGDebugUtils_DebugBreak Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGSequencePlaybackManager.GameSystem_LevelSequenceLog
// (Final, Exec, Native, Public, Const)

void UBFGSequencePlaybackManager::GameSystem_LevelSequenceLog() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSequencePlaybackManager", "GameSystem_LevelSequenceLog");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGFactionResolver.ResolveActorAttitute
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _pActorA                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pActorB                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bAllowNoFaction                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETeamAttitude                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETeamAttitude UBFGFactionResolver::ResolveActorAttitute(class AActor* _pActorA, class AActor* _pActorB, bool _bAllowNoFaction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGFactionResolver", "ResolveActorAttitute");

	Params::BFGFactionResolver_ResolveActorAttitute Parms{};

	Parms._pActorA = _pActorA;
	Parms._pActorB = _pActorB;
	Parms._bAllowNoFaction = _bAllowNoFaction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGFactionResolver.ResolveAttitute
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FGenericTeamId                   _teamA                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGenericTeamId                   _teamB                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETeamAttitude                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETeamAttitude UBFGFactionResolver::ResolveAttitute(const struct FGenericTeamId& _teamA, const struct FGenericTeamId& _teamB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGFactionResolver", "ResolveAttitute");

	Params::BFGFactionResolver_ResolveAttitute Parms{};

	Parms._teamA = std::move(_teamA);
	Parms._teamB = std::move(_teamB);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGFactionResolver.SetFactionForActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBFGFaction                             _faction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGFactionResolver::SetFactionForActor(class AActor* _pActor, EBFGFaction _faction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGFactionResolver", "SetFactionForActor");

	Params::BFGFactionResolver_SetFactionForActor Parms{};

	Parms._pActor = _pActor;
	Parms._faction = _faction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGDecorator_GameplayEffectTags.OnPawnChanged
// (Final, Native, Public)
// Parameters:
// class APawn*                            _pPawn                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGDecorator_GameplayEffectTags::OnPawnChanged(class APawn* _pPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDecorator_GameplayEffectTags", "OnPawnChanged");

	Params::BFGDecorator_GameplayEffectTags_OnPawnChanged Parms{};

	Parms._pPawn = _pPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGDecorator_GameplayEffectTags.OnTagChanged
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FGameplayTag                     _rTag                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pTargetActor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGDecorator_GameplayEffectTags::OnTagChanged(const struct FGameplayTag& _rTag, class AActor* _pTargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDecorator_GameplayEffectTags", "OnTagChanged");

	Params::BFGDecorator_GameplayEffectTags_OnTagChanged Parms{};

	Parms._rTag = std::move(_rTag);
	Parms._pTargetActor = _pTargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGItemDestructable.OnDeathStateChanged
// (Final, Native, Public)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGActorStat_Bool*               _pStat                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGItemDestructable::OnDeathStateChanged(class AActor* _pActor, class UBFGActorStat_Bool* _pStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGItemDestructable", "OnDeathStateChanged");

	Params::BFGItemDestructable_OnDeathStateChanged Parms{};

	Parms._pActor = _pActor;
	Parms._pStat = _pStat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVariableMessageServer.OnVariableChanged
// (Final, Native, Protected)
// Parameters:
// class UBFGVariableMirror*               _pVarMirror                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGVariable*                     _pVariable                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _oldValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _newValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGVariableMessageServer::OnVariableChanged(class UBFGVariableMirror* _pVarMirror, const class UBFGVariable* _pVariable, int32 _oldValue, int32 _newValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVariableMessageServer", "OnVariableChanged");

	Params::BFGVariableMessageServer_OnVariableChanged Parms{};

	Parms._pVarMirror = _pVarMirror;
	Parms._pVariable = _pVariable;
	Parms._oldValue = _oldValue;
	Parms._newValue = _newValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGDestructionEffect_BuildingFluff.SetupPFX
// (Final, Native, Public, BlueprintCallable)

void ABFGDestructionEffect_BuildingFluff::SetupPFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDestructionEffect_BuildingFluff", "SetupPFX");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGDestructionEffect_Details.SetupPFX
// (Final, Native, Public, BlueprintCallable)

void ABFGDestructionEffect_Details::SetupPFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDestructionEffect_Details", "SetupPFX");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGInterLevelSoundManager.AddSound
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USoundBase*                       _pSound                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGInterLevelSoundManager::AddSound(class USoundBase* _pSound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInterLevelSoundManager", "AddSound");

	Params::BFGInterLevelSoundManager_AddSound Parms{};

	Parms._pSound = _pSound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGInterLevelSoundManager.Flush
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWorld*                           _pWorldToFlush                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bClearActivatedReverb                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGInterLevelSoundManager::Flush(class UWorld* _pWorldToFlush, bool _bClearActivatedReverb)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInterLevelSoundManager", "Flush");

	Params::BFGInterLevelSoundManager_Flush Parms{};

	Parms._pWorldToFlush = _pWorldToFlush;
	Parms._bClearActivatedReverb = _bClearActivatedReverb;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGInterLevelSoundManager.StopAllActiveSounds
// (Final, Native, Public, BlueprintCallable)

void UBFGInterLevelSoundManager::StopAllActiveSounds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInterLevelSoundManager", "StopAllActiveSounds");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMentalAbility_Psychokinesis.GetPKAbleComponentFromActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPrimitiveComponent* UBFGMentalAbility_Psychokinesis::GetPKAbleComponentFromActor(class AActor* _pActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Psychokinesis", "GetPKAbleComponentFromActor");

	Params::BFGMentalAbility_Psychokinesis_GetPKAbleComponentFromActor Parms{};

	Parms._pActor = _pActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMentalAbility_Psychokinesis.OnHit
// (Final, Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// class AActor*                           _pSelfActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pOtherActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vNormalImpulse                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       _hitResult                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UBFGMentalAbility_Psychokinesis::OnHit(class AActor* _pSelfActor, class AActor* _pOtherActor, const struct FVector& _vNormalImpulse, const struct FHitResult& _hitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Psychokinesis", "OnHit");

	Params::BFGMentalAbility_Psychokinesis_OnHit Parms{};

	Parms._pSelfActor = _pSelfActor;
	Parms._pOtherActor = _pOtherActor;
	Parms._vNormalImpulse = std::move(_vNormalImpulse);
	Parms._hitResult = std::move(_hitResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMentalAbility_Psychokinesis.OnObjectPickup
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           PActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGMentalAbility_Psychokinesis::OnObjectPickup(class AActor* PActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Psychokinesis", "OnObjectPickup");

	Params::BFGMentalAbility_Psychokinesis_OnObjectPickup Parms{};

	Parms.PActor = PActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGMentalAbility_Psychokinesis.OnObjectReleased
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           PThrownActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bWasThrowOrDrop                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGMentalAbility_Psychokinesis::OnObjectReleased(class AActor* PThrownActor, bool bWasThrowOrDrop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Psychokinesis", "OnObjectReleased");

	Params::BFGMentalAbility_Psychokinesis_OnObjectReleased Parms{};

	Parms.PThrownActor = PThrownActor;
	Parms.bWasThrowOrDrop = bWasThrowOrDrop;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGMentalAbility_Psychokinesis.OnThrownObjectImpact
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           PThrownActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           PHitActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       OHitResult                                             (Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UBFGMentalAbility_Psychokinesis::OnThrownObjectImpact(class AActor* PThrownActor, class AActor* PHitActor, const struct FHitResult& OHitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Psychokinesis", "OnThrownObjectImpact");

	Params::BFGMentalAbility_Psychokinesis_OnThrownObjectImpact Parms{};

	Parms.PThrownActor = PThrownActor;
	Parms.PHitActor = PHitActor;
	Parms.OHitResult = std::move(OHitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGMentalAbility_Psychokinesis.GetCurrentChargeRatio
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGMentalAbility_Psychokinesis::GetCurrentChargeRatio() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Psychokinesis", "GetCurrentChargeRatio");

	Params::BFGMentalAbility_Psychokinesis_GetCurrentChargeRatio Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMentalAbility_Psychokinesis.GetCurrentHoveredActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UBFGMentalAbility_Psychokinesis::GetCurrentHoveredActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Psychokinesis", "GetCurrentHoveredActor");

	Params::BFGMentalAbility_Psychokinesis_GetCurrentHoveredActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMentalAbility_Psychokinesis.GetVehicleAttachedEntity
// (Final, Native, Protected, Const)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGNetworkPathAgent_AttachedEntity*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGNetworkPathAgent_AttachedEntity* UBFGMentalAbility_Psychokinesis::GetVehicleAttachedEntity(class AActor* _pActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Psychokinesis", "GetVehicleAttachedEntity");

	Params::BFGMentalAbility_Psychokinesis_GetVehicleAttachedEntity Parms{};

	Parms._pActor = _pActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMentalAbility_Psychokinesis.GetWillBeThrowOrDrop
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGMentalAbility_Psychokinesis::GetWillBeThrowOrDrop() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMentalAbility_Psychokinesis", "GetWillBeThrowOrDrop");

	Params::BFGMentalAbility_Psychokinesis_GetWillBeThrowOrDrop Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGDialogOptionHandler_Savegame.OnDialogMessage
// (Final, Native, Protected)
// Parameters:
// EBFGDialogMessage                       _eMessage                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGDialogOptionHandler_Savegame::OnDialogMessage(EBFGDialogMessage _eMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDialogOptionHandler_Savegame", "OnDialogMessage");

	Params::BFGDialogOptionHandler_Savegame_OnDialogMessage Parms{};

	Parms._eMessage = _eMessage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGDialogOptionHandler_Savegame.OnSavegameSlotPicked
// (Final, Native, Protected)
// Parameters:
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBFGDialogOptionHandler_SavegameSlotMode_eSlotMode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGDialogOptionHandler_Savegame::OnSavegameSlotPicked(int32 _iIndex, EBFGDialogOptionHandler_SavegameSlotMode _eSlotMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDialogOptionHandler_Savegame", "OnSavegameSlotPicked");

	Params::BFGDialogOptionHandler_Savegame_OnSavegameSlotPicked Parms{};

	Parms._iIndex = _iIndex;
	Parms._eSlotMode = _eSlotMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGDLCSettings.GetSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBFGDLCSettings*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGDLCSettings* UBFGDLCSettings::GetSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGDLCSettings", "GetSettings");

	Params::BFGDLCSettings_GetSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGDynamicStaticObjectManager.ForceDeletionOfObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ABFGObject_StaticWithPhysics*     _pObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGDynamicStaticObjectManager::ForceDeletionOfObject(class ABFGObject_StaticWithPhysics* _pObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDynamicStaticObjectManager", "ForceDeletionOfObject");

	Params::BFGDynamicStaticObjectManager_ForceDeletionOfObject Parms{};

	Parms._pObject = _pObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGDynamicStaticObjectManager.ForceDeletionOfObjectsInBounds
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          _vOrigin                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vExtend                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGDynamicStaticObjectManager::ForceDeletionOfObjectsInBounds(struct FVector* _vOrigin, struct FVector* _vExtend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDynamicStaticObjectManager", "ForceDeletionOfObjectsInBounds");

	Params::BFGDynamicStaticObjectManager_ForceDeletionOfObjectsInBounds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_vOrigin != nullptr)
		*_vOrigin = std::move(Parms._vOrigin);

	if (_vExtend != nullptr)
		*_vExtend = std::move(Parms._vExtend);
}


// Function BFGCore.BFGDynamicStaticObjectManager.OnRelevantActorCollision
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class AActor*                           HitActor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           CollidingActor                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// float                                   Velocity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGDynamicStaticObjectManager::OnRelevantActorCollision(class AActor* HitActor, class AActor* CollidingActor, const struct FHitResult& Hit, float Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDynamicStaticObjectManager", "OnRelevantActorCollision");

	Params::BFGDynamicStaticObjectManager_OnRelevantActorCollision Parms{};

	Parms.HitActor = HitActor;
	Parms.CollidingActor = CollidingActor;
	Parms.Hit = std::move(Hit);
	Parms.Velocity = Velocity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGDynamicStaticObjectManager.SetForceObjectToStayAlive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ABFGObject_StaticWithPhysics*     _pObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bForceStayAlive                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGDynamicStaticObjectManager::SetForceObjectToStayAlive(class ABFGObject_StaticWithPhysics* _pObject, bool _bForceStayAlive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDynamicStaticObjectManager", "SetForceObjectToStayAlive");

	Params::BFGDynamicStaticObjectManager_SetForceObjectToStayAlive Parms{};

	Parms._pObject = _pObject;
	Parms._bForceStayAlive = _bForceStayAlive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGDynamicStaticObjectManager.SwapActorWithDynamic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AStaticMeshActor*                 _pOldActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bForceActive                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ABFGObject_StaticWithPhysics*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGObject_StaticWithPhysics* UBFGDynamicStaticObjectManager::SwapActorWithDynamic(class AStaticMeshActor* _pOldActor, bool _bForceActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDynamicStaticObjectManager", "SwapActorWithDynamic");

	Params::BFGDynamicStaticObjectManager_SwapActorWithDynamic Parms{};

	Parms._pOldActor = _pOldActor;
	Parms._bForceActive = _bForceActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGDynamicStaticObjectManager.SwapComponentWithDynamic
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UStaticMeshComponent*             _pOldComponent                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       _tTransform                                            (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    _bForceActive                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ABFGObject_StaticWithPhysics*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGObject_StaticWithPhysics* UBFGDynamicStaticObjectManager::SwapComponentWithDynamic(class UStaticMeshComponent* _pOldComponent, const struct FTransform& _tTransform, bool _bForceActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDynamicStaticObjectManager", "SwapComponentWithDynamic");

	Params::BFGDynamicStaticObjectManager_SwapComponentWithDynamic Parms{};

	Parms._pOldComponent = _pOldComponent;
	Parms._tTransform = std::move(_tTransform);
	Parms._bForceActive = _bForceActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGDynamicStaticObjectManager.GetCurrentActiveObjectCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGDynamicStaticObjectManager::GetCurrentActiveObjectCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDynamicStaticObjectManager", "GetCurrentActiveObjectCount");

	Params::BFGDynamicStaticObjectManager_GetCurrentActiveObjectCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGDynamicStaticObjectManager.GetForcedActiveObjectCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGDynamicStaticObjectManager::GetForcedActiveObjectCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDynamicStaticObjectManager", "GetForcedActiveObjectCount");

	Params::BFGDynamicStaticObjectManager_GetForcedActiveObjectCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectActor_FallingLeaves.UpdateParticle
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABFGEffectActor_FallingLeaves::UpdateParticle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectActor_FallingLeaves", "UpdateParticle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGEffectActor_ForceField.OnTriggerEffectSlot
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGEffectActor_ForceField::OnTriggerEffectSlot(int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectActor_ForceField", "OnTriggerEffectSlot");

	Params::BFGEffectActor_ForceField_OnTriggerEffectSlot Parms{};

	Parms._iSlot = _iSlot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGEffectBlackboard.ComputeFreeSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGEffectBlackboard::ComputeFreeSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "ComputeFreeSlot");

	Params::BFGEffectBlackboard_ComputeFreeSlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectBlackboard.HasActorComponentSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGEffectBlackboard::HasActorComponentSlot(const class FName _rName, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "HasActorComponentSlot");

	Params::BFGEffectBlackboard_HasActorComponentSlot Parms{};

	Parms._rName = _rName;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectBlackboard.HasActorSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGEffectBlackboard::HasActorSlot(const class FName _rName, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "HasActorSlot");

	Params::BFGEffectBlackboard_HasActorSlot Parms{};

	Parms._rName = _rName;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectBlackboard.HasBoolSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGEffectBlackboard::HasBoolSlot(const class FName _rName, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "HasBoolSlot");

	Params::BFGEffectBlackboard_HasBoolSlot Parms{};

	Parms._rName = _rName;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectBlackboard.HasColorSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGEffectBlackboard::HasColorSlot(const class FName _rName, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "HasColorSlot");

	Params::BFGEffectBlackboard_HasColorSlot Parms{};

	Parms._rName = _rName;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectBlackboard.HasDataTableSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGEffectBlackboard::HasDataTableSlot(const class FName _rName, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "HasDataTableSlot");

	Params::BFGEffectBlackboard_HasDataTableSlot Parms{};

	Parms._rName = _rName;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectBlackboard.HasFloatSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGEffectBlackboard::HasFloatSlot(const class FName _rName, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "HasFloatSlot");

	Params::BFGEffectBlackboard_HasFloatSlot Parms{};

	Parms._rName = _rName;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectBlackboard.HasIntSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGEffectBlackboard::HasIntSlot(const class FName _rName, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "HasIntSlot");

	Params::BFGEffectBlackboard_HasIntSlot Parms{};

	Parms._rName = _rName;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectBlackboard.HasNameSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGEffectBlackboard::HasNameSlot(const class FName _rName, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "HasNameSlot");

	Params::BFGEffectBlackboard_HasNameSlot Parms{};

	Parms._rName = _rName;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectBlackboard.HasObjectSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGEffectBlackboard::HasObjectSlot(const class FName _rName, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "HasObjectSlot");

	Params::BFGEffectBlackboard_HasObjectSlot Parms{};

	Parms._rName = _rName;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectBlackboard.HasRandFloatSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGEffectBlackboard::HasRandFloatSlot(const class FName _rName, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "HasRandFloatSlot");

	Params::BFGEffectBlackboard_HasRandFloatSlot Parms{};

	Parms._rName = _rName;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectBlackboard.HasRandVectorSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGEffectBlackboard::HasRandVectorSlot(const class FName _rName, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "HasRandVectorSlot");

	Params::BFGEffectBlackboard_HasRandVectorSlot Parms{};

	Parms._rName = _rName;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectBlackboard.HasRotatorSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGEffectBlackboard::HasRotatorSlot(const class FName _rName, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "HasRotatorSlot");

	Params::BFGEffectBlackboard_HasRotatorSlot Parms{};

	Parms._rName = _rName;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectBlackboard.HasVectorSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGEffectBlackboard::HasVectorSlot(const class FName _rName, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "HasVectorSlot");

	Params::BFGEffectBlackboard_HasVectorSlot Parms{};

	Parms._rName = _rName;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectBlackboard.SetActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _iValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEffectBlackboard::SetActor(const class FName _rName, class AActor* _iValue, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "SetActor");

	Params::BFGEffectBlackboard_SetActor Parms{};

	Parms._rName = _rName;
	Parms._iValue = _iValue;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectBlackboard.SetActorComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UActorComponent*                  _pComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEffectBlackboard::SetActorComponent(const class FName _rName, class UActorComponent* _pComponent, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "SetActorComponent");

	Params::BFGEffectBlackboard_SetActorComponent Parms{};

	Parms._rName = _rName;
	Parms._pComponent = _pComponent;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectBlackboard.SetBool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEffectBlackboard::SetBool(const class FName _rName, bool _bValue, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "SetBool");

	Params::BFGEffectBlackboard_SetBool Parms{};

	Parms._rName = _rName;
	Parms._bValue = _bValue;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectBlackboard.SetColor
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FColor                           _rValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEffectBlackboard::SetColor(const class FName _rName, const struct FColor& _rValue, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "SetColor");

	Params::BFGEffectBlackboard_SetColor Parms{};

	Parms._rName = _rName;
	Parms._rValue = std::move(_rValue);
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectBlackboard.SetDataTable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDataTable*                       _pValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEffectBlackboard::SetDataTable(const class FName _rName, class UDataTable* _pValue, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "SetDataTable");

	Params::BFGEffectBlackboard_SetDataTable Parms{};

	Parms._rName = _rName;
	Parms._pValue = _pValue;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectBlackboard.SetFloat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEffectBlackboard::SetFloat(const class FName _rName, float _fValue, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "SetFloat");

	Params::BFGEffectBlackboard_SetFloat Parms{};

	Parms._rName = _rName;
	Parms._fValue = _fValue;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectBlackboard.SetInt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEffectBlackboard::SetInt(const class FName _rName, int32 _iValue, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "SetInt");

	Params::BFGEffectBlackboard_SetInt Parms{};

	Parms._rName = _rName;
	Parms._iValue = _iValue;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectBlackboard.SetName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _iValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEffectBlackboard::SetName(const class FName _rName, class FName _iValue, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "SetName");

	Params::BFGEffectBlackboard_SetName Parms{};

	Parms._rName = _rName;
	Parms._iValue = _iValue;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectBlackboard.SetObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          _pValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEffectBlackboard::SetObject(const class FName _rName, class UObject* _pValue, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "SetObject");

	Params::BFGEffectBlackboard_SetObject Parms{};

	Parms._rName = _rName;
	Parms._pValue = _pValue;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectBlackboard.SetRandFloat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fMin                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fMax                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEffectBlackboard::SetRandFloat(const class FName _rName, float _fMin, float _fMax, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "SetRandFloat");

	Params::BFGEffectBlackboard_SetRandFloat Parms{};

	Parms._rName = _rName;
	Parms._fMin = _fMin;
	Parms._fMax = _fMax;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectBlackboard.SetRandVector
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _rMin                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _rMax                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEffectBlackboard::SetRandVector(const class FName _rName, const struct FVector& _rMin, const struct FVector& _rMax, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "SetRandVector");

	Params::BFGEffectBlackboard_SetRandVector Parms{};

	Parms._rName = _rName;
	Parms._rMin = std::move(_rMin);
	Parms._rMax = std::move(_rMax);
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectBlackboard.SetRotator
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         _rValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEffectBlackboard::SetRotator(const class FName _rName, const struct FRotator& _rValue, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "SetRotator");

	Params::BFGEffectBlackboard_SetRotator Parms{};

	Parms._rName = _rName;
	Parms._rValue = std::move(_rValue);
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectBlackboard.SetVector
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _rValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEffectBlackboard::SetVector(const class FName _rName, const struct FVector& _rValue, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "SetVector");

	Params::BFGEffectBlackboard_SetVector Parms{};

	Parms._rName = _rName;
	Parms._rValue = std::move(_rValue);
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectBlackboard.GetActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UBFGEffectBlackboard::GetActor(const class FName _rName, int32 _iSlot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "GetActor");

	Params::BFGEffectBlackboard_GetActor Parms{};

	Parms._rName = _rName;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectBlackboard.GetActorComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UActorComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UActorComponent* UBFGEffectBlackboard::GetActorComponent(const class FName _rName, int32 _iSlot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "GetActorComponent");

	Params::BFGEffectBlackboard_GetActorComponent Parms{};

	Parms._rName = _rName;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectBlackboard.GetBool
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGEffectBlackboard::GetBool(const class FName _rName, int32 _iSlot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "GetBool");

	Params::BFGEffectBlackboard_GetBool Parms{};

	Parms._rName = _rName;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectBlackboard.GetColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FColor                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FColor UBFGEffectBlackboard::GetColor(const class FName _rName, int32 _iSlot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "GetColor");

	Params::BFGEffectBlackboard_GetColor Parms{};

	Parms._rName = _rName;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectBlackboard.GetDataTable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDataTable*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDataTable* UBFGEffectBlackboard::GetDataTable(const class FName _rName, int32 _iSlot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "GetDataTable");

	Params::BFGEffectBlackboard_GetDataTable Parms{};

	Parms._rName = _rName;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectBlackboard.GetEffectComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGActorComponent_Effect*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGActorComponent_Effect* UBFGEffectBlackboard::GetEffectComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "GetEffectComponent");

	Params::BFGEffectBlackboard_GetEffectComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectBlackboard.GetFloat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGEffectBlackboard::GetFloat(const class FName _rName, int32 _iSlot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "GetFloat");

	Params::BFGEffectBlackboard_GetFloat Parms{};

	Parms._rName = _rName;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectBlackboard.GetInt
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGEffectBlackboard::GetInt(const class FName _rName, int32 _iSlot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "GetInt");

	Params::BFGEffectBlackboard_GetInt Parms{};

	Parms._rName = _rName;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectBlackboard.GetName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UBFGEffectBlackboard::GetName(const class FName _rName, int32 _iSlot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "GetName");

	Params::BFGEffectBlackboard_GetName Parms{};

	Parms._rName = _rName;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectBlackboard.GetObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UBFGEffectBlackboard::GetObject(const class FName _rName, int32 _iSlot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "GetObject");

	Params::BFGEffectBlackboard_GetObject Parms{};

	Parms._rName = _rName;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectBlackboard.GetRandFloat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBFGEffectBlackboardParameter_RandFloatReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FBFGEffectBlackboardParameter_RandFloat UBFGEffectBlackboard::GetRandFloat(const class FName _rName, int32 _iSlot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "GetRandFloat");

	Params::BFGEffectBlackboard_GetRandFloat Parms{};

	Parms._rName = _rName;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectBlackboard.GetRandVector
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBFGEffectBlackboardParameter_RandVectorReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FBFGEffectBlackboardParameter_RandVector UBFGEffectBlackboard::GetRandVector(const class FName _rName, int32 _iSlot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "GetRandVector");

	Params::BFGEffectBlackboard_GetRandVector Parms{};

	Parms._rName = _rName;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectBlackboard.GetRotator
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UBFGEffectBlackboard::GetRotator(const class FName _rName, int32 _iSlot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "GetRotator");

	Params::BFGEffectBlackboard_GetRotator Parms{};

	Parms._rName = _rName;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectBlackboard.GetVector
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UBFGEffectBlackboard::GetVector(const class FName _rName, int32 _iSlot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectBlackboard", "GetVector");

	Params::BFGEffectBlackboard_GetVector Parms{};

	Parms._rName = _rName;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectContainer.CreateDescribedObject
// (Final, Native, Protected)

void UBFGEffectContainer::CreateDescribedObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectContainer", "CreateDescribedObject");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectContainer.HandleActorFinished
// (Final, Native, Protected)
// Parameters:
// class ABFGEffectActor*                  _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEffectContainer::HandleActorFinished(class ABFGEffectActor* _pActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectContainer", "HandleActorFinished");

	Params::BFGEffectContainer_HandleActorFinished Parms{};

	Parms._pActor = _pActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectContainer.HandleAudioFinished
// (Final, Native, Protected)

void UBFGEffectContainer::HandleAudioFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectContainer", "HandleAudioFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectContainer.HandleForceFeedbackFinished
// (Final, Native, Protected)
// Parameters:
// class UForceFeedbackComponent*          _pComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEffectContainer::HandleForceFeedbackFinished(class UForceFeedbackComponent* _pComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectContainer", "HandleForceFeedbackFinished");

	Params::BFGEffectContainer_HandleForceFeedbackFinished Parms{};

	Parms._pComponent = _pComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectContainer.HandleObjectFinished
// (Final, Native, Protected)
// Parameters:
// class UBFGEffectObject*                 _pObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEffectContainer::HandleObjectFinished(class UBFGEffectObject* _pObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectContainer", "HandleObjectFinished");

	Params::BFGEffectContainer_HandleObjectFinished Parms{};

	Parms._pObject = _pObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectContainer.HandleParticlesFinished
// (Final, Native, Protected)
// Parameters:
// class UParticleSystemComponent*         _pComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEffectContainer::HandleParticlesFinished(class UParticleSystemComponent* _pComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectContainer", "HandleParticlesFinished");

	Params::BFGEffectContainer_HandleParticlesFinished Parms{};

	Parms._pComponent = _pComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectContainer.HandleReleaseAudioFinished
// (Final, Native, Protected)

void UBFGEffectContainer::HandleReleaseAudioFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectContainer", "HandleReleaseAudioFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectContainer.HandleReleaseForceFeedbackFinished
// (Final, Native, Protected)
// Parameters:
// class UForceFeedbackComponent*          _pComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEffectContainer::HandleReleaseForceFeedbackFinished(class UForceFeedbackComponent* _pComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectContainer", "HandleReleaseForceFeedbackFinished");

	Params::BFGEffectContainer_HandleReleaseForceFeedbackFinished Parms{};

	Parms._pComponent = _pComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectContainer.HandleReleaseParticlesFinished
// (Final, Native, Protected)
// Parameters:
// class UParticleSystemComponent*         _pComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEffectContainer::HandleReleaseParticlesFinished(class UParticleSystemComponent* _pComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectContainer", "HandleReleaseParticlesFinished");

	Params::BFGEffectContainer_HandleReleaseParticlesFinished Parms{};

	Parms._pComponent = _pComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectContainer.HandleSustainAudioFinished
// (Final, Native, Protected)

void UBFGEffectContainer::HandleSustainAudioFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectContainer", "HandleSustainAudioFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectContainer.HandleSustainForceFeedbackFinished
// (Final, Native, Protected)
// Parameters:
// class UForceFeedbackComponent*          _pComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEffectContainer::HandleSustainForceFeedbackFinished(class UForceFeedbackComponent* _pComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectContainer", "HandleSustainForceFeedbackFinished");

	Params::BFGEffectContainer_HandleSustainForceFeedbackFinished Parms{};

	Parms._pComponent = _pComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectContainer.HandleSustainParticlesFinished
// (Final, Native, Protected)
// Parameters:
// class UParticleSystemComponent*         _pComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEffectContainer::HandleSustainParticlesFinished(class UParticleSystemComponent* _pComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectContainer", "HandleSustainParticlesFinished");

	Params::BFGEffectContainer_HandleSustainParticlesFinished Parms{};

	Parms._pComponent = _pComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectContainer.SpawnDescribedActor
// (Final, Native, Protected)

void UBFGEffectContainer::SpawnDescribedActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectContainer", "SpawnDescribedActor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectContainer.GetAudioComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAudioComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAudioComponent* UBFGEffectContainer::GetAudioComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectContainer", "GetAudioComponent");

	Params::BFGEffectContainer_GetAudioComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectContainer.GetParticleComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UParticleSystemComponent*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UParticleSystemComponent* UBFGEffectContainer::GetParticleComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectContainer", "GetParticleComponent");

	Params::BFGEffectContainer_GetParticleComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectContainer.GetReleaseAudioComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAudioComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAudioComponent* UBFGEffectContainer::GetReleaseAudioComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectContainer", "GetReleaseAudioComponent");

	Params::BFGEffectContainer_GetReleaseAudioComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectContainer.GetReleaseParticleComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UParticleSystemComponent*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UParticleSystemComponent* UBFGEffectContainer::GetReleaseParticleComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectContainer", "GetReleaseParticleComponent");

	Params::BFGEffectContainer_GetReleaseParticleComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectContainer.GetSpawnedActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ABFGEffectActor*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGEffectActor* UBFGEffectContainer::GetSpawnedActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectContainer", "GetSpawnedActor");

	Params::BFGEffectContainer_GetSpawnedActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectContainer.GetSustainAudioComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAudioComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAudioComponent* UBFGEffectContainer::GetSustainAudioComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectContainer", "GetSustainAudioComponent");

	Params::BFGEffectContainer_GetSustainAudioComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectContainer.GetSustainParticleComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UParticleSystemComponent*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UParticleSystemComponent* UBFGEffectContainer::GetSustainParticleComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectContainer", "GetSustainParticleComponent");

	Params::BFGEffectContainer_GetSustainParticleComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectObject.HandleActorChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _iValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEffectObject::HandleActorChanged(const class FName _rName, class AActor* _iValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectObject", "HandleActorChanged");

	Params::BFGEffectObject_HandleActorChanged Parms{};

	Parms._rName = _rName;
	Parms._iValue = _iValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectObject.HandleBoolChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEffectObject::HandleBoolChanged(const class FName _rName, bool _bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectObject", "HandleBoolChanged");

	Params::BFGEffectObject_HandleBoolChanged Parms{};

	Parms._rName = _rName;
	Parms._bValue = _bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectObject.HandleColorChanged
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FColor                           _rValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEffectObject::HandleColorChanged(const class FName _rName, const struct FColor& _rValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectObject", "HandleColorChanged");

	Params::BFGEffectObject_HandleColorChanged Parms{};

	Parms._rName = _rName;
	Parms._rValue = std::move(_rValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectObject.HandleDataTableChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDataTable*                       _pValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEffectObject::HandleDataTableChanged(const class FName _rName, class UDataTable* _pValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectObject", "HandleDataTableChanged");

	Params::BFGEffectObject_HandleDataTableChanged Parms{};

	Parms._rName = _rName;
	Parms._pValue = _pValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectObject.HandleFloatChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEffectObject::HandleFloatChanged(const class FName _rName, float _fValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectObject", "HandleFloatChanged");

	Params::BFGEffectObject_HandleFloatChanged Parms{};

	Parms._rName = _rName;
	Parms._fValue = _fValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectObject.HandleIntChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEffectObject::HandleIntChanged(const class FName _rName, int32 _iValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectObject", "HandleIntChanged");

	Params::BFGEffectObject_HandleIntChanged Parms{};

	Parms._rName = _rName;
	Parms._iValue = _iValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectObject.HandleNameChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _iValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEffectObject::HandleNameChanged(const class FName _rName, class FName _iValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectObject", "HandleNameChanged");

	Params::BFGEffectObject_HandleNameChanged Parms{};

	Parms._rName = _rName;
	Parms._iValue = _iValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectObject.HandleObjectChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          _pValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEffectObject::HandleObjectChanged(const class FName _rName, class UObject* _pValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectObject", "HandleObjectChanged");

	Params::BFGEffectObject_HandleObjectChanged Parms{};

	Parms._rName = _rName;
	Parms._pValue = _pValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectObject.HandleRotatorChanged
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         _rValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UBFGEffectObject::HandleRotatorChanged(const class FName _rName, const struct FRotator& _rValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectObject", "HandleRotatorChanged");

	Params::BFGEffectObject_HandleRotatorChanged Parms{};

	Parms._rName = _rName;
	Parms._rValue = std::move(_rValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectObject.HandleVectorChanged
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// class FName                             _rName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _rValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEffectObject::HandleVectorChanged(const class FName _rName, const struct FVector& _rValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectObject", "HandleVectorChanged");

	Params::BFGEffectObject_HandleVectorChanged Parms{};

	Parms._rName = _rName;
	Parms._rValue = std::move(_rValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectObject.IsEffectActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGEffectObject::IsEffectActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectObject", "IsEffectActive");

	Params::BFGEffectObject_IsEffectActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectObject.OnStopEffect
// (Native, Event, Protected, BlueprintEvent)

void UBFGEffectObject::OnStopEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectObject", "OnStopEffect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectObject.OnTriggerEffect
// (Native, Event, Protected, BlueprintEvent)

void UBFGEffectObject::OnTriggerEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectObject", "OnTriggerEffect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectObject.SetBlackboard
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGEffectBlackboard*             _pBlackboard                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEffectObject::SetBlackboard(class UBFGEffectBlackboard* _pBlackboard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectObject", "SetBlackboard");

	Params::BFGEffectObject_SetBlackboard Parms{};

	Parms._pBlackboard = _pBlackboard;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectObject.StopEffect
// (Final, Native, Public, BlueprintCallable)

void UBFGEffectObject::StopEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectObject", "StopEffect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectObject.TriggerEffect
// (Final, Native, Public, BlueprintCallable)

void UBFGEffectObject::TriggerEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectObject", "TriggerEffect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEffectObject.GetBlackboard
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGEffectBlackboard*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGEffectBlackboard* UBFGEffectObject::GetBlackboard() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectObject", "GetBlackboard");

	Params::BFGEffectObject_GetBlackboard Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffectObject.GetEffectComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGActorComponent_Effect*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGActorComponent_Effect* UBFGEffectObject::GetEffectComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEffectObject", "GetEffectComponent");

	Params::BFGEffectObject_GetEffectComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffects.GetNextCameraMaskForPK
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EBFGLightweightCamera                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBFGLightweightCamera UBFGEffects::GetNextCameraMaskForPK()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGEffects", "GetNextCameraMaskForPK");

	Params::BFGEffects_GetNextCameraMaskForPK Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEffects.GetScrambledTextForFurocom
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           _strInputText                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fScrambleRatio                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UBFGEffects::GetScrambledTextForFurocom(const class FString& _strInputText, float _fScrambleRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGEffects", "GetScrambledTextForFurocom");

	Params::BFGEffects_GetScrambledTextForFurocom Parms{};

	Parms._strInputText = std::move(_strInputText);
	Parms._fScrambleRatio = _fScrambleRatio;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEventTrigger_VoiceoverQueueChanged.OnItemEvent
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FBFGVoiceoverItem                _item                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EBFGVoiceoverItemEventType              _type                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_VoiceoverQueueChanged::OnItemEvent(const struct FBFGVoiceoverItem& _item, const EBFGVoiceoverItemEventType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_VoiceoverQueueChanged", "OnItemEvent");

	Params::BFGEventTrigger_VoiceoverQueueChanged_OnItemEvent Parms{};

	Parms._item = std::move(_item);
	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEnvironment.GetTimeOfDay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UBFGEnvironment::GetTimeOfDay() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEnvironment", "GetTimeOfDay");

	Params::BFGEnvironment_GetTimeOfDay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEnvironmentSystem.ApplyActiveEnvironment
// (Final, Exec, Native, Protected)

void UBFGEnvironmentSystem::ApplyActiveEnvironment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEnvironmentSystem", "ApplyActiveEnvironment");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEnvironmentSystem.OnWorldLoaded
// (Final, Native, Public)
// Parameters:
// class UBFGGameInstance*                 _pGameInstance                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWorld*                           _pWorld                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEnvironmentSystem::OnWorldLoaded(class UBFGGameInstance* _pGameInstance, class UWorld* _pWorld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEnvironmentSystem", "OnWorldLoaded");

	Params::BFGEnvironmentSystem_OnWorldLoaded Parms{};

	Parms._pGameInstance = _pGameInstance;
	Parms._pWorld = _pWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEnvironmentSystem.SetNextEnvironment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGEnvironment*                  _pEnvironment                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEnvironmentSystem::SetNextEnvironment(class UBFGEnvironment* _pEnvironment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEnvironmentSystem", "SetNextEnvironment");

	Params::BFGEnvironmentSystem_SetNextEnvironment Parms{};

	Parms._pEnvironment = _pEnvironment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEnvironmentSystem.SetNextEnvironmentSoft
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UBFGEnvironment>   _softEnvironment                                       (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGEnvironmentSystem::SetNextEnvironmentSoft(TSoftObjectPtr<class UBFGEnvironment> _softEnvironment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEnvironmentSystem", "SetNextEnvironmentSoft");

	Params::BFGEnvironmentSystem_SetNextEnvironmentSoft Parms{};

	Parms._softEnvironment = _softEnvironment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystem.ApplyAndReportDamage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _pDamagedActor                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fDamage                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      _pInstigator                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pDamageSource                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UDamageType>          _damageType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGSystem::ApplyAndReportDamage(class AActor* _pDamagedActor, float _fDamage, class AController* _pInstigator, class AActor* _pDamageSource, TSubclassOf<class UDamageType> _damageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystem", "ApplyAndReportDamage");

	Params::BFGSystem_ApplyAndReportDamage Parms{};

	Parms._pDamagedActor = _pDamagedActor;
	Parms._fDamage = _fDamage;
	Parms._pInstigator = _pInstigator;
	Parms._pDamageSource = _pDamageSource;
	Parms._damageType = _damageType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGSystem.CastObjectToClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _pObjectToCast                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           Class_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UBFGSystem::CastObjectToClass(class UObject* _pObjectToCast, class UClass* Class_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystem", "CastObjectToClass");

	Params::BFGSystem_CastObjectToClass Parms{};

	Parms._pObjectToCast = _pObjectToCast;
	Parms.Class_0 = Class_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystem.ClipboardCopy
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           _strCopy                                               (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGSystem::ClipboardCopy(const class FString& _strCopy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystem", "ClipboardCopy");

	Params::BFGSystem_ClipboardCopy Parms{};

	Parms._strCopy = std::move(_strCopy);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGSystem.ClipboardPaste
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UBFGSystem::ClipboardPaste()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystem", "ClipboardPaste");

	Params::BFGSystem_ClipboardPaste Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystem.ComputeDebugColor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          _pObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FColor                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FColor UBFGSystem::ComputeDebugColor(const class UObject* _pObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystem", "ComputeDebugColor");

	Params::BFGSystem_ComputeDebugColor Parms{};

	Parms._pObject = _pObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystem.DumpObjectToString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bRecurse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UBFGSystem::DumpObjectToString(class UObject* _pObject, bool _bRecurse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystem", "DumpObjectToString");

	Params::BFGSystem_DumpObjectToString Parms{};

	Parms._pObject = _pObject;
	Parms._bRecurse = _bRecurse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystem.GetClassDefaultObject
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass*                           Class_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UBFGSystem::GetClassDefaultObject(class UClass* Class_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystem", "GetClassDefaultObject");

	Params::BFGSystem_GetClassDefaultObject Parms{};

	Parms.Class_0 = Class_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystem.GetConsoleInt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           _strVariableName                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGSystem::GetConsoleInt(const class FString& _strVariableName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystem", "GetConsoleInt");

	Params::BFGSystem_GetConsoleInt Parms{};

	Parms._strVariableName = std::move(_strVariableName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystem.GetCurrentLanguage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UBFGSystem::GetCurrentLanguage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystem", "GetCurrentLanguage");

	Params::BFGSystem_GetCurrentLanguage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystem.GetDefaultLanguage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UBFGSystem::GetDefaultLanguage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystem", "GetDefaultLanguage");

	Params::BFGSystem_GetDefaultLanguage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystem.GetDemoPlayTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGSystem::GetDemoPlayTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystem", "GetDemoPlayTime");

	Params::BFGSystem_GetDemoPlayTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystem.GetGameIniInt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           _strName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGSystem::GetGameIniInt(const class FString& _strName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystem", "GetGameIniInt");

	Params::BFGSystem_GetGameIniInt Parms{};

	Parms._strName = std::move(_strName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystem.GetMemoryLocationAsString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UBFGSystem::GetMemoryLocationAsString(const class UObject* _pObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystem", "GetMemoryLocationAsString");

	Params::BFGSystem_GetMemoryLocationAsString Parms{};

	Parms._pObject = _pObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystem.GetObjectsSlow
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClass*                           _pClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _strPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UObject*>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UObject*> UBFGSystem::GetObjectsSlow(class UClass* _pClass, const class FString& _strPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystem", "GetObjectsSlow");

	Params::BFGSystem_GetObjectsSlow Parms{};

	Parms._pClass = _pClass;
	Parms._strPath = std::move(_strPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystem.GetRole
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ENetRole                                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ENetRole UBFGSystem::GetRole(class AActor* _pActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystem", "GetRole");

	Params::BFGSystem_GetRole Parms{};

	Parms._pActor = _pActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystem.GetSubclassesSlow
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClass*                           _pClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UClass*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UClass*> UBFGSystem::GetSubclassesSlow(class UClass* _pClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystem", "GetSubclassesSlow");

	Params::BFGSystem_GetSubclassesSlow Parms{};

	Parms._pClass = _pClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystem.GetVersionString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UBFGSystem::GetVersionString()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystem", "GetVersionString");

	Params::BFGSystem_GetVersionString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystem.GetWorldType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UBFGSystem::GetWorldType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystem", "GetWorldType");

	Params::BFGSystem_GetWorldType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystem.IncreaseStatistic
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EBFGGameStatistic                       _eGameStat                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fAmount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGSystem::IncreaseStatistic(EBFGGameStatistic _eGameStat, float _fAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystem", "IncreaseStatistic");

	Params::BFGSystem_IncreaseStatistic Parms{};

	Parms._eGameStat = _eGameStat;
	Parms._fAmount = _fAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGSystem.IsEditor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGSystem::IsEditor(class AActor* _pActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystem", "IsEditor");

	Params::BFGSystem_IsEditor Parms{};

	Parms._pActor = _pActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystem.IsObjectPendingKill
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGSystem::IsObjectPendingKill(class UObject* _pObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystem", "IsObjectPendingKill");

	Params::BFGSystem_IsObjectPendingKill Parms{};

	Parms._pObject = _pObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystem.IsPublicDemoVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGSystem::IsPublicDemoVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystem", "IsPublicDemoVersion");

	Params::BFGSystem_IsPublicDemoVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystem.IsShippingBuild
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGSystem::IsShippingBuild()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystem", "IsShippingBuild");

	Params::BFGSystem_IsShippingBuild Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystem.IsShippingCustomerBuild
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGSystem::IsShippingCustomerBuild()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystem", "IsShippingCustomerBuild");

	Params::BFGSystem_IsShippingCustomerBuild Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystem.IsStandalone
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGSystem::IsStandalone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystem", "IsStandalone");

	Params::BFGSystem_IsStandalone Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystem.IsWithEditorPreprocessor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGSystem::IsWithEditorPreprocessor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystem", "IsWithEditorPreprocessor");

	Params::BFGSystem_IsWithEditorPreprocessor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystem.SetCurrentCulture
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           _cultureName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGSystem::SetCurrentCulture(const class FString& _cultureName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystem", "SetCurrentCulture");

	Params::BFGSystem_SetCurrentCulture Parms{};

	Parms._cultureName = std::move(_cultureName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystem.SetFixedTimeStep
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    _bFixedStep                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fFixedStepInSeconds                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGSystem::SetFixedTimeStep(bool _bFixedStep, float _fFixedStepInSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystem", "SetFixedTimeStep");

	Params::BFGSystem_SetFixedTimeStep Parms{};

	Parms._bFixedStep = _bFixedStep;
	Parms._fFixedStepInSeconds = _fFixedStepInSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGSystem.SetGameIniIntOverride
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           _strName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGSystem::SetGameIniIntOverride(const class FString& _strName, int32 _iValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystem", "SetGameIniIntOverride");

	Params::BFGSystem_SetGameIniIntOverride Parms{};

	Parms._strName = std::move(_strName);
	Parms._iValue = _iValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGSystem.ShouldShowUpsellButton
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGSystem::ShouldShowUpsellButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystem", "ShouldShowUpsellButton");

	Params::BFGSystem_ShouldShowUpsellButton Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystem.SortActorArrayByName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class AActor*>                   _aActorList                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    _bSortByParentName                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> UBFGSystem::SortActorArrayByName(const TArray<class AActor*>& _aActorList, bool _bSortByParentName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystem", "SortActorArrayByName");

	Params::BFGSystem_SortActorArrayByName Parms{};

	Parms._aActorList = std::move(_aActorList);
	Parms._bSortByParentName = _bSortByParentName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystem.SpawnActorNoReplicate
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           ActorClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       _Transform                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class AActor*                           _pOwner                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            _pInstigator                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESpawnActorCollisionHandlingMethod      _collisionHandlingOverride                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UBFGSystem::SpawnActorNoReplicate(class UObject* WorldContextObject, class UClass* ActorClass, const struct FTransform& _Transform, class AActor* _pOwner, class APawn* _pInstigator, ESpawnActorCollisionHandlingMethod _collisionHandlingOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystem", "SpawnActorNoReplicate");

	Params::BFGSystem_SpawnActorNoReplicate Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ActorClass = ActorClass;
	Parms._Transform = std::move(_Transform);
	Parms._pOwner = _pOwner;
	Parms._pInstigator = _pInstigator;
	Parms._collisionHandlingOverride = _collisionHandlingOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSpinningWidgetOption.GetBrush
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSlateBrush                      _oBrush                                                (Parm, OutParm, NativeAccessSpecifierPublic)

void UBFGSpinningWidgetOption::GetBrush(struct FSlateBrush* _oBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSpinningWidgetOption", "GetBrush");

	Params::BFGSpinningWidgetOption_GetBrush Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (_oBrush != nullptr)
		*_oBrush = std::move(Parms._oBrush);
}


// Function BFGCore.BFGSpinningWidgetOption.GetHint
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             _oHint                                                 (Parm, OutParm, NativeAccessSpecifierPublic)

void UBFGSpinningWidgetOption::GetHint(class FText* _oHint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSpinningWidgetOption", "GetHint");

	Params::BFGSpinningWidgetOption_GetHint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (_oHint != nullptr)
		*_oHint = std::move(Parms._oHint);
}


// Function BFGCore.BFGSpinningWidgetOption.GetOptionSize
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UBFGSpinningWidgetOption::GetOptionSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSpinningWidgetOption", "GetOptionSize");

	Params::BFGSpinningWidgetOption_GetOptionSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSpinningWidgetOption.GetTitle
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             _oTitle                                                (Parm, OutParm, NativeAccessSpecifierPublic)

void UBFGSpinningWidgetOption::GetTitle(class FText* _oTitle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSpinningWidgetOption", "GetTitle");

	Params::BFGSpinningWidgetOption_GetTitle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (_oTitle != nullptr)
		*_oTitle = std::move(Parms._oTitle);
}


// Function BFGCore.BFGSpinningWidgetOption.OnDisabled
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bDisabled                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGSpinningWidgetOption::OnDisabled(bool _bDisabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSpinningWidgetOption", "OnDisabled");

	Params::BFGSpinningWidgetOption_OnDisabled Parms{};

	Parms._bDisabled = _bDisabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGSpinningWidgetOption.SetBrush
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FSlateBrush                      _oBrush                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGSpinningWidgetOption::SetBrush(const struct FSlateBrush& _oBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSpinningWidgetOption", "SetBrush");

	Params::BFGSpinningWidgetOption_SetBrush Parms{};

	Parms._oBrush = std::move(_oBrush);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGSpinningWidgetOption.SetHint
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _oHint                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGSpinningWidgetOption::SetHint(const class FText& _oHint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSpinningWidgetOption", "SetHint");

	Params::BFGSpinningWidgetOption_SetHint Parms{};

	Parms._oHint = std::move(_oHint);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGSpinningWidgetOption.SetNotificationEnabled
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGSpinningWidgetOption::SetNotificationEnabled(bool _bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSpinningWidgetOption", "SetNotificationEnabled");

	Params::BFGSpinningWidgetOption_SetNotificationEnabled Parms{};

	Parms._bEnabled = _bEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGSpinningWidgetOption.SetTitle
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _oTitle                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGSpinningWidgetOption::SetTitle(const class FText& _oTitle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSpinningWidgetOption", "SetTitle");

	Params::BFGSpinningWidgetOption_SetTitle Parms{};

	Parms._oTitle = std::move(_oTitle);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGSpinningWidgetOption_PoxLabUpgrade.ShowStar
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGSpinningWidgetOption_PoxLabUpgrade::ShowStar(bool _bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSpinningWidgetOption_PoxLabUpgrade", "ShowStar");

	Params::BFGSpinningWidgetOption_PoxLabUpgrade_ShowStar Parms{};

	Parms._bShow = _bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGGameFlowState_Mothership_Main.CutsceneFinished
// (Final, Native, Protected)
// Parameters:
// class ALevelSequenceActor*              _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bWasCutscene                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_Mothership_Main::CutsceneFinished(class ALevelSequenceActor* _pActor, bool _bWasCutscene)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_Mothership_Main", "CutsceneFinished");

	Params::BFGGameFlowState_Mothership_Main_CutsceneFinished Parms{};

	Parms._pActor = _pActor;
	Parms._bWasCutscene = _bWasCutscene;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_Mothership_Main.CutsceneFinishedOutro
// (Final, Native, Protected)
// Parameters:
// class ALevelSequenceActor*              _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bWasCutscene                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_Mothership_Main::CutsceneFinishedOutro(class ALevelSequenceActor* _pActor, bool _bWasCutscene)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_Mothership_Main", "CutsceneFinishedOutro");

	Params::BFGGameFlowState_Mothership_Main_CutsceneFinishedOutro Parms{};

	Parms._pActor = _pActor;
	Parms._bWasCutscene = _bWasCutscene;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_Mothership_Main.CutsceneFinishedTrailer
// (Final, Native, Protected)
// Parameters:
// class ALevelSequenceActor*              _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bWasCutscene                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_Mothership_Main::CutsceneFinishedTrailer(class ALevelSequenceActor* _pActor, bool _bWasCutscene)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_Mothership_Main", "CutsceneFinishedTrailer");

	Params::BFGGameFlowState_Mothership_Main_CutsceneFinishedTrailer Parms{};

	Parms._pActor = _pActor;
	Parms._bWasCutscene = _bWasCutscene;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_Mothership_Main.OnExitPromptMessage
// (Final, Native, Protected)
// Parameters:
// EBFGDialogMessage                       _eMessage                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_Mothership_Main::OnExitPromptMessage(EBFGDialogMessage _eMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_Mothership_Main", "OnExitPromptMessage");

	Params::BFGGameFlowState_Mothership_Main_OnExitPromptMessage Parms{};

	Parms._eMessage = _eMessage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_Mothership_Main.OnLayerChanged
// (Final, Native, Protected)
// Parameters:
// int32                                   _iOld                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iNew                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_Mothership_Main::OnLayerChanged(int32 _iOld, int32 _iNew)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_Mothership_Main", "OnLayerChanged");

	Params::BFGGameFlowState_Mothership_Main_OnLayerChanged Parms{};

	Parms._iOld = _iOld;
	Parms._iNew = _iNew;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_Mothership_Main.OnMenuPostConstruct
// (Final, Native, Protected)

void UBFGGameFlowState_Mothership_Main::OnMenuPostConstruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_Mothership_Main", "OnMenuPostConstruct");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_Mothership_Main.OnSubRoomChanged
// (Final, Native, Protected)
// Parameters:
// int32                                   _iOld                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iNew                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_Mothership_Main::OnSubRoomChanged(int32 _iOld, int32 _iNew)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_Mothership_Main", "OnSubRoomChanged");

	Params::BFGGameFlowState_Mothership_Main_OnSubRoomChanged Parms{};

	Parms._iOld = _iOld;
	Parms._iNew = _iNew;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_Mothership_Main.TriggerLevelSwitch
// (Final, Native, Protected)
// Parameters:
// class ALevelSequenceActor*              _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bWasCutscene                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_Mothership_Main::TriggerLevelSwitch(class ALevelSequenceActor* _pActor, bool _bWasCutscene)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_Mothership_Main", "TriggerLevelSwitch");

	Params::BFGGameFlowState_Mothership_Main_TriggerLevelSwitch Parms{};

	Parms._pActor = _pActor;
	Parms._bWasCutscene = _bWasCutscene;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGFadeSystemUserWidget.SetSpinnerOpacity
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   _fOpacity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGFadeSystemUserWidget::SetSpinnerOpacity(float _fOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGFadeSystemUserWidget", "SetSpinnerOpacity");

	Params::BFGFadeSystemUserWidget_SetSpinnerOpacity Parms{};

	Parms._fOpacity = _fOpacity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGFadeSystemUserWidget.SetSpinnerType
// (Event, Public, BlueprintEvent)
// Parameters:
// EBFGSaveSystem_UIThrobber               _eType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGFadeSystemUserWidget::SetSpinnerType(EBFGSaveSystem_UIThrobber _eType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGFadeSystemUserWidget", "SetSpinnerType");

	Params::BFGFadeSystemUserWidget_SetSpinnerType Parms{};

	Parms._eType = _eType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGFadeSystemUserWidget.ShowSpinner
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGFadeSystemUserWidget::ShowSpinner(bool _bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGFadeSystemUserWidget", "ShowSpinner");

	Params::BFGFadeSystemUserWidget_ShowSpinner Parms{};

	Parms._bShow = _bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGFadeSystemUserWidget.UpdateFade
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   _fValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGFadeSystemUserWidget::UpdateFade(float _fValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGFadeSystemUserWidget", "UpdateFade");

	Params::BFGFadeSystemUserWidget_UpdateFade Parms{};

	Parms._fValue = _fValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGQuest.OnStartForWorld
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ABFGGameState*                    _pGameState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGQuest_Manager*                _pQuestManager                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGQuest::OnStartForWorld(class ABFGGameState* _pGameState, class UBFGQuest_Manager* _pQuestManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest", "OnStartForWorld");

	Params::BFGQuest_OnStartForWorld Parms{};

	Parms._pGameState = _pGameState;
	Parms._pQuestManager = _pQuestManager;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGQuest.OnVariableChanged
// (Final, Native, Protected)
// Parameters:
// class UBFGVariableMirror*               _pVarMirror                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGVariable*                     _pVariable                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _oldValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _newValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGQuest::OnVariableChanged(class UBFGVariableMirror* _pVarMirror, const class UBFGVariable* _pVariable, int32 _oldValue, int32 _newValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest", "OnVariableChanged");

	Params::BFGQuest_OnVariableChanged Parms{};

	Parms._pVarMirror = _pVarMirror;
	Parms._pVariable = _pVariable;
	Parms._oldValue = _oldValue;
	Parms._newValue = _newValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGQuest.RegisterDataVariable
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             _strVarName                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fDefaultValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGCustomDataVariable*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGCustomDataVariable* UBFGQuest::RegisterDataVariable(const class FName& _strVarName, float _fDefaultValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest", "RegisterDataVariable");

	Params::BFGQuest_RegisterDataVariable Parms{};

	Parms._strVarName = _strVarName;
	Parms._fDefaultValue = _fDefaultValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest.RegisterEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGEvent*                        _pEvent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPrioritize                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGQuest::RegisterEvent(class UBFGEvent* _pEvent, bool bPrioritize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest", "RegisterEvent");

	Params::BFGQuest_RegisterEvent Parms{};

	Parms._pEvent = _pEvent;
	Parms.bPrioritize = bPrioritize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGQuest.GenerateQuestVariableName
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UBFGQuest::GenerateQuestVariableName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest", "GenerateQuestVariableName");

	Params::BFGQuest_GenerateQuestVariableName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest.GetActiveEvents
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class UBFGEvent*>          ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class UBFGEvent*> UBFGQuest::GetActiveEvents() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest", "GetActiveEvents");

	Params::BFGQuest_GetActiveEvents Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest.GetGameState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ABFGGameState*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGGameState* UBFGQuest::GetGameState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest", "GetGameState");

	Params::BFGQuest_GetGameState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest.GetMissionGroup
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGMissionGroup*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGMissionGroup* UBFGQuest::GetMissionGroup() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest", "GetMissionGroup");

	Params::BFGQuest_GetMissionGroup Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest.GetRunningElement
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGQuest_Element*                ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGQuest_Element* UBFGQuest::GetRunningElement() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest", "GetRunningElement");

	Params::BFGQuest_GetRunningElement Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest.GetVariable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGVariable*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGVariable* UBFGQuest::GetVariable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest", "GetVariable");

	Params::BFGQuest_GetVariable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest.IsMainQuest
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGQuest::IsMainQuest() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest", "IsMainQuest");

	Params::BFGQuest_IsMainQuest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest.IsQuestInProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGQuest::IsQuestInProgress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest", "IsQuestInProgress");

	Params::BFGQuest_IsQuestInProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest.IsQuestToBeStarted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGQuest::IsQuestToBeStarted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest", "IsQuestToBeStarted");

	Params::BFGQuest_IsQuestToBeStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameFlowState_MainMenu.OnSaveSystemActionComplete
// (Final, Native, Protected)
// Parameters:
// class UBFGSaveSystem*                   _pSaveSystem                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGSaveSystem_Action*            _pAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBFGSaveSystem_ActionResult             _result                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_MainMenu::OnSaveSystemActionComplete(class UBFGSaveSystem* _pSaveSystem, class UBFGSaveSystem_Action* _pAction, EBFGSaveSystem_ActionResult _result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_MainMenu", "OnSaveSystemActionComplete");

	Params::BFGGameFlowState_MainMenu_OnSaveSystemActionComplete Parms{};

	Parms._pSaveSystem = _pSaveSystem;
	Parms._pAction = _pAction;
	Parms._result = _result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVariationDressingComponent.AssignVariation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _nVariationName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGVariationDressingComponent::AssignVariation(class FName _nVariationName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVariationDressingComponent", "AssignVariation");

	Params::BFGVariationDressingComponent_AssignVariation Parms{};

	Parms._nVariationName = _nVariationName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVariableType_Quest.GetMaxSupported_QuestSteps
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGVariableType_Quest::GetMaxSupported_QuestSteps()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_Quest", "GetMaxSupported_QuestSteps");

	Params::BFGVariableType_Quest_GetMaxSupported_QuestSteps Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_Quest.GetState_QuestAborted
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableType_Quest::GetState_QuestAborted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_Quest", "GetState_QuestAborted");

	Params::BFGVariableType_Quest_GetState_QuestAborted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_Quest.GetState_QuestAvailable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableType_Quest::GetState_QuestAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_Quest", "GetState_QuestAvailable");

	Params::BFGVariableType_Quest_GetState_QuestAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_Quest.GetState_QuestFailed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableType_Quest::GetState_QuestFailed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_Quest", "GetState_QuestFailed");

	Params::BFGVariableType_Quest_GetState_QuestFailed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_Quest.GetState_QuestFinished
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableType_Quest::GetState_QuestFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_Quest", "GetState_QuestFinished");

	Params::BFGVariableType_Quest_GetState_QuestFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_Quest.GetState_QuestUnavailable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableType_Quest::GetState_QuestUnavailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_Quest", "GetState_QuestUnavailable");

	Params::BFGVariableType_Quest_GetState_QuestUnavailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_Quest.GetTypeName_Quest
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableType_Quest::GetTypeName_Quest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_Quest", "GetTypeName_Quest");

	Params::BFGVariableType_Quest_GetTypeName_Quest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_Quest.GetValueFromQuestStep
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   _iQuestStep                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGVariableType_Quest::GetValueFromQuestStep(int32 _iQuestStep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_Quest", "GetValueFromQuestStep");

	Params::BFGVariableType_Quest_GetValueFromQuestStep Parms{};

	Parms._iQuestStep = _iQuestStep;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_Quest.GetValueNameFromQuestStep
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   _iQuestStep                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UBFGVariableType_Quest::GetValueNameFromQuestStep(int32 _iQuestStep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_Quest", "GetValueNameFromQuestStep");

	Params::BFGVariableType_Quest_GetValueNameFromQuestStep Parms{};

	Parms._iQuestStep = _iQuestStep;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_Quest.GetValueNamesForEndStates
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     _aValueNames                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UBFGVariableType_Quest::GetValueNamesForEndStates(TArray<class FName>* _aValueNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_Quest", "GetValueNamesForEndStates");

	Params::BFGVariableType_Quest_GetValueNamesForEndStates Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_aValueNames != nullptr)
		*_aValueNames = std::move(Parms._aValueNames);
}


// Function BFGCore.BFGVariableType_Quest.GetValueNamesForInProgress
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     _aValueNames                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UBFGVariableType_Quest::GetValueNamesForInProgress(TArray<class FName>* _aValueNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_Quest", "GetValueNamesForInProgress");

	Params::BFGVariableType_Quest_GetValueNamesForInProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_aValueNames != nullptr)
		*_aValueNames = std::move(Parms._aValueNames);
}


// Function BFGCore.BFGVariableType_Quest.GetValueNamesForNotInProgress
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     _aValueNames                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    _bIncludeAvailable                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGVariableType_Quest::GetValueNamesForNotInProgress(TArray<class FName>* _aValueNames, bool _bIncludeAvailable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_Quest", "GetValueNamesForNotInProgress");

	Params::BFGVariableType_Quest_GetValueNamesForNotInProgress Parms{};

	Parms._bIncludeAvailable = _bIncludeAvailable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_aValueNames != nullptr)
		*_aValueNames = std::move(Parms._aValueNames);
}


// Function BFGCore.BFGVariableType_Quest.GetValueNamesFromQuestSteps
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int32>                           _aQuestSteps                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UBFGVariableType_Quest::GetValueNamesFromQuestSteps(const TArray<int32>& _aQuestSteps)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_Quest", "GetValueNamesFromQuestSteps");

	Params::BFGVariableType_Quest_GetValueNamesFromQuestSteps Parms{};

	Parms._aQuestSteps = std::move(_aQuestSteps);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGStreamingLevelHandle.RequestState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bLoaded                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bSkipAutoSave                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGStreamingLevelHandle::RequestState(bool _bLoaded, bool _bSkipAutoSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGStreamingLevelHandle", "RequestState");

	Params::BFGStreamingLevelHandle_RequestState Parms{};

	Parms._bLoaded = _bLoaded;
	Parms._bSkipAutoSave = _bSkipAutoSave;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction BFGCore.BFGWidget_TutorialPage.ActionTutorialPage__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UBFGWidget_TutorialPage*          _pPage                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_TutorialPage::ActionTutorialPage__DelegateSignature(const class UBFGWidget_TutorialPage* _pPage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "ActionTutorialPage__DelegateSignature");

	Params::BFGWidget_TutorialPage_ActionTutorialPage__DelegateSignature Parms{};

	Parms._pPage = _pPage;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BFGCore.BFGWidget_TutorialPage.ActionTutorialPageEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UBFGWidget_TutorialPage*          _pSource                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBFGTutorialPageDisplayStyle            _eDisplayStyle                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_TutorialPage::ActionTutorialPageEvent__DelegateSignature(class UBFGWidget_TutorialPage* _pSource, EBFGTutorialPageDisplayStyle _eDisplayStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "ActionTutorialPageEvent__DelegateSignature");

	Params::BFGWidget_TutorialPage_ActionTutorialPageEvent__DelegateSignature Parms{};

	Parms._pSource = _pSource;
	Parms._eDisplayStyle = _eDisplayStyle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_TutorialPage.AddFadingState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGWidgetAnimationState*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGWidgetAnimationState* UBFGWidget_TutorialPage::AddFadingState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "AddFadingState");

	Params::BFGWidget_TutorialPage_AddFadingState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_TutorialPage.CacheWidgetSize
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UWidget*                          _pWidget                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        _vSize                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_TutorialPage::CacheWidgetSize(class UWidget* _pWidget, struct FVector2D* _vSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "CacheWidgetSize");

	Params::BFGWidget_TutorialPage_CacheWidgetSize Parms{};

	Parms._pWidget = _pWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_vSize != nullptr)
		*_vSize = std::move(Parms._vSize);
}


// Function BFGCore.BFGWidget_TutorialPage.ChangeDisplayStyle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBFGTutorialPageDisplayStyle            _eNewDisplayStyle                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bForce                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_TutorialPage::ChangeDisplayStyle(EBFGTutorialPageDisplayStyle _eNewDisplayStyle, bool _bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "ChangeDisplayStyle");

	Params::BFGWidget_TutorialPage_ChangeDisplayStyle Parms{};

	Parms._eNewDisplayStyle = _eNewDisplayStyle;
	Parms._bForce = _bForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_TutorialPage.ChangeStyleCollapsed
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bForce                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_TutorialPage::ChangeStyleCollapsed(bool _bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "ChangeStyleCollapsed");

	Params::BFGWidget_TutorialPage_ChangeStyleCollapsed Parms{};

	Parms._bForce = _bForce;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_TutorialPage.ChangeStyleCompact
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bForce                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_TutorialPage::ChangeStyleCompact(bool _bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "ChangeStyleCompact");

	Params::BFGWidget_TutorialPage_ChangeStyleCompact Parms{};

	Parms._bForce = _bForce;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_TutorialPage.ChangeStyleDetailed
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bForce                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_TutorialPage::ChangeStyleDetailed(bool _bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "ChangeStyleDetailed");

	Params::BFGWidget_TutorialPage_ChangeStyleDetailed Parms{};

	Parms._bForce = _bForce;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_TutorialPage.ChangeStyleHinted
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bForce                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_TutorialPage::ChangeStyleHinted(bool _bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "ChangeStyleHinted");

	Params::BFGWidget_TutorialPage_ChangeStyleHinted Parms{};

	Parms._bForce = _bForce;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_TutorialPage.ChangeStyleNormal
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bForce                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_TutorialPage::ChangeStyleNormal(bool _bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "ChangeStyleNormal");

	Params::BFGWidget_TutorialPage_ChangeStyleNormal Parms{};

	Parms._bForce = _bForce;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_TutorialPage.ClearMedia
// (Event, Public, BlueprintEvent)

void UBFGWidget_TutorialPage::ClearMedia()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "ClearMedia");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_TutorialPage.CustomInit
// (Event, Public, BlueprintEvent)

void UBFGWidget_TutorialPage::CustomInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "CustomInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_TutorialPage.EnableContentVisibility
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_TutorialPage::EnableContentVisibility(bool _bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "EnableContentVisibility");

	Params::BFGWidget_TutorialPage_EnableContentVisibility Parms{};

	Parms._bValue = _bValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_TutorialPage.EnableDetailedHint
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_TutorialPage::EnableDetailedHint(bool _bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "EnableDetailedHint");

	Params::BFGWidget_TutorialPage_EnableDetailedHint Parms{};

	Parms._bEnabled = _bEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_TutorialPage.EnableDismissHint
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_TutorialPage::EnableDismissHint(bool _bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "EnableDismissHint");

	Params::BFGWidget_TutorialPage_EnableDismissHint Parms{};

	Parms._bEnabled = _bEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_TutorialPage.EnableFrameVisibility
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_TutorialPage::EnableFrameVisibility(bool _bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "EnableFrameVisibility");

	Params::BFGWidget_TutorialPage_EnableFrameVisibility Parms{};

	Parms._bValue = _bValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_TutorialPage.EnableOrnamentVisibility
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_TutorialPage::EnableOrnamentVisibility(bool _bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "EnableOrnamentVisibility");

	Params::BFGWidget_TutorialPage_EnableOrnamentVisibility Parms{};

	Parms._bValue = _bValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_TutorialPage.GetInputActionUseTypeText
// (Event, Public, BlueprintEvent)
// Parameters:
// EBFGInputActionWidgetType               _eType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _holdTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UBFGWidget_TutorialPage::GetInputActionUseTypeText(EBFGInputActionWidgetType _eType, float _holdTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "GetInputActionUseTypeText");

	Params::BFGWidget_TutorialPage_GetInputActionUseTypeText Parms{};

	Parms._eType = _eType;
	Parms._holdTime = _holdTime;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_TutorialPage.OnInputDeviceChanged
// (Final, Native, Protected)
// Parameters:
// bool                                    _bIsGamepad                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_TutorialPage::OnInputDeviceChanged(bool _bIsGamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "OnInputDeviceChanged");

	Params::BFGWidget_TutorialPage_OnInputDeviceChanged Parms{};

	Parms._bIsGamepad = _bIsGamepad;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_TutorialPage.RebuildLayout
// (Event, Public, BlueprintEvent)

void UBFGWidget_TutorialPage::RebuildLayout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "RebuildLayout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_TutorialPage.Scroll
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   _fAmount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_TutorialPage::Scroll(float _fAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "Scroll");

	Params::BFGWidget_TutorialPage_Scroll Parms{};

	Parms._fAmount = _fAmount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_TutorialPage.ScrollToTop
// (Event, Public, BlueprintEvent)

void UBFGWidget_TutorialPage::ScrollToTop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "ScrollToTop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_TutorialPage.SetContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGDataAsset_TutorialPage*       _pDataAsset                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_TutorialPage::SetContext(class UBFGDataAsset_TutorialPage* _pDataAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "SetContext");

	Params::BFGWidget_TutorialPage_SetContext Parms{};

	Parms._pDataAsset = _pDataAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_TutorialPage.SetInputActions
// (Event, Public, BlueprintEvent)
// Parameters:
// class UOverlay*                         _pOverlayInputActions                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_TutorialPage::SetInputActions(class UOverlay* _pOverlayInputActions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "SetInputActions");

	Params::BFGWidget_TutorialPage_SetInputActions Parms{};

	Parms._pOverlayInputActions = _pOverlayInputActions;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_TutorialPage.UpdateDescriptionText
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _strText                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_TutorialPage::UpdateDescriptionText(const class FText& _strText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "UpdateDescriptionText");

	Params::BFGWidget_TutorialPage_UpdateDescriptionText Parms{};

	Parms._strText = std::move(_strText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_TutorialPage.UpdateDetailText
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _strText                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             _strQuote                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_TutorialPage::UpdateDetailText(const class FText& _strText, const class FText& _strQuote)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "UpdateDetailText");

	Params::BFGWidget_TutorialPage_UpdateDetailText Parms{};

	Parms._strText = std::move(_strText);
	Parms._strQuote = std::move(_strQuote);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_TutorialPage.UpdateIconBrush
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FSlateBrush                      _iconBrush                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_TutorialPage::UpdateIconBrush(const struct FSlateBrush& _iconBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "UpdateIconBrush");

	Params::BFGWidget_TutorialPage_UpdateIconBrush Parms{};

	Parms._iconBrush = std::move(_iconBrush);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_TutorialPage.UpdateImage
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FSlateBrush                      _oImage                                                (Parm, NativeAccessSpecifierPublic)

void UBFGWidget_TutorialPage::UpdateImage(const struct FSlateBrush& _oImage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "UpdateImage");

	Params::BFGWidget_TutorialPage_UpdateImage Parms{};

	Parms._oImage = std::move(_oImage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_TutorialPage.UpdateLongTitle
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _strTitle                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_TutorialPage::UpdateLongTitle(const class FText& _strTitle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "UpdateLongTitle");

	Params::BFGWidget_TutorialPage_UpdateLongTitle Parms{};

	Parms._strTitle = std::move(_strTitle);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_TutorialPage.UpdateMedia
// (Event, Public, BlueprintEvent)
// Parameters:
// class UMediaSource*                     _pMediaSource                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_TutorialPage::UpdateMedia(class UMediaSource* _pMediaSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "UpdateMedia");

	Params::BFGWidget_TutorialPage_UpdateMedia Parms{};

	Parms._pMediaSource = _pMediaSource;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_TutorialPage.UpdateShortDescriptionText
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _strText                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_TutorialPage::UpdateShortDescriptionText(const class FText& _strText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "UpdateShortDescriptionText");

	Params::BFGWidget_TutorialPage_UpdateShortDescriptionText Parms{};

	Parms._strText = std::move(_strText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_TutorialPage.UpdateShortTitle
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _strTitle                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_TutorialPage::UpdateShortTitle(const class FText& _strTitle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "UpdateShortTitle");

	Params::BFGWidget_TutorialPage_UpdateShortTitle Parms{};

	Parms._strTitle = std::move(_strTitle);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_TutorialPage.ComputeAbsoluteIconPosition
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UBFGWidget_TutorialPage::ComputeAbsoluteIconPosition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "ComputeAbsoluteIconPosition");

	Params::BFGWidget_TutorialPage_ComputeAbsoluteIconPosition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_TutorialPage.GetContext
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGDataAsset_TutorialPage*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGDataAsset_TutorialPage* UBFGWidget_TutorialPage::GetContext() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialPage", "GetContext");

	Params::BFGWidget_TutorialPage_GetContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEvent_DelegateForwarding.Forward_BossObjectiveReached
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pBoss                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBFGQuest_BossObjective                 _objective                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEvent_DelegateForwarding::Forward_BossObjectiveReached(class AActor* _pBoss, EBFGQuest_BossObjective _objective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEvent_DelegateForwarding", "Forward_BossObjectiveReached");

	Params::BFGEvent_DelegateForwarding_Forward_BossObjectiveReached Parms{};

	Parms._pBoss = _pBoss;
	Parms._objective = _objective;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEvent_DelegateForwarding.Forward_CortexScanVOPlayed
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class AActor*                           _pOwner                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBFGCortexScanResponse           _response                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UBFGCortexScanResponseSet*        _pResponseSet                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEvent_DelegateForwarding::Forward_CortexScanVOPlayed(class AActor* _pOwner, const struct FBFGCortexScanResponse& _response, class UBFGCortexScanResponseSet* _pResponseSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEvent_DelegateForwarding", "Forward_CortexScanVOPlayed");

	Params::BFGEvent_DelegateForwarding_Forward_CortexScanVOPlayed Parms{};

	Parms._pOwner = _pOwner;
	Parms._response = std::move(_response);
	Parms._pResponseSet = _pResponseSet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEvent_DelegateForwarding.Forward_CutsceneStarted
// (Final, Native, Protected)

void UBFGEvent_DelegateForwarding::Forward_CutsceneStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEvent_DelegateForwarding", "Forward_CutsceneStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEvent_DelegateForwarding.Forward_DestroyedStaticObject
// (Final, Native, Protected)
// Parameters:
// class ABFGObject_StaticWithPhysics*     _pDestroyedObject                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEvent_DelegateForwarding::Forward_DestroyedStaticObject(class ABFGObject_StaticWithPhysics* _pDestroyedObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEvent_DelegateForwarding", "Forward_DestroyedStaticObject");

	Params::BFGEvent_DelegateForwarding_Forward_DestroyedStaticObject Parms{};

	Parms._pDestroyedObject = _pDestroyedObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEvent_DelegateForwarding.Forward_EnterWater
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEvent_DelegateForwarding::Forward_EnterWater(class AActor* _pActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEvent_DelegateForwarding", "Forward_EnterWater");

	Params::BFGEvent_DelegateForwarding_Forward_EnterWater Parms{};

	Parms._pActor = _pActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEvent_DelegateForwarding.Forward_FellOutOfWorld
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEvent_DelegateForwarding::Forward_FellOutOfWorld(class AActor* _pActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEvent_DelegateForwarding", "Forward_FellOutOfWorld");

	Params::BFGEvent_DelegateForwarding_Forward_FellOutOfWorld Parms{};

	Parms._pActor = _pActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEvent_DelegateForwarding.Forward_HealthChanged
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pOwner                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEvent_DelegateForwarding::Forward_HealthChanged(class AActor* _pOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEvent_DelegateForwarding", "Forward_HealthChanged");

	Params::BFGEvent_DelegateForwarding_Forward_HealthChanged Parms{};

	Parms._pOwner = _pOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEvent_DelegateForwarding.Forward_InitialWaveAmountReached
// (Final, Native, Protected)
// Parameters:
// class ABFGMissionSpawnManager*          _pSpawnManager                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEvent_DelegateForwarding::Forward_InitialWaveAmountReached(class ABFGMissionSpawnManager* _pSpawnManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEvent_DelegateForwarding", "Forward_InitialWaveAmountReached");

	Params::BFGEvent_DelegateForwarding_Forward_InitialWaveAmountReached Parms{};

	Parms._pSpawnManager = _pSpawnManager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEvent_DelegateForwarding.Forward_Interact
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pOwner                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pIteractedWith                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          _pFocusedOn                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEvent_DelegateForwarding::Forward_Interact(class AActor* _pOwner, class AActor* _pIteractedWith, class UObject* _pFocusedOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEvent_DelegateForwarding", "Forward_Interact");

	Params::BFGEvent_DelegateForwarding_Forward_Interact Parms{};

	Parms._pOwner = _pOwner;
	Parms._pIteractedWith = _pIteractedWith;
	Parms._pFocusedOn = _pFocusedOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEvent_DelegateForwarding.Forward_KilledActor
// (Final, Native, Protected)
// Parameters:
// class AController*                      _pInstigator                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pDamageSource                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pKilled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UDamageType>          _damageType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEvent_DelegateForwarding::Forward_KilledActor(class AController* _pInstigator, class AActor* _pDamageSource, class AActor* _pKilled, TSubclassOf<class UDamageType> _damageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEvent_DelegateForwarding", "Forward_KilledActor");

	Params::BFGEvent_DelegateForwarding_Forward_KilledActor Parms{};

	Parms._pInstigator = _pInstigator;
	Parms._pDamageSource = _pDamageSource;
	Parms._pKilled = _pKilled;
	Parms._damageType = _damageType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEvent_DelegateForwarding.Forward_MainMissionOrChallengeEnded
// (Final, Native, Protected)

void UBFGEvent_DelegateForwarding::Forward_MainMissionOrChallengeEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEvent_DelegateForwarding", "Forward_MainMissionOrChallengeEnded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEvent_DelegateForwarding.Forward_MentalAbilityActivity
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pOnwer                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGMentalAbilityBase*            _pAbility                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMentalAbility_EventState               _eState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEvent_DelegateForwarding::Forward_MentalAbilityActivity(class AActor* _pOnwer, class UBFGMentalAbilityBase* _pAbility, class AActor* _pTarget, EMentalAbility_EventState _eState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEvent_DelegateForwarding", "Forward_MentalAbilityActivity");

	Params::BFGEvent_DelegateForwarding_Forward_MentalAbilityActivity Parms{};

	Parms._pOnwer = _pOnwer;
	Parms._pAbility = _pAbility;
	Parms._pTarget = _pTarget;
	Parms._eState = _eState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEvent_DelegateForwarding.Forward_NarrativeSequenceEnd
// (Final, Native, Protected)
// Parameters:
// class UBFGNarrativeSequence*            _pSequence                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEvent_DelegateForwarding::Forward_NarrativeSequenceEnd(class UBFGNarrativeSequence* _pSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEvent_DelegateForwarding", "Forward_NarrativeSequenceEnd");

	Params::BFGEvent_DelegateForwarding_Forward_NarrativeSequenceEnd Parms{};

	Parms._pSequence = _pSequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEvent_DelegateForwarding.Forward_NarrativeSequenceFailed
// (Final, Native, Protected)
// Parameters:
// class UBFGNarrativeSequence*            _pSequence                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEvent_DelegateForwarding::Forward_NarrativeSequenceFailed(class UBFGNarrativeSequence* _pSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEvent_DelegateForwarding", "Forward_NarrativeSequenceFailed");

	Params::BFGEvent_DelegateForwarding_Forward_NarrativeSequenceFailed Parms{};

	Parms._pSequence = _pSequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEvent_DelegateForwarding.Forward_OverlapActor
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pOverlap                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEvent_DelegateForwarding::Forward_OverlapActor(class AActor* _pActor, class AActor* _pOverlap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEvent_DelegateForwarding", "Forward_OverlapActor");

	Params::BFGEvent_DelegateForwarding_Forward_OverlapActor Parms{};

	Parms._pActor = _pActor;
	Parms._pOverlap = _pOverlap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEvent_DelegateForwarding.Forward_OverlapEndActor
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pOverlap                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEvent_DelegateForwarding::Forward_OverlapEndActor(class AActor* _pActor, class AActor* _pOverlap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEvent_DelegateForwarding", "Forward_OverlapEndActor");

	Params::BFGEvent_DelegateForwarding_Forward_OverlapEndActor Parms{};

	Parms._pActor = _pActor;
	Parms._pOverlap = _pOverlap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEvent_DelegateForwarding.Forward_PickupItem
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pOwner                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pItem                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEvent_DelegateForwarding::Forward_PickupItem(class AActor* _pOwner, class AActor* _pItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEvent_DelegateForwarding", "Forward_PickupItem");

	Params::BFGEvent_DelegateForwarding_Forward_PickupItem Parms{};

	Parms._pOwner = _pOwner;
	Parms._pItem = _pItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEvent_DelegateForwarding.Forward_PlayerStateMonetaryValueChanged
// (Final, Native, Protected)
// Parameters:
// class ABFGPlayerState*                  _pPlayerState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEvent_DelegateForwarding::Forward_PlayerStateMonetaryValueChanged(class ABFGPlayerState* _pPlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEvent_DelegateForwarding", "Forward_PlayerStateMonetaryValueChanged");

	Params::BFGEvent_DelegateForwarding_Forward_PlayerStateMonetaryValueChanged Parms{};

	Parms._pPlayerState = _pPlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEvent_DelegateForwarding.Forward_ProximityGoalReached
// (Final, Native, Protected)
// Parameters:
// class UBFGQuest_ProximityMonitor*       _pProximityMonitor                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEvent_DelegateForwarding::Forward_ProximityGoalReached(const class UBFGQuest_ProximityMonitor* _pProximityMonitor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEvent_DelegateForwarding", "Forward_ProximityGoalReached");

	Params::BFGEvent_DelegateForwarding_Forward_ProximityGoalReached Parms{};

	Parms._pProximityMonitor = _pProximityMonitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEvent_DelegateForwarding.Forward_ProximitySubgoalReached
// (Final, Native, Protected)
// Parameters:
// class UBFGQuest_ProximityMonitor*       _pProximityMonitor                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iLimit                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEvent_DelegateForwarding::Forward_ProximitySubgoalReached(const class UBFGQuest_ProximityMonitor* _pProximityMonitor, int32 _iLimit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEvent_DelegateForwarding", "Forward_ProximitySubgoalReached");

	Params::BFGEvent_DelegateForwarding_Forward_ProximitySubgoalReached Parms{};

	Parms._pProximityMonitor = _pProximityMonitor;
	Parms._iLimit = _iLimit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEvent_DelegateForwarding.Forward_ResourceValueChanged
// (Final, Native, Protected)
// Parameters:
// EItemValueTypeEnum                      _eType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fNewValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fOldValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEvent_DelegateForwarding::Forward_ResourceValueChanged(EItemValueTypeEnum _eType, float _fNewValue, float _fOldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEvent_DelegateForwarding", "Forward_ResourceValueChanged");

	Params::BFGEvent_DelegateForwarding_Forward_ResourceValueChanged Parms{};

	Parms._eType = _eType;
	Parms._fNewValue = _fNewValue;
	Parms._fOldValue = _fOldValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEvent_DelegateForwarding.Forward_SpawnManagerEveryoneDead
// (Final, Native, Protected)
// Parameters:
// class ABFGMissionSpawnManager*          _pSpawnManager                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEvent_DelegateForwarding::Forward_SpawnManagerEveryoneDead(class ABFGMissionSpawnManager* _pSpawnManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEvent_DelegateForwarding", "Forward_SpawnManagerEveryoneDead");

	Params::BFGEvent_DelegateForwarding_Forward_SpawnManagerEveryoneDead Parms{};

	Parms._pSpawnManager = _pSpawnManager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEvent_DelegateForwarding.Forward_SpawnManagerLoaded
// (Final, Native, Protected)
// Parameters:
// class ABFGMissionSpawnManager*          _pSpawnManager                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEvent_DelegateForwarding::Forward_SpawnManagerLoaded(class ABFGMissionSpawnManager* _pSpawnManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEvent_DelegateForwarding", "Forward_SpawnManagerLoaded");

	Params::BFGEvent_DelegateForwarding_Forward_SpawnManagerLoaded Parms{};

	Parms._pSpawnManager = _pSpawnManager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEvent_DelegateForwarding.Forward_StreamingLevelStateChanged
// (Final, Native, Protected)
// Parameters:
// class UBFGStreamingLevelHandle*         _pHandle                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bIsLoaded                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEvent_DelegateForwarding::Forward_StreamingLevelStateChanged(class UBFGStreamingLevelHandle* _pHandle, bool _bIsLoaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEvent_DelegateForwarding", "Forward_StreamingLevelStateChanged");

	Params::BFGEvent_DelegateForwarding_Forward_StreamingLevelStateChanged Parms{};

	Parms._pHandle = _pHandle;
	Parms._bIsLoaded = _bIsLoaded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEvent_DelegateForwarding.Forward_TickPlayerControllingUFO
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pPlayerCharacter                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _PlayerUFO                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEvent_DelegateForwarding::Forward_TickPlayerControllingUFO(class AActor* _pPlayerCharacter, class AActor* _PlayerUFO)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEvent_DelegateForwarding", "Forward_TickPlayerControllingUFO");

	Params::BFGEvent_DelegateForwarding_Forward_TickPlayerControllingUFO Parms{};

	Parms._pPlayerCharacter = _pPlayerCharacter;
	Parms._PlayerUFO = _PlayerUFO;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEvent_DelegateForwarding.Forward_TimerSubgoalReached
// (Final, Native, Protected, HasDefaults)
// Parameters:
// class UBFGQuest_Timer*                  _pTimer                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTimespan                        _tsLimit                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEvent_DelegateForwarding::Forward_TimerSubgoalReached(const class UBFGQuest_Timer* _pTimer, const struct FTimespan& _tsLimit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEvent_DelegateForwarding", "Forward_TimerSubgoalReached");

	Params::BFGEvent_DelegateForwarding_Forward_TimerSubgoalReached Parms{};

	Parms._pTimer = _pTimer;
	Parms._tsLimit = std::move(_tsLimit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEvent_DelegateForwarding.Forward_TransportToOrbitAttempt
// (Final, Native, Protected)
// Parameters:
// class ABFGMissionOrbitalTransporter*    _pTransporter                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bSuccess                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEvent_DelegateForwarding::Forward_TransportToOrbitAttempt(class ABFGMissionOrbitalTransporter* _pTransporter, class AActor* _pTarget, bool _bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEvent_DelegateForwarding", "Forward_TransportToOrbitAttempt");

	Params::BFGEvent_DelegateForwarding_Forward_TransportToOrbitAttempt Parms{};

	Parms._pTransporter = _pTransporter;
	Parms._pTarget = _pTarget;
	Parms._bSuccess = _bSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEvent_DelegateForwarding.Forward_VariableMirrorValueChanged
// (Final, Native, Protected)
// Parameters:
// class UBFGVariableMirror*               _pVarMirror                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGVariable*                     _pVariable                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _oldValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _newValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEvent_DelegateForwarding::Forward_VariableMirrorValueChanged(class UBFGVariableMirror* _pVarMirror, const class UBFGVariable* _pVariable, int32 _oldValue, int32 _newValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEvent_DelegateForwarding", "Forward_VariableMirrorValueChanged");

	Params::BFGEvent_DelegateForwarding_Forward_VariableMirrorValueChanged Parms{};

	Parms._pVarMirror = _pVarMirror;
	Parms._pVariable = _pVariable;
	Parms._oldValue = _oldValue;
	Parms._newValue = _newValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEvent_DelegateForwarding.Forward_WaveStarted
// (Final, Native, Protected)
// Parameters:
// class ABFGMissionSpawnManager*          _pSpawnManager                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEvent_DelegateForwarding::Forward_WaveStarted(class ABFGMissionSpawnManager* _pSpawnManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEvent_DelegateForwarding", "Forward_WaveStarted");

	Params::BFGEvent_DelegateForwarding_Forward_WaveStarted Parms{};

	Parms._pSpawnManager = _pSpawnManager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BFGCore.BFGWidget_QuestEntry.ActionQuestEntry__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UBFGWidget_QuestEntry*            _pQuestEntry                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_QuestEntry::ActionQuestEntry__DelegateSignature(class UBFGWidget_QuestEntry* _pQuestEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_QuestEntry", "ActionQuestEntry__DelegateSignature");

	Params::BFGWidget_QuestEntry_ActionQuestEntry__DelegateSignature Parms{};

	Parms._pQuestEntry = _pQuestEntry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_QuestEntry.AddSubquestEntry
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UBFGWidget_SubquestEntry*         _pSubquestEntry                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_QuestEntry::AddSubquestEntry(class UBFGWidget_SubquestEntry* _pSubquestEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_QuestEntry", "AddSubquestEntry");

	Params::BFGWidget_QuestEntry_AddSubquestEntry Parms{};

	Parms._pSubquestEntry = _pSubquestEntry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_QuestEntry.ClearSubquestEntries
// (Event, Public, BlueprintEvent)

void UBFGWidget_QuestEntry::ClearSubquestEntries()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_QuestEntry", "ClearSubquestEntries");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_QuestEntry.Hide
// (Event, Public, BlueprintEvent)

void UBFGWidget_QuestEntry::Hide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_QuestEntry", "Hide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_QuestEntry.RebuildLayoutNative
// (Native, Event, Public, BlueprintEvent)

void UBFGWidget_QuestEntry::RebuildLayoutNative()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_QuestEntry", "RebuildLayoutNative");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_QuestEntry.SetSpacerSize
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector2D                        _vSize                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_QuestEntry::SetSpacerSize(const struct FVector2D& _vSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_QuestEntry", "SetSpacerSize");

	Params::BFGWidget_QuestEntry_SetSpacerSize Parms{};

	Parms._vSize = std::move(_vSize);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_QuestEntry.SetTitle
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _title                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_QuestEntry::SetTitle(const class FText& _title)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_QuestEntry", "SetTitle");

	Params::BFGWidget_QuestEntry_SetTitle Parms{};

	Parms._title = std::move(_title);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_QuestEntry.Show
// (Event, Public, BlueprintEvent)

void UBFGWidget_QuestEntry::Show()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_QuestEntry", "Show");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGGameFlowState_Cutscene.IsPlayingCutscene
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGGameFlowState_Cutscene::IsPlayingCutscene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGGameFlowState_Cutscene", "IsPlayingCutscene");

	Params::BFGGameFlowState_Cutscene_IsPlayingCutscene Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameFlowState_Cutscene.SequenceInfo_Reset
// (Final, Native, Private)
// Parameters:
// class UBFGSequencePlayer*               _pInfo                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_Cutscene::SequenceInfo_Reset(class UBFGSequencePlayer* _pInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_Cutscene", "SequenceInfo_Reset");

	Params::BFGGameFlowState_Cutscene_SequenceInfo_Reset Parms{};

	Parms._pInfo = _pInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_Cutscene.VoiceoverLineComplete
// (Final, Native, Private)

void UBFGGameFlowState_Cutscene::VoiceoverLineComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_Cutscene", "VoiceoverLineComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVehicleDeformation.AddDeformerWeight
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FHitResult                       _result                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FVector2D                        _vHitAxisClamped                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vHitWorldLocation                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGVehicleDeformation::AddDeformerWeight(const struct FHitResult& _result, struct FVector2D* _vHitAxisClamped, struct FVector* _vHitWorldLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVehicleDeformation", "AddDeformerWeight");

	Params::BFGVehicleDeformation_AddDeformerWeight Parms{};

	Parms._result = std::move(_result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_vHitAxisClamped != nullptr)
		*_vHitAxisClamped = std::move(Parms._vHitAxisClamped);

	if (_vHitWorldLocation != nullptr)
		*_vHitWorldLocation = std::move(Parms._vHitWorldLocation);
}


// Function BFGCore.BFGVehicleDeformation.CheckSpotLight
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        _vHitAxis                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGVehicleDeformation::CheckSpotLight(const struct FVector2D& _vHitAxis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVehicleDeformation", "CheckSpotLight");

	Params::BFGVehicleDeformation_CheckSpotLight Parms{};

	Parms._vHitAxis = std::move(_vHitAxis);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVehicleDeformation.GetBreakablePartFromHit
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          _vHitLocation                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGVehicleDeformation::GetBreakablePartFromHit(const struct FVector& _vHitLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVehicleDeformation", "GetBreakablePartFromHit");

	Params::BFGVehicleDeformation_GetBreakablePartFromHit Parms{};

	Parms._vHitLocation = std::move(_vHitLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVehicleDeformation.OnSkeletalHit
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           _pSelf                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pOther                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vNormal                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       _hitResult                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UBFGVehicleDeformation::OnSkeletalHit(class AActor* _pSelf, class AActor* _pOther, const struct FVector& _vNormal, const struct FHitResult& _hitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVehicleDeformation", "OnSkeletalHit");

	Params::BFGVehicleDeformation_OnSkeletalHit Parms{};

	Parms._pSelf = _pSelf;
	Parms._pOther = _pOther;
	Parms._vNormal = std::move(_vNormal);
	Parms._hitResult = std::move(_hitResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVehicleDeformation.CheckHitValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           _pSelf                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pOther                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGVehicleDeformation::CheckHitValid(class AActor* _pSelf, class AActor* _pOther) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVehicleDeformation", "CheckHitValid");

	Params::BFGVehicleDeformation_CheckHitValid Parms{};

	Parms._pSelf = _pSelf;
	Parms._pOther = _pOther;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEventTrigger_WorldLoaded.OnWorldLoaded
// (Final, Native, Protected)
// Parameters:
// class UBFGGameInstance*                 _pGameInstance                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWorld*                           _pWorld                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_WorldLoaded::OnWorldLoaded(class UBFGGameInstance* _pGameInstance, class UWorld* _pWorld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_WorldLoaded", "OnWorldLoaded");

	Params::BFGEventTrigger_WorldLoaded_OnWorldLoaded Parms{};

	Parms._pGameInstance = _pGameInstance;
	Parms._pWorld = _pWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_HUD_TextNotification.OnHideMessage
// (Event, Protected, BlueprintEvent)

void UBFGWidget_HUD_TextNotification::OnHideMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_TextNotification", "OnHideMessage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_HUD_TextNotification.OnShowMessage
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EBFGTextNotification_Severity           Severity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_TextNotification::OnShowMessage(const class FText& Text, EBFGTextNotification_Severity Severity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_TextNotification", "OnShowMessage");

	Params::BFGWidget_HUD_TextNotification_OnShowMessage Parms{};

	Parms.Text = std::move(Text);
	Parms.Severity = Severity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGGameFlowStateManager.AddStateToStack
// (Native, Public, BlueprintCallable)
// Parameters:
// class UBFGGameFlowState*                _pState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bKeepCurrent                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowStateManager::AddStateToStack(class UBFGGameFlowState* _pState, bool _bKeepCurrent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowStateManager", "AddStateToStack");

	Params::BFGGameFlowStateManager_AddStateToStack Parms{};

	Parms._pState = _pState;
	Parms._bKeepCurrent = _bKeepCurrent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowStateManager.ClearStateStack
// (Native, Public, BlueprintCallable)

void UBFGGameFlowStateManager::ClearStateStack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowStateManager", "ClearStateStack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowStateManager.FindStateByType
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                           _pClass                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bPendingStates                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGGameFlowState*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGGameFlowState* UBFGGameFlowStateManager::FindStateByType(const class UClass* _pClass, bool _bPendingStates)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowStateManager", "FindStateByType");

	Params::BFGGameFlowStateManager_FindStateByType Parms{};

	Parms._pClass = _pClass;
	Parms._bPendingStates = _bPendingStates;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameFlowStateManager.ForceLeaveStatesUntil
// (Native, Public, BlueprintCallable)
// Parameters:
// class UBFGGameFlowState*                _pState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowStateManager::ForceLeaveStatesUntil(class UBFGGameFlowState* _pState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowStateManager", "ForceLeaveStatesUntil");

	Params::BFGGameFlowStateManager_ForceLeaveStatesUntil Parms{};

	Parms._pState = _pState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowStateManager.GetBottomGameState
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGGameFlowState*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGGameFlowState* UBFGGameFlowStateManager::GetBottomGameState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowStateManager", "GetBottomGameState");

	Params::BFGGameFlowStateManager_GetBottomGameState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameFlowStateManager.GetCurrentState
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGGameFlowState*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGGameFlowState* UBFGGameFlowStateManager::GetCurrentState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowStateManager", "GetCurrentState");

	Params::BFGGameFlowStateManager_GetCurrentState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameFlowStateManager.GetGameInstance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGGameInstance*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGGameInstance* UBFGGameFlowStateManager::GetGameInstance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowStateManager", "GetGameInstance");

	Params::BFGGameFlowStateManager_GetGameInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameFlowStateManager.GetPreviousState
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGGameFlowState*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGGameFlowState* UBFGGameFlowStateManager::GetPreviousState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowStateManager", "GetPreviousState");

	Params::BFGGameFlowStateManager_GetPreviousState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEventManager.GameSystem_EventsLog
// (Final, Exec, Native, Public, Const)

void UBFGEventManager::GameSystem_EventsLog() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventManager", "GameSystem_EventsLog");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEventTrigger_AlertLevelReached.OnAlertLevelChanged
// (Final, Native, Protected)
// Parameters:
// EBFGAlertSystemState                    _newState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_AlertLevelReached::OnAlertLevelChanged(EBFGAlertSystemState _newState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_AlertLevelReached", "OnAlertLevelChanged");

	Params::BFGEventTrigger_AlertLevelReached_OnAlertLevelChanged Parms{};

	Parms._newState = _newState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_BumperVideos.OnApplicationPostInputKeyDownEvent
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FKeyEvent                        _keyEvent                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGGameFlowState_BumperVideos::OnApplicationPostInputKeyDownEvent(const struct FKeyEvent& _keyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_BumperVideos", "OnApplicationPostInputKeyDownEvent");

	Params::BFGGameFlowState_BumperVideos_OnApplicationPostInputKeyDownEvent Parms{};

	Parms._keyEvent = std::move(_keyEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_BumperVideos.OnMediaEnded
// (Final, Native, Public)

void UBFGGameFlowState_BumperVideos::OnMediaEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_BumperVideos", "OnMediaEnded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEventTrigger_CortexScanVOPlayed.OnPlayedVO
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBFGCortexScanResponse           _response                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UBFGCortexScanResponseSet*        _pResponseSet                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_CortexScanVOPlayed::OnPlayedVO(class AActor* _pActor, const struct FBFGCortexScanResponse& _response, class UBFGCortexScanResponseSet* _pResponseSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_CortexScanVOPlayed", "OnPlayedVO");

	Params::BFGEventTrigger_CortexScanVOPlayed_OnPlayedVO Parms{};

	Parms._pActor = _pActor;
	Parms._response = std::move(_response);
	Parms._pResponseSet = _pResponseSet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEventTrigger_EnterWater.OnFinishedTask
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_EnterWater::OnFinishedTask(class AActor* _pActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_EnterWater", "OnFinishedTask");

	Params::BFGEventTrigger_EnterWater_OnFinishedTask Parms{};

	Parms._pActor = _pActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEventTrigger_FellOutOfWorld.OnFellOutOfWorld
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_FellOutOfWorld::OnFellOutOfWorld(class AActor* _pActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_FellOutOfWorld", "OnFellOutOfWorld");

	Params::BFGEventTrigger_FellOutOfWorld_OnFellOutOfWorld Parms{};

	Parms._pActor = _pActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEventTrigger_InteractWith.OnInteract
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pUser                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pInteractWith                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          _pFocusedOn                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_InteractWith::OnInteract(class AActor* _pUser, class AActor* _pInteractWith, class UObject* _pFocusedOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_InteractWith", "OnInteract");

	Params::BFGEventTrigger_InteractWith_OnInteract Parms{};

	Parms._pUser = _pUser;
	Parms._pInteractWith = _pInteractWith;
	Parms._pFocusedOn = _pFocusedOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEventTrigger_InteractWith.OnTickPlayerControllingUFO
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pPlayerCharacter                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pUFO                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_InteractWith::OnTickPlayerControllingUFO(class AActor* _pPlayerCharacter, class AActor* _pUFO)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_InteractWith", "OnTickPlayerControllingUFO");

	Params::BFGEventTrigger_InteractWith_OnTickPlayerControllingUFO Parms{};

	Parms._pPlayerCharacter = _pPlayerCharacter;
	Parms._pUFO = _pUFO;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEventTrigger_LocateLayer.OnLocateEvent
// (Final, Native, Protected)
// Parameters:
// EBFGLocateLayer_Operation               _operation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGQuest_ElementLocateHint*      _pLocateElement                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _strSharedLayerIdentifier                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_LocateLayer::OnLocateEvent(EBFGLocateLayer_Operation _operation, class UBFGQuest_ElementLocateHint* _pLocateElement, const class FString& _strSharedLayerIdentifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_LocateLayer", "OnLocateEvent");

	Params::BFGEventTrigger_LocateLayer_OnLocateEvent Parms{};

	Parms._operation = _operation;
	Parms._pLocateElement = _pLocateElement;
	Parms._strSharedLayerIdentifier = std::move(_strSharedLayerIdentifier);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEventTrigger_MentalAbility.OnUsedAbility
// (Final, Native, Public)
// Parameters:
// class AActor*                           _pUser                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGMentalAbilityBase*            _pAbility                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMentalAbility_EventState               _eState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_MentalAbility::OnUsedAbility(class AActor* _pUser, class UBFGMentalAbilityBase* _pAbility, class AActor* _pTarget, EMentalAbility_EventState _eState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_MentalAbility", "OnUsedAbility");

	Params::BFGEventTrigger_MentalAbility_OnUsedAbility Parms{};

	Parms._pUser = _pUser;
	Parms._pAbility = _pAbility;
	Parms._pTarget = _pTarget;
	Parms._eState = _eState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEventTrigger_OrbitalTransporter.OnTransportAttempt
// (Final, Native, Protected)
// Parameters:
// class ABFGMissionOrbitalTransporter*    _pTransporter                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bSuccess                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_OrbitalTransporter::OnTransportAttempt(class ABFGMissionOrbitalTransporter* _pTransporter, class AActor* _pTarget, bool _bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_OrbitalTransporter", "OnTransportAttempt");

	Params::BFGEventTrigger_OrbitalTransporter_OnTransportAttempt Parms{};

	Parms._pTransporter = _pTransporter;
	Parms._pTarget = _pTarget;
	Parms._bSuccess = _bSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEventTrigger_PickupItem.OnPickupItem
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pOwner                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pItem                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_PickupItem::OnPickupItem(class AActor* _pOwner, class AActor* _pItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_PickupItem", "OnPickupItem");

	Params::BFGEventTrigger_PickupItem_OnPickupItem Parms{};

	Parms._pOwner = _pOwner;
	Parms._pItem = _pItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_Mothership_MissionSelection.SetWorldState
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UBFGMissionWorldState*            _pWorldState                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Mothership_MissionSelection::SetWorldState(class UBFGMissionWorldState* _pWorldState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_MissionSelection", "SetWorldState");

	Params::BFGWidget_Mothership_MissionSelection_SetWorldState Parms{};

	Parms._pWorldState = _pWorldState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_Mothership_MissionSelection.GetWorldState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGMissionWorldState*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGMissionWorldState* UBFGWidget_Mothership_MissionSelection::GetWorldState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_MissionSelection", "GetWorldState");

	Params::BFGWidget_Mothership_MissionSelection_GetWorldState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEventTrigger_ProximitySubgoalReached.OnProximitySubgoalReached
// (Final, Native, Protected)
// Parameters:
// class UBFGQuest_ProximityMonitor*       _pProximityMonitor                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iLimit                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_ProximitySubgoalReached::OnProximitySubgoalReached(const class UBFGQuest_ProximityMonitor* _pProximityMonitor, int32 _iLimit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_ProximitySubgoalReached", "OnProximitySubgoalReached");

	Params::BFGEventTrigger_ProximitySubgoalReached_OnProximitySubgoalReached Parms{};

	Parms._pProximityMonitor = _pProximityMonitor;
	Parms._iLimit = _iLimit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEventTrigger_ResourceValueCounted.ValueChanged
// (Final, Native, Protected)
// Parameters:
// class UBFGQuest_Element*                _pElement                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fValueAdded                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FValueTotal                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_ResourceValueCounted::ValueChanged(class UBFGQuest_Element* _pElement, float _fValueAdded, float FValueTotal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_ResourceValueCounted", "ValueChanged");

	Params::BFGEventTrigger_ResourceValueCounted_ValueChanged Parms{};

	Parms._pElement = _pElement;
	Parms._fValueAdded = _fValueAdded;
	Parms.FValueTotal = FValueTotal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEventTrigger_SequenceFailed.OnNarrativeSequenceFailed
// (Final, Native, Protected)
// Parameters:
// class UBFGNarrativeSequence*            _pSequence                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_SequenceFailed::OnNarrativeSequenceFailed(class UBFGNarrativeSequence* _pSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_SequenceFailed", "OnNarrativeSequenceFailed");

	Params::BFGEventTrigger_SequenceFailed_OnNarrativeSequenceFailed Parms{};

	Parms._pSequence = _pSequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEventTrigger_SpawnFinished.OnSpawnFinished
// (Final, Native, Protected)
// Parameters:
// class ABFGMissionSpawnManager*          _pManager                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_SpawnFinished::OnSpawnFinished(class ABFGMissionSpawnManager* _pManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_SpawnFinished", "OnSpawnFinished");

	Params::BFGEventTrigger_SpawnFinished_OnSpawnFinished Parms{};

	Parms._pManager = _pManager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEventTrigger_SpawnManagerLoaded.OnLoaded
// (Final, Native, Protected)
// Parameters:
// class ABFGMissionSpawnManager*          _pSpawnManager                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_SpawnManagerLoaded::OnLoaded(class ABFGMissionSpawnManager* _pSpawnManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_SpawnManagerLoaded", "OnLoaded");

	Params::BFGEventTrigger_SpawnManagerLoaded_OnLoaded Parms{};

	Parms._pSpawnManager = _pSpawnManager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameState.GameSystemVLog
// (Final, Exec, Native, Public)

void ABFGGameState::GameSystemVLog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GameSystemVLog");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameState.OnLevelStateChanged
// (Final, Native, Protected)
// Parameters:
// class UBFGStreamingLevelHandle*         _pLevelHandle                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bIsLoaded                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGGameState::OnLevelStateChanged(class UBFGStreamingLevelHandle* _pLevelHandle, bool _bIsLoaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "OnLevelStateChanged");

	Params::BFGGameState_OnLevelStateChanged Parms{};

	Parms._pLevelHandle = _pLevelHandle;
	Parms._bIsLoaded = _bIsLoaded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameState.PopGameActorPause
// (Final, Exec, Native, Public)

void ABFGGameState::PopGameActorPause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "PopGameActorPause");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameState.PushGameActorPause
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    _bGamePaused                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGGameState::PushGameActorPause(bool _bGamePaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "PushGameActorPause");

	Params::BFGGameState_PushGameActorPause Parms{};

	Parms._bGamePaused = _bGamePaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameState.AwardAchievement
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UWorld*                           _pWorldContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _nAchievementID                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fAchievementProgress                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGGameState::AwardAchievement(class UWorld* _pWorldContext, class FName _nAchievementID, float _fAchievementProgress) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "AwardAchievement");

	Params::BFGGameState_AwardAchievement Parms{};

	Parms._pWorldContext = _pWorldContext;
	Parms._nAchievementID = _nAchievementID;
	Parms._fAchievementProgress = _fAchievementProgress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameState.FindGameSystem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UBFGGameSystem>       _pClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGGameSystem*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGGameSystem* ABFGGameState::FindGameSystem(TSubclassOf<class UBFGGameSystem> _pClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "FindGameSystem");

	Params::BFGGameState_FindGameSystem Parms{};

	Parms._pClass = _pClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetAchievementManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGAchievementManager*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGAchievementManager* ABFGGameState::GetAchievementManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetAchievementManager");

	Params::BFGGameState_GetAchievementManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetActorActivationManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGActorActivationManager*       ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGActorActivationManager* ABFGGameState::GetActorActivationManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetActorActivationManager");

	Params::BFGGameState_GetActorActivationManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetAimAssistManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGAimAssistManager*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGAimAssistManager* ABFGGameState::GetAimAssistManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetAimAssistManager");

	Params::BFGGameState_GetAimAssistManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetAISystem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGAISystem*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGAISystem* ABFGGameState::GetAISystem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetAISystem");

	Params::BFGGameState_GetAISystem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetAlertSystemManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGAlertSystemManager*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGAlertSystemManager* ABFGGameState::GetAlertSystemManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetAlertSystemManager");

	Params::BFGGameState_GetAlertSystemManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetAmbientSoundManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGAmbientSoundManager*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGAmbientSoundManager* ABFGGameState::GetAmbientSoundManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetAmbientSoundManager");

	Params::BFGGameState_GetAmbientSoundManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetAnimSharingSetup
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimationSharingSetup*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimationSharingSetup* ABFGGameState::GetAnimSharingSetup() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetAnimSharingSetup");

	Params::BFGGameState_GetAnimSharingSetup Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetBossHealthHUDManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGBossHealthHUDManager*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGBossHealthHUDManager* ABFGGameState::GetBossHealthHUDManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetBossHealthHUDManager");

	Params::BFGGameState_GetBossHealthHUDManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetBroadphaseManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGBroadphaseManager*            ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGBroadphaseManager* ABFGGameState::GetBroadphaseManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetBroadphaseManager");

	Params::BFGGameState_GetBroadphaseManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetBuildingPropsManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGBuildingPropsManager*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGBuildingPropsManager* ABFGGameState::GetBuildingPropsManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetBuildingPropsManager");

	Params::BFGGameState_GetBuildingPropsManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetBurningGroundManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGBurningGroundManager*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGBurningGroundManager* ABFGGameState::GetBurningGroundManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetBurningGroundManager");

	Params::BFGGameState_GetBurningGroundManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetCSPManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGChallengeStartingPointManager*ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGChallengeStartingPointManager* ABFGGameState::GetCSPManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetCSPManager");

	Params::BFGGameState_GetCSPManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetCutscenePlaybackManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGSequencePlaybackManager*      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGSequencePlaybackManager* ABFGGameState::GetCutscenePlaybackManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetCutscenePlaybackManager");

	Params::BFGGameState_GetCutscenePlaybackManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetDestructionStreamingManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGDestructionStreamingManager*  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGDestructionStreamingManager* ABFGGameState::GetDestructionStreamingManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetDestructionStreamingManager");

	Params::BFGGameState_GetDestructionStreamingManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetDynamicStaticObjectManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGDynamicStaticObjectManager*   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGDynamicStaticObjectManager* ABFGGameState::GetDynamicStaticObjectManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetDynamicStaticObjectManager");

	Params::BFGGameState_GetDynamicStaticObjectManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetEventManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGEventManager*                 ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGEventManager* ABFGGameState::GetEventManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetEventManager");

	Params::BFGGameState_GetEventManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetHighlightableSceneObjectManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGHighlightableSceneObjectManager*ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGHighlightableSceneObjectManager* ABFGGameState::GetHighlightableSceneObjectManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetHighlightableSceneObjectManager");

	Params::BFGGameState_GetHighlightableSceneObjectManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetHUDDataHub
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGDataHub*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGDataHub* ABFGGameState::GetHUDDataHub() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetHUDDataHub");

	Params::BFGGameState_GetHUDDataHub Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetInCredits
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGGameState::GetInCredits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetInCredits");

	Params::BFGGameState_GetInCredits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetInputRebindingSystem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGInputRebindingSystem*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGInputRebindingSystem* ABFGGameState::GetInputRebindingSystem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetInputRebindingSystem");

	Params::BFGGameState_GetInputRebindingSystem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetInterpolationManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGInterpolationManager*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGInterpolationManager* ABFGGameState::GetInterpolationManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetInterpolationManager");

	Params::BFGGameState_GetInterpolationManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetLockOnManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGLockOnManager*                ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGLockOnManager* ABFGGameState::GetLockOnManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetLockOnManager");

	Params::BFGGameState_GetLockOnManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetMothershipTransitionManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGMothershipTransitionManager*  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGMothershipTransitionManager* ABFGGameState::GetMothershipTransitionManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetMothershipTransitionManager");

	Params::BFGGameState_GetMothershipTransitionManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetObjectiveMarkerSystem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGObjectiveMarkerSystem*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGObjectiveMarkerSystem* ABFGGameState::GetObjectiveMarkerSystem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetObjectiveMarkerSystem");

	Params::BFGGameState_GetObjectiveMarkerSystem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetObjectRespawnManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGObjectRespawnManager*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGObjectRespawnManager* ABFGGameState::GetObjectRespawnManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetObjectRespawnManager");

	Params::BFGGameState_GetObjectRespawnManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetOceanManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGOceanManager*                 ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGOceanManager* ABFGGameState::GetOceanManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetOceanManager");

	Params::BFGGameState_GetOceanManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetOverheadWidgetManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGOverheadWidgetManager*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGOverheadWidgetManager* ABFGGameState::GetOverheadWidgetManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetOverheadWidgetManager");

	Params::BFGGameState_GetOverheadWidgetManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetPhotographySystem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGPhotographySystem*            ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGPhotographySystem* ABFGGameState::GetPhotographySystem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetPhotographySystem");

	Params::BFGGameState_GetPhotographySystem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetQuestManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGQuest_Manager*                ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGQuest_Manager* ABFGGameState::GetQuestManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetQuestManager");

	Params::BFGGameState_GetQuestManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetRadarManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGRadarManager*                 ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGRadarManager* ABFGGameState::GetRadarManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetRadarManager");

	Params::BFGGameState_GetRadarManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetReadTextureManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGReadTextureManager*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGReadTextureManager* ABFGGameState::GetReadTextureManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetReadTextureManager");

	Params::BFGGameState_GetReadTextureManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetSpawnPoolManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGSpawnPoolManager*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGSpawnPoolManager* ABFGGameState::GetSpawnPoolManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetSpawnPoolManager");

	Params::BFGGameState_GetSpawnPoolManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetStatisticsManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGStatisticsManager*            ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGStatisticsManager* ABFGGameState::GetStatisticsManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetStatisticsManager");

	Params::BFGGameState_GetStatisticsManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetStreamingLevelManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGStreamingLevelManager*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGStreamingLevelManager* ABFGGameState::GetStreamingLevelManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetStreamingLevelManager");

	Params::BFGGameState_GetStreamingLevelManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetTimeDilationManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGTimeDilationManager*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGTimeDilationManager* ABFGGameState::GetTimeDilationManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetTimeDilationManager");

	Params::BFGGameState_GetTimeDilationManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetTrafficCrowdManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGTrafficCrowdManager*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGTrafficCrowdManager* ABFGGameState::GetTrafficCrowdManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetTrafficCrowdManager");

	Params::BFGGameState_GetTrafficCrowdManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetTransmogrifyLootManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGTransmogrifyLootManager*      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGTransmogrifyLootManager* ABFGGameState::GetTransmogrifyLootManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetTransmogrifyLootManager");

	Params::BFGGameState_GetTransmogrifyLootManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetTutorialManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGTutorialManager*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGTutorialManager* ABFGGameState::GetTutorialManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetTutorialManager");

	Params::BFGGameState_GetTutorialManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetUFOManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGUFOManager*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGUFOManager* ABFGGameState::GetUFOManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetUFOManager");

	Params::BFGGameState_GetUFOManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetVariableMirror
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGVariableMirror*               ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGVariableMirror* ABFGGameState::GetVariableMirror() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetVariableMirror");

	Params::BFGGameState_GetVariableMirror Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetVirtualCrowdManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGVirtualCrowdManager*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGVirtualCrowdManager* ABFGGameState::GetVirtualCrowdManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetVirtualCrowdManager");

	Params::BFGGameState_GetVirtualCrowdManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetVoiceoverSystem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGVoiceoverSystem*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGVoiceoverSystem* ABFGGameState::GetVoiceoverSystem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetVoiceoverSystem");

	Params::BFGGameState_GetVoiceoverSystem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetWaterManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGWaterManager*                 ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGWaterManager* ABFGGameState::GetWaterManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetWaterManager");

	Params::BFGGameState_GetWaterManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameState.GetWidgetPoolManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGWidgetPoolManager*            ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGWidgetPoolManager* ABFGGameState::GetWidgetPoolManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameState", "GetWidgetPoolManager");

	Params::BFGGameState_GetWidgetPoolManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGEventTrigger_TimerSubgoalReached.OnTimerSubgoalReached
// (Final, Native, Protected, HasDefaults)
// Parameters:
// class UBFGQuest_Timer*                  _pTimer                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTimespan                        _tsLimit                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_TimerSubgoalReached::OnTimerSubgoalReached(const class UBFGQuest_Timer* _pTimer, const struct FTimespan& _tsLimit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_TimerSubgoalReached", "OnTimerSubgoalReached");

	Params::BFGEventTrigger_TimerSubgoalReached_OnTimerSubgoalReached Parms{};

	Parms._pTimer = _pTimer;
	Parms._tsLimit = std::move(_tsLimit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEventTrigger_VariableChangeValues.OnVariableValueChanged
// (Final, Native, Protected)
// Parameters:
// class UBFGVariableMirror*               _pVarMirror                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGVariable*                     _pVariable                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _oldValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _newValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_VariableChangeValues::OnVariableValueChanged(class UBFGVariableMirror* _pVarMirror, const class UBFGVariable* _pVariable, int32 _oldValue, int32 _newValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_VariableChangeValues", "OnVariableValueChanged");

	Params::BFGEventTrigger_VariableChangeValues_OnVariableValueChanged Parms{};

	Parms._pVarMirror = _pVarMirror;
	Parms._pVariable = _pVariable;
	Parms._oldValue = _oldValue;
	Parms._newValue = _newValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEventTrigger_WaveStarted.OnWaveStarted
// (Final, Native, Protected)
// Parameters:
// class ABFGMissionSpawnManager*          _pSpawnManager                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_WaveStarted::OnWaveStarted(class ABFGMissionSpawnManager* _pSpawnManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_WaveStarted", "OnWaveStarted");

	Params::BFGEventTrigger_WaveStarted_OnWaveStarted Parms{};

	Parms._pSpawnManager = _pSpawnManager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGEventTrigger_GameStart.OnGameStart
// (Final, Native, Protected)
// Parameters:
// class UBFGGameInstance*                 _pGameInstance                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWorld*                           _pWorld                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGEventTrigger_GameStart::OnGameStart(class UBFGGameInstance* _pGameInstance, class UWorld* _pWorld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGEventTrigger_GameStart", "OnGameStart");

	Params::BFGEventTrigger_GameStart_OnGameStart Parms{};

	Parms._pGameInstance = _pGameInstance;
	Parms._pWorld = _pWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGFadeSystem.GetGameInstance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGGameInstance*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGGameInstance* UBFGFadeSystem::GetGameInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGFadeSystem", "GetGameInstance");

	Params::BFGFadeSystem_GetGameInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGFadeSystem.ResetAudioFade
// (Final, Native, Public, BlueprintCallable)

void UBFGFadeSystem::ResetAudioFade()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGFadeSystem", "ResetAudioFade");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGFoliageUtils.FindFoliageInSphere
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FBFGFoliageComponentInstancePair>_apResult                                              (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FVector                          _vOrigin                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pIgnoreActor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           _pOnlyFoliageComponentClass                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGFoliageUtils::FindFoliageInSphere(class UObject* WorldContextObject, TArray<struct FBFGFoliageComponentInstancePair>* _apResult, const struct FVector& _vOrigin, float _fRadius, class AActor* _pIgnoreActor, class UClass* _pOnlyFoliageComponentClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGFoliageUtils", "FindFoliageInSphere");

	Params::BFGFoliageUtils_FindFoliageInSphere Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms._vOrigin = std::move(_vOrigin);
	Parms._fRadius = _fRadius;
	Parms._pIgnoreActor = _pIgnoreActor;
	Parms._pOnlyFoliageComponentClass = _pOnlyFoliageComponentClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_apResult != nullptr)
		*_apResult = std::move(Parms._apResult);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGFoliageUtils.MakeStableNameForFoliageInstance
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFoliageInstancedStaticMeshComponent*_pFoliageComponent                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iInstanceIndex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UBFGFoliageUtils::MakeStableNameForFoliageInstance(const class UFoliageInstancedStaticMeshComponent* _pFoliageComponent, int32 _iInstanceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGFoliageUtils", "MakeStableNameForFoliageInstance");

	Params::BFGFoliageUtils_MakeStableNameForFoliageInstance Parms{};

	Parms._pFoliageComponent = _pFoliageComponent;
	Parms._iInstanceIndex = _iInstanceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_BumperVideo.DoSkipSequence
// (Final, Native, Public, BlueprintCallable)

void UBFGWidget_BumperVideo::DoSkipSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_BumperVideo", "DoSkipSequence");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_BumperVideo.SetGameFlowState
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UBFGGameFlowState_BumperVideos*   _pGameFlowState                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_BumperVideo::SetGameFlowState(class UBFGGameFlowState_BumperVideos* _pGameFlowState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_BumperVideo", "SetGameFlowState");

	Params::BFGWidget_BumperVideo_SetGameFlowState Parms{};

	Parms._pGameFlowState = _pGameFlowState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_Cutscene.DoSkipSequence
// (Final, Native, Public, BlueprintCallable)

void UBFGWidget_Cutscene::DoSkipSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Cutscene", "DoSkipSequence");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_Cutscene.SetGameFlowState
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UBFGGameFlowState_Cutscene*       _pGameFlowState                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Cutscene::SetGameFlowState(class UBFGGameFlowState_Cutscene* _pGameFlowState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Cutscene", "SetGameFlowState");

	Params::BFGWidget_Cutscene_SetGameFlowState Parms{};

	Parms._pGameFlowState = _pGameFlowState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_LoadGame.StartLoadGame
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBFGGameInstance*                 _pGameInstance                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGGameFlowState_LoadGame::StartLoadGame(class UBFGGameInstance* _pGameInstance, int32 _iSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGGameFlowState_LoadGame", "StartLoadGame");

	Params::BFGGameFlowState_LoadGame_StartLoadGame Parms{};

	Parms._pGameInstance = _pGameInstance;
	Parms._iSlot = _iSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameFlowState_LoadGame.OnSaveSystemActionComplete
// (Final, Native, Protected)
// Parameters:
// class UBFGSaveSystem*                   _pSaveSystem                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGSaveSystem_Action*            _pAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBFGSaveSystem_ActionResult             _result                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_LoadGame::OnSaveSystemActionComplete(class UBFGSaveSystem* _pSaveSystem, class UBFGSaveSystem_Action* _pAction, EBFGSaveSystem_ActionResult _result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_LoadGame", "OnSaveSystemActionComplete");

	Params::BFGGameFlowState_LoadGame_OnSaveSystemActionComplete Parms{};

	Parms._pSaveSystem = _pSaveSystem;
	Parms._pAction = _pAction;
	Parms._result = _result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_MenuGameOptions.OnChangesAccepted
// (Final, Native, Protected)

void UBFGGameFlowState_MenuGameOptions::OnChangesAccepted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_MenuGameOptions", "OnChangesAccepted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_MenuGameOptions.OnOptionFloatChanged
// (Final, Native, Protected)
// Parameters:
// class FName                             _oOptionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_MenuGameOptions::OnOptionFloatChanged(class FName _oOptionName, float _fValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_MenuGameOptions", "OnOptionFloatChanged");

	Params::BFGGameFlowState_MenuGameOptions_OnOptionFloatChanged Parms{};

	Parms._oOptionName = _oOptionName;
	Parms._fValue = _fValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_MenuGameOptions.OnOptionHandlerMessageLeavePrompt
// (Final, Native, Protected)
// Parameters:
// EBFGDialogMessage                       _eMessage                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_MenuGameOptions::OnOptionHandlerMessageLeavePrompt(EBFGDialogMessage _eMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_MenuGameOptions", "OnOptionHandlerMessageLeavePrompt");

	Params::BFGGameFlowState_MenuGameOptions_OnOptionHandlerMessageLeavePrompt Parms{};

	Parms._eMessage = _eMessage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_MenuGameOptions.OnOptionIntChanged
// (Final, Native, Protected)
// Parameters:
// class FName                             _oOptionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_MenuGameOptions::OnOptionIntChanged(class FName _oOptionName, int32 _iValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_MenuGameOptions", "OnOptionIntChanged");

	Params::BFGGameFlowState_MenuGameOptions_OnOptionIntChanged Parms{};

	Parms._oOptionName = _oOptionName;
	Parms._iValue = _iValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_MenuGameOptions.OnOptionKeyAssignmentChanged
// (Final, Native, Protected)

void UBFGGameFlowState_MenuGameOptions::OnOptionKeyAssignmentChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_MenuGameOptions", "OnOptionKeyAssignmentChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_MenuGameOptions.OnResetOptionsDialogResult
// (Final, Native, Protected)
// Parameters:
// bool                                    _bOkClicked                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_MenuGameOptions::OnResetOptionsDialogResult(bool _bOkClicked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_MenuGameOptions", "OnResetOptionsDialogResult");

	Params::BFGGameFlowState_MenuGameOptions_OnResetOptionsDialogResult Parms{};

	Parms._bOkClicked = _bOkClicked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_MenuGameOptions.OnResolutionPromptConfirmed
// (Final, Native, Protected)
// Parameters:
// bool                                    _bAccepted                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_MenuGameOptions::OnResolutionPromptConfirmed(bool _bAccepted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_MenuGameOptions", "OnResolutionPromptConfirmed");

	Params::BFGGameFlowState_MenuGameOptions_OnResolutionPromptConfirmed Parms{};

	Parms._bAccepted = _bAccepted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_MenuGameOptions.OnWindowModeChanged
// (Final, Native, Public)

void UBFGGameFlowState_MenuGameOptions::OnWindowModeChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_MenuGameOptions", "OnWindowModeChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_MenuGameOptions.ResetOptionsToDefault
// (Final, Native, Public)

void UBFGGameFlowState_MenuGameOptions::ResetOptionsToDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_MenuGameOptions", "ResetOptionsToDefault");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_MenuGameOptions.GetCultureInfo
// (Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// TArray<struct FBFGMenuGameOptionCultureInfo>CultureInfo                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGGameFlowState_MenuGameOptions::GetCultureInfo(TArray<struct FBFGMenuGameOptionCultureInfo>& CultureInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_MenuGameOptions", "GetCultureInfo");

	Params::BFGGameFlowState_MenuGameOptions_GetCultureInfo Parms{};

	Parms.CultureInfo = std::move(CultureInfo);

	UObject::ProcessEvent(Func, &Parms);

	CultureInfo = std::move(Parms.CultureInfo);
}


// Function BFGCore.BFGGameFlowState_MessageBox.Show
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UBFGGameInstance*                 _pGameInstance                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBFGMessageBoxParams             _params                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UBFGGameFlowState_MessageBox::Show(class UBFGGameInstance* _pGameInstance, const struct FBFGMessageBoxParams& _params)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGGameFlowState_MessageBox", "Show");

	Params::BFGGameFlowState_MessageBox_Show Parms{};

	Parms._pGameInstance = _pGameInstance;
	Parms._params = std::move(_params);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_Mothership_MissionSelection.TriggerLevelSwitch
// (Final, Native, Protected)
// Parameters:
// class ALevelSequenceActor*              _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bWasCutscene                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_Mothership_MissionSelection::TriggerLevelSwitch(class ALevelSequenceActor* _pActor, bool _bWasCutscene)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_Mothership_MissionSelection", "TriggerLevelSwitch");

	Params::BFGGameFlowState_Mothership_MissionSelection_TriggerLevelSwitch Parms{};

	Parms._pActor = _pActor;
	Parms._bWasCutscene = _bWasCutscene;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameFlowState_RespawnAtCheckpoint.StartRespawn
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBFGGameInstance*                 _pGameInstance                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bFailedMission                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGGameFlowState_RespawnAtCheckpoint::StartRespawn(class UBFGGameInstance* _pGameInstance, bool _bFailedMission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGGameFlowState_RespawnAtCheckpoint", "StartRespawn");

	Params::BFGGameFlowState_RespawnAtCheckpoint_StartRespawn Parms{};

	Parms._pGameInstance = _pGameInstance;
	Parms._bFailedMission = _bFailedMission;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameFlowState_SaveGame.StartSaveGame
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBFGGameInstance*                 _pGameInstance                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGSaveContext*                  _pSaveContext                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBFGSaveSystem_SaveGameAction_UseCase   _useCase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGQuest*                        _pQuestUseCase                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iSlot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bForceTeleport                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGGameFlowState_SaveGame::StartSaveGame(class UBFGGameInstance* _pGameInstance, class UBFGSaveContext* _pSaveContext, EBFGSaveSystem_SaveGameAction_UseCase _useCase, class UBFGQuest* _pQuestUseCase, int32 _iSlot, bool _bForceTeleport)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGGameFlowState_SaveGame", "StartSaveGame");

	Params::BFGGameFlowState_SaveGame_StartSaveGame Parms{};

	Parms._pGameInstance = _pGameInstance;
	Parms._pSaveContext = _pSaveContext;
	Parms._useCase = _useCase;
	Parms._pQuestUseCase = _pQuestUseCase;
	Parms._iSlot = _iSlot;
	Parms._bForceTeleport = _bForceTeleport;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameFlowState_SaveGame.OnSaveSystemActionComplete
// (Final, Native, Protected)
// Parameters:
// class UBFGSaveSystem*                   _pSaveSystem                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGSaveSystem_Action*            _pAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBFGSaveSystem_ActionResult             _result                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameFlowState_SaveGame::OnSaveSystemActionComplete(class UBFGSaveSystem* _pSaveSystem, class UBFGSaveSystem_Action* _pAction, EBFGSaveSystem_ActionResult _result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameFlowState_SaveGame", "OnSaveSystemActionComplete");

	Params::BFGGameFlowState_SaveGame_OnSaveSystemActionComplete Parms{};

	Parms._pSaveSystem = _pSaveSystem;
	Parms._pAction = _pAction;
	Parms._result = _result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWorldLoadedCallbackHandler.OnWorldLoaded
// (Final, Native, Public)
// Parameters:
// class UBFGGameInstance*                 _pGameInstance                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWorld*                           _pWorld                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWorldLoadedCallbackHandler::OnWorldLoaded(class UBFGGameInstance* _pGameInstance, class UWorld* _pWorld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWorldLoadedCallbackHandler", "OnWorldLoaded");

	Params::BFGWorldLoadedCallbackHandler_OnWorldLoaded Parms{};

	Parms._pGameInstance = _pGameInstance;
	Parms._pWorld = _pWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameInstance.ClothTest
// (Final, Exec, Native, Public, BlueprintCallable)

void UBFGGameInstance::ClothTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameInstance", "ClothTest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameInstance.DebugKinectReserve
// (Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bTakeReseve                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameInstance::DebugKinectReserve(bool _bTakeReseve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameInstance", "DebugKinectReserve");

	Params::BFGGameInstance_DebugKinectReserve Parms{};

	Parms._bTakeReseve = _bTakeReseve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameInstance.GameFlowStateManager_LogStack
// (Final, Exec, Native, Public)

void UBFGGameInstance::GameFlowStateManager_LogStack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameInstance", "GameFlowStateManager_LogStack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameInstance.GpuTestMode
// (Exec, Native, Public, BlueprintCallable)

void UBFGGameInstance::GpuTestMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameInstance", "GpuTestMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameInstance.LDStats
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _iMode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameInstance::LDStats(int32 _iMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameInstance", "LDStats");

	Params::BFGGameInstance_LDStats Parms{};

	Parms._iMode = _iMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameInstance.OnActiveUserChanged
// (Final, Native, Protected)

void UBFGGameInstance::OnActiveUserChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameInstance", "OnActiveUserChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameInstance.OnUpdate
// (Final, Native, Protected)

void UBFGGameInstance::OnUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameInstance", "OnUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameInstance.PerfCap
// (Exec, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           _strMission                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameInstance::PerfCap(const class FString& _strMission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameInstance", "PerfCap");

	Params::BFGGameInstance_PerfCap Parms{};

	Parms._strMission = std::move(_strMission);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameInstance.SaveGame_LogActor
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           _strPartialName                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bCaseSensitive                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameInstance::SaveGame_LogActor(const class FString& _strPartialName, bool _bCaseSensitive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameInstance", "SaveGame_LogActor");

	Params::BFGGameInstance_SaveGame_LogActor Parms{};

	Parms._strPartialName = std::move(_strPartialName);
	Parms._bCaseSensitive = _bCaseSensitive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameInstance.SaveGame_LogActorPlayer
// (Final, Exec, Native, Public)

void UBFGGameInstance::SaveGame_LogActorPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameInstance", "SaveGame_LogActorPlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameInstance.SaveGame_LogContentsOfCache
// (Final, Exec, Native, Public)

void UBFGGameInstance::SaveGame_LogContentsOfCache()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameInstance", "SaveGame_LogContentsOfCache");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameInstance.SaveGame_LogCurrentActorData
// (Final, Exec, Native, Public)

void UBFGGameInstance::SaveGame_LogCurrentActorData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameInstance", "SaveGame_LogCurrentActorData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameInstance.SaveGame_LogProfileUnlockedTags
// (Final, Exec, Native, Public)

void UBFGGameInstance::SaveGame_LogProfileUnlockedTags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameInstance", "SaveGame_LogProfileUnlockedTags");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameInstance.Superman
// (Final, Exec, Native, Public, BlueprintCallable)

void UBFGGameInstance::Superman()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameInstance", "Superman");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameInstance.TransitionManager_LogStatus
// (Final, Exec, Native, Public)

void UBFGGameInstance::TransitionManager_LogStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameInstance", "TransitionManager_LogStatus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameInstance.UpdateDLCList
// (Final, Native, Public, BlueprintCallable)

void UBFGGameInstance::UpdateDLCList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameInstance", "UpdateDLCList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameInstance.GetChunkManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGChunkManager*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGChunkManager* UBFGGameInstance::GetChunkManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameInstance", "GetChunkManager");

	Params::BFGGameInstance_GetChunkManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameInstance.GetGameFlowStateManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGGameFlowStateManager*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGGameFlowStateManager* UBFGGameInstance::GetGameFlowStateManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameInstance", "GetGameFlowStateManager");

	Params::BFGGameInstance_GetGameFlowStateManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameInstance.GetGameSession
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGGameSession*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGGameSession* UBFGGameInstance::GetGameSession() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameInstance", "GetGameSession");

	Params::BFGGameInstance_GetGameSession Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameInstance.GetInputDeviceTracker
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGUIInputDeviceTracker*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGUIInputDeviceTracker* UBFGGameInstance::GetInputDeviceTracker() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameInstance", "GetInputDeviceTracker");

	Params::BFGGameInstance_GetInputDeviceTracker Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameInstance.GetInterLevelSoundManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGInterLevelSoundManager*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGInterLevelSoundManager* UBFGGameInstance::GetInterLevelSoundManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameInstance", "GetInterLevelSoundManager");

	Params::BFGGameInstance_GetInterLevelSoundManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameInstance.GetMenuFactory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGMenuFactory*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGMenuFactory* UBFGGameInstance::GetMenuFactory() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameInstance", "GetMenuFactory");

	Params::BFGGameInstance_GetMenuFactory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameInstance.GetMenuLifetimeManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGMenuLifetimeManager*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGMenuLifetimeManager* UBFGGameInstance::GetMenuLifetimeManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameInstance", "GetMenuLifetimeManager");

	Params::BFGGameInstance_GetMenuLifetimeManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameInstance.GetPauseManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGPauseManager*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGPauseManager* UBFGGameInstance::GetPauseManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameInstance", "GetPauseManager");

	Params::BFGGameInstance_GetPauseManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameInstance.GetSaveSystem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGSaveSystem*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGSaveSystem* UBFGGameInstance::GetSaveSystem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameInstance", "GetSaveSystem");

	Params::BFGGameInstance_GetSaveSystem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameInstance.GetSubtitleVisibilityManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGSubtitleVisibilityManager*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGSubtitleVisibilityManager* UBFGGameInstance::GetSubtitleVisibilityManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameInstance", "GetSubtitleVisibilityManager");

	Params::BFGGameInstance_GetSubtitleVisibilityManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameInstance.GetTransitionManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGTransitionManager*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGTransitionManager* UBFGGameInstance::GetTransitionManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameInstance", "GetTransitionManager");

	Params::BFGGameInstance_GetTransitionManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameInstance.GetUserSignInManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGUserSignInManager*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGUserSignInManager* UBFGGameInstance::GetUserSignInManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameInstance", "GetUserSignInManager");

	Params::BFGGameInstance_GetUserSignInManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameInstance.HasDLC
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBFGDLCItem                             _eDLC                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGGameInstance::HasDLC(EBFGDLCItem _eDLC) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameInstance", "HasDLC");

	Params::BFGGameInstance_HasDLC Parms{};

	Parms._eDLC = _eDLC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_Archive_InvasionReport.GetVerticalBoxfromLayout
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UVerticalBox*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UVerticalBox* UBFGWidget_Archive_InvasionReport::GetVerticalBoxfromLayout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive_InvasionReport", "GetVerticalBoxfromLayout");

	Params::BFGWidget_Archive_InvasionReport_GetVerticalBoxfromLayout Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_Archive_InvasionReport.Scroll
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   _fAmount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Archive_InvasionReport::Scroll(float _fAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive_InvasionReport", "Scroll");

	Params::BFGWidget_Archive_InvasionReport_Scroll Parms{};

	Parms._fAmount = _fAmount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGGameMode.IsResetingActors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGGameMode::IsResetingActors() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameMode", "IsResetingActors");

	Params::BFGGameMode_IsResetingActors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameplayEndEffects.FinishedLevelSequence
// (Final, Native, Protected)
// Parameters:
// class ALevelSequenceActor*              _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bWasCutscene                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameplayEndEffects::FinishedLevelSequence(class ALevelSequenceActor* _pActor, bool _bWasCutscene)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameplayEndEffects", "FinishedLevelSequence");

	Params::BFGGameplayEndEffects_FinishedLevelSequence Parms{};

	Parms._pActor = _pActor;
	Parms._bWasCutscene = _bWasCutscene;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGDataSubscriber.OnDataChanged
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             _tag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TScriptInterface<class IBFGDataProvider>PDataProvider                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)

void IBFGDataSubscriber::OnDataChanged(class FName _tag, const TScriptInterface<class IBFGDataProvider>& PDataProvider)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDataSubscriber", "OnDataChanged");

	Params::BFGDataSubscriber_OnDataChanged Parms{};

	Parms._tag = _tag;
	Parms.PDataProvider = PDataProvider;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameplayTagUtils.AddActorGameplayTags
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bPersist                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bSpawn                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bDestroy                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bMinimal                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGGameplayTagUtils::AddActorGameplayTags(class AActor* _pActor, bool _bPersist, bool _bSpawn, bool _bDestroy, bool _bMinimal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGGameplayTagUtils", "AddActorGameplayTags");

	Params::BFGGameplayTagUtils_AddActorGameplayTags Parms{};

	Parms._pActor = _pActor;
	Parms._bPersist = _bPersist;
	Parms._bSpawn = _bSpawn;
	Parms._bDestroy = _bDestroy;
	Parms._bMinimal = _bMinimal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameplayTagUtils.AppendGameplayEffectTagsTo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _pObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            _tags                                                  (Parm, NativeAccessSpecifierPublic)

void UBFGGameplayTagUtils::AppendGameplayEffectTagsTo(class AActor* _pObject, const struct FGameplayTagContainer& _tags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGGameplayTagUtils", "AppendGameplayEffectTagsTo");

	Params::BFGGameplayTagUtils_AppendGameplayEffectTagsTo Parms{};

	Parms._pObject = _pObject;
	Parms._tags = std::move(_tags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameplayTagUtils.AppendGameplayTagsTo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            _tags                                                  (Parm, NativeAccessSpecifierPublic)

void UBFGGameplayTagUtils::AppendGameplayTagsTo(class UObject* _pObject, const struct FGameplayTagContainer& _tags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGGameplayTagUtils", "AppendGameplayTagsTo");

	Params::BFGGameplayTagUtils_AppendGameplayTagsTo Parms{};

	Parms._pObject = _pObject;
	Parms._tags = std::move(_tags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameplayTagUtils.AppendGameplayTagTo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     _tag                                                   (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameplayTagUtils::AppendGameplayTagTo(class UObject* _pObject, const struct FGameplayTag& _tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGGameplayTagUtils", "AppendGameplayTagTo");

	Params::BFGGameplayTagUtils_AppendGameplayTagTo Parms{};

	Parms._pObject = _pObject;
	Parms._tag = std::move(_tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameplayTagUtils.CreateMatchAllTagsQuery
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            _tags                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTagQuery                ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagQuery UBFGGameplayTagUtils::CreateMatchAllTagsQuery(const struct FGameplayTagContainer& _tags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGGameplayTagUtils", "CreateMatchAllTagsQuery");

	Params::BFGGameplayTagUtils_CreateMatchAllTagsQuery Parms{};

	Parms._tags = std::move(_tags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameplayTagUtils.DoesActorHaveMatchingTag
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     _tag                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGGameplayTagUtils::DoesActorHaveMatchingTag(class AActor* _pActor, const struct FGameplayTag& _tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGGameplayTagUtils", "DoesActorHaveMatchingTag");

	Params::BFGGameplayTagUtils_DoesActorHaveMatchingTag Parms{};

	Parms._pActor = _pActor;
	Parms._tag = std::move(_tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameplayTagUtils.DoesActorMatchQuery
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagQuery                _query                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGGameplayTagUtils::DoesActorMatchQuery(class AActor* _pActor, const struct FGameplayTagQuery& _query)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGGameplayTagUtils", "DoesActorMatchQuery");

	Params::BFGGameplayTagUtils_DoesActorMatchQuery Parms{};

	Parms._pActor = _pActor;
	Parms._query = std::move(_query);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameplayTagUtils.DoesObjectHaveMatchingTag
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _pObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     _tag                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGGameplayTagUtils::DoesObjectHaveMatchingTag(class UObject* _pObject, const struct FGameplayTag& _tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGGameplayTagUtils", "DoesObjectHaveMatchingTag");

	Params::BFGGameplayTagUtils_DoesObjectHaveMatchingTag Parms{};

	Parms._pObject = _pObject;
	Parms._tag = std::move(_tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameplayTagUtils.DoesObjectHaveMatchingTags
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _pObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            _tags                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGGameplayTagUtils::DoesObjectHaveMatchingTags(class UObject* _pObject, const struct FGameplayTagContainer& _tags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGGameplayTagUtils", "DoesObjectHaveMatchingTags");

	Params::BFGGameplayTagUtils_DoesObjectHaveMatchingTags Parms{};

	Parms._pObject = _pObject;
	Parms._tags = std::move(_tags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameplayTagUtils.DoesObjectMatchQuery
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _pObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagQuery                _query                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGGameplayTagUtils::DoesObjectMatchQuery(class UObject* _pObject, const struct FGameplayTagQuery& _query)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGGameplayTagUtils", "DoesObjectMatchQuery");

	Params::BFGGameplayTagUtils_DoesObjectMatchQuery Parms{};

	Parms._pObject = _pObject;
	Parms._query = std::move(_query);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameplayTagUtils.DoesTagsMatchQuery
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGameplayTagContainer            _tags                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTagQuery                _query                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGGameplayTagUtils::DoesTagsMatchQuery(const struct FGameplayTagContainer& _tags, const struct FGameplayTagQuery& _query)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGGameplayTagUtils", "DoesTagsMatchQuery");

	Params::BFGGameplayTagUtils_DoesTagsMatchQuery Parms{};

	Parms._tags = std::move(_tags);
	Parms._query = std::move(_query);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameplayTagUtils.GetGameplayEffectTagsFrom
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _pObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagContainer UBFGGameplayTagUtils::GetGameplayEffectTagsFrom(const class UObject* _pObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGGameplayTagUtils", "GetGameplayEffectTagsFrom");

	Params::BFGGameplayTagUtils_GetGameplayEffectTagsFrom Parms{};

	Parms._pObject = _pObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameplayTagUtils.GetGameplayTagsFrom
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _pObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagContainer UBFGGameplayTagUtils::GetGameplayTagsFrom(const class UObject* _pObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGGameplayTagUtils", "GetGameplayTagsFrom");

	Params::BFGGameplayTagUtils_GetGameplayTagsFrom Parms{};

	Parms._pObject = _pObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameplayTagUtils.InverseGameplayTagQuery
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagQuery                _query                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTagQuery                ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagQuery UBFGGameplayTagUtils::InverseGameplayTagQuery(const struct FGameplayTagQuery& _query)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGGameplayTagUtils", "InverseGameplayTagQuery");

	Params::BFGGameplayTagUtils_InverseGameplayTagQuery Parms{};

	Parms._query = std::move(_query);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameplayTagUtils.IsGameplayTagQueryEmpty
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGameplayTagQuery                _query                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGGameplayTagUtils::IsGameplayTagQueryEmpty(const struct FGameplayTagQuery& _query)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGGameplayTagUtils", "IsGameplayTagQueryEmpty");

	Params::BFGGameplayTagUtils_IsGameplayTagQueryEmpty Parms{};

	Parms._query = std::move(_query);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameSession.OnWorldLoaded
// (Final, Native, Protected)
// Parameters:
// class UBFGGameInstance*                 _pGameInstance                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWorld*                           _pWorld                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameSession::OnWorldLoaded(class UBFGGameInstance* _pGameInstance, class UWorld* _pWorld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameSession", "OnWorldLoaded");

	Params::BFGGameSession_OnWorldLoaded Parms{};

	Parms._pGameInstance = _pGameInstance;
	Parms._pWorld = _pWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameSession.SetShowMM01BackStoryInMothersthip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bShouldShow                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameSession::SetShowMM01BackStoryInMothersthip(bool _bShouldShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameSession", "SetShowMM01BackStoryInMothersthip");

	Params::BFGGameSession_SetShowMM01BackStoryInMothersthip Parms{};

	Parms._bShouldShow = _bShouldShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameSession.SetShowOutroInMothersthip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bShouldShow                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameSession::SetShowOutroInMothersthip(bool _bShouldShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameSession", "SetShowOutroInMothersthip");

	Params::BFGGameSession_SetShowOutroInMothersthip Parms{};

	Parms._bShouldShow = _bShouldShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameSession.SetTransferToPoxLab
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bTransfer                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGGameSession::SetTransferToPoxLab(bool _bTransfer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameSession", "SetTransferToPoxLab");

	Params::BFGGameSession_SetTransferToPoxLab Parms{};

	Parms._bTransfer = _bTransfer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGGameSession.ShouldShowMM01BackStoryInMothersthip
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGGameSession::ShouldShowMM01BackStoryInMothersthip() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameSession", "ShouldShowMM01BackStoryInMothersthip");

	Params::BFGGameSession_ShouldShowMM01BackStoryInMothersthip Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameSession.ShouldShowOutroInMothersthip
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGGameSession::ShouldShowOutroInMothersthip() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameSession", "ShouldShowOutroInMothersthip");

	Params::BFGGameSession_ShouldShowOutroInMothersthip Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameSession.ShouldTransferToPoxLab
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGGameSession::ShouldTransferToPoxLab() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGGameSession", "ShouldTransferToPoxLab");

	Params::BFGGameSession_ShouldTransferToPoxLab Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGameSettings.GetSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBFGGameSettings*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGGameSettings* UBFGGameSettings::GetSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGGameSettings", "GetSettings");

	Params::BFGGameSettings_GetSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGeometryUtils.FindDistanceAlongSplineClosestToLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class USplineComponent*                 Spline                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGGeometryUtils::FindDistanceAlongSplineClosestToLocation(const class USplineComponent* Spline, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGGeometryUtils", "FindDistanceAlongSplineClosestToLocation");

	Params::BFGGeometryUtils_FindDistanceAlongSplineClosestToLocation Parms{};

	Parms.Spline = Spline;
	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGeometryUtils.IsInsidePolygon
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// TArray<struct FSplinePoint>             _aPolygonPoints                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FVector                          _vPoint                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fZMin                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fZMax                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGGeometryUtils::IsInsidePolygon(const TArray<struct FSplinePoint>& _aPolygonPoints, const struct FVector& _vPoint, float _fZMin, float _fZMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGGeometryUtils", "IsInsidePolygon");

	Params::BFGGeometryUtils_IsInsidePolygon Parms{};

	Parms._aPolygonPoints = std::move(_aPolygonPoints);
	Parms._vPoint = std::move(_vPoint);
	Parms._fZMin = _fZMin;
	Parms._fZMax = _fZMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGeometryUtils.IsInsidePolygon2D
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// TArray<struct FVector2D>                _aPolygonPoints                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FVector2D                        _vPoint                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGGeometryUtils::IsInsidePolygon2D(const TArray<struct FVector2D>& _aPolygonPoints, const struct FVector2D& _vPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGGeometryUtils", "IsInsidePolygon2D");

	Params::BFGGeometryUtils_IsInsidePolygon2D Parms{};

	Parms._aPolygonPoints = std::move(_aPolygonPoints);
	Parms._vPoint = std::move(_vPoint);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGeometryUtils.Triangulate_SplinePoints
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FSplinePoint>             _aPolygonPoints                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UBFGGeometryUtils::Triangulate_SplinePoints(const TArray<struct FSplinePoint>& _aPolygonPoints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGGeometryUtils", "Triangulate_SplinePoints");

	Params::BFGGeometryUtils_Triangulate_SplinePoints Parms{};

	Parms._aPolygonPoints = std::move(_aPolygonPoints);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGeometryUtils.Triangulate_Vector2D
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FVector2D>                _aPolygonPoints                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UBFGGeometryUtils::Triangulate_Vector2D(const TArray<struct FVector2D>& _aPolygonPoints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGGeometryUtils", "Triangulate_Vector2D");

	Params::BFGGeometryUtils_Triangulate_Vector2D Parms{};

	Parms._aPolygonPoints = std::move(_aPolygonPoints);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGGeometryUtils.Triangulate_Vector3D
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FVector>                  _aPolygonPoints                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UBFGGeometryUtils::Triangulate_Vector3D(const TArray<struct FVector>& _aPolygonPoints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGGeometryUtils", "Triangulate_Vector3D");

	Params::BFGGeometryUtils_Triangulate_Vector3D Parms{};

	Parms._aPolygonPoints = std::move(_aPolygonPoints);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeaponHolderInterface.CanUseWeapon
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABFGWeapon*                       _pWeapon                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IBFGWeaponHolderInterface::CanUseWeapon(class ABFGWeapon* _pWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeaponHolderInterface", "CanUseWeapon");

	Params::BFGWeaponHolderInterface_CanUseWeapon Parms{};

	Parms._pWeapon = _pWeapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_AR_ChallengePanel.OnDataChanged
// (Event, Public, BlueprintEvent)

void UBFGWidget_AR_ChallengePanel::OnDataChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_AR_ChallengePanel", "OnDataChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_AR_ChallengePanel.OnPanelVisibilityChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// EBFGChallengeStartingPoint_Visibility   _eVisibility                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_AR_ChallengePanel::OnPanelVisibilityChanged(EBFGChallengeStartingPoint_Visibility _eVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_AR_ChallengePanel", "OnPanelVisibilityChanged");

	Params::BFGWidget_AR_ChallengePanel_OnPanelVisibilityChanged Parms{};

	Parms._eVisibility = _eVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Archive.OnShowOverlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _bDown                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Archive::OnShowOverlay(bool _bDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive", "OnShowOverlay");

	Params::BFGWidget_Archive_OnShowOverlay Parms{};

	Parms._bDown = _bDown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Archive.OnUpdateItemDescription
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FBFGItemDescription              _aItemDescription                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_Archive::OnUpdateItemDescription(const struct FBFGItemDescription& _aItemDescription)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive", "OnUpdateItemDescription");

	Params::BFGWidget_Archive_OnUpdateItemDescription Parms{};

	Parms._aItemDescription = std::move(_aItemDescription);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_KeyAssignmentWarning.AddInvalidActionText
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _strInvalidActionText                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_KeyAssignmentWarning::AddInvalidActionText(const class FText& _strInvalidActionText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_KeyAssignmentWarning", "AddInvalidActionText");

	Params::BFGWidget_KeyAssignmentWarning_AddInvalidActionText Parms{};

	Parms._strInvalidActionText = std::move(_strInvalidActionText);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BFGCore.BFGWidget_MediaWidget.Action__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UBFGWidget_MediaWidget::Action__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MediaWidget", "Action__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_MediaWidget.OnButtonBackClicked
// (Final, Native, Protected, BlueprintCallable)

void UBFGWidget_MediaWidget::OnButtonBackClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MediaWidget", "OnButtonBackClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_MediaWidget.OnVideoFinishedPlaying
// (Final, Native, Protected, BlueprintCallable)

void UBFGWidget_MediaWidget::OnVideoFinishedPlaying()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MediaWidget", "OnVideoFinishedPlaying");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_MediaWidget.ShowMediaInternal
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FSlateBrush                      _oMedia                                                (Parm, NativeAccessSpecifierPublic)

void UBFGWidget_MediaWidget::ShowMediaInternal(const struct FSlateBrush& _oMedia)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MediaWidget", "ShowMediaInternal");

	Params::BFGWidget_MediaWidget_ShowMediaInternal Parms{};

	Parms._oMedia = std::move(_oMedia);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_MediaWidget.StopMediaInternal
// (Event, Protected, BlueprintEvent)

void UBFGWidget_MediaWidget::StopMediaInternal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MediaWidget", "StopMediaInternal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_Mothership_Archive.GetSubMenu
// (Event, Public, BlueprintEvent)
// Parameters:
// class UBFGWidget_Archive*               ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGWidget_Archive* UBFGWidget_Mothership_Archive::GetSubMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_Archive", "GetSubMenu");

	Params::BFGWidget_Mothership_Archive_GetSubMenu Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_Mothership_Archive.OnAcceptButtonClicked
// (Final, Native, Protected)

void UBFGWidget_Mothership_Archive::OnAcceptButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_Archive", "OnAcceptButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_Mothership_Archive.OnTreeLayerChanged
// (Final, Native, Protected)

void UBFGWidget_Mothership_Archive::OnTreeLayerChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_Archive", "OnTreeLayerChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BFGCore.BFGWidgetPoxLabEntryPointOption.ActionPoxUpgradeType__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EBFGMotherShipPoxLabType                _eType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidgetPoxLabEntryPointOption::ActionPoxUpgradeType__DelegateSignature(EBFGMotherShipPoxLabType _eType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidgetPoxLabEntryPointOption", "ActionPoxUpgradeType__DelegateSignature");

	Params::BFGWidgetPoxLabEntryPointOption_ActionPoxUpgradeType__DelegateSignature Parms{};

	Parms._eType = _eType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidgetPoxLabEntryPointOption.OnMouseHover
// (Final, Native, Public, BlueprintCallable)

void UBFGWidgetPoxLabEntryPointOption::OnMouseHover()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidgetPoxLabEntryPointOption", "OnMouseHover");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidgetPoxLabEntryPointOption.OnMousePress
// (Final, Native, Public, BlueprintCallable)

void UBFGWidgetPoxLabEntryPointOption::OnMousePress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidgetPoxLabEntryPointOption", "OnMousePress");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidgetPoxLabEntryPointOption.OnUpgradeAvailable
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidgetPoxLabEntryPointOption::OnUpgradeAvailable(bool _bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidgetPoxLabEntryPointOption", "OnUpgradeAvailable");

	Params::BFGWidgetPoxLabEntryPointOption_OnUpgradeAvailable Parms{};

	Parms._bValue = _bValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidgetPoxLabEntryPointOption.UpdateSelectionState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bSelected                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidgetPoxLabEntryPointOption::UpdateSelectionState(bool _bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidgetPoxLabEntryPointOption", "UpdateSelectionState");

	Params::BFGWidgetPoxLabEntryPointOption_UpdateSelectionState Parms{};

	Parms._bSelected = _bSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BFGCore.BFGWidget_Credits.Action_OnCreditsEnd__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UBFGWidget_Credits::Action_OnCreditsEnd__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Credits", "Action_OnCreditsEnd__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_Credits.CreateTextPanel
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UBFGWidget_CreditsTextPanel*      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGWidget_CreditsTextPanel* UBFGWidget_Credits::CreateTextPanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Credits", "CreateTextPanel");

	Params::BFGWidget_Credits_CreateTextPanel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_Credits.EndCredits
// (Final, Native, Protected, BlueprintCallable)

void UBFGWidget_Credits::EndCredits()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Credits", "EndCredits");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_Credits.HandleTextPanelDone
// (Final, Native, Protected)
// Parameters:
// class UBFGWidget_CreditsTextPanel*      _pPanel                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Credits::HandleTextPanelDone(class UBFGWidget_CreditsTextPanel* _pPanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Credits", "HandleTextPanelDone");

	Params::BFGWidget_Credits_HandleTextPanelDone Parms{};

	Parms._pPanel = _pPanel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_Credits.OnLastTextSpawned
// (Event, Protected, BlueprintEvent)

void UBFGWidget_Credits::OnLastTextSpawned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Credits", "OnLastTextSpawned");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_DialogOption_NavBarEntry.OnCultureChanged
// (Event, Public, BlueprintEvent)

void UBFGWidget_DialogOption_NavBarEntry::OnCultureChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption_NavBarEntry", "OnCultureChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_DialogOption_NavBarEntry.SetEntryActive
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bActive                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_DialogOption_NavBarEntry::SetEntryActive(bool _bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption_NavBarEntry", "SetEntryActive");

	Params::BFGWidget_DialogOption_NavBarEntry_SetEntryActive Parms{};

	Parms._bActive = _bActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_FuronHandbook.AddContentToLayout
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UBFGWidget_Archive_FuronHandbook* _pContent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_FuronHandbook::AddContentToLayout(class UBFGWidget_Archive_FuronHandbook* _pContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_FuronHandbook", "AddContentToLayout");

	Params::BFGWidget_FuronHandbook_AddContentToLayout Parms{};

	Parms._pContent = _pContent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_FuronHandbook.NextPage
// (Final, Native, Public)

void UBFGWidget_FuronHandbook::NextPage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_FuronHandbook", "NextPage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_FuronHandbook.OnClickedBack
// (Final, Native, Protected, BlueprintCallable)

void UBFGWidget_FuronHandbook::OnClickedBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_FuronHandbook", "OnClickedBack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_FuronHandbook.OnTreeLayerChanged
// (Final, Native, Protected)

void UBFGWidget_FuronHandbook::OnTreeLayerChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_FuronHandbook", "OnTreeLayerChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_FuronHandbook.UpdatePath
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FString                           _strPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_FuronHandbook::UpdatePath(const class FString& _strPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_FuronHandbook", "UpdatePath");

	Params::BFGWidget_FuronHandbook_UpdatePath Parms{};

	Parms._strPath = std::move(_strPath);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_GamepadPanel.SwitchToPanel
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GamepadPanel::SwitchToPanel(int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GamepadPanel", "SwitchToPanel");

	Params::BFGWidget_GamepadPanel_SwitchToPanel Parms{};

	Parms._iIndex = _iIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWeapon_IonDetonator.OnEquipementManagerWeaponRequestFireChanged
// (Final, Native, Protected)
// Parameters:
// class ABFGWeapon*                       _pWeapon                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGWeapon_IonDetonator::OnEquipementManagerWeaponRequestFireChanged(class ABFGWeapon* _pWeapon, bool _bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon_IonDetonator", "OnEquipementManagerWeaponRequestFireChanged");

	Params::BFGWeapon_IonDetonator_OnEquipementManagerWeaponRequestFireChanged Parms{};

	Parms._pWeapon = _pWeapon;
	Parms._bValue = _bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWeapon_IonDetonator.IsProjectileActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGWeapon_IonDetonator::IsProjectileActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon_IonDetonator", "IsProjectileActive");

	Params::BFGWeapon_IonDetonator_IsProjectileActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGInputPack.GetDefaultCameraSpeedCoefCurve
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCurveFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCurveFloat* UBFGInputPack::GetDefaultCameraSpeedCoefCurve() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputPack", "GetDefaultCameraSpeedCoefCurve");

	Params::BFGInputPack_GetDefaultCameraSpeedCoefCurve Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGInputPack.GetInputScheme
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EInputSchemeIdentifier                  _eIdenfier                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGInputScheme*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGInputScheme* UBFGInputPack::GetInputScheme(EInputSchemeIdentifier _eIdenfier) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputPack", "GetInputScheme");

	Params::BFGInputPack_GetInputScheme Parms{};

	Parms._eIdenfier = _eIdenfier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGInputPack.GetInputSchemeIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGInputPack::GetInputSchemeIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputPack", "GetInputSchemeIndex");

	Params::BFGInputPack_GetInputSchemeIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGInputPack.GetName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UBFGInputPack::GetName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputPack", "GetName");

	Params::BFGInputPack_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGInputPack.GetScreenApproximationOffset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGInputPack::GetScreenApproximationOffset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputPack", "GetScreenApproximationOffset");

	Params::BFGInputPack_GetScreenApproximationOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGInputPack.GetUseAimAssist
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGInputPack::GetUseAimAssist() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputPack", "GetUseAimAssist");

	Params::BFGInputPack_GetUseAimAssist Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGInputPack.GetUseExplorationCamera
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGInputPack::GetUseExplorationCamera() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputPack", "GetUseExplorationCamera");

	Params::BFGInputPack_GetUseExplorationCamera Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGInputRebindingSystem.OnSaveActionDone
// (Final, Native, Public)
// Parameters:
// class UBFGSaveSystem*                   _pSaveSystem                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGSaveSystem_Action*            _pAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBFGSaveSystem_ActionResult             _result                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGInputRebindingSystem::OnSaveActionDone(class UBFGSaveSystem* _pSaveSystem, class UBFGSaveSystem_Action* _pAction, EBFGSaveSystem_ActionResult _result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputRebindingSystem", "OnSaveActionDone");

	Params::BFGInputRebindingSystem_OnSaveActionDone Parms{};

	Parms._pSaveSystem = _pSaveSystem;
	Parms._pAction = _pAction;
	Parms._result = _result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGInputSettings.GetSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBFGInputSettings*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGInputSettings* UBFGInputSettings::GetSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGInputSettings", "GetSettings");

	Params::BFGInputSettings_GetSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_HUD_WeaponStats.AddQuickSlotToLayout
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UBFGWeaponSlot*                   _pSlot                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_WeaponStats::AddQuickSlotToLayout(class UBFGWeaponSlot* _pSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_WeaponStats", "AddQuickSlotToLayout");

	Params::BFGWidget_HUD_WeaponStats_AddQuickSlotToLayout Parms{};

	Parms._pSlot = _pSlot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_HUD_WeaponStats.GetActiveWeaponClass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class ABFGWeapon>           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class ABFGWeapon> UBFGWidget_HUD_WeaponStats::GetActiveWeaponClass()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_WeaponStats", "GetActiveWeaponClass");

	Params::BFGWidget_HUD_WeaponStats_GetActiveWeaponClass Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_HUD_WeaponStats.OnAllWeaponsEnabled
// (Final, Native, Protected)
// Parameters:
// class UBFGActorComponent_EquipmentManager*_pEquipmentManager                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_WeaponStats::OnAllWeaponsEnabled(class UBFGActorComponent_EquipmentManager* _pEquipmentManager, bool _bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_WeaponStats", "OnAllWeaponsEnabled");

	Params::BFGWidget_HUD_WeaponStats_OnAllWeaponsEnabled Parms{};

	Parms._pEquipmentManager = _pEquipmentManager;
	Parms._bEnabled = _bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_HUD_WeaponStats.OnInputDeviceSwitched
// (Final, Native, Public)
// Parameters:
// bool                                    _bIsGamepad                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_WeaponStats::OnInputDeviceSwitched(bool _bIsGamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_WeaponStats", "OnInputDeviceSwitched");

	Params::BFGWidget_HUD_WeaponStats_OnInputDeviceSwitched Parms{};

	Parms._bIsGamepad = _bIsGamepad;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_HUD_WeaponStats.OnSwitchedToGroundMode
// (Final, Native, Public)
// Parameters:
// class APawn*                            _pPawn                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_WeaponStats::OnSwitchedToGroundMode(class APawn* _pPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_WeaponStats", "OnSwitchedToGroundMode");

	Params::BFGWidget_HUD_WeaponStats_OnSwitchedToGroundMode Parms{};

	Parms._pPawn = _pPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_HUD_WeaponStats.OnSwitchedToUFOMode
// (Final, Native, Public)
// Parameters:
// class APawn*                            _pPawn                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_WeaponStats::OnSwitchedToUFOMode(class APawn* _pPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_WeaponStats", "OnSwitchedToUFOMode");

	Params::BFGWidget_HUD_WeaponStats_OnSwitchedToUFOMode Parms{};

	Parms._pPawn = _pPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_HUD_WeaponStats.OnWeaponAmmoChanged
// (Final, Native, Protected)
// Parameters:
// class ABFGWeapon*                       _pWeapon                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_WeaponStats::OnWeaponAmmoChanged(class ABFGWeapon* _pWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_WeaponStats", "OnWeaponAmmoChanged");

	Params::BFGWidget_HUD_WeaponStats_OnWeaponAmmoChanged Parms{};

	Parms._pWeapon = _pWeapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_HUD_WeaponStats.SetActiveSlot
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UBFGWeaponSlot*                   _pSlot                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_WeaponStats::SetActiveSlot(class UBFGWeaponSlot* _pSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_WeaponStats", "SetActiveSlot");

	Params::BFGWidget_HUD_WeaponStats_SetActiveSlot Parms{};

	Parms._pSlot = _pSlot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGLabeledImage.SetBrush
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FSlateBrush                      _pBrush                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGLabeledImage::SetBrush(const struct FSlateBrush& _pBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGLabeledImage", "SetBrush");

	Params::BFGLabeledImage_SetBrush Parms{};

	Parms._pBrush = std::move(_pBrush);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGLabeledImage.SetBrushSize
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   _fWidth                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fHeight                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGLabeledImage::SetBrushSize(float _fWidth, float _fHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGLabeledImage", "SetBrushSize");

	Params::BFGLabeledImage_SetBrushSize Parms{};

	Parms._fWidth = _fWidth;
	Parms._fHeight = _fHeight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGLabeledImage.SetText
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _pText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGLabeledImage::SetText(const class FText& _pText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGLabeledImage", "SetText");

	Params::BFGLabeledImage_SetText Parms{};

	Parms._pText = std::move(_pText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGLevelCheckpoint.GetCharacterSpawn
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          _vLocationOut                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         _rotationOut                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void ABFGLevelCheckpoint::GetCharacterSpawn(struct FVector* _vLocationOut, struct FRotator* _rotationOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGLevelCheckpoint", "GetCharacterSpawn");

	Params::BFGLevelCheckpoint_GetCharacterSpawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_vLocationOut != nullptr)
		*_vLocationOut = std::move(Parms._vLocationOut);

	if (_rotationOut != nullptr)
		*_rotationOut = std::move(Parms._rotationOut);
}


// Function BFGCore.BFGLevelCheckpoint.GetUFOSpawn
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          _vLocationOut                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         _rotationOut                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void ABFGLevelCheckpoint::GetUFOSpawn(struct FVector* _vLocationOut, struct FRotator* _rotationOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGLevelCheckpoint", "GetUFOSpawn");

	Params::BFGLevelCheckpoint_GetUFOSpawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_vLocationOut != nullptr)
		*_vLocationOut = std::move(Parms._vLocationOut);

	if (_rotationOut != nullptr)
		*_rotationOut = std::move(Parms._rotationOut);
}


// Function BFGCore.BFGLevelCheckpoint.IsRespawnAsCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGLevelCheckpoint::IsRespawnAsCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGLevelCheckpoint", "IsRespawnAsCharacter");

	Params::BFGLevelCheckpoint_IsRespawnAsCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGLevelCheckpoint.IsRespawnAsUFO
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGLevelCheckpoint::IsRespawnAsUFO() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGLevelCheckpoint", "IsRespawnAsUFO");

	Params::BFGLevelCheckpoint_IsRespawnAsUFO Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMathUtils.ArcTanDegreesFast
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   _fValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGMathUtils::ArcTanDegreesFast(float _fValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGMathUtils", "ArcTanDegreesFast");

	Params::BFGMathUtils_ArcTanDegreesFast Parms{};

	Parms._fValue = _fValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMathUtils.ArcTanRadiansFast
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   _fValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGMathUtils::ArcTanRadiansFast(float _fValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGMathUtils", "ArcTanRadiansFast");

	Params::BFGMathUtils_ArcTanRadiansFast Parms{};

	Parms._fValue = _fValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMathUtils.AreBoxesOverlapping
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          _vBoxA_Origin                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vBoxA_Extent                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vBoxB_Origin                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vBoxB_Extent                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGMathUtils::AreBoxesOverlapping(const struct FVector& _vBoxA_Origin, const struct FVector& _vBoxA_Extent, const struct FVector& _vBoxB_Origin, const struct FVector& _vBoxB_Extent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGMathUtils", "AreBoxesOverlapping");

	Params::BFGMathUtils_AreBoxesOverlapping Parms{};

	Parms._vBoxA_Origin = std::move(_vBoxA_Origin);
	Parms._vBoxA_Extent = std::move(_vBoxA_Extent);
	Parms._vBoxB_Origin = std::move(_vBoxB_Origin);
	Parms._vBoxB_Extent = std::move(_vBoxB_Extent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMathUtils.GetRandomVectorInRange
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          _vRangeMin                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vRangeMax                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UBFGMathUtils::GetRandomVectorInRange(const struct FVector& _vRangeMin, const struct FVector& _vRangeMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGMathUtils", "GetRandomVectorInRange");

	Params::BFGMathUtils_GetRandomVectorInRange Parms{};

	Parms._vRangeMin = std::move(_vRangeMin);
	Parms._vRangeMax = std::move(_vRangeMax);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMatrixMath.BuildProjectionMatrix
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FIntPoint                        RenderTargetSize                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECameraProjectionMode                   ProjectionType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FOV                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOrthoWidth                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatrix                          ProjectionMatrix                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UBFGMatrixMath::BuildProjectionMatrix(const struct FIntPoint& RenderTargetSize, ECameraProjectionMode ProjectionType, float FOV, float InOrthoWidth, struct FMatrix* ProjectionMatrix)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGMatrixMath", "BuildProjectionMatrix");

	Params::BFGMatrixMath_BuildProjectionMatrix Parms{};

	Parms.RenderTargetSize = std::move(RenderTargetSize);
	Parms.ProjectionType = ProjectionType;
	Parms.FOV = FOV;
	Parms.InOrthoWidth = InOrthoWidth;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ProjectionMatrix != nullptr)
		*ProjectionMatrix = std::move(Parms.ProjectionMatrix);
}


// Function BFGCore.BFGMatrixMath.GetInverseViewProjMatrix
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FMatrix                          _matView                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FMatrix                          _matProj                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FMatrix                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FMatrix UBFGMatrixMath::GetInverseViewProjMatrix(const struct FMatrix& _matView, const struct FMatrix& _matProj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGMatrixMath", "GetInverseViewProjMatrix");

	Params::BFGMatrixMath_GetInverseViewProjMatrix Parms{};

	Parms._matView = std::move(_matView);
	Parms._matProj = std::move(_matProj);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMatrixMath.GetMatrixAsLinearColor
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     _row1                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     _row2                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     _row3                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     _row4                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatrix                          _m                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    _bTransposeOutput                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGMatrixMath::GetMatrixAsLinearColor(struct FLinearColor* _row1, struct FLinearColor* _row2, struct FLinearColor* _row3, struct FLinearColor* _row4, const struct FMatrix& _m, bool _bTransposeOutput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGMatrixMath", "GetMatrixAsLinearColor");

	Params::BFGMatrixMath_GetMatrixAsLinearColor Parms{};

	Parms._m = std::move(_m);
	Parms._bTransposeOutput = _bTransposeOutput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_row1 != nullptr)
		*_row1 = std::move(Parms._row1);

	if (_row2 != nullptr)
		*_row2 = std::move(Parms._row2);

	if (_row3 != nullptr)
		*_row3 = std::move(Parms._row3);

	if (_row4 != nullptr)
		*_row4 = std::move(Parms._row4);
}


// Function BFGCore.BFGMatrixMath.GetMatrixFromColor
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     _row1                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     _row2                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     _row3                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     _row4                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bTransposeInput                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatrix                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FMatrix UBFGMatrixMath::GetMatrixFromColor(const struct FLinearColor& _row1, const struct FLinearColor& _row2, const struct FLinearColor& _row3, const struct FLinearColor& _row4, bool _bTransposeInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGMatrixMath", "GetMatrixFromColor");

	Params::BFGMatrixMath_GetMatrixFromColor Parms{};

	Parms._row1 = std::move(_row1);
	Parms._row2 = std::move(_row2);
	Parms._row3 = std::move(_row3);
	Parms._row4 = std::move(_row4);
	Parms._bTransposeInput = _bTransposeInput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMatrixMath.GetMatrixFromTransform
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform                       _Transform                                             (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    _bWithScale                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatrix                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FMatrix UBFGMatrixMath::GetMatrixFromTransform(const struct FTransform& _Transform, bool _bWithScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGMatrixMath", "GetMatrixFromTransform");

	Params::BFGMatrixMath_GetMatrixFromTransform Parms{};

	Parms._Transform = std::move(_Transform);
	Parms._bWithScale = _bWithScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMatrixMath.GetProjectionMatrix
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class USceneCaptureComponent2D*         _pComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatrix                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FMatrix UBFGMatrixMath::GetProjectionMatrix(class USceneCaptureComponent2D* _pComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGMatrixMath", "GetProjectionMatrix");

	Params::BFGMatrixMath_GetProjectionMatrix Parms{};

	Parms._pComponent = _pComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMatrixMath.GetViewMatrix
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class USceneCaptureComponent2D*         _pComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatrix                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FMatrix UBFGMatrixMath::GetViewMatrix(class USceneCaptureComponent2D* _pComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGMatrixMath", "GetViewMatrix");

	Params::BFGMatrixMath_GetViewMatrix Parms{};

	Parms._pComponent = _pComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMatrixMath.GetViewProjectionMatrix
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class USceneCaptureComponent2D*         _pComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatrix                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FMatrix UBFGMatrixMath::GetViewProjectionMatrix(class USceneCaptureComponent2D* _pComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGMatrixMath", "GetViewProjectionMatrix");

	Params::BFGMatrixMath_GetViewProjectionMatrix Parms{};

	Parms._pComponent = _pComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMatrixMath.InvertMatrix
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FMatrix                          _a                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FMatrix                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FMatrix UBFGMatrixMath::InvertMatrix(const struct FMatrix& _a)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGMatrixMath", "InvertMatrix");

	Params::BFGMatrixMath_InvertMatrix Parms{};

	Parms._a = std::move(_a);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMatrixMath.InvertMatrixFromColor
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     _row1                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     _row2                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     _row3                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     _row4                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bTransposeInput                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatrix                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FMatrix UBFGMatrixMath::InvertMatrixFromColor(const struct FLinearColor& _row1, const struct FLinearColor& _row2, const struct FLinearColor& _row3, const struct FLinearColor& _row4, bool _bTransposeInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGMatrixMath", "InvertMatrixFromColor");

	Params::BFGMatrixMath_InvertMatrixFromColor Parms{};

	Parms._row1 = std::move(_row1);
	Parms._row2 = std::move(_row2);
	Parms._row3 = std::move(_row3);
	Parms._row4 = std::move(_row4);
	Parms._bTransposeInput = _bTransposeInput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMatrixMath.MultiplyMatrices
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FMatrix                          _a                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FMatrix                          _b                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FMatrix                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FMatrix UBFGMatrixMath::MultiplyMatrices(const struct FMatrix& _a, const struct FMatrix& _b)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGMatrixMath", "MultiplyMatrices");

	Params::BFGMatrixMath_MultiplyMatrices Parms{};

	Parms._a = std::move(_a);
	Parms._b = std::move(_b);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMatrixMath.TransformVector
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FMatrix                          _a                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector4                         _b                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector4                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector4 UBFGMatrixMath::TransformVector(const struct FMatrix& _a, const struct FVector4& _b)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGMatrixMath", "TransformVector");

	Params::BFGMatrixMath_TransformVector Parms{};

	Parms._a = std::move(_a);
	Parms._b = std::move(_b);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMatrixMath.TransposeMatrix
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FMatrix                          _a                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FMatrix                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FMatrix UBFGMatrixMath::TransposeMatrix(const struct FMatrix& _a)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGMatrixMath", "TransposeMatrix");

	Params::BFGMatrixMath_TransposeMatrix Parms{};

	Parms._a = std::move(_a);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_NarrativeSequence_Strike.SetFailed
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bFailed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_NarrativeSequence_Strike::SetFailed(bool _bFailed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_NarrativeSequence_Strike", "SetFailed");

	Params::BFGWidget_NarrativeSequence_Strike_SetFailed Parms{};

	Parms._bFailed = _bFailed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Newspaper.AddContentToLayout
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UBFGWidget_Newspaper_Content*     _pContent                                              (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Newspaper::AddContentToLayout(const class UBFGWidget_Newspaper_Content* _pContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Newspaper", "AddContentToLayout");

	Params::BFGWidget_Newspaper_AddContentToLayout Parms{};

	Parms._pContent = _pContent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Newspaper.InitContent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGDataAsset_NewspaperInfo*      _pContentInfo                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Newspaper::InitContent(class UBFGDataAsset_NewspaperInfo* _pContentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Newspaper", "InitContent");

	Params::BFGWidget_Newspaper_InitContent Parms{};

	Parms._pContentInfo = _pContentInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_Newspaper.SetSubtitleSubtitles
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_Newspaper::SetSubtitleSubtitles(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Newspaper", "SetSubtitleSubtitles");

	Params::BFGWidget_Newspaper_SetSubtitleSubtitles Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Newspaper.SetTitleSubtitles
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_Newspaper::SetTitleSubtitles(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Newspaper", "SetTitleSubtitles");

	Params::BFGWidget_Newspaper_SetTitleSubtitles Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Newspaper.DetermineBackgroundColor
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UBFGWidget_Newspaper::DetermineBackgroundColor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Newspaper", "DetermineBackgroundColor");

	Params::BFGWidget_Newspaper_DetermineBackgroundColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_LinearGraphNode.SetNodeAsMarked
// (Final, Native, Public, BlueprintCallable)

void UBFGWidget_LinearGraphNode::SetNodeAsMarked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_LinearGraphNode", "SetNodeAsMarked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_LinearGraphNode.SetNodeAsObliterated
// (Final, Native, Public, BlueprintCallable)

void UBFGWidget_LinearGraphNode::SetNodeAsObliterated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_LinearGraphNode", "SetNodeAsObliterated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_LinearGraphNode.SetSelected
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bSelected                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_LinearGraphNode::SetSelected(bool _bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_LinearGraphNode", "SetSelected");

	Params::BFGWidget_LinearGraphNode_SetSelected Parms{};

	Parms._bSelected = _bSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_LinearGraphNode.IsSelected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGWidget_LinearGraphNode::IsSelected() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_LinearGraphNode", "IsSelected");

	Params::BFGWidget_LinearGraphNode_IsSelected Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_PoxLab_UpgradeGraphNode.AnimateActivation
// (Event, Public, BlueprintEvent)
// Parameters:
// EPoxLabUpgradeGraphNodeState            _eState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_PoxLab_UpgradeGraphNode::AnimateActivation(EPoxLabUpgradeGraphNodeState _eState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_PoxLab_UpgradeGraphNode", "AnimateActivation");

	Params::BFGWidget_PoxLab_UpgradeGraphNode_AnimateActivation Parms{};

	Parms._eState = _eState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_PoxLab_UpgradeGraphNode.OnStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// EPoxLabUpgradeGraphNodeState            _eNewState                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_PoxLab_UpgradeGraphNode::OnStateChanged(EPoxLabUpgradeGraphNodeState _eNewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_PoxLab_UpgradeGraphNode", "OnStateChanged");

	Params::BFGWidget_PoxLab_UpgradeGraphNode_OnStateChanged Parms{};

	Parms._eNewState = _eNewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_PoxLab_UpgradeGraphNode.OnUpgradePressed
// (Final, Native, Public, BlueprintCallable)

void UBFGWidget_PoxLab_UpgradeGraphNode::OnUpgradePressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_PoxLab_UpgradeGraphNode", "OnUpgradePressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_PoxLab_UpgradeGraphNode.SetGraphState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bUpgradeable                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bUpgraded                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bPurchaseable                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_PoxLab_UpgradeGraphNode::SetGraphState(bool _bUpgradeable, bool _bUpgraded, bool _bPurchaseable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_PoxLab_UpgradeGraphNode", "SetGraphState");

	Params::BFGWidget_PoxLab_UpgradeGraphNode_SetGraphState Parms{};

	Parms._bUpgradeable = _bUpgradeable;
	Parms._bUpgraded = _bUpgraded;
	Parms._bPurchaseable = _bPurchaseable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_PoxLab_UpgradeGraphNode.SetGraphText
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _strText                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_PoxLab_UpgradeGraphNode::SetGraphText(const class FText& _strText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_PoxLab_UpgradeGraphNode", "SetGraphText");

	Params::BFGWidget_PoxLab_UpgradeGraphNode_SetGraphText Parms{};

	Parms._strText = std::move(_strText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_PoxLab_UpgradeGraphNode.UpdateState
// (Native, Public, BlueprintCallable)

void UBFGWidget_PoxLab_UpgradeGraphNode::UpdateState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_PoxLab_UpgradeGraphNode", "UpdateState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMenuFactory.CreateGenericDialogState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _menuName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGGameFlowState_GenericDialog*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGGameFlowState_GenericDialog* UBFGMenuFactory::CreateGenericDialogState(class FName _menuName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMenuFactory", "CreateGenericDialogState");

	Params::BFGMenuFactory_CreateGenericDialogState Parms{};

	Parms._menuName = _menuName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMenuFactory.CreateMenuState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _menuName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bKeepCurrentGameFlowState                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          _pMenuContext                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGGameFlowState_MenuBase*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGGameFlowState_MenuBase* UBFGMenuFactory::CreateMenuState(class FName _menuName, bool _bKeepCurrentGameFlowState, class UObject* _pMenuContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMenuFactory", "CreateMenuState");

	Params::BFGMenuFactory_CreateMenuState Parms{};

	Parms._menuName = _menuName;
	Parms._bKeepCurrentGameFlowState = _bKeepCurrentGameFlowState;
	Parms._pMenuContext = _pMenuContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMenuFactory.GetMenuStateClass
// (Final, Native, Public)
// Parameters:
// class FName                             _menuName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UBFGMenuFactory::GetMenuStateClass(class FName _menuName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMenuFactory", "GetMenuStateClass");

	Params::BFGMenuFactory_GetMenuStateClass Parms{};

	Parms._menuName = _menuName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_TimedConfirm.OnUpdateTimer
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   _fTimer                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_TimedConfirm::OnUpdateTimer(float _fTimer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TimedConfirm", "OnUpdateTimer");

	Params::BFGWidget_TimedConfirm_OnUpdateTimer Parms{};

	Parms._fTimer = _fTimer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_TimedConfirm.SetPromptMessage
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _strPromptMessage                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_TimedConfirm::SetPromptMessage(const class FText& _strPromptMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TimedConfirm", "SetPromptMessage");

	Params::BFGWidget_TimedConfirm_SetPromptMessage Parms{};

	Parms._strPromptMessage = std::move(_strPromptMessage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGMenuLifetimeManager.OnMenuFinalized
// (Final, Native, Private)
// Parameters:
// class UBFGWidget_MenuBase*              _pMenuBase                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGMenuLifetimeManager::OnMenuFinalized(class UBFGWidget_MenuBase* _pMenuBase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMenuLifetimeManager", "OnMenuFinalized");

	Params::BFGMenuLifetimeManager_OnMenuFinalized Parms{};

	Parms._pMenuBase = _pMenuBase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMIButton.HandleMentallyInteractabledUse
// (Final, Native, Protected)
// Parameters:
// class UBFGActorComponent_MentallyInteractable*_pMentallyInteractable                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      _pController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGMIButton::HandleMentallyInteractabledUse(class UBFGActorComponent_MentallyInteractable* _pMentallyInteractable, class AController* _pController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMIButton", "HandleMentallyInteractabledUse");

	Params::BFGMIButton_HandleMentallyInteractabledUse Parms{};

	Parms._pMentallyInteractable = _pMentallyInteractable;
	Parms._pController = _pController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMIButton.OnToggleActivate
// (Event, Protected, BlueprintEvent)

void ABFGMIButton::OnToggleActivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMIButton", "OnToggleActivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGMissionCustomTriggerZone.OnStateChange
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETriggerState                           _eLastState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETriggerState                           _eCurrentState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGMissionCustomTriggerZone::OnStateChange(class AActor* _pActor, ETriggerState _eLastState, ETriggerState _eCurrentState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionCustomTriggerZone", "OnStateChange");

	Params::BFGMissionCustomTriggerZone_OnStateChange Parms{};

	Parms._pActor = _pActor;
	Parms._eLastState = _eLastState;
	Parms._eCurrentState = _eCurrentState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_GameplayTagOption.SetParentWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGWidget_GameplayTags*          _pParent                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GameplayTagOption::SetParentWidget(class UBFGWidget_GameplayTags* _pParent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameplayTagOption", "SetParentWidget");

	Params::BFGWidget_GameplayTagOption_SetParentWidget Parms{};

	Parms._pParent = _pParent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_GameplayTagOption.GetParentWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGWidget_GameplayTags*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGWidget_GameplayTags* UBFGWidget_GameplayTagOption::GetParentWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameplayTagOption", "GetParentWidget");

	Params::BFGWidget_GameplayTagOption_GetParentWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMissionCinematicVolume.BlockNetworkPaths
// (Native, Public)

void ABFGMissionCinematicVolume::BlockNetworkPaths()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionCinematicVolume", "BlockNetworkPaths");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMissionCinematicVolume.CleanupVolume
// (Native, Public, BlueprintCallable)

void ABFGMissionCinematicVolume::CleanupVolume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionCinematicVolume", "CleanupVolume");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMissionCinematicVolume.DisableCrowdlifeStationsAndHideActors
// (Native, Public)

void ABFGMissionCinematicVolume::DisableCrowdlifeStationsAndHideActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionCinematicVolume", "DisableCrowdlifeStationsAndHideActors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMissionCinematicVolume.DoHideActors
// (Final, Native, Private, HasOutParams)
// Parameters:
// TArray<class AActor*>                   ApActors                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void ABFGMissionCinematicVolume::DoHideActors(TArray<class AActor*>* ApActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionCinematicVolume", "DoHideActors");

	Params::BFGMissionCinematicVolume_DoHideActors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ApActors != nullptr)
		*ApActors = std::move(Parms.ApActors);
}


// Function BFGCore.BFGMissionCinematicVolume.EnableCrowdlifeStations
// (Native, Public)

void ABFGMissionCinematicVolume::EnableCrowdlifeStations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionCinematicVolume", "EnableCrowdlifeStations");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMissionCinematicVolume.HideActors
// (Native, Public)

void ABFGMissionCinematicVolume::HideActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionCinematicVolume", "HideActors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMissionCinematicVolume.RemoveObjects
// (Native, Public)

void ABFGMissionCinematicVolume::RemoveObjects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionCinematicVolume", "RemoveObjects");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMissionCinematicVolume.ShowActors
// (Native, Public)

void ABFGMissionCinematicVolume::ShowActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionCinematicVolume", "ShowActors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMissionCinematicVolume.UnBlockNetworkPaths
// (Native, Public)

void ABFGMissionCinematicVolume::UnBlockNetworkPaths()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionCinematicVolume", "UnBlockNetworkPaths");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_HUD_AlertLevel.EnableStealthWarning
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_AlertLevel::EnableStealthWarning(bool _bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_AlertLevel", "EnableStealthWarning");

	Params::BFGWidget_HUD_AlertLevel_EnableStealthWarning Parms{};

	Parms._bEnable = _bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_HUD_AlertLevel.SetAlertBarPercent
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   _fValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_AlertLevel::SetAlertBarPercent(float _fValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_AlertLevel", "SetAlertBarPercent");

	Params::BFGWidget_HUD_AlertLevel_SetAlertBarPercent Parms{};

	Parms._fValue = _fValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_HUD_AlertLevel.SetAlertDevelopmentState
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_AlertLevel::SetAlertDevelopmentState(int32 _iIndex, int32 _iState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_AlertLevel", "SetAlertDevelopmentState");

	Params::BFGWidget_HUD_AlertLevel_SetAlertDevelopmentState Parms{};

	Parms._iIndex = _iIndex;
	Parms._iState = _iState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_HUD_AlertLevel.SetIconPack
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBFGAlertLevelIconPack           _oIcon                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_AlertLevel::SetIconPack(int32 _iIndex, const struct FBFGAlertLevelIconPack& _oIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_AlertLevel", "SetIconPack");

	Params::BFGWidget_HUD_AlertLevel_SetIconPack Parms{};

	Parms._iIndex = _iIndex;
	Parms._oIcon = std::move(_oIcon);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_HUD_AlertLevel.SetInvestigativeBarPercent
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   _fValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_AlertLevel::SetInvestigativeBarPercent(float _fValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_AlertLevel", "SetInvestigativeBarPercent");

	Params::BFGWidget_HUD_AlertLevel_SetInvestigativeBarPercent Parms{};

	Parms._fValue = _fValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_HUD_AlertLevel.SetSeenLevel
// (Event, Public, BlueprintEvent)
// Parameters:
// EBFGAlertSystemSeenState                _eState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_AlertLevel::SetSeenLevel(EBFGAlertSystemSeenState _eState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_AlertLevel", "SetSeenLevel");

	Params::BFGWidget_HUD_AlertLevel_SetSeenLevel Parms{};

	Parms._eState = _eState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_HUD_AlertLevel.SetStealthWarningLevel
// (Event, Public, BlueprintEvent)
// Parameters:
// EBFGAlertSystemState                    _eState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_AlertLevel::SetStealthWarningLevel(EBFGAlertSystemState _eState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_AlertLevel", "SetStealthWarningLevel");

	Params::BFGWidget_HUD_AlertLevel_SetStealthWarningLevel Parms{};

	Parms._eState = _eState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_HUD_AlertLevel.TriggerAnimationNewLevelReached
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_AlertLevel::TriggerAnimationNewLevelReached(int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_AlertLevel", "TriggerAnimationNewLevelReached");

	Params::BFGWidget_HUD_AlertLevel_TriggerAnimationNewLevelReached Parms{};

	Parms._iIndex = _iIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGMissionConsequence_Blueprint.ReceiveEndPlay
// (Event, Public, BlueprintEvent)

void UBFGMissionConsequence_Blueprint::ReceiveEndPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionConsequence_Blueprint", "ReceiveEndPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGMissionConsequence_Blueprint.ReceiveStartPlay
// (Event, Public, BlueprintEvent)

void UBFGMissionConsequence_Blueprint::ReceiveStartPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionConsequence_Blueprint", "ReceiveStartPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGMissionConsequence_Blueprint.ReceiveUpdate
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   _fDelta                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGMissionConsequence_Blueprint::ReceiveUpdate(float _fDelta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionConsequence_Blueprint", "ReceiveUpdate");

	Params::BFGMissionConsequence_Blueprint_ReceiveUpdate Parms{};

	Parms._fDelta = _fDelta;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGMissionConsequence_Blueprint.GetSourceActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UBFGMissionConsequence_Blueprint::GetSourceActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionConsequence_Blueprint", "GetSourceActor");

	Params::BFGMissionConsequence_Blueprint_GetSourceActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMissionConsequence_Blueprint.GetSourceActorAs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class AActor>               _pClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UBFGMissionConsequence_Blueprint::GetSourceActorAs(TSubclassOf<class AActor> _pClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionConsequence_Blueprint", "GetSourceActorAs");

	Params::BFGMissionConsequence_Blueprint_GetSourceActorAs Parms{};

	Parms._pClass = _pClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMissionConsequence_Blueprint.GetSourceComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UActorComponent>      _pClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UActorComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UActorComponent* UBFGMissionConsequence_Blueprint::GetSourceComponent(TSubclassOf<class UActorComponent> _pClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionConsequence_Blueprint", "GetSourceComponent");

	Params::BFGMissionConsequence_Blueprint_GetSourceComponent Parms{};

	Parms._pClass = _pClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMissionConsequence_Blueprint.GetTargetActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UBFGMissionConsequence_Blueprint::GetTargetActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionConsequence_Blueprint", "GetTargetActor");

	Params::BFGMissionConsequence_Blueprint_GetTargetActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMissionConsequence_Blueprint.GetTargetActorAs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class AActor>               _pClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UBFGMissionConsequence_Blueprint::GetTargetActorAs(TSubclassOf<class AActor> _pClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionConsequence_Blueprint", "GetTargetActorAs");

	Params::BFGMissionConsequence_Blueprint_GetTargetActorAs Parms{};

	Parms._pClass = _pClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMissionConsequence_Blueprint.GetTargetComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UActorComponent>      _pClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UActorComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UActorComponent* UBFGMissionConsequence_Blueprint::GetTargetComponent(TSubclassOf<class UActorComponent> _pClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionConsequence_Blueprint", "GetTargetComponent");

	Params::BFGMissionConsequence_Blueprint_GetTargetComponent Parms{};

	Parms._pClass = _pClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMissionConsequence_Blueprint.ReceiveIsComplete
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGMissionConsequence_Blueprint::ReceiveIsComplete() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionConsequence_Blueprint", "ReceiveIsComplete");

	Params::BFGMissionConsequence_Blueprint_ReceiveIsComplete Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMissionConsequence_Blueprint.ReceiveIsValid
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGMissionConsequence_Blueprint::ReceiveIsValid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionConsequence_Blueprint", "ReceiveIsValid");

	Params::BFGMissionConsequence_Blueprint_ReceiveIsValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMissionGroup.OnVarChanged
// (Final, Native, Protected)
// Parameters:
// class UBFGVariableMirror*               _pVarMirror                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGVariable*                     _pVariable                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iOldValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iNewValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGMissionGroup::OnVarChanged(class UBFGVariableMirror* _pVarMirror, const class UBFGVariable* _pVariable, int32 _iOldValue, int32 _iNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionGroup", "OnVarChanged");

	Params::BFGMissionGroup_OnVarChanged Parms{};

	Parms._pVarMirror = _pVarMirror;
	Parms._pVariable = _pVariable;
	Parms._iOldValue = _iOldValue;
	Parms._iNewValue = _iNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMissionGroup.GetVariable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGVariable*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGVariable* UBFGMissionGroup::GetVariable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionGroup", "GetVariable");

	Params::BFGMissionGroup_GetVariable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMissionInterface.GetGuid
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FGuid                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGuid IBFGMissionInterface::GetGuid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionInterface", "GetGuid");

	Params::BFGMissionInterface_GetGuid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMissionInterface.GetUsedMissionObjects
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ABFGGameState*                    _pGameState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UObject*>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UObject*> IBFGMissionInterface::GetUsedMissionObjects(class ABFGGameState* _pGameState) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionInterface", "GetUsedMissionObjects");

	Params::BFGMissionInterface_GetUsedMissionObjects Parms{};

	Parms._pGameState = _pGameState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMissionInterface.HasRegistredVariable
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UBFGVariableMirror*               _pVarMirror                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IBFGMissionInterface::HasRegistredVariable(class UBFGVariableMirror* _pVarMirror) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionInterface", "HasRegistredVariable");

	Params::BFGMissionInterface_HasRegistredVariable Parms{};

	Parms._pVarMirror = _pVarMirror;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMissionInterface.RegisterVariables
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UObject*                          _pVariableOwner                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGVariableMirror*               _pVarMirror                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UBFGVariable*>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UBFGVariable*> IBFGMissionInterface::RegisterVariables(class UObject* _pVariableOwner, class UBFGVariableMirror* _pVarMirror) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionInterface", "RegisterVariables");

	Params::BFGMissionInterface_RegisterVariables Parms{};

	Parms._pVariableOwner = _pVariableOwner;
	Parms._pVarMirror = _pVarMirror;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMissionOrbitalTransporter.OnSaveSystemLoad
// (Final, Native, Protected)
// Parameters:
// class UBFGSaveSystem*                   _pSaveSystem                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGSaveSystem_Action*            _pAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGMissionOrbitalTransporter::OnSaveSystemLoad(class UBFGSaveSystem* _pSaveSystem, class UBFGSaveSystem_Action* _pAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionOrbitalTransporter", "OnSaveSystemLoad");

	Params::BFGMissionOrbitalTransporter_OnSaveSystemLoad Parms{};

	Parms._pSaveSystem = _pSaveSystem;
	Parms._pAction = _pAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_HUD_ProximityMonitor.OnDistanceTextChanged
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             StrDistance                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_ProximityMonitor::OnDistanceTextChanged(const class FText& StrDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_ProximityMonitor", "OnDistanceTextChanged");

	Params::BFGWidget_HUD_ProximityMonitor_OnDistanceTextChanged Parms{};

	Parms.StrDistance = std::move(StrDistance);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_HUD_ProximityMonitor.OnSubgoalReached
// (Event, Public, BlueprintEvent)

void UBFGWidget_HUD_ProximityMonitor::OnSubgoalReached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_ProximityMonitor", "OnSubgoalReached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_HUD_ProximityMonitor.OnWarningAreaChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    Entered                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_ProximityMonitor::OnWarningAreaChanged(bool Entered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_ProximityMonitor", "OnWarningAreaChanged");

	Params::BFGWidget_HUD_ProximityMonitor_OnWarningAreaChanged Parms{};

	Parms.Entered = Entered;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGMissionSpawnManager.CreateNewScriptSequence
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bAutoStart                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bRemoveWhenDone                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGScriptedSequence*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGScriptedSequence* ABFGMissionSpawnManager::CreateNewScriptSequence(class AActor* _pActor, bool _bAutoStart, bool _bRemoveWhenDone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionSpawnManager", "CreateNewScriptSequence");

	Params::BFGMissionSpawnManager_CreateNewScriptSequence Parms{};

	Parms._pActor = _pActor;
	Parms._bAutoStart = _bAutoStart;
	Parms._bRemoveWhenDone = _bRemoveWhenDone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMissionSpawnManager.OnActorDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGMissionSpawnManager::OnActorDestroyed(class AActor* _pActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionSpawnManager", "OnActorDestroyed");

	Params::BFGMissionSpawnManager_OnActorDestroyed Parms{};

	Parms._pActor = _pActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMissionSpawnManager.OnDeadStatusChanged
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGActorStat_Bool*               _pStat                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGMissionSpawnManager::OnDeadStatusChanged(class AActor* _pActor, class UBFGActorStat_Bool* _pStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionSpawnManager", "OnDeadStatusChanged");

	Params::BFGMissionSpawnManager_OnDeadStatusChanged Parms{};

	Parms._pActor = _pActor;
	Parms._pStat = _pStat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMissionSpawnManager.OnSpawned
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBFGMissionSpawner_SpawnedParameters_params                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ABFGMissionSpawnManager::OnSpawned(class AActor* _pActor, const struct FBFGMissionSpawner_SpawnedParameters& _params)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionSpawnManager", "OnSpawned");

	Params::BFGMissionSpawnManager_OnSpawned Parms{};

	Parms._pActor = _pActor;
	Parms._params = std::move(_params);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMissionSpawnManager.SetActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bActive                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bForce                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGMissionSpawnManager::SetActive(bool _bActive, bool _bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionSpawnManager", "SetActive");

	Params::BFGMissionSpawnManager_SetActive Parms{};

	Parms._bActive = _bActive;
	Parms._bForce = _bForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGMissionSpawnManager.IsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGMissionSpawnManager::IsActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionSpawnManager", "IsActive");

	Params::BFGMissionSpawnManager_IsActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableAction_MissionGroup_InProgress.GetActionName_MissionGroupInProgress
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableAction_MissionGroup_InProgress::GetActionName_MissionGroupInProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableAction_MissionGroup_InProgress", "GetActionName_MissionGroupInProgress");

	Params::BFGVariableAction_MissionGroup_InProgress_GetActionName_MissionGroupInProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMissionSystem.OnWorldLoaded
// (Final, Native, Protected)
// Parameters:
// class UBFGGameInstance*                 _pGameInstance                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWorld*                           _pWorld                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGMissionSystem::OnWorldLoaded(class UBFGGameInstance* _pGameInstance, class UWorld* _pWorld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMissionSystem", "OnWorldLoaded");

	Params::BFGMissionSystem_OnWorldLoaded Parms{};

	Parms._pGameInstance = _pGameInstance;
	Parms._pWorld = _pWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVariableAction_Quest_MakeUnavailable.GetActionName_QuestMakeUnavailable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableAction_Quest_MakeUnavailable::GetActionName_QuestMakeUnavailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableAction_Quest_MakeUnavailable", "GetActionName_QuestMakeUnavailable");

	Params::BFGVariableAction_Quest_MakeUnavailable_GetActionName_QuestMakeUnavailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGMothershipSubstate_PoxLab.ApplyUpgrade
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGDataAssetPoxLabUpgrade*       _pUpgrade                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGMothershipSubstate_PoxLab::ApplyUpgrade(class UBFGDataAssetPoxLabUpgrade* _pUpgrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGMothershipSubstate_PoxLab", "ApplyUpgrade");

	Params::BFGMothershipSubstate_PoxLab_ApplyUpgrade Parms{};

	Parms._pUpgrade = _pUpgrade;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVariableAction_Quest_Finish.GetActionName_QuestFinish
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableAction_Quest_Finish::GetActionName_QuestFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableAction_Quest_Finish", "GetActionName_QuestFinish");

	Params::BFGVariableAction_Quest_Finish_GetActionName_QuestFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNarrativeSequence.OnStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UBFGNarrativeSequenceNode*        _pNode                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGNarrativeSequence::OnStarted(class UBFGNarrativeSequenceNode* _pNode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNarrativeSequence", "OnStarted");

	Params::BFGNarrativeSequence_OnStarted Parms{};

	Parms._pNode = _pNode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGNarrativeSequence.OnStopped
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UBFGNarrativeSequenceNode*        _pNode                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGNarrativeSequence::OnStopped(class UBFGNarrativeSequenceNode* _pNode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNarrativeSequence", "OnStopped");

	Params::BFGNarrativeSequence_OnStopped Parms{};

	Parms._pNode = _pNode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGNarrativeSequence.RequestStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGNarrativeSequence::RequestStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNarrativeSequence", "RequestStart");

	Params::BFGNarrativeSequence_RequestStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNarrativeSequence.RequestStop
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bRemoveSequence                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bIsAbort                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGNarrativeSequence::RequestStop(bool _bRemoveSequence, bool _bIsAbort)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNarrativeSequence", "RequestStop");

	Params::BFGNarrativeSequence_RequestStop Parms{};

	Parms._bRemoveSequence = _bRemoveSequence;
	Parms._bIsAbort = _bIsAbort;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVariableAction_QuestCounter_Decrease.GetActionName_QuestCounterDecrease
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableAction_QuestCounter_Decrease::GetActionName_QuestCounterDecrease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableAction_QuestCounter_Decrease", "GetActionName_QuestCounterDecrease");

	Params::BFGVariableAction_QuestCounter_Decrease_GetActionName_QuestCounterDecrease Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNarrativeSequenceNode_Fade.OnFadeFinishedCallback
// (Final, Native, Protected)
// Parameters:
// class FName                             _strFadeIdentifier                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bFadeOut                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGNarrativeSequenceNode_Fade::OnFadeFinishedCallback(class FName _strFadeIdentifier, bool _bFadeOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNarrativeSequenceNode_Fade", "OnFadeFinishedCallback");

	Params::BFGNarrativeSequenceNode_Fade_OnFadeFinishedCallback Parms{};

	Parms._strFadeIdentifier = _strFadeIdentifier;
	Parms._bFadeOut = _bFadeOut;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNarrativeSequenceNode_Fade.OnStreamingStateChanged
// (Final, Native, Protected)
// Parameters:
// class UBFGStreamingLevelHandle*         _pHandle                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bIsLoaded                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGNarrativeSequenceNode_Fade::OnStreamingStateChanged(class UBFGStreamingLevelHandle* _pHandle, bool _bIsLoaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNarrativeSequenceNode_Fade", "OnStreamingStateChanged");

	Params::BFGNarrativeSequenceNode_Fade_OnStreamingStateChanged Parms{};

	Parms._pHandle = _pHandle;
	Parms._bIsLoaded = _bIsLoaded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNarrativeSequenceNode_PlayCutscene.FinishedSequence
// (Final, Native, Protected)
// Parameters:
// class ALevelSequenceActor*              _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bWasCutscene                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGNarrativeSequenceNode_PlayCutscene::FinishedSequence(class ALevelSequenceActor* _pActor, bool _bWasCutscene)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNarrativeSequenceNode_PlayCutscene", "FinishedSequence");

	Params::BFGNarrativeSequenceNode_PlayCutscene_FinishedSequence Parms{};

	Parms._pActor = _pActor;
	Parms._bWasCutscene = _bWasCutscene;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNarrativeSequenceNode_PlayNewspaper.OnNewspaperLeaves
// (Final, Native, Protected)
// Parameters:
// class UBFGGameFlowState*                _pState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGNarrativeSequenceNode_PlayNewspaper::OnNewspaperLeaves(class UBFGGameFlowState* _pState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNarrativeSequenceNode_PlayNewspaper", "OnNewspaperLeaves");

	Params::BFGNarrativeSequenceNode_PlayNewspaper_OnNewspaperLeaves Parms{};

	Parms._pState = _pState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNarrativeSequenceSystem.FindFirstNarrativeSequenceAssessment
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TMap<class FName, EUBFGNarrativeSequence_Assessment>_aAssessmentOut                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class UObject*                          _pWorldContextObject                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftClassPtr<class UClass>             _softSequenceType                                      (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGNarrativeSequenceSystem::FindFirstNarrativeSequenceAssessment(TMap<class FName, EUBFGNarrativeSequence_Assessment>* _aAssessmentOut, const class UObject* _pWorldContextObject, TSoftClassPtr<class UClass> _softSequenceType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGNarrativeSequenceSystem", "FindFirstNarrativeSequenceAssessment");

	Params::BFGNarrativeSequenceSystem_FindFirstNarrativeSequenceAssessment Parms{};

	Parms._pWorldContextObject = _pWorldContextObject;
	Parms._softSequenceType = _softSequenceType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_aAssessmentOut != nullptr)
		*_aAssessmentOut = std::move(Parms._aAssessmentOut);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNarrativeSequenceSystem.NewSequence
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftClassPtr<class UClass>             _softSequence                                          (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bAutoStart                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bRemoveAfterPlayback                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGNarrativeSequence*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGNarrativeSequence* UBFGNarrativeSequenceSystem::NewSequence(TSoftClassPtr<class UClass> _softSequence, bool _bAutoStart, bool _bRemoveAfterPlayback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNarrativeSequenceSystem", "NewSequence");

	Params::BFGNarrativeSequenceSystem_NewSequence Parms{};

	Parms._softSequence = _softSequence;
	Parms._bAutoStart = _bAutoStart;
	Parms._bRemoveAfterPlayback = _bRemoveAfterPlayback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNarrativeSequenceSystem.PlaySequence_FireAndForget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftClassPtr<class UClass>             _softSequence                                          (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGNarrativeSequenceSystem::PlaySequence_FireAndForget(TSoftClassPtr<class UClass> _softSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNarrativeSequenceSystem", "PlaySequence_FireAndForget");

	Params::BFGNarrativeSequenceSystem_PlaySequence_FireAndForget Parms{};

	Parms._softSequence = _softSequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNetworkPath.OnAgentSpawnedBySpawner
// (Final, Native, Protected)
// Parameters:
// class UBFGNetworkPathAgent*             _pAgent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bOwnedByPath                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGNetworkPath::OnAgentSpawnedBySpawner(class UBFGNetworkPathAgent* _pAgent, bool _bOwnedByPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNetworkPath", "OnAgentSpawnedBySpawner");

	Params::BFGNetworkPath_OnAgentSpawnedBySpawner Parms{};

	Parms._pAgent = _pAgent;
	Parms._bOwnedByPath = _bOwnedByPath;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNetworkPathAgent_AIStatePlayInteractAtLocation.OnAttachedActorChange
// (Final, Native, Protected)
// Parameters:
// class UBFGNetworkPathAgent*             _pAgent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bIsAttached                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGNetworkPathAgent_AIStatePlayInteractAtLocation::OnAttachedActorChange(class UBFGNetworkPathAgent* _pAgent, class AActor* _pActor, bool _bIsAttached)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNetworkPathAgent_AIStatePlayInteractAtLocation", "OnAttachedActorChange");

	Params::BFGNetworkPathAgent_AIStatePlayInteractAtLocation_OnAttachedActorChange Parms{};

	Parms._pAgent = _pAgent;
	Parms._pActor = _pActor;
	Parms._bIsAttached = _bIsAttached;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNetworkPathAgent_AIStatePlayInteractAtLocation.OnInteractAnimationPop
// (Final, Native, Protected, HasOutParams)
// Parameters:
// TScriptInterface<class IBFGInteractAnimationPlayerInterface>_pInteractAnimationPlayer                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
// struct FBFGInteractAnimationData        _data                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FBFGInteractAnimationData        _oldData                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UBFGNetworkPathAgent_AIStatePlayInteractAtLocation::OnInteractAnimationPop(TScriptInterface<class IBFGInteractAnimationPlayerInterface> _pInteractAnimationPlayer, const struct FBFGInteractAnimationData& _data, const struct FBFGInteractAnimationData& _oldData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNetworkPathAgent_AIStatePlayInteractAtLocation", "OnInteractAnimationPop");

	Params::BFGNetworkPathAgent_AIStatePlayInteractAtLocation_OnInteractAnimationPop Parms{};

	Parms._pInteractAnimationPlayer = _pInteractAnimationPlayer;
	Parms._data = std::move(_data);
	Parms._oldData = std::move(_oldData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVoiceoverStatistics.GetLastSpokenTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             _voice                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGVoiceoverStatistics::GetLastSpokenTime(class FName _voice) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVoiceoverStatistics", "GetLastSpokenTime");

	Params::BFGVoiceoverStatistics_GetLastSpokenTime Parms{};

	Parms._voice = _voice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSequencePlayer.Sequence_PlaybackPaused
// (Final, Native, Protected)

void UBFGSequencePlayer::Sequence_PlaybackPaused()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSequencePlayer", "Sequence_PlaybackPaused");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGSequencePlayer.Sequence_PlaybackStopped
// (Final, Native, Protected)

void UBFGSequencePlayer::Sequence_PlaybackStopped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSequencePlayer", "Sequence_PlaybackStopped");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNetworkPathAgentComponent.SetLODEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGNetworkPathAgentComponent::SetLODEnabled(bool _bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNetworkPathAgentComponent", "SetLODEnabled");

	Params::BFGNetworkPathAgentComponent_SetLODEnabled Parms{};

	Parms._bEnabled = _bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNetworkPathAgentRadarInfo.OnAttachedEntityDied
// (Final, Native, Protected)
// Parameters:
// class UBFGNetworkPathAgent*             _pAgent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bIsAttached                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGNetworkPathAgentRadarInfo::OnAttachedEntityDied(class UBFGNetworkPathAgent* _pAgent, class AActor* _pActor, bool _bIsAttached)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNetworkPathAgentRadarInfo", "OnAttachedEntityDied");

	Params::BFGNetworkPathAgentRadarInfo_OnAttachedEntityDied Parms{};

	Parms._pAgent = _pAgent;
	Parms._pActor = _pActor;
	Parms._bIsAttached = _bIsAttached;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVariableAction_Timer_Stopped.GetActionName_TimerStop
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableAction_Timer_Stopped::GetActionName_TimerStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableAction_Timer_Stopped", "GetActionName_TimerStop");

	Params::BFGVariableAction_Timer_Stopped_GetActionName_TimerStop Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterBoss.ActivatePickUpSpawner
// (Final, Native, Protected)
// Parameters:
// int32                                   _iCurrentPhase                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterBoss::ActivatePickUpSpawner(int32 _iCurrentPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss", "ActivatePickUpSpawner");

	Params::BFGNPCCharacterBoss_ActivatePickUpSpawner Parms{};

	Parms._iCurrentPhase = _iCurrentPhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss.BeginBossAction_CallReinforcements
// (Final, Native, Public)

void ABFGNPCCharacterBoss::BeginBossAction_CallReinforcements()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss", "BeginBossAction_CallReinforcements");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss.BeginStandingUp
// (Native, Public)

void ABFGNPCCharacterBoss::BeginStandingUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss", "BeginStandingUp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss.FinishedStandingUp
// (Final, Native, Public)

void ABFGNPCCharacterBoss::FinishedStandingUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss", "FinishedStandingUp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss.GetCurrentStepDuration
// (Final, Native, Public)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABFGNPCCharacterBoss::GetCurrentStepDuration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss", "GetCurrentStepDuration");

	Params::BFGNPCCharacterBoss_GetCurrentStepDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterBoss.GetCurrentSubtree
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBehaviorTree*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBehaviorTree* ABFGNPCCharacterBoss::GetCurrentSubtree()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss", "GetCurrentSubtree");

	Params::BFGNPCCharacterBoss_GetCurrentSubtree Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterBoss.GetKnockdownDirection
// (Final, Native, Protected, HasDefaults)
// Parameters:
// struct FVector                          _vImpactDirection                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterBoss::GetKnockdownDirection(const struct FVector& _vImpactDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss", "GetKnockdownDirection");

	Params::BFGNPCCharacterBoss_GetKnockdownDirection Parms{};

	Parms._vImpactDirection = std::move(_vImpactDirection);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss.OnCallReinforcements
// (Native, Public)

void ABFGNPCCharacterBoss::OnCallReinforcements()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss", "OnCallReinforcements");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss.OnEnterWeakState
// (Event, Protected, BlueprintEvent)

void ABFGNPCCharacterBoss::OnEnterWeakState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss", "OnEnterWeakState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGNPCCharacterBoss.OnExitWeakState
// (Event, Protected, BlueprintEvent)

void ABFGNPCCharacterBoss::OnExitWeakState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss", "OnExitWeakState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGNPCCharacterBoss.OnHealthChanged
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pOwner                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGActorStat_Float*              _pStat                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterBoss::OnHealthChanged(class AActor* _pOwner, class UBFGActorStat_Float* _pStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss", "OnHealthChanged");

	Params::BFGNPCCharacterBoss_OnHealthChanged Parms{};

	Parms._pOwner = _pOwner;
	Parms._pStat = _pStat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss.OnPatternComplete
// (Event, Public, BlueprintEvent)
// Parameters:
// class ABFGWeapon*                       _pWeapon                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterBoss::OnPatternComplete(class ABFGWeapon* _pWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss", "OnPatternComplete");

	Params::BFGNPCCharacterBoss_OnPatternComplete Parms{};

	Parms._pWeapon = _pWeapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGNPCCharacterBoss.OnPhaseChanged
// (Final, Native, Private)
// Parameters:
// int32                                   _iPhaseNumber                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterBoss::OnPhaseChanged(int32 _iPhaseNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss", "OnPhaseChanged");

	Params::BFGNPCCharacterBoss_OnPhaseChanged Parms{};

	Parms._iPhaseNumber = _iPhaseNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss.OnRocketLaunched
// (Final, Native, Public)
// Parameters:
// EBFGRocketSocket                        _eRocketSocket                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterBoss::OnRocketLaunched(EBFGRocketSocket _eRocketSocket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss", "OnRocketLaunched");

	Params::BFGNPCCharacterBoss_OnRocketLaunched Parms{};

	Parms._eRocketSocket = _eRocketSocket;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss.OnStepAborted
// (Native, Public)

void ABFGNPCCharacterBoss::OnStepAborted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss", "OnStepAborted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss.OnStepStarted
// (Native, Public)

void ABFGNPCCharacterBoss::OnStepStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss", "OnStepStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss.OnSubtreeComplete
// (Final, Native, Public)

void ABFGNPCCharacterBoss::OnSubtreeComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss", "OnSubtreeComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss.PhaseTransitionTriggered
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   _iCurrentPhaseNumber                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterBoss::PhaseTransitionTriggered(int32 _iCurrentPhaseNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss", "PhaseTransitionTriggered");

	Params::BFGNPCCharacterBoss_PhaseTransitionTriggered Parms{};

	Parms._iCurrentPhaseNumber = _iCurrentPhaseNumber;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGNPCCharacterBoss.RetriggerChangePhase
// (Final, Native, Private)
// Parameters:
// int32                                   _Phase                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterBoss::RetriggerChangePhase(int32 _Phase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss", "RetriggerChangePhase");

	Params::BFGNPCCharacterBoss_RetriggerChangePhase Parms{};

	Parms._Phase = _Phase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss.SetWeaponPattern
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   WeaponIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   WeaponPatternIndex                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterBoss::SetWeaponPattern(int32 WeaponIndex, int32 WeaponPatternIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss", "SetWeaponPattern");

	Params::BFGNPCCharacterBoss_SetWeaponPattern Parms{};

	Parms.WeaponIndex = WeaponIndex;
	Parms.WeaponPatternIndex = WeaponPatternIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss.SpawnReinforcements
// (Final, Native, Public)

void ABFGNPCCharacterBoss::SpawnReinforcements()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss", "SpawnReinforcements");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss.StartMetaPattern
// (Native, Public)

void ABFGNPCCharacterBoss::StartMetaPattern()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss", "StartMetaPattern");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss.GetBossPhaseAtIndex
// (Final, Native, Public, Const)
// Parameters:
// int32                                   _iPhaseIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGDataAsset_BossPhase*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGDataAsset_BossPhase* ABFGNPCCharacterBoss::GetBossPhaseAtIndex(int32 _iPhaseIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss", "GetBossPhaseAtIndex");

	Params::BFGNPCCharacterBoss_GetBossPhaseAtIndex Parms{};

	Parms._iPhaseIndex = _iPhaseIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterBoss.GetWeaponList
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class ABFGWeapon*>         ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class ABFGWeapon*> ABFGNPCCharacterBoss::GetWeaponList() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss", "GetWeaponList");

	Params::BFGNPCCharacterBoss_GetWeaponList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterBoss_Armquist.BeginBossAction_Charge
// (Native, Event, Public, BlueprintEvent)

void ABFGNPCCharacterBoss_Armquist::BeginBossAction_Charge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Armquist", "BeginBossAction_Charge");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Armquist.BeginBossAction_Leap
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector                          _vNextPhaseLocation                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterBoss_Armquist::BeginBossAction_Leap(const struct FVector& _vNextPhaseLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Armquist", "BeginBossAction_Leap");

	Params::BFGNPCCharacterBoss_Armquist_BeginBossAction_Leap Parms{};

	Parms._vNextPhaseLocation = std::move(_vNextPhaseLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Armquist.BeginBossAction_Stomp
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector                          _vStompLocation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterBoss_Armquist::BeginBossAction_Stomp(const struct FVector& _vStompLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Armquist", "BeginBossAction_Stomp");

	Params::BFGNPCCharacterBoss_Armquist_BeginBossAction_Stomp Parms{};

	Parms._vStompLocation = std::move(_vStompLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Armquist.CallBossAction_Leap
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector                          _vNextPhaseLocation                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterBoss_Armquist::CallBossAction_Leap(const struct FVector& _vNextPhaseLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Armquist", "CallBossAction_Leap");

	Params::BFGNPCCharacterBoss_Armquist_CallBossAction_Leap Parms{};

	Parms._vNextPhaseLocation = std::move(_vNextPhaseLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Armquist.EnableStomp
// (Final, Native, Private)

void ABFGNPCCharacterBoss_Armquist::EnableStomp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Armquist", "EnableStomp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Armquist.EndBossAction_Charge
// (Native, Event, Public, BlueprintEvent)

void ABFGNPCCharacterBoss_Armquist::EndBossAction_Charge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Armquist", "EndBossAction_Charge");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Armquist.GetRocketSocketName
// (Final, Native, Public)
// Parameters:
// EBFGRocketSocket                        _eRocketSocket                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ABFGNPCCharacterBoss_Armquist::GetRocketSocketName(EBFGRocketSocket _eRocketSocket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Armquist", "GetRocketSocketName");

	Params::BFGNPCCharacterBoss_Armquist_GetRocketSocketName Parms{};

	Parms._eRocketSocket = _eRocketSocket;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterBoss_Armquist.GetSupportDuration_Airforce
// (Final, Native, Public)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABFGNPCCharacterBoss_Armquist::GetSupportDuration_Airforce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Armquist", "GetSupportDuration_Airforce");

	Params::BFGNPCCharacterBoss_Armquist_GetSupportDuration_Airforce Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterBoss_Armquist.GetSupportDuration_Navy
// (Final, Native, Public)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABFGNPCCharacterBoss_Armquist::GetSupportDuration_Navy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Armquist", "GetSupportDuration_Navy");

	Params::BFGNPCCharacterBoss_Armquist_GetSupportDuration_Navy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterBoss_Armquist.IsAirforceSupportAvailable
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGNPCCharacterBoss_Armquist::IsAirforceSupportAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Armquist", "IsAirforceSupportAvailable");

	Params::BFGNPCCharacterBoss_Armquist_IsAirforceSupportAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterBoss_Armquist.IsNavySupportAvailable
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGNPCCharacterBoss_Armquist::IsNavySupportAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Armquist", "IsNavySupportAvailable");

	Params::BFGNPCCharacterBoss_Armquist_IsNavySupportAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterBoss_Armquist.LeapTimeline_FinishedCallback
// (Final, Native, Private)

void ABFGNPCCharacterBoss_Armquist::LeapTimeline_FinishedCallback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Armquist", "LeapTimeline_FinishedCallback");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Armquist.LeapTimeline_SpeedInterpolation
// (Final, Native, Private)
// Parameters:
// float                                   Val                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterBoss_Armquist::LeapTimeline_SpeedInterpolation(float Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Armquist", "LeapTimeline_SpeedInterpolation");

	Params::BFGNPCCharacterBoss_Armquist_LeapTimeline_SpeedInterpolation Parms{};

	Parms.Val = Val;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Armquist.OnAirMineDestroyed
// (Final, Native, Private)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterBoss_Armquist::OnAirMineDestroyed(class AActor* _pActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Armquist", "OnAirMineDestroyed");

	Params::BFGNPCCharacterBoss_Armquist_OnAirMineDestroyed Parms{};

	Parms._pActor = _pActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Armquist.OnBossAction_Charge_TelegraphComplete
// (Native, Event, Public, BlueprintEvent)

void ABFGNPCCharacterBoss_Armquist::OnBossAction_Charge_TelegraphComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Armquist", "OnBossAction_Charge_TelegraphComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Armquist.OnChargingBeginHit
// (Final, Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          NormalImpulse                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ABFGNPCCharacterBoss_Armquist::OnChargingBeginHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Armquist", "OnChargingBeginHit");

	Params::BFGNPCCharacterBoss_Armquist_OnChargingBeginHit Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Armquist.OnChargingBeginOverlap
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              _pOverlappedComponent                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pOtherActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              _pOtherComponent                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iOtherBodyIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bFromSweep                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       _sweepResult                                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ABFGNPCCharacterBoss_Armquist::OnChargingBeginOverlap(class UPrimitiveComponent* _pOverlappedComponent, class AActor* _pOtherActor, class UPrimitiveComponent* _pOtherComponent, int32 _iOtherBodyIndex, bool _bFromSweep, const struct FHitResult& _sweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Armquist", "OnChargingBeginOverlap");

	Params::BFGNPCCharacterBoss_Armquist_OnChargingBeginOverlap Parms{};

	Parms._pOverlappedComponent = _pOverlappedComponent;
	Parms._pOtherActor = _pOtherActor;
	Parms._pOtherComponent = _pOtherComponent;
	Parms._iOtherBodyIndex = _iOtherBodyIndex;
	Parms._bFromSweep = _bFromSweep;
	Parms._sweepResult = std::move(_sweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Armquist.RequestSupport
// (Final, Native, Public)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABFGNPCCharacterBoss_Armquist::RequestSupport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Armquist", "RequestSupport");

	Params::BFGNPCCharacterBoss_Armquist_RequestSupport Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterBoss_Armquist.RequestSupport_Airforce
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGNPCCharacterBoss_Armquist::RequestSupport_Airforce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Armquist", "RequestSupport_Airforce");

	Params::BFGNPCCharacterBoss_Armquist_RequestSupport_Airforce Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterBoss_Armquist.RequestSupport_Navy
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGNPCCharacterBoss_Armquist::RequestSupport_Navy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Armquist", "RequestSupport_Navy");

	Params::BFGNPCCharacterBoss_Armquist_RequestSupport_Navy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterBoss_Armquist.SetupLeapComponents
// (Final, Native, Private)

void ABFGNPCCharacterBoss_Armquist::SetupLeapComponents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Armquist", "SetupLeapComponents");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Armquist.SetupLeapSplinePoints
// (Final, Native, Private, HasDefaults)
// Parameters:
// struct FVector                          _vNextPhaseLocation                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterBoss_Armquist::SetupLeapSplinePoints(const struct FVector& _vNextPhaseLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Armquist", "SetupLeapSplinePoints");

	Params::BFGNPCCharacterBoss_Armquist_SetupLeapSplinePoints Parms{};

	Parms._vNextPhaseLocation = std::move(_vNextPhaseLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Armquist.SpawnAirMines
// (Final, Native, Public)

void ABFGNPCCharacterBoss_Armquist::SpawnAirMines()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Armquist", "SpawnAirMines");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Armquist.SpawnBossAOE
// (Final, Native, Public)
// Parameters:
// TSubclassOf<class ABFGAOE_Boss>         _pAOEClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bUseWarningComponents                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fTelegraphTime                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterBoss_Armquist::SpawnBossAOE(TSubclassOf<class ABFGAOE_Boss> _pAOEClass, bool _bUseWarningComponents, float _fTelegraphTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Armquist", "SpawnBossAOE");

	Params::BFGNPCCharacterBoss_Armquist_SpawnBossAOE Parms{};

	Parms._pAOEClass = _pAOEClass;
	Parms._bUseWarningComponents = _bUseWarningComponents;
	Parms._fTelegraphTime = _fTelegraphTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Armquist.TryRetractRocketLaunchers
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGNPCCharacterBoss_Armquist::TryRetractRocketLaunchers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Armquist", "TryRetractRocketLaunchers");

	Params::BFGNPCCharacterBoss_Armquist_TryRetractRocketLaunchers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterBoss_Armquist.UpdateLeapStartingPosition
// (Final, Native, Private, HasDefaults)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ABFGNPCCharacterBoss_Armquist::UpdateLeapStartingPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Armquist", "UpdateLeapStartingPosition");

	Params::BFGNPCCharacterBoss_Armquist_UpdateLeapStartingPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterBoss_Armquist.GetOverheatManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGActorComponent_OverheatManager*ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGActorComponent_OverheatManager* ABFGNPCCharacterBoss_Armquist::GetOverheatManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Armquist", "GetOverheatManager");

	Params::BFGNPCCharacterBoss_Armquist_GetOverheatManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterBoss_Roboprez.OnPlayerUFOEntered
// (Final, Native, Protected)

void ABFGNPCCharacterBoss_Roboprez::OnPlayerUFOEntered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Roboprez", "OnPlayerUFOEntered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Roboprez.OnPlayerUFOTakeOffComplete
// (Final, Native, Protected)

void ABFGNPCCharacterBoss_Roboprez::OnPlayerUFOTakeOffComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Roboprez", "OnPlayerUFOTakeOffComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Roboprez.OnWeakSpotHit
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void ABFGNPCCharacterBoss_Roboprez::OnWeakSpotHit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Roboprez", "OnWeakSpotHit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGNPCCharacterBoss_Silhouette.BeginBossAction_Evasion
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector                          _vEvasionLocation                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterBoss_Silhouette::BeginBossAction_Evasion(const struct FVector& _vEvasionLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Silhouette", "BeginBossAction_Evasion");

	Params::BFGNPCCharacterBoss_Silhouette_BeginBossAction_Evasion Parms{};

	Parms._vEvasionLocation = std::move(_vEvasionLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Silhouette.BeginBossAction_NasalProbe
// (Final, Native, Public)

void ABFGNPCCharacterBoss_Silhouette::BeginBossAction_NasalProbe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Silhouette", "BeginBossAction_NasalProbe");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Silhouette.BeginBossAction_NasalProbe_EndSequence
// (Final, Native, Public)
// Parameters:
// bool                                    _bForced                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterBoss_Silhouette::BeginBossAction_NasalProbe_EndSequence(bool _bForced)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Silhouette", "BeginBossAction_NasalProbe_EndSequence");

	Params::BFGNPCCharacterBoss_Silhouette_BeginBossAction_NasalProbe_EndSequence Parms{};

	Parms._bForced = _bForced;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Silhouette.CallBossAction_Evasion
// (Final, Native, Public)

void ABFGNPCCharacterBoss_Silhouette::CallBossAction_Evasion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Silhouette", "CallBossAction_Evasion");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Silhouette.CallBossAction_NasalProbe
// (Final, Native, Public)

void ABFGNPCCharacterBoss_Silhouette::CallBossAction_NasalProbe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Silhouette", "CallBossAction_NasalProbe");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Silhouette.ChargeNasalProbe
// (Final, Native, Public)

void ABFGNPCCharacterBoss_Silhouette::ChargeNasalProbe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Silhouette", "ChargeNasalProbe");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Silhouette.EndBossAction_NasalProbe_EndSequence
// (Final, Native, Public)

void ABFGNPCCharacterBoss_Silhouette::EndBossAction_NasalProbe_EndSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Silhouette", "EndBossAction_NasalProbe_EndSequence");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Silhouette.EvasionTimeline_VectorCurveInterpolation
// (Final, Native, Private)
// Parameters:
// float                                   Val                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterBoss_Silhouette::EvasionTimeline_VectorCurveInterpolation(float Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Silhouette", "EvasionTimeline_VectorCurveInterpolation");

	Params::BFGNPCCharacterBoss_Silhouette_EvasionTimeline_VectorCurveInterpolation Parms{};

	Parms.Val = Val;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Silhouette.FireNasalProbe
// (Final, Native, Public)

void ABFGNPCCharacterBoss_Silhouette::FireNasalProbe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Silhouette", "FireNasalProbe");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Silhouette.NasalProbeTelegraphEnd
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void ABFGNPCCharacterBoss_Silhouette::NasalProbeTelegraphEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Silhouette", "NasalProbeTelegraphEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGNPCCharacterBoss_Silhouette.NasalProbeTelegraphStart
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void ABFGNPCCharacterBoss_Silhouette::NasalProbeTelegraphStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Silhouette", "NasalProbeTelegraphStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGNPCCharacterBoss_Silhouette.OnBossActionLandingSequence
// (Final, Native, Public)

void ABFGNPCCharacterBoss_Silhouette::OnBossActionLandingSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Silhouette", "OnBossActionLandingSequence");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Silhouette.OnEvadeComplete
// (Final, Native, Private)

void ABFGNPCCharacterBoss_Silhouette::OnEvadeComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Silhouette", "OnEvadeComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Silhouette.OnHoverStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// EBFGLevitationState                     _eNewHoverState                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterBoss_Silhouette::OnHoverStateChanged(EBFGLevitationState _eNewHoverState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Silhouette", "OnHoverStateChanged");

	Params::BFGNPCCharacterBoss_Silhouette_OnHoverStateChanged Parms{};

	Parms._eNewHoverState = _eNewHoverState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGNPCCharacterBoss_Silhouette.OnPSIStationDeathStatChanged
// (Final, Native, Public)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGActorStat_Bool*               _pStat                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterBoss_Silhouette::OnPSIStationDeathStatChanged(class AActor* _pActor, class UBFGActorStat_Bool* _pStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Silhouette", "OnPSIStationDeathStatChanged");

	Params::BFGNPCCharacterBoss_Silhouette_OnPSIStationDeathStatChanged Parms{};

	Parms._pActor = _pActor;
	Parms._pStat = _pStat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Silhouette.OnShieldCriticalStateExpired
// (Final, Native, Private)

void ABFGNPCCharacterBoss_Silhouette::OnShieldCriticalStateExpired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Silhouette", "OnShieldCriticalStateExpired");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Silhouette.OnShieldDamaged
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// class UBFGActorComponent_PawnDamage*    _pPawnDamage                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fDamage                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pDamageCauser                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGDamageType*                   _pDamageType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _rShotDirection                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       _oHitResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ABFGNPCCharacterBoss_Silhouette::OnShieldDamaged(class UBFGActorComponent_PawnDamage* _pPawnDamage, float _fDamage, class AActor* _pDamageCauser, class UBFGDamageType* _pDamageType, const struct FVector& _rShotDirection, const struct FHitResult& _oHitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Silhouette", "OnShieldDamaged");

	Params::BFGNPCCharacterBoss_Silhouette_OnShieldDamaged Parms{};

	Parms._pPawnDamage = _pPawnDamage;
	Parms._fDamage = _fDamage;
	Parms._pDamageCauser = _pDamageCauser;
	Parms._pDamageType = _pDamageType;
	Parms._rShotDirection = std::move(_rShotDirection);
	Parms._oHitResult = std::move(_oHitResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Silhouette.OnShieldStatChanged
// (Final, Native, Private)
// Parameters:
// class AActor*                           _pOwner                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGActorStat_Float*              _pStat                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterBoss_Silhouette::OnShieldStatChanged(class AActor* _pOwner, class UBFGActorStat_Float* _pStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Silhouette", "OnShieldStatChanged");

	Params::BFGNPCCharacterBoss_Silhouette_OnShieldStatChanged Parms{};

	Parms._pOwner = _pOwner;
	Parms._pStat = _pStat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Silhouette.OnSpinWindupComplete
// (Final, Native, Private)

void ABFGNPCCharacterBoss_Silhouette::OnSpinWindupComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Silhouette", "OnSpinWindupComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Silhouette.SetupEvasionComponents
// (Final, Native, Private)

void ABFGNPCCharacterBoss_Silhouette::SetupEvasionComponents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Silhouette", "SetupEvasionComponents");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Silhouette.SetupEvasionSplinePoints
// (Final, Native, Private, HasDefaults)
// Parameters:
// struct FVector                          _vEndLocation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterBoss_Silhouette::SetupEvasionSplinePoints(const struct FVector& _vEndLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Silhouette", "SetupEvasionSplinePoints");

	Params::BFGNPCCharacterBoss_Silhouette_SetupEvasionSplinePoints Parms{};

	Parms._vEndLocation = std::move(_vEndLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Silhouette.StartSpin
// (Final, Native, Private)

void ABFGNPCCharacterBoss_Silhouette::StartSpin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Silhouette", "StartSpin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterBoss_Silhouette.StopSpin
// (Final, Native, Private)

void ABFGNPCCharacterBoss_Silhouette::StopSpin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterBoss_Silhouette", "StopSpin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterEnemy_Mine.OnPlayerEnteredRange
// (Event, Protected, BlueprintEvent)

void ABFGNPCCharacterEnemy_Mine::OnPlayerEnteredRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterEnemy_Mine", "OnPlayerEnteredRange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGNPCCharacterEnemy_Mine.OnPlayerLeftRange
// (Event, Protected, BlueprintEvent)

void ABFGNPCCharacterEnemy_Mine::OnPlayerLeftRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterEnemy_Mine", "OnPlayerLeftRange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGNPCCharacterEnemy_Mine.OnTriggerExplosion
// (Event, Protected, BlueprintEvent)

void ABFGNPCCharacterEnemy_Mine::OnTriggerExplosion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterEnemy_Mine", "OnTriggerExplosion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGNPCCharacterEnemy_Mine.GetExplosionProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABFGNPCCharacterEnemy_Mine::GetExplosionProgress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterEnemy_Mine", "GetExplosionProgress");

	Params::BFGNPCCharacterEnemy_Mine_GetExplosionProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterEnemy_Mine_ParticleExploder.OnTriggered
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void ABFGNPCCharacterEnemy_Mine_ParticleExploder::OnTriggered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterEnemy_Mine_ParticleExploder", "OnTriggered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGNPCCharacterEnemy_Mine_ParticleExploder.GetCountdownDuration
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABFGNPCCharacterEnemy_Mine_ParticleExploder::GetCountdownDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterEnemy_Mine_ParticleExploder", "GetCountdownDuration");

	Params::BFGNPCCharacterEnemy_Mine_ParticleExploder_GetCountdownDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterEnemy_Mine_Roboprez.OnDetonated
// (Final, Native, Public)
// Parameters:
// class ABFGWeapon*                       _pWeapon                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterEnemy_Mine_Roboprez::OnDetonated(class ABFGWeapon* _pWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterEnemy_Mine_Roboprez", "OnDetonated");

	Params::BFGNPCCharacterEnemy_Mine_Roboprez_OnDetonated Parms{};

	Parms._pWeapon = _pWeapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterEnemy_Mine_Roboprez.StartDecline
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABFGNPCCharacterEnemy_Mine_Roboprez::StartDecline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterEnemy_Mine_Roboprez", "StartDecline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGNPCCharacterEnemy_Mine_Roboprez.GetSpawnFinalPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ABFGNPCCharacterEnemy_Mine_Roboprez::GetSpawnFinalPosition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterEnemy_Mine_Roboprez", "GetSpawnFinalPosition");

	Params::BFGNPCCharacterEnemy_Mine_Roboprez_GetSpawnFinalPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterEnemy_TeslaCoil.OnChargeStart
// (Event, Public, BlueprintEvent)

void ABFGNPCCharacterEnemy_TeslaCoil::OnChargeStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterEnemy_TeslaCoil", "OnChargeStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGNPCCharacterEnemy_TeslaCoil.OnChargeStop
// (Event, Public, BlueprintEvent)

void ABFGNPCCharacterEnemy_TeslaCoil::OnChargeStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterEnemy_TeslaCoil", "OnChargeStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGNPCCharacterEnemy_TeslaCoil.OnCooldownFinished
// (Event, Public, BlueprintEvent)

void ABFGNPCCharacterEnemy_TeslaCoil::OnCooldownFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterEnemy_TeslaCoil", "OnCooldownFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGNPCCharacterEnemy_TeslaCoil.OnCooldownStarted
// (Event, Public, BlueprintEvent)

void ABFGNPCCharacterEnemy_TeslaCoil::OnCooldownStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterEnemy_TeslaCoil", "OnCooldownStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGNPCCharacterEnemy_TeslaCoil.OnFireAttack
// (Event, Public, BlueprintEvent)

void ABFGNPCCharacterEnemy_TeslaCoil::OnFireAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterEnemy_TeslaCoil", "OnFireAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGNPCCharacterEnemy_TeslaCoil.GetCurrentCharge
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABFGNPCCharacterEnemy_TeslaCoil::GetCurrentCharge() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterEnemy_TeslaCoil", "GetCurrentCharge");

	Params::BFGNPCCharacterEnemy_TeslaCoil_GetCurrentCharge Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterEnemy_TeslaCoil.GetCurrentCooldown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABFGNPCCharacterEnemy_TeslaCoil::GetCurrentCooldown() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterEnemy_TeslaCoil", "GetCurrentCooldown");

	Params::BFGNPCCharacterEnemy_TeslaCoil_GetCurrentCooldown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterEnemy_TeslaCoil.GetIsCharging
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGNPCCharacterEnemy_TeslaCoil::GetIsCharging() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterEnemy_TeslaCoil", "GetIsCharging");

	Params::BFGNPCCharacterEnemy_TeslaCoil_GetIsCharging Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterEnemy_TeslaCoil.GetIsPlayerInRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGNPCCharacterEnemy_TeslaCoil::GetIsPlayerInRange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterEnemy_TeslaCoil", "GetIsPlayerInRange");

	Params::BFGNPCCharacterEnemy_TeslaCoil_GetIsPlayerInRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGNPCCharacterPox.OnPoxLabEnter
// (Final, Native, Public, BlueprintCallable)

void ABFGNPCCharacterPox::OnPoxLabEnter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterPox", "OnPoxLabEnter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterPox.OnPoxLabExit
// (Final, Native, Public, BlueprintCallable)

void ABFGNPCCharacterPox::OnPoxLabExit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterPox", "OnPoxLabExit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCCharacterPox.OnSFX_NarrativeSequence_Start
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             _oSequenceName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGNPCCharacterPox::OnSFX_NarrativeSequence_Start(class FName _oSequenceName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterPox", "OnSFX_NarrativeSequence_Start");

	Params::BFGNPCCharacterPox_OnSFX_NarrativeSequence_Start Parms{};

	Parms._oSequenceName = _oSequenceName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGNPCCharacterPox.OnSFX_NarrativeSequence_Stop
// (Event, Protected, BlueprintEvent)

void ABFGNPCCharacterPox::OnSFX_NarrativeSequence_Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCCharacterPox", "OnSFX_NarrativeSequence_Stop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGTutorialManager.DismissTutorialOnTop
// (Final, Native, Public, BlueprintCallable)

void UBFGTutorialManager::DismissTutorialOnTop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTutorialManager", "DismissTutorialOnTop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTutorialManager.ExpandTutorialOnTop
// (Final, Native, Public, BlueprintCallable)

void UBFGTutorialManager::ExpandTutorialOnTop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTutorialManager", "ExpandTutorialOnTop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTutorialManager.FindTutorial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGDataAsset_TutorialPage*       _pContext                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGWidget_TutorialPage*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGWidget_TutorialPage* UBFGTutorialManager::FindTutorial(class UBFGDataAsset_TutorialPage* _pContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTutorialManager", "FindTutorial");

	Params::BFGTutorialManager_FindTutorial Parms{};

	Parms._pContext = _pContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGTutorialManager.GetTutorialOnTop
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGWidget_TutorialPage*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGWidget_TutorialPage* UBFGTutorialManager::GetTutorialOnTop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTutorialManager", "GetTutorialOnTop");

	Params::BFGTutorialManager_GetTutorialOnTop Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGTutorialManager.OnInputDeviceChanged
// (Final, Native, Protected)
// Parameters:
// bool                                    _bIsGamepad                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGTutorialManager::OnInputDeviceChanged(bool _bIsGamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTutorialManager", "OnInputDeviceChanged");

	Params::BFGTutorialManager_OnInputDeviceChanged Parms{};

	Parms._bIsGamepad = _bIsGamepad;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTutorialManager.OnTutorialHandbookClosed
// (Final, Native, Protected)
// Parameters:
// class UBFGWidget_TutorialPage*          _pSource                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGTutorialManager::OnTutorialHandbookClosed(class UBFGWidget_TutorialPage* _pSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTutorialManager", "OnTutorialHandbookClosed");

	Params::BFGTutorialManager_OnTutorialHandbookClosed Parms{};

	Parms._pSource = _pSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTutorialManager.OnTutorialIndicatorAnimationStateChanged
// (Final, Native, Protected)
// Parameters:
// EBFGTutorialIndicatorAnimationState     _eCurrentState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGTutorialManager::OnTutorialIndicatorAnimationStateChanged(EBFGTutorialIndicatorAnimationState _eCurrentState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTutorialManager", "OnTutorialIndicatorAnimationStateChanged");

	Params::BFGTutorialManager_OnTutorialIndicatorAnimationStateChanged Parms{};

	Parms._eCurrentState = _eCurrentState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTutorialManager.OnTutorialPageStyleTransitionFinished
// (Final, Native, Protected)
// Parameters:
// class UBFGWidget_TutorialPage*          _pSource                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBFGTutorialPageDisplayStyle            _eDisplayStyle                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGTutorialManager::OnTutorialPageStyleTransitionFinished(class UBFGWidget_TutorialPage* _pSource, EBFGTutorialPageDisplayStyle _eDisplayStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTutorialManager", "OnTutorialPageStyleTransitionFinished");

	Params::BFGTutorialManager_OnTutorialPageStyleTransitionFinished Parms{};

	Parms._pSource = _pSource;
	Parms._eDisplayStyle = _eDisplayStyle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTutorialManager.OpenHandbookWithTutorialOnTop
// (Final, Native, Public, BlueprintCallable)

void UBFGTutorialManager::OpenHandbookWithTutorialOnTop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTutorialManager", "OpenHandbookWithTutorialOnTop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTutorialManager.PopTutorial
// (Final, Native, Public, BlueprintCallable)

void UBFGTutorialManager::PopTutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTutorialManager", "PopTutorial");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTutorialManager.PushTutorial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGDataAsset_TutorialPage*       _pContext                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGTutorialManager::PushTutorial(class UBFGDataAsset_TutorialPage* _pContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTutorialManager", "PushTutorial");

	Params::BFGTutorialManager_PushTutorial Parms{};

	Parms._pContext = _pContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTutorialManager.RemoveAllTutorials
// (Final, Native, Public, BlueprintCallable)

void UBFGTutorialManager::RemoveAllTutorials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTutorialManager", "RemoveAllTutorials");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTutorialManager.RemoveTutorial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGDataAsset_TutorialPage*       _pContext                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGTutorialManager::RemoveTutorial(class UBFGDataAsset_TutorialPage* _pContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTutorialManager", "RemoveTutorial");

	Params::BFGTutorialManager_RemoveTutorial Parms{};

	Parms._pContext = _pContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTutorialManager.SetTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class IBFGTutorialPageTarget>_pTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)

void UBFGTutorialManager::SetTarget(TScriptInterface<class IBFGTutorialPageTarget> _pTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTutorialManager", "SetTarget");

	Params::BFGTutorialManager_SetTarget Parms{};

	Parms._pTarget = _pTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTutorialManager.ShowPausedTutorial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UBFGDataAsset_PausedTutorial>_pTutorial                                             (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGTutorialManager::ShowPausedTutorial(TSoftObjectPtr<class UBFGDataAsset_PausedTutorial> _pTutorial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTutorialManager", "ShowPausedTutorial");

	Params::BFGTutorialManager_ShowPausedTutorial Parms{};

	Parms._pTutorial = _pTutorial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTutorialManager.ShrinkTutorialOnTop
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bHinted                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGTutorialManager::ShrinkTutorialOnTop(bool _bHinted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTutorialManager", "ShrinkTutorialOnTop");

	Params::BFGTutorialManager_ShrinkTutorialOnTop Parms{};

	Parms._bHinted = _bHinted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTutorialManager.UnlockTutorial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGDataAsset_TutorialPage*       _pTutorial                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGTutorialManager::UnlockTutorial(class UBFGDataAsset_TutorialPage* _pTutorial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTutorialManager", "UnlockTutorial");

	Params::BFGTutorialManager_UnlockTutorial Parms{};

	Parms._pTutorial = _pTutorial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGNPCLowRes.GetAnimationState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABFGNPCLowRes::GetAnimationState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGNPCLowRes", "GetAnimationState");

	Params::BFGNPCLowRes_GetAnimationState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVoiceoverCharacterInterface.GetVoice
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName IBFGVoiceoverCharacterInterface::GetVoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVoiceoverCharacterInterface", "GetVoice");

	Params::BFGVoiceoverCharacterInterface_GetVoice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGObjectiveInterface.GetObjectiveMarkerAttachment
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// struct FBFGObjectiveMarkerInfoEntry     _entry                                                 (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FBFGObjectiveMarkerInfoEntry     ReturnValue                                            (Parm, OutParm, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

struct FBFGObjectiveMarkerInfoEntry IBFGObjectiveInterface::GetObjectiveMarkerAttachment(const struct FBFGObjectiveMarkerInfoEntry& _entry) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGObjectiveInterface", "GetObjectiveMarkerAttachment");

	Params::BFGObjectiveInterface_GetObjectiveMarkerAttachment Parms{};

	Parms._entry = std::move(_entry);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGObjectiveInterface.IsObjectiveMarkerDisabled
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IBFGObjectiveInterface::IsObjectiveMarkerDisabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGObjectiveInterface", "IsObjectiveMarkerDisabled");

	Params::BFGObjectiveInterface_IsObjectiveMarkerDisabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction BFGCore.BFGObjectiveMarker.Action__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ABFGObjectiveMarker::Action__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGObjectiveMarker", "Action__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction BFGCore.BFGObjectiveMarker.ActionBool__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    _bEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGObjectiveMarker::ActionBool__DelegateSignature(bool _bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGObjectiveMarker", "ActionBool__DelegateSignature");

	Params::BFGObjectiveMarker_ActionBool__DelegateSignature Parms{};

	Parms._bEnabled = _bEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BFGCore.BFGObjectiveMarker.ActionMarkerInfo__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// struct FBFGObjectiveMarkerInfoEntry     _markerInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ABFGObjectiveMarker::ActionMarkerInfo__DelegateSignature(const struct FBFGObjectiveMarkerInfoEntry& _markerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGObjectiveMarker", "ActionMarkerInfo__DelegateSignature");

	Params::BFGObjectiveMarker_ActionMarkerInfo__DelegateSignature Parms{};

	Parms._markerInfo = std::move(_markerInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGObjectiveMarker.AttachToObjective
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  _pComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _strSocket                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGObjectiveMarker::AttachToObjective(class AActor* _pActor, class USceneComponent* _pComponent, class FName _strSocket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGObjectiveMarker", "AttachToObjective");

	Params::BFGObjectiveMarker_AttachToObjective Parms{};

	Parms._pActor = _pActor;
	Parms._pComponent = _pComponent;
	Parms._strSocket = _strSocket;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGObjectiveMarker.HideMarker
// (Event, Protected, BlueprintEvent)

void ABFGObjectiveMarker::HideMarker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGObjectiveMarker", "HideMarker");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGObjectiveMarker.RequestRemoveMarker
// (Native, Event, Public, BlueprintEvent)

void ABFGObjectiveMarker::RequestRemoveMarker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGObjectiveMarker", "RequestRemoveMarker");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGObjectiveMarker.ShowMarker
// (Event, Protected, BlueprintEvent)

void ABFGObjectiveMarker::ShowMarker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGObjectiveMarker", "ShowMarker");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGObjectiveMarker.GetMarkerInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FBFGObjectiveMarkerInfoEntryReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

const struct FBFGObjectiveMarkerInfoEntry ABFGObjectiveMarker::GetMarkerInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGObjectiveMarker", "GetMarkerInfo");

	Params::BFGObjectiveMarker_GetMarkerInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGObjectiveMarkerInstanceList.OnDeathStatChanged
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pOwner                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGActorStat_Bool*               _pStat                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGObjectiveMarkerInstanceList::OnDeathStatChanged(class AActor* _pOwner, class UBFGActorStat_Bool* _pStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGObjectiveMarkerInstanceList", "OnDeathStatChanged");

	Params::BFGObjectiveMarkerInstanceList_OnDeathStatChanged Parms{};

	Parms._pOwner = _pOwner;
	Parms._pStat = _pStat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGObjectiveMarkerSettings.GetSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBFGObjectiveMarkerSettings*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGObjectiveMarkerSettings* UBFGObjectiveMarkerSettings::GetSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGObjectiveMarkerSettings", "GetSettings");

	Params::BFGObjectiveMarkerSettings_GetSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGOceanManager.GetOceanActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ABFGActorOcean*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGActorOcean* UBFGOceanManager::GetOceanActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGOceanManager", "GetOceanActor");

	Params::BFGOceanManager_GetOceanActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction BFGCore.BFGOverheadWidgetManager.ActionRadarUpdate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UBFGOverheadWidgetManager*        _pRadarManager                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGOverheadWidgetManager::ActionRadarUpdate__DelegateSignature(class UBFGOverheadWidgetManager* _pRadarManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGOverheadWidgetManager", "ActionRadarUpdate__DelegateSignature");

	Params::BFGOverheadWidgetManager_ActionRadarUpdate__DelegateSignature Parms{};

	Parms._pRadarManager = _pRadarManager;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGOverheadWidgetManager.AddWidgetAtLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          _vLocation                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _Text                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGOverheadWidgetManager::AddWidgetAtLocation(const struct FVector& _vLocation, const class FString& _Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGOverheadWidgetManager", "AddWidgetAtLocation");

	Params::BFGOverheadWidgetManager_AddWidgetAtLocation Parms{};

	Parms._vLocation = std::move(_vLocation);
	Parms._Text = std::move(_Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGOverheadWidgetManager.AddWidgetAttachedToActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _pAnchor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _Text                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGOverheadWidgetManager::AddWidgetAttachedToActor(class AActor* _pAnchor, const class FString& _Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGOverheadWidgetManager", "AddWidgetAttachedToActor");

	Params::BFGOverheadWidgetManager_AddWidgetAttachedToActor Parms{};

	Parms._pAnchor = _pAnchor;
	Parms._Text = std::move(_Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPauseManager.GetGameInstance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGGameInstance*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGGameInstance* UBFGPauseManager::GetGameInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPauseManager", "GetGameInstance");

	Params::BFGPauseManager_GetGameInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPauseManager.IsPaused
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGPauseManager::IsPaused() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPauseManager", "IsPaused");

	Params::BFGPauseManager_IsPaused Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPerformanceLocation.UpdateCheckpointLocations
// (Final, Native, Public, BlueprintCallable)

void ABFGPerformanceLocation::UpdateCheckpointLocations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPerformanceLocation", "UpdateCheckpointLocations");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPlayCrowdLifeStationAnim.OnAnimationPop
// (Final, Native, Public, HasOutParams)
// Parameters:
// TScriptInterface<class IBFGInteractAnimationPlayerInterface>_pAnimPlayer                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
// struct FBFGInteractAnimationData        _newAnimData                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FBFGInteractAnimationData        _oldAnimData                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UBFGPlayCrowdLifeStationAnim::OnAnimationPop(TScriptInterface<class IBFGInteractAnimationPlayerInterface> _pAnimPlayer, const struct FBFGInteractAnimationData& _newAnimData, const struct FBFGInteractAnimationData& _oldAnimData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayCrowdLifeStationAnim", "OnAnimationPop");

	Params::BFGPlayCrowdLifeStationAnim_OnAnimationPop Parms{};

	Parms._pAnimPlayer = _pAnimPlayer;
	Parms._newAnimData = std::move(_newAnimData);
	Parms._oldAnimData = std::move(_oldAnimData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPlayerCharacter.OnDeathStateChanged
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGActorStat_Bool*               _pStat                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGPlayerCharacter::OnDeathStateChanged(class AActor* _pActor, class UBFGActorStat_Bool* _pStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerCharacter", "OnDeathStateChanged");

	Params::BFGPlayerCharacter_OnDeathStateChanged Parms{};

	Parms._pActor = _pActor;
	Parms._pStat = _pStat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPlayerCharacter.OnEnteredUFO
// (Event, Public, BlueprintEvent)

void ABFGPlayerCharacter::OnEnteredUFO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerCharacter", "OnEnteredUFO");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGPlayerCharacter.OnEnteredWater
// (Event, Protected, BlueprintEvent)

void ABFGPlayerCharacter::OnEnteredWater()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerCharacter", "OnEnteredWater");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGPlayerCharacter.OnLeftWater
// (Event, Protected, BlueprintEvent)

void ABFGPlayerCharacter::OnLeftWater()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerCharacter", "OnLeftWater");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGPlayerCharacter.OnShieldStatChanged
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGActorStat_Float*              _pStat                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGPlayerCharacter::OnShieldStatChanged(class AActor* _pActor, class UBFGActorStat_Float* _pStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerCharacter", "OnShieldStatChanged");

	Params::BFGPlayerCharacter_OnShieldStatChanged Parms{};

	Parms._pActor = _pActor;
	Parms._pStat = _pStat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPlayerCharacter.OnShowTriggerZoneMessage
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bIsOutside                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGPlayerCharacter::OnShowTriggerZoneMessage(bool _bIsOutside)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerCharacter", "OnShowTriggerZoneMessage");

	Params::BFGPlayerCharacter_OnShowTriggerZoneMessage Parms{};

	Parms._bIsOutside = _bIsOutside;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGPlayerCharacter.OnSkinChanged
// (Event, Protected, BlueprintEvent)

void ABFGPlayerCharacter::OnSkinChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerCharacter", "OnSkinChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGPlayerCharacter.GetIsInWater
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGPlayerCharacter::GetIsInWater() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerCharacter", "GetIsInWater");

	Params::BFGPlayerCharacter_GetIsInWater Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerCharacter.GetSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGPlayerCharacter_Settings*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGPlayerCharacter_Settings* ABFGPlayerCharacter::GetSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerCharacter", "GetSettings");

	Params::BFGPlayerCharacter_GetSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerCharacter.GetWaterInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FBFGWaterPlaneInfo               ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FBFGWaterPlaneInfo ABFGPlayerCharacter::GetWaterInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerCharacter", "GetWaterInfo");

	Params::BFGPlayerCharacter_GetWaterInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState.GetPlayerStateUnlocks
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pWorldContext                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGPlayerState_Unlocks*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGPlayerState_Unlocks* ABFGPlayerState::GetPlayerStateUnlocks(const class UObject* _pWorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGPlayerState", "GetPlayerStateUnlocks");

	Params::BFGPlayerState_GetPlayerStateUnlocks Parms{};

	Parms._pWorldContext = _pWorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState.AddAmmunitionByType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EItemValueTypeEnum                      _eType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iAmount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGPlayerState::AddAmmunitionByType(EItemValueTypeEnum _eType, int32 _iAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState", "AddAmmunitionByType");

	Params::BFGPlayerState_AddAmmunitionByType Parms{};

	Parms._eType = _eType;
	Parms._iAmount = _iAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPlayerState.AddAnalProbeAmmunition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _iAmount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGPlayerState::AddAnalProbeAmmunition(int32 _iAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState", "AddAnalProbeAmmunition");

	Params::BFGPlayerState_AddAnalProbeAmmunition Parms{};

	Parms._iAmount = _iAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPlayerState.AddDisintegratorRayAmmunition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _iAmount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGPlayerState::AddDisintegratorRayAmmunition(int32 _iAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState", "AddDisintegratorRayAmmunition");

	Params::BFGPlayerState_AddDisintegratorRayAmmunition Parms{};

	Parms._iAmount = _iAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPlayerState.AddIonDetonatorAmmunition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _iAmount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGPlayerState::AddIonDetonatorAmmunition(int32 _iAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState", "AddIonDetonatorAmmunition");

	Params::BFGPlayerState_AddIonDetonatorAmmunition Parms{};

	Parms._iAmount = _iAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPlayerState.AddSaucerQuantumDeconstructorAmmunition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _iAmount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGPlayerState::AddSaucerQuantumDeconstructorAmmunition(int32 _iAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState", "AddSaucerQuantumDeconstructorAmmunition");

	Params::BFGPlayerState_AddSaucerQuantumDeconstructorAmmunition Parms{};

	Parms._iAmount = _iAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPlayerState.AddSaucerSonicBoomAmmunition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _iAmount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGPlayerState::AddSaucerSonicBoomAmmunition(int32 _iAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState", "AddSaucerSonicBoomAmmunition");

	Params::BFGPlayerState_AddSaucerSonicBoomAmmunition Parms{};

	Parms._iAmount = _iAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPlayerState.GetAmmunitionByType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EItemValueTypeEnum                      _eType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABFGPlayerState::GetAmmunitionByType(EItemValueTypeEnum _eType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState", "GetAmmunitionByType");

	Params::BFGPlayerState_GetAmmunitionByType Parms{};

	Parms._eType = _eType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState.GetMaxAmmunitionByType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EItemValueTypeEnum                      _eType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABFGPlayerState::GetMaxAmmunitionByType(EItemValueTypeEnum _eType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState", "GetMaxAmmunitionByType");

	Params::BFGPlayerState_GetMaxAmmunitionByType Parms{};

	Parms._eType = _eType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState.GetWeaponByAmmunitionType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EItemValueTypeEnum                      _eType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ABFGWeapon*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGWeapon* ABFGPlayerState::GetWeaponByAmmunitionType(EItemValueTypeEnum _eType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState", "GetWeaponByAmmunitionType");

	Params::BFGPlayerState_GetWeaponByAmmunitionType Parms{};

	Parms._eType = _eType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState.SetSelectedSkin
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     _oNewSkinTag                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bIsSkinSelectionMenu                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bByUserChanged                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGPlayerState::SetSelectedSkin(const struct FGameplayTag& _oNewSkinTag, bool _bIsSkinSelectionMenu, bool _bByUserChanged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState", "SetSelectedSkin");

	Params::BFGPlayerState_SetSelectedSkin Parms{};

	Parms._oNewSkinTag = std::move(_oNewSkinTag);
	Parms._bIsSkinSelectionMenu = _bIsSkinSelectionMenu;
	Parms._bByUserChanged = _bByUserChanged;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPlayerState.GetAnalProbAmmunition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABFGPlayerState::GetAnalProbAmmunition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState", "GetAnalProbAmmunition");

	Params::BFGPlayerState_GetAnalProbAmmunition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState.GetDisintegratorAmmunition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABFGPlayerState::GetDisintegratorAmmunition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState", "GetDisintegratorAmmunition");

	Params::BFGPlayerState_GetDisintegratorAmmunition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState.GetIonDetonatorAmmunition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABFGPlayerState::GetIonDetonatorAmmunition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState", "GetIonDetonatorAmmunition");

	Params::BFGPlayerState_GetIonDetonatorAmmunition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState.GetSaucerQuantumAmmunition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABFGPlayerState::GetSaucerQuantumAmmunition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState", "GetSaucerQuantumAmmunition");

	Params::BFGPlayerState_GetSaucerQuantumAmmunition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState.GetSaucerSonicBoomAmmunition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABFGPlayerState::GetSaucerSonicBoomAmmunition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState", "GetSaucerSonicBoomAmmunition");

	Params::BFGPlayerState_GetSaucerSonicBoomAmmunition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState.GetSelectedSkin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag ABFGPlayerState::GetSelectedSkin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState", "GetSelectedSkin");

	Params::BFGPlayerState_GetSelectedSkin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState.GetUnlocks
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGPlayerState_Unlocks*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGPlayerState_Unlocks* ABFGPlayerState::GetUnlocks() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState", "GetUnlocks");

	Params::BFGPlayerState_GetUnlocks Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState.GetUpgrades
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGPlayerState_Upgrades*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGPlayerState_Upgrades* ABFGPlayerState::GetUpgrades() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState", "GetUpgrades");

	Params::BFGPlayerState_GetUpgrades Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState_Unlocks.PlayerState_AddNameToNotificationList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pWorldContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _name                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGPlayerState_Unlocks::PlayerState_AddNameToNotificationList(class UObject* _pWorldContext, class FName _name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGPlayerState_Unlocks", "PlayerState_AddNameToNotificationList");

	Params::BFGPlayerState_Unlocks_PlayerState_AddNameToNotificationList Parms{};

	Parms._pWorldContext = _pWorldContext;
	Parms._name = _name;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPlayerState_Unlocks.PlayerState_AddTagtoNotificationList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pWorldContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     _tags                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGPlayerState_Unlocks::PlayerState_AddTagtoNotificationList(class UObject* _pWorldContext, const struct FGameplayTag& _tags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGPlayerState_Unlocks", "PlayerState_AddTagtoNotificationList");

	Params::BFGPlayerState_Unlocks_PlayerState_AddTagtoNotificationList Parms{};

	Parms._pWorldContext = _pWorldContext;
	Parms._tags = std::move(_tags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPlayerState_Unlocks.PlayerState_HasNameInNotificationList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pWorldContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _name                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGPlayerState_Unlocks::PlayerState_HasNameInNotificationList(class UObject* _pWorldContext, class FName _name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGPlayerState_Unlocks", "PlayerState_HasNameInNotificationList");

	Params::BFGPlayerState_Unlocks_PlayerState_HasNameInNotificationList Parms{};

	Parms._pWorldContext = _pWorldContext;
	Parms._name = _name;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState_Unlocks.PlayerState_HasTaginNotificationList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pWorldContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     _tags                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGPlayerState_Unlocks::PlayerState_HasTaginNotificationList(class UObject* _pWorldContext, const struct FGameplayTag& _tags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGPlayerState_Unlocks", "PlayerState_HasTaginNotificationList");

	Params::BFGPlayerState_Unlocks_PlayerState_HasTaginNotificationList Parms{};

	Parms._pWorldContext = _pWorldContext;
	Parms._tags = std::move(_tags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState_Unlocks.PlayerState_IsUnlockedTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pWorldContext                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     _tag                                                   (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGPlayerState_Unlocks::PlayerState_IsUnlockedTag(const class UObject* _pWorldContext, const struct FGameplayTag& _tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGPlayerState_Unlocks", "PlayerState_IsUnlockedTag");

	Params::BFGPlayerState_Unlocks_PlayerState_IsUnlockedTag Parms{};

	Parms._pWorldContext = _pWorldContext;
	Parms._tag = std::move(_tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState_Unlocks.PlayerState_IsUnlockedTagExact
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pWorldContext                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     _tag                                                   (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGPlayerState_Unlocks::PlayerState_IsUnlockedTagExact(const class UObject* _pWorldContext, const struct FGameplayTag& _tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGPlayerState_Unlocks", "PlayerState_IsUnlockedTagExact");

	Params::BFGPlayerState_Unlocks_PlayerState_IsUnlockedTagExact Parms{};

	Parms._pWorldContext = _pWorldContext;
	Parms._tag = std::move(_tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState_Unlocks.PlayerState_IsUnlockedTags
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pWorldContext                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            _tags                                                  (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGPlayerState_Unlocks::PlayerState_IsUnlockedTags(const class UObject* _pWorldContext, const struct FGameplayTagContainer& _tags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGPlayerState_Unlocks", "PlayerState_IsUnlockedTags");

	Params::BFGPlayerState_Unlocks_PlayerState_IsUnlockedTags Parms{};

	Parms._pWorldContext = _pWorldContext;
	Parms._tags = std::move(_tags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState_Unlocks.PlayerState_IsUnlockedTagsExact
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pWorldContext                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            _tags                                                  (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGPlayerState_Unlocks::PlayerState_IsUnlockedTagsExact(const class UObject* _pWorldContext, const struct FGameplayTagContainer& _tags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGPlayerState_Unlocks", "PlayerState_IsUnlockedTagsExact");

	Params::BFGPlayerState_Unlocks_PlayerState_IsUnlockedTagsExact Parms{};

	Parms._pWorldContext = _pWorldContext;
	Parms._tags = std::move(_tags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState_Unlocks.PlayerState_LockTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pWorldContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     _tag                                                   (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGPlayerState_Unlocks::PlayerState_LockTag(class UObject* _pWorldContext, const struct FGameplayTag& _tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGPlayerState_Unlocks", "PlayerState_LockTag");

	Params::BFGPlayerState_Unlocks_PlayerState_LockTag Parms{};

	Parms._pWorldContext = _pWorldContext;
	Parms._tag = std::move(_tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState_Unlocks.PlayerState_LockTags
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pWorldContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            _tags                                                  (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGPlayerState_Unlocks::PlayerState_LockTags(class UObject* _pWorldContext, const struct FGameplayTagContainer& _tags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGPlayerState_Unlocks", "PlayerState_LockTags");

	Params::BFGPlayerState_Unlocks_PlayerState_LockTags Parms{};

	Parms._pWorldContext = _pWorldContext;
	Parms._tags = std::move(_tags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState_Unlocks.PlayerState_RemoveLockedTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pWorldContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     _tag                                                   (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGPlayerState_Unlocks::PlayerState_RemoveLockedTag(class UObject* _pWorldContext, const struct FGameplayTag& _tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGPlayerState_Unlocks", "PlayerState_RemoveLockedTag");

	Params::BFGPlayerState_Unlocks_PlayerState_RemoveLockedTag Parms{};

	Parms._pWorldContext = _pWorldContext;
	Parms._tag = std::move(_tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState_Unlocks.PlayerState_RemoveLockedTags
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pWorldContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            _tags                                                  (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGPlayerState_Unlocks::PlayerState_RemoveLockedTags(class UObject* _pWorldContext, const struct FGameplayTagContainer& _tags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGPlayerState_Unlocks", "PlayerState_RemoveLockedTags");

	Params::BFGPlayerState_Unlocks_PlayerState_RemoveLockedTags Parms{};

	Parms._pWorldContext = _pWorldContext;
	Parms._tags = std::move(_tags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState_Unlocks.PlayerState_UnlockTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pWorldContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     _tag                                                   (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bIsPermanent                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGPlayerState_Unlocks::PlayerState_UnlockTag(class UObject* _pWorldContext, const struct FGameplayTag& _tag, bool _bIsPermanent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGPlayerState_Unlocks", "PlayerState_UnlockTag");

	Params::BFGPlayerState_Unlocks_PlayerState_UnlockTag Parms{};

	Parms._pWorldContext = _pWorldContext;
	Parms._tag = std::move(_tag);
	Parms._bIsPermanent = _bIsPermanent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState_Unlocks.PlayerState_UnlockTags
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pWorldContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            _tags                                                  (Parm, NativeAccessSpecifierPublic)
// bool                                    _bIsPermanent                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGPlayerState_Unlocks::PlayerState_UnlockTags(class UObject* _pWorldContext, const struct FGameplayTagContainer& _tags, bool _bIsPermanent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGPlayerState_Unlocks", "PlayerState_UnlockTags");

	Params::BFGPlayerState_Unlocks_PlayerState_UnlockTags Parms{};

	Parms._pWorldContext = _pWorldContext;
	Parms._tags = std::move(_tags);
	Parms._bIsPermanent = _bIsPermanent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState_Unlocks.LockRemoveTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     _tag                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bIsPermanent                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGPlayerState_Unlocks::LockRemoveTag(const struct FGameplayTag& _tag, bool _bIsPermanent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState_Unlocks", "LockRemoveTag");

	Params::BFGPlayerState_Unlocks_LockRemoveTag Parms{};

	Parms._tag = std::move(_tag);
	Parms._bIsPermanent = _bIsPermanent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPlayerState_Unlocks.LockRemoveTags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            _tags                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    _bIsPermanent                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGPlayerState_Unlocks::LockRemoveTags(const struct FGameplayTagContainer& _tags, bool _bIsPermanent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState_Unlocks", "LockRemoveTags");

	Params::BFGPlayerState_Unlocks_LockRemoveTags Parms{};

	Parms._tags = std::move(_tags);
	Parms._bIsPermanent = _bIsPermanent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPlayerState_Unlocks.RemoveLockedTag
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGameplayTag                     _tag                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGPlayerState_Unlocks::RemoveLockedTag(const struct FGameplayTag& _tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState_Unlocks", "RemoveLockedTag");

	Params::BFGPlayerState_Unlocks_RemoveLockedTag Parms{};

	Parms._tag = std::move(_tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPlayerState_Unlocks.RemoveLockedTags
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGameplayTagContainer            _tags                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGPlayerState_Unlocks::RemoveLockedTags(const struct FGameplayTagContainer& _tags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState_Unlocks", "RemoveLockedTags");

	Params::BFGPlayerState_Unlocks_RemoveLockedTags Parms{};

	Parms._tags = std::move(_tags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPlayerState_Unlocks.UnlockTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     _tag                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bIsPermanent                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGPlayerState_Unlocks::UnlockTag(const struct FGameplayTag& _tag, bool _bIsPermanent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState_Unlocks", "UnlockTag");

	Params::BFGPlayerState_Unlocks_UnlockTag Parms{};

	Parms._tag = std::move(_tag);
	Parms._bIsPermanent = _bIsPermanent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPlayerState_Unlocks.UnlockTags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            _tags                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    _bIsPermanent                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGPlayerState_Unlocks::UnlockTags(const struct FGameplayTagContainer& _tags, bool _bIsPermanent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState_Unlocks", "UnlockTags");

	Params::BFGPlayerState_Unlocks_UnlockTags Parms{};

	Parms._tags = std::move(_tags);
	Parms._bIsPermanent = _bIsPermanent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPlayerState_Unlocks.GetTags
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer            _tagsOut                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UBFGPlayerState_Unlocks::GetTags(struct FGameplayTagContainer* _tagsOut) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState_Unlocks", "GetTags");

	Params::BFGPlayerState_Unlocks_GetTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_tagsOut != nullptr)
		*_tagsOut = std::move(Parms._tagsOut);
}


// Function BFGCore.BFGPlayerState_Unlocks.IsUnlockedQuery
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagQuery                _query                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGPlayerState_Unlocks::IsUnlockedQuery(const struct FGameplayTagQuery& _query) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState_Unlocks", "IsUnlockedQuery");

	Params::BFGPlayerState_Unlocks_IsUnlockedQuery Parms{};

	Parms._query = std::move(_query);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState_Unlocks.IsUnlockedTag
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     _tag                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGPlayerState_Unlocks::IsUnlockedTag(const struct FGameplayTag& _tag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState_Unlocks", "IsUnlockedTag");

	Params::BFGPlayerState_Unlocks_IsUnlockedTag Parms{};

	Parms._tag = std::move(_tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState_Unlocks.IsUnlockedTagExact
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     _tag                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGPlayerState_Unlocks::IsUnlockedTagExact(const struct FGameplayTag& _tag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState_Unlocks", "IsUnlockedTagExact");

	Params::BFGPlayerState_Unlocks_IsUnlockedTagExact Parms{};

	Parms._tag = std::move(_tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState_Unlocks.IsUnlockedTags
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer            _tags                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGPlayerState_Unlocks::IsUnlockedTags(const struct FGameplayTagContainer& _tags) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState_Unlocks", "IsUnlockedTags");

	Params::BFGPlayerState_Unlocks_IsUnlockedTags Parms{};

	Parms._tags = std::move(_tags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState_Unlocks.IsUnlockedTagsExact
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer            _tags                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGPlayerState_Unlocks::IsUnlockedTagsExact(const struct FGameplayTagContainer& _tags) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState_Unlocks", "IsUnlockedTagsExact");

	Params::BFGPlayerState_Unlocks_IsUnlockedTagsExact Parms{};

	Parms._tags = std::move(_tags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState_Upgrades.TryUpgrade
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGameplayTag                     _rUpgradeTag                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGPlayerState_Upgrades::TryUpgrade(const struct FGameplayTag& _rUpgradeTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState_Upgrades", "TryUpgrade");

	Params::BFGPlayerState_Upgrades_TryUpgrade Parms{};

	Parms._rUpgradeTag = std::move(_rUpgradeTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState_Upgrades.HasItemUpgrade
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     _rUpgradeTag                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGPlayerState_Upgrades::HasItemUpgrade(const struct FGameplayTag& _rUpgradeTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState_Upgrades", "HasItemUpgrade");

	Params::BFGPlayerState_Upgrades_HasItemUpgrade Parms{};

	Parms._rUpgradeTag = std::move(_rUpgradeTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState_Upgrades.IsItemPurchaseable
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     _rUpgradeTag                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGPlayerState_Upgrades::IsItemPurchaseable(const struct FGameplayTag& _rUpgradeTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState_Upgrades", "IsItemPurchaseable");

	Params::BFGPlayerState_Upgrades_IsItemPurchaseable Parms{};

	Parms._rUpgradeTag = std::move(_rUpgradeTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState_Upgrades.IsItemUnlocked
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     _rItemTag                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGPlayerState_Upgrades::IsItemUnlocked(const struct FGameplayTag& _rItemTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState_Upgrades", "IsItemUnlocked");

	Params::BFGPlayerState_Upgrades_IsItemUnlocked Parms{};

	Parms._rItemTag = std::move(_rItemTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState_Upgrades.IsUpgradeable
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     _rUpgradeTag                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGPlayerState_Upgrades::IsUpgradeable(const struct FGameplayTag& _rUpgradeTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState_Upgrades", "IsUpgradeable");

	Params::BFGPlayerState_Upgrades_IsUpgradeable Parms{};

	Parms._rUpgradeTag = std::move(_rUpgradeTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPlayerState_Upgrades.IsUpgraded
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     _rUpgradeTag                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGPlayerState_Upgrades::IsUpgraded(const struct FGameplayTag& _rUpgradeTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPlayerState_Upgrades", "IsUpgraded");

	Params::BFGPlayerState_Upgrades_IsUpgraded Parms{};

	Parms._rUpgradeTag = std::move(_rUpgradeTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPoolInterface.OnRetrieveFromPool
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bAutomaticallyReactivateComponents                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IBFGPoolInterface::OnRetrieveFromPool(bool _bAutomaticallyReactivateComponents)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPoolInterface", "OnRetrieveFromPool");

	Params::BFGPoolInterface_OnRetrieveFromPool Parms{};

	Parms._bAutomaticallyReactivateComponents = _bAutomaticallyReactivateComponents;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPoolInterface.OnReturnToPool
// (Native, Event, Public, BlueprintEvent)

void IBFGPoolInterface::OnReturnToPool()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPoolInterface", "OnReturnToPool");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPrintToStringInterface.PrintNameToString
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString IBFGPrintToStringInterface::PrintNameToString() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPrintToStringInterface", "PrintNameToString");

	Params::BFGPrintToStringInterface_PrintNameToString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPrintToStringInterface.PrintToString
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString IBFGPrintToStringInterface::PrintToString() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPrintToStringInterface", "PrintToString");

	Params::BFGPrintToStringInterface_PrintToString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGProjectile_AnalProbe.OnConnectedToTarget
// (Event, Public, BlueprintEvent)

void ABFGProjectile_AnalProbe::OnConnectedToTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_AnalProbe", "OnConnectedToTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGProjectile_AnalProbe.GetTargetActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* ABFGProjectile_AnalProbe::GetTargetActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_AnalProbe", "GetTargetActor");

	Params::BFGProjectile_AnalProbe_GetTargetActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGProjectile_BeamDeathray.OnHitFoliage
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FHitResult                       _oHitResult                                            (Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ABFGProjectile_BeamDeathray::OnHitFoliage(const struct FHitResult& _oHitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_BeamDeathray", "OnHitFoliage");

	Params::BFGProjectile_BeamDeathray_OnHitFoliage Parms{};

	Parms._oHitResult = std::move(_oHitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGProjectile_BeamDeathray.OnSetOnFire
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGProjectile_BeamDeathray::OnSetOnFire(class AActor* _pActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_BeamDeathray", "OnSetOnFire");

	Params::BFGProjectile_BeamDeathray_OnSetOnFire Parms{};

	Parms._pActor = _pActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGProjectile_BeamDeathray.OnSpawnDeadzone
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FBFGDeathrayZoneData             _oDeadzone                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ABFGProjectile_BeamDeathray::OnSpawnDeadzone(const struct FBFGDeathrayZoneData& _oDeadzone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_BeamDeathray", "OnSpawnDeadzone");

	Params::BFGProjectile_BeamDeathray_OnSpawnDeadzone Parms{};

	Parms._oDeadzone = std::move(_oDeadzone);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGProjectile_BeamDeathray.OnTickDeadzone
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FBFGDeathrayZoneData             _oDeadzone                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ABFGProjectile_BeamDeathray::OnTickDeadzone(const struct FBFGDeathrayZoneData& _oDeadzone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_BeamDeathray", "OnTickDeadzone");

	Params::BFGProjectile_BeamDeathray_OnTickDeadzone Parms{};

	Parms._oDeadzone = std::move(_oDeadzone);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGProjectile_BeamDeathray.UpdateBeamOnOcean
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          _vTargetLocation                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bHitTarget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vImpactNormal                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGProjectile_BeamDeathray::UpdateBeamOnOcean(const struct FVector& _vTargetLocation, bool _bHitTarget, const struct FVector& _vImpactNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_BeamDeathray", "UpdateBeamOnOcean");

	Params::BFGProjectile_BeamDeathray_UpdateBeamOnOcean Parms{};

	Parms._vTargetLocation = std::move(_vTargetLocation);
	Parms._bHitTarget = _bHitTarget;
	Parms._vImpactNormal = std::move(_vImpactNormal);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGTaskNode_Roboprez_FollowTransitionPath.FollowSplinePath
// (Final, Native, Protected)

void UBFGTaskNode_Roboprez_FollowTransitionPath::FollowSplinePath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTaskNode_Roboprez_FollowTransitionPath", "FollowSplinePath");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTaskNode_Roboprez_FollowTransitionPath.OnSplinePathComplete
// (Final, Native, Protected)

void UBFGTaskNode_Roboprez_FollowTransitionPath::OnSplinePathComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTaskNode_Roboprez_FollowTransitionPath", "OnSplinePathComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BFGCore.BFGSpinningWidget.Action__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UBFGSpinningWidget::Action__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSpinningWidget", "Action__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGSpinningWidget.AddOption
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGSpinningWidgetOption*         _pOption                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGSpinningWidget::AddOption(class UBFGSpinningWidgetOption* _pOption)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSpinningWidget", "AddOption");

	Params::BFGSpinningWidget_AddOption Parms{};

	Parms._pOption = _pOption;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGSpinningWidget.AddOptionToLayout
// (Event, Public, BlueprintEvent)
// Parameters:
// class UBFGSpinningWidgetOption*         _pOption                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGSpinningWidget::AddOptionToLayout(class UBFGSpinningWidgetOption* _pOption)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSpinningWidget", "AddOptionToLayout");

	Params::BFGSpinningWidget_AddOptionToLayout Parms{};

	Parms._pOption = _pOption;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGSpinningWidget.ClearLayout
// (Event, Public, BlueprintEvent)

void UBFGSpinningWidget::ClearLayout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSpinningWidget", "ClearLayout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGSpinningWidget.ClearOptions
// (Final, Native, Public, BlueprintCallable)

void UBFGSpinningWidget::ClearOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSpinningWidget", "ClearOptions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGSpinningWidget.GetCanvasPanel
// (Event, Public, BlueprintEvent)
// Parameters:
// class UCanvasPanel*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCanvasPanel* UBFGSpinningWidget::GetCanvasPanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSpinningWidget", "GetCanvasPanel");

	Params::BFGSpinningWidget_GetCanvasPanel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSpinningWidget.OnButtonCenter
// (Final, Native, Public, BlueprintCallable)

void UBFGSpinningWidget::OnButtonCenter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSpinningWidget", "OnButtonCenter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGSpinningWidget.OnButtonLeft
// (Final, Native, Public, BlueprintCallable)

void UBFGSpinningWidget::OnButtonLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSpinningWidget", "OnButtonLeft");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGSpinningWidget.OnButtonRight
// (Final, Native, Public, BlueprintCallable)

void UBFGSpinningWidget::OnButtonRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSpinningWidget", "OnButtonRight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGSpinningWidget.OnSFX_Spin
// (Event, Public, BlueprintEvent)

void UBFGSpinningWidget::OnSFX_Spin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSpinningWidget", "OnSFX_Spin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGSpinningWidget.OnSpinningDone
// (Event, Public, BlueprintEvent)

void UBFGSpinningWidget::OnSpinningDone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSpinningWidget", "OnSpinningDone");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGSpinningWidget.SetFrameSize
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   _fX                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fY                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGSpinningWidget::SetFrameSize(float _fX, float _fY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSpinningWidget", "SetFrameSize");

	Params::BFGSpinningWidget_SetFrameSize Parms{};

	Parms._fX = _fX;
	Parms._fY = _fY;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGSpinningWidget.SpinBack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _iSteps                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGSpinningWidget::SpinBack(int32 _iSteps)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSpinningWidget", "SpinBack");

	Params::BFGSpinningWidget_SpinBack Parms{};

	Parms._iSteps = _iSteps;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGSpinningWidget.SpinForward
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _iSteps                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGSpinningWidget::SpinForward(int32 _iSteps)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSpinningWidget", "SpinForward");

	Params::BFGSpinningWidget_SpinForward Parms{};

	Parms._iSteps = _iSteps;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGSpinningWidget.GetOption
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGSpinningWidgetOption*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGSpinningWidgetOption* UBFGSpinningWidget::GetOption(int32 _iIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSpinningWidget", "GetOption");

	Params::BFGSpinningWidget_GetOption Parms{};

	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_MissionGroup.GetState_MissionGroupAborted
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableType_MissionGroup::GetState_MissionGroupAborted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_MissionGroup", "GetState_MissionGroupAborted");

	Params::BFGVariableType_MissionGroup_GetState_MissionGroupAborted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_MissionGroup.GetState_MissionGroupAvailable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableType_MissionGroup::GetState_MissionGroupAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_MissionGroup", "GetState_MissionGroupAvailable");

	Params::BFGVariableType_MissionGroup_GetState_MissionGroupAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_MissionGroup.GetState_MissionGroupFinished
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableType_MissionGroup::GetState_MissionGroupFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_MissionGroup", "GetState_MissionGroupFinished");

	Params::BFGVariableType_MissionGroup_GetState_MissionGroupFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_MissionGroup.GetState_MissionGroupInProgress
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableType_MissionGroup::GetState_MissionGroupInProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_MissionGroup", "GetState_MissionGroupInProgress");

	Params::BFGVariableType_MissionGroup_GetState_MissionGroupInProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_MissionGroup.GetState_MissionGroupLocked
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableType_MissionGroup::GetState_MissionGroupLocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_MissionGroup", "GetState_MissionGroupLocked");

	Params::BFGVariableType_MissionGroup_GetState_MissionGroupLocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_MissionGroup.GetTypeName_MissionGroup
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableType_MissionGroup::GetTypeName_MissionGroup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_MissionGroup", "GetTypeName_MissionGroup");

	Params::BFGVariableType_MissionGroup_GetTypeName_MissionGroup Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGProjectile_Grenade.OnFuseDone
// (Native, Event, Protected, BlueprintEvent)

void ABFGProjectile_Grenade::OnFuseDone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_Grenade", "OnFuseDone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGProjectile_Grenade.OnFuseUpdated
// (Native, Event, Protected, BlueprintEvent)

void ABFGProjectile_Grenade::OnFuseUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_Grenade", "OnFuseUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGStreamingLevelManager.OnGameStarted
// (Final, Native, Protected)
// Parameters:
// class UBFGGameInstance*                 _pGameInstance                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWorld*                           _pWorld                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGStreamingLevelManager::OnGameStarted(class UBFGGameInstance* _pGameInstance, class UWorld* _pWorld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGStreamingLevelManager", "OnGameStarted");

	Params::BFGStreamingLevelManager_OnGameStarted Parms{};

	Parms._pGameInstance = _pGameInstance;
	Parms._pWorld = _pWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGStreamingLevelManager.OnLatentActionFinished
// (Final, Native, Protected)
// Parameters:
// int32                                   _iLinkId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGStreamingLevelManager::OnLatentActionFinished(int32 _iLinkId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGStreamingLevelManager", "OnLatentActionFinished");

	Params::BFGStreamingLevelManager_OnLatentActionFinished Parms{};

	Parms._iLinkId = _iLinkId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGStreamingLevelManager.RegisterLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UWorld>            _pLevel                                                (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGStreamingLevelHandle*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGStreamingLevelHandle* UBFGStreamingLevelManager::RegisterLevel(TSoftObjectPtr<class UWorld> _pLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGStreamingLevelManager", "RegisterLevel");

	Params::BFGStreamingLevelManager_RegisterLevel Parms{};

	Parms._pLevel = _pLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGStreamingLevelManager.GameSystem_StreamingLevelLog
// (Final, Exec, Native, Public, Const)
// Parameters:
// bool                                    _bAllLevels                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGStreamingLevelManager::GameSystem_StreamingLevelLog(bool _bAllLevels) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGStreamingLevelManager", "GameSystem_StreamingLevelLog");

	Params::BFGStreamingLevelManager_GameSystem_StreamingLevelLog Parms{};

	Parms._bAllLevels = _bAllLevels;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGProjectile_MindLinkProtectiveBubble.HandleOnDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pDestroyedActor                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGProjectile_MindLinkProtectiveBubble::HandleOnDestroyed(class AActor* _pDestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_MindLinkProtectiveBubble", "HandleOnDestroyed");

	Params::BFGProjectile_MindLinkProtectiveBubble_HandleOnDestroyed Parms{};

	Parms._pDestroyedActor = _pDestroyedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGSystemUtils.GetGlobalFrameCounter
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGSystemUtils::GetGlobalFrameCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystemUtils", "GetGlobalFrameCounter");

	Params::BFGSystemUtils_GetGlobalFrameCounter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystemUtils.GetUnlocalizedStringFromText
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FText                             _tText                                                 (Parm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UBFGSystemUtils::GetUnlocalizedStringFromText(const class FText& _tText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystemUtils", "GetUnlocalizedStringFromText");

	Params::BFGSystemUtils_GetUnlocalizedStringFromText Parms{};

	Parms._tText = std::move(_tText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystemUtils.IsDerivedFrom
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           _pClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGSystemUtils::IsDerivedFrom(class UObject* _pObject, class UClass* _pClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystemUtils", "IsDerivedFrom");

	Params::BFGSystemUtils_IsDerivedFrom Parms{};

	Parms._pObject = _pObject;
	Parms._pClass = _pClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystemUtils.IsPlatform_Default30FpsThrottle
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGSystemUtils::IsPlatform_Default30FpsThrottle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystemUtils", "IsPlatform_Default30FpsThrottle");

	Params::BFGSystemUtils_IsPlatform_Default30FpsThrottle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystemUtils.IsPlatform_ScorpioOrPro
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGSystemUtils::IsPlatform_ScorpioOrPro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystemUtils", "IsPlatform_ScorpioOrPro");

	Params::BFGSystemUtils_IsPlatform_ScorpioOrPro Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystemUtils.IsPlatformAnyConsole
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGSystemUtils::IsPlatformAnyConsole()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystemUtils", "IsPlatformAnyConsole");

	Params::BFGSystemUtils_IsPlatformAnyConsole Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystemUtils.IsPlatformPS4
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGSystemUtils::IsPlatformPS4()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystemUtils", "IsPlatformPS4");

	Params::BFGSystemUtils_IsPlatformPS4 Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystemUtils.IsPlatformPS5
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGSystemUtils::IsPlatformPS5()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystemUtils", "IsPlatformPS5");

	Params::BFGSystemUtils_IsPlatformPS5 Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystemUtils.IsPlatformWindows
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGSystemUtils::IsPlatformWindows()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystemUtils", "IsPlatformWindows");

	Params::BFGSystemUtils_IsPlatformWindows Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSystemUtils.IsPlatformXbox
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGSystemUtils::IsPlatformXbox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGSystemUtils", "IsPlatformXbox");

	Params::BFGSystemUtils_IsPlatformXbox Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGProjectile_NasalProbe.AttachToPlayer
// (Final, Native, Protected)
// Parameters:
// struct FHitResult                       _vHitResult                                            (Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ABFGProjectile_NasalProbe::AttachToPlayer(const struct FHitResult& _vHitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_NasalProbe", "AttachToPlayer");

	Params::BFGProjectile_NasalProbe_AttachToPlayer Parms{};

	Parms._vHitResult = std::move(_vHitResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGProjectile_NasalProbe.DetachFromPlayer
// (Final, Native, Protected)

void ABFGProjectile_NasalProbe::DetachFromPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_NasalProbe", "DetachFromPlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGProjectile_NasalProbe.OnHomingDisabledTimerComplete
// (Final, Native, Protected)

void ABFGProjectile_NasalProbe::OnHomingDisabledTimerComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_NasalProbe", "OnHomingDisabledTimerComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGProjectile_NasalProbe.OnNasalProbeImpact
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FHitResult                       _vHitResult                                            (Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ABFGProjectile_NasalProbe::OnNasalProbeImpact(const struct FHitResult& _vHitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_NasalProbe", "OnNasalProbeImpact");

	Params::BFGProjectile_NasalProbe_OnNasalProbeImpact Parms{};

	Parms._vHitResult = std::move(_vHitResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGProjectile_NasalProbe.OnPlayerDashed
// (Final, Native, Protected)
// Parameters:
// class UBFGActorComponent_Dash*          _pDashComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGProjectile_NasalProbe::OnPlayerDashed(class UBFGActorComponent_Dash* _pDashComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_NasalProbe", "OnPlayerDashed");

	Params::BFGProjectile_NasalProbe_OnPlayerDashed Parms{};

	Parms._pDashComponent = _pDashComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGProjectile_NasalProbe.OnProbeTickTimerComplete
// (Final, Native, Protected)

void ABFGProjectile_NasalProbe::OnProbeTickTimerComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_NasalProbe", "OnProbeTickTimerComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGProjectile_NasalProbe.OnProjectileDodgedSuccessfully
// (Event, Public, BlueprintEvent)

void ABFGProjectile_NasalProbe::OnProjectileDodgedSuccessfully()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_NasalProbe", "OnProjectileDodgedSuccessfully");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGProjectile_NasalProbe.OnProjectileHomingReenabled
// (Event, Public, BlueprintEvent)

void ABFGProjectile_NasalProbe::OnProjectileHomingReenabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_NasalProbe", "OnProjectileHomingReenabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGProjectile_QuantumDeconstructor.GetCurrentWaveCounter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABFGProjectile_QuantumDeconstructor::GetCurrentWaveCounter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_QuantumDeconstructor", "GetCurrentWaveCounter");

	Params::BFGProjectile_QuantumDeconstructor_GetCurrentWaveCounter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGProjectile_QuantumDeconstructor.GetScaledMaximumExplosionRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABFGProjectile_QuantumDeconstructor::GetScaledMaximumExplosionRadius() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_QuantumDeconstructor", "GetScaledMaximumExplosionRadius");

	Params::BFGProjectile_QuantumDeconstructor_GetScaledMaximumExplosionRadius Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGProjectile_SonicBoom.OnInnerExplosion
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          _vLocation                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGProjectile_SonicBoom::OnInnerExplosion(const struct FVector& _vLocation, float _fRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_SonicBoom", "OnInnerExplosion");

	Params::BFGProjectile_SonicBoom_OnInnerExplosion Parms{};

	Parms._vLocation = std::move(_vLocation);
	Parms._fRadius = _fRadius;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGProjectile_SonicBoom.OnVolumeControl11Explosion
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          _vLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGProjectile_SonicBoom::OnVolumeControl11Explosion(const struct FVector& _vLocation, float _fRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGProjectile_SonicBoom", "OnVolumeControl11Explosion");

	Params::BFGProjectile_SonicBoom_OnVolumeControl11Explosion Parms{};

	Parms._vLocation = std::move(_vLocation);
	Parms._fRadius = _fRadius;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGPropActor.ActivateAttachedToActor
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           _pAttachTo                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _boneName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGPropActor::ActivateAttachedToActor(class AActor* _pAttachTo, const class FName _boneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPropActor", "ActivateAttachedToActor");

	Params::BFGPropActor_ActivateAttachedToActor Parms{};

	Parms._pAttachTo = _pAttachTo;
	Parms._boneName = _boneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPropActor.ActivatePhysics
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ABFGPropActor::ActivatePhysics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPropActor", "ActivatePhysics");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPropActor.ActivateVisibility
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ABFGPropActor::ActivateVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPropActor", "ActivateVisibility");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPropActor.DeactivateAttachedToActor
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ABFGPropActor::DeactivateAttachedToActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPropActor", "DeactivateAttachedToActor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPropActor.DeactivatePhysics
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ABFGPropActor::DeactivatePhysics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPropActor", "DeactivatePhysics");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPropActor.DeactivateVisibility
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ABFGPropActor::DeactivateVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPropActor", "DeactivateVisibility");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPropActor.OnInteractAnimationChanged
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBFGInteractAnimationData        _newData                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FBFGInteractAnimationData        _oldData                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ABFGPropActor::OnInteractAnimationChanged(const struct FBFGInteractAnimationData& _newData, const struct FBFGInteractAnimationData& _oldData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPropActor", "OnInteractAnimationChanged");

	Params::BFGPropActor_OnInteractAnimationChanged Parms{};

	Parms._newData = std::move(_newData);
	Parms._oldData = std::move(_oldData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPropActor.OnInteractAnimationChangedCallback
// (Final, Native, Protected, HasOutParams)
// Parameters:
// TScriptInterface<class IBFGInteractAnimationPlayerInterface>_pInteractAnimationPlayer                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
// struct FBFGInteractAnimationData        _newData                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FBFGInteractAnimationData        _oldData                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ABFGPropActor::OnInteractAnimationChangedCallback(TScriptInterface<class IBFGInteractAnimationPlayerInterface> _pInteractAnimationPlayer, const struct FBFGInteractAnimationData& _newData, const struct FBFGInteractAnimationData& _oldData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPropActor", "OnInteractAnimationChangedCallback");

	Params::BFGPropActor_OnInteractAnimationChangedCallback Parms{};

	Parms._pInteractAnimationPlayer = _pInteractAnimationPlayer;
	Parms._newData = std::move(_newData);
	Parms._oldData = std::move(_oldData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPropActor.OnSwappedToDroppedObject
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABFGObject_StaticWithPhysics*     _pPhysicsObject                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGPropActor::OnSwappedToDroppedObject(class ABFGObject_StaticWithPhysics* _pPhysicsObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPropActor", "OnSwappedToDroppedObject");

	Params::BFGPropActor_OnSwappedToDroppedObject Parms{};

	Parms._pPhysicsObject = _pPhysicsObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGPropActor.OnSwitchedToHighRes
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBFGInteractAnimationData        _animationData                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ABFGPropActor::OnSwitchedToHighRes(const struct FBFGInteractAnimationData& _animationData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPropActor", "OnSwitchedToHighRes");

	Params::BFGPropActor_OnSwitchedToHighRes Parms{};

	Parms._animationData = std::move(_animationData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPropActor.OnSwitchedToLowRes
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ABFGPropActor::OnSwitchedToLowRes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPropActor", "OnSwitchedToLowRes");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPropActor.GetInteractAnimationPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IBFGInteractAnimationPlayerInterface>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)

TScriptInterface<class IBFGInteractAnimationPlayerInterface> ABFGPropActor::GetInteractAnimationPlayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPropActor", "GetInteractAnimationPlayer");

	Params::BFGPropActor_GetInteractAnimationPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGScriptedSequence_Persistent.OnVariableChanged
// (Final, Native, Protected)
// Parameters:
// class UBFGVariableMirror*               _pVarMirror                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGVariable*                     _pVariable                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _oldValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _newValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGScriptedSequence_Persistent::OnVariableChanged(class UBFGVariableMirror* _pVarMirror, const class UBFGVariable* _pVariable, int32 _oldValue, int32 _newValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGScriptedSequence_Persistent", "OnVariableChanged");

	Params::BFGScriptedSequence_Persistent_OnVariableChanged Parms{};

	Parms._pVarMirror = _pVarMirror;
	Parms._pVariable = _pVariable;
	Parms._oldValue = _oldValue;
	Parms._newValue = _newValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPsychokinesisTargetInterface.IsValidTarget
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IBFGPsychokinesisTargetInterface::IsValidTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPsychokinesisTargetInterface", "IsValidTarget");

	Params::BFGPsychokinesisTargetInterface_IsValidTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPsychokinesisTargetInterface.PKAttachTo
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPhysicsHandleComponent*          _pComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IBFGPsychokinesisTargetInterface::PKAttachTo(class UPhysicsHandleComponent* _pComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPsychokinesisTargetInterface", "PKAttachTo");

	Params::BFGPsychokinesisTargetInterface_PKAttachTo Parms{};

	Parms._pComponent = _pComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPsychokinesisTargetInterface.PKDetached
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    _bForceStopped                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IBFGPsychokinesisTargetInterface::PKDetached(bool _bForceStopped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPsychokinesisTargetInterface", "PKDetached");

	Params::BFGPsychokinesisTargetInterface_PKDetached Parms{};

	Parms._bForceStopped = _bForceStopped;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPsychokinesisTargetInterface.PKGetDistanceToHolder
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IBFGPsychokinesisTargetInterface::PKGetDistanceToHolder()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPsychokinesisTargetInterface", "PKGetDistanceToHolder");

	Params::BFGPsychokinesisTargetInterface_PKGetDistanceToHolder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPsychokinesisTargetInterface.PKGetSpringArmOffset
// (Native, Public, HasDefaults)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector IBFGPsychokinesisTargetInterface::PKGetSpringArmOffset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPsychokinesisTargetInterface", "PKGetSpringArmOffset");

	Params::BFGPsychokinesisTargetInterface_PKGetSpringArmOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGPsychokinesisTargetInterface.PKSetCollisionsEnabled
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    _bEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IBFGPsychokinesisTargetInterface::PKSetCollisionsEnabled(bool _bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPsychokinesisTargetInterface", "PKSetCollisionsEnabled");

	Params::BFGPsychokinesisTargetInterface_PKSetCollisionsEnabled Parms{};

	Parms._bEnabled = _bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGPsychokinesisTargetInterface.PKThrowOverride
// (Native, Public, HasOutParams, HasDefaults)
// Parameters:
// class UBFGMentalAbility_Psychokinesis*  _pAbility                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _rDirection                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fCurrentThrowCharge                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fMaxThrowCharge                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IBFGPsychokinesisTargetInterface::PKThrowOverride(class UBFGMentalAbility_Psychokinesis* _pAbility, const struct FVector& _rDirection, float _fCurrentThrowCharge, float _fMaxThrowCharge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGPsychokinesisTargetInterface", "PKThrowOverride");

	Params::BFGPsychokinesisTargetInterface_PKThrowOverride Parms{};

	Parms._pAbility = _pAbility;
	Parms._rDirection = std::move(_rDirection);
	Parms._fCurrentThrowCharge = _fCurrentThrowCharge;
	Parms._fMaxThrowCharge = _fMaxThrowCharge;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_Challenge.GetChallengeAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGDataAsset_ChallengeInfo*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGDataAsset_ChallengeInfo* UBFGQuest_Challenge::GetChallengeAsset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Challenge", "GetChallengeAsset");

	Params::BFGQuest_Challenge_GetChallengeAsset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_Challenge.GetCurrentScore
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGQuest_Challenge::GetCurrentScore() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Challenge", "GetCurrentScore");

	Params::BFGQuest_Challenge_GetCurrentScore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_Challenge.GetHighScore
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGQuest_Challenge::GetHighScore() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Challenge", "GetHighScore");

	Params::BFGQuest_Challenge_GetHighScore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_Challenge.GetHighScoreOld
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGQuest_Challenge::GetHighScoreOld() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Challenge", "GetHighScoreOld");

	Params::BFGQuest_Challenge_GetHighScoreOld Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_Challenge.GetReward
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGQuest_Challenge::GetReward() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Challenge", "GetReward");

	Params::BFGQuest_Challenge_GetReward Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGScriptedSequence_TaskGotoStandby.CreateAndAddScriptedSequence_TaskGotoStandby
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBFGScriptedSequence*             _pScriptedSequence                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bShouldNotFinishSequenceTaskAutomatically             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGScriptedSequence_TaskGotoStandby::CreateAndAddScriptedSequence_TaskGotoStandby(class UBFGScriptedSequence* _pScriptedSequence, bool _bShouldNotFinishSequenceTaskAutomatically)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGScriptedSequence_TaskGotoStandby", "CreateAndAddScriptedSequence_TaskGotoStandby");

	Params::BFGScriptedSequence_TaskGotoStandby_CreateAndAddScriptedSequence_TaskGotoStandby Parms{};

	Parms._pScriptedSequence = _pScriptedSequence;
	Parms._bShouldNotFinishSequenceTaskAutomatically = _bShouldNotFinishSequenceTaskAutomatically;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGScriptedSequence_TaskVehicleStop.CreateAndAddScriptedSequence_TaskVehicleStop
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UBFGScriptedSequence*             _pScriptedSequence                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBFGScriptedSequence_TaskVehicleStop_Param_param                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGScriptedSequence_TaskVehicleStop::CreateAndAddScriptedSequence_TaskVehicleStop(class UBFGScriptedSequence* _pScriptedSequence, const struct FBFGScriptedSequence_TaskVehicleStop_Param& _param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGScriptedSequence_TaskVehicleStop", "CreateAndAddScriptedSequence_TaskVehicleStop");

	Params::BFGScriptedSequence_TaskVehicleStop_CreateAndAddScriptedSequence_TaskVehicleStop Parms{};

	Parms._pScriptedSequence = _pScriptedSequence;
	Parms._param = std::move(_param);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_ElementCollect.GetSparseQuestCounterVariables
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UBFGVariable*>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UBFGVariable*> UBFGQuest_ElementCollect::GetSparseQuestCounterVariables() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_ElementCollect", "GetSparseQuestCounterVariables");

	Params::BFGQuest_ElementCollect_GetSparseQuestCounterVariables Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_ElementKill.GetSparseQuestCounterVariables
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UBFGVariable*>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UBFGVariable*> UBFGQuest_ElementKill::GetSparseQuestCounterVariables() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_ElementKill", "GetSparseQuestCounterVariables");

	Params::BFGQuest_ElementKill_GetSparseQuestCounterVariables Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_ElementMentalAbility.GetSparseQuestCounterVariables
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UBFGVariable*>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UBFGVariable*> UBFGQuest_ElementMentalAbility::GetSparseQuestCounterVariables() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_ElementMentalAbility", "GetSparseQuestCounterVariables");

	Params::BFGQuest_ElementMentalAbility_GetSparseQuestCounterVariables Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_ElementNarrativeSequence.GetAssessments
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TMap<class FName, EUBFGNarrativeSequence_Assessment>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TMap<class FName, EUBFGNarrativeSequence_Assessment> UBFGQuest_ElementNarrativeSequence::GetAssessments() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_ElementNarrativeSequence", "GetAssessments");

	Params::BFGQuest_ElementNarrativeSequence_GetAssessments Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_ElementNarrativeSequence.GetNumStrikes
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGQuest_ElementNarrativeSequence::GetNumStrikes() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_ElementNarrativeSequence", "GetNumStrikes");

	Params::BFGQuest_ElementNarrativeSequence_GetNumStrikes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_ElementProximity.GetSubgoalLimits
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<int32>                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<int32> UBFGQuest_ElementProximity::GetSubgoalLimits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_ElementProximity", "GetSubgoalLimits");

	Params::BFGQuest_ElementProximity_GetSubgoalLimits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_ElementProximity.GetTargetDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGQuest_ElementProximity::GetTargetDistance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_ElementProximity", "GetTargetDistance");

	Params::BFGQuest_ElementProximity_GetTargetDistance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction BFGCore.BFGUIInputDeviceTracker.Action__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UBFGUIInputDeviceTracker::Action__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUIInputDeviceTracker", "Action__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction BFGCore.BFGUIInputDeviceTracker.ActionBool__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    _bValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGUIInputDeviceTracker::ActionBool__DelegateSignature(bool _bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUIInputDeviceTracker", "ActionBool__DelegateSignature");

	Params::BFGUIInputDeviceTracker_ActionBool__DelegateSignature Parms{};

	Parms._bValue = _bValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGUIInputDeviceTracker.GetCurrentInputDeviceType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGUIInputDeviceTracker::GetCurrentInputDeviceType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUIInputDeviceTracker", "GetCurrentInputDeviceType");

	Params::BFGUIInputDeviceTracker_GetCurrentInputDeviceType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGUIInputDeviceTracker.IsGamepadCurrentDevice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGUIInputDeviceTracker::IsGamepadCurrentDevice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUIInputDeviceTracker", "IsGamepadCurrentDevice");

	Params::BFGUIInputDeviceTracker_IsGamepadCurrentDevice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGUIInputDeviceTracker.OnWindowModeCommand
// (Final, Native, Public)
// Parameters:
// bool                                    _bIsFullscreen                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGUIInputDeviceTracker::OnWindowModeCommand(bool _bIsFullscreen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUIInputDeviceTracker", "OnWindowModeCommand");

	Params::BFGUIInputDeviceTracker_OnWindowModeCommand Parms{};

	Parms._bIsFullscreen = _bIsFullscreen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGQuest_ElementWaitTime.GetElapsedTimeSinceStart
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGQuest_ElementWaitTime::GetElapsedTimeSinceStart() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_ElementWaitTime", "GetElapsedTimeSinceStart");

	Params::BFGQuest_ElementWaitTime_GetElapsedTimeSinceStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_Manager.CheatCompleteAdditionalObjective
// (Final, Exec, Native, Public)

void UBFGQuest_Manager::CheatCompleteAdditionalObjective()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Manager", "CheatCompleteAdditionalObjective");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGQuest_Manager.CheatCompleteChallenge
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   _iStarRating                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGQuest_Manager::CheatCompleteChallenge(int32 _iStarRating)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Manager", "CheatCompleteChallenge");

	Params::BFGQuest_Manager_CheatCompleteChallenge Parms{};

	Parms._iStarRating = _iStarRating;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGQuest_Manager.CheatCompleteMission
// (Final, Exec, Native, Public)

void UBFGQuest_Manager::CheatCompleteMission()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Manager", "CheatCompleteMission");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGQuest_Manager.CheatCompleteMissionStep
// (Final, Exec, Native, Public)

void UBFGQuest_Manager::CheatCompleteMissionStep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Manager", "CheatCompleteMissionStep");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGQuest_Manager.CheatCompleteMissionTimers
// (Final, Exec, Native, Public)

void UBFGQuest_Manager::CheatCompleteMissionTimers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Manager", "CheatCompleteMissionTimers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGQuest_Manager.DetermineIfOpenWorld
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGQuest_Manager::DetermineIfOpenWorld()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Manager", "DetermineIfOpenWorld");

	Params::BFGQuest_Manager_DetermineIfOpenWorld Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_Manager.IsQuestInProgress
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSoftClassPtr<class UClass>             _softQuest                                             (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGQuest_Manager::IsQuestInProgress(const TSoftClassPtr<class UClass>& _softQuest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Manager", "IsQuestInProgress");

	Params::BFGQuest_Manager_IsQuestInProgress Parms{};

	Parms._softQuest = _softQuest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_Manager.IsQuestToBeStarted
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSoftClassPtr<class UClass>             _softQuest                                             (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGQuest_Manager::IsQuestToBeStarted(const TSoftClassPtr<class UClass>& _softQuest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Manager", "IsQuestToBeStarted");

	Params::BFGQuest_Manager_IsQuestToBeStarted Parms{};

	Parms._softQuest = _softQuest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_Manager.OnQuestVariableChanged_MainMissionOrChallenge
// (Final, Native, Protected)
// Parameters:
// class UBFGVariableMirror*               _pVarMirror                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGVariable*                     _pVariable                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iOldValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iNewValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGQuest_Manager::OnQuestVariableChanged_MainMissionOrChallenge(class UBFGVariableMirror* _pVarMirror, const class UBFGVariable* _pVariable, int32 _iOldValue, int32 _iNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Manager", "OnQuestVariableChanged_MainMissionOrChallenge");

	Params::BFGQuest_Manager_OnQuestVariableChanged_MainMissionOrChallenge Parms{};

	Parms._pVarMirror = _pVarMirror;
	Parms._pVariable = _pVariable;
	Parms._iOldValue = _iOldValue;
	Parms._iNewValue = _iNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGQuest_Manager.OnWorldLoaded
// (Final, Native, Protected)
// Parameters:
// class UBFGGameInstance*                 _pGameInstance                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWorld*                           _pWorld                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGQuest_Manager::OnWorldLoaded(class UBFGGameInstance* _pGameInstance, class UWorld* _pWorld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Manager", "OnWorldLoaded");

	Params::BFGQuest_Manager_OnWorldLoaded Parms{};

	Parms._pGameInstance = _pGameInstance;
	Parms._pWorld = _pWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGQuest_Manager.PrepareLevelSwitch
// (Final, Native, Public, BlueprintCallable)

void UBFGQuest_Manager::PrepareLevelSwitch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Manager", "PrepareLevelSwitch");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BFGCore.BFGQuest_Manager.QuestUIUpdateEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// class UBFGQuest*                        _pQuest                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             _strText                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FText>                     _aDescription                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGQuest_Manager::QuestUIUpdateEvent__DelegateSignature(class UBFGQuest* _pQuest, const class FText& _strText, const TArray<class FText>& _aDescription)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Manager", "QuestUIUpdateEvent__DelegateSignature");

	Params::BFGQuest_Manager_QuestUIUpdateEvent__DelegateSignature Parms{};

	Parms._pQuest = _pQuest;
	Parms._strText = std::move(_strText);
	Parms._aDescription = std::move(_aDescription);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGQuest_Manager.FindQuestByGuid
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                            _guid                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGQuest*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGQuest* UBFGQuest_Manager::FindQuestByGuid(const struct FGuid& _guid) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Manager", "FindQuestByGuid");

	Params::BFGQuest_Manager_FindQuestByGuid Parms{};

	Parms._guid = std::move(_guid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_Manager.FindQuestOfType
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UBFGQuest>            _pClass                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGQuest*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGQuest* UBFGQuest_Manager::FindQuestOfType(const TSubclassOf<class UBFGQuest>& _pClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Manager", "FindQuestOfType");

	Params::BFGQuest_Manager_FindQuestOfType Parms{};

	Parms._pClass = _pClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_Manager.GameSystem_QuestLog
// (Final, Exec, Native, Public, Const)

void UBFGQuest_Manager::GameSystem_QuestLog() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Manager", "GameSystem_QuestLog");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGQuest_Manager.GameSystem_QuestLogAllWorlds
// (Final, Exec, Native, Public, Const)

void UBFGQuest_Manager::GameSystem_QuestLogAllWorlds() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Manager", "GameSystem_QuestLogAllWorlds");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGQuest_Manager.GetGameState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ABFGGameState*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGGameState* UBFGQuest_Manager::GetGameState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Manager", "GetGameState");

	Params::BFGQuest_Manager_GetGameState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_Manager.GetMainQuestName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    _bFilterCurrentWorld                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bReturnWorldNameIfNull                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UBFGQuest_Manager::GetMainQuestName(bool _bFilterCurrentWorld, bool _bReturnWorldNameIfNull) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Manager", "GetMainQuestName");

	Params::BFGQuest_Manager_GetMainQuestName Parms{};

	Parms._bFilterCurrentWorld = _bFilterCurrentWorld;
	Parms._bReturnWorldNameIfNull = _bReturnWorldNameIfNull;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_Manager.GetMainQuestText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UBFGQuest_Manager::GetMainQuestText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Manager", "GetMainQuestText");

	Params::BFGQuest_Manager_GetMainQuestText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuest_Manager.GetQuests
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UBFGQuest*>                _aQuestsOut                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UBFGQuest_Manager::GetQuests(TArray<class UBFGQuest*>* _aQuestsOut) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Manager", "GetQuests");

	Params::BFGQuest_Manager_GetQuests Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_aQuestsOut != nullptr)
		*_aQuestsOut = std::move(Parms._aQuestsOut);
}


// Function BFGCore.BFGQuest_Manager.GetQuestsInProgress
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UBFGQuest*>                _apQuestsOut                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UBFGQuest_Manager::GetQuestsInProgress(TArray<class UBFGQuest*>* _apQuestsOut) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Manager", "GetQuestsInProgress");

	Params::BFGQuest_Manager_GetQuestsInProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_apQuestsOut != nullptr)
		*_apQuestsOut = std::move(Parms._apQuestsOut);
}


// Function BFGCore.BFGQuest_Manager.GetRunningQuestTimers
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UBFGQuest_Timer*>          _aTimersOut                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UBFGQuest_Manager::GetRunningQuestTimers(TArray<class UBFGQuest_Timer*>* _aTimersOut) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Manager", "GetRunningQuestTimers");

	Params::BFGQuest_Manager_GetRunningQuestTimers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_aTimersOut != nullptr)
		*_aTimersOut = std::move(Parms._aTimersOut);
}


// Function BFGCore.BFGQuest_Manager.GotoMotherShip
// (Final, Native, Public, BlueprintCallable, Const)

void UBFGQuest_Manager::GotoMotherShip() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuest_Manager", "GotoMotherShip");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVariableAction_Dialog_Finished.GetActionName_DialogFinished
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableAction_Dialog_Finished::GetActionName_DialogFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableAction_Dialog_Finished", "GetActionName_DialogFinished");

	Params::BFGVariableAction_Dialog_Finished_GetActionName_DialogFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuestSettings.GetSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBFGQuestSettings*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGQuestSettings* UBFGQuestSettings::GetSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGQuestSettings", "GetSettings");

	Params::BFGQuestSettings_GetSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGQuestSettings.GetChallengeDefaults
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBFGChallengeType                       _eType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FBFGQuestSettings_ChallengeDataReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FBFGQuestSettings_ChallengeData UBFGQuestSettings::GetChallengeDefaults(EBFGChallengeType _eType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGQuestSettings", "GetChallengeDefaults");

	Params::BFGQuestSettings_GetChallengeDefaults Parms{};

	Parms._eType = _eType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGRadarObjectInterface.ChangeStaticInfo
// (Native, Public, BlueprintCallable)
// Parameters:
// class UBFGDataAsset_RadarObjectStaticInfo*_pStaticInfo                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IBFGRadarObjectInterface::ChangeStaticInfo(class UBFGDataAsset_RadarObjectStaticInfo* _pStaticInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGRadarObjectInterface", "ChangeStaticInfo");

	Params::BFGRadarObjectInterface_ChangeStaticInfo Parms{};

	Parms._pStaticInfo = _pStaticInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGRadarObjectInterface.ChangeStaticInfoOverride
// (Native, Public, BlueprintCallable)
// Parameters:
// class UBFGDataAsset_RadarObjectStaticInfo*_pStaticInfo                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IBFGRadarObjectInterface::ChangeStaticInfoOverride(class UBFGDataAsset_RadarObjectStaticInfo* _pStaticInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGRadarObjectInterface", "ChangeStaticInfoOverride");

	Params::BFGRadarObjectInterface_ChangeStaticInfoOverride Parms{};

	Parms._pStaticInfo = _pStaticInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGRadarObjectInterface.SetEnabled
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IBFGRadarObjectInterface::SetEnabled(bool _bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGRadarObjectInterface", "SetEnabled");

	Params::BFGRadarObjectInterface_SetEnabled Parms{};

	Parms._bEnabled = _bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGRadarObjectInterface.UnregisterFromManager
// (Native, Public, BlueprintCallable)

void IBFGRadarObjectInterface::UnregisterFromManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGRadarObjectInterface", "UnregisterFromManager");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGRadarObjectInterface.IsEnabled
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IBFGRadarObjectInterface::IsEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGRadarObjectInterface", "IsEnabled");

	Params::BFGRadarObjectInterface_IsEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeaponSelectorAbilityHint.EnableLeft
// (Event, Public, BlueprintEvent)

void UBFGWeaponSelectorAbilityHint::EnableLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeaponSelectorAbilityHint", "EnableLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWeaponSelectorAbilityHint.EnableRight
// (Event, Public, BlueprintEvent)

void UBFGWeaponSelectorAbilityHint::EnableRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeaponSelectorAbilityHint", "EnableRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWeaponSelectorAbilityHint.InitializeDataInternal
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FBFGAbilityHintInfo              _oData                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWeaponSelectorAbilityHint::InitializeDataInternal(const struct FBFGAbilityHintInfo& _oData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeaponSelectorAbilityHint", "InitializeDataInternal");

	Params::BFGWeaponSelectorAbilityHint_InitializeDataInternal Parms{};

	Parms._oData = std::move(_oData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_RadialMenu_OptionIcon.SetBrush
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSlateBrush                      _oBrush                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_RadialMenu_OptionIcon::SetBrush(const struct FSlateBrush& _oBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_RadialMenu_OptionIcon", "SetBrush");

	Params::BFGWidget_RadialMenu_OptionIcon_SetBrush Parms{};

	Parms._oBrush = std::move(_oBrush);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_RadialMenu_OptionIcon.SetHighlighted
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    _bHighlighted                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_RadialMenu_OptionIcon::SetHighlighted(bool _bHighlighted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_RadialMenu_OptionIcon", "SetHighlighted");

	Params::BFGWidget_RadialMenu_OptionIcon_SetHighlighted Parms{};

	Parms._bHighlighted = _bHighlighted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_RadialMenu_OptionIcon.SetState
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    _bUnlocked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bHighlighted                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_RadialMenu_OptionIcon::SetState(bool _bUnlocked, bool _bHighlighted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_RadialMenu_OptionIcon", "SetState");

	Params::BFGWidget_RadialMenu_OptionIcon_SetState Parms{};

	Parms._bUnlocked = _bUnlocked;
	Parms._bHighlighted = _bHighlighted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_RadialMenu_OptionIcon.SetUnlocked
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    _bUnlocked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_RadialMenu_OptionIcon::SetUnlocked(bool _bUnlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_RadialMenu_OptionIcon", "SetUnlocked");

	Params::BFGWidget_RadialMenu_OptionIcon_SetUnlocked Parms{};

	Parms._bUnlocked = _bUnlocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_WeaponSelector_Icon.SetMaxAmmo
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   _iMaxAmmo                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_WeaponSelector_Icon::SetMaxAmmo(int32 _iMaxAmmo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_WeaponSelector_Icon", "SetMaxAmmo");

	Params::BFGWidget_WeaponSelector_Icon_SetMaxAmmo Parms{};

	Parms._iMaxAmmo = _iMaxAmmo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_WeaponSelector_Icon.UpdateAmmo
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FBFGAmmunitionInfo               _iAmmunitionInfo                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UBFGWidget_WeaponSelector_Icon::UpdateAmmo(const struct FBFGAmmunitionInfo& _iAmmunitionInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_WeaponSelector_Icon", "UpdateAmmo");

	Params::BFGWidget_WeaponSelector_Icon_UpdateAmmo Parms{};

	Parms._iAmmunitionInfo = std::move(_iAmmunitionInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BFGCore.BFGRadialMenuUserWidget.Action__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UBFGRadialMenuUserWidget*         _pMenu                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGRadialMenuUserWidget::Action__DelegateSignature(class UBFGRadialMenuUserWidget* _pMenu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGRadialMenuUserWidget", "Action__DelegateSignature");

	Params::BFGRadialMenuUserWidget_Action__DelegateSignature Parms{};

	Parms._pMenu = _pMenu;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGRadialMenuUserWidget.AddOption
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBFGUI_RadialMenu_Option*         _pOption                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGRadialMenuUserWidget::AddOption(class UBFGUI_RadialMenu_Option* _pOption)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGRadialMenuUserWidget", "AddOption");

	Params::BFGRadialMenuUserWidget_AddOption Parms{};

	Parms._pOption = _pOption;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGRadialMenuUserWidget.CreateOption
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             _strText                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             _strTooltip                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             _strDescription                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UObject*                          _pObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGUI_RadialMenu_Option*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGUI_RadialMenu_Option* UBFGRadialMenuUserWidget::CreateOption(const class FText& _strText, const class FText& _strTooltip, const class FText& _strDescription, class UObject* _pObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGRadialMenuUserWidget", "CreateOption");

	Params::BFGRadialMenuUserWidget_CreateOption Parms{};

	Parms._strText = std::move(_strText);
	Parms._strTooltip = std::move(_strTooltip);
	Parms._strDescription = std::move(_strDescription);
	Parms._pObject = _pObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGRadialMenuUserWidget.ExecuteAction
// (Native, Public)
// Parameters:
// class UBFGUI_RadialMenu_Option*         _pOption                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGRadialMenuUserWidget::ExecuteAction(class UBFGUI_RadialMenu_Option* _pOption)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGRadialMenuUserWidget", "ExecuteAction");

	Params::BFGRadialMenuUserWidget_ExecuteAction Parms{};

	Parms._pOption = _pOption;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGRadialMenuUserWidget.GetOptions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UBFGUI_RadialMenu_Option*> ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UBFGUI_RadialMenu_Option*> UBFGRadialMenuUserWidget::GetOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGRadialMenuUserWidget", "GetOptions");

	Params::BFGRadialMenuUserWidget_GetOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGRadialMenuUserWidget.GetSelectedElement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGRadialMenuUserWidget::GetSelectedElement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGRadialMenuUserWidget", "GetSelectedElement");

	Params::BFGRadialMenuUserWidget_GetSelectedElement Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGRadialMenuUserWidget.GetSelectedElementOption
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGUI_RadialMenu_Option*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGUI_RadialMenu_Option* UBFGRadialMenuUserWidget::GetSelectedElementOption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGRadialMenuUserWidget", "GetSelectedElementOption");

	Params::BFGRadialMenuUserWidget_GetSelectedElementOption Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGRadialMenuUserWidget.MoveMarkerHorizontal
// (Final, Native, Protected)
// Parameters:
// float                                   _fValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGRadialMenuUserWidget::MoveMarkerHorizontal(float _fValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGRadialMenuUserWidget", "MoveMarkerHorizontal");

	Params::BFGRadialMenuUserWidget_MoveMarkerHorizontal Parms{};

	Parms._fValue = _fValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGRadialMenuUserWidget.MoveMarkerVertical
// (Final, Native, Protected)
// Parameters:
// float                                   _fValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGRadialMenuUserWidget::MoveMarkerVertical(float _fValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGRadialMenuUserWidget", "MoveMarkerVertical");

	Params::BFGRadialMenuUserWidget_MoveMarkerVertical Parms{};

	Parms._fValue = _fValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGRadialMenuUserWidget.OnShowWeaponInformation
// (Event, Public, BlueprintEvent)
// Parameters:
// class UBFGUI_RadialMenu_Option*         _pOption                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGRadialMenuUserWidget::OnShowWeaponInformation(class UBFGUI_RadialMenu_Option* _pOption, bool _bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGRadialMenuUserWidget", "OnShowWeaponInformation");

	Params::BFGRadialMenuUserWidget_OnShowWeaponInformation Parms{};

	Parms._pOption = _pOption;
	Parms._bShow = _bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGRadialMenuUserWidget.ResetContent
// (Final, Native, Public, BlueprintCallable)

void UBFGRadialMenuUserWidget::ResetContent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGRadialMenuUserWidget", "ResetContent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGRadialMenuUserWidget.SetCurrentSelectedItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _iSelected                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGRadialMenuUserWidget::SetCurrentSelectedItem(int32 _iSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGRadialMenuUserWidget", "SetCurrentSelectedItem");

	Params::BFGRadialMenuUserWidget_SetCurrentSelectedItem Parms{};

	Parms._iSelected = _iSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGRadialMenuUserWidget.TriggerExecuteAction
// (Final, Native, Protected)

void UBFGRadialMenuUserWidget::TriggerExecuteAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGRadialMenuUserWidget", "TriggerExecuteAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGRadialMenuUserWidget.TriggerExecuteAction_Item1
// (Final, Native, Protected)

void UBFGRadialMenuUserWidget::TriggerExecuteAction_Item1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGRadialMenuUserWidget", "TriggerExecuteAction_Item1");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGRadialMenuUserWidget.TriggerExecuteAction_Item2
// (Final, Native, Protected)

void UBFGRadialMenuUserWidget::TriggerExecuteAction_Item2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGRadialMenuUserWidget", "TriggerExecuteAction_Item2");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGRadialMenuUserWidget.TriggerExecuteAction_Item3
// (Final, Native, Protected)

void UBFGRadialMenuUserWidget::TriggerExecuteAction_Item3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGRadialMenuUserWidget", "TriggerExecuteAction_Item3");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGRadialMenuUserWidget.TriggerExecuteAction_Item4
// (Final, Native, Protected)

void UBFGRadialMenuUserWidget::TriggerExecuteAction_Item4()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGRadialMenuUserWidget", "TriggerExecuteAction_Item4");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGRadialMenuUserWidget.TriggerExecuteAction_ItemRelease
// (Final, Native, Protected)

void UBFGRadialMenuUserWidget::TriggerExecuteAction_ItemRelease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGRadialMenuUserWidget", "TriggerExecuteAction_ItemRelease");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGRadialMenuUserWidget.GetCurrentSelectedItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGRadialMenuUserWidget::GetCurrentSelectedItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGRadialMenuUserWidget", "GetCurrentSelectedItem");

	Params::BFGRadialMenuUserWidget_GetCurrentSelectedItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGRadialMenu_WeaponSelector.AddHintToLeftWing
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UBFGWeaponSelectorAbilityHint*    _pHint                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fAnchorVertical                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fAnchorHorizontal                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGRadialMenu_WeaponSelector::AddHintToLeftWing(class UBFGWeaponSelectorAbilityHint* _pHint, float _fAnchorVertical, float _fAnchorHorizontal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGRadialMenu_WeaponSelector", "AddHintToLeftWing");

	Params::BFGRadialMenu_WeaponSelector_AddHintToLeftWing Parms{};

	Parms._pHint = _pHint;
	Parms._fAnchorVertical = _fAnchorVertical;
	Parms._fAnchorHorizontal = _fAnchorHorizontal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGRadialMenu_WeaponSelector.AddHintToRightWing
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UBFGWeaponSelectorAbilityHint*    _pHint                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fAnchorVertical                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fAnchorHorizontal                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGRadialMenu_WeaponSelector::AddHintToRightWing(class UBFGWeaponSelectorAbilityHint* _pHint, float _fAnchorVertical, float _fAnchorHorizontal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGRadialMenu_WeaponSelector", "AddHintToRightWing");

	Params::BFGRadialMenu_WeaponSelector_AddHintToRightWing Parms{};

	Parms._pHint = _pHint;
	Parms._fAnchorVertical = _fAnchorVertical;
	Parms._fAnchorHorizontal = _fAnchorHorizontal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGRadialMenu_WeaponSelector.ClearAbilityHints
// (Event, Public, BlueprintEvent)

void UBFGRadialMenu_WeaponSelector::ClearAbilityHints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGRadialMenu_WeaponSelector", "ClearAbilityHints");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGRadialMenu_WeaponSelector.SetSelectionWheelBGImage
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FSlateBrush                      _image                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGRadialMenu_WeaponSelector::SetSelectionWheelBGImage(const struct FSlateBrush& _image)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGRadialMenu_WeaponSelector", "SetSelectionWheelBGImage");

	Params::BFGRadialMenu_WeaponSelector_SetSelectionWheelBGImage Parms{};

	Parms._image = std::move(_image);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGReadTextureActor.CalculateUVFromWorldPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          _vWorldPos                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D ABFGReadTextureActor::CalculateUVFromWorldPosition(const struct FVector& _vWorldPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGReadTextureActor", "CalculateUVFromWorldPosition");

	Params::BFGReadTextureActor_CalculateUVFromWorldPosition Parms{};

	Parms._vWorldPos = std::move(_vWorldPos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGReadTextureActor.GetTextureValue
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          _vWorldPos                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 ABFGReadTextureActor::GetTextureValue(const struct FVector& _vWorldPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGReadTextureActor", "GetTextureValue");

	Params::BFGReadTextureActor_GetTextureValue Parms{};

	Parms._vWorldPos = std::move(_vWorldPos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGReadTextureActor.GetTraceObjExtent
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          _vOrigin                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vBoxExtent                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGReadTextureActor::GetTraceObjExtent(struct FVector* _vOrigin, struct FVector* _vBoxExtent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGReadTextureActor", "GetTraceObjExtent");

	Params::BFGReadTextureActor_GetTraceObjExtent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_vOrigin != nullptr)
		*_vOrigin = std::move(Parms._vOrigin);

	if (_vBoxExtent != nullptr)
		*_vBoxExtent = std::move(Parms._vBoxExtent);
}


// Function BFGCore.BFGReadTextureManager.GetReadTextureActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ABFGReadTextureActor*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGReadTextureActor* UBFGReadTextureManager::GetReadTextureActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGReadTextureManager", "GetReadTextureActor");

	Params::BFGReadTextureManager_GetReadTextureActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGRestrictedArea.GetViolators
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class AActor*>             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class AActor*> ABFGRestrictedArea::GetViolators() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGRestrictedArea", "GetViolators");

	Params::BFGRestrictedArea_GetViolators Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGRestrictedArea.IsInsideArea
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGRestrictedArea::IsInsideArea(class AActor* _pActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGRestrictedArea", "IsInsideArea");

	Params::BFGRestrictedArea_IsInsideArea Parms{};

	Parms._pActor = _pActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGRestrictedArea.IsViolator
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGRestrictedArea::IsViolator(class AActor* _pActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGRestrictedArea", "IsViolator");

	Params::BFGRestrictedArea_IsViolator Parms{};

	Parms._pActor = _pActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGSaveSystem.OnWorldLoaded
// (Final, Native, Protected)
// Parameters:
// class UBFGGameInstance*                 _pGameInstance                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWorld*                           _pWorld                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGSaveSystem::OnWorldLoaded(class UBFGGameInstance* _pGameInstance, class UWorld* _pWorld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSaveSystem", "OnWorldLoaded");

	Params::BFGSaveSystem_OnWorldLoaded Parms{};

	Parms._pGameInstance = _pGameInstance;
	Parms._pWorld = _pWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGSaveSystem_DataInterface.DoRestore
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<class FName, float>                _aDataValues                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void IBFGSaveSystem_DataInterface::DoRestore(const TMap<class FName, float>& _aDataValues)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSaveSystem_DataInterface", "DoRestore");

	Params::BFGSaveSystem_DataInterface_DoRestore Parms{};

	Parms._aDataValues = std::move(_aDataValues);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGSaveSystem_DataInterface.DoSnapshot
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TMap<class FName, float>                _aDataValuesOut                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void IBFGSaveSystem_DataInterface::DoSnapshot(TMap<class FName, float>* _aDataValuesOut) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSaveSystem_DataInterface", "DoSnapshot");

	Params::BFGSaveSystem_DataInterface_DoSnapshot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_aDataValuesOut != nullptr)
		*_aDataValuesOut = std::move(Parms._aDataValuesOut);
}


// Function BFGCore.BFGSceneComponent_HighlightableSceneObject.RegisterAtManager
// (Final, Native, Public, BlueprintCallable)

void UBFGSceneComponent_HighlightableSceneObject::RegisterAtManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSceneComponent_HighlightableSceneObject", "RegisterAtManager");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGSceneComponent_HighlightableSceneObject.SetEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGSceneComponent_HighlightableSceneObject::SetEnabled(bool _bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSceneComponent_HighlightableSceneObject", "SetEnabled");

	Params::BFGSceneComponent_HighlightableSceneObject_SetEnabled Parms{};

	Parms._bEnabled = _bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGSceneComponent_HighlightableSceneObject.UnregisterFromManager
// (Final, Native, Public, BlueprintCallable)

void UBFGSceneComponent_HighlightableSceneObject::UnregisterFromManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGSceneComponent_HighlightableSceneObject", "UnregisterFromManager");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGScriptedSequence_TaskCrowdLifeStation.CreateAndAddScriptedSequence_TaskJoinCrowdLifeStation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBFGScriptedSequence*             _pScriptedSequence                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class ABFGCrowdLife>     _softCrowdLife                                         (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagQuery                _stationQuery                                          (Parm, NativeAccessSpecifierPublic)
// bool                                    _bFinishAfterJoin                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGScriptedSequence_TaskCrowdLifeStation::CreateAndAddScriptedSequence_TaskJoinCrowdLifeStation(class UBFGScriptedSequence* _pScriptedSequence, TSoftObjectPtr<class ABFGCrowdLife> _softCrowdLife, const struct FGameplayTagQuery& _stationQuery, bool _bFinishAfterJoin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGScriptedSequence_TaskCrowdLifeStation", "CreateAndAddScriptedSequence_TaskJoinCrowdLifeStation");

	Params::BFGScriptedSequence_TaskCrowdLifeStation_CreateAndAddScriptedSequence_TaskJoinCrowdLifeStation Parms{};

	Parms._pScriptedSequence = _pScriptedSequence;
	Parms._softCrowdLife = _softCrowdLife;
	Parms._stationQuery = std::move(_stationQuery);
	Parms._bFinishAfterJoin = _bFinishAfterJoin;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGScriptedSequence_TaskCrowdLifeStation.CreateAndAddScriptedSequence_TaskLeaveCrowdLifeStation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBFGScriptedSequence*             _pScriptedSequence                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class ABFGCrowdLife>     _softCrowdLife                                         (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagQuery                _stationQuery                                          (Parm, NativeAccessSpecifierPublic)
// bool                                    _bFollowRandomPath                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGScriptedSequence_TaskCrowdLifeStation::CreateAndAddScriptedSequence_TaskLeaveCrowdLifeStation(class UBFGScriptedSequence* _pScriptedSequence, TSoftObjectPtr<class ABFGCrowdLife> _softCrowdLife, const struct FGameplayTagQuery& _stationQuery, bool _bFollowRandomPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGScriptedSequence_TaskCrowdLifeStation", "CreateAndAddScriptedSequence_TaskLeaveCrowdLifeStation");

	Params::BFGScriptedSequence_TaskCrowdLifeStation_CreateAndAddScriptedSequence_TaskLeaveCrowdLifeStation Parms{};

	Parms._pScriptedSequence = _pScriptedSequence;
	Parms._softCrowdLife = _softCrowdLife;
	Parms._stationQuery = std::move(_stationQuery);
	Parms._bFollowRandomPath = _bFollowRandomPath;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGScriptedSequence_TaskInteractWith.CreateAndAddScriptedSequence_TaskInteractWith
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBFGScriptedSequence*             _pScriptedSequence                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class AActor>            _softInteractable                                      (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class AActor>            _softDestination                                       (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBFGInteractAnimationSequence    _animSequenceData                                      (Parm, NativeAccessSpecifierPublic)
// bool                                    _bLooping                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fDuration                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iDoInteractAfterAnimSequenceIndex                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGScriptedSequence_TaskInteractWith::CreateAndAddScriptedSequence_TaskInteractWith(class UBFGScriptedSequence* _pScriptedSequence, TSoftObjectPtr<class AActor> _softInteractable, TSoftObjectPtr<class AActor> _softDestination, const struct FBFGInteractAnimationSequence& _animSequenceData, bool _bLooping, float _fDuration, int32 _iDoInteractAfterAnimSequenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGScriptedSequence_TaskInteractWith", "CreateAndAddScriptedSequence_TaskInteractWith");

	Params::BFGScriptedSequence_TaskInteractWith_CreateAndAddScriptedSequence_TaskInteractWith Parms{};

	Parms._pScriptedSequence = _pScriptedSequence;
	Parms._softInteractable = _softInteractable;
	Parms._softDestination = _softDestination;
	Parms._animSequenceData = std::move(_animSequenceData);
	Parms._bLooping = _bLooping;
	Parms._fDuration = _fDuration;
	Parms._iDoInteractAfterAnimSequenceIndex = _iDoInteractAfterAnimSequenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGScriptedSequence_TaskInteractWith.OnInteractAnimChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UBFGNetworkPathAgent_AIStatePlayInteractAtLocation*_pTask                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBFGInteractAnimationData        _next                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FBFGInteractAnimationData        _previous                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UBFGScriptedSequence_TaskInteractWith::OnInteractAnimChanged(class UBFGNetworkPathAgent_AIStatePlayInteractAtLocation* _pTask, const struct FBFGInteractAnimationData& _next, const struct FBFGInteractAnimationData& _previous)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGScriptedSequence_TaskInteractWith", "OnInteractAnimChanged");

	Params::BFGScriptedSequence_TaskInteractWith_OnInteractAnimChanged Parms{};

	Parms._pTask = _pTask;
	Parms._next = std::move(_next);
	Parms._previous = std::move(_previous);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGScriptedSequenceManager.CreateNew
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             _strIdentifier                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagQuery                _pawnGameplayTagQuery                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UObject*                          _pDebugContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGScriptedSequence_Persistent*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGScriptedSequence_Persistent* UBFGScriptedSequenceManager::CreateNew(const class FName& _strIdentifier, const struct FGameplayTagQuery& _pawnGameplayTagQuery, class UObject* _pDebugContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGScriptedSequenceManager", "CreateNew");

	Params::BFGScriptedSequenceManager_CreateNew Parms{};

	Parms._strIdentifier = _strIdentifier;
	Parms._pawnGameplayTagQuery = std::move(_pawnGameplayTagQuery);
	Parms._pDebugContext = _pDebugContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGScriptedSequenceManager.CreateNewSequenceFor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             _strIdentifier                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class AActor>            _softActorReference                                    (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          _pDebugContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGScriptedSequence_Persistent*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGScriptedSequence_Persistent* UBFGScriptedSequenceManager::CreateNewSequenceFor(const class FName& _strIdentifier, const TSoftObjectPtr<class AActor>& _softActorReference, class UObject* _pDebugContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGScriptedSequenceManager", "CreateNewSequenceFor");

	Params::BFGScriptedSequenceManager_CreateNewSequenceFor Parms{};

	Parms._strIdentifier = _strIdentifier;
	Parms._softActorReference = _softActorReference;
	Parms._pDebugContext = _pDebugContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGScriptedSequenceManager.CreateNewSequenceForTransient
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             _strIdentifier                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class AActor>            _softActorReference                                    (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          _pDebugContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGScriptedSequence_Transient*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGScriptedSequence_Transient* UBFGScriptedSequenceManager::CreateNewSequenceForTransient(const class FName& _strIdentifier, const TSoftObjectPtr<class AActor>& _softActorReference, class UObject* _pDebugContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGScriptedSequenceManager", "CreateNewSequenceForTransient");

	Params::BFGScriptedSequenceManager_CreateNewSequenceForTransient Parms{};

	Parms._strIdentifier = _strIdentifier;
	Parms._softActorReference = _softActorReference;
	Parms._pDebugContext = _pDebugContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGStatisticsManager.IncreaseStatistic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBFGGameStatistic                       _eGameStat                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fAmount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGStatisticsManager::IncreaseStatistic(EBFGGameStatistic _eGameStat, float _fAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGStatisticsManager", "IncreaseStatistic");

	Params::BFGStatisticsManager_IncreaseStatistic Parms{};

	Parms._eGameStat = _eGameStat;
	Parms._fAmount = _fAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGStatisticsManager.OnCreate
// (Event, Public, BlueprintEvent)

void UBFGStatisticsManager::OnCreate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGStatisticsManager", "OnCreate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGStatisticsManager.SetStatistic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBFGGameStatistic                       _eGameStat                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGStatisticsManager::SetStatistic(EBFGGameStatistic _eGameStat, float _fValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGStatisticsManager", "SetStatistic");

	Params::BFGStatisticsManager_SetStatistic Parms{};

	Parms._eGameStat = _eGameStat;
	Parms._fValue = _fValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGStatisticsManager.GetAllStatistics
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TMap<EBFGGameStatistic, struct FBFGGameStatisticData>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TMap<EBFGGameStatistic, struct FBFGGameStatisticData> UBFGStatisticsManager::GetAllStatistics() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGStatisticsManager", "GetAllStatistics");

	Params::BFGStatisticsManager_GetAllStatistics Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGStatisticsManager.GetStatistic
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBFGGameStatistic                       _eGameStat                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBFGGameStatisticData            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FBFGGameStatisticData UBFGStatisticsManager::GetStatistic(EBFGGameStatistic _eGameStat) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGStatisticsManager", "GetStatistic");

	Params::BFGStatisticsManager_GetStatistic Parms{};

	Parms._eGameStat = _eGameStat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGTaskNode_BossFirePattern.OnPatternFinished
// (Final, Native, Public)
// Parameters:
// class ABFGWeapon*                       _pWeapon                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGTaskNode_BossFirePattern::OnPatternFinished(class ABFGWeapon* _pWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTaskNode_BossFirePattern", "OnPatternFinished");

	Params::BFGTaskNode_BossFirePattern_OnPatternFinished Parms{};

	Parms._pWeapon = _pWeapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTrafficCrowdManager.UnlockInitialAgentBehaviour
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class AActor>            _softActorReference                                    (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGTrafficCrowdManager::UnlockInitialAgentBehaviour(const class UObject* WorldContextObject, const TSoftObjectPtr<class AActor>& _softActorReference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGTrafficCrowdManager", "UnlockInitialAgentBehaviour");

	Params::BFGTrafficCrowdManager_UnlockInitialAgentBehaviour Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms._softActorReference = _softActorReference;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGTrafficCrowdManager.DeregisterObstacleProxy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _pObstacle                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGTrafficCrowdManager::DeregisterObstacleProxy(class AActor* _pObstacle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTrafficCrowdManager", "DeregisterObstacleProxy");

	Params::BFGTrafficCrowdManager_DeregisterObstacleProxy Parms{};

	Parms._pObstacle = _pObstacle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTrafficCrowdManager.GetAgentsForTagsAndActorList
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagQuery                _query                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<TSoftObjectPtr<class AActor>>    _aExplicitActorList                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)
// TArray<class UBFGNetworkPathAgent*>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UBFGNetworkPathAgent*> UBFGTrafficCrowdManager::GetAgentsForTagsAndActorList(const struct FGameplayTagQuery& _query, const TArray<TSoftObjectPtr<class AActor>>& _aExplicitActorList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTrafficCrowdManager", "GetAgentsForTagsAndActorList");

	Params::BFGTrafficCrowdManager_GetAgentsForTagsAndActorList Parms{};

	Parms._query = std::move(_query);
	Parms._aExplicitActorList = std::move(_aExplicitActorList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGTrafficCrowdManager.HideOpportunityWidgets
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<TSubclassOf<class AActor>>       _aClassWhiteList                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)
// struct FGameplayTagQuery                _query                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<TSoftObjectPtr<class AActor>>    _aExplicitActorList                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)

void UBFGTrafficCrowdManager::HideOpportunityWidgets(const TArray<TSubclassOf<class AActor>>& _aClassWhiteList, const struct FGameplayTagQuery& _query, const TArray<TSoftObjectPtr<class AActor>>& _aExplicitActorList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTrafficCrowdManager", "HideOpportunityWidgets");

	Params::BFGTrafficCrowdManager_HideOpportunityWidgets Parms{};

	Parms._aClassWhiteList = std::move(_aClassWhiteList);
	Parms._query = std::move(_query);
	Parms._aExplicitActorList = std::move(_aExplicitActorList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTrafficCrowdManager.OnWorldLoaded
// (Final, Native, Protected)
// Parameters:
// class UBFGGameInstance*                 _pGameInstance                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWorld*                           _pWorld                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGTrafficCrowdManager::OnWorldLoaded(class UBFGGameInstance* _pGameInstance, class UWorld* _pWorld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTrafficCrowdManager", "OnWorldLoaded");

	Params::BFGTrafficCrowdManager_OnWorldLoaded Parms{};

	Parms._pGameInstance = _pGameInstance;
	Parms._pWorld = _pWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTrafficCrowdManager.PrePopulateAroundPosition
// (Final, Exec, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// struct FVector                          _vVector                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bRemoveAllAgents                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  _fMaxTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGTrafficCrowdManager::PrePopulateAroundPosition(const struct FVector& _vVector, bool _bRemoveAllAgents, double _fMaxTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTrafficCrowdManager", "PrePopulateAroundPosition");

	Params::BFGTrafficCrowdManager_PrePopulateAroundPosition Parms{};

	Parms._vVector = std::move(_vVector);
	Parms._bRemoveAllAgents = _bRemoveAllAgents;
	Parms._fMaxTime = _fMaxTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTrafficCrowdManager.RegisterObstacleProxy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _pObstacle                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bLocalizeAlongPath                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bIsPlayer                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGTrafficCrowdManager::RegisterObstacleProxy(class AActor* _pObstacle, bool _bLocalizeAlongPath, bool _bIsPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTrafficCrowdManager", "RegisterObstacleProxy");

	Params::BFGTrafficCrowdManager_RegisterObstacleProxy Parms{};

	Parms._pObstacle = _pObstacle;
	Parms._bLocalizeAlongPath = _bLocalizeAlongPath;
	Parms._bIsPlayer = _bIsPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTrafficCrowdManager.RequestDespawnAgentWithSoftReference
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class AActor>            _softReference                                         (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBFGNetworkPathAgentDespawnRequest      _eRequest                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fTimeOut                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGTrafficCrowdManager::RequestDespawnAgentWithSoftReference(const TSoftObjectPtr<class AActor>& _softReference, EBFGNetworkPathAgentDespawnRequest _eRequest, float _fTimeOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTrafficCrowdManager", "RequestDespawnAgentWithSoftReference");

	Params::BFGTrafficCrowdManager_RequestDespawnAgentWithSoftReference Parms{};

	Parms._softReference = _softReference;
	Parms._eRequest = _eRequest;
	Parms._fTimeOut = _fTimeOut;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGTrafficCrowdManager.SetCrowdflowAllowedByTagQueryOverrideByGameplayTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagQuery                _query                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTagQuery                _override                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGTrafficCrowdManager::SetCrowdflowAllowedByTagQueryOverrideByGameplayTag(const struct FGameplayTagQuery& _query, const struct FGameplayTagQuery& _override)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTrafficCrowdManager", "SetCrowdflowAllowedByTagQueryOverrideByGameplayTag");

	Params::BFGTrafficCrowdManager_SetCrowdflowAllowedByTagQueryOverrideByGameplayTag Parms{};

	Parms._query = std::move(_query);
	Parms._override = std::move(_override);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTrafficCrowdManager.SetCrowdflowAvailableByGameplayTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagQuery                _query                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    _bState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGTrafficCrowdManager::SetCrowdflowAvailableByGameplayTag(const struct FGameplayTagQuery& _query, bool _bState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTrafficCrowdManager", "SetCrowdflowAvailableByGameplayTag");

	Params::BFGTrafficCrowdManager_SetCrowdflowAvailableByGameplayTag Parms{};

	Parms._query = std::move(_query);
	Parms._bState = _bState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTrafficCrowdManager.SetCrowdLifeStationsAvailableByGameplayTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagQuery                _query                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    _bState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGTrafficCrowdManager::SetCrowdLifeStationsAvailableByGameplayTag(const struct FGameplayTagQuery& _query, bool _bState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTrafficCrowdManager", "SetCrowdLifeStationsAvailableByGameplayTag");

	Params::BFGTrafficCrowdManager_SetCrowdLifeStationsAvailableByGameplayTag Parms{};

	Parms._query = std::move(_query);
	Parms._bState = _bState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTrafficCrowdManager.SetCrowdScriptConsAvailableByGameplayTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagQuery                _query                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    _bState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGTrafficCrowdManager::SetCrowdScriptConsAvailableByGameplayTag(const struct FGameplayTagQuery& _query, bool _bState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTrafficCrowdManager", "SetCrowdScriptConsAvailableByGameplayTag");

	Params::BFGTrafficCrowdManager_SetCrowdScriptConsAvailableByGameplayTag Parms{};

	Parms._query = std::move(_query);
	Parms._bState = _bState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTrafficCrowdManager.ShowOpportunityWidgets
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FBFGAgentInstanceOpportunityData _data                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<TSubclassOf<class AActor>>       _aClassWhiteList                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)
// struct FGameplayTagQuery                _query                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<TSoftObjectPtr<class AActor>>    _aExplicitActorList                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)

void UBFGTrafficCrowdManager::ShowOpportunityWidgets(const struct FBFGAgentInstanceOpportunityData& _data, const TArray<TSubclassOf<class AActor>>& _aClassWhiteList, const struct FGameplayTagQuery& _query, const TArray<TSoftObjectPtr<class AActor>>& _aExplicitActorList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTrafficCrowdManager", "ShowOpportunityWidgets");

	Params::BFGTrafficCrowdManager_ShowOpportunityWidgets Parms{};

	Parms._data = std::move(_data);
	Parms._aClassWhiteList = std::move(_aClassWhiteList);
	Parms._query = std::move(_query);
	Parms._aExplicitActorList = std::move(_aExplicitActorList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTrafficCrowdManager.ToggleCrowdSpawningCompositionUnlockAll
// (Final, Exec, Native, Public, BlueprintCallable)

void UBFGTrafficCrowdManager::ToggleCrowdSpawningCompositionUnlockAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTrafficCrowdManager", "ToggleCrowdSpawningCompositionUnlockAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTrafficCrowdManager.FindAgentWithSoftReference
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class AActor>            _softReference                                         (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGNetworkPathAgent*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGNetworkPathAgent* UBFGTrafficCrowdManager::FindAgentWithSoftReference(const TSoftObjectPtr<class AActor>& _softReference) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTrafficCrowdManager", "FindAgentWithSoftReference");

	Params::BFGTrafficCrowdManager_FindAgentWithSoftReference Parms{};

	Parms._softReference = _softReference;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGTrafficCrowdManager.GetScriptedSequenceManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGScriptedSequenceManager*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGScriptedSequenceManager* UBFGTrafficCrowdManager::GetScriptedSequenceManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTrafficCrowdManager", "GetScriptedSequenceManager");

	Params::BFGTrafficCrowdManager_GetScriptedSequenceManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGTrafficPathFinder_Visitor.OnVisitedPathDirty
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// struct FGuid                            _path                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGTrafficPathFinder_Visitor::OnVisitedPathDirty(const struct FGuid& _path)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTrafficPathFinder_Visitor", "OnVisitedPathDirty");

	Params::BFGTrafficPathFinder_Visitor_OnVisitedPathDirty Parms{};

	Parms._path = std::move(_path);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTriggerManager.CheckIsBoxInNonNavigableArea
// (Final, Native, Protected, HasOutParams, HasDefaults, Const)
// Parameters:
// struct FBox                             _box                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGTriggerManager::CheckIsBoxInNonNavigableArea(const struct FBox& _box) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTriggerManager", "CheckIsBoxInNonNavigableArea");

	Params::BFGTriggerManager_CheckIsBoxInNonNavigableArea Parms{};

	Parms._box = std::move(_box);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGTutorialPageTarget.AddPage
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBFGWidget_TutorialPage*          _pTutorialPage                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IBFGTutorialPageTarget::AddPage(class UBFGWidget_TutorialPage* _pTutorialPage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTutorialPageTarget", "AddPage");

	Params::BFGTutorialPageTarget_AddPage Parms{};

	Parms._pTutorialPage = _pTutorialPage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTutorialPageTarget.Clear
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IBFGTutorialPageTarget::Clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTutorialPageTarget", "Clear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTutorialPageTarget.RemovePage
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBFGWidget_TutorialPage*          _pTutorialPage                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IBFGTutorialPageTarget::RemovePage(class UBFGWidget_TutorialPage* _pTutorialPage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTutorialPageTarget", "RemovePage");

	Params::BFGTutorialPageTarget_RemovePage Parms{};

	Parms._pTutorialPage = _pTutorialPage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGTutorialPageTarget.SetStackSize
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   _iStackSize                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IBFGTutorialPageTarget::SetStackSize(int32 _iStackSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGTutorialPageTarget", "SetStackSize");

	Params::BFGTutorialPageTarget_SetStackSize Parms{};

	Parms._iStackSize = _iStackSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGUFOAbility_Drain.OnDrainDamageTicked
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   _fDamageAmount                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGUFOAbility_Drain::OnDrainDamageTicked(float _fDamageAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUFOAbility_Drain", "OnDrainDamageTicked");

	Params::BFGUFOAbility_Drain_OnDrainDamageTicked Parms{};

	Parms._fDamageAmount = _fDamageAmount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGUFOAbility_Drain.GetSmashCounter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGUFOAbility_Drain::GetSmashCounter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUFOAbility_Drain", "GetSmashCounter");

	Params::BFGUFOAbility_Drain_GetSmashCounter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGUFOLandingSite.CallUFO
// (Final, Native, Public, BlueprintCallable)

void ABFGUFOLandingSite::CallUFO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUFOLandingSite", "CallUFO");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGUFOLandingSite.GetCharacterLocation
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          _vLocationOut                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         _rotationOut                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void ABFGUFOLandingSite::GetCharacterLocation(struct FVector* _vLocationOut, struct FRotator* _rotationOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUFOLandingSite", "GetCharacterLocation");

	Params::BFGUFOLandingSite_GetCharacterLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_vLocationOut != nullptr)
		*_vLocationOut = std::move(Parms._vLocationOut);

	if (_rotationOut != nullptr)
		*_rotationOut = std::move(Parms._rotationOut);
}


// Function BFGCore.BFGUFOLandingSite.GetUFOLocation
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          _vLocationOut                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         _rotationOut                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void ABFGUFOLandingSite::GetUFOLocation(struct FVector* _vLocationOut, struct FRotator* _rotationOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUFOLandingSite", "GetUFOLocation");

	Params::BFGUFOLandingSite_GetUFOLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_vLocationOut != nullptr)
		*_vLocationOut = std::move(Parms._vLocationOut);

	if (_rotationOut != nullptr)
		*_rotationOut = std::move(Parms._rotationOut);
}


// Function BFGCore.BFGUFOLandingSite.OnPlayerEntersRange
// (Event, Protected, BlueprintEvent)

void ABFGUFOLandingSite::OnPlayerEntersRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUFOLandingSite", "OnPlayerEntersRange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGUFOLandingSite.OnPlayerLeavesRange
// (Event, Protected, BlueprintEvent)

void ABFGUFOLandingSite::OnPlayerLeavesRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUFOLandingSite", "OnPlayerLeavesRange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGUFOLandingSite.OnScreenFadingStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bFaded                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGUFOLandingSite::OnScreenFadingStateChanged(bool _bFaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUFOLandingSite", "OnScreenFadingStateChanged");

	Params::BFGUFOLandingSite_OnScreenFadingStateChanged Parms{};

	Parms._bFaded = _bFaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGUFOLandingSite.OnUFOEntersRange
// (Event, Protected, BlueprintEvent)

void ABFGUFOLandingSite::OnUFOEntersRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUFOLandingSite", "OnUFOEntersRange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGUFOLandingSite.OnUFOLeavesRange
// (Event, Protected, BlueprintEvent)

void ABFGUFOLandingSite::OnUFOLeavesRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUFOLandingSite", "OnUFOLeavesRange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGUFOLandingSite.ResetCallUFO
// (Final, Native, Public, BlueprintCallable)

void ABFGUFOLandingSite::ResetCallUFO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUFOLandingSite", "ResetCallUFO");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGUFOLandingSite.SetUnlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bUnlocked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGUFOLandingSite::SetUnlocked(bool _bUnlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUFOLandingSite", "SetUnlocked");

	Params::BFGUFOLandingSite_SetUnlocked Parms{};

	Parms._bUnlocked = _bUnlocked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGUFOLandingSite.GetDistanceToPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABFGUFOLandingSite::GetDistanceToPlayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUFOLandingSite", "GetDistanceToPlayer");

	Params::BFGUFOLandingSite_GetDistanceToPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGUFOLandingSite.GetDistanceToUFO
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABFGUFOLandingSite::GetDistanceToUFO() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUFOLandingSite", "GetDistanceToUFO");

	Params::BFGUFOLandingSite_GetDistanceToUFO Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGUFOLandingSite.GetIsPlayerInNotificationRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGUFOLandingSite::GetIsPlayerInNotificationRange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUFOLandingSite", "GetIsPlayerInNotificationRange");

	Params::BFGUFOLandingSite_GetIsPlayerInNotificationRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGUFOLandingSite.GetIsPlayerInRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGUFOLandingSite::GetIsPlayerInRange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUFOLandingSite", "GetIsPlayerInRange");

	Params::BFGUFOLandingSite_GetIsPlayerInRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGUFOLandingSite.GetIsUFOInRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGUFOLandingSite::GetIsUFOInRange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUFOLandingSite", "GetIsUFOInRange");

	Params::BFGUFOLandingSite_GetIsUFOInRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGUFOLandingSite.HasLandedUFO
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGUFOLandingSite::HasLandedUFO() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUFOLandingSite", "HasLandedUFO");

	Params::BFGUFOLandingSite_HasLandedUFO Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGUFOManager.CheatSpawnCryptoAtClosestLandingSite
// (Final, Exec, Native, Public)

void UBFGUFOManager::CheatSpawnCryptoAtClosestLandingSite()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUFOManager", "CheatSpawnCryptoAtClosestLandingSite");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGUFOManager.CheatSpawnUFOAtClosestLandingSite
// (Final, Exec, Native, Public)

void UBFGUFOManager::CheatSpawnUFOAtClosestLandingSite()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUFOManager", "CheatSpawnUFOAtClosestLandingSite");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGUFOManager.OnFadingStateFinished
// (Final, Native, Protected)
// Parameters:
// class FName                             _strFadeIdentifier                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bFadeOut                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGUFOManager::OnFadingStateFinished(class FName _strFadeIdentifier, bool _bFadeOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUFOManager", "OnFadingStateFinished");

	Params::BFGUFOManager_OnFadingStateFinished Parms{};

	Parms._strFadeIdentifier = _strFadeIdentifier;
	Parms._bFadeOut = _bFadeOut;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGUFOManager.SetUFO
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ABFGPlayerUFO*                    _pUFO                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGUFOManager::SetUFO(class ABFGPlayerUFO* _pUFO)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUFOManager", "SetUFO");

	Params::BFGUFOManager_SetUFO Parms{};

	Parms._pUFO = _pUFO;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGUFOManager.GetUFO
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ABFGPlayerUFO*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGPlayerUFO* UBFGUFOManager::GetUFO() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGUFOManager", "GetUFO");

	Params::BFGUFOManager_GetUFO Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableAction_AITaskState_Complete.GetActionName_AITaskState_Complete
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableAction_AITaskState_Complete::GetActionName_AITaskState_Complete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableAction_AITaskState_Complete", "GetActionName_AITaskState_Complete");

	Params::BFGVariableAction_AITaskState_Complete_GetActionName_AITaskState_Complete Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableAction_Boolean_SetTrue.GetActionName_BooleanSetTrue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableAction_Boolean_SetTrue::GetActionName_BooleanSetTrue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableAction_Boolean_SetTrue", "GetActionName_BooleanSetTrue");

	Params::BFGVariableAction_Boolean_SetTrue_GetActionName_BooleanSetTrue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableAction_MissionGroup_Abort.GetActionName_MissionGroupAbort
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableAction_MissionGroup_Abort::GetActionName_MissionGroupAbort()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableAction_MissionGroup_Abort", "GetActionName_MissionGroupAbort");

	Params::BFGVariableAction_MissionGroup_Abort_GetActionName_MissionGroupAbort Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableAction_Quest_MakeAvailable.GetActionName_QuestMakeAvailabe
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableAction_Quest_MakeAvailable::GetActionName_QuestMakeAvailabe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableAction_Quest_MakeAvailable", "GetActionName_QuestMakeAvailabe");

	Params::BFGVariableAction_Quest_MakeAvailable_GetActionName_QuestMakeAvailabe Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableAction_Quest_Accept.GetActionName_QuestAccept
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableAction_Quest_Accept::GetActionName_QuestAccept()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableAction_Quest_Accept", "GetActionName_QuestAccept");

	Params::BFGVariableAction_Quest_Accept_GetActionName_QuestAccept Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableAction_Quest_Fail.GetActionName_QuestFail
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableAction_Quest_Fail::GetActionName_QuestFail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableAction_Quest_Fail", "GetActionName_QuestFail");

	Params::BFGVariableAction_Quest_Fail_GetActionName_QuestFail Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableAction_QuestCounter_Increase.GetActionName_QuestCounterIncrease
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableAction_QuestCounter_Increase::GetActionName_QuestCounterIncrease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableAction_QuestCounter_Increase", "GetActionName_QuestCounterIncrease");

	Params::BFGVariableAction_QuestCounter_Increase_GetActionName_QuestCounterIncrease Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableAction_Timer_Start.GetActionName_TimerStart
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableAction_Timer_Start::GetActionName_TimerStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableAction_Timer_Start", "GetActionName_TimerStart");

	Params::BFGVariableAction_Timer_Start_GetActionName_TimerStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableAction_Timer_Run.GetActionName_TimerRun
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableAction_Timer_Run::GetActionName_TimerRun()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableAction_Timer_Run", "GetActionName_TimerRun");

	Params::BFGVariableAction_Timer_Run_GetActionName_TimerRun Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableMirror.ApplyActionWithName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UBFGVariable*                     _pVariable                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _actionName                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGVariableMirror::ApplyActionWithName(const class UBFGVariable* _pVariable, const class FName& _actionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVariableMirror", "ApplyActionWithName");

	Params::BFGVariableMirror_ApplyActionWithName Parms{};

	Parms._pVariable = _pVariable;
	Parms._actionName = _actionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVariableMirror.SetValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGVariable*                     _pVariable                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _value                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bReplicate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bDoCallbacks                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGVariableMirror::SetValue(const class UBFGVariable* _pVariable, int32 _value, bool _bReplicate, bool _bDoCallbacks)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVariableMirror", "SetValue");

	Params::BFGVariableMirror_SetValue Parms{};

	Parms._pVariable = _pVariable;
	Parms._value = _value;
	Parms._bReplicate = _bReplicate;
	Parms._bDoCallbacks = _bDoCallbacks;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableMirror.GameSystem_VarMirrorLog
// (Final, Exec, Native, Public, Const)

void UBFGVariableMirror::GameSystem_VarMirrorLog() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVariableMirror", "GameSystem_VarMirrorLog");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVariableMirror.GameSystem_VarMirrorLogName
// (Final, Exec, Native, Public, Const)
// Parameters:
// class FName                             _strPartialVarName                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGVariableMirror::GameSystem_VarMirrorLogName(class FName _strPartialVarName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVariableMirror", "GameSystem_VarMirrorLogName");

	Params::BFGVariableMirror_GameSystem_VarMirrorLogName Parms{};

	Parms._strPartialVarName = _strPartialVarName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVariableMirror.GetAction
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                            _actionGuid                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGVariableAction*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGVariableAction* UBFGVariableMirror::GetAction(const struct FGuid& _actionGuid) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVariableMirror", "GetAction");

	Params::BFGVariableMirror_GetAction Parms{};

	Parms._actionGuid = std::move(_actionGuid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableMirror.GetActionByName
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             _name                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGVariableAction*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGVariableAction* UBFGVariableMirror::GetActionByName(const class FName& _name) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVariableMirror", "GetActionByName");

	Params::BFGVariableMirror_GetActionByName Parms{};

	Parms._name = _name;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableMirror.GetAllVariables
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TMap<struct FGuid, class UBFGVariable*>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TMap<struct FGuid, class UBFGVariable*> UBFGVariableMirror::GetAllVariables() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVariableMirror", "GetAllVariables");

	Params::BFGVariableMirror_GetAllVariables Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableMirror.GetSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGVariableMirror_Settings*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGVariableMirror_Settings* UBFGVariableMirror::GetSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVariableMirror", "GetSettings");

	Params::BFGVariableMirror_GetSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableMirror.GetValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGVariable*                     _pVariable                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGVariableMirror::GetValue(const class UBFGVariable* _pVariable) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVariableMirror", "GetValue");

	Params::BFGVariableMirror_GetValue Parms{};

	Parms._pVariable = _pVariable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableMirror.GetValueName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGVariable*                     _pVariable                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableMirror::GetValueName(const class UBFGVariable* _pVariable) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVariableMirror", "GetValueName");

	Params::BFGVariableMirror_GetValueName Parms{};

	Parms._pVariable = _pVariable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableMirror.GetValueNameForValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGVariable*                     _pVariable                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _value                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableMirror::GetValueNameForValue(const class UBFGVariable* _pVariable, int32 _value) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVariableMirror", "GetValueNameForValue");

	Params::BFGVariableMirror_GetValueNameForValue Parms{};

	Parms._pVariable = _pVariable;
	Parms._value = _value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableMirror.GetVariable
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                            _variableGuid                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGVariable*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGVariable* UBFGVariableMirror::GetVariable(const struct FGuid& _variableGuid) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVariableMirror", "GetVariable");

	Params::BFGVariableMirror_GetVariable Parms{};

	Parms._variableGuid = std::move(_variableGuid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableMirror.GetVariableByName
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             _name                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGVariable*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGVariable* UBFGVariableMirror::GetVariableByName(const class FName& _name) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVariableMirror", "GetVariableByName");

	Params::BFGVariableMirror_GetVariableByName Parms{};

	Parms._name = _name;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableMirror.GetVariableType
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             _name                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGVariableType*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGVariableType* UBFGVariableMirror::GetVariableType(const class FName& _name) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVariableMirror", "GetVariableType");

	Params::BFGVariableMirror_GetVariableType Parms{};

	Parms._name = _name;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_AITaskState.GetState_AITaskState_Available
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableType_AITaskState::GetState_AITaskState_Available()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_AITaskState", "GetState_AITaskState_Available");

	Params::BFGVariableType_AITaskState_GetState_AITaskState_Available Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_AITaskState.GetState_AITaskState_Completed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableType_AITaskState::GetState_AITaskState_Completed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_AITaskState", "GetState_AITaskState_Completed");

	Params::BFGVariableType_AITaskState_GetState_AITaskState_Completed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_AITaskState.GetState_AITaskState_Executing
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableType_AITaskState::GetState_AITaskState_Executing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_AITaskState", "GetState_AITaskState_Executing");

	Params::BFGVariableType_AITaskState_GetState_AITaskState_Executing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_AITaskState.GetTypeName_AITaskState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableType_AITaskState::GetTypeName_AITaskState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_AITaskState", "GetTypeName_AITaskState");

	Params::BFGVariableType_AITaskState_GetTypeName_AITaskState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_Boolean.GetState_BooleanFalse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableType_Boolean::GetState_BooleanFalse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_Boolean", "GetState_BooleanFalse");

	Params::BFGVariableType_Boolean_GetState_BooleanFalse Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_Boolean.GetState_BooleanTrue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableType_Boolean::GetState_BooleanTrue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_Boolean", "GetState_BooleanTrue");

	Params::BFGVariableType_Boolean_GetState_BooleanTrue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_Boolean.GetTypeName_Boolean
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableType_Boolean::GetTypeName_Boolean()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_Boolean", "GetTypeName_Boolean");

	Params::BFGVariableType_Boolean_GetTypeName_Boolean Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_QuestCounter.GetMaxSupported_QuestCounterQuantity
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGVariableType_QuestCounter::GetMaxSupported_QuestCounterQuantity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_QuestCounter", "GetMaxSupported_QuestCounterQuantity");

	Params::BFGVariableType_QuestCounter_GetMaxSupported_QuestCounterQuantity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_QuestCounter.GetQuestCounterForValue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   _iValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGVariableType_QuestCounter::GetQuestCounterForValue(int32 _iValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_QuestCounter", "GetQuestCounterForValue");

	Params::BFGVariableType_QuestCounter_GetQuestCounterForValue Parms{};

	Parms._iValue = _iValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_QuestCounter.GetTypeName_QuestCounter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableType_QuestCounter::GetTypeName_QuestCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_QuestCounter", "GetTypeName_QuestCounter");

	Params::BFGVariableType_QuestCounter_GetTypeName_QuestCounter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_QuestCounter.GetValueForQuestCounter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   _iQuantity                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGVariableType_QuestCounter::GetValueForQuestCounter(int32 _iQuantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_QuestCounter", "GetValueForQuestCounter");

	Params::BFGVariableType_QuestCounter_GetValueForQuestCounter Parms{};

	Parms._iQuantity = _iQuantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_QuestCounter.GetValueNameByQuestCounter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   _iQuantity                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UBFGVariableType_QuestCounter::GetValueNameByQuestCounter(int32 _iQuantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_QuestCounter", "GetValueNameByQuestCounter");

	Params::BFGVariableType_QuestCounter_GetValueNameByQuestCounter Parms{};

	Parms._iQuantity = _iQuantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_Timer.GetState_TimerEnd
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableType_Timer::GetState_TimerEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_Timer", "GetState_TimerEnd");

	Params::BFGVariableType_Timer_GetState_TimerEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_Timer.GetState_TimerRunning
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableType_Timer::GetState_TimerRunning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_Timer", "GetState_TimerRunning");

	Params::BFGVariableType_Timer_GetState_TimerRunning Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_Timer.GetState_TimerStart
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableType_Timer::GetState_TimerStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_Timer", "GetState_TimerStart");

	Params::BFGVariableType_Timer_GetState_TimerStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_Timer.GetState_TimerStopped
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableType_Timer::GetState_TimerStopped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_Timer", "GetState_TimerStopped");

	Params::BFGVariableType_Timer_GetState_TimerStopped Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVariableType_Timer.GetTypeName_Timer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UBFGVariableType_Timer::GetTypeName_Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVariableType_Timer", "GetTypeName_Timer");

	Params::BFGVariableType_Timer_GetTypeName_Timer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVehicleInterface.DestroySpotLight
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    _bRightSpot                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bLeftSpot                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IBFGVehicleInterface::DestroySpotLight(bool _bRightSpot, bool _bLeftSpot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVehicleInterface", "DestroySpotLight");

	Params::BFGVehicleInterface_DestroySpotLight Parms{};

	Parms._bRightSpot = _bRightSpot;
	Parms._bLeftSpot = _bLeftSpot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVehicleInterface.DetachVehicleComponent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMeshComponent*             MeshToDetach                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ImpulseAngularJitter                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   VelocityFactorDivisor                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IBFGVehicleInterface::DetachVehicleComponent(class UStaticMeshComponent* MeshToDetach, float ImpulseAngularJitter, float VelocityFactorDivisor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVehicleInterface", "DetachVehicleComponent");

	Params::BFGVehicleInterface_DetachVehicleComponent Parms{};

	Parms.MeshToDetach = MeshToDetach;
	Parms.ImpulseAngularJitter = ImpulseAngularJitter;
	Parms.VelocityFactorDivisor = VelocityFactorDivisor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVehicleInterface.InterfaceSetupVehicle
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IBFGVehicleInterface::InterfaceSetupVehicle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVehicleInterface", "InterfaceSetupVehicle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVehicleInterface.ReleaseVehicleComponent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMeshComponent*             MeshToRelease                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IBFGVehicleInterface::ReleaseVehicleComponent(class UStaticMeshComponent* MeshToRelease)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVehicleInterface", "ReleaseVehicleComponent");

	Params::BFGVehicleInterface_ReleaseVehicleComponent Parms{};

	Parms.MeshToRelease = MeshToRelease;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVehicleInterface.SetEngineMeshesHiddenInGame
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    _bHidden                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IBFGVehicleInterface::SetEngineMeshesHiddenInGame(bool _bHidden) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVehicleInterface", "SetEngineMeshesHiddenInGame");

	Params::BFGVehicleInterface_SetEngineMeshesHiddenInGame Parms{};

	Parms._bHidden = _bHidden;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVehiclePassengerContainer.OnInteractAnimationChangedCallback
// (Final, Native, Protected, HasOutParams)
// Parameters:
// TScriptInterface<class IBFGInteractAnimationPlayerInterface>_pInteractAnimationPlayer                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
// struct FBFGInteractAnimationData        _newData                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FBFGInteractAnimationData        _oldData                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UBFGVehiclePassengerContainer::OnInteractAnimationChangedCallback(TScriptInterface<class IBFGInteractAnimationPlayerInterface> _pInteractAnimationPlayer, const struct FBFGInteractAnimationData& _newData, const struct FBFGInteractAnimationData& _oldData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVehiclePassengerContainer", "OnInteractAnimationChangedCallback");

	Params::BFGVehiclePassengerContainer_OnInteractAnimationChangedCallback Parms{};

	Parms._pInteractAnimationPlayer = _pInteractAnimationPlayer;
	Parms._newData = std::move(_newData);
	Parms._oldData = std::move(_oldData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVehiclePassengerContainer.OnPassengerKilled
// (Final, Native, Protected)
// Parameters:
// class UBFGNetworkPathAgent*             _pAgent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bAttached                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGVehiclePassengerContainer::OnPassengerKilled(class UBFGNetworkPathAgent* _pAgent, class AActor* _pActor, bool _bAttached)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVehiclePassengerContainer", "OnPassengerKilled");

	Params::BFGVehiclePassengerContainer_OnPassengerKilled Parms{};

	Parms._pAgent = _pAgent;
	Parms._pActor = _pActor;
	Parms._bAttached = _bAttached;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVehiclePassengerContainer.OnVehicleDestroyed
// (Final, Native, Protected)
// Parameters:
// class UBFGNetworkPathAgent*             _pAgent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGVehiclePassengerContainer::OnVehicleDestroyed(class UBFGNetworkPathAgent* _pAgent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVehiclePassengerContainer", "OnVehicleDestroyed");

	Params::BFGVehiclePassengerContainer_OnVehicleDestroyed Parms{};

	Parms._pAgent = _pAgent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVirtualCrowdManager.GetCrowdActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ABFGVirtualCrowd*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGVirtualCrowd* UBFGVirtualCrowdManager::GetCrowdActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVirtualCrowdManager", "GetCrowdActor");

	Params::BFGVirtualCrowdManager_GetCrowdActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction BFGCore.BFGVoiceoverPlaybackActor.BFGOnItemPlaybackStopped_Delegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ABFGVoiceoverPlaybackActor::BFGOnItemPlaybackStopped_Delegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVoiceoverPlaybackActor", "BFGOnItemPlaybackStopped_Delegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGVoiceoverPlaybackActor.CancelItem_NetMulticast
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// float                                   _fOverrideFadeoutDuration                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGVoiceoverPlaybackActor::CancelItem_NetMulticast(float _fOverrideFadeoutDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVoiceoverPlaybackActor", "CancelItem_NetMulticast");

	Params::BFGVoiceoverPlaybackActor_CancelItem_NetMulticast Parms{};

	Parms._fOverrideFadeoutDuration = _fOverrideFadeoutDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVoiceoverPlaybackActor.OnItemPlaybackStopped
// (Final, Native, Private)

void ABFGVoiceoverPlaybackActor::OnItemPlaybackStopped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVoiceoverPlaybackActor", "OnItemPlaybackStopped");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVoiceoverPlaybackActor.PlayItem_NetMulticast
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// struct FBFGVoiceoverPlaybackRequest     _queueItem                                             (Parm, NativeAccessSpecifierPublic)

void ABFGVoiceoverPlaybackActor::PlayItem_NetMulticast(const struct FBFGVoiceoverPlaybackRequest& _queueItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVoiceoverPlaybackActor", "PlayItem_NetMulticast");

	Params::BFGVoiceoverPlaybackActor_PlayItem_NetMulticast Parms{};

	Parms._queueItem = std::move(_queueItem);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVoiceoverPlaybackActor.SetPauseItem_NetMulticast
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// bool                                    _bIsPaused                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGVoiceoverPlaybackActor::SetPauseItem_NetMulticast(bool _bIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVoiceoverPlaybackActor", "SetPauseItem_NetMulticast");

	Params::BFGVoiceoverPlaybackActor_SetPauseItem_NetMulticast Parms{};

	Parms._bIsPaused = _bIsPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVoiceoverQueue.CountSpeakerInQueue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _speakerVoice                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGVoiceoverQueue::CountSpeakerInQueue(class FName _speakerVoice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVoiceoverQueue", "CountSpeakerInQueue");

	Params::BFGVoiceoverQueue_CountSpeakerInQueue Parms{};

	Parms._speakerVoice = _speakerVoice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVoiceoverQueue.OnItemPlaybackStopped
// (Final, Native, Protected)

void UBFGVoiceoverQueue::OnItemPlaybackStopped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVoiceoverQueue", "OnItemPlaybackStopped");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVoiceoverQueue.GetCurrentPlayingComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGVoiceoverPlaybackComponent*   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGVoiceoverPlaybackComponent* UBFGVoiceoverQueue::GetCurrentPlayingComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVoiceoverQueue", "GetCurrentPlayingComponent");

	Params::BFGVoiceoverQueue_GetCurrentPlayingComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVoiceoverRouter.OnItemEvent
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FBFGVoiceoverItem                _item                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EBFGVoiceoverItemEventType              _type                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGVoiceoverRouter::OnItemEvent(const struct FBFGVoiceoverItem& _item, const EBFGVoiceoverItemEventType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGVoiceoverRouter", "OnItemEvent");

	Params::BFGVoiceoverRouter_OnItemEvent Parms{};

	Parms._item = std::move(_item);
	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVoiceoverUtils.AreAllVoiceoverGroupsMuted
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _pWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGVoiceoverUtils::AreAllVoiceoverGroupsMuted(class UObject* _pWorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVoiceoverUtils", "AreAllVoiceoverGroupsMuted");

	Params::BFGVoiceoverUtils_AreAllVoiceoverGroupsMuted Parms{};

	Parms._pWorldContextObject = _pWorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVoiceoverUtils.IsAnyVoiceoverPlaying
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _pWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGVoiceoverUtils::IsAnyVoiceoverPlaying(class UObject* _pWorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVoiceoverUtils", "IsAnyVoiceoverPlaying");

	Params::BFGVoiceoverUtils_IsAnyVoiceoverPlaying Parms{};

	Parms._pWorldContextObject = _pWorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVoiceoverUtils.IsVoiceoverGroupMuted
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _pWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UBFGVoiceoverGroup>_pGroup                                                (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGVoiceoverUtils::IsVoiceoverGroupMuted(class UObject* _pWorldContextObject, TSoftObjectPtr<class UBFGVoiceoverGroup> _pGroup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVoiceoverUtils", "IsVoiceoverGroupMuted");

	Params::BFGVoiceoverUtils_IsVoiceoverGroupMuted Parms{};

	Parms._pWorldContextObject = _pWorldContextObject;
	Parms._pGroup = _pGroup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVoiceoverUtils.IsVoiceoverGroupPlaying
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _pWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UBFGVoiceoverGroup>_pGroup                                                (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBFGVoiceoverPlaybackState              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBFGVoiceoverPlaybackState UBFGVoiceoverUtils::IsVoiceoverGroupPlaying(class UObject* _pWorldContextObject, TSoftObjectPtr<class UBFGVoiceoverGroup> _pGroup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVoiceoverUtils", "IsVoiceoverGroupPlaying");

	Params::BFGVoiceoverUtils_IsVoiceoverGroupPlaying Parms{};

	Parms._pWorldContextObject = _pWorldContextObject;
	Parms._pGroup = _pGroup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVoiceoverUtils.IsVoiceoverPlaying
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _pWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             _stringTableEntry                                      (Parm, NativeAccessSpecifierPublic)
// EBFGVoiceoverPlaybackState              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBFGVoiceoverPlaybackState UBFGVoiceoverUtils::IsVoiceoverPlaying(class UObject* _pWorldContextObject, const class FText& _stringTableEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVoiceoverUtils", "IsVoiceoverPlaying");

	Params::BFGVoiceoverUtils_IsVoiceoverPlaying Parms{};

	Parms._pWorldContextObject = _pWorldContextObject;
	Parms._stringTableEntry = std::move(_stringTableEntry);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGVoiceoverUtils.MuteAllVoiceoverGroups
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bCancelIfPlayingItem                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGVoiceoverUtils::MuteAllVoiceoverGroups(class UObject* _pWorldContextObject, bool _bCancelIfPlayingItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVoiceoverUtils", "MuteAllVoiceoverGroups");

	Params::BFGVoiceoverUtils_MuteAllVoiceoverGroups Parms{};

	Parms._pWorldContextObject = _pWorldContextObject;
	Parms._bCancelIfPlayingItem = _bCancelIfPlayingItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVoiceoverUtils.MuteVoiceoverGroup
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UBFGVoiceoverGroup>_pGroup                                                (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bCancelIfPlayingItem                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGVoiceoverUtils::MuteVoiceoverGroup(class UObject* _pWorldContextObject, TSoftObjectPtr<class UBFGVoiceoverGroup> _pGroup, bool _bCancelIfPlayingItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVoiceoverUtils", "MuteVoiceoverGroup");

	Params::BFGVoiceoverUtils_MuteVoiceoverGroup Parms{};

	Parms._pWorldContextObject = _pWorldContextObject;
	Parms._pGroup = _pGroup;
	Parms._bCancelIfPlayingItem = _bCancelIfPlayingItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVoiceoverUtils.PlayVoiceover
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _pWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             _stringTableEntry                                      (Parm, NativeAccessSpecifierPublic)
// struct FBFGVoiceoverPlaybackRequest     _request                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                _latentInfo                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// EBFGVoiceoverResultType                 _outResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGVoiceoverUtils::PlayVoiceover(class UObject* _pWorldContextObject, const class FText& _stringTableEntry, const struct FBFGVoiceoverPlaybackRequest& _request, const struct FLatentActionInfo& _latentInfo, EBFGVoiceoverResultType* _outResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVoiceoverUtils", "PlayVoiceover");

	Params::BFGVoiceoverUtils_PlayVoiceover Parms{};

	Parms._pWorldContextObject = _pWorldContextObject;
	Parms._stringTableEntry = std::move(_stringTableEntry);
	Parms._request = std::move(_request);
	Parms._latentInfo = std::move(_latentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_outResult != nullptr)
		*_outResult = Parms._outResult;
}


// Function BFGCore.BFGVoiceoverUtils.SetRunWhileGameplayPaused
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bRunWhileGameplayPaused                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGVoiceoverUtils::SetRunWhileGameplayPaused(class UObject* _pWorldContextObject, bool _bRunWhileGameplayPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVoiceoverUtils", "SetRunWhileGameplayPaused");

	Params::BFGVoiceoverUtils_SetRunWhileGameplayPaused Parms{};

	Parms._pWorldContextObject = _pWorldContextObject;
	Parms._bRunWhileGameplayPaused = _bRunWhileGameplayPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVoiceoverUtils.StopAllVoiceoversInGroup
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UBFGVoiceoverGroup>_pGroup                                                (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bCancelIfPlayingItem                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGVoiceoverUtils::StopAllVoiceoversInGroup(class UObject* _pWorldContextObject, TSoftObjectPtr<class UBFGVoiceoverGroup> _pGroup, bool _bCancelIfPlayingItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVoiceoverUtils", "StopAllVoiceoversInGroup");

	Params::BFGVoiceoverUtils_StopAllVoiceoversInGroup Parms{};

	Parms._pWorldContextObject = _pWorldContextObject;
	Parms._pGroup = _pGroup;
	Parms._bCancelIfPlayingItem = _bCancelIfPlayingItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVoiceoverUtils.StopAllVoicovers
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bCancelPlayingItem                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fOverrideFadeoutDuration                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGVoiceoverUtils::StopAllVoicovers(class UObject* _pWorldContextObject, bool _bCancelPlayingItem, float _fOverrideFadeoutDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVoiceoverUtils", "StopAllVoicovers");

	Params::BFGVoiceoverUtils_StopAllVoicovers Parms{};

	Parms._pWorldContextObject = _pWorldContextObject;
	Parms._bCancelPlayingItem = _bCancelPlayingItem;
	Parms._fOverrideFadeoutDuration = _fOverrideFadeoutDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVoiceoverUtils.StopVoiceover
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             _stringTableEntry                                      (Parm, NativeAccessSpecifierPublic)
// bool                                    _bCancelIfPlayingItem                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGVoiceoverUtils::StopVoiceover(class UObject* _pWorldContextObject, const class FText& _stringTableEntry, bool _bCancelIfPlayingItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVoiceoverUtils", "StopVoiceover");

	Params::BFGVoiceoverUtils_StopVoiceover Parms{};

	Parms._pWorldContextObject = _pWorldContextObject;
	Parms._stringTableEntry = std::move(_stringTableEntry);
	Parms._bCancelIfPlayingItem = _bCancelIfPlayingItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVoiceoverUtils.TriggerVoiceover
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _pWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             _stringTableEntry                                      (Parm, NativeAccessSpecifierPublic)
// struct FBFGVoiceoverPlaybackRequest     _request                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGVoiceoverUtils::TriggerVoiceover(class UObject* _pWorldContextObject, const class FText& _stringTableEntry, const struct FBFGVoiceoverPlaybackRequest& _request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVoiceoverUtils", "TriggerVoiceover");

	Params::BFGVoiceoverUtils_TriggerVoiceover Parms{};

	Parms._pWorldContextObject = _pWorldContextObject;
	Parms._stringTableEntry = std::move(_stringTableEntry);
	Parms._request = std::move(_request);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVoiceoverUtils.UnmuteAllVoiceoverGroups
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fSilenceDuration                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bRestoreExceptions                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGVoiceoverUtils::UnmuteAllVoiceoverGroups(class UObject* _pWorldContextObject, float _fSilenceDuration, bool _bRestoreExceptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVoiceoverUtils", "UnmuteAllVoiceoverGroups");

	Params::BFGVoiceoverUtils_UnmuteAllVoiceoverGroups Parms{};

	Parms._pWorldContextObject = _pWorldContextObject;
	Parms._fSilenceDuration = _fSilenceDuration;
	Parms._bRestoreExceptions = _bRestoreExceptions;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVoiceoverUtils.UnmuteVoiceoverGroup
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UBFGVoiceoverGroup>_pGroup                                                (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fAddSilenceDuration                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGVoiceoverUtils::UnmuteVoiceoverGroup(class UObject* _pWorldContextObject, TSoftObjectPtr<class UBFGVoiceoverGroup> _pGroup, float _fAddSilenceDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVoiceoverUtils", "UnmuteVoiceoverGroup");

	Params::BFGVoiceoverUtils_UnmuteVoiceoverGroup Parms{};

	Parms._pWorldContextObject = _pWorldContextObject;
	Parms._pGroup = _pGroup;
	Parms._fAddSilenceDuration = _fAddSilenceDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGVoiceoverUtils.WaitForVoiceover
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _pWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             _stringTableEntry                                      (Parm, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                _latentInfo                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// EBFGVoiceoverResultType                 _outResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGVoiceoverUtils::WaitForVoiceover(class UObject* _pWorldContextObject, const class FText& _stringTableEntry, const struct FLatentActionInfo& _latentInfo, EBFGVoiceoverResultType* _outResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVoiceoverUtils", "WaitForVoiceover");

	Params::BFGVoiceoverUtils_WaitForVoiceover Parms{};

	Parms._pWorldContextObject = _pWorldContextObject;
	Parms._stringTableEntry = std::move(_stringTableEntry);
	Parms._latentInfo = std::move(_latentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_outResult != nullptr)
		*_outResult = Parms._outResult;
}


// Function BFGCore.BFGVoiceoverUtils.WaitForVoiceoverGroup
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _pWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UBFGVoiceoverGroup>_pGroup                                                (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                _latentInfo                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UBFGVoiceoverUtils::WaitForVoiceoverGroup(class UObject* _pWorldContextObject, TSoftObjectPtr<class UBFGVoiceoverGroup> _pGroup, const struct FLatentActionInfo& _latentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFGVoiceoverUtils", "WaitForVoiceoverGroup");

	Params::BFGVoiceoverUtils_WaitForVoiceoverGroup Parms{};

	Parms._pWorldContextObject = _pWorldContextObject;
	Parms._pGroup = _pGroup;
	Parms._latentInfo = std::move(_latentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWeapon_AnalProbe.GetMinigameSuccessThreshold
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABFGWeapon_AnalProbe::GetMinigameSuccessThreshold() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon_AnalProbe", "GetMinigameSuccessThreshold");

	Params::BFGWeapon_AnalProbe_GetMinigameSuccessThreshold Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon_AnalProbe.GetMinigameValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABFGWeapon_AnalProbe::GetMinigameValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon_AnalProbe", "GetMinigameValue");

	Params::BFGWeapon_AnalProbe_GetMinigameValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon_AnalProbe.IsMiniGameActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGWeapon_AnalProbe::IsMiniGameActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon_AnalProbe", "IsMiniGameActive");

	Params::BFGWeapon_AnalProbe_IsMiniGameActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon_AnalProbe.IsShotInAir
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABFGWeapon_AnalProbe::IsShotInAir() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon_AnalProbe", "IsShotInAir");

	Params::BFGWeapon_AnalProbe_IsShotInAir Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon_BossAOE_ParticleExploder.OnMineExploded
// (Final, Native, Public)
// Parameters:
// class ABFGNPCCharacterEnemy_Mine_ParticleExploder*_pMine                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGWeapon_BossAOE_ParticleExploder::OnMineExploded(class ABFGNPCCharacterEnemy_Mine_ParticleExploder* _pMine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon_BossAOE_ParticleExploder", "OnMineExploded");

	Params::BFGWeapon_BossAOE_ParticleExploder_OnMineExploded Parms{};

	Parms._pMine = _pMine;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWeapon_BossAOE_ParticleExploder.OnMineTriggerRangeEntered
// (Final, Native, Public)
// Parameters:
// class ABFGNPCCharacterEnemy_Mine_ParticleExploder*_pMine                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGWeapon_BossAOE_ParticleExploder::OnMineTriggerRangeEntered(class ABFGNPCCharacterEnemy_Mine_ParticleExploder* _pMine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon_BossAOE_ParticleExploder", "OnMineTriggerRangeEntered");

	Params::BFGWeapon_BossAOE_ParticleExploder_OnMineTriggerRangeEntered Parms{};

	Parms._pMine = _pMine;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWeapon_BossAOE_ParticleExploder.OnTriggerAllMines
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABFGWeapon_BossAOE_ParticleExploder::OnTriggerAllMines()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon_BossAOE_ParticleExploder", "OnTriggerAllMines");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWeapon_DisintegratorRay.OnDotApplied
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           _pTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iStackCount                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGWeapon_DisintegratorRay::OnDotApplied(class AActor* _pTarget, int32 _iStackCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon_DisintegratorRay", "OnDotApplied");

	Params::BFGWeapon_DisintegratorRay_OnDotApplied Parms{};

	Parms._pTarget = _pTarget;
	Parms._iStackCount = _iStackCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWeapon_EnemyNasalProbe.FireNasalProbe
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _iRetargetAttempts                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ABFGProjectile_Object*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGProjectile_Object* ABFGWeapon_EnemyNasalProbe::FireNasalProbe(int32 _iRetargetAttempts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon_EnemyNasalProbe", "FireNasalProbe");

	Params::BFGWeapon_EnemyNasalProbe_FireNasalProbe Parms{};

	Parms._iRetargetAttempts = _iRetargetAttempts;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWeapon_MultiMissiles.OnHolderDeath
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _pActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGActorStat_Bool*               _pStat                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABFGWeapon_MultiMissiles::OnHolderDeath(class AActor* _pActor, class UBFGActorStat_Bool* _pStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeapon_MultiMissiles", "OnHolderDeath");

	Params::BFGWeapon_MultiMissiles_OnHolderDeath Parms{};

	Parms._pActor = _pActor;
	Parms._pStat = _pStat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWeaponTargetMarker.OnColorSet
// (Event, Protected, BlueprintEvent)

void ABFGWeaponTargetMarker::OnColorSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWeaponTargetMarker", "OnColorSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGActorComponent_WidgetAlert.OnAIStateChanged
// (Final, Native, Public)
// Parameters:
// EBFGBehaviourState_NPC                  _eState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_WidgetAlert::OnAIStateChanged(EBFGBehaviourState_NPC _eState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_WidgetAlert", "OnAIStateChanged");

	Params::BFGActorComponent_WidgetAlert_OnAIStateChanged Parms{};

	Parms._eState = _eState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGActorComponent_WidgetAlert.OnDeadStateChanged
// (Final, Native, Public)
// Parameters:
// bool                                    _bState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGActorComponent_WidgetAlert::OnDeadStateChanged(bool _bState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGActorComponent_WidgetAlert", "OnDeadStateChanged");

	Params::BFGActorComponent_WidgetAlert_OnDeadStateChanged Parms{};

	Parms._bState = _bState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_AR_AlertOverhead.UpdateState
// (Event, Public, BlueprintEvent)
// Parameters:
// EBFGBehaviourState_NPC                  _eState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_AR_AlertOverhead::UpdateState(EBFGBehaviourState_NPC _eState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_AR_AlertOverhead", "UpdateState");

	Params::BFGWidget_AR_AlertOverhead_UpdateState Parms{};

	Parms._eState = _eState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_AR_SimpleOverheadText.ChangeText
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _newText                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_AR_SimpleOverheadText::ChangeText(const class FText& _newText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_AR_SimpleOverheadText", "ChangeText");

	Params::BFGWidget_AR_SimpleOverheadText_ChangeText Parms{};

	Parms._newText = std::move(_newText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_AR_SimpleOverheadText.ShowWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_AR_SimpleOverheadText::ShowWidget(bool _bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_AR_SimpleOverheadText", "ShowWidget");

	Params::BFGWidget_AR_SimpleOverheadText_ShowWidget Parms{};

	Parms._bShow = _bShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_AR_SimpleOverheadText.UpdateData
// (Event, Public, BlueprintEvent)

void UBFGWidget_AR_SimpleOverheadText::UpdateData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_AR_SimpleOverheadText", "UpdateData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_AR_SimpleOverheadText.UpdateRichtTextBox
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             _strText                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_AR_SimpleOverheadText::UpdateRichtTextBox(int32 _iIndex, const class FText& _strText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_AR_SimpleOverheadText", "UpdateRichtTextBox");

	Params::BFGWidget_AR_SimpleOverheadText_UpdateRichtTextBox Parms{};

	Parms._iIndex = _iIndex;
	Parms._strText = std::move(_strText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_AR_SimpleOverheadText.GetBFGGameInstance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGGameInstance*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGGameInstance* UBFGWidget_AR_SimpleOverheadText::GetBFGGameInstance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_AR_SimpleOverheadText", "GetBFGGameInstance");

	Params::BFGWidget_AR_SimpleOverheadText_GetBFGGameInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_Archive_FuronHandbook.AddChapterToLayout
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UBFGWidget_Archive_FuronHandbookChapter*_pChapter                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Archive_FuronHandbook::AddChapterToLayout(class UBFGWidget_Archive_FuronHandbookChapter* _pChapter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive_FuronHandbook", "AddChapterToLayout");

	Params::BFGWidget_Archive_FuronHandbook_AddChapterToLayout Parms{};

	Parms._pChapter = _pChapter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Archive_HolobobDeck.ChangeButtonDescription
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             _strText                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// EButtonState                            _oButtonState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Archive_HolobobDeck::ChangeButtonDescription(class FText* _strText, EButtonState _oButtonState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive_HolobobDeck", "ChangeButtonDescription");

	Params::BFGWidget_Archive_HolobobDeck_ChangeButtonDescription Parms{};

	Parms._oButtonState = _oButtonState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_strText != nullptr)
		*_strText = std::move(Parms._strText);
}


// Function BFGCore.BFGWidget_Archive_HolobobDeck.OnAddOptiontoLayout
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UBFGWidget_DialogOption*          _pOption                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Archive_HolobobDeck::OnAddOptiontoLayout(class UBFGWidget_DialogOption* _pOption)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive_HolobobDeck", "OnAddOptiontoLayout");

	Params::BFGWidget_Archive_HolobobDeck_OnAddOptiontoLayout Parms{};

	Parms._pOption = _pOption;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Archive_HolobobDeck.OnClearOptionLayout
// (Event, Protected, BlueprintEvent)

void UBFGWidget_Archive_HolobobDeck::OnClearOptionLayout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive_HolobobDeck", "OnClearOptionLayout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_Archive_HolobobDeck.OnConfimationPromptClosed
// (Final, Native, Protected)
// Parameters:
// bool                                    _bResult                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Archive_HolobobDeck::OnConfimationPromptClosed(bool _bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive_HolobobDeck", "OnConfimationPromptClosed");

	Params::BFGWidget_Archive_HolobobDeck_OnConfimationPromptClosed Parms{};

	Parms._bResult = _bResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_Archive_HolobobDeck.OnRewardGained
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _inTopic                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             _inDescription                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_Archive_HolobobDeck::OnRewardGained(const class FText& _inTopic, const class FText& _inDescription)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive_HolobobDeck", "OnRewardGained");

	Params::BFGWidget_Archive_HolobobDeck_OnRewardGained Parms{};

	Parms._inTopic = std::move(_inTopic);
	Parms._inDescription = std::move(_inDescription);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Archive_HolobobDeck.OnShowContentLayout
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _bShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Archive_HolobobDeck::OnShowContentLayout(bool _bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive_HolobobDeck", "OnShowContentLayout");

	Params::BFGWidget_Archive_HolobobDeck_OnShowContentLayout Parms{};

	Parms._bShow = _bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Archive_HolobobDeck.OnUpdateInfoMission
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Archive_HolobobDeck::OnUpdateInfoMission(int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive_HolobobDeck", "OnUpdateInfoMission");

	Params::BFGWidget_Archive_HolobobDeck_OnUpdateInfoMission Parms{};

	Parms._iIndex = _iIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Archive_HolobobDeck.Scroll
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   _fValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Archive_HolobobDeck::Scroll(float _fValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive_HolobobDeck", "Scroll");

	Params::BFGWidget_Archive_HolobobDeck_Scroll Parms{};

	Parms._fValue = _fValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Archive_HolobobDeck.ScrolltoWidget
// (Event, Public, BlueprintEvent)
// Parameters:
// class UBFGWidget_DialogOption*          _pOption                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Archive_HolobobDeck::ScrolltoWidget(class UBFGWidget_DialogOption* _pOption)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive_HolobobDeck", "ScrolltoWidget");

	Params::BFGWidget_Archive_HolobobDeck_ScrolltoWidget Parms{};

	Parms._pOption = _pOption;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Archive_HolobobDeck.UpdateMissionInfo
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Archive_HolobobDeck::UpdateMissionInfo(int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive_HolobobDeck", "UpdateMissionInfo");

	Params::BFGWidget_Archive_HolobobDeck_UpdateMissionInfo Parms{};

	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_Archive_SkinMenu.GetSpinningWidget
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBFGSpinningWidget*               ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGSpinningWidget* UBFGWidget_Archive_SkinMenu::GetSpinningWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive_SkinMenu", "GetSpinningWidget");

	Params::BFGWidget_Archive_SkinMenu_GetSpinningWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_Archive_SkinMenu.HasSpinningWidget
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGWidget_Archive_SkinMenu::HasSpinningWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive_SkinMenu", "HasSpinningWidget");

	Params::BFGWidget_Archive_SkinMenu_HasSpinningWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_Archive_SkinMenu.OnChangeSkin
// (Final, Native, Protected, BlueprintCallable)

void UBFGWidget_Archive_SkinMenu::OnChangeSkin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive_SkinMenu", "OnChangeSkin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_Archive_SkinMenu.OnRotateSkin
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   _fValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Archive_SkinMenu::OnRotateSkin(float _fValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive_SkinMenu", "OnRotateSkin");

	Params::BFGWidget_Archive_SkinMenu_OnRotateSkin Parms{};

	Parms._fValue = _fValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_Archive_SkinMenu.OnUpdateSkinConditionText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    _bShowText                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             _strText                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_Archive_SkinMenu::OnUpdateSkinConditionText(const bool _bShowText, const class FText& _strText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive_SkinMenu", "OnUpdateSkinConditionText");

	Params::BFGWidget_Archive_SkinMenu_OnUpdateSkinConditionText Parms{};

	Parms._bShowText = _bShowText;
	Parms._strText = std::move(_strText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Archive_SkinMenu.ProcessAdvance
// (Native, Protected)

void UBFGWidget_Archive_SkinMenu::ProcessAdvance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive_SkinMenu", "ProcessAdvance");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_Archive_SkinMenu.UpdateDescriptionPanel
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Archive_SkinMenu::UpdateDescriptionPanel(int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Archive_SkinMenu", "UpdateDescriptionPanel");

	Params::BFGWidget_Archive_SkinMenu_UpdateDescriptionPanel Parms{};

	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_ControllerDisconnected.OnApplicationPostInputKeyDownEvent
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FKeyEvent                        _keyEvent                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_ControllerDisconnected::OnApplicationPostInputKeyDownEvent(const struct FKeyEvent& _keyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_ControllerDisconnected", "OnApplicationPostInputKeyDownEvent");

	Params::BFGWidget_ControllerDisconnected_OnApplicationPostInputKeyDownEvent Parms{};

	Parms._keyEvent = std::move(_keyEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BFGCore.BFGWidget_CreditsTextPanel.Action_OnCreditsTextPanelDone__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UBFGWidget_CreditsTextPanel*      _pPanel                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_CreditsTextPanel::Action_OnCreditsTextPanelDone__DelegateSignature(class UBFGWidget_CreditsTextPanel* _pPanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_CreditsTextPanel", "Action_OnCreditsTextPanelDone__DelegateSignature");

	Params::BFGWidget_CreditsTextPanel_Action_OnCreditsTextPanelDone__DelegateSignature Parms{};

	Parms._pPanel = _pPanel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_CreditsTextPanel.ForceDisappear
// (Native, Event, Public, BlueprintEvent)

void UBFGWidget_CreditsTextPanel::ForceDisappear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_CreditsTextPanel", "ForceDisappear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_CreditsTextPanel.RegisterDone
// (Final, Native, Protected, BlueprintCallable)

void UBFGWidget_CreditsTextPanel::RegisterDone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_CreditsTextPanel", "RegisterDone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_CreditsTextPanel.SetFont
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// struct FSlateFontInfo                   _oFontInfo                                             (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_CreditsTextPanel::SetFont(const struct FSlateFontInfo& _oFontInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_CreditsTextPanel", "SetFont");

	Params::BFGWidget_CreditsTextPanel_SetFont Parms{};

	Parms._oFontInfo = std::move(_oFontInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_CreditsTextPanel.SetText
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _rText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_CreditsTextPanel::SetText(const class FText& _rText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_CreditsTextPanel", "SetText");

	Params::BFGWidget_CreditsTextPanel_SetText Parms{};

	Parms._rText = std::move(_rText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_CreditsTextPanel.TriggerScrollAnimation
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                                   _fPlaybackSpeed                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_CreditsTextPanel::TriggerScrollAnimation(float _fPlaybackSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_CreditsTextPanel", "TriggerScrollAnimation");

	Params::BFGWidget_CreditsTextPanel_TriggerScrollAnimation Parms{};

	Parms._fPlaybackSpeed = _fPlaybackSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BFGCore.BFGWidget_DialogOption_AssignKey.ActionKeyAssignment__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// class UBFGWidget_DialogOption_AssignKey*_pOption                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             _oKey                                                  (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_DialogOption_AssignKey::ActionKeyAssignment__DelegateSignature(class UBFGWidget_DialogOption_AssignKey* _pOption, const struct FKey& _oKey, int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption_AssignKey", "ActionKeyAssignment__DelegateSignature");

	Params::BFGWidget_DialogOption_AssignKey_ActionKeyAssignment__DelegateSignature Parms{};

	Parms._pOption = _pOption;
	Parms._oKey = std::move(_oKey);
	Parms._iIndex = _iIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_DialogOption_AssignKey.OnKeySlotClicked
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_DialogOption_AssignKey::OnKeySlotClicked(int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption_AssignKey", "OnKeySlotClicked");

	Params::BFGWidget_DialogOption_AssignKey_OnKeySlotClicked Parms{};

	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_DialogOption_AssignKey.SetCurrentSlotIndex
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   _iSlotIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_DialogOption_AssignKey::SetCurrentSlotIndex(int32 _iSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption_AssignKey", "SetCurrentSlotIndex");

	Params::BFGWidget_DialogOption_AssignKey_SetCurrentSlotIndex Parms{};

	Parms._iSlotIndex = _iSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_DialogOption_AssignKey.SetKeySlotText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// int32                                   _iIndexSlot                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             _strText                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_DialogOption_AssignKey::SetKeySlotText(int32 _iIndexSlot, const class FText& _strText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption_AssignKey", "SetKeySlotText");

	Params::BFGWidget_DialogOption_AssignKey_SetKeySlotText Parms{};

	Parms._iIndexSlot = _iIndexSlot;
	Parms._strText = std::move(_strText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_DialogOption_AssignKey.UpdateSlotIndexHighlightState
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   _Index                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bHighlighted                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_DialogOption_AssignKey::UpdateSlotIndexHighlightState(int32 _Index, bool _bHighlighted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption_AssignKey", "UpdateSlotIndexHighlightState");

	Params::BFGWidget_DialogOption_AssignKey_UpdateSlotIndexHighlightState Parms{};

	Parms._Index = _Index;
	Parms._bHighlighted = _bHighlighted;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BFGCore.BFGWidget_DialogOption_Selector.ActionSelector__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UBFGWidget_DialogOption_Selector* _pSelector                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_DialogOption_Selector::ActionSelector__DelegateSignature(class UBFGWidget_DialogOption_Selector* _pSelector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption_Selector", "ActionSelector__DelegateSignature");

	Params::BFGWidget_DialogOption_Selector_ActionSelector__DelegateSignature Parms{};

	Parms._pSelector = _pSelector;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_DialogOption_Selector.AddOptionToLayout
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UBFGWidget_SelectorItem*          _pOption                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_DialogOption_Selector::AddOptionToLayout(class UBFGWidget_SelectorItem* _pOption)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption_Selector", "AddOptionToLayout");

	Params::BFGWidget_DialogOption_Selector_AddOptionToLayout Parms{};

	Parms._pOption = _pOption;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_DialogOption_Selector.OnOptionClicked
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   _iOption                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_DialogOption_Selector::OnOptionClicked(int32 _iOption)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption_Selector", "OnOptionClicked");

	Params::BFGWidget_DialogOption_Selector_OnOptionClicked Parms{};

	Parms._iOption = _iOption;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BFGCore.BFGWidget_DialogOption_Slider.ActionSlider__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UBFGWidget_DialogOption_Slider*   _pSlider                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_DialogOption_Slider::ActionSlider__DelegateSignature(class UBFGWidget_DialogOption_Slider* _pSlider)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption_Slider", "ActionSlider__DelegateSignature");

	Params::BFGWidget_DialogOption_Slider_ActionSlider__DelegateSignature Parms{};

	Parms._pSlider = _pSlider;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_DialogOption_Slider.SetRelativeValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _fValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bBroadcast                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_DialogOption_Slider::SetRelativeValue(float _fValue, bool _bBroadcast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption_Slider", "SetRelativeValue");

	Params::BFGWidget_DialogOption_Slider_SetRelativeValue Parms{};

	Parms._fValue = _fValue;
	Parms._bBroadcast = _bBroadcast;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_DialogOption_Slider.SetValueAsAbsolute
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _fValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bBroadcast                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_DialogOption_Slider::SetValueAsAbsolute(float _fValue, bool _bBroadcast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption_Slider", "SetValueAsAbsolute");

	Params::BFGWidget_DialogOption_Slider_SetValueAsAbsolute Parms{};

	Parms._fValue = _fValue;
	Parms._bBroadcast = _bBroadcast;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_DialogOption_Slider.UpdateFloat
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   _fValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_DialogOption_Slider::UpdateFloat(float _fValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption_Slider", "UpdateFloat");

	Params::BFGWidget_DialogOption_Slider_UpdateFloat Parms{};

	Parms._fValue = _fValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_DialogOption_Slider.UpdatePercent
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   _iPercent                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_DialogOption_Slider::UpdatePercent(int32 _iPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption_Slider", "UpdatePercent");

	Params::BFGWidget_DialogOption_Slider_UpdatePercent Parms{};

	Parms._iPercent = _iPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_DialogOption_Slider.UpdateSlider
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   _fValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_DialogOption_Slider::UpdateSlider(float _fValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_DialogOption_Slider", "UpdateSlider");

	Params::BFGWidget_DialogOption_Slider_UpdateSlider Parms{};

	Parms._fValue = _fValue;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BFGCore.BFGWidget_KeyAssignmentWindow.Action__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UBFGWidget_KeyAssignmentWindow::Action__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_KeyAssignmentWindow", "Action__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction BFGCore.BFGWidget_KeyAssignmentWindow.ActionName__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class FName                             _oName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_KeyAssignmentWindow::ActionName__DelegateSignature(class FName _oName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_KeyAssignmentWindow", "ActionName__DelegateSignature");

	Params::BFGWidget_KeyAssignmentWindow_ActionName__DelegateSignature Parms{};

	Parms._oName = _oName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_KeyAssignmentWindow.OnAssignmentStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// EBFGKeyAssignmentState                  _eCurrentState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_KeyAssignmentWindow::OnAssignmentStateChanged(EBFGKeyAssignmentState _eCurrentState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_KeyAssignmentWindow", "OnAssignmentStateChanged");

	Params::BFGWidget_KeyAssignmentWindow_OnAssignmentStateChanged Parms{};

	Parms._eCurrentState = _eCurrentState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_KeyAssignmentWindow.OnButtonClicked_Accept
// (Final, Native, Protected, BlueprintCallable)

void UBFGWidget_KeyAssignmentWindow::OnButtonClicked_Accept()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_KeyAssignmentWindow", "OnButtonClicked_Accept");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_KeyAssignmentWindow.OnButtonClicked_Cancel
// (Final, Native, Protected, BlueprintCallable)

void UBFGWidget_KeyAssignmentWindow::OnButtonClicked_Cancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_KeyAssignmentWindow", "OnButtonClicked_Cancel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_KeyAssignmentWindow.OnButtonHover_Accept
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    _bHover                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_KeyAssignmentWindow::OnButtonHover_Accept(bool _bHover)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_KeyAssignmentWindow", "OnButtonHover_Accept");

	Params::BFGWidget_KeyAssignmentWindow_OnButtonHover_Accept Parms{};

	Parms._bHover = _bHover;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_KeyAssignmentWindow.OnButtonHover_Cancel
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    _bHover                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_KeyAssignmentWindow::OnButtonHover_Cancel(bool _bHover)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_KeyAssignmentWindow", "OnButtonHover_Cancel");

	Params::BFGWidget_KeyAssignmentWindow_OnButtonHover_Cancel Parms{};

	Parms._bHover = _bHover;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_KeyAssignmentWindow.OnCurrentKeySet
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _strCurrentKey                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_KeyAssignmentWindow::OnCurrentKeySet(const class FText& _strCurrentKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_KeyAssignmentWindow", "OnCurrentKeySet");

	Params::BFGWidget_KeyAssignmentWindow_OnCurrentKeySet Parms{};

	Parms._strCurrentKey = std::move(_strCurrentKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_KeyAssignmentWindow.OnIndexSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_KeyAssignmentWindow::OnIndexSet(int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_KeyAssignmentWindow", "OnIndexSet");

	Params::BFGWidget_KeyAssignmentWindow_OnIndexSet Parms{};

	Parms._iIndex = _iIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_KeyAssignmentWindow.OnUsedControlTextSet
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _strUsedControl                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_KeyAssignmentWindow::OnUsedControlTextSet(const class FText& _strUsedControl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_KeyAssignmentWindow", "OnUsedControlTextSet");

	Params::BFGWidget_KeyAssignmentWindow_OnUsedControlTextSet Parms{};

	Parms._strUsedControl = std::move(_strUsedControl);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_KeyAssignmentWindow.RemoveFromLayoutAnimated
// (Event, Public, BlueprintEvent)

void UBFGWidget_KeyAssignmentWindow::RemoveFromLayoutAnimated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_KeyAssignmentWindow", "RemoveFromLayoutAnimated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_GameplayEnd_Background.StartFadeInAnim
// (Event, Protected, BlueprintEvent)

void UBFGWidget_GameplayEnd_Background::StartFadeInAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameplayEnd_Background", "StartFadeInAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_GameplayEnd_BackgroundBlur.StartBlurAnimation
// (Event, Protected, BlueprintEvent)

void UBFGWidget_GameplayEnd_BackgroundBlur::StartBlurAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameplayEnd_BackgroundBlur", "StartBlurAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_GameplayEnd_BackgroundBlur.GetBlurStrength
// (Event, Protected, BlueprintEvent, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBFGWidget_GameplayEnd_BackgroundBlur::GetBlurStrength() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameplayEnd_BackgroundBlur", "GetBlurStrength");

	Params::BFGWidget_GameplayEnd_BackgroundBlur_GetBlurStrength Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// DelegateFunction BFGCore.BFGWidget_GameplayTags.Event__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UBFGWidget_GameplayTagOption*     _pWidget                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GameplayTags::Event__DelegateSignature(class UBFGWidget_GameplayTagOption* _pWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameplayTags", "Event__DelegateSignature");

	Params::BFGWidget_GameplayTags_Event__DelegateSignature Parms{};

	Parms._pWidget = _pWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_GameplayTags.UpdateData
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class UBFGMentalAbilityBase*>    _apAvailableAbilities                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_GameplayTags::UpdateData(const TArray<class UBFGMentalAbilityBase*>& _apAvailableAbilities)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GameplayTags", "UpdateData");

	Params::BFGWidget_GameplayTags_UpdateData Parms{};

	Parms._apAvailableAbilities = std::move(_apAvailableAbilities);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_GenericHold.Enable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bIsEnabled                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bAnimate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GenericHold::Enable(bool _bIsEnabled, bool _bAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericHold", "Enable");

	Params::BFGWidget_GenericHold_Enable Parms{};

	Parms._bIsEnabled = _bIsEnabled;
	Parms._bAnimate = _bAnimate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_GenericHold.Hide_Internal
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _bAnimate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GenericHold::Hide_Internal(bool _bAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericHold", "Hide_Internal");

	Params::BFGWidget_GenericHold_Hide_Internal Parms{};

	Parms._bAnimate = _bAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_GenericHold.Show
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bIsVisible                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bAnimate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GenericHold::Show(bool _bIsVisible, bool _bAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericHold", "Show");

	Params::BFGWidget_GenericHold_Show Parms{};

	Parms._bIsVisible = _bIsVisible;
	Parms._bAnimate = _bAnimate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_GenericHold.Show_Internal
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _bAnimate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GenericHold::Show_Internal(bool _bAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericHold", "Show_Internal");

	Params::BFGWidget_GenericHold_Show_Internal Parms{};

	Parms._bAnimate = _bAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_GenericHold.UpdateProgress
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   _fPercentage                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_GenericHold::UpdateProgress(float _fPercentage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericHold", "UpdateProgress");

	Params::BFGWidget_GenericHold_UpdateProgress Parms{};

	Parms._fPercentage = _fPercentage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_GenericHold.GetBtnHint
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UBFGWidget_GenericHold::GetBtnHint() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_GenericHold", "GetBtnHint");

	Params::BFGWidget_GenericHold_GetBtnHint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_HUD_Crosshair.GetWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ABFGWeapon*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABFGWeapon* UBFGWidget_HUD_Crosshair::GetWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_Crosshair", "GetWeapon");

	Params::BFGWidget_HUD_Crosshair_GetWeapon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_HUD_Crosshair.SetWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ABFGWeapon*                       _pWeapon                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_Crosshair::SetWeapon(class ABFGWeapon* _pWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_Crosshair", "SetWeapon");

	Params::BFGWidget_HUD_Crosshair_SetWeapon Parms{};

	Parms._pWeapon = _pWeapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_HUD_HealthIndicator.SetActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           PActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_HealthIndicator::SetActor(class AActor* PActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_HealthIndicator", "SetActor");

	Params::BFGWidget_HUD_HealthIndicator_SetActor Parms{};

	Parms.PActor = PActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_HUD_HealthIndicator.SetHealth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _fValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_HealthIndicator::SetHealth(float _fValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_HealthIndicator", "SetHealth");

	Params::BFGWidget_HUD_HealthIndicator_SetHealth Parms{};

	Parms._fValue = _fValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_HUD_OrthoBox.OnUpdateMessage
// (Event, Public, BlueprintEvent)

void UBFGWidget_HUD_OrthoBox::OnUpdateMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_OrthoBox", "OnUpdateMessage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_HUD_OrthoBox.PlayHideAnimation
// (Event, Public, BlueprintEvent)

void UBFGWidget_HUD_OrthoBox::PlayHideAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_OrthoBox", "PlayHideAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_HUD_OrthoBox.PlayShowAnimation
// (Event, Public, BlueprintEvent)

void UBFGWidget_HUD_OrthoBox::PlayShowAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_OrthoBox", "PlayShowAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_HUD_OrthoBox.ShowWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_OrthoBox::ShowWidget(bool _bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_OrthoBox", "ShowWidget");

	Params::BFGWidget_HUD_OrthoBox_ShowWidget Parms{};

	Parms._bShow = _bShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_SubquestEntry.RebuildLayoutNative
// (Native, Event, Public, BlueprintEvent)

void UBFGWidget_SubquestEntry::RebuildLayoutNative()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_SubquestEntry", "RebuildLayoutNative");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_SubquestEntry.TriggerFinishedAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bFailed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_SubquestEntry::TriggerFinishedAnimation(bool _bFailed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_SubquestEntry", "TriggerFinishedAnimation");

	Params::BFGWidget_SubquestEntry_TriggerFinishedAnimation Parms{};

	Parms._bFailed = _bFailed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_HUD_Radar.GetRadarPanel
// (Event, Public, BlueprintEvent)
// Parameters:
// class UCanvasPanel*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCanvasPanel* UBFGWidget_HUD_Radar::GetRadarPanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_Radar", "GetRadarPanel");

	Params::BFGWidget_HUD_Radar_GetRadarPanel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_HUD_Radar.OnRadarObjectsUpdated
// (Final, Native, Protected)
// Parameters:
// class UBFGRadarManager*                 _pRadarManager                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_Radar::OnRadarObjectsUpdated(class UBFGRadarManager* _pRadarManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_Radar", "OnRadarObjectsUpdated");

	Params::BFGWidget_HUD_Radar_OnRadarObjectsUpdated Parms{};

	Parms._pRadarManager = _pRadarManager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_HUD_Radar.UpdateOrientation
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   _fAngle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_HUD_Radar::UpdateOrientation(float _fAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_Radar", "UpdateOrientation");

	Params::BFGWidget_HUD_Radar_UpdateOrientation Parms{};

	Parms._fAngle = _fAngle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_HUD_TutorialPanel.AddPageToCanvas
// (Event, Public, BlueprintEvent)
// Parameters:
// class UBFGWidget_TutorialPage*          InPage                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCanvasPanelSlot*                 ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCanvasPanelSlot* UBFGWidget_HUD_TutorialPanel::AddPageToCanvas(class UBFGWidget_TutorialPage* InPage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_HUD_TutorialPanel", "AddPageToCanvas");

	Params::BFGWidget_HUD_TutorialPanel_AddPageToCanvas Parms{};

	Parms.InPage = InPage;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// DelegateFunction BFGCore.BFGWidget_LinearGraph.ActionLinearGraphNode__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UBFGWidget_LinearGraph*           _pGraph                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iNodeIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_LinearGraph::ActionLinearGraphNode__DelegateSignature(class UBFGWidget_LinearGraph* _pGraph, int32 _iNodeIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_LinearGraph", "ActionLinearGraphNode__DelegateSignature");

	Params::BFGWidget_LinearGraph_ActionLinearGraphNode__DelegateSignature Parms{};

	Parms._pGraph = _pGraph;
	Parms._iNodeIndex = _iNodeIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_LinearGraph.ClearSelection
// (Final, Native, Public, BlueprintCallable)

void UBFGWidget_LinearGraph::ClearSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_LinearGraph", "ClearSelection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_LinearGraph.SetOptionSelected
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   IIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_LinearGraph::SetOptionSelected(int32 IIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_LinearGraph", "SetOptionSelected");

	Params::BFGWidget_LinearGraph_SetOptionSelected Parms{};

	Parms.IIndex = IIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_LinearGraph.UpdateNodeStatus
// (Final, Native, Public, BlueprintCallable)

void UBFGWidget_LinearGraph::UpdateNodeStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_LinearGraph", "UpdateNodeStatus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_LinearGraph.UpdateStates
// (Final, Native, Public, BlueprintCallable)

void UBFGWidget_LinearGraph::UpdateStates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_LinearGraph", "UpdateStates");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_LinearGraph.HasNodes
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBFGWidget_LinearGraph::HasNodes() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_LinearGraph", "HasNodes");

	Params::BFGWidget_LinearGraph_HasNodes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_MissionResults.EnableContinueButton
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _bEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_MissionResults::EnableContinueButton(bool _bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MissionResults", "EnableContinueButton");

	Params::BFGWidget_MissionResults_EnableContinueButton Parms{};

	Parms._bEnable = _bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_MissionResults.EnableExitButton
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _bEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_MissionResults::EnableExitButton(bool _bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MissionResults", "EnableExitButton");

	Params::BFGWidget_MissionResults_EnableExitButton Parms{};

	Parms._bEnable = _bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_MissionResults.EnableMinimalMissionResultInfo
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _bEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_MissionResults::EnableMinimalMissionResultInfo(bool _bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MissionResults", "EnableMinimalMissionResultInfo");

	Params::BFGWidget_MissionResults_EnableMinimalMissionResultInfo Parms{};

	Parms._bEnable = _bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_MissionResults.EnableMissionFailedInfo
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _bEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_MissionResults::EnableMissionFailedInfo(bool _bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MissionResults", "EnableMissionFailedInfo");

	Params::BFGWidget_MissionResults_EnableMissionFailedInfo Parms{};

	Parms._bEnable = _bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_MissionResults.EnableMissionResultInfo
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _bEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_MissionResults::EnableMissionResultInfo(bool _bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MissionResults", "EnableMissionResultInfo");

	Params::BFGWidget_MissionResults_EnableMissionResultInfo Parms{};

	Parms._bEnable = _bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_MissionResults.EnableReplayButton
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _bEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_MissionResults::EnableReplayButton(bool _bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MissionResults", "EnableReplayButton");

	Params::BFGWidget_MissionResults_EnableReplayButton Parms{};

	Parms._bEnable = _bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_MissionResults.OnRewardGained
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _inTopic                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             _inDescription                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_MissionResults::OnRewardGained(const class FText& _inTopic, const class FText& _inDescription)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MissionResults", "OnRewardGained");

	Params::BFGWidget_MissionResults_OnRewardGained Parms{};

	Parms._inTopic = std::move(_inTopic);
	Parms._inDescription = std::move(_inDescription);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_MissionResults.OnShowAnimationFinished
// (Final, Native, Protected, BlueprintCallable)

void UBFGWidget_MissionResults::OnShowAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MissionResults", "OnShowAnimationFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_MissionResults.SetMissionResultInternal
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FBFGMissionResultInfo            _oResultInfo                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EBFGMissionResultType                   _ResultType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_MissionResults::SetMissionResultInternal(const struct FBFGMissionResultInfo& _oResultInfo, EBFGMissionResultType _ResultType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MissionResults", "SetMissionResultInternal");

	Params::BFGWidget_MissionResults_SetMissionResultInternal Parms{};

	Parms._oResultInfo = std::move(_oResultInfo);
	Parms._ResultType = _ResultType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Mothership_Main.AddSubmenuToLayout
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UBFGWidget_Mothership_Submenu*    _pWidget                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Mothership_Main::AddSubmenuToLayout(class UBFGWidget_Mothership_Submenu* _pWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_Main", "AddSubmenuToLayout");

	Params::BFGWidget_Mothership_Main_AddSubmenuToLayout Parms{};

	Parms._pWidget = _pWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Mothership_Main.EnableButtonAccept
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Mothership_Main::EnableButtonAccept(bool _bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_Main", "EnableButtonAccept");

	Params::BFGWidget_Mothership_Main_EnableButtonAccept Parms{};

	Parms._bEnable = _bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Mothership_Main.EnableButtonBack
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Mothership_Main::EnableButtonBack(bool _bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_Main", "EnableButtonBack");

	Params::BFGWidget_Mothership_Main_EnableButtonBack Parms{};

	Parms._bEnable = _bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Mothership_Main.EnableButtonOption1
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Mothership_Main::EnableButtonOption1(bool _bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_Main", "EnableButtonOption1");

	Params::BFGWidget_Mothership_Main_EnableButtonOption1 Parms{};

	Parms._bEnable = _bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Mothership_Main.GatherInformationfromSubMenus
// (Final, Native, Public, BlueprintCallable)

void UBFGWidget_Mothership_Main::GatherInformationfromSubMenus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_Main", "GatherInformationfromSubMenus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_Mothership_Main.OnButton1Clicked
// (Final, Native, Public, BlueprintCallable)

void UBFGWidget_Mothership_Main::OnButton1Clicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_Main", "OnButton1Clicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_Mothership_Main.OnChildNotificationSeen
// (Native, Protected)
// Parameters:
// class FName                             _oHandlerName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Mothership_Main::OnChildNotificationSeen(class FName _oHandlerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_Main", "OnChildNotificationSeen");

	Params::BFGWidget_Mothership_Main_OnChildNotificationSeen Parms{};

	Parms._oHandlerName = _oHandlerName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_Mothership_Main.OnCutsceneFinished
// (Event, Public, BlueprintEvent)

void UBFGWidget_Mothership_Main::OnCutsceneFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_Main", "OnCutsceneFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_Mothership_Main.OnCutsceneStarted
// (Event, Public, BlueprintEvent)

void UBFGWidget_Mothership_Main::OnCutsceneStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_Main", "OnCutsceneStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_Mothership_Main.OnMenuContextChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// TArray<struct FBFGTreeMenuContext>      _apMenuContext                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_Mothership_Main::OnMenuContextChanged(const TArray<struct FBFGTreeMenuContext>& _apMenuContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_Main", "OnMenuContextChanged");

	Params::BFGWidget_Mothership_Main_OnMenuContextChanged Parms{};

	Parms._apMenuContext = std::move(_apMenuContext);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_Mothership_Main.OnPostConstruct
// (Final, Native, Protected, BlueprintCallable)

void UBFGWidget_Mothership_Main::OnPostConstruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_Main", "OnPostConstruct");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_Mothership_Main.OnUpdateDNAAmount
// (Final, Native, Public)

void UBFGWidget_Mothership_Main::OnUpdateDNAAmount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_Main", "OnUpdateDNAAmount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_Mothership_Main.OnUpdateDNAAmountWidget
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   _fDNA                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_Mothership_Main::OnUpdateDNAAmountWidget(int32 _fDNA)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_Main", "OnUpdateDNAAmountWidget");

	Params::BFGWidget_Mothership_Main_OnUpdateDNAAmountWidget Parms{};

	Parms._fDNA = _fDNA;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Mothership_Main.SetButtonTextAccept
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _oButtonTextAccept                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_Mothership_Main::SetButtonTextAccept(const class FText& _oButtonTextAccept)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_Main", "SetButtonTextAccept");

	Params::BFGWidget_Mothership_Main_SetButtonTextAccept Parms{};

	Parms._oButtonTextAccept = std::move(_oButtonTextAccept);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Mothership_Main.SetButtonTextBack
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _oButtonTextBack                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_Mothership_Main::SetButtonTextBack(const class FText& _oButtonTextBack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_Main", "SetButtonTextBack");

	Params::BFGWidget_Mothership_Main_SetButtonTextBack Parms{};

	Parms._oButtonTextBack = std::move(_oButtonTextBack);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Mothership_Main.SetButtonTextOption1
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _oButtonTextOption1                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_Mothership_Main::SetButtonTextOption1(const class FText& _oButtonTextOption1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_Main", "SetButtonTextOption1");

	Params::BFGWidget_Mothership_Main_SetButtonTextOption1 Parms{};

	Parms._oButtonTextOption1 = std::move(_oButtonTextOption1);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Mothership_Main.SetTitle
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _oTitle                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_Mothership_Main::SetTitle(const class FText& _oTitle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_Main", "SetTitle");

	Params::BFGWidget_Mothership_Main_SetTitle Parms{};

	Parms._oTitle = std::move(_oTitle);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_Mothership_Main.GetActiveSubmenu
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBFGWidget_Mothership_Submenu*    ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGWidget_Mothership_Submenu* UBFGWidget_Mothership_Main::GetActiveSubmenu() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_Main", "GetActiveSubmenu");

	Params::BFGWidget_Mothership_Main_GetActiveSubmenu Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_Mothership_Main.GetIndexSubmenu
// (Final, Native, Private, Const)
// Parameters:
// class UBFGWidget_Mothership_Submenu*    _pSubmenu                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGWidget_Mothership_Main::GetIndexSubmenu(class UBFGWidget_Mothership_Submenu* _pSubmenu) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Mothership_Main", "GetIndexSubmenu");

	Params::BFGWidget_Mothership_Main_GetIndexSubmenu Parms{};

	Parms._pSubmenu = _pSubmenu;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidgetMissionSelectionNode.GetPosition
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UBFGWidgetMissionSelectionNode::GetPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidgetMissionSelectionNode", "GetPosition");

	Params::BFGWidgetMissionSelectionNode_GetPosition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidgetMissionSelectionNode.OnClicked
// (Final, Native, Public, BlueprintCallable)

void UBFGWidgetMissionSelectionNode::OnClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidgetMissionSelectionNode", "OnClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidgetMissionSelectionNode.OnDoubleClicked
// (Final, Native, Public, BlueprintCallable)

void UBFGWidgetMissionSelectionNode::OnDoubleClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidgetMissionSelectionNode", "OnDoubleClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidgetMissionSelectionNode.OnSetHighlighted
// (Event, Protected, BlueprintEvent)

void UBFGWidgetMissionSelectionNode::OnSetHighlighted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidgetMissionSelectionNode", "OnSetHighlighted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidgetMissionSelectionNode.OnSetSelected
// (Event, Protected, BlueprintEvent)

void UBFGWidgetMissionSelectionNode::OnSetSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidgetMissionSelectionNode", "OnSetSelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidgetMissionSelectionNode.OnSetUnhighlighted
// (Event, Protected, BlueprintEvent)

void UBFGWidgetMissionSelectionNode::OnSetUnhighlighted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidgetMissionSelectionNode", "OnSetUnhighlighted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidgetMissionSelectionNode.SetDisabled
// (Event, Public, BlueprintEvent)

void UBFGWidgetMissionSelectionNode::SetDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidgetMissionSelectionNode", "SetDisabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidgetMissionSelectionNode.SetHighlighted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bHighlighted                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidgetMissionSelectionNode::SetHighlighted(bool _bHighlighted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidgetMissionSelectionNode", "SetHighlighted");

	Params::BFGWidgetMissionSelectionNode_SetHighlighted Parms{};

	Parms._bHighlighted = _bHighlighted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidgetMissionSelectionNode.SetNewContentAvailable
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bNewContentAvailable                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidgetMissionSelectionNode::SetNewContentAvailable(bool _bNewContentAvailable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidgetMissionSelectionNode", "SetNewContentAvailable");

	Params::BFGWidgetMissionSelectionNode_SetNewContentAvailable Parms{};

	Parms._bNewContentAvailable = _bNewContentAvailable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidgetMissionSelectionNode.SetPosition
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector2D                        _vPos                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidgetMissionSelectionNode::SetPosition(const struct FVector2D& _vPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidgetMissionSelectionNode", "SetPosition");

	Params::BFGWidgetMissionSelectionNode_SetPosition Parms{};

	Parms._vPos = std::move(_vPos);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidgetMissionSelectionNode.SetSelected
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bSelected                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidgetMissionSelectionNode::SetSelected(bool _bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidgetMissionSelectionNode", "SetSelected");

	Params::BFGWidgetMissionSelectionNode_SetSelected Parms{};

	Parms._bSelected = _bSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidgetMissionSelectionNode.SetSpecial
// (Event, Public, BlueprintEvent)

void UBFGWidgetMissionSelectionNode::SetSpecial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidgetMissionSelectionNode", "SetSpecial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_MotherShip_PoxLab.AddUniqueUpgrade
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGDataAssetPoxLabUpgrade*       _pUpgrade                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_MotherShip_PoxLab::AddUniqueUpgrade(class UBFGDataAssetPoxLabUpgrade* _pUpgrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MotherShip_PoxLab", "AddUniqueUpgrade");

	Params::BFGWidget_MotherShip_PoxLab_AddUniqueUpgrade Parms{};

	Parms._pUpgrade = _pUpgrade;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_MotherShip_PoxLab.AddUpgrade
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBFGDataAssetPoxLabUpgrade*       _pUpgrade                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_MotherShip_PoxLab::AddUpgrade(class UBFGDataAssetPoxLabUpgrade* _pUpgrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MotherShip_PoxLab", "AddUpgrade");

	Params::BFGWidget_MotherShip_PoxLab_AddUpgrade Parms{};

	Parms._pUpgrade = _pUpgrade;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_MotherShip_PoxLab.ComputeDNAAmount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _bSuccess                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_MotherShip_PoxLab::ComputeDNAAmount(bool _bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MotherShip_PoxLab", "ComputeDNAAmount");

	Params::BFGWidget_MotherShip_PoxLab_ComputeDNAAmount Parms{};

	Parms._bSuccess = _bSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_MotherShip_PoxLab.EnableWidget
// (Event, Public, BlueprintEvent)
// Parameters:
// EBFGMotherShipPoxLabType                _eType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_MotherShip_PoxLab::EnableWidget(EBFGMotherShipPoxLabType _eType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MotherShip_PoxLab", "EnableWidget");

	Params::BFGWidget_MotherShip_PoxLab_EnableWidget Parms{};

	Parms._eType = _eType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_MotherShip_PoxLab.GetEntryWidget
// (Event, Public, BlueprintEvent)
// Parameters:
// class UBFGWidgetPoxLabEntryPoint*       ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGWidgetPoxLabEntryPoint* UBFGWidget_MotherShip_PoxLab::GetEntryWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MotherShip_PoxLab", "GetEntryWidget");

	Params::BFGWidget_MotherShip_PoxLab_GetEntryWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_MotherShip_PoxLab.GetSubMenu
// (Event, Public, BlueprintEvent)
// Parameters:
// EBFGMotherShipPoxLabType                _eType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGWidget_PoxLabSubmenu*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGWidget_PoxLabSubmenu* UBFGWidget_MotherShip_PoxLab::GetSubMenu(EBFGMotherShipPoxLabType _eType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MotherShip_PoxLab", "GetSubMenu");

	Params::BFGWidget_MotherShip_PoxLab_GetSubMenu Parms{};

	Parms._eType = _eType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_MotherShip_PoxLab.InitializeUpgrades
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EBFGMotherShipPoxLabType                _ePoxLabType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UBFGDataAssetPoxLabUpgrade*>_apUpgrades                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   _iDNA                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_MotherShip_PoxLab::InitializeUpgrades(EBFGMotherShipPoxLabType _ePoxLabType, const TArray<class UBFGDataAssetPoxLabUpgrade*>& _apUpgrades, int32 _iDNA)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MotherShip_PoxLab", "InitializeUpgrades");

	Params::BFGWidget_MotherShip_PoxLab_InitializeUpgrades Parms{};

	Parms._ePoxLabType = _ePoxLabType;
	Parms._apUpgrades = std::move(_apUpgrades);
	Parms._iDNA = _iDNA;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_MotherShip_PoxLab.OnEntryPointOptionClicked
// (Final, Native, Public)
// Parameters:
// EBFGMotherShipPoxLabType                _eType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_MotherShip_PoxLab::OnEntryPointOptionClicked(EBFGMotherShipPoxLabType _eType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MotherShip_PoxLab", "OnEntryPointOptionClicked");

	Params::BFGWidget_MotherShip_PoxLab_OnEntryPointOptionClicked Parms{};

	Parms._eType = _eType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_MotherShip_PoxLab.OnNotifyUpgradeStatus
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bSuccess                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_MotherShip_PoxLab::OnNotifyUpgradeStatus(bool _bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MotherShip_PoxLab", "OnNotifyUpgradeStatus");

	Params::BFGWidget_MotherShip_PoxLab_OnNotifyUpgradeStatus Parms{};

	Parms._bSuccess = _bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_MotherShip_PoxLab.OnUpdateDescriptionPanel
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FBFGUpgradeItem                  _pUpgrade                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    _bUpgraded                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bIsPurchaseAble                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_MotherShip_PoxLab::OnUpdateDescriptionPanel(const struct FBFGUpgradeItem& _pUpgrade, bool _bUpgraded, bool _bIsPurchaseAble)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MotherShip_PoxLab", "OnUpdateDescriptionPanel");

	Params::BFGWidget_MotherShip_PoxLab_OnUpdateDescriptionPanel Parms{};

	Parms._pUpgrade = std::move(_pUpgrade);
	Parms._bUpgraded = _bUpgraded;
	Parms._bIsPurchaseAble = _bIsPurchaseAble;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_MotherShip_PoxLab.OnUpdateDNAAmount
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   _iAmountDNA                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_MotherShip_PoxLab::OnUpdateDNAAmount(int32 _iAmountDNA)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MotherShip_PoxLab", "OnUpdateDNAAmount");

	Params::BFGWidget_MotherShip_PoxLab_OnUpdateDNAAmount Parms{};

	Parms._iAmountDNA = _iAmountDNA;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_MotherShip_PoxLab.OnUpdateUpgradeWidget
// (Event, Public, BlueprintEvent)

void UBFGWidget_MotherShip_PoxLab::OnUpdateUpgradeWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MotherShip_PoxLab", "OnUpdateUpgradeWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_MotherShip_PoxLab.OnUpgradeAvailable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBFGMotherShipPoxLabType                _eType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bUpgradeAvailable                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_MotherShip_PoxLab::OnUpgradeAvailable(EBFGMotherShipPoxLabType _eType, bool _bUpgradeAvailable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MotherShip_PoxLab", "OnUpgradeAvailable");

	Params::BFGWidget_MotherShip_PoxLab_OnUpgradeAvailable Parms{};

	Parms._eType = _eType;
	Parms._bUpgradeAvailable = _bUpgradeAvailable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_MotherShip_PoxLab.RemoveUpgradeAt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_MotherShip_PoxLab::RemoveUpgradeAt(int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MotherShip_PoxLab", "RemoveUpgradeAt");

	Params::BFGWidget_MotherShip_PoxLab_RemoveUpgradeAt Parms{};

	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_MotherShip_PoxLab.SetState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBFGMotherShipPoxLabType                _eState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_MotherShip_PoxLab::SetState(EBFGMotherShipPoxLabType _eState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MotherShip_PoxLab", "SetState");

	Params::BFGWidget_MotherShip_PoxLab_SetState Parms{};

	Parms._eState = _eState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_MotherShip_PoxLab.UpdateWidgetState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBFGMotherShipPoxLabType                _eState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_MotherShip_PoxLab::UpdateWidgetState(EBFGMotherShipPoxLabType _eState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MotherShip_PoxLab", "UpdateWidgetState");

	Params::BFGWidget_MotherShip_PoxLab_UpdateWidgetState Parms{};

	Parms._eState = _eState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_MovieSubtitles.ClearSubtitle
// (Event, Protected, BlueprintEvent)

void UBFGWidget_MovieSubtitles::ClearSubtitle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MovieSubtitles", "ClearSubtitle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_MovieSubtitles.SetNewSubtitle
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _strNewSubtitle                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_MovieSubtitles::SetNewSubtitle(const class FText& _strNewSubtitle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MovieSubtitles", "SetNewSubtitle");

	Params::BFGWidget_MovieSubtitles_SetNewSubtitle Parms{};

	Parms._strNewSubtitle = std::move(_strNewSubtitle);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_MovieSubtitles.SetTimeMS
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   _iTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_MovieSubtitles::SetTimeMS(int32 _iTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_MovieSubtitles", "SetTimeMS");

	Params::BFGWidget_MovieSubtitles_SetTimeMS Parms{};

	Parms._iTime = _iTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_NarrativeSequence.EnableSkipButton
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bAnimate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_NarrativeSequence::EnableSkipButton(bool _bShow, bool _bAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_NarrativeSequence", "EnableSkipButton");

	Params::BFGWidget_NarrativeSequence_EnableSkipButton Parms{};

	Parms._bShow = _bShow;
	Parms._bAnimate = _bAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_NarrativeSequence.OnMoodChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   _fMood                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_NarrativeSequence::OnMoodChanged(float _fMood)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_NarrativeSequence", "OnMoodChanged");

	Params::BFGWidget_NarrativeSequence_OnMoodChanged Parms{};

	Parms._fMood = _fMood;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_NarrativeSequence.OnSkip
// (Final, Native, Protected, BlueprintCallable)

void UBFGWidget_NarrativeSequence::OnSkip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_NarrativeSequence", "OnSkip");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_NarrativeSequence.ShowStrikes
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_NarrativeSequence::ShowStrikes(bool _bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_NarrativeSequence", "ShowStrikes");

	Params::BFGWidget_NarrativeSequence_ShowStrikes Parms{};

	Parms._bShow = _bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_NarrativeSequence.GetOptions
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class UBFGWidget_DialogOption*>ReturnValue                                            (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

const TArray<class UBFGWidget_DialogOption*> UBFGWidget_NarrativeSequence::GetOptions() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_NarrativeSequence", "GetOptions");

	Params::BFGWidget_NarrativeSequence_GetOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_PausedTutorial.OnClickAccept
// (Final, Native, Protected, BlueprintCallable)

void UBFGWidget_PausedTutorial::OnClickAccept()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_PausedTutorial", "OnClickAccept");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_PausedTutorial.OnClickSkip
// (Final, Native, Protected, BlueprintCallable)

void UBFGWidget_PausedTutorial::OnClickSkip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_PausedTutorial", "OnClickSkip");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_PausedTutorial.OnStepActive
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_PausedTutorial::OnStepActive(int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_PausedTutorial", "OnStepActive");

	Params::BFGWidget_PausedTutorial_OnStepActive Parms{};

	Parms._iIndex = _iIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_PausedTutorial.OnStepFinished
// (Final, Native, Protected, BlueprintCallable)

void UBFGWidget_PausedTutorial::OnStepFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_PausedTutorial", "OnStepFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_PausedTutorial.SetSkipEnabled
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _bEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_PausedTutorial::SetSkipEnabled(bool _bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_PausedTutorial", "SetSkipEnabled");

	Params::BFGWidget_PausedTutorial_SetSkipEnabled Parms{};

	Parms._bEnabled = _bEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_PausedTutorial.SetTitle
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _strTitle                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_PausedTutorial::SetTitle(const class FText& _strTitle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_PausedTutorial", "SetTitle");

	Params::BFGWidget_PausedTutorial_SetTitle Parms{};

	Parms._strTitle = std::move(_strTitle);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_PausedTutorial.SetupStep
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             _strDescription                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FSlateBrush                      _oImage                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_PausedTutorial::SetupStep(int32 _iIndex, const class FText& _strDescription, const struct FSlateBrush& _oImage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_PausedTutorial", "SetupStep");

	Params::BFGWidget_PausedTutorial_SetupStep Parms{};

	Parms._iIndex = _iIndex;
	Parms._strDescription = std::move(_strDescription);
	Parms._oImage = std::move(_oImage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_PoxLab_UpgradeGraph.EnableBar
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_PoxLab_UpgradeGraph::EnableBar(int32 _iIndex, bool _bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_PoxLab_UpgradeGraph", "EnableBar");

	Params::BFGWidget_PoxLab_UpgradeGraph_EnableBar Parms{};

	Parms._iIndex = _iIndex;
	Parms._bEnable = _bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_PoxLab_UpgradeGraph.GetHorizontalBox
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UHorizontalBox*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHorizontalBox* UBFGWidget_PoxLab_UpgradeGraph::GetHorizontalBox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_PoxLab_UpgradeGraph", "GetHorizontalBox");

	Params::BFGWidget_PoxLab_UpgradeGraph_GetHorizontalBox Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_PoxLab_UpgradeGraph.InitializeGraph
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FBFGPlayerState_UpgradesQueryResponse_rGraphEntries                                         (Parm, OutParm, NativeAccessSpecifierPublic)
// int32                                   _iUpgradeIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_PoxLab_UpgradeGraph::InitializeGraph(struct FBFGPlayerState_UpgradesQueryResponse* _rGraphEntries, int32 _iUpgradeIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_PoxLab_UpgradeGraph", "InitializeGraph");

	Params::BFGWidget_PoxLab_UpgradeGraph_InitializeGraph Parms{};

	Parms._iUpgradeIndex = _iUpgradeIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_rGraphEntries != nullptr)
		*_rGraphEntries = std::move(Parms._rGraphEntries);
}


// Function BFGCore.BFGWidget_PoxLab_UpgradeGraph.OnConfimationPromptClosed
// (Final, Native, Protected)
// Parameters:
// bool                                    _bResult                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_PoxLab_UpgradeGraph::OnConfimationPromptClosed(bool _bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_PoxLab_UpgradeGraph", "OnConfimationPromptClosed");

	Params::BFGWidget_PoxLab_UpgradeGraph_OnConfimationPromptClosed Parms{};

	Parms._bResult = _bResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BFGCore.BFGWidget_PoxLabSubmenu.ActionPoxUpgradeNotify__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EBFGMotherShipPoxLabType                _eType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_PoxLabSubmenu::ActionPoxUpgradeNotify__DelegateSignature(EBFGMotherShipPoxLabType _eType, bool _bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_PoxLabSubmenu", "ActionPoxUpgradeNotify__DelegateSignature");

	Params::BFGWidget_PoxLabSubmenu_ActionPoxUpgradeNotify__DelegateSignature Parms{};

	Parms._eType = _eType;
	Parms._bValue = _bValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_PoxLabSubmenu.GetLinearGraph
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBFGPoxLabSubmenu                       _ePanel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBFGWidget_PoxLab_UpgradeGraph*   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGWidget_PoxLab_UpgradeGraph* UBFGWidget_PoxLabSubmenu::GetLinearGraph(EBFGPoxLabSubmenu _ePanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_PoxLabSubmenu", "GetLinearGraph");

	Params::BFGWidget_PoxLabSubmenu_GetLinearGraph Parms{};

	Parms._ePanel = _ePanel;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_PoxLabSubmenu.GetSpinningWidget
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBFGSpinningWidget*               ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBFGSpinningWidget* UBFGWidget_PoxLabSubmenu::GetSpinningWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_PoxLabSubmenu", "GetSpinningWidget");

	Params::BFGWidget_PoxLabSubmenu_GetSpinningWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_PoxLabSubmenu.OnShowItemDescription
// (Event, Public, BlueprintEvent)
// Parameters:
// EBFGSelectionStatePoxLab                _eSelectionState                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_PoxLabSubmenu::OnShowItemDescription(EBFGSelectionStatePoxLab _eSelectionState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_PoxLabSubmenu", "OnShowItemDescription");

	Params::BFGWidget_PoxLabSubmenu_OnShowItemDescription Parms{};

	Parms._eSelectionState = _eSelectionState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_PoxLabSubmenu.OnUpdateSubMenu
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBFGSelectionStatePoxLab                _eNewState                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_PoxLabSubmenu::OnUpdateSubMenu(EBFGSelectionStatePoxLab _eNewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_PoxLabSubmenu", "OnUpdateSubMenu");

	Params::BFGWidget_PoxLabSubmenu_OnUpdateSubMenu Parms{};

	Parms._eNewState = _eNewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_PoxLabSubmenu.OnUpdateUpgradeDescriptionPanel
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _strUpgradeName                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             _strUpgradeDescription                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   _iUpgradeCost                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_PoxLabSubmenu::OnUpdateUpgradeDescriptionPanel(const class FText& _strUpgradeName, const class FText& _strUpgradeDescription, int32 _iUpgradeCost)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_PoxLabSubmenu", "OnUpdateUpgradeDescriptionPanel");

	Params::BFGWidget_PoxLabSubmenu_OnUpdateUpgradeDescriptionPanel Parms{};

	Parms._strUpgradeName = std::move(_strUpgradeName);
	Parms._strUpgradeDescription = std::move(_strUpgradeDescription);
	Parms._iUpgradeCost = _iUpgradeCost;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_PoxLabSubmenu.UpdateDescriptionPanel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_PoxLabSubmenu::UpdateDescriptionPanel(int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_PoxLabSubmenu", "UpdateDescriptionPanel");

	Params::BFGWidget_PoxLabSubmenu_UpdateDescriptionPanel Parms{};

	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_PoxLabSubmenu.UpdateSelectionState
// (Final, Native, Public, BlueprintCallable)

void UBFGWidget_PoxLabSubmenu::UpdateSelectionState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_PoxLabSubmenu", "UpdateSelectionState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_PoxLabSubmenu.UpdateSpinningWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _fValueX                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fValueY                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_PoxLabSubmenu::UpdateSpinningWidget(float _fValueX, float _fValueY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_PoxLabSubmenu", "UpdateSpinningWidget");

	Params::BFGWidget_PoxLabSubmenu_UpdateSpinningWidget Parms{};

	Parms._fValueX = _fValueX;
	Parms._fValueY = _fValueY;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_PoxLabSubmenu.UpdateUpgradeItemPanel
// (Event, Public, BlueprintEvent)
// Parameters:
// class UBFGDataAssetPoxLabUpgrade*       _pUpgradeItem                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_PoxLabSubmenu::UpdateUpgradeItemPanel(class UBFGDataAssetPoxLabUpgrade* _pUpgradeItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_PoxLabSubmenu", "UpdateUpgradeItemPanel");

	Params::BFGWidget_PoxLabSubmenu_UpdateUpgradeItemPanel Parms{};

	Parms._pUpgradeItem = _pUpgradeItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_PoxLabSubmenu.UpdateUpgradeNoDNA
// (Native, Event, Public, BlueprintEvent)

void UBFGWidget_PoxLabSubmenu::UpdateUpgradeNoDNA()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_PoxLabSubmenu", "UpdateUpgradeNoDNA");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGWidget_PoxLabSubmenu.GetCurrentDNA
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBFGWidget_PoxLabSubmenu::GetCurrentDNA() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_PoxLabSubmenu", "GetCurrentDNA");

	Params::BFGWidget_PoxLabSubmenu_GetCurrentDNA Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGWidget_Tutorial_CustomInputHint.SwitchToGamepad
// (Event, Public, BlueprintEvent)

void UBFGWidget_Tutorial_CustomInputHint::SwitchToGamepad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Tutorial_CustomInputHint", "SwitchToGamepad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_Tutorial_CustomInputHint.SwitchToKBM
// (Event, Public, BlueprintEvent)

void UBFGWidget_Tutorial_CustomInputHint::SwitchToKBM()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_Tutorial_CustomInputHint", "SwitchToKBM");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGWidget_TutorialHandbookChapter.AddOptionToOptionsList
// (Event, Public, BlueprintEvent)
// Parameters:
// class UBFGWidget_TutorialHandbookEntry* _pOption                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidget_TutorialHandbookChapter::AddOptionToOptionsList(class UBFGWidget_TutorialHandbookEntry* _pOption)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialHandbookChapter", "AddOptionToOptionsList");

	Params::BFGWidget_TutorialHandbookChapter_AddOptionToOptionsList Parms{};

	Parms._pOption = _pOption;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_TutorialHandbookChapter.ClearOptionsList
// (Event, Public, BlueprintEvent)

void UBFGWidget_TutorialHandbookChapter::ClearOptionsList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_TutorialHandbookChapter", "ClearOptionsList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BFGCore.BFGInputHintBlock.AddImageToGrid
// (Event, Public, BlueprintEvent)
// Parameters:
// class UImage*                           _pImage                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGridSlot*                        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGridSlot* UBFGInputHintBlock::AddImageToGrid(class UImage* _pImage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInputHintBlock", "AddImageToGrid");

	Params::BFGInputHintBlock_AddImageToGrid Parms{};

	Parms._pImage = _pImage;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFGCore.BFGLabeledImage_InputAction.SetType
// (Event, Public, BlueprintEvent)
// Parameters:
// EBFGInputActionWidgetType               _eType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGLabeledImage_InputAction::SetType(EBFGInputActionWidgetType _eType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGLabeledImage_InputAction", "SetType");

	Params::BFGLabeledImage_InputAction_SetType Parms{};

	Parms._eType = _eType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidget_UserSignedOut.OnApplicationPostInputKeyDownEvent
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FKeyEvent                        _keyEvent                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBFGWidget_UserSignedOut::OnApplicationPostInputKeyDownEvent(const struct FKeyEvent& _keyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidget_UserSignedOut", "OnApplicationPostInputKeyDownEvent");

	Params::BFGWidget_UserSignedOut_OnApplicationPostInputKeyDownEvent Parms{};

	Parms._keyEvent = std::move(_keyEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BFGCore.BFGWidgetAnimationState.ActionSubState__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UBFGWidgetAnimationState*         _pTargetState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBFGWidgetAnimationSubState             _eSubState                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidgetAnimationState::ActionSubState__DelegateSignature(class UBFGWidgetAnimationState* _pTargetState, EBFGWidgetAnimationSubState _eSubState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidgetAnimationState", "ActionSubState__DelegateSignature");

	Params::BFGWidgetAnimationState_ActionSubState__DelegateSignature Parms{};

	Parms._pTargetState = _pTargetState;
	Parms._eSubState = _eSubState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BFGCore.BFGWidgetAnimationState.RequestSubState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBFGWidgetAnimationSubState             _eTargetSubState                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bForce                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBFGWidgetAnimationState::RequestSubState(EBFGWidgetAnimationSubState _eTargetSubState, bool _bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGWidgetAnimationState", "RequestSubState");

	Params::BFGWidgetAnimationState_RequestSubState Parms{};

	Parms._eTargetSubState = _eTargetSubState;
	Parms._bForce = _bForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGBuoyancyForceComponent.CreateTestPointsFromCollisionMesh
// (Final, Native, Public, BlueprintCallable)

void UBFGBuoyancyForceComponent::CreateTestPointsFromCollisionMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGBuoyancyForceComponent", "CreateTestPointsFromCollisionMesh");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGContextualAction.GetActor
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* IBFGContextualAction::GetActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGContextualAction", "GetActor");

	Params::BFGContextualAction_GetActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGContextualAction.IsActionEnabled
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IBFGContextualAction::IsActionEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGContextualAction", "IsActionEnabled");

	Params::BFGContextualAction_IsActionEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGContextualAction.IsFocusable
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IBFGContextualAction::IsFocusable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGContextualAction", "IsFocusable");

	Params::BFGContextualAction_IsFocusable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGContextualAction.OnFocused
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      _pUser                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IBFGContextualAction::OnFocused(class AController* _pUser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGContextualAction", "OnFocused");

	Params::BFGContextualAction_OnFocused Parms{};

	Parms._pUser = _pUser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGContextualAction.OnLostFocus
// (Native, Event, Public, BlueprintEvent)

void IBFGContextualAction::OnLostFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGContextualAction", "OnLostFocus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGContextualAction.OnUsed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      _pUser                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IBFGContextualAction::OnUsed(class AController* _pUser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGContextualAction", "OnUsed");

	Params::BFGContextualAction_OnUsed Parms{};

	Parms._pUser = _pUser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BFGCore.BFGDataProvider.GetArrayEnumasInt
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           _results                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FName                             _name                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IBFGDataProvider::GetArrayEnumasInt(TArray<int32>* _results, class FName _name, int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDataProvider", "GetArrayEnumasInt");

	Params::BFGDataProvider_GetArrayEnumasInt Parms{};

	Parms._name = _name;
	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_results != nullptr)
		*_results = std::move(Parms._results);
}


// Function BFGCore.BFGDataProvider.GetArrayFloat
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<float>                           _result                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FName                             _name                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IBFGDataProvider::GetArrayFloat(TArray<float>* _result, class FName _name, int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDataProvider", "GetArrayFloat");

	Params::BFGDataProvider_GetArrayFloat Parms{};

	Parms._name = _name;
	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_result != nullptr)
		*_result = std::move(Parms._result);
}


// Function BFGCore.BFGDataProvider.GetArrayInt
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           _result                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FName                             _name                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IBFGDataProvider::GetArrayInt(TArray<int32>* _result, class FName _name, int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDataProvider", "GetArrayInt");

	Params::BFGDataProvider_GetArrayInt Parms{};

	Parms._name = _name;
	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_result != nullptr)
		*_result = std::move(Parms._result);
}


// Function BFGCore.BFGDataProvider.GetArrayName
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>                     _result                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FName                             _name                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IBFGDataProvider::GetArrayName(TArray<class FName>* _result, class FName _name, int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDataProvider", "GetArrayName");

	Params::BFGDataProvider_GetArrayName Parms{};

	Parms._name = _name;
	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_result != nullptr)
		*_result = std::move(Parms._result);
}


// Function BFGCore.BFGDataProvider.GetArrayObject
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UObject*>                  _results                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FName                             _name                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IBFGDataProvider::GetArrayObject(TArray<class UObject*>* _results, class FName _name, int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDataProvider", "GetArrayObject");

	Params::BFGDataProvider_GetArrayObject Parms{};

	Parms._name = _name;
	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_results != nullptr)
		*_results = std::move(Parms._results);
}


// Function BFGCore.BFGDataProvider.GetArrayString
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   _result                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FName                             _name                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IBFGDataProvider::GetArrayString(TArray<class FString>* _result, class FName _name, int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDataProvider", "GetArrayString");

	Params::BFGDataProvider_GetArrayString Parms{};

	Parms._name = _name;
	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_result != nullptr)
		*_result = std::move(Parms._result);
}


// Function BFGCore.BFGDataProvider.GetArrayText
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FText>                     _result                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FName                             _name                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IBFGDataProvider::GetArrayText(TArray<class FText>* _result, class FName _name, int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDataProvider", "GetArrayText");

	Params::BFGDataProvider_GetArrayText Parms{};

	Parms._name = _name;
	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_result != nullptr)
		*_result = std::move(Parms._result);
}


// Function BFGCore.BFGDataProvider.GetArrayVector
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FVector>                  _result                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FName                             _name                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IBFGDataProvider::GetArrayVector(TArray<struct FVector>* _result, class FName _name, int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDataProvider", "GetArrayVector");

	Params::BFGDataProvider_GetArrayVector Parms{};

	Parms._name = _name;
	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_result != nullptr)
		*_result = std::move(Parms._result);
}


// Function BFGCore.BFGDataProvider.GetBool
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             _name                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IBFGDataProvider::GetBool(class FName _name, int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDataProvider", "GetBool");

	Params::BFGDataProvider_GetBool Parms{};

	Parms._name = _name;
	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGDataProvider.GetEnumasInt
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             _name                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 IBFGDataProvider::GetEnumasInt(class FName _name, int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDataProvider", "GetEnumasInt");

	Params::BFGDataProvider_GetEnumasInt Parms{};

	Parms._name = _name;
	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGDataProvider.GetFloat
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             _name                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IBFGDataProvider::GetFloat(class FName _name, int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDataProvider", "GetFloat");

	Params::BFGDataProvider_GetFloat Parms{};

	Parms._name = _name;
	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGDataProvider.GetInt
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             _name                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 IBFGDataProvider::GetInt(class FName _name, int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDataProvider", "GetInt");

	Params::BFGDataProvider_GetInt Parms{};

	Parms._name = _name;
	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGDataProvider.GetName
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             _name                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName IBFGDataProvider::GetName(class FName _name, int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDataProvider", "GetName");

	Params::BFGDataProvider_GetName Parms{};

	Parms._name = _name;
	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGDataProvider.GetObject
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             _name                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* IBFGDataProvider::GetObject(class FName _name, int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDataProvider", "GetObject");

	Params::BFGDataProvider_GetObject Parms{};

	Parms._name = _name;
	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGDataProvider.GetString
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             _nam                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString IBFGDataProvider::GetString(class FName _nam, int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDataProvider", "GetString");

	Params::BFGDataProvider_GetString Parms{};

	Parms._nam = _nam;
	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGDataProvider.GetText
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             _name                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText IBFGDataProvider::GetText(class FName _name, int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDataProvider", "GetText");

	Params::BFGDataProvider_GetText Parms{};

	Parms._name = _name;
	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGDataProvider.GetTexture
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             _name                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* IBFGDataProvider::GetTexture(class FName _name, int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDataProvider", "GetTexture");

	Params::BFGDataProvider_GetTexture Parms{};

	Parms._name = _name;
	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGDataProvider.GetVector
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             _name                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector IBFGDataProvider::GetVector(class FName _name, int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDataProvider", "GetVector");

	Params::BFGDataProvider_GetVector Parms{};

	Parms._name = _name;
	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGDataProvider.GetWidget
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             _name                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _iIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* IBFGDataProvider::GetWidget(class FName _name, int32 _iIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGDataProvider", "GetWidget");

	Params::BFGDataProvider_GetWidget Parms{};

	Parms._name = _name;
	Parms._iIndex = _iIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGInteractAnimationPlayerInterface.PlayInteractAnimationSequence
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBFGInteractAnimationSequence    _sequence                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    _bInterupt                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IBFGInteractAnimationPlayerInterface::PlayInteractAnimationSequence(const struct FBFGInteractAnimationSequence& _sequence, bool _bInterupt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInteractAnimationPlayerInterface", "PlayInteractAnimationSequence");

	Params::BFGInteractAnimationPlayerInterface_PlayInteractAnimationSequence Parms{};

	Parms._sequence = std::move(_sequence);
	Parms._bInterupt = _bInterupt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BFGCore.BFGInteractAnimationPlayerInterface.Update
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   _fDeltaTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IBFGInteractAnimationPlayerInterface::Update(float _fDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFGInteractAnimationPlayerInterface", "Update");

	Params::BFGInteractAnimationPlayerInterface_Update Parms{};

	Parms._fDeltaTime = _fDeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

