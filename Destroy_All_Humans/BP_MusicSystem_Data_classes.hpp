#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MusicSystem_Data

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MusicSystem_Data.BP_MusicSystem_Data_C
// 0x0030 (0x0408 - 0x03D8)
class ABP_MusicSystem_Data_C final : public AActor
{
public:
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Soundcue_For_DefaultMusic;                         // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Soundcue_For_CombatMusic;                          // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Soundcue_For_StealthMusic;                         // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Soundcue_For_ChallengeMusic;                       // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Soundcue_For_Ending;                               // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MusicSystem_Data_C">();
	}
	static class ABP_MusicSystem_Data_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MusicSystem_Data_C>();
	}
};
static_assert(alignof(ABP_MusicSystem_Data_C) == 0x000008, "Wrong alignment on ABP_MusicSystem_Data_C");
static_assert(sizeof(ABP_MusicSystem_Data_C) == 0x000408, "Wrong size on ABP_MusicSystem_Data_C");
static_assert(offsetof(ABP_MusicSystem_Data_C, DefaultSceneRoot) == 0x0003D8, "Member 'ABP_MusicSystem_Data_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_MusicSystem_Data_C, Soundcue_For_DefaultMusic) == 0x0003E0, "Member 'ABP_MusicSystem_Data_C::Soundcue_For_DefaultMusic' has a wrong offset!");
static_assert(offsetof(ABP_MusicSystem_Data_C, Soundcue_For_CombatMusic) == 0x0003E8, "Member 'ABP_MusicSystem_Data_C::Soundcue_For_CombatMusic' has a wrong offset!");
static_assert(offsetof(ABP_MusicSystem_Data_C, Soundcue_For_StealthMusic) == 0x0003F0, "Member 'ABP_MusicSystem_Data_C::Soundcue_For_StealthMusic' has a wrong offset!");
static_assert(offsetof(ABP_MusicSystem_Data_C, Soundcue_For_ChallengeMusic) == 0x0003F8, "Member 'ABP_MusicSystem_Data_C::Soundcue_For_ChallengeMusic' has a wrong offset!");
static_assert(offsetof(ABP_MusicSystem_Data_C, Soundcue_For_Ending) == 0x000400, "Member 'ABP_MusicSystem_Data_C::Soundcue_For_Ending' has a wrong offset!");

}

