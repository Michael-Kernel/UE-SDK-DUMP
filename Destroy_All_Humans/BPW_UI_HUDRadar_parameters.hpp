#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPW_UI_HUDRadar

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BPW_UI_HUDRadar.BPW_UI_HUDRadar_C.GetRadarPanel
// 0x0008 (0x0008 - 0x0000)
struct BPW_UI_HUDRadar_C_GetRadarPanel final
{
public:
	class UCanvasPanel*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_UI_HUDRadar_C_GetRadarPanel) == 0x000008, "Wrong alignment on BPW_UI_HUDRadar_C_GetRadarPanel");
static_assert(sizeof(BPW_UI_HUDRadar_C_GetRadarPanel) == 0x000008, "Wrong size on BPW_UI_HUDRadar_C_GetRadarPanel");
static_assert(offsetof(BPW_UI_HUDRadar_C_GetRadarPanel, ReturnValue) == 0x000000, "Member 'BPW_UI_HUDRadar_C_GetRadarPanel::ReturnValue' has a wrong offset!");

// Function BPW_UI_HUDRadar.BPW_UI_HUDRadar_C.UpdateOrientation
// 0x0004 (0x0004 - 0x0000)
struct BPW_UI_HUDRadar_C_UpdateOrientation final
{
public:
	float                                         _fAngle;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_UI_HUDRadar_C_UpdateOrientation) == 0x000004, "Wrong alignment on BPW_UI_HUDRadar_C_UpdateOrientation");
static_assert(sizeof(BPW_UI_HUDRadar_C_UpdateOrientation) == 0x000004, "Wrong size on BPW_UI_HUDRadar_C_UpdateOrientation");
static_assert(offsetof(BPW_UI_HUDRadar_C_UpdateOrientation, _fAngle) == 0x000000, "Member 'BPW_UI_HUDRadar_C_UpdateOrientation::_fAngle' has a wrong offset!");

// Function BPW_UI_HUDRadar.BPW_UI_HUDRadar_C.ExecuteUbergraph_BPW_UI_HUDRadar
// 0x0024 (0x0024 - 0x0000)
struct BPW_UI_HUDRadar_C_ExecuteUbergraph_BPW_UI_HUDRadar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event__fAngle;                              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x0008(0x001C)(NoDestructor)
};
static_assert(alignof(BPW_UI_HUDRadar_C_ExecuteUbergraph_BPW_UI_HUDRadar) == 0x000004, "Wrong alignment on BPW_UI_HUDRadar_C_ExecuteUbergraph_BPW_UI_HUDRadar");
static_assert(sizeof(BPW_UI_HUDRadar_C_ExecuteUbergraph_BPW_UI_HUDRadar) == 0x000024, "Wrong size on BPW_UI_HUDRadar_C_ExecuteUbergraph_BPW_UI_HUDRadar");
static_assert(offsetof(BPW_UI_HUDRadar_C_ExecuteUbergraph_BPW_UI_HUDRadar, EntryPoint) == 0x000000, "Member 'BPW_UI_HUDRadar_C_ExecuteUbergraph_BPW_UI_HUDRadar::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDRadar_C_ExecuteUbergraph_BPW_UI_HUDRadar, K2Node_Event__fAngle) == 0x000004, "Member 'BPW_UI_HUDRadar_C_ExecuteUbergraph_BPW_UI_HUDRadar::K2Node_Event__fAngle' has a wrong offset!");
static_assert(offsetof(BPW_UI_HUDRadar_C_ExecuteUbergraph_BPW_UI_HUDRadar, K2Node_MakeStruct_WidgetTransform) == 0x000008, "Member 'BPW_UI_HUDRadar_C_ExecuteUbergraph_BPW_UI_HUDRadar::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");

}

