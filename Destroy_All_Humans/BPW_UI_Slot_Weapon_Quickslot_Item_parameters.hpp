#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPW_UI_Slot_Weapon_Quickslot_Item

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BPW_UI_Slot_Weapon_Quickslot_Item.BPW_UI_Slot_Weapon_Quickslot_Item_C.ExecuteUbergraph_BPW_UI_Slot_Weapon_Quickslot_Item
// 0x0108 (0x0108 - 0x0000)
struct BPW_UI_Slot_Weapon_Quickslot_Item_C_ExecuteUbergraph_BPW_UI_Slot_Weapon_Quickslot_Item final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event__bLocked;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event__bEquipped;                           // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_Event__oBrush;                              // 0x0008(0x0088)(ConstParm)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0090(0x0018)()
	class FName                                   K2Node_Event__strInputActionName;                  // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__bJammed;                             // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00E8(0x0018)()
	bool                                          K2Node_Event__bEnabled;                            // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPW_UI_Slot_Weapon_Quickslot_Item_C_ExecuteUbergraph_BPW_UI_Slot_Weapon_Quickslot_Item) == 0x000008, "Wrong alignment on BPW_UI_Slot_Weapon_Quickslot_Item_C_ExecuteUbergraph_BPW_UI_Slot_Weapon_Quickslot_Item");
static_assert(sizeof(BPW_UI_Slot_Weapon_Quickslot_Item_C_ExecuteUbergraph_BPW_UI_Slot_Weapon_Quickslot_Item) == 0x000108, "Wrong size on BPW_UI_Slot_Weapon_Quickslot_Item_C_ExecuteUbergraph_BPW_UI_Slot_Weapon_Quickslot_Item");
static_assert(offsetof(BPW_UI_Slot_Weapon_Quickslot_Item_C_ExecuteUbergraph_BPW_UI_Slot_Weapon_Quickslot_Item, EntryPoint) == 0x000000, "Member 'BPW_UI_Slot_Weapon_Quickslot_Item_C_ExecuteUbergraph_BPW_UI_Slot_Weapon_Quickslot_Item::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPW_UI_Slot_Weapon_Quickslot_Item_C_ExecuteUbergraph_BPW_UI_Slot_Weapon_Quickslot_Item, K2Node_Event_IsDesignTime) == 0x000004, "Member 'BPW_UI_Slot_Weapon_Quickslot_Item_C_ExecuteUbergraph_BPW_UI_Slot_Weapon_Quickslot_Item::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BPW_UI_Slot_Weapon_Quickslot_Item_C_ExecuteUbergraph_BPW_UI_Slot_Weapon_Quickslot_Item, K2Node_Event__bLocked) == 0x000005, "Member 'BPW_UI_Slot_Weapon_Quickslot_Item_C_ExecuteUbergraph_BPW_UI_Slot_Weapon_Quickslot_Item::K2Node_Event__bLocked' has a wrong offset!");
static_assert(offsetof(BPW_UI_Slot_Weapon_Quickslot_Item_C_ExecuteUbergraph_BPW_UI_Slot_Weapon_Quickslot_Item, K2Node_Event__bEquipped) == 0x000006, "Member 'BPW_UI_Slot_Weapon_Quickslot_Item_C_ExecuteUbergraph_BPW_UI_Slot_Weapon_Quickslot_Item::K2Node_Event__bEquipped' has a wrong offset!");
static_assert(offsetof(BPW_UI_Slot_Weapon_Quickslot_Item_C_ExecuteUbergraph_BPW_UI_Slot_Weapon_Quickslot_Item, K2Node_Event__oBrush) == 0x000008, "Member 'BPW_UI_Slot_Weapon_Quickslot_Item_C_ExecuteUbergraph_BPW_UI_Slot_Weapon_Quickslot_Item::K2Node_Event__oBrush' has a wrong offset!");
static_assert(offsetof(BPW_UI_Slot_Weapon_Quickslot_Item_C_ExecuteUbergraph_BPW_UI_Slot_Weapon_Quickslot_Item, CallFunc_MakeLiteralText_ReturnValue) == 0x000090, "Member 'BPW_UI_Slot_Weapon_Quickslot_Item_C_ExecuteUbergraph_BPW_UI_Slot_Weapon_Quickslot_Item::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_UI_Slot_Weapon_Quickslot_Item_C_ExecuteUbergraph_BPW_UI_Slot_Weapon_Quickslot_Item, K2Node_Event__strInputActionName) == 0x0000A8, "Member 'BPW_UI_Slot_Weapon_Quickslot_Item_C_ExecuteUbergraph_BPW_UI_Slot_Weapon_Quickslot_Item::K2Node_Event__strInputActionName' has a wrong offset!");
static_assert(offsetof(BPW_UI_Slot_Weapon_Quickslot_Item_C_ExecuteUbergraph_BPW_UI_Slot_Weapon_Quickslot_Item, K2Node_Event__bJammed) == 0x0000B0, "Member 'BPW_UI_Slot_Weapon_Quickslot_Item_C_ExecuteUbergraph_BPW_UI_Slot_Weapon_Quickslot_Item::K2Node_Event__bJammed' has a wrong offset!");
static_assert(offsetof(BPW_UI_Slot_Weapon_Quickslot_Item_C_ExecuteUbergraph_BPW_UI_Slot_Weapon_Quickslot_Item, CallFunc_Conv_NameToString_ReturnValue) == 0x0000B8, "Member 'BPW_UI_Slot_Weapon_Quickslot_Item_C_ExecuteUbergraph_BPW_UI_Slot_Weapon_Quickslot_Item::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_UI_Slot_Weapon_Quickslot_Item_C_ExecuteUbergraph_BPW_UI_Slot_Weapon_Quickslot_Item, CallFunc_Concat_StrStr_ReturnValue) == 0x0000C8, "Member 'BPW_UI_Slot_Weapon_Quickslot_Item_C_ExecuteUbergraph_BPW_UI_Slot_Weapon_Quickslot_Item::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_UI_Slot_Weapon_Quickslot_Item_C_ExecuteUbergraph_BPW_UI_Slot_Weapon_Quickslot_Item, CallFunc_Concat_StrStr_ReturnValue1) == 0x0000D8, "Member 'BPW_UI_Slot_Weapon_Quickslot_Item_C_ExecuteUbergraph_BPW_UI_Slot_Weapon_Quickslot_Item::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BPW_UI_Slot_Weapon_Quickslot_Item_C_ExecuteUbergraph_BPW_UI_Slot_Weapon_Quickslot_Item, CallFunc_Conv_StringToText_ReturnValue) == 0x0000E8, "Member 'BPW_UI_Slot_Weapon_Quickslot_Item_C_ExecuteUbergraph_BPW_UI_Slot_Weapon_Quickslot_Item::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_UI_Slot_Weapon_Quickslot_Item_C_ExecuteUbergraph_BPW_UI_Slot_Weapon_Quickslot_Item, K2Node_Event__bEnabled) == 0x000100, "Member 'BPW_UI_Slot_Weapon_Quickslot_Item_C_ExecuteUbergraph_BPW_UI_Slot_Weapon_Quickslot_Item::K2Node_Event__bEnabled' has a wrong offset!");

// Function BPW_UI_Slot_Weapon_Quickslot_Item.BPW_UI_Slot_Weapon_Quickslot_Item_C.SetInputHintEnabled
// 0x0001 (0x0001 - 0x0000)
struct BPW_UI_Slot_Weapon_Quickslot_Item_C_SetInputHintEnabled final
{
public:
	bool                                          _bEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPW_UI_Slot_Weapon_Quickslot_Item_C_SetInputHintEnabled) == 0x000001, "Wrong alignment on BPW_UI_Slot_Weapon_Quickslot_Item_C_SetInputHintEnabled");
static_assert(sizeof(BPW_UI_Slot_Weapon_Quickslot_Item_C_SetInputHintEnabled) == 0x000001, "Wrong size on BPW_UI_Slot_Weapon_Quickslot_Item_C_SetInputHintEnabled");
static_assert(offsetof(BPW_UI_Slot_Weapon_Quickslot_Item_C_SetInputHintEnabled, _bEnabled) == 0x000000, "Member 'BPW_UI_Slot_Weapon_Quickslot_Item_C_SetInputHintEnabled::_bEnabled' has a wrong offset!");

// Function BPW_UI_Slot_Weapon_Quickslot_Item.BPW_UI_Slot_Weapon_Quickslot_Item_C.SetJammed
// 0x0001 (0x0001 - 0x0000)
struct BPW_UI_Slot_Weapon_Quickslot_Item_C_SetJammed final
{
public:
	bool                                          _bJammed;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPW_UI_Slot_Weapon_Quickslot_Item_C_SetJammed) == 0x000001, "Wrong alignment on BPW_UI_Slot_Weapon_Quickslot_Item_C_SetJammed");
static_assert(sizeof(BPW_UI_Slot_Weapon_Quickslot_Item_C_SetJammed) == 0x000001, "Wrong size on BPW_UI_Slot_Weapon_Quickslot_Item_C_SetJammed");
static_assert(offsetof(BPW_UI_Slot_Weapon_Quickslot_Item_C_SetJammed, _bJammed) == 0x000000, "Member 'BPW_UI_Slot_Weapon_Quickslot_Item_C_SetJammed::_bJammed' has a wrong offset!");

// Function BPW_UI_Slot_Weapon_Quickslot_Item.BPW_UI_Slot_Weapon_Quickslot_Item_C.SetInputActionName
// 0x0008 (0x0008 - 0x0000)
struct BPW_UI_Slot_Weapon_Quickslot_Item_C_SetInputActionName final
{
public:
	class FName                                   _strInputActionName;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_UI_Slot_Weapon_Quickslot_Item_C_SetInputActionName) == 0x000004, "Wrong alignment on BPW_UI_Slot_Weapon_Quickslot_Item_C_SetInputActionName");
static_assert(sizeof(BPW_UI_Slot_Weapon_Quickslot_Item_C_SetInputActionName) == 0x000008, "Wrong size on BPW_UI_Slot_Weapon_Quickslot_Item_C_SetInputActionName");
static_assert(offsetof(BPW_UI_Slot_Weapon_Quickslot_Item_C_SetInputActionName, _strInputActionName) == 0x000000, "Member 'BPW_UI_Slot_Weapon_Quickslot_Item_C_SetInputActionName::_strInputActionName' has a wrong offset!");

// Function BPW_UI_Slot_Weapon_Quickslot_Item.BPW_UI_Slot_Weapon_Quickslot_Item_C.SetBrush
// 0x0088 (0x0088 - 0x0000)
struct BPW_UI_Slot_Weapon_Quickslot_Item_C_SetBrush final
{
public:
	struct FSlateBrush                            _oBrush;                                           // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BPW_UI_Slot_Weapon_Quickslot_Item_C_SetBrush) == 0x000008, "Wrong alignment on BPW_UI_Slot_Weapon_Quickslot_Item_C_SetBrush");
static_assert(sizeof(BPW_UI_Slot_Weapon_Quickslot_Item_C_SetBrush) == 0x000088, "Wrong size on BPW_UI_Slot_Weapon_Quickslot_Item_C_SetBrush");
static_assert(offsetof(BPW_UI_Slot_Weapon_Quickslot_Item_C_SetBrush, _oBrush) == 0x000000, "Member 'BPW_UI_Slot_Weapon_Quickslot_Item_C_SetBrush::_oBrush' has a wrong offset!");

// Function BPW_UI_Slot_Weapon_Quickslot_Item.BPW_UI_Slot_Weapon_Quickslot_Item_C.SetEquipped
// 0x0001 (0x0001 - 0x0000)
struct BPW_UI_Slot_Weapon_Quickslot_Item_C_SetEquipped final
{
public:
	bool                                          _bEquipped;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPW_UI_Slot_Weapon_Quickslot_Item_C_SetEquipped) == 0x000001, "Wrong alignment on BPW_UI_Slot_Weapon_Quickslot_Item_C_SetEquipped");
static_assert(sizeof(BPW_UI_Slot_Weapon_Quickslot_Item_C_SetEquipped) == 0x000001, "Wrong size on BPW_UI_Slot_Weapon_Quickslot_Item_C_SetEquipped");
static_assert(offsetof(BPW_UI_Slot_Weapon_Quickslot_Item_C_SetEquipped, _bEquipped) == 0x000000, "Member 'BPW_UI_Slot_Weapon_Quickslot_Item_C_SetEquipped::_bEquipped' has a wrong offset!");

// Function BPW_UI_Slot_Weapon_Quickslot_Item.BPW_UI_Slot_Weapon_Quickslot_Item_C.SetUnlocked
// 0x0001 (0x0001 - 0x0000)
struct BPW_UI_Slot_Weapon_Quickslot_Item_C_SetUnlocked final
{
public:
	bool                                          _bLocked;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPW_UI_Slot_Weapon_Quickslot_Item_C_SetUnlocked) == 0x000001, "Wrong alignment on BPW_UI_Slot_Weapon_Quickslot_Item_C_SetUnlocked");
static_assert(sizeof(BPW_UI_Slot_Weapon_Quickslot_Item_C_SetUnlocked) == 0x000001, "Wrong size on BPW_UI_Slot_Weapon_Quickslot_Item_C_SetUnlocked");
static_assert(offsetof(BPW_UI_Slot_Weapon_Quickslot_Item_C_SetUnlocked, _bLocked) == 0x000000, "Member 'BPW_UI_Slot_Weapon_Quickslot_Item_C_SetUnlocked::_bLocked' has a wrong offset!");

// Function BPW_UI_Slot_Weapon_Quickslot_Item.BPW_UI_Slot_Weapon_Quickslot_Item_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BPW_UI_Slot_Weapon_Quickslot_Item_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPW_UI_Slot_Weapon_Quickslot_Item_C_PreConstruct) == 0x000001, "Wrong alignment on BPW_UI_Slot_Weapon_Quickslot_Item_C_PreConstruct");
static_assert(sizeof(BPW_UI_Slot_Weapon_Quickslot_Item_C_PreConstruct) == 0x000001, "Wrong size on BPW_UI_Slot_Weapon_Quickslot_Item_C_PreConstruct");
static_assert(offsetof(BPW_UI_Slot_Weapon_Quickslot_Item_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BPW_UI_Slot_Weapon_Quickslot_Item_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

