#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ServerSettings_General

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Brickadia_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ServerSettings_General.BP_ServerSettings_General_C
// 0x0020 (0x00E8 - 0x00C8)
class UBP_ServerSettings_General_C final : public UBRServerSettingsBase_General
{
public:
	int32                                         ServerTypeIndex2;                                  // 0x00C8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             MaxSelectionBoxSize;                               // 0x00CC(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxSelectedBricks;                                 // 0x00D8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SelectionTimeout;                                  // 0x00E0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetMaxSelectedBricks(int32 NewValue);
	void SetMaxSelectionBoxSize(const struct FIntVector& NewValue);
	void SetSelectionTimeout(double NewValue);
	void SetServerTypeIndex2(int32 NewValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ServerSettings_General_C">();
	}
	static class UBP_ServerSettings_General_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ServerSettings_General_C>();
	}
};
static_assert(alignof(UBP_ServerSettings_General_C) == 0x000008, "Wrong alignment on UBP_ServerSettings_General_C");
static_assert(sizeof(UBP_ServerSettings_General_C) == 0x0000E8, "Wrong size on UBP_ServerSettings_General_C");
static_assert(offsetof(UBP_ServerSettings_General_C, ServerTypeIndex2) == 0x0000C8, "Member 'UBP_ServerSettings_General_C::ServerTypeIndex2' has a wrong offset!");
static_assert(offsetof(UBP_ServerSettings_General_C, MaxSelectionBoxSize) == 0x0000CC, "Member 'UBP_ServerSettings_General_C::MaxSelectionBoxSize' has a wrong offset!");
static_assert(offsetof(UBP_ServerSettings_General_C, MaxSelectedBricks) == 0x0000D8, "Member 'UBP_ServerSettings_General_C::MaxSelectedBricks' has a wrong offset!");
static_assert(offsetof(UBP_ServerSettings_General_C, SelectionTimeout) == 0x0000E0, "Member 'UBP_ServerSettings_General_C::SelectionTimeout' has a wrong offset!");

}

