#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Property_MultilineString_RichTextPreview_Chat

#include "Basic.hpp"

#include "WBP_Property_MultilineString_RichTextPreview_Chat_classes.hpp"
#include "WBP_Property_MultilineString_RichTextPreview_Chat_parameters.hpp"


namespace SDK
{

// Function WBP_Property_MultilineString_RichTextPreview_Chat.WBP_Property_MultilineString_RichTextPreview_Chat_C.BndEvt__MultiLineValueInputBox_K2Node_ComponentBoundEvent_1_OnMultiLineEditableTextBoxChangedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_Property_MultilineString_RichTextPreview_Chat_C::BndEvt__MultiLineValueInputBox_K2Node_ComponentBoundEvent_1_OnMultiLineEditableTextBoxChangedEvent__DelegateSignature(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Property_MultilineString_RichTextPreview_Chat_C", "BndEvt__MultiLineValueInputBox_K2Node_ComponentBoundEvent_1_OnMultiLineEditableTextBoxChangedEvent__DelegateSignature");

	Params::WBP_Property_MultilineString_RichTextPreview_Chat_C_BndEvt__MultiLineValueInputBox_K2Node_ComponentBoundEvent_1_OnMultiLineEditableTextBoxChangedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Property_MultilineString_RichTextPreview_Chat.WBP_Property_MultilineString_RichTextPreview_Chat_C.BndEvt__MultiLineValueInputBox_K2Node_ComponentBoundEvent_2_OnMultiLineEditableTextBoxCommittedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// ETextCommit                             CommitMethod                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Property_MultilineString_RichTextPreview_Chat_C::BndEvt__MultiLineValueInputBox_K2Node_ComponentBoundEvent_2_OnMultiLineEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Property_MultilineString_RichTextPreview_Chat_C", "BndEvt__MultiLineValueInputBox_K2Node_ComponentBoundEvent_2_OnMultiLineEditableTextBoxCommittedEvent__DelegateSignature");

	Params::WBP_Property_MultilineString_RichTextPreview_Chat_C_BndEvt__MultiLineValueInputBox_K2Node_ComponentBoundEvent_2_OnMultiLineEditableTextBoxCommittedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Property_MultilineString_RichTextPreview_Chat.WBP_Property_MultilineString_RichTextPreview_Chat_C.BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_Property_MultilineString_RichTextPreview_Chat_C::BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Property_MultilineString_RichTextPreview_Chat_C", "BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature");

	Params::WBP_Property_MultilineString_RichTextPreview_Chat_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Property_MultilineString_RichTextPreview_Chat.WBP_Property_MultilineString_RichTextPreview_Chat_C.BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_3_OnEditableTextBoxCommittedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// ETextCommit                             CommitMethod                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Property_MultilineString_RichTextPreview_Chat_C::BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_3_OnEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Property_MultilineString_RichTextPreview_Chat_C", "BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_3_OnEditableTextBoxCommittedEvent__DelegateSignature");

	Params::WBP_Property_MultilineString_RichTextPreview_Chat_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_3_OnEditableTextBoxCommittedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Property_MultilineString_RichTextPreview_Chat.WBP_Property_MultilineString_RichTextPreview_Chat_C.ExecuteUbergraph_WBP_Property_MultilineString_RichTextPreview_Chat
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Property_MultilineString_RichTextPreview_Chat_C::ExecuteUbergraph_WBP_Property_MultilineString_RichTextPreview_Chat(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Property_MultilineString_RichTextPreview_Chat_C", "ExecuteUbergraph_WBP_Property_MultilineString_RichTextPreview_Chat");

	Params::WBP_Property_MultilineString_RichTextPreview_Chat_C_ExecuteUbergraph_WBP_Property_MultilineString_RichTextPreview_Chat Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Property_MultilineString_RichTextPreview_Chat.WBP_Property_MultilineString_RichTextPreview_Chat_C.HandleTextComitted
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_Property_MultilineString_RichTextPreview_Chat_C::HandleTextComitted(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Property_MultilineString_RichTextPreview_Chat_C", "HandleTextComitted");

	Params::WBP_Property_MultilineString_RichTextPreview_Chat_C_HandleTextComitted Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Property_MultilineString_RichTextPreview_Chat.WBP_Property_MultilineString_RichTextPreview_Chat_C.OnAvailabilityChange
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Property_MultilineString_RichTextPreview_Chat_C::OnAvailabilityChange(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Property_MultilineString_RichTextPreview_Chat_C", "OnAvailabilityChange");

	Params::WBP_Property_MultilineString_RichTextPreview_Chat_C_OnAvailabilityChange Parms{};

	Parms.Enabled = Enabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Property_MultilineString_RichTextPreview_Chat.WBP_Property_MultilineString_RichTextPreview_Chat_C.OnInit
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UInspectorPropertyDescriptor*     NewDescriptor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FInspectorViewTarget&      NewViewTarget                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UWBP_Property_MultilineString_RichTextPreview_Chat_C::OnInit(class UInspectorPropertyDescriptor* NewDescriptor, const struct FInspectorViewTarget& NewViewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Property_MultilineString_RichTextPreview_Chat_C", "OnInit");

	Params::WBP_Property_MultilineString_RichTextPreview_Chat_C_OnInit Parms{};

	Parms.NewDescriptor = NewDescriptor;
	Parms.NewViewTarget = std::move(NewViewTarget);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Property_MultilineString_RichTextPreview_Chat.WBP_Property_MultilineString_RichTextPreview_Chat_C.OnValueChangedExternally
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FInspectorPropertyValue&   ValueIn                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UWBP_Property_MultilineString_RichTextPreview_Chat_C::OnValueChangedExternally(const struct FInspectorPropertyValue& ValueIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Property_MultilineString_RichTextPreview_Chat_C", "OnValueChangedExternally");

	Params::WBP_Property_MultilineString_RichTextPreview_Chat_C_OnValueChangedExternally Parms{};

	Parms.ValueIn = std::move(ValueIn);

	UObject::ProcessEvent(Func, &Parms);
}

}

