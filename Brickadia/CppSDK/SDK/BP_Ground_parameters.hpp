#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Ground

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Ground.BP_Ground_C.OnRep_bUseStudTexture
// 0x0010 (0x0010 - 0x0000)
struct BP_Ground_C_OnRep_bUseStudTexture final
{
public:
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Ground_C_OnRep_bUseStudTexture) == 0x000008, "Wrong alignment on BP_Ground_C_OnRep_bUseStudTexture");
static_assert(sizeof(BP_Ground_C_OnRep_bUseStudTexture) == 0x000010, "Wrong size on BP_Ground_C_OnRep_bUseStudTexture");
static_assert(offsetof(BP_Ground_C_OnRep_bUseStudTexture, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000000, "Member 'BP_Ground_C_OnRep_bUseStudTexture::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ground_C_OnRep_bUseStudTexture, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000008, "Member 'BP_Ground_C_OnRep_bUseStudTexture::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function BP_Ground.BP_Ground_C.OnRep_Variance
// 0x0004 (0x0004 - 0x0000)
struct BP_Ground_C_OnRep_Variance final
{
public:
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Ground_C_OnRep_Variance) == 0x000004, "Wrong alignment on BP_Ground_C_OnRep_Variance");
static_assert(sizeof(BP_Ground_C_OnRep_Variance) == 0x000004, "Wrong size on BP_Ground_C_OnRep_Variance");
static_assert(offsetof(BP_Ground_C_OnRep_Variance, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000000, "Member 'BP_Ground_C_OnRep_Variance::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function BP_Ground.BP_Ground_C.OnRep_VarianceBrickSize
// 0x0004 (0x0004 - 0x0000)
struct BP_Ground_C_OnRep_VarianceBrickSize final
{
public:
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Ground_C_OnRep_VarianceBrickSize) == 0x000004, "Wrong alignment on BP_Ground_C_OnRep_VarianceBrickSize");
static_assert(sizeof(BP_Ground_C_OnRep_VarianceBrickSize) == 0x000004, "Wrong size on BP_Ground_C_OnRep_VarianceBrickSize");
static_assert(offsetof(BP_Ground_C_OnRep_VarianceBrickSize, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000000, "Member 'BP_Ground_C_OnRep_VarianceBrickSize::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function BP_Ground.BP_Ground_C.SetGroundAccentColor
// 0x0010 (0x0010 - 0x0000)
struct BP_Ground_C_SetGroundAccentColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Ground_C_SetGroundAccentColor) == 0x000004, "Wrong alignment on BP_Ground_C_SetGroundAccentColor");
static_assert(sizeof(BP_Ground_C_SetGroundAccentColor) == 0x000010, "Wrong size on BP_Ground_C_SetGroundAccentColor");
static_assert(offsetof(BP_Ground_C_SetGroundAccentColor, Color) == 0x000000, "Member 'BP_Ground_C_SetGroundAccentColor::Color' has a wrong offset!");

// Function BP_Ground.BP_Ground_C.SetGroundColor
// 0x0010 (0x0010 - 0x0000)
struct BP_Ground_C_SetGroundColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Ground_C_SetGroundColor) == 0x000004, "Wrong alignment on BP_Ground_C_SetGroundColor");
static_assert(sizeof(BP_Ground_C_SetGroundColor) == 0x000010, "Wrong size on BP_Ground_C_SetGroundColor");
static_assert(offsetof(BP_Ground_C_SetGroundColor, Color) == 0x000000, "Member 'BP_Ground_C_SetGroundColor::Color' has a wrong offset!");

// Function BP_Ground.BP_Ground_C.SetIsVisible
// 0x0001 (0x0001 - 0x0000)
struct BP_Ground_C_SetIsVisible final
{
public:
	bool                                          IsVisible_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Ground_C_SetIsVisible) == 0x000001, "Wrong alignment on BP_Ground_C_SetIsVisible");
static_assert(sizeof(BP_Ground_C_SetIsVisible) == 0x000001, "Wrong size on BP_Ground_C_SetIsVisible");
static_assert(offsetof(BP_Ground_C_SetIsVisible, IsVisible_0) == 0x000000, "Member 'BP_Ground_C_SetIsVisible::IsVisible_0' has a wrong offset!");

// Function BP_Ground.BP_Ground_C.SetUseStudTexture
// 0x0001 (0x0001 - 0x0000)
struct BP_Ground_C_SetUseStudTexture final
{
public:
	bool                                          bUse;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Ground_C_SetUseStudTexture) == 0x000001, "Wrong alignment on BP_Ground_C_SetUseStudTexture");
static_assert(sizeof(BP_Ground_C_SetUseStudTexture) == 0x000001, "Wrong size on BP_Ground_C_SetUseStudTexture");
static_assert(offsetof(BP_Ground_C_SetUseStudTexture, bUse) == 0x000000, "Member 'BP_Ground_C_SetUseStudTexture::bUse' has a wrong offset!");

// Function BP_Ground.BP_Ground_C.SetVariance
// 0x0008 (0x0008 - 0x0000)
struct BP_Ground_C_SetVariance final
{
public:
	double                                        Variance_0;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Ground_C_SetVariance) == 0x000008, "Wrong alignment on BP_Ground_C_SetVariance");
static_assert(sizeof(BP_Ground_C_SetVariance) == 0x000008, "Wrong size on BP_Ground_C_SetVariance");
static_assert(offsetof(BP_Ground_C_SetVariance, Variance_0) == 0x000000, "Member 'BP_Ground_C_SetVariance::Variance_0' has a wrong offset!");

// Function BP_Ground.BP_Ground_C.SetVarianceBrickSize
// 0x0008 (0x0008 - 0x0000)
struct BP_Ground_C_SetVarianceBrickSize final
{
public:
	double                                        Variance_0;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Ground_C_SetVarianceBrickSize) == 0x000008, "Wrong alignment on BP_Ground_C_SetVarianceBrickSize");
static_assert(sizeof(BP_Ground_C_SetVarianceBrickSize) == 0x000008, "Wrong size on BP_Ground_C_SetVarianceBrickSize");
static_assert(offsetof(BP_Ground_C_SetVarianceBrickSize, Variance_0) == 0x000000, "Member 'BP_Ground_C_SetVarianceBrickSize::Variance_0' has a wrong offset!");

// Function BP_Ground.BP_Ground_C.UserConstructionScript
// 0x0020 (0x0020 - 0x0000)
struct BP_Ground_C_UserConstructionScript final
{
public:
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Ground_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_Ground_C_UserConstructionScript");
static_assert(sizeof(BP_Ground_C_UserConstructionScript) == 0x000020, "Wrong size on BP_Ground_C_UserConstructionScript");
static_assert(offsetof(BP_Ground_C_UserConstructionScript, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000000, "Member 'BP_Ground_C_UserConstructionScript::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ground_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'BP_Ground_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ground_C_UserConstructionScript, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000010, "Member 'BP_Ground_C_UserConstructionScript::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Ground_C_UserConstructionScript, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000014, "Member 'BP_Ground_C_UserConstructionScript::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Ground_C_UserConstructionScript, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x000018, "Member 'BP_Ground_C_UserConstructionScript::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");

}

