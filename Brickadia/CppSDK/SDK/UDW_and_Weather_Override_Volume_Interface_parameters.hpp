#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UDW_and_Weather_Override_Volume_Interface

#include "Basic.hpp"

#include "UDS_RandomWeatherTiming_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UDW_and_Weather_Override_Volume_Interface.UDW_and_Weather_Override_Volume_Interface_C.Get Random Weather Mode
// 0x0001 (0x0001 - 0x0000)
struct UDW_and_Weather_Override_Volume_Interface_C_Get_Random_Weather_Mode final
{
public:
	EUDS_RandomWeatherTiming                      Mode;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UDW_and_Weather_Override_Volume_Interface_C_Get_Random_Weather_Mode) == 0x000001, "Wrong alignment on UDW_and_Weather_Override_Volume_Interface_C_Get_Random_Weather_Mode");
static_assert(sizeof(UDW_and_Weather_Override_Volume_Interface_C_Get_Random_Weather_Mode) == 0x000001, "Wrong size on UDW_and_Weather_Override_Volume_Interface_C_Get_Random_Weather_Mode");
static_assert(offsetof(UDW_and_Weather_Override_Volume_Interface_C_Get_Random_Weather_Mode, Mode) == 0x000000, "Member 'UDW_and_Weather_Override_Volume_Interface_C_Get_Random_Weather_Mode::Mode' has a wrong offset!");

// Function UDW_and_Weather_Override_Volume_Interface.UDW_and_Weather_Override_Volume_Interface_C.Get Random Weather Probability Maps
// 0x0140 (0x0140 - 0x0000)
struct UDW_and_Weather_Override_Volume_Interface_C_Get_Random_Weather_Probability_Maps final
{
public:
	TMap<class UUDS_Weather_Settings_C*, double>  Spring;                                            // 0x0000(0x0050)(Parm, OutParm)
	TMap<class UUDS_Weather_Settings_C*, double>  Summer;                                            // 0x0050(0x0050)(Parm, OutParm)
	TMap<class UUDS_Weather_Settings_C*, double>  Autumn;                                            // 0x00A0(0x0050)(Parm, OutParm)
	TMap<class UUDS_Weather_Settings_C*, double>  Winter;                                            // 0x00F0(0x0050)(Parm, OutParm)
};
static_assert(alignof(UDW_and_Weather_Override_Volume_Interface_C_Get_Random_Weather_Probability_Maps) == 0x000008, "Wrong alignment on UDW_and_Weather_Override_Volume_Interface_C_Get_Random_Weather_Probability_Maps");
static_assert(sizeof(UDW_and_Weather_Override_Volume_Interface_C_Get_Random_Weather_Probability_Maps) == 0x000140, "Wrong size on UDW_and_Weather_Override_Volume_Interface_C_Get_Random_Weather_Probability_Maps");
static_assert(offsetof(UDW_and_Weather_Override_Volume_Interface_C_Get_Random_Weather_Probability_Maps, Spring) == 0x000000, "Member 'UDW_and_Weather_Override_Volume_Interface_C_Get_Random_Weather_Probability_Maps::Spring' has a wrong offset!");
static_assert(offsetof(UDW_and_Weather_Override_Volume_Interface_C_Get_Random_Weather_Probability_Maps, Summer) == 0x000050, "Member 'UDW_and_Weather_Override_Volume_Interface_C_Get_Random_Weather_Probability_Maps::Summer' has a wrong offset!");
static_assert(offsetof(UDW_and_Weather_Override_Volume_Interface_C_Get_Random_Weather_Probability_Maps, Autumn) == 0x0000A0, "Member 'UDW_and_Weather_Override_Volume_Interface_C_Get_Random_Weather_Probability_Maps::Autumn' has a wrong offset!");
static_assert(offsetof(UDW_and_Weather_Override_Volume_Interface_C_Get_Random_Weather_Probability_Maps, Winter) == 0x0000F0, "Member 'UDW_and_Weather_Override_Volume_Interface_C_Get_Random_Weather_Probability_Maps::Winter' has a wrong offset!");

// Function UDW_and_Weather_Override_Volume_Interface.UDW_and_Weather_Override_Volume_Interface_C.Get Season Temperature Ranges
// 0x0040 (0x0040 - 0x0000)
struct UDW_and_Weather_Override_Volume_Interface_C_Get_Season_Temperature_Ranges final
{
public:
	struct FVector2D                              Spring;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Summer;                                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Autumn;                                            // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Winter;                                            // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UDW_and_Weather_Override_Volume_Interface_C_Get_Season_Temperature_Ranges) == 0x000008, "Wrong alignment on UDW_and_Weather_Override_Volume_Interface_C_Get_Season_Temperature_Ranges");
static_assert(sizeof(UDW_and_Weather_Override_Volume_Interface_C_Get_Season_Temperature_Ranges) == 0x000040, "Wrong size on UDW_and_Weather_Override_Volume_Interface_C_Get_Season_Temperature_Ranges");
static_assert(offsetof(UDW_and_Weather_Override_Volume_Interface_C_Get_Season_Temperature_Ranges, Spring) == 0x000000, "Member 'UDW_and_Weather_Override_Volume_Interface_C_Get_Season_Temperature_Ranges::Spring' has a wrong offset!");
static_assert(offsetof(UDW_and_Weather_Override_Volume_Interface_C_Get_Season_Temperature_Ranges, Summer) == 0x000010, "Member 'UDW_and_Weather_Override_Volume_Interface_C_Get_Season_Temperature_Ranges::Summer' has a wrong offset!");
static_assert(offsetof(UDW_and_Weather_Override_Volume_Interface_C_Get_Season_Temperature_Ranges, Autumn) == 0x000020, "Member 'UDW_and_Weather_Override_Volume_Interface_C_Get_Season_Temperature_Ranges::Autumn' has a wrong offset!");
static_assert(offsetof(UDW_and_Weather_Override_Volume_Interface_C_Get_Season_Temperature_Ranges, Winter) == 0x000030, "Member 'UDW_and_Weather_Override_Volume_Interface_C_Get_Season_Temperature_Ranges::Winter' has a wrong offset!");

}

