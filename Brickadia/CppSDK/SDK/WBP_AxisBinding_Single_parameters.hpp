#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AxisBinding_Single

#include "Basic.hpp"

#include "Brickadia_structs.hpp"
#include "InputCore_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_AxisBinding_Single.WBP_AxisBinding_Single_C.IsValidKeyForFakeAxis
// 0x0030 (0x0030 - 0x0000)
struct WBP_AxisBinding_Single_C_IsValidKeyForFakeAxis final
{
public:
	struct FBRInputKey_FakeAxis                   NewParam;                                          // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_AxisBinding_Single_C_IsValidKeyForFakeAxis) == 0x000008, "Wrong alignment on WBP_AxisBinding_Single_C_IsValidKeyForFakeAxis");
static_assert(sizeof(WBP_AxisBinding_Single_C_IsValidKeyForFakeAxis) == 0x000030, "Wrong size on WBP_AxisBinding_Single_C_IsValidKeyForFakeAxis");
static_assert(offsetof(WBP_AxisBinding_Single_C_IsValidKeyForFakeAxis, NewParam) == 0x000000, "Member 'WBP_AxisBinding_Single_C_IsValidKeyForFakeAxis::NewParam' has a wrong offset!");

// Function WBP_AxisBinding_Single.WBP_AxisBinding_Single_C.HandleAxisSelected
// 0x0040 (0x0040 - 0x0000)
struct WBP_AxisBinding_Single_C_HandleAxisSelected final
{
public:
	struct FBRInputKey_Axis                       KeyAxis;                                           // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FKey                                   LV_Key;                                            // 0x0020(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsMouseButton_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsKeyboardKey_ReturnValue;            // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AxisBinding_Single_C_HandleAxisSelected) == 0x000008, "Wrong alignment on WBP_AxisBinding_Single_C_HandleAxisSelected");
static_assert(sizeof(WBP_AxisBinding_Single_C_HandleAxisSelected) == 0x000040, "Wrong size on WBP_AxisBinding_Single_C_HandleAxisSelected");
static_assert(offsetof(WBP_AxisBinding_Single_C_HandleAxisSelected, KeyAxis) == 0x000000, "Member 'WBP_AxisBinding_Single_C_HandleAxisSelected::KeyAxis' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_HandleAxisSelected, LV_Key) == 0x000020, "Member 'WBP_AxisBinding_Single_C_HandleAxisSelected::LV_Key' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_HandleAxisSelected, CallFunc_Key_IsMouseButton_ReturnValue) == 0x000038, "Member 'WBP_AxisBinding_Single_C_HandleAxisSelected::CallFunc_Key_IsMouseButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_HandleAxisSelected, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x000039, "Member 'WBP_AxisBinding_Single_C_HandleAxisSelected::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_HandleAxisSelected, CallFunc_Key_IsKeyboardKey_ReturnValue) == 0x00003A, "Member 'WBP_AxisBinding_Single_C_HandleAxisSelected::CallFunc_Key_IsKeyboardKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_HandleAxisSelected, CallFunc_BooleanOR_ReturnValue) == 0x00003B, "Member 'WBP_AxisBinding_Single_C_HandleAxisSelected::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WBP_AxisBinding_Single.WBP_AxisBinding_Single_C.HandleKeySelected_Up
// 0x0088 (0x0088 - 0x0000)
struct WBP_AxisBinding_Single_C_HandleKeySelected_Up final
{
public:
	struct FBRInputKey_WithModifiers              KeyWithModifiers;                                  // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FKey                                   LV_Key;                                            // 0x0020(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FBRInputKey_Simple                     K2Node_MakeStruct_None;                            // 0x0038(0x0018)()
	struct FBRInputKey_FakeAxis                   K2Node_MakeStruct_None_1;                          // 0x0050(0x0030)()
	bool                                          CallFunc_Key_IsMouseButton_ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsKeyboardKey_ReturnValue;            // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AxisBinding_Single_C_HandleKeySelected_Up) == 0x000008, "Wrong alignment on WBP_AxisBinding_Single_C_HandleKeySelected_Up");
static_assert(sizeof(WBP_AxisBinding_Single_C_HandleKeySelected_Up) == 0x000088, "Wrong size on WBP_AxisBinding_Single_C_HandleKeySelected_Up");
static_assert(offsetof(WBP_AxisBinding_Single_C_HandleKeySelected_Up, KeyWithModifiers) == 0x000000, "Member 'WBP_AxisBinding_Single_C_HandleKeySelected_Up::KeyWithModifiers' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_HandleKeySelected_Up, LV_Key) == 0x000020, "Member 'WBP_AxisBinding_Single_C_HandleKeySelected_Up::LV_Key' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_HandleKeySelected_Up, K2Node_MakeStruct_None) == 0x000038, "Member 'WBP_AxisBinding_Single_C_HandleKeySelected_Up::K2Node_MakeStruct_None' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_HandleKeySelected_Up, K2Node_MakeStruct_None_1) == 0x000050, "Member 'WBP_AxisBinding_Single_C_HandleKeySelected_Up::K2Node_MakeStruct_None_1' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_HandleKeySelected_Up, CallFunc_Key_IsMouseButton_ReturnValue) == 0x000080, "Member 'WBP_AxisBinding_Single_C_HandleKeySelected_Up::CallFunc_Key_IsMouseButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_HandleKeySelected_Up, CallFunc_Key_IsKeyboardKey_ReturnValue) == 0x000081, "Member 'WBP_AxisBinding_Single_C_HandleKeySelected_Up::CallFunc_Key_IsKeyboardKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_HandleKeySelected_Up, CallFunc_BooleanOR_ReturnValue) == 0x000082, "Member 'WBP_AxisBinding_Single_C_HandleKeySelected_Up::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_HandleKeySelected_Up, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x000083, "Member 'WBP_AxisBinding_Single_C_HandleKeySelected_Up::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");

// Function WBP_AxisBinding_Single.WBP_AxisBinding_Single_C.HandleKeySelected_Down
// 0x0088 (0x0088 - 0x0000)
struct WBP_AxisBinding_Single_C_HandleKeySelected_Down final
{
public:
	struct FBRInputKey_WithModifiers              KeyWithModifiers;                                  // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FKey                                   LV_Key;                                            // 0x0020(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FBRInputKey_Simple                     K2Node_MakeStruct_None;                            // 0x0038(0x0018)()
	struct FBRInputKey_FakeAxis                   K2Node_MakeStruct_None_1;                          // 0x0050(0x0030)()
	bool                                          CallFunc_Key_IsMouseButton_ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsKeyboardKey_ReturnValue;            // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AxisBinding_Single_C_HandleKeySelected_Down) == 0x000008, "Wrong alignment on WBP_AxisBinding_Single_C_HandleKeySelected_Down");
static_assert(sizeof(WBP_AxisBinding_Single_C_HandleKeySelected_Down) == 0x000088, "Wrong size on WBP_AxisBinding_Single_C_HandleKeySelected_Down");
static_assert(offsetof(WBP_AxisBinding_Single_C_HandleKeySelected_Down, KeyWithModifiers) == 0x000000, "Member 'WBP_AxisBinding_Single_C_HandleKeySelected_Down::KeyWithModifiers' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_HandleKeySelected_Down, LV_Key) == 0x000020, "Member 'WBP_AxisBinding_Single_C_HandleKeySelected_Down::LV_Key' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_HandleKeySelected_Down, K2Node_MakeStruct_None) == 0x000038, "Member 'WBP_AxisBinding_Single_C_HandleKeySelected_Down::K2Node_MakeStruct_None' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_HandleKeySelected_Down, K2Node_MakeStruct_None_1) == 0x000050, "Member 'WBP_AxisBinding_Single_C_HandleKeySelected_Down::K2Node_MakeStruct_None_1' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_HandleKeySelected_Down, CallFunc_Key_IsMouseButton_ReturnValue) == 0x000080, "Member 'WBP_AxisBinding_Single_C_HandleKeySelected_Down::CallFunc_Key_IsMouseButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_HandleKeySelected_Down, CallFunc_Key_IsKeyboardKey_ReturnValue) == 0x000081, "Member 'WBP_AxisBinding_Single_C_HandleKeySelected_Down::CallFunc_Key_IsKeyboardKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_HandleKeySelected_Down, CallFunc_BooleanOR_ReturnValue) == 0x000082, "Member 'WBP_AxisBinding_Single_C_HandleKeySelected_Down::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_HandleKeySelected_Down, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x000083, "Member 'WBP_AxisBinding_Single_C_HandleKeySelected_Down::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");

// Function WBP_AxisBinding_Single.WBP_AxisBinding_Single_C.UpdateDisplayedValues
// 0x0070 (0x0070 - 0x0000)
struct WBP_AxisBinding_Single_C_UpdateDisplayedValues final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECheckBoxState                                Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECheckBoxState                                Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBRInputKey_WithModifiers              K2Node_MakeStruct_None;                            // 0x0008(0x0020)()
	struct FBRInputKey_WithModifiers              K2Node_MakeStruct_None_1;                          // 0x0028(0x0020)()
	ECheckBoxState                                K2Node_Select_Default;                             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBRInputKey_WithModifiers              K2Node_MakeStruct_None_2;                          // 0x0050(0x0020)()
};
static_assert(alignof(WBP_AxisBinding_Single_C_UpdateDisplayedValues) == 0x000008, "Wrong alignment on WBP_AxisBinding_Single_C_UpdateDisplayedValues");
static_assert(sizeof(WBP_AxisBinding_Single_C_UpdateDisplayedValues) == 0x000070, "Wrong size on WBP_AxisBinding_Single_C_UpdateDisplayedValues");
static_assert(offsetof(WBP_AxisBinding_Single_C_UpdateDisplayedValues, Temp_bool_Variable) == 0x000000, "Member 'WBP_AxisBinding_Single_C_UpdateDisplayedValues::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_UpdateDisplayedValues, Temp_byte_Variable) == 0x000001, "Member 'WBP_AxisBinding_Single_C_UpdateDisplayedValues::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_UpdateDisplayedValues, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_AxisBinding_Single_C_UpdateDisplayedValues::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_UpdateDisplayedValues, K2Node_MakeStruct_None) == 0x000008, "Member 'WBP_AxisBinding_Single_C_UpdateDisplayedValues::K2Node_MakeStruct_None' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_UpdateDisplayedValues, K2Node_MakeStruct_None_1) == 0x000028, "Member 'WBP_AxisBinding_Single_C_UpdateDisplayedValues::K2Node_MakeStruct_None_1' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_UpdateDisplayedValues, K2Node_Select_Default) == 0x000048, "Member 'WBP_AxisBinding_Single_C_UpdateDisplayedValues::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_UpdateDisplayedValues, K2Node_MakeStruct_None_2) == 0x000050, "Member 'WBP_AxisBinding_Single_C_UpdateDisplayedValues::K2Node_MakeStruct_None_2' has a wrong offset!");

// Function WBP_AxisBinding_Single.WBP_AxisBinding_Single_C.SetValue_Real
// 0x0020 (0x0020 - 0x0000)
struct WBP_AxisBinding_Single_C_SetValue_Real final
{
public:
	struct FBRInputKey_Axis                       KeyAxis;                                           // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_AxisBinding_Single_C_SetValue_Real) == 0x000008, "Wrong alignment on WBP_AxisBinding_Single_C_SetValue_Real");
static_assert(sizeof(WBP_AxisBinding_Single_C_SetValue_Real) == 0x000020, "Wrong size on WBP_AxisBinding_Single_C_SetValue_Real");
static_assert(offsetof(WBP_AxisBinding_Single_C_SetValue_Real, KeyAxis) == 0x000000, "Member 'WBP_AxisBinding_Single_C_SetValue_Real::KeyAxis' has a wrong offset!");

// Function WBP_AxisBinding_Single.WBP_AxisBinding_Single_C.SetValue_Fake
// 0x0030 (0x0030 - 0x0000)
struct WBP_AxisBinding_Single_C_SetValue_Fake final
{
public:
	struct FBRInputKey_FakeAxis                   KeyFakeAxis;                                       // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_AxisBinding_Single_C_SetValue_Fake) == 0x000008, "Wrong alignment on WBP_AxisBinding_Single_C_SetValue_Fake");
static_assert(sizeof(WBP_AxisBinding_Single_C_SetValue_Fake) == 0x000030, "Wrong size on WBP_AxisBinding_Single_C_SetValue_Fake");
static_assert(offsetof(WBP_AxisBinding_Single_C_SetValue_Fake, KeyFakeAxis) == 0x000000, "Member 'WBP_AxisBinding_Single_C_SetValue_Fake::KeyFakeAxis' has a wrong offset!");

// Function WBP_AxisBinding_Single.WBP_AxisBinding_Single_C.BndEvt__BindingDetails_Real_Invert_K2Node_ComponentBoundEvent_6_OnCheckBoxComponentStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_AxisBinding_Single_C_BndEvt__BindingDetails_Real_Invert_K2Node_ComponentBoundEvent_6_OnCheckBoxComponentStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AxisBinding_Single_C_BndEvt__BindingDetails_Real_Invert_K2Node_ComponentBoundEvent_6_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on WBP_AxisBinding_Single_C_BndEvt__BindingDetails_Real_Invert_K2Node_ComponentBoundEvent_6_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(sizeof(WBP_AxisBinding_Single_C_BndEvt__BindingDetails_Real_Invert_K2Node_ComponentBoundEvent_6_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong size on WBP_AxisBinding_Single_C_BndEvt__BindingDetails_Real_Invert_K2Node_ComponentBoundEvent_6_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(offsetof(WBP_AxisBinding_Single_C_BndEvt__BindingDetails_Real_Invert_K2Node_ComponentBoundEvent_6_OnCheckBoxComponentStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'WBP_AxisBinding_Single_C_BndEvt__BindingDetails_Real_Invert_K2Node_ComponentBoundEvent_6_OnCheckBoxComponentStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function WBP_AxisBinding_Single.WBP_AxisBinding_Single_C.ExecuteUbergraph_WBP_AxisBinding_Single
// 0x0110 (0x0110 - 0x0000)
struct WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FBRInputKey_Axis& KeyAxis)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_GenericBindingDialog_C*            CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_GenericBindingDialog_C*            CallFunc_Create_ReturnValue_1;                     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_GenericBindingDialog_C*            CallFunc_Create_ReturnValue_2;                     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UInspectorPropertyDescriptor*           CallFunc_GetDescriptor_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsChecked;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBRInputKey_FakeAxis                   K2Node_MakeStruct_None;                            // 0x0040(0x0030)()
	struct FBRInputKey_FakeAxis                   K2Node_MakeStruct_None_1;                          // 0x0070(0x0030)()
	TDelegate<void(const struct FBRInputKey_WithModifiers& KeyWithModifiers)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInspectorPropertyDescriptor*           CallFunc_GetDescriptor_ReturnValue_1;              // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FBRInputKey_WithModifiers& KeyWithModifiers)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_GenericBindingDialog_C*            CallFunc_Create_ReturnValue_3;                     // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UInspectorPropertyDescriptor*           CallFunc_GetDescriptor_ReturnValue_2;              // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FBRInputKey_WithModifiers& KeyWithModifiers)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x00D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInspectorPropertyDescriptor*           CallFunc_GetDescriptor_ReturnValue_3;              // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FBRInputKey_Axis& KeyAxis)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x00F0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FBRInputKey_Axis& KeyAxis)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0100(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single) == 0x000008, "Wrong alignment on WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single");
static_assert(sizeof(WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single) == 0x000110, "Wrong size on WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single");
static_assert(offsetof(WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single, EntryPoint) == 0x000000, "Member 'WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single, CallFunc_Create_ReturnValue) == 0x000018, "Member 'WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single, CallFunc_Create_ReturnValue_1) == 0x000020, "Member 'WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single, CallFunc_Create_ReturnValue_2) == 0x000028, "Member 'WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single, CallFunc_GetDescriptor_ReturnValue) == 0x000030, "Member 'WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single::CallFunc_GetDescriptor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single, K2Node_ComponentBoundEvent_bIsChecked) == 0x000038, "Member 'WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single::K2Node_ComponentBoundEvent_bIsChecked' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single, K2Node_MakeStruct_None) == 0x000040, "Member 'WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single::K2Node_MakeStruct_None' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single, K2Node_MakeStruct_None_1) == 0x000070, "Member 'WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single::K2Node_MakeStruct_None_1' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000A0, "Member 'WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single, CallFunc_GetDescriptor_ReturnValue_1) == 0x0000B0, "Member 'WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single::CallFunc_GetDescriptor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000B8, "Member 'WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single, CallFunc_Create_ReturnValue_3) == 0x0000C8, "Member 'WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single::CallFunc_Create_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single, CallFunc_GetDescriptor_ReturnValue_2) == 0x0000D0, "Member 'WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single::CallFunc_GetDescriptor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000D8, "Member 'WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single, CallFunc_GetDescriptor_ReturnValue_3) == 0x0000E8, "Member 'WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single::CallFunc_GetDescriptor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000F0, "Member 'WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single, K2Node_CreateDelegate_OutputDelegate_5) == 0x000100, "Member 'WBP_AxisBinding_Single_C_ExecuteUbergraph_WBP_AxisBinding_Single::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");

}

