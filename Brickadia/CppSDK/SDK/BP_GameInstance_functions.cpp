#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameInstance

#include "Basic.hpp"

#include "BP_GameInstance_classes.hpp"
#include "BP_GameInstance_parameters.hpp"


namespace SDK
{

// Function BP_GameInstance.BP_GameInstance_C.DisableBackgroundMusic
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GameInstance_C::DisableBackgroundMusic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameInstance_C", "DisableBackgroundMusic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameInstance.BP_GameInstance_C.EnableBackgroundMusic
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GameInstance_C::EnableBackgroundMusic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameInstance_C", "EnableBackgroundMusic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameInstance.BP_GameInstance_C.ExecuteUbergraph_BP_GameInstance
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameInstance_C::ExecuteUbergraph_BP_GameInstance(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameInstance_C", "ExecuteUbergraph_BP_GameInstance");

	Params::BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameInstance.BP_GameInstance_C.ForcePlaySongLooping
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class USoundBase>        Song                                                   (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_GameInstance_C::ForcePlaySongLooping(TSoftObjectPtr<class USoundBase> Song)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameInstance_C", "ForcePlaySongLooping");

	Params::BP_GameInstance_C_ForcePlaySongLooping Parms{};

	Parms.Song = Song;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameInstance.BP_GameInstance_C.GetNextSongDelay
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double*                                 Delay                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameInstance_C::GetNextSongDelay(double* Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameInstance_C", "GetNextSongDelay");

	Params::BP_GameInstance_C_GetNextSongDelay Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Delay != nullptr)
		*Delay = Parms.Delay;
}


// Function BP_GameInstance.BP_GameInstance_C.HandleNetworkError
// (Event, Public, BlueprintEvent)
// Parameters:
// ENetworkFailure                         FailureType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    ErrorString                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    bIsServer                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameInstance_C::HandleNetworkError(ENetworkFailure FailureType, const class FString& ErrorString, bool bIsServer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameInstance_C", "HandleNetworkError");

	Params::BP_GameInstance_C_HandleNetworkError Parms{};

	Parms.FailureType = FailureType;
	Parms.ErrorString = std::move(ErrorString);
	Parms.bIsServer = bIsServer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameInstance.BP_GameInstance_C.HandlePreviousSongComplete
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GameInstance_C::HandlePreviousSongComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameInstance_C", "HandlePreviousSongComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameInstance.BP_GameInstance_C.HandleTravelError
// (Event, Public, BlueprintEvent)
// Parameters:
// ETravelFailure                          FailureType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    ErrorString                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_GameInstance_C::HandleTravelError(ETravelFailure FailureType, const class FString& ErrorString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameInstance_C", "HandleTravelError");

	Params::BP_GameInstance_C_HandleTravelError Parms{};

	Parms.FailureType = FailureType;
	Parms.ErrorString = std::move(ErrorString);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameInstance.BP_GameInstance_C.HangleSongComplete
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_GameInstance_C::HangleSongComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameInstance_C", "HangleSongComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameInstance.BP_GameInstance_C.OnButtonClicked_EF6D5265445B1CDC76E7449B8AC47BE4
// (BlueprintCallable, BlueprintEvent)

void UBP_GameInstance_C::OnButtonClicked_EF6D5265445B1CDC76E7449B8AC47BE4()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameInstance_C", "OnButtonClicked_EF6D5265445B1CDC76E7449B8AC47BE4");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameInstance.BP_GameInstance_C.OnLoaded_EA74557847793C63A74DE8B3A1428A7B
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_GameInstance_C::OnLoaded_EA74557847793C63A74DE8B3A1428A7B(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameInstance_C", "OnLoaded_EA74557847793C63A74DE8B3A1428A7B");

	Params::BP_GameInstance_C_OnLoaded_EA74557847793C63A74DE8B3A1428A7B Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameInstance.BP_GameInstance_C.PlayNextSongInPlaylist
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_GameInstance_C::PlayNextSongInPlaylist()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameInstance_C", "PlayNextSongInPlaylist");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameInstance.BP_GameInstance_C.PlaySong
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       Song                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  FadeDuration                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameInstance_C::PlaySong(class USoundBase* Song, double FadeDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameInstance_C", "PlaySong");

	Params::BP_GameInstance_C_PlaySong Parms{};

	Parms.Song = Song;
	Parms.FadeDuration = FadeDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameInstance.BP_GameInstance_C.Private_AsyncLoadAndPlaySong
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class USoundBase>        Song                                                   (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// double                                  FadeDuration                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameInstance_C::Private_AsyncLoadAndPlaySong(TSoftObjectPtr<class USoundBase> Song, double FadeDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameInstance_C", "Private_AsyncLoadAndPlaySong");

	Params::BP_GameInstance_C_Private_AsyncLoadAndPlaySong Parms{};

	Parms.Song = Song;
	Parms.FadeDuration = FadeDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameInstance.BP_GameInstance_C.ReceiveInit
// (Event, Public, BlueprintEvent)

void UBP_GameInstance_C::ReceiveInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameInstance_C", "ReceiveInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameInstance.BP_GameInstance_C.ReportErrors
// (BlueprintCallable, BlueprintEvent)

void UBP_GameInstance_C::ReportErrors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameInstance_C", "ReportErrors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameInstance.BP_GameInstance_C.SetTimerForNextSong
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_GameInstance_C::SetTimerForNextSong()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameInstance_C", "SetTimerForNextSong");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameInstance.BP_GameInstance_C.ShuffleSongPlaylist
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_GameInstance_C::ShuffleSongPlaylist()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameInstance_C", "ShuffleSongPlaylist");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameInstance.BP_GameInstance_C.StopSong
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_GameInstance_C::StopSong()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameInstance_C", "StopSong");

	UObject::ProcessEvent(Func, nullptr);
}

}

