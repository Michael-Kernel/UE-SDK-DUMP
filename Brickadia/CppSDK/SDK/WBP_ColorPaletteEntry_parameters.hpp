#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ColorPaletteEntry

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_ColorPaletteEntry.WBP_ColorPaletteEntry_C.ExecuteUbergraph_WBP_ColorPaletteEntry
// 0x005C (0x005C - 0x0000)
struct WBP_ColorPaletteEntry_C_ExecuteUbergraph_WBP_ColorPaletteEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_ColorToLinearColorNoSRGB_ReturnValue;     // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_Color;                          // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bCommit;                        // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_ColorToLinearColorNoSRGB_ReturnValue_1;   // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_None;                            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_Conv_LinearColorToColor_ReturnValue;      // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x004C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPaletteEntry_C_ExecuteUbergraph_WBP_ColorPaletteEntry) == 0x000004, "Wrong alignment on WBP_ColorPaletteEntry_C_ExecuteUbergraph_WBP_ColorPaletteEntry");
static_assert(sizeof(WBP_ColorPaletteEntry_C_ExecuteUbergraph_WBP_ColorPaletteEntry) == 0x00005C, "Wrong size on WBP_ColorPaletteEntry_C_ExecuteUbergraph_WBP_ColorPaletteEntry");
static_assert(offsetof(WBP_ColorPaletteEntry_C_ExecuteUbergraph_WBP_ColorPaletteEntry, EntryPoint) == 0x000000, "Member 'WBP_ColorPaletteEntry_C_ExecuteUbergraph_WBP_ColorPaletteEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_ExecuteUbergraph_WBP_ColorPaletteEntry, CallFunc_ColorToLinearColorNoSRGB_ReturnValue) == 0x000004, "Member 'WBP_ColorPaletteEntry_C_ExecuteUbergraph_WBP_ColorPaletteEntry::CallFunc_ColorToLinearColorNoSRGB_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_ExecuteUbergraph_WBP_ColorPaletteEntry, K2Node_CustomEvent_Color) == 0x000014, "Member 'WBP_ColorPaletteEntry_C_ExecuteUbergraph_WBP_ColorPaletteEntry::K2Node_CustomEvent_Color' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_ExecuteUbergraph_WBP_ColorPaletteEntry, K2Node_CustomEvent_bCommit) == 0x000024, "Member 'WBP_ColorPaletteEntry_C_ExecuteUbergraph_WBP_ColorPaletteEntry::K2Node_CustomEvent_bCommit' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_ExecuteUbergraph_WBP_ColorPaletteEntry, CallFunc_ColorToLinearColorNoSRGB_ReturnValue_1) == 0x000028, "Member 'WBP_ColorPaletteEntry_C_ExecuteUbergraph_WBP_ColorPaletteEntry::CallFunc_ColorToLinearColorNoSRGB_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_ExecuteUbergraph_WBP_ColorPaletteEntry, K2Node_MakeStruct_None) == 0x000038, "Member 'WBP_ColorPaletteEntry_C_ExecuteUbergraph_WBP_ColorPaletteEntry::K2Node_MakeStruct_None' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_ExecuteUbergraph_WBP_ColorPaletteEntry, CallFunc_Conv_LinearColorToColor_ReturnValue) == 0x000048, "Member 'WBP_ColorPaletteEntry_C_ExecuteUbergraph_WBP_ColorPaletteEntry::CallFunc_Conv_LinearColorToColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_ExecuteUbergraph_WBP_ColorPaletteEntry, K2Node_CreateDelegate_OutputDelegate) == 0x00004C, "Member 'WBP_ColorPaletteEntry_C_ExecuteUbergraph_WBP_ColorPaletteEntry::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WBP_ColorPaletteEntry.WBP_ColorPaletteEntry_C.GetColorMenuContext
// 0x0030 (0x0030 - 0x0000)
struct WBP_ColorPaletteEntry_C_GetColorMenuContext final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_LinearColorPickerMenu_C*           CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_ColorToLinearColorNoSRGB_ReturnValue;     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FLinearColor& NewColor, bool bCommit)> K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPaletteEntry_C_GetColorMenuContext) == 0x000008, "Wrong alignment on WBP_ColorPaletteEntry_C_GetColorMenuContext");
static_assert(sizeof(WBP_ColorPaletteEntry_C_GetColorMenuContext) == 0x000030, "Wrong size on WBP_ColorPaletteEntry_C_GetColorMenuContext");
static_assert(offsetof(WBP_ColorPaletteEntry_C_GetColorMenuContext, ReturnValue) == 0x000000, "Member 'WBP_ColorPaletteEntry_C_GetColorMenuContext::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_GetColorMenuContext, CallFunc_Create_ReturnValue) == 0x000008, "Member 'WBP_ColorPaletteEntry_C_GetColorMenuContext::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_GetColorMenuContext, CallFunc_ColorToLinearColorNoSRGB_ReturnValue) == 0x000010, "Member 'WBP_ColorPaletteEntry_C_GetColorMenuContext::CallFunc_ColorToLinearColorNoSRGB_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_GetColorMenuContext, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'WBP_ColorPaletteEntry_C_GetColorMenuContext::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WBP_ColorPaletteEntry.WBP_ColorPaletteEntry_C.HandleColorChange
// 0x0014 (0x0014 - 0x0000)
struct WBP_ColorPaletteEntry_C_HandleColorChange final
{
public:
	struct FLinearColor                           Color_0;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCommit;                                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPaletteEntry_C_HandleColorChange) == 0x000004, "Wrong alignment on WBP_ColorPaletteEntry_C_HandleColorChange");
static_assert(sizeof(WBP_ColorPaletteEntry_C_HandleColorChange) == 0x000014, "Wrong size on WBP_ColorPaletteEntry_C_HandleColorChange");
static_assert(offsetof(WBP_ColorPaletteEntry_C_HandleColorChange, Color_0) == 0x000000, "Member 'WBP_ColorPaletteEntry_C_HandleColorChange::Color_0' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_HandleColorChange, bCommit) == 0x000010, "Member 'WBP_ColorPaletteEntry_C_HandleColorChange::bCommit' has a wrong offset!");

// Function WBP_ColorPaletteEntry.WBP_ColorPaletteEntry_C.OnDragDetected
// 0x00E0 (0x00E0 - 0x0000)
struct WBP_ColorPaletteEntry_C_OnDragDetected final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UDragDropOperation*                     Operation;                                         // 0x00B0(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_ColorPaletteEntryVisual_C*         CallFunc_Create_ReturnValue;                       // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UDragDropOperation*                     CallFunc_CreateDragDropOperation_ReturnValue;      // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x00D0(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPaletteEntry_C_OnDragDetected) == 0x000008, "Wrong alignment on WBP_ColorPaletteEntry_C_OnDragDetected");
static_assert(sizeof(WBP_ColorPaletteEntry_C_OnDragDetected) == 0x0000E0, "Wrong size on WBP_ColorPaletteEntry_C_OnDragDetected");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnDragDetected, MyGeometry) == 0x000000, "Member 'WBP_ColorPaletteEntry_C_OnDragDetected::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnDragDetected, PointerEvent) == 0x000038, "Member 'WBP_ColorPaletteEntry_C_OnDragDetected::PointerEvent' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnDragDetected, Operation) == 0x0000B0, "Member 'WBP_ColorPaletteEntry_C_OnDragDetected::Operation' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnDragDetected, CallFunc_Create_ReturnValue) == 0x0000B8, "Member 'WBP_ColorPaletteEntry_C_OnDragDetected::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnDragDetected, CallFunc_CreateDragDropOperation_ReturnValue) == 0x0000C0, "Member 'WBP_ColorPaletteEntry_C_OnDragDetected::CallFunc_CreateDragDropOperation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnDragDetected, CallFunc_MakeLiteralByte_ReturnValue) == 0x0000C8, "Member 'WBP_ColorPaletteEntry_C_OnDragDetected::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnDragDetected, Temp_struct_Variable) == 0x0000D0, "Member 'WBP_ColorPaletteEntry_C_OnDragDetected::Temp_struct_Variable' has a wrong offset!");

// Function WBP_ColorPaletteEntry.WBP_ColorPaletteEntry_C.OnDragLeave
// 0x0090 (0x0090 - 0x0000)
struct WBP_ColorPaletteEntry_C_OnDragLeave final
{
public:
	struct FPointerEvent                          PointerEvent;                                      // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_ColorPaletteEntry_C*               K2Node_DynamicCast_AsWBP_Color_Palette_Entry;      // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPaletteEntry_C_OnDragLeave) == 0x000008, "Wrong alignment on WBP_ColorPaletteEntry_C_OnDragLeave");
static_assert(sizeof(WBP_ColorPaletteEntry_C_OnDragLeave) == 0x000090, "Wrong size on WBP_ColorPaletteEntry_C_OnDragLeave");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnDragLeave, PointerEvent) == 0x000000, "Member 'WBP_ColorPaletteEntry_C_OnDragLeave::PointerEvent' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnDragLeave, Operation) == 0x000078, "Member 'WBP_ColorPaletteEntry_C_OnDragLeave::Operation' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnDragLeave, K2Node_DynamicCast_AsWBP_Color_Palette_Entry) == 0x000080, "Member 'WBP_ColorPaletteEntry_C_OnDragLeave::K2Node_DynamicCast_AsWBP_Color_Palette_Entry' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnDragLeave, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'WBP_ColorPaletteEntry_C_OnDragLeave::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnDragLeave, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000089, "Member 'WBP_ColorPaletteEntry_C_OnDragLeave::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WBP_ColorPaletteEntry.WBP_ColorPaletteEntry_C.OnDragOver
// 0x00D8 (0x00D8 - 0x0000)
struct WBP_ColorPaletteEntry_C_OnDragOver final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x00B8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ColorPaletteEntry_C*               K2Node_DynamicCast_AsWBP_Color_Palette_Entry;      // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPaletteEntry_C_OnDragOver) == 0x000008, "Wrong alignment on WBP_ColorPaletteEntry_C_OnDragOver");
static_assert(sizeof(WBP_ColorPaletteEntry_C_OnDragOver) == 0x0000D8, "Wrong size on WBP_ColorPaletteEntry_C_OnDragOver");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnDragOver, MyGeometry) == 0x000000, "Member 'WBP_ColorPaletteEntry_C_OnDragOver::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnDragOver, PointerEvent) == 0x000038, "Member 'WBP_ColorPaletteEntry_C_OnDragOver::PointerEvent' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnDragOver, Operation) == 0x0000B0, "Member 'WBP_ColorPaletteEntry_C_OnDragOver::Operation' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnDragOver, ReturnValue) == 0x0000B8, "Member 'WBP_ColorPaletteEntry_C_OnDragOver::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnDragOver, K2Node_DynamicCast_AsWBP_Color_Palette_Entry) == 0x0000C0, "Member 'WBP_ColorPaletteEntry_C_OnDragOver::K2Node_DynamicCast_AsWBP_Color_Palette_Entry' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnDragOver, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'WBP_ColorPaletteEntry_C_OnDragOver::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnDragOver, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000CC, "Member 'WBP_ColorPaletteEntry_C_OnDragOver::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnDragOver, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000D0, "Member 'WBP_ColorPaletteEntry_C_OnDragOver::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnDragOver, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000D1, "Member 'WBP_ColorPaletteEntry_C_OnDragOver::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnDragOver, CallFunc_BooleanAND_ReturnValue) == 0x0000D2, "Member 'WBP_ColorPaletteEntry_C_OnDragOver::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_ColorPaletteEntry.WBP_ColorPaletteEntry_C.OnDrop
// 0x00D0 (0x00D0 - 0x0000)
struct WBP_ColorPaletteEntry_C_OnDrop final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x00B8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ColorPaletteEntry_C*               K2Node_DynamicCast_AsWBP_Color_Palette_Entry;      // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPaletteEntry_C_OnDrop) == 0x000008, "Wrong alignment on WBP_ColorPaletteEntry_C_OnDrop");
static_assert(sizeof(WBP_ColorPaletteEntry_C_OnDrop) == 0x0000D0, "Wrong size on WBP_ColorPaletteEntry_C_OnDrop");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnDrop, MyGeometry) == 0x000000, "Member 'WBP_ColorPaletteEntry_C_OnDrop::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnDrop, PointerEvent) == 0x000038, "Member 'WBP_ColorPaletteEntry_C_OnDrop::PointerEvent' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnDrop, Operation) == 0x0000B0, "Member 'WBP_ColorPaletteEntry_C_OnDrop::Operation' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnDrop, ReturnValue) == 0x0000B8, "Member 'WBP_ColorPaletteEntry_C_OnDrop::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnDrop, K2Node_DynamicCast_AsWBP_Color_Palette_Entry) == 0x0000C0, "Member 'WBP_ColorPaletteEntry_C_OnDrop::K2Node_DynamicCast_AsWBP_Color_Palette_Entry' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnDrop, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'WBP_ColorPaletteEntry_C_OnDrop::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_ColorPaletteEntry.WBP_ColorPaletteEntry_C.OnMouseButtonUp
// 0x02F8 (0x02F8 - 0x0000)
struct WBP_ColorPaletteEntry_C_OnMouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue; // 0x0168(0x0018)(HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0180(0x00B8)()
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0240(0x00B8)()
};
static_assert(alignof(WBP_ColorPaletteEntry_C_OnMouseButtonUp) == 0x000008, "Wrong alignment on WBP_ColorPaletteEntry_C_OnMouseButtonUp");
static_assert(sizeof(WBP_ColorPaletteEntry_C_OnMouseButtonUp) == 0x0002F8, "Wrong size on WBP_ColorPaletteEntry_C_OnMouseButtonUp");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnMouseButtonUp, MyGeometry) == 0x000000, "Member 'WBP_ColorPaletteEntry_C_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnMouseButtonUp, MouseEvent) == 0x000038, "Member 'WBP_ColorPaletteEntry_C_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnMouseButtonUp, ReturnValue) == 0x0000B0, "Member 'WBP_ColorPaletteEntry_C_OnMouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnMouseButtonUp, CallFunc_PointerEvent_GetEffectingButton_ReturnValue) == 0x000168, "Member 'WBP_ColorPaletteEntry_C_OnMouseButtonUp::CallFunc_PointerEvent_GetEffectingButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue) == 0x000180, "Member 'WBP_ColorPaletteEntry_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnMouseButtonUp, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000238, "Member 'WBP_ColorPaletteEntry_C_OnMouseButtonUp::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnMouseButtonUp, CallFunc_Unhandled_ReturnValue) == 0x000240, "Member 'WBP_ColorPaletteEntry_C_OnMouseButtonUp::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

// Function WBP_ColorPaletteEntry.WBP_ColorPaletteEntry_C.OnPreviewMouseButtonDown
// 0x0300 (0x0300 - 0x0000)
struct WBP_ColorPaletteEntry_C_OnPreviewMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_OnPreviewMouseButtonDown_ReturnValue;     // 0x0168(0x00B8)()
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue; // 0x0220(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_DetectDrag_ReturnValue;                   // 0x0240(0x00B8)()
	bool                                          CallFunc_IsOpen_ReturnValue;                       // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPaletteEntry_C_OnPreviewMouseButtonDown) == 0x000008, "Wrong alignment on WBP_ColorPaletteEntry_C_OnPreviewMouseButtonDown");
static_assert(sizeof(WBP_ColorPaletteEntry_C_OnPreviewMouseButtonDown) == 0x000300, "Wrong size on WBP_ColorPaletteEntry_C_OnPreviewMouseButtonDown");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnPreviewMouseButtonDown, MyGeometry) == 0x000000, "Member 'WBP_ColorPaletteEntry_C_OnPreviewMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnPreviewMouseButtonDown, MouseEvent) == 0x000038, "Member 'WBP_ColorPaletteEntry_C_OnPreviewMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnPreviewMouseButtonDown, ReturnValue) == 0x0000B0, "Member 'WBP_ColorPaletteEntry_C_OnPreviewMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnPreviewMouseButtonDown, CallFunc_OnPreviewMouseButtonDown_ReturnValue) == 0x000168, "Member 'WBP_ColorPaletteEntry_C_OnPreviewMouseButtonDown::CallFunc_OnPreviewMouseButtonDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnPreviewMouseButtonDown, CallFunc_PointerEvent_GetEffectingButton_ReturnValue) == 0x000220, "Member 'WBP_ColorPaletteEntry_C_OnPreviewMouseButtonDown::CallFunc_PointerEvent_GetEffectingButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnPreviewMouseButtonDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000238, "Member 'WBP_ColorPaletteEntry_C_OnPreviewMouseButtonDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnPreviewMouseButtonDown, CallFunc_DetectDrag_ReturnValue) == 0x000240, "Member 'WBP_ColorPaletteEntry_C_OnPreviewMouseButtonDown::CallFunc_DetectDrag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_OnPreviewMouseButtonDown, CallFunc_IsOpen_ReturnValue) == 0x0002F8, "Member 'WBP_ColorPaletteEntry_C_OnPreviewMouseButtonDown::CallFunc_IsOpen_ReturnValue' has a wrong offset!");

// Function WBP_ColorPaletteEntry.WBP_ColorPaletteEntry_C.PlayAddAnimation
// 0x0008 (0x0008 - 0x0000)
struct WBP_ColorPaletteEntry_C_PlayAddAnimation final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPaletteEntry_C_PlayAddAnimation) == 0x000008, "Wrong alignment on WBP_ColorPaletteEntry_C_PlayAddAnimation");
static_assert(sizeof(WBP_ColorPaletteEntry_C_PlayAddAnimation) == 0x000008, "Wrong size on WBP_ColorPaletteEntry_C_PlayAddAnimation");
static_assert(offsetof(WBP_ColorPaletteEntry_C_PlayAddAnimation, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_ColorPaletteEntry_C_PlayAddAnimation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_ColorPaletteEntry.WBP_ColorPaletteEntry_C.Remove
// 0x0010 (0x0010 - 0x0000)
struct WBP_ColorPaletteEntry_C_Remove final
{
public:
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPaletteEntry_C_Remove) == 0x000008, "Wrong alignment on WBP_ColorPaletteEntry_C_Remove");
static_assert(sizeof(WBP_ColorPaletteEntry_C_Remove) == 0x000010, "Wrong size on WBP_ColorPaletteEntry_C_Remove");
static_assert(offsetof(WBP_ColorPaletteEntry_C_Remove, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000000, "Member 'WBP_ColorPaletteEntry_C_Remove::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteEntry_C_Remove, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_ColorPaletteEntry_C_Remove::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

}

