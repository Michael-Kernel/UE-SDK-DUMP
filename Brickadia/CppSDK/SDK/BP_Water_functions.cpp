#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Water

#include "Basic.hpp"

#include "BP_Water_classes.hpp"
#include "BP_Water_parameters.hpp"


namespace SDK
{

// Function BP_Water.BP_Water_C.BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_Water_C::BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Water_C", "BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_Water_C_BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Water.BP_Water_C.BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Water_C::BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Water_C", "BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_Water_C_BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Water.BP_Water_C.ExecuteUbergraph_BP_Water
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Water_C::ExecuteUbergraph_BP_Water(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Water_C", "ExecuteUbergraph_BP_Water");

	Params::BP_Water_C_ExecuteUbergraph_BP_Water Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Water.BP_Water_C.OnRep_WaterAbsorption
// (BlueprintCallable, BlueprintEvent)

void ABP_Water_C::OnRep_WaterAbsorption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Water_C", "OnRep_WaterAbsorption");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Water.BP_Water_C.OnRep_WaterFogAmbientColor
// (BlueprintCallable, BlueprintEvent)

void ABP_Water_C::OnRep_WaterFogAmbientColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Water_C", "OnRep_WaterFogAmbientColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Water.BP_Water_C.OnRep_WaterFogAmbientScale
// (BlueprintCallable, BlueprintEvent)

void ABP_Water_C::OnRep_WaterFogAmbientScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Water_C", "OnRep_WaterFogAmbientScale");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Water.BP_Water_C.OnRep_WaterFogIntensity
// (BlueprintCallable, BlueprintEvent)

void ABP_Water_C::OnRep_WaterFogIntensity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Water_C", "OnRep_WaterFogIntensity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Water.BP_Water_C.OnRep_WaterFogScatteringColor
// (BlueprintCallable, BlueprintEvent)

void ABP_Water_C::OnRep_WaterFogScatteringColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Water_C", "OnRep_WaterFogScatteringColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Water.BP_Water_C.OnRep_WaterFogScatteringScale
// (BlueprintCallable, BlueprintEvent)

void ABP_Water_C::OnRep_WaterFogScatteringScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Water_C", "OnRep_WaterFogScatteringScale");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Water.BP_Water_C.OnRep_WaterHeight
// (BlueprintCallable, BlueprintEvent)

void ABP_Water_C::OnRep_WaterHeight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Water_C", "OnRep_WaterHeight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Water.BP_Water_C.OnRep_WaterScattering
// (BlueprintCallable, BlueprintEvent)

void ABP_Water_C::OnRep_WaterScattering()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Water_C", "OnRep_WaterScattering");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Water.BP_Water_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Water_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Water_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Water.BP_Water_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Water_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Water_C", "ReceiveTick");

	Params::BP_Water_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Water.BP_Water_C.SetWaterAbsorption
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Water_C::SetWaterAbsorption(const struct FVector& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Water_C", "SetWaterAbsorption");

	Params::BP_Water_C_SetWaterAbsorption Parms{};

	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Water.BP_Water_C.SetWaterFogAmbientColor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FLinearColor&              Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Water_C::SetWaterFogAmbientColor(const struct FLinearColor& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Water_C", "SetWaterFogAmbientColor");

	Params::BP_Water_C_SetWaterFogAmbientColor Parms{};

	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Water.BP_Water_C.SetWaterFogAmbientScale
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Water_C::SetWaterFogAmbientScale(double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Water_C", "SetWaterFogAmbientScale");

	Params::BP_Water_C_SetWaterFogAmbientScale Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Water.BP_Water_C.SetWaterFogIntensity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Water_C::SetWaterFogIntensity(double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Water_C", "SetWaterFogIntensity");

	Params::BP_Water_C_SetWaterFogIntensity Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Water.BP_Water_C.SetWaterFogScatteringColor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FLinearColor&              Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Water_C::SetWaterFogScatteringColor(const struct FLinearColor& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Water_C", "SetWaterFogScatteringColor");

	Params::BP_Water_C_SetWaterFogScatteringColor Parms{};

	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Water.BP_Water_C.SetWaterFogScatteringScale
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Water_C::SetWaterFogScatteringScale(double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Water_C", "SetWaterFogScatteringScale");

	Params::BP_Water_C_SetWaterFogScatteringScale Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Water.BP_Water_C.SetWaterHeight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Water_C::SetWaterHeight(double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Water_C", "SetWaterHeight");

	Params::BP_Water_C_SetWaterHeight Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Water.BP_Water_C.SetWaterScattering
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Water_C::SetWaterScattering(const struct FVector& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Water_C", "SetWaterScattering");

	Params::BP_Water_C_SetWaterScattering Parms{};

	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Water.BP_Water_C.SpawnWaterSplash
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Water_C::SpawnWaterSplash(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Water_C", "SpawnWaterSplash");

	Params::BP_Water_C_SpawnWaterSplash Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Water.BP_Water_C.UpdateWaterLevel
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Water_C::UpdateWaterLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Water_C", "UpdateWaterLevel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Water.BP_Water_C.UpdateWaterMaterials
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Water_C::UpdateWaterMaterials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Water_C", "UpdateWaterMaterials");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Water.BP_Water_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Water_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Water_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

