#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Property_Float

#include "Basic.hpp"

#include "Brickadia_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_Property_Float.WBP_Property_Float_C.BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Property_Float_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   CommitMethod;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Property_Float_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_Property_Float_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(sizeof(WBP_Property_Float_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000008, "Wrong size on WBP_Property_Float_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(offsetof(WBP_Property_Float_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_Property_Float_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature::InValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature, CommitMethod) == 0x000004, "Member 'WBP_Property_Float_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WBP_Property_Float.WBP_Property_Float_C.BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_Property_Float_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Property_Float_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_Property_Float_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_Property_Float_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on WBP_Property_Float_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_Property_Float_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_Property_Float_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature::InValue' has a wrong offset!");

// Function WBP_Property_Float.WBP_Property_Float_C.BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_3_OnSpinBoxValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_Property_Float_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_3_OnSpinBoxValueChangedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Property_Float_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_3_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_Property_Float_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_3_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_Property_Float_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_3_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on WBP_Property_Float_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_3_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_Property_Float_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_3_OnSpinBoxValueChangedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_Property_Float_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_3_OnSpinBoxValueChangedEvent__DelegateSignature::InValue' has a wrong offset!");

// Function WBP_Property_Float.WBP_Property_Float_C.ExecuteUbergraph_WBP_Property_Float
// 0x00F8 (0x00F8 - 0x0000)
struct WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInspectorPropertyValue                K2Node_Event_ValueIn;                              // 0x0008(0x0018)(ConstParm, ZeroConstructor)
	class UInspectorPropertyDescriptor*           CallFunc_GetDescriptor_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UnboxPropertyValue_Float_bIsValid;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_UnboxPropertyValue_Float_Unboxed;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInspectorPropertyDescriptor_Float*     K2Node_DynamicCast_AsInspector_Property_Descriptor_Float; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInspectorPropertyDescriptor*           K2Node_Event_NewDescriptor;                        // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInspectorViewTarget                   K2Node_Event_NewViewTarget;                        // 0x0048(0x0030)(ConstParm, NoDestructor)
	class UInspectorPropertyDescriptor_Float*     K2Node_DynamicCast_AsInspector_Property_Descriptor_Float_1; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_InValue_1;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInspectorPropertyValue                CallFunc_BoxPropertyValue_Float_ReturnValue;       // 0x0098(0x0018)(ZeroConstructor)
	bool                                          K2Node_Event_Enabled;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_InValue_2;              // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInspectorPropertyValue                CallFunc_BoxPropertyValue_Float_ReturnValue_1;     // 0x00C0(0x0018)(ZeroConstructor)
	float                                         K2Node_ComponentBoundEvent_InValue;                // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UnboxPropertyValue_Float_bIsValid_1;      // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_UnboxPropertyValue_Float_Unboxed_1;       // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetDelta_NewValue_ImplicitCast;           // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float) == 0x000008, "Wrong alignment on WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float");
static_assert(sizeof(WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float) == 0x0000F8, "Wrong size on WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float");
static_assert(offsetof(WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float, EntryPoint) == 0x000000, "Member 'WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float, K2Node_Event_ValueIn) == 0x000008, "Member 'WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float::K2Node_Event_ValueIn' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float, CallFunc_GetDescriptor_ReturnValue) == 0x000020, "Member 'WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float::CallFunc_GetDescriptor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float, CallFunc_UnboxPropertyValue_Float_bIsValid) == 0x000028, "Member 'WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float::CallFunc_UnboxPropertyValue_Float_bIsValid' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float, CallFunc_UnboxPropertyValue_Float_Unboxed) == 0x00002C, "Member 'WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float::CallFunc_UnboxPropertyValue_Float_Unboxed' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float, K2Node_DynamicCast_AsInspector_Property_Descriptor_Float) == 0x000030, "Member 'WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float::K2Node_DynamicCast_AsInspector_Property_Descriptor_Float' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float, K2Node_Event_NewDescriptor) == 0x000040, "Member 'WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float::K2Node_Event_NewDescriptor' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float, K2Node_Event_NewViewTarget) == 0x000048, "Member 'WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float::K2Node_Event_NewViewTarget' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float, K2Node_DynamicCast_AsInspector_Property_Descriptor_Float_1) == 0x000078, "Member 'WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float::K2Node_DynamicCast_AsInspector_Property_Descriptor_Float_1' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float, CallFunc_SelectFloat_ReturnValue) == 0x000088, "Member 'WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float, K2Node_ComponentBoundEvent_InValue_1) == 0x000090, "Member 'WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float::K2Node_ComponentBoundEvent_InValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float, CallFunc_BoxPropertyValue_Float_ReturnValue) == 0x000098, "Member 'WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float::CallFunc_BoxPropertyValue_Float_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float, K2Node_Event_Enabled) == 0x0000B0, "Member 'WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float::K2Node_Event_Enabled' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float, K2Node_ComponentBoundEvent_InValue_2) == 0x0000B4, "Member 'WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float::K2Node_ComponentBoundEvent_InValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float, K2Node_ComponentBoundEvent_CommitMethod) == 0x0000B8, "Member 'WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000B9, "Member 'WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float, CallFunc_BoxPropertyValue_Float_ReturnValue_1) == 0x0000C0, "Member 'WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float::CallFunc_BoxPropertyValue_Float_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float, K2Node_ComponentBoundEvent_InValue) == 0x0000D8, "Member 'WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float::K2Node_ComponentBoundEvent_InValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float, CallFunc_UnboxPropertyValue_Float_bIsValid_1) == 0x0000DC, "Member 'WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float::CallFunc_UnboxPropertyValue_Float_bIsValid_1' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float, CallFunc_UnboxPropertyValue_Float_Unboxed_1) == 0x0000E0, "Member 'WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float::CallFunc_UnboxPropertyValue_Float_Unboxed_1' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float, CallFunc_SelectFloat_A_ImplicitCast) == 0x0000E8, "Member 'WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float, CallFunc_SetDelta_NewValue_ImplicitCast) == 0x0000F0, "Member 'WBP_Property_Float_C_ExecuteUbergraph_WBP_Property_Float::CallFunc_SetDelta_NewValue_ImplicitCast' has a wrong offset!");

// Function WBP_Property_Float.WBP_Property_Float_C.OnAvailabilityChange
// 0x0001 (0x0001 - 0x0000)
struct WBP_Property_Float_C_OnAvailabilityChange final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Property_Float_C_OnAvailabilityChange) == 0x000001, "Wrong alignment on WBP_Property_Float_C_OnAvailabilityChange");
static_assert(sizeof(WBP_Property_Float_C_OnAvailabilityChange) == 0x000001, "Wrong size on WBP_Property_Float_C_OnAvailabilityChange");
static_assert(offsetof(WBP_Property_Float_C_OnAvailabilityChange, Enabled) == 0x000000, "Member 'WBP_Property_Float_C_OnAvailabilityChange::Enabled' has a wrong offset!");

// Function WBP_Property_Float.WBP_Property_Float_C.OnInit
// 0x0038 (0x0038 - 0x0000)
struct WBP_Property_Float_C_OnInit final
{
public:
	class UInspectorPropertyDescriptor*           NewDescriptor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInspectorViewTarget                   NewViewTarget;                                     // 0x0008(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(WBP_Property_Float_C_OnInit) == 0x000008, "Wrong alignment on WBP_Property_Float_C_OnInit");
static_assert(sizeof(WBP_Property_Float_C_OnInit) == 0x000038, "Wrong size on WBP_Property_Float_C_OnInit");
static_assert(offsetof(WBP_Property_Float_C_OnInit, NewDescriptor) == 0x000000, "Member 'WBP_Property_Float_C_OnInit::NewDescriptor' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_C_OnInit, NewViewTarget) == 0x000008, "Member 'WBP_Property_Float_C_OnInit::NewViewTarget' has a wrong offset!");

// Function WBP_Property_Float.WBP_Property_Float_C.OnValueChangedExternally
// 0x0018 (0x0018 - 0x0000)
struct WBP_Property_Float_C_OnValueChangedExternally final
{
public:
	struct FInspectorPropertyValue                ValueIn;                                           // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(WBP_Property_Float_C_OnValueChangedExternally) == 0x000008, "Wrong alignment on WBP_Property_Float_C_OnValueChangedExternally");
static_assert(sizeof(WBP_Property_Float_C_OnValueChangedExternally) == 0x000018, "Wrong size on WBP_Property_Float_C_OnValueChangedExternally");
static_assert(offsetof(WBP_Property_Float_C_OnValueChangedExternally, ValueIn) == 0x000000, "Member 'WBP_Property_Float_C_OnValueChangedExternally::ValueIn' has a wrong offset!");

}

