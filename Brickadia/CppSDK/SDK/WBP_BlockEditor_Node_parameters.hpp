#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_BlockEditor_Node

#include "Basic.hpp"

#include "Brickadia_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_BlockEditor_Node.WBP_BlockEditor_Node_C.ExecuteUbergraph_WBP_BlockEditor_Node
// 0x0108 (0x0108 - 0x0000)
struct WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USizeBoxSlot*                           K2Node_DynamicCast_AsSize_Box_Slot;                // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBHResolvedTypeInfo                    K2Node_Event_Type;                                 // 0x0040(0x0038)(ConstParm)
	bool                                          K2Node_Event_bHasLastType;                         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBHResolvedTypeInfo                    K2Node_Event_LastType;                             // 0x0080(0x0038)(ConstParm)
	struct FVector2D                              K2Node_Select_Default;                             // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_None;                            // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default_1;                           // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Left_ImplicitCast;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Right_ImplicitCast;              // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node) == 0x000008, "Wrong alignment on WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node");
static_assert(sizeof(WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node) == 0x000108, "Wrong size on WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node");
static_assert(offsetof(WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node, EntryPoint) == 0x000000, "Member 'WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node, Temp_object_Variable) == 0x000008, "Member 'WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node, K2Node_DynamicCast_AsSize_Box_Slot) == 0x000010, "Member 'WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node::K2Node_DynamicCast_AsSize_Box_Slot' has a wrong offset!");
static_assert(offsetof(WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node, Temp_bool_Variable) == 0x000019, "Member 'WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node, Temp_struct_Variable) == 0x000020, "Member 'WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node, Temp_struct_Variable_1) == 0x000030, "Member 'WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node, K2Node_Event_Type) == 0x000040, "Member 'WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node::K2Node_Event_Type' has a wrong offset!");
static_assert(offsetof(WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node, K2Node_Event_bHasLastType) == 0x000078, "Member 'WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node::K2Node_Event_bHasLastType' has a wrong offset!");
static_assert(offsetof(WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node, K2Node_Event_LastType) == 0x000080, "Member 'WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node::K2Node_Event_LastType' has a wrong offset!");
static_assert(offsetof(WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node, K2Node_Select_Default) == 0x0000B8, "Member 'WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node, CallFunc_SelectFloat_ReturnValue) == 0x0000C8, "Member 'WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node, K2Node_MakeStruct_None) == 0x0000D0, "Member 'WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node::K2Node_MakeStruct_None' has a wrong offset!");
static_assert(offsetof(WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node, Temp_object_Variable_1) == 0x0000E0, "Member 'WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node, Temp_bool_Variable_1) == 0x0000E8, "Member 'WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node, K2Node_Select_Default_1) == 0x0000F0, "Member 'WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node, Temp_byte_Variable) == 0x0000F8, "Member 'WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node, Temp_byte_Variable_1) == 0x0000F9, "Member 'WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node, Temp_bool_Variable_2) == 0x0000FA, "Member 'WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node, K2Node_Select_Default_2) == 0x0000FB, "Member 'WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node, K2Node_MakeStruct_Left_ImplicitCast) == 0x0000FC, "Member 'WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node::K2Node_MakeStruct_Left_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node, K2Node_MakeStruct_Right_ImplicitCast) == 0x000100, "Member 'WBP_BlockEditor_Node_C_ExecuteUbergraph_WBP_BlockEditor_Node::K2Node_MakeStruct_Right_ImplicitCast' has a wrong offset!");

// Function WBP_BlockEditor_Node.WBP_BlockEditor_Node_C.HandleNodeChainVisual
// 0x0078 (0x0078 - 0x0000)
struct WBP_BlockEditor_Node_C_HandleNodeChainVisual final
{
public:
	struct FBHResolvedTypeInfo                    Type;                                              // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bHasLastType;                                      // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBHResolvedTypeInfo                    LastType;                                          // 0x0040(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_BlockEditor_Node_C_HandleNodeChainVisual) == 0x000008, "Wrong alignment on WBP_BlockEditor_Node_C_HandleNodeChainVisual");
static_assert(sizeof(WBP_BlockEditor_Node_C_HandleNodeChainVisual) == 0x000078, "Wrong size on WBP_BlockEditor_Node_C_HandleNodeChainVisual");
static_assert(offsetof(WBP_BlockEditor_Node_C_HandleNodeChainVisual, Type) == 0x000000, "Member 'WBP_BlockEditor_Node_C_HandleNodeChainVisual::Type' has a wrong offset!");
static_assert(offsetof(WBP_BlockEditor_Node_C_HandleNodeChainVisual, bHasLastType) == 0x000038, "Member 'WBP_BlockEditor_Node_C_HandleNodeChainVisual::bHasLastType' has a wrong offset!");
static_assert(offsetof(WBP_BlockEditor_Node_C_HandleNodeChainVisual, LastType) == 0x000040, "Member 'WBP_BlockEditor_Node_C_HandleNodeChainVisual::LastType' has a wrong offset!");

}

