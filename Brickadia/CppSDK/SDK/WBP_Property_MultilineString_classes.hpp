#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Property_MultilineString

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Brickadia_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Property_MultilineString.WBP_Property_MultilineString_C
// 0x0020 (0x03A0 - 0x0380)
class UWBP_Property_MultilineString_C final : public UInspectorPropertyWidgetBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0380(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWS_MultiLineTextBox_LessEmphasis_C*    MultiLineValueInputBox;                            // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               TextBoxBox;                                        // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWS_TextBox_LessEmphasis_C*             ValueInputBox;                                     // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void BndEvt__MultiLineValueInputBox_K2Node_ComponentBoundEvent_2_OnMultiLineEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_3_OnEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void ExecuteUbergraph_WBP_Property_MultilineString(int32 EntryPoint);
	void HandleTextComitted(const class FText& Text);
	void OnAvailabilityChange(bool Enabled);
	void OnInit(class UInspectorPropertyDescriptor* NewDescriptor, const struct FInspectorViewTarget& NewViewTarget);
	void OnValueChangedExternally(const struct FInspectorPropertyValue& ValueIn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Property_MultilineString_C">();
	}
	static class UWBP_Property_MultilineString_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Property_MultilineString_C>();
	}
};
static_assert(alignof(UWBP_Property_MultilineString_C) == 0x000008, "Wrong alignment on UWBP_Property_MultilineString_C");
static_assert(sizeof(UWBP_Property_MultilineString_C) == 0x0003A0, "Wrong size on UWBP_Property_MultilineString_C");
static_assert(offsetof(UWBP_Property_MultilineString_C, UberGraphFrame) == 0x000380, "Member 'UWBP_Property_MultilineString_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Property_MultilineString_C, MultiLineValueInputBox) == 0x000388, "Member 'UWBP_Property_MultilineString_C::MultiLineValueInputBox' has a wrong offset!");
static_assert(offsetof(UWBP_Property_MultilineString_C, TextBoxBox) == 0x000390, "Member 'UWBP_Property_MultilineString_C::TextBoxBox' has a wrong offset!");
static_assert(offsetof(UWBP_Property_MultilineString_C, ValueInputBox) == 0x000398, "Member 'UWBP_Property_MultilineString_C::ValueInputBox' has a wrong offset!");

}

