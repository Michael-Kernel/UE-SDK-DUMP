#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Property_Float_FPS

#include "Basic.hpp"

#include "Brickadia_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_Property_Float_FPS.WBP_Property_Float_FPS_C.BndEvt__ValueBox_K2Node_ComponentBoundEvent_2_OnSelectionChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WBP_Property_Float_FPS_C_BndEvt__ValueBox_K2Node_ComponentBoundEvent_2_OnSelectionChangedEvent__DelegateSignature final
{
public:
	class FString                                 SelectedItem;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Property_Float_FPS_C_BndEvt__ValueBox_K2Node_ComponentBoundEvent_2_OnSelectionChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Property_Float_FPS_C_BndEvt__ValueBox_K2Node_ComponentBoundEvent_2_OnSelectionChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_Property_Float_FPS_C_BndEvt__ValueBox_K2Node_ComponentBoundEvent_2_OnSelectionChangedEvent__DelegateSignature) == 0x000018, "Wrong size on WBP_Property_Float_FPS_C_BndEvt__ValueBox_K2Node_ComponentBoundEvent_2_OnSelectionChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_Property_Float_FPS_C_BndEvt__ValueBox_K2Node_ComponentBoundEvent_2_OnSelectionChangedEvent__DelegateSignature, SelectedItem) == 0x000000, "Member 'WBP_Property_Float_FPS_C_BndEvt__ValueBox_K2Node_ComponentBoundEvent_2_OnSelectionChangedEvent__DelegateSignature::SelectedItem' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_BndEvt__ValueBox_K2Node_ComponentBoundEvent_2_OnSelectionChangedEvent__DelegateSignature, SelectionType) == 0x000010, "Member 'WBP_Property_Float_FPS_C_BndEvt__ValueBox_K2Node_ComponentBoundEvent_2_OnSelectionChangedEvent__DelegateSignature::SelectionType' has a wrong offset!");

// Function WBP_Property_Float_FPS.WBP_Property_Float_FPS_C.ExecuteUbergraph_WBP_Property_Float_FPS
// 0x01D8 (0x01D8 - 0x0000)
struct WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInspectorPropertyValue                K2Node_Event_ValueIn;                              // 0x0018(0x0018)(ConstParm, ZeroConstructor)
	class FString                                 K2Node_ComponentBoundEvent_SelectedItem;           // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   K2Node_ComponentBoundEvent_SelectionType;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UnboxPropertyValue_Float_bIsValid;        // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_UnboxPropertyValue_Float_Unboxed;         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSelectedIndex_ReturnValue;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Enabled;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInspectorPropertyDescriptor*           K2Node_Event_NewDescriptor;                        // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInspectorViewTarget                   K2Node_Event_NewViewTarget;                        // 0x0060(0x0030)(ConstParm, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x00A0(0x0010)()
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_None;                            // 0x00B8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0100(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0110(0x0010)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item_1;                         // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_2;                         // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInspectorPropertyValue                CallFunc_BoxPropertyValue_Float_ReturnValue;       // 0x0158(0x0018)(ZeroConstructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x017D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17E[0x2];                                      // 0x017E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInspectorPropertyValue                CallFunc_BoxPropertyValue_Float_ReturnValue_1;     // 0x0180(0x0018)(ZeroConstructor)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0198(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NearlyEqual_FloatFloat_B_ImplicitCast;    // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BoxPropertyValue_Float_InValue_ImplicitCast; // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS) == 0x000008, "Wrong alignment on WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS");
static_assert(sizeof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS) == 0x0001D8, "Wrong size on WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, EntryPoint) == 0x000000, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, Temp_bool_True_if_break_was_hit_Variable) == 0x00000C, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, K2Node_Event_ValueIn) == 0x000018, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::K2Node_Event_ValueIn' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, K2Node_ComponentBoundEvent_SelectedItem) == 0x000030, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::K2Node_ComponentBoundEvent_SelectedItem' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, K2Node_ComponentBoundEvent_SelectionType) == 0x000040, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::K2Node_ComponentBoundEvent_SelectionType' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, CallFunc_UnboxPropertyValue_Float_bIsValid) == 0x000041, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::CallFunc_UnboxPropertyValue_Float_bIsValid' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, CallFunc_UnboxPropertyValue_Float_Unboxed) == 0x000044, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::CallFunc_UnboxPropertyValue_Float_Unboxed' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000048, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000049, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, CallFunc_GetSelectedIndex_ReturnValue) == 0x00004C, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::CallFunc_GetSelectedIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, K2Node_Event_Enabled) == 0x000050, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::K2Node_Event_Enabled' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, Temp_int_Array_Index_Variable_1) == 0x000054, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, K2Node_Event_NewDescriptor) == 0x000058, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::K2Node_Event_NewDescriptor' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, K2Node_Event_NewViewTarget) == 0x000060, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::K2Node_Event_NewViewTarget' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, Temp_int_Loop_Counter_Variable_1) == 0x000090, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, CallFunc_Array_Get_Item) == 0x000098, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, CallFunc_Conv_DoubleToText_ReturnValue) == 0x0000A0, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B0, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, K2Node_MakeStruct_None) == 0x0000B8, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::K2Node_MakeStruct_None' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, K2Node_MakeArray_Array) == 0x000100, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, CallFunc_Format_ReturnValue) == 0x000110, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, CallFunc_Conv_TextToString_ReturnValue) == 0x000128, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, CallFunc_Less_IntInt_ReturnValue) == 0x000138, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, CallFunc_Array_Get_Item_1) == 0x000140, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, CallFunc_Array_Get_Item_2) == 0x000148, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000150, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, CallFunc_BoxPropertyValue_Float_ReturnValue) == 0x000158, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::CallFunc_BoxPropertyValue_Float_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, CallFunc_Array_Length_ReturnValue_1) == 0x000170, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, CallFunc_Less_IntInt_ReturnValue_1) == 0x000174, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, CallFunc_Array_Length_ReturnValue_2) == 0x000178, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, CallFunc_BooleanAND_ReturnValue) == 0x00017C, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00017D, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, CallFunc_BoxPropertyValue_Float_ReturnValue_1) == 0x000180, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::CallFunc_BoxPropertyValue_Float_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, CallFunc_MakeLiteralText_ReturnValue) == 0x000198, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0001A8, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, CallFunc_Array_Length_ReturnValue_3) == 0x0001B8, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, CallFunc_NearlyEqual_FloatFloat_B_ImplicitCast) == 0x0001C0, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::CallFunc_NearlyEqual_FloatFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x0001C8, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS, CallFunc_BoxPropertyValue_Float_InValue_ImplicitCast) == 0x0001D0, "Member 'WBP_Property_Float_FPS_C_ExecuteUbergraph_WBP_Property_Float_FPS::CallFunc_BoxPropertyValue_Float_InValue_ImplicitCast' has a wrong offset!");

// Function WBP_Property_Float_FPS.WBP_Property_Float_FPS_C.OnAvailabilityChange
// 0x0001 (0x0001 - 0x0000)
struct WBP_Property_Float_FPS_C_OnAvailabilityChange final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Property_Float_FPS_C_OnAvailabilityChange) == 0x000001, "Wrong alignment on WBP_Property_Float_FPS_C_OnAvailabilityChange");
static_assert(sizeof(WBP_Property_Float_FPS_C_OnAvailabilityChange) == 0x000001, "Wrong size on WBP_Property_Float_FPS_C_OnAvailabilityChange");
static_assert(offsetof(WBP_Property_Float_FPS_C_OnAvailabilityChange, Enabled) == 0x000000, "Member 'WBP_Property_Float_FPS_C_OnAvailabilityChange::Enabled' has a wrong offset!");

// Function WBP_Property_Float_FPS.WBP_Property_Float_FPS_C.OnInit
// 0x0038 (0x0038 - 0x0000)
struct WBP_Property_Float_FPS_C_OnInit final
{
public:
	class UInspectorPropertyDescriptor*           NewDescriptor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInspectorViewTarget                   NewViewTarget;                                     // 0x0008(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(WBP_Property_Float_FPS_C_OnInit) == 0x000008, "Wrong alignment on WBP_Property_Float_FPS_C_OnInit");
static_assert(sizeof(WBP_Property_Float_FPS_C_OnInit) == 0x000038, "Wrong size on WBP_Property_Float_FPS_C_OnInit");
static_assert(offsetof(WBP_Property_Float_FPS_C_OnInit, NewDescriptor) == 0x000000, "Member 'WBP_Property_Float_FPS_C_OnInit::NewDescriptor' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FPS_C_OnInit, NewViewTarget) == 0x000008, "Member 'WBP_Property_Float_FPS_C_OnInit::NewViewTarget' has a wrong offset!");

// Function WBP_Property_Float_FPS.WBP_Property_Float_FPS_C.OnValueChangedExternally
// 0x0018 (0x0018 - 0x0000)
struct WBP_Property_Float_FPS_C_OnValueChangedExternally final
{
public:
	struct FInspectorPropertyValue                ValueIn;                                           // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(WBP_Property_Float_FPS_C_OnValueChangedExternally) == 0x000008, "Wrong alignment on WBP_Property_Float_FPS_C_OnValueChangedExternally");
static_assert(sizeof(WBP_Property_Float_FPS_C_OnValueChangedExternally) == 0x000018, "Wrong size on WBP_Property_Float_FPS_C_OnValueChangedExternally");
static_assert(offsetof(WBP_Property_Float_FPS_C_OnValueChangedExternally, ValueIn) == 0x000000, "Member 'WBP_Property_Float_FPS_C_OnValueChangedExternally::ValueIn' has a wrong offset!");

}

