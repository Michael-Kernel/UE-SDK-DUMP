#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ColorPaletteEntry

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ColorPaletteEntry.WBP_ColorPaletteEntry_C
// 0x0080 (0x0350 - 0x02D0)
class UWBP_ColorPaletteEntry_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       RemoveColor;                                       // 0x02D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AddColor;                                          // 0x02E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                ColorBackground;                                   // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWS_Button_Main_C*                      ColorBorderButton;                                 // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMenuAnchor*                            ColorPickerAnchor;                                 // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DragPositioningIndicator;                          // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FColor                                 Color;                                             // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         ColorIndex;                                        // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UWBP_ColorPaletteColumn_C*              GroupWidget;                                       // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(const struct FColor& Color, int32 Index)> OnColorChange;                                     // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UWBP_LinearColorPickerMenu_C*           OpenedColorPicker;                                 // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(int32 FromGroup, int32 ToGroup, int32 FromColorIndex, int32 ToColorIndex)> OnColorDragDrop;                                   // 0x0330(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(int32 Index)>   OnRemove;                                          // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BndEvt__ColorBorderButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void Construct();
	void ExecuteUbergraph_WBP_ColorPaletteEntry(int32 EntryPoint);
	class UUserWidget* GetColorMenuContext();
	void HandleColorChange(const struct FLinearColor& Color_0, bool bCommit);
	void On_Remove_Animation_Complete();
	void OnDragDetected(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation** Operation);
	void OnDragLeave(const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	bool OnDragOver(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	bool OnDrop(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	struct FEventReply OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnPreviewMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void PlayAddAnimation();
	void Remove();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ColorPaletteEntry_C">();
	}
	static class UWBP_ColorPaletteEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ColorPaletteEntry_C>();
	}
};
static_assert(alignof(UWBP_ColorPaletteEntry_C) == 0x000008, "Wrong alignment on UWBP_ColorPaletteEntry_C");
static_assert(sizeof(UWBP_ColorPaletteEntry_C) == 0x000350, "Wrong size on UWBP_ColorPaletteEntry_C");
static_assert(offsetof(UWBP_ColorPaletteEntry_C, UberGraphFrame) == 0x0002D0, "Member 'UWBP_ColorPaletteEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ColorPaletteEntry_C, RemoveColor) == 0x0002D8, "Member 'UWBP_ColorPaletteEntry_C::RemoveColor' has a wrong offset!");
static_assert(offsetof(UWBP_ColorPaletteEntry_C, AddColor) == 0x0002E0, "Member 'UWBP_ColorPaletteEntry_C::AddColor' has a wrong offset!");
static_assert(offsetof(UWBP_ColorPaletteEntry_C, ColorBackground) == 0x0002E8, "Member 'UWBP_ColorPaletteEntry_C::ColorBackground' has a wrong offset!");
static_assert(offsetof(UWBP_ColorPaletteEntry_C, ColorBorderButton) == 0x0002F0, "Member 'UWBP_ColorPaletteEntry_C::ColorBorderButton' has a wrong offset!");
static_assert(offsetof(UWBP_ColorPaletteEntry_C, ColorPickerAnchor) == 0x0002F8, "Member 'UWBP_ColorPaletteEntry_C::ColorPickerAnchor' has a wrong offset!");
static_assert(offsetof(UWBP_ColorPaletteEntry_C, DragPositioningIndicator) == 0x000300, "Member 'UWBP_ColorPaletteEntry_C::DragPositioningIndicator' has a wrong offset!");
static_assert(offsetof(UWBP_ColorPaletteEntry_C, Color) == 0x000308, "Member 'UWBP_ColorPaletteEntry_C::Color' has a wrong offset!");
static_assert(offsetof(UWBP_ColorPaletteEntry_C, ColorIndex) == 0x00030C, "Member 'UWBP_ColorPaletteEntry_C::ColorIndex' has a wrong offset!");
static_assert(offsetof(UWBP_ColorPaletteEntry_C, GroupWidget) == 0x000310, "Member 'UWBP_ColorPaletteEntry_C::GroupWidget' has a wrong offset!");
static_assert(offsetof(UWBP_ColorPaletteEntry_C, OnColorChange) == 0x000318, "Member 'UWBP_ColorPaletteEntry_C::OnColorChange' has a wrong offset!");
static_assert(offsetof(UWBP_ColorPaletteEntry_C, OpenedColorPicker) == 0x000328, "Member 'UWBP_ColorPaletteEntry_C::OpenedColorPicker' has a wrong offset!");
static_assert(offsetof(UWBP_ColorPaletteEntry_C, OnColorDragDrop) == 0x000330, "Member 'UWBP_ColorPaletteEntry_C::OnColorDragDrop' has a wrong offset!");
static_assert(offsetof(UWBP_ColorPaletteEntry_C, OnRemove) == 0x000340, "Member 'UWBP_ColorPaletteEntry_C::OnRemove' has a wrong offset!");

}

