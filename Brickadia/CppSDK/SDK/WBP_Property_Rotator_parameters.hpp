#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Property_Rotator

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Brickadia_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_Property_Rotator.WBP_Property_Rotator_C.BndEvt__XInputBox_K2Node_ComponentBoundEvent_10_OnSpinBoxValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_Property_Rotator_C_BndEvt__XInputBox_K2Node_ComponentBoundEvent_10_OnSpinBoxValueChangedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Property_Rotator_C_BndEvt__XInputBox_K2Node_ComponentBoundEvent_10_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_Property_Rotator_C_BndEvt__XInputBox_K2Node_ComponentBoundEvent_10_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_Property_Rotator_C_BndEvt__XInputBox_K2Node_ComponentBoundEvent_10_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on WBP_Property_Rotator_C_BndEvt__XInputBox_K2Node_ComponentBoundEvent_10_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_Property_Rotator_C_BndEvt__XInputBox_K2Node_ComponentBoundEvent_10_OnSpinBoxValueChangedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_Property_Rotator_C_BndEvt__XInputBox_K2Node_ComponentBoundEvent_10_OnSpinBoxValueChangedEvent__DelegateSignature::InValue' has a wrong offset!");

// Function WBP_Property_Rotator.WBP_Property_Rotator_C.BndEvt__XInputBox_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_Property_Rotator_C_BndEvt__XInputBox_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Property_Rotator_C_BndEvt__XInputBox_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_Property_Rotator_C_BndEvt__XInputBox_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_Property_Rotator_C_BndEvt__XInputBox_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on WBP_Property_Rotator_C_BndEvt__XInputBox_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_Property_Rotator_C_BndEvt__XInputBox_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_Property_Rotator_C_BndEvt__XInputBox_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature::InValue' has a wrong offset!");

// Function WBP_Property_Rotator.WBP_Property_Rotator_C.BndEvt__XInputBox_K2Node_ComponentBoundEvent_7_OnSpinBoxValueCommittedEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Property_Rotator_C_BndEvt__XInputBox_K2Node_ComponentBoundEvent_7_OnSpinBoxValueCommittedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   CommitMethod;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Property_Rotator_C_BndEvt__XInputBox_K2Node_ComponentBoundEvent_7_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_Property_Rotator_C_BndEvt__XInputBox_K2Node_ComponentBoundEvent_7_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(sizeof(WBP_Property_Rotator_C_BndEvt__XInputBox_K2Node_ComponentBoundEvent_7_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000008, "Wrong size on WBP_Property_Rotator_C_BndEvt__XInputBox_K2Node_ComponentBoundEvent_7_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(offsetof(WBP_Property_Rotator_C_BndEvt__XInputBox_K2Node_ComponentBoundEvent_7_OnSpinBoxValueCommittedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_Property_Rotator_C_BndEvt__XInputBox_K2Node_ComponentBoundEvent_7_OnSpinBoxValueCommittedEvent__DelegateSignature::InValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_BndEvt__XInputBox_K2Node_ComponentBoundEvent_7_OnSpinBoxValueCommittedEvent__DelegateSignature, CommitMethod) == 0x000004, "Member 'WBP_Property_Rotator_C_BndEvt__XInputBox_K2Node_ComponentBoundEvent_7_OnSpinBoxValueCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WBP_Property_Rotator.WBP_Property_Rotator_C.BndEvt__YInputBox_K2Node_ComponentBoundEvent_11_OnSpinBoxValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_Property_Rotator_C_BndEvt__YInputBox_K2Node_ComponentBoundEvent_11_OnSpinBoxValueChangedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Property_Rotator_C_BndEvt__YInputBox_K2Node_ComponentBoundEvent_11_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_Property_Rotator_C_BndEvt__YInputBox_K2Node_ComponentBoundEvent_11_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_Property_Rotator_C_BndEvt__YInputBox_K2Node_ComponentBoundEvent_11_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on WBP_Property_Rotator_C_BndEvt__YInputBox_K2Node_ComponentBoundEvent_11_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_Property_Rotator_C_BndEvt__YInputBox_K2Node_ComponentBoundEvent_11_OnSpinBoxValueChangedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_Property_Rotator_C_BndEvt__YInputBox_K2Node_ComponentBoundEvent_11_OnSpinBoxValueChangedEvent__DelegateSignature::InValue' has a wrong offset!");

// Function WBP_Property_Rotator.WBP_Property_Rotator_C.BndEvt__YInputBox_K2Node_ComponentBoundEvent_3_OnSpinBoxValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_Property_Rotator_C_BndEvt__YInputBox_K2Node_ComponentBoundEvent_3_OnSpinBoxValueChangedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Property_Rotator_C_BndEvt__YInputBox_K2Node_ComponentBoundEvent_3_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_Property_Rotator_C_BndEvt__YInputBox_K2Node_ComponentBoundEvent_3_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_Property_Rotator_C_BndEvt__YInputBox_K2Node_ComponentBoundEvent_3_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on WBP_Property_Rotator_C_BndEvt__YInputBox_K2Node_ComponentBoundEvent_3_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_Property_Rotator_C_BndEvt__YInputBox_K2Node_ComponentBoundEvent_3_OnSpinBoxValueChangedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_Property_Rotator_C_BndEvt__YInputBox_K2Node_ComponentBoundEvent_3_OnSpinBoxValueChangedEvent__DelegateSignature::InValue' has a wrong offset!");

// Function WBP_Property_Rotator.WBP_Property_Rotator_C.BndEvt__YInputBox_K2Node_ComponentBoundEvent_8_OnSpinBoxValueCommittedEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Property_Rotator_C_BndEvt__YInputBox_K2Node_ComponentBoundEvent_8_OnSpinBoxValueCommittedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   CommitMethod;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Property_Rotator_C_BndEvt__YInputBox_K2Node_ComponentBoundEvent_8_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_Property_Rotator_C_BndEvt__YInputBox_K2Node_ComponentBoundEvent_8_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(sizeof(WBP_Property_Rotator_C_BndEvt__YInputBox_K2Node_ComponentBoundEvent_8_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000008, "Wrong size on WBP_Property_Rotator_C_BndEvt__YInputBox_K2Node_ComponentBoundEvent_8_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(offsetof(WBP_Property_Rotator_C_BndEvt__YInputBox_K2Node_ComponentBoundEvent_8_OnSpinBoxValueCommittedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_Property_Rotator_C_BndEvt__YInputBox_K2Node_ComponentBoundEvent_8_OnSpinBoxValueCommittedEvent__DelegateSignature::InValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_BndEvt__YInputBox_K2Node_ComponentBoundEvent_8_OnSpinBoxValueCommittedEvent__DelegateSignature, CommitMethod) == 0x000004, "Member 'WBP_Property_Rotator_C_BndEvt__YInputBox_K2Node_ComponentBoundEvent_8_OnSpinBoxValueCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WBP_Property_Rotator.WBP_Property_Rotator_C.BndEvt__ZInputBox_K2Node_ComponentBoundEvent_12_OnSpinBoxValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_Property_Rotator_C_BndEvt__ZInputBox_K2Node_ComponentBoundEvent_12_OnSpinBoxValueChangedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Property_Rotator_C_BndEvt__ZInputBox_K2Node_ComponentBoundEvent_12_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_Property_Rotator_C_BndEvt__ZInputBox_K2Node_ComponentBoundEvent_12_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_Property_Rotator_C_BndEvt__ZInputBox_K2Node_ComponentBoundEvent_12_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on WBP_Property_Rotator_C_BndEvt__ZInputBox_K2Node_ComponentBoundEvent_12_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_Property_Rotator_C_BndEvt__ZInputBox_K2Node_ComponentBoundEvent_12_OnSpinBoxValueChangedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_Property_Rotator_C_BndEvt__ZInputBox_K2Node_ComponentBoundEvent_12_OnSpinBoxValueChangedEvent__DelegateSignature::InValue' has a wrong offset!");

// Function WBP_Property_Rotator.WBP_Property_Rotator_C.BndEvt__ZInputBox_K2Node_ComponentBoundEvent_5_OnSpinBoxValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_Property_Rotator_C_BndEvt__ZInputBox_K2Node_ComponentBoundEvent_5_OnSpinBoxValueChangedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Property_Rotator_C_BndEvt__ZInputBox_K2Node_ComponentBoundEvent_5_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_Property_Rotator_C_BndEvt__ZInputBox_K2Node_ComponentBoundEvent_5_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_Property_Rotator_C_BndEvt__ZInputBox_K2Node_ComponentBoundEvent_5_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on WBP_Property_Rotator_C_BndEvt__ZInputBox_K2Node_ComponentBoundEvent_5_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_Property_Rotator_C_BndEvt__ZInputBox_K2Node_ComponentBoundEvent_5_OnSpinBoxValueChangedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_Property_Rotator_C_BndEvt__ZInputBox_K2Node_ComponentBoundEvent_5_OnSpinBoxValueChangedEvent__DelegateSignature::InValue' has a wrong offset!");

// Function WBP_Property_Rotator.WBP_Property_Rotator_C.BndEvt__ZInputBox_K2Node_ComponentBoundEvent_9_OnSpinBoxValueCommittedEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Property_Rotator_C_BndEvt__ZInputBox_K2Node_ComponentBoundEvent_9_OnSpinBoxValueCommittedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   CommitMethod;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Property_Rotator_C_BndEvt__ZInputBox_K2Node_ComponentBoundEvent_9_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_Property_Rotator_C_BndEvt__ZInputBox_K2Node_ComponentBoundEvent_9_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(sizeof(WBP_Property_Rotator_C_BndEvt__ZInputBox_K2Node_ComponentBoundEvent_9_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000008, "Wrong size on WBP_Property_Rotator_C_BndEvt__ZInputBox_K2Node_ComponentBoundEvent_9_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(offsetof(WBP_Property_Rotator_C_BndEvt__ZInputBox_K2Node_ComponentBoundEvent_9_OnSpinBoxValueCommittedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_Property_Rotator_C_BndEvt__ZInputBox_K2Node_ComponentBoundEvent_9_OnSpinBoxValueCommittedEvent__DelegateSignature::InValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_BndEvt__ZInputBox_K2Node_ComponentBoundEvent_9_OnSpinBoxValueCommittedEvent__DelegateSignature, CommitMethod) == 0x000004, "Member 'WBP_Property_Rotator_C_BndEvt__ZInputBox_K2Node_ComponentBoundEvent_9_OnSpinBoxValueCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WBP_Property_Rotator.WBP_Property_Rotator_C.ExecuteUbergraph_WBP_Property_Rotator
// 0x0110 (0x0110 - 0x0000)
struct WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Enabled;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_InValue_8;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod_2;         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_InValue_7;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod_1;         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_InValue_6;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_InValue_5;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_InValue_4;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_InValue_3;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInspectorPropertyDescriptor*           CallFunc_GetDescriptor_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInspectorPropertyDescriptor_Rotator*   K2Node_DynamicCast_AsInspector_Property_Descriptor_Rotator; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInspectorPropertyValue                K2Node_Event_ValueIn;                              // 0x0048(0x0018)(ConstParm, ZeroConstructor)
	bool                                          CallFunc_UnboxPropertyValue_AnyStruct_bIsValid;    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_UnboxPropertyValue_AnyStruct_Unboxed;     // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_ComponentBoundEvent_InValue_2;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_InValue_1;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_InValue;                // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetSliderValues_ReturnValue;              // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetSliderValues_ReturnValue_1;            // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FInspectorPropertyValue                CallFunc_BoxPropertyValue_AnyStruct_ReturnValue;   // 0x00C0(0x0018)(ZeroConstructor)
	struct FInspectorPropertyValue                CallFunc_BoxPropertyValue_AnyStruct_ReturnValue_1; // 0x00D8(0x0018)(ZeroConstructor)
	bool                                          CallFunc_UnboxPropertyValue_AnyStruct_bIsValid_1;  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_UnboxPropertyValue_AnyStruct_Unboxed_1;   // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator) == 0x000008, "Wrong alignment on WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator");
static_assert(sizeof(WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator) == 0x000110, "Wrong size on WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator");
static_assert(offsetof(WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator, EntryPoint) == 0x000000, "Member 'WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator, K2Node_Event_Enabled) == 0x000004, "Member 'WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator::K2Node_Event_Enabled' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator, K2Node_ComponentBoundEvent_InValue_8) == 0x000008, "Member 'WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator::K2Node_ComponentBoundEvent_InValue_8' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator, K2Node_ComponentBoundEvent_CommitMethod_2) == 0x00000C, "Member 'WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator::K2Node_ComponentBoundEvent_CommitMethod_2' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00000D, "Member 'WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator, K2Node_ComponentBoundEvent_InValue_7) == 0x000010, "Member 'WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator::K2Node_ComponentBoundEvent_InValue_7' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator, K2Node_ComponentBoundEvent_CommitMethod_1) == 0x000014, "Member 'WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator::K2Node_ComponentBoundEvent_CommitMethod_1' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000015, "Member 'WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator, K2Node_ComponentBoundEvent_InValue_6) == 0x000018, "Member 'WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator::K2Node_ComponentBoundEvent_InValue_6' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator, K2Node_ComponentBoundEvent_CommitMethod) == 0x00001C, "Member 'WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x00001D, "Member 'WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator, K2Node_ComponentBoundEvent_InValue_5) == 0x000020, "Member 'WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator::K2Node_ComponentBoundEvent_InValue_5' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator, K2Node_ComponentBoundEvent_InValue_4) == 0x000024, "Member 'WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator::K2Node_ComponentBoundEvent_InValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator, K2Node_ComponentBoundEvent_InValue_3) == 0x000028, "Member 'WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator::K2Node_ComponentBoundEvent_InValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator, CallFunc_GetDescriptor_ReturnValue) == 0x000030, "Member 'WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator::CallFunc_GetDescriptor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator, K2Node_DynamicCast_AsInspector_Property_Descriptor_Rotator) == 0x000038, "Member 'WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator::K2Node_DynamicCast_AsInspector_Property_Descriptor_Rotator' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator, K2Node_Event_ValueIn) == 0x000048, "Member 'WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator::K2Node_Event_ValueIn' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator, CallFunc_UnboxPropertyValue_AnyStruct_bIsValid) == 0x000060, "Member 'WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator::CallFunc_UnboxPropertyValue_AnyStruct_bIsValid' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator, CallFunc_UnboxPropertyValue_AnyStruct_Unboxed) == 0x000068, "Member 'WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator::CallFunc_UnboxPropertyValue_AnyStruct_Unboxed' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator, K2Node_ComponentBoundEvent_InValue_2) == 0x000080, "Member 'WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator::K2Node_ComponentBoundEvent_InValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator, K2Node_ComponentBoundEvent_InValue_1) == 0x000084, "Member 'WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator::K2Node_ComponentBoundEvent_InValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator, K2Node_ComponentBoundEvent_InValue) == 0x000088, "Member 'WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator::K2Node_ComponentBoundEvent_InValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator, CallFunc_GetSliderValues_ReturnValue) == 0x000090, "Member 'WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator::CallFunc_GetSliderValues_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator, CallFunc_GetSliderValues_ReturnValue_1) == 0x0000A8, "Member 'WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator::CallFunc_GetSliderValues_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator, CallFunc_BoxPropertyValue_AnyStruct_ReturnValue) == 0x0000C0, "Member 'WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator::CallFunc_BoxPropertyValue_AnyStruct_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator, CallFunc_BoxPropertyValue_AnyStruct_ReturnValue_1) == 0x0000D8, "Member 'WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator::CallFunc_BoxPropertyValue_AnyStruct_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator, CallFunc_UnboxPropertyValue_AnyStruct_bIsValid_1) == 0x0000F0, "Member 'WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator::CallFunc_UnboxPropertyValue_AnyStruct_bIsValid_1' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator, CallFunc_UnboxPropertyValue_AnyStruct_Unboxed_1) == 0x0000F8, "Member 'WBP_Property_Rotator_C_ExecuteUbergraph_WBP_Property_Rotator::CallFunc_UnboxPropertyValue_AnyStruct_Unboxed_1' has a wrong offset!");

// Function WBP_Property_Rotator.WBP_Property_Rotator_C.GetSliderValues
// 0x0058 (0x0058 - 0x0000)
struct WBP_Property_Rotator_C_GetSliderValues final
{
public:
	struct FRotator                               ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue_2;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Property_Rotator_C_GetSliderValues) == 0x000008, "Wrong alignment on WBP_Property_Rotator_C_GetSliderValues");
static_assert(sizeof(WBP_Property_Rotator_C_GetSliderValues) == 0x000058, "Wrong size on WBP_Property_Rotator_C_GetSliderValues");
static_assert(offsetof(WBP_Property_Rotator_C_GetSliderValues, ReturnValue) == 0x000000, "Member 'WBP_Property_Rotator_C_GetSliderValues::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_GetSliderValues, CallFunc_GetValue_ReturnValue) == 0x000018, "Member 'WBP_Property_Rotator_C_GetSliderValues::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_GetSliderValues, CallFunc_GetValue_ReturnValue_1) == 0x00001C, "Member 'WBP_Property_Rotator_C_GetSliderValues::CallFunc_GetValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_GetSliderValues, CallFunc_GetValue_ReturnValue_2) == 0x000020, "Member 'WBP_Property_Rotator_C_GetSliderValues::CallFunc_GetValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_GetSliderValues, CallFunc_MakeRotator_ReturnValue) == 0x000028, "Member 'WBP_Property_Rotator_C_GetSliderValues::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_GetSliderValues, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000040, "Member 'WBP_Property_Rotator_C_GetSliderValues::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_GetSliderValues, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000048, "Member 'WBP_Property_Rotator_C_GetSliderValues::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_GetSliderValues, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000050, "Member 'WBP_Property_Rotator_C_GetSliderValues::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");

// Function WBP_Property_Rotator.WBP_Property_Rotator_C.OnAvailabilityChange
// 0x0001 (0x0001 - 0x0000)
struct WBP_Property_Rotator_C_OnAvailabilityChange final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Property_Rotator_C_OnAvailabilityChange) == 0x000001, "Wrong alignment on WBP_Property_Rotator_C_OnAvailabilityChange");
static_assert(sizeof(WBP_Property_Rotator_C_OnAvailabilityChange) == 0x000001, "Wrong size on WBP_Property_Rotator_C_OnAvailabilityChange");
static_assert(offsetof(WBP_Property_Rotator_C_OnAvailabilityChange, Enabled) == 0x000000, "Member 'WBP_Property_Rotator_C_OnAvailabilityChange::Enabled' has a wrong offset!");

// Function WBP_Property_Rotator.WBP_Property_Rotator_C.OnValueChangedExternally
// 0x0018 (0x0018 - 0x0000)
struct WBP_Property_Rotator_C_OnValueChangedExternally final
{
public:
	struct FInspectorPropertyValue                ValueIn;                                           // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(WBP_Property_Rotator_C_OnValueChangedExternally) == 0x000008, "Wrong alignment on WBP_Property_Rotator_C_OnValueChangedExternally");
static_assert(sizeof(WBP_Property_Rotator_C_OnValueChangedExternally) == 0x000018, "Wrong size on WBP_Property_Rotator_C_OnValueChangedExternally");
static_assert(offsetof(WBP_Property_Rotator_C_OnValueChangedExternally, ValueIn) == 0x000000, "Member 'WBP_Property_Rotator_C_OnValueChangedExternally::ValueIn' has a wrong offset!");

// Function WBP_Property_Rotator.WBP_Property_Rotator_C.SetEnabled
// 0x0001 (0x0001 - 0x0000)
struct WBP_Property_Rotator_C_SetEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Property_Rotator_C_SetEnabled) == 0x000001, "Wrong alignment on WBP_Property_Rotator_C_SetEnabled");
static_assert(sizeof(WBP_Property_Rotator_C_SetEnabled) == 0x000001, "Wrong size on WBP_Property_Rotator_C_SetEnabled");
static_assert(offsetof(WBP_Property_Rotator_C_SetEnabled, bEnabled) == 0x000000, "Member 'WBP_Property_Rotator_C_SetEnabled::bEnabled' has a wrong offset!");

// Function WBP_Property_Rotator.WBP_Property_Rotator_C.SetSliderValues
// 0x0048 (0x0048 - 0x0000)
struct WBP_Property_Rotator_C_SetSliderValues final
{
public:
	struct FRotator                               Value;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_BreakRotator_Roll;                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakRotator_Pitch;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakRotator_Yaw;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue_1;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue_2;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_Angle_ImplicitCast;         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_Angle_ImplicitCast_1;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_Angle_ImplicitCast_2;       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Property_Rotator_C_SetSliderValues) == 0x000008, "Wrong alignment on WBP_Property_Rotator_C_SetSliderValues");
static_assert(sizeof(WBP_Property_Rotator_C_SetSliderValues) == 0x000048, "Wrong size on WBP_Property_Rotator_C_SetSliderValues");
static_assert(offsetof(WBP_Property_Rotator_C_SetSliderValues, Value) == 0x000000, "Member 'WBP_Property_Rotator_C_SetSliderValues::Value' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_SetSliderValues, CallFunc_BreakRotator_Roll) == 0x000018, "Member 'WBP_Property_Rotator_C_SetSliderValues::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_SetSliderValues, CallFunc_BreakRotator_Pitch) == 0x000020, "Member 'WBP_Property_Rotator_C_SetSliderValues::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_SetSliderValues, CallFunc_BreakRotator_Yaw) == 0x000028, "Member 'WBP_Property_Rotator_C_SetSliderValues::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_SetSliderValues, CallFunc_NormalizeAxis_ReturnValue) == 0x000030, "Member 'WBP_Property_Rotator_C_SetSliderValues::CallFunc_NormalizeAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_SetSliderValues, CallFunc_NormalizeAxis_ReturnValue_1) == 0x000034, "Member 'WBP_Property_Rotator_C_SetSliderValues::CallFunc_NormalizeAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_SetSliderValues, CallFunc_NormalizeAxis_ReturnValue_2) == 0x000038, "Member 'WBP_Property_Rotator_C_SetSliderValues::CallFunc_NormalizeAxis_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_SetSliderValues, CallFunc_NormalizeAxis_Angle_ImplicitCast) == 0x00003C, "Member 'WBP_Property_Rotator_C_SetSliderValues::CallFunc_NormalizeAxis_Angle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_SetSliderValues, CallFunc_NormalizeAxis_Angle_ImplicitCast_1) == 0x000040, "Member 'WBP_Property_Rotator_C_SetSliderValues::CallFunc_NormalizeAxis_Angle_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_Property_Rotator_C_SetSliderValues, CallFunc_NormalizeAxis_Angle_ImplicitCast_2) == 0x000044, "Member 'WBP_Property_Rotator_C_SetSliderValues::CallFunc_NormalizeAxis_Angle_ImplicitCast_2' has a wrong offset!");

}

