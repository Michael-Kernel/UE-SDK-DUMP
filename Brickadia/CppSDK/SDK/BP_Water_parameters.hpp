#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Water

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Water.BP_Water_C.BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x0110 (0x0110 - 0x0000)
struct BP_Water_C_BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Water_C_BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Water_C_BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Water_C_BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000110, "Wrong size on BP_Water_C_BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Water_C_BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Water_C_BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Water_C_BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Water_C_BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Water_C_BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Water_C_BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Water_C_BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Water_C_BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Water_C_BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_Water_C_BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Water_C_BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_Water_C_BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_Water.BP_Water_C.BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_Water_C_BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Water_C_BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Water_C_BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Water_C_BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_Water_C_BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Water_C_BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Water_C_BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Water_C_BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Water_C_BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Water_C_BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Water_C_BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Water_C_BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Water_C_BndEvt__BP_Water_PlaneCollisionComponent_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_Water.BP_Water_C.ExecuteUbergraph_BP_Water
// 0x0258 (0x0258 - 0x0000)
struct BP_Water_C_ExecuteUbergraph_BP_Water final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class ABRCharacter*                     Temp_object_Variable;                              // 0x0010(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0040(0x00F0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABRCharacter*                           K2Node_DynamicCast_AsBR_Character;                 // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBRRulesetMember>      CallFunc_GetAffiliatedTeam_self_CastInput;         // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBRRulesetTeam*                         CallFunc_GetAffiliatedTeam_ReturnValue;            // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_ReturnValue;                  // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABRCharacter*                           K2Node_DynamicCast_AsBR_Character_1;               // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABRCharacter*                           CallFunc_Array_Get_Item;                           // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBRRulesetMember>      CallFunc_GetAffiliatedTeam_self_CastInput_1;       // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBRRulesetTeam*                         CallFunc_GetAffiliatedTeam_ReturnValue_1;          // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_ReturnValue_1;                // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue_1;       // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22D[0x3];                                      // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetActorTickInterval_TickInterval_ImplicitCast; // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_BaseDamage_ImplicitCast;      // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_BaseDamage_ImplicitCast_1;    // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Water_C_ExecuteUbergraph_BP_Water) == 0x000008, "Wrong alignment on BP_Water_C_ExecuteUbergraph_BP_Water");
static_assert(sizeof(BP_Water_C_ExecuteUbergraph_BP_Water) == 0x000258, "Wrong size on BP_Water_C_ExecuteUbergraph_BP_Water");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, EntryPoint) == 0x000000, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, Temp_object_Variable) == 0x000010, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000020, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000028, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000030, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000038, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, K2Node_ComponentBoundEvent_bFromSweep) == 0x00003C, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, K2Node_ComponentBoundEvent_SweepResult) == 0x000040, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, K2Node_DynamicCast_AsBR_Character) == 0x000130, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::K2Node_DynamicCast_AsBR_Character' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, K2Node_DynamicCast_bSuccess) == 0x000138, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, CallFunc_GetAffiliatedTeam_self_CastInput) == 0x000140, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::CallFunc_GetAffiliatedTeam_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, CallFunc_GetAffiliatedTeam_ReturnValue) == 0x000150, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::CallFunc_GetAffiliatedTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, CallFunc_IsValid_ReturnValue) == 0x000158, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000160, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, CallFunc_ApplyDamage_ReturnValue) == 0x000168, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::CallFunc_ApplyDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000170, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000188, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000190, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, K2Node_ComponentBoundEvent_OtherActor) == 0x000198, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, K2Node_ComponentBoundEvent_OtherComp) == 0x0001A0, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0001A8, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, K2Node_DynamicCast_AsBR_Character_1) == 0x0001B0, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::K2Node_DynamicCast_AsBR_Character_1' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, K2Node_DynamicCast_bSuccess_1) == 0x0001B8, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, CallFunc_Array_Get_Item) == 0x0001C0, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, CallFunc_IsValid_ReturnValue_1) == 0x0001C8, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, CallFunc_GetAffiliatedTeam_self_CastInput_1) == 0x0001D0, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::CallFunc_GetAffiliatedTeam_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, CallFunc_GetAffiliatedTeam_ReturnValue_1) == 0x0001E0, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::CallFunc_GetAffiliatedTeam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, CallFunc_IsValid_ReturnValue_2) == 0x0001E8, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0001F0, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, CallFunc_ApplyDamage_ReturnValue_1) == 0x0001F8, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::CallFunc_ApplyDamage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, CallFunc_Array_Length_ReturnValue) == 0x0001FC, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, CallFunc_Less_IntInt_ReturnValue) == 0x000200, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000208, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, CallFunc_SpawnSoundAtLocation_ReturnValue_1) == 0x000220, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::CallFunc_SpawnSoundAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, CallFunc_Array_Add_ReturnValue) == 0x000228, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, CallFunc_Array_RemoveItem_ReturnValue) == 0x00022C, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, CallFunc_SetActorTickInterval_TickInterval_ImplicitCast) == 0x000230, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::CallFunc_SetActorTickInterval_TickInterval_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000238, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, CallFunc_ApplyDamage_BaseDamage_ImplicitCast) == 0x000240, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::CallFunc_ApplyDamage_BaseDamage_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000248, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Water_C_ExecuteUbergraph_BP_Water, CallFunc_ApplyDamage_BaseDamage_ImplicitCast_1) == 0x000250, "Member 'BP_Water_C_ExecuteUbergraph_BP_Water::CallFunc_ApplyDamage_BaseDamage_ImplicitCast_1' has a wrong offset!");

// Function BP_Water.BP_Water_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Water_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Water_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Water_C_ReceiveTick");
static_assert(sizeof(BP_Water_C_ReceiveTick) == 0x000004, "Wrong size on BP_Water_C_ReceiveTick");
static_assert(offsetof(BP_Water_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Water_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Water.BP_Water_C.SetWaterAbsorption
// 0x0018 (0x0018 - 0x0000)
struct BP_Water_C_SetWaterAbsorption final
{
public:
	struct FVector                                Value;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Water_C_SetWaterAbsorption) == 0x000008, "Wrong alignment on BP_Water_C_SetWaterAbsorption");
static_assert(sizeof(BP_Water_C_SetWaterAbsorption) == 0x000018, "Wrong size on BP_Water_C_SetWaterAbsorption");
static_assert(offsetof(BP_Water_C_SetWaterAbsorption, Value) == 0x000000, "Member 'BP_Water_C_SetWaterAbsorption::Value' has a wrong offset!");

// Function BP_Water.BP_Water_C.SetWaterFogAmbientColor
// 0x0010 (0x0010 - 0x0000)
struct BP_Water_C_SetWaterFogAmbientColor final
{
public:
	struct FLinearColor                           Value;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Water_C_SetWaterFogAmbientColor) == 0x000004, "Wrong alignment on BP_Water_C_SetWaterFogAmbientColor");
static_assert(sizeof(BP_Water_C_SetWaterFogAmbientColor) == 0x000010, "Wrong size on BP_Water_C_SetWaterFogAmbientColor");
static_assert(offsetof(BP_Water_C_SetWaterFogAmbientColor, Value) == 0x000000, "Member 'BP_Water_C_SetWaterFogAmbientColor::Value' has a wrong offset!");

// Function BP_Water.BP_Water_C.SetWaterFogAmbientScale
// 0x0008 (0x0008 - 0x0000)
struct BP_Water_C_SetWaterFogAmbientScale final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Water_C_SetWaterFogAmbientScale) == 0x000008, "Wrong alignment on BP_Water_C_SetWaterFogAmbientScale");
static_assert(sizeof(BP_Water_C_SetWaterFogAmbientScale) == 0x000008, "Wrong size on BP_Water_C_SetWaterFogAmbientScale");
static_assert(offsetof(BP_Water_C_SetWaterFogAmbientScale, Value) == 0x000000, "Member 'BP_Water_C_SetWaterFogAmbientScale::Value' has a wrong offset!");

// Function BP_Water.BP_Water_C.SetWaterFogIntensity
// 0x0008 (0x0008 - 0x0000)
struct BP_Water_C_SetWaterFogIntensity final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Water_C_SetWaterFogIntensity) == 0x000008, "Wrong alignment on BP_Water_C_SetWaterFogIntensity");
static_assert(sizeof(BP_Water_C_SetWaterFogIntensity) == 0x000008, "Wrong size on BP_Water_C_SetWaterFogIntensity");
static_assert(offsetof(BP_Water_C_SetWaterFogIntensity, Value) == 0x000000, "Member 'BP_Water_C_SetWaterFogIntensity::Value' has a wrong offset!");

// Function BP_Water.BP_Water_C.SetWaterFogScatteringColor
// 0x0010 (0x0010 - 0x0000)
struct BP_Water_C_SetWaterFogScatteringColor final
{
public:
	struct FLinearColor                           Value;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Water_C_SetWaterFogScatteringColor) == 0x000004, "Wrong alignment on BP_Water_C_SetWaterFogScatteringColor");
static_assert(sizeof(BP_Water_C_SetWaterFogScatteringColor) == 0x000010, "Wrong size on BP_Water_C_SetWaterFogScatteringColor");
static_assert(offsetof(BP_Water_C_SetWaterFogScatteringColor, Value) == 0x000000, "Member 'BP_Water_C_SetWaterFogScatteringColor::Value' has a wrong offset!");

// Function BP_Water.BP_Water_C.SetWaterFogScatteringScale
// 0x0008 (0x0008 - 0x0000)
struct BP_Water_C_SetWaterFogScatteringScale final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Water_C_SetWaterFogScatteringScale) == 0x000008, "Wrong alignment on BP_Water_C_SetWaterFogScatteringScale");
static_assert(sizeof(BP_Water_C_SetWaterFogScatteringScale) == 0x000008, "Wrong size on BP_Water_C_SetWaterFogScatteringScale");
static_assert(offsetof(BP_Water_C_SetWaterFogScatteringScale, Value) == 0x000000, "Member 'BP_Water_C_SetWaterFogScatteringScale::Value' has a wrong offset!");

// Function BP_Water.BP_Water_C.SetWaterHeight
// 0x0008 (0x0008 - 0x0000)
struct BP_Water_C_SetWaterHeight final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Water_C_SetWaterHeight) == 0x000008, "Wrong alignment on BP_Water_C_SetWaterHeight");
static_assert(sizeof(BP_Water_C_SetWaterHeight) == 0x000008, "Wrong size on BP_Water_C_SetWaterHeight");
static_assert(offsetof(BP_Water_C_SetWaterHeight, Value) == 0x000000, "Member 'BP_Water_C_SetWaterHeight::Value' has a wrong offset!");

// Function BP_Water.BP_Water_C.SetWaterScattering
// 0x0018 (0x0018 - 0x0000)
struct BP_Water_C_SetWaterScattering final
{
public:
	struct FVector                                Value;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Water_C_SetWaterScattering) == 0x000008, "Wrong alignment on BP_Water_C_SetWaterScattering");
static_assert(sizeof(BP_Water_C_SetWaterScattering) == 0x000018, "Wrong size on BP_Water_C_SetWaterScattering");
static_assert(offsetof(BP_Water_C_SetWaterScattering, Value) == 0x000000, "Member 'BP_Water_C_SetWaterScattering::Value' has a wrong offset!");

// Function BP_Water.BP_Water_C.SpawnWaterSplash
// 0x00E8 (0x00E8 - 0x0000)
struct BP_Water_C_SpawnWaterSplash final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_1;                            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Select_Default;                             // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Water_C_SpawnWaterSplash) == 0x000008, "Wrong alignment on BP_Water_C_SpawnWaterSplash");
static_assert(sizeof(BP_Water_C_SpawnWaterSplash) == 0x0000E8, "Wrong size on BP_Water_C_SpawnWaterSplash");
static_assert(offsetof(BP_Water_C_SpawnWaterSplash, Actor) == 0x000000, "Member 'BP_Water_C_SpawnWaterSplash::Actor' has a wrong offset!");
static_assert(offsetof(BP_Water_C_SpawnWaterSplash, Temp_object_Variable) == 0x000008, "Member 'BP_Water_C_SpawnWaterSplash::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Water_C_SpawnWaterSplash, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BP_Water_C_SpawnWaterSplash::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Water_C_SpawnWaterSplash, CallFunc_BreakVector_X) == 0x000028, "Member 'BP_Water_C_SpawnWaterSplash::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Water_C_SpawnWaterSplash, CallFunc_BreakVector_Y) == 0x000030, "Member 'BP_Water_C_SpawnWaterSplash::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Water_C_SpawnWaterSplash, CallFunc_BreakVector_Z) == 0x000038, "Member 'BP_Water_C_SpawnWaterSplash::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Water_C_SpawnWaterSplash, CallFunc_GetVelocity_ReturnValue) == 0x000040, "Member 'BP_Water_C_SpawnWaterSplash::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Water_C_SpawnWaterSplash, Temp_object_Variable_1) == 0x000058, "Member 'BP_Water_C_SpawnWaterSplash::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Water_C_SpawnWaterSplash, CallFunc_BreakVector_X_1) == 0x000060, "Member 'BP_Water_C_SpawnWaterSplash::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_Water_C_SpawnWaterSplash, CallFunc_BreakVector_Y_1) == 0x000068, "Member 'BP_Water_C_SpawnWaterSplash::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Water_C_SpawnWaterSplash, CallFunc_BreakVector_Z_1) == 0x000070, "Member 'BP_Water_C_SpawnWaterSplash::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_Water_C_SpawnWaterSplash, CallFunc_Abs_ReturnValue) == 0x000078, "Member 'BP_Water_C_SpawnWaterSplash::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Water_C_SpawnWaterSplash, Temp_bool_Variable) == 0x000080, "Member 'BP_Water_C_SpawnWaterSplash::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Water_C_SpawnWaterSplash, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000081, "Member 'BP_Water_C_SpawnWaterSplash::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Water_C_SpawnWaterSplash, K2Node_Select_Default) == 0x000088, "Member 'BP_Water_C_SpawnWaterSplash::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Water_C_SpawnWaterSplash, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000090, "Member 'BP_Water_C_SpawnWaterSplash::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Water_C_SpawnWaterSplash, CallFunc_BreakVector_X_2) == 0x0000A8, "Member 'BP_Water_C_SpawnWaterSplash::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_Water_C_SpawnWaterSplash, CallFunc_BreakVector_Y_2) == 0x0000B0, "Member 'BP_Water_C_SpawnWaterSplash::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_Water_C_SpawnWaterSplash, CallFunc_BreakVector_Z_2) == 0x0000B8, "Member 'BP_Water_C_SpawnWaterSplash::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_Water_C_SpawnWaterSplash, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'BP_Water_C_SpawnWaterSplash::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Water_C_SpawnWaterSplash, CallFunc_MakeVector_ReturnValue) == 0x0000C8, "Member 'BP_Water_C_SpawnWaterSplash::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Water_C_SpawnWaterSplash, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x0000E0, "Member 'BP_Water_C_SpawnWaterSplash::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");

// Function BP_Water.BP_Water_C.UpdateWaterLevel
// 0x0120 (0x0120 - 0x0000)
struct BP_Water_C_UpdateWaterLevel final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0028(0x00F0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Water_C_UpdateWaterLevel) == 0x000008, "Wrong alignment on BP_Water_C_UpdateWaterLevel");
static_assert(sizeof(BP_Water_C_UpdateWaterLevel) == 0x000120, "Wrong size on BP_Water_C_UpdateWaterLevel");
static_assert(offsetof(BP_Water_C_UpdateWaterLevel, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_Water_C_UpdateWaterLevel::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Water_C_UpdateWaterLevel, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000001, "Member 'BP_Water_C_UpdateWaterLevel::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Water_C_UpdateWaterLevel, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'BP_Water_C_UpdateWaterLevel::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Water_C_UpdateWaterLevel, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_Water_C_UpdateWaterLevel::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Water_C_UpdateWaterLevel, CallFunc_MakeVector_ReturnValue) == 0x000010, "Member 'BP_Water_C_UpdateWaterLevel::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Water_C_UpdateWaterLevel, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000028, "Member 'BP_Water_C_UpdateWaterLevel::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Water_C_UpdateWaterLevel, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000118, "Member 'BP_Water_C_UpdateWaterLevel::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Water_C_UpdateWaterLevel, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x00011C, "Member 'BP_Water_C_UpdateWaterLevel::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function BP_Water.BP_Water_C.UpdateWaterMaterials
// 0x002C (0x002C - 0x0000)
struct BP_Water_C_UpdateWaterMaterials final
{
public:
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Water_C_UpdateWaterMaterials) == 0x000004, "Wrong alignment on BP_Water_C_UpdateWaterMaterials");
static_assert(sizeof(BP_Water_C_UpdateWaterMaterials) == 0x00002C, "Wrong size on BP_Water_C_UpdateWaterMaterials");
static_assert(offsetof(BP_Water_C_UpdateWaterMaterials, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000000, "Member 'BP_Water_C_UpdateWaterMaterials::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Water_C_UpdateWaterMaterials, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x000010, "Member 'BP_Water_C_UpdateWaterMaterials::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Water_C_UpdateWaterMaterials, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000020, "Member 'BP_Water_C_UpdateWaterMaterials::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Water_C_UpdateWaterMaterials, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000024, "Member 'BP_Water_C_UpdateWaterMaterials::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Water_C_UpdateWaterMaterials, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x000028, "Member 'BP_Water_C_UpdateWaterMaterials::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");

// Function BP_Water.BP_Water_C.UserConstructionScript
// 0x0020 (0x0020 - 0x0000)
struct BP_Water_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Water_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_Water_C_UserConstructionScript");
static_assert(sizeof(BP_Water_C_UserConstructionScript) == 0x000020, "Wrong size on BP_Water_C_UserConstructionScript");
static_assert(offsetof(BP_Water_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BP_Water_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Water_C_UserConstructionScript, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000008, "Member 'BP_Water_C_UserConstructionScript::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Water_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000018, "Member 'BP_Water_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");

}

