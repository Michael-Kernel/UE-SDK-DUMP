#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_BlockEditor_Node_Literal

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Brickadia_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_BlockEditor_Node_Literal.WBP_BlockEditor_Node_Literal_C
// 0x0020 (0x0328 - 0x0308)
class UWBP_BlockEditor_Node_Literal_C final : public UBHBlockEditorLiteralNodeWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                ChangeTypeButton;                                  // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TypeColor;                                         // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TypeIcon;                                          // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_BlockEditor_Node_Literal(int32 EntryPoint);
	void HandleType(const struct FBHResolvedTypeInfo& Type);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_BlockEditor_Node_Literal_C">();
	}
	static class UWBP_BlockEditor_Node_Literal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_BlockEditor_Node_Literal_C>();
	}
};
static_assert(alignof(UWBP_BlockEditor_Node_Literal_C) == 0x000008, "Wrong alignment on UWBP_BlockEditor_Node_Literal_C");
static_assert(sizeof(UWBP_BlockEditor_Node_Literal_C) == 0x000328, "Wrong size on UWBP_BlockEditor_Node_Literal_C");
static_assert(offsetof(UWBP_BlockEditor_Node_Literal_C, UberGraphFrame) == 0x000308, "Member 'UWBP_BlockEditor_Node_Literal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_BlockEditor_Node_Literal_C, ChangeTypeButton) == 0x000310, "Member 'UWBP_BlockEditor_Node_Literal_C::ChangeTypeButton' has a wrong offset!");
static_assert(offsetof(UWBP_BlockEditor_Node_Literal_C, TypeColor) == 0x000318, "Member 'UWBP_BlockEditor_Node_Literal_C::TypeColor' has a wrong offset!");
static_assert(offsetof(UWBP_BlockEditor_Node_Literal_C, TypeIcon) == 0x000320, "Member 'UWBP_BlockEditor_Node_Literal_C::TypeIcon' has a wrong offset!");

}

