#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Property_LinearColor

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Brickadia_structs.hpp"


namespace SDK::Params
{

// Function WBP_Property_LinearColor.WBP_Property_LinearColor_C.ExecuteUbergraph_WBP_Property_LinearColor
// 0x0088 (0x0088 - 0x0000)
struct WBP_Property_LinearColor_C_ExecuteUbergraph_WBP_Property_LinearColor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldOpenDueToClick_ReturnValue;         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_CustomEvent_NewColor;                       // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bCommit;                        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInspectorPropertyValue                CallFunc_BoxPropertyValue_AnyStruct_ReturnValue;   // 0x0020(0x0018)(ZeroConstructor)
	bool                                          K2Node_Event_Enabled;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInspectorPropertyValue                K2Node_Event_ValueIn;                              // 0x0040(0x0018)(ConstParm, ZeroConstructor)
	bool                                          CallFunc_UnboxPropertyValue_AnyStruct_bIsValid;    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_UnboxPropertyValue_AnyStruct_Unboxed;     // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UnboxPropertyValue_AnyStruct_bIsValid_1;  // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E[0x2];                                       // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 CallFunc_UnboxPropertyValue_AnyStruct_Unboxed_1;   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_ColorToLinearColorNoSRGB_ReturnValue;     // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Property_LinearColor_C_ExecuteUbergraph_WBP_Property_LinearColor) == 0x000008, "Wrong alignment on WBP_Property_LinearColor_C_ExecuteUbergraph_WBP_Property_LinearColor");
static_assert(sizeof(WBP_Property_LinearColor_C_ExecuteUbergraph_WBP_Property_LinearColor) == 0x000088, "Wrong size on WBP_Property_LinearColor_C_ExecuteUbergraph_WBP_Property_LinearColor");
static_assert(offsetof(WBP_Property_LinearColor_C_ExecuteUbergraph_WBP_Property_LinearColor, EntryPoint) == 0x000000, "Member 'WBP_Property_LinearColor_C_ExecuteUbergraph_WBP_Property_LinearColor::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Property_LinearColor_C_ExecuteUbergraph_WBP_Property_LinearColor, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WBP_Property_LinearColor_C_ExecuteUbergraph_WBP_Property_LinearColor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_LinearColor_C_ExecuteUbergraph_WBP_Property_LinearColor, CallFunc_ShouldOpenDueToClick_ReturnValue) == 0x000005, "Member 'WBP_Property_LinearColor_C_ExecuteUbergraph_WBP_Property_LinearColor::CallFunc_ShouldOpenDueToClick_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_LinearColor_C_ExecuteUbergraph_WBP_Property_LinearColor, K2Node_CustomEvent_NewColor) == 0x000008, "Member 'WBP_Property_LinearColor_C_ExecuteUbergraph_WBP_Property_LinearColor::K2Node_CustomEvent_NewColor' has a wrong offset!");
static_assert(offsetof(WBP_Property_LinearColor_C_ExecuteUbergraph_WBP_Property_LinearColor, K2Node_CustomEvent_bCommit) == 0x000018, "Member 'WBP_Property_LinearColor_C_ExecuteUbergraph_WBP_Property_LinearColor::K2Node_CustomEvent_bCommit' has a wrong offset!");
static_assert(offsetof(WBP_Property_LinearColor_C_ExecuteUbergraph_WBP_Property_LinearColor, CallFunc_BoxPropertyValue_AnyStruct_ReturnValue) == 0x000020, "Member 'WBP_Property_LinearColor_C_ExecuteUbergraph_WBP_Property_LinearColor::CallFunc_BoxPropertyValue_AnyStruct_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_LinearColor_C_ExecuteUbergraph_WBP_Property_LinearColor, K2Node_Event_Enabled) == 0x000038, "Member 'WBP_Property_LinearColor_C_ExecuteUbergraph_WBP_Property_LinearColor::K2Node_Event_Enabled' has a wrong offset!");
static_assert(offsetof(WBP_Property_LinearColor_C_ExecuteUbergraph_WBP_Property_LinearColor, K2Node_Event_ValueIn) == 0x000040, "Member 'WBP_Property_LinearColor_C_ExecuteUbergraph_WBP_Property_LinearColor::K2Node_Event_ValueIn' has a wrong offset!");
static_assert(offsetof(WBP_Property_LinearColor_C_ExecuteUbergraph_WBP_Property_LinearColor, CallFunc_UnboxPropertyValue_AnyStruct_bIsValid) == 0x000058, "Member 'WBP_Property_LinearColor_C_ExecuteUbergraph_WBP_Property_LinearColor::CallFunc_UnboxPropertyValue_AnyStruct_bIsValid' has a wrong offset!");
static_assert(offsetof(WBP_Property_LinearColor_C_ExecuteUbergraph_WBP_Property_LinearColor, CallFunc_UnboxPropertyValue_AnyStruct_Unboxed) == 0x00005C, "Member 'WBP_Property_LinearColor_C_ExecuteUbergraph_WBP_Property_LinearColor::CallFunc_UnboxPropertyValue_AnyStruct_Unboxed' has a wrong offset!");
static_assert(offsetof(WBP_Property_LinearColor_C_ExecuteUbergraph_WBP_Property_LinearColor, CallFunc_IsValid_ReturnValue_1) == 0x00006C, "Member 'WBP_Property_LinearColor_C_ExecuteUbergraph_WBP_Property_LinearColor::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Property_LinearColor_C_ExecuteUbergraph_WBP_Property_LinearColor, CallFunc_UnboxPropertyValue_AnyStruct_bIsValid_1) == 0x00006D, "Member 'WBP_Property_LinearColor_C_ExecuteUbergraph_WBP_Property_LinearColor::CallFunc_UnboxPropertyValue_AnyStruct_bIsValid_1' has a wrong offset!");
static_assert(offsetof(WBP_Property_LinearColor_C_ExecuteUbergraph_WBP_Property_LinearColor, CallFunc_UnboxPropertyValue_AnyStruct_Unboxed_1) == 0x000070, "Member 'WBP_Property_LinearColor_C_ExecuteUbergraph_WBP_Property_LinearColor::CallFunc_UnboxPropertyValue_AnyStruct_Unboxed_1' has a wrong offset!");
static_assert(offsetof(WBP_Property_LinearColor_C_ExecuteUbergraph_WBP_Property_LinearColor, CallFunc_ColorToLinearColorNoSRGB_ReturnValue) == 0x000074, "Member 'WBP_Property_LinearColor_C_ExecuteUbergraph_WBP_Property_LinearColor::CallFunc_ColorToLinearColorNoSRGB_ReturnValue' has a wrong offset!");

// Function WBP_Property_LinearColor.WBP_Property_LinearColor_C.HandleColorChanged
// 0x0014 (0x0014 - 0x0000)
struct WBP_Property_LinearColor_C_HandleColorChanged final
{
public:
	struct FLinearColor                           NewColor;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCommit;                                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Property_LinearColor_C_HandleColorChanged) == 0x000004, "Wrong alignment on WBP_Property_LinearColor_C_HandleColorChanged");
static_assert(sizeof(WBP_Property_LinearColor_C_HandleColorChanged) == 0x000014, "Wrong size on WBP_Property_LinearColor_C_HandleColorChanged");
static_assert(offsetof(WBP_Property_LinearColor_C_HandleColorChanged, NewColor) == 0x000000, "Member 'WBP_Property_LinearColor_C_HandleColorChanged::NewColor' has a wrong offset!");
static_assert(offsetof(WBP_Property_LinearColor_C_HandleColorChanged, bCommit) == 0x000010, "Member 'WBP_Property_LinearColor_C_HandleColorChanged::bCommit' has a wrong offset!");

// Function WBP_Property_LinearColor.WBP_Property_LinearColor_C.OnAvailabilityChange
// 0x0001 (0x0001 - 0x0000)
struct WBP_Property_LinearColor_C_OnAvailabilityChange final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Property_LinearColor_C_OnAvailabilityChange) == 0x000001, "Wrong alignment on WBP_Property_LinearColor_C_OnAvailabilityChange");
static_assert(sizeof(WBP_Property_LinearColor_C_OnAvailabilityChange) == 0x000001, "Wrong size on WBP_Property_LinearColor_C_OnAvailabilityChange");
static_assert(offsetof(WBP_Property_LinearColor_C_OnAvailabilityChange, Enabled) == 0x000000, "Member 'WBP_Property_LinearColor_C_OnAvailabilityChange::Enabled' has a wrong offset!");

// Function WBP_Property_LinearColor.WBP_Property_LinearColor_C.OnGetMenuContent
// 0x0068 (0x0068 - 0x0000)
struct WBP_Property_LinearColor_C_OnGetMenuContent final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_LinearColorPickerMenu_C*           CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UInspectorPropertyDescriptor*           CallFunc_GetDescriptor_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInspectorPropertyDescriptor_LinearColor* K2Node_DynamicCast_AsInspector_Property_Descriptor_Linear_Color; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FLinearColor& NewColor, bool bCommit)> K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInspectorPropertyValue                CallFunc_GetValue_ValueOut;                        // 0x0038(0x0018)(ZeroConstructor)
	bool                                          CallFunc_UnboxPropertyValue_AnyStruct_bIsValid;    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_UnboxPropertyValue_AnyStruct_Unboxed;     // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Property_LinearColor_C_OnGetMenuContent) == 0x000008, "Wrong alignment on WBP_Property_LinearColor_C_OnGetMenuContent");
static_assert(sizeof(WBP_Property_LinearColor_C_OnGetMenuContent) == 0x000068, "Wrong size on WBP_Property_LinearColor_C_OnGetMenuContent");
static_assert(offsetof(WBP_Property_LinearColor_C_OnGetMenuContent, ReturnValue) == 0x000000, "Member 'WBP_Property_LinearColor_C_OnGetMenuContent::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_LinearColor_C_OnGetMenuContent, CallFunc_Create_ReturnValue) == 0x000008, "Member 'WBP_Property_LinearColor_C_OnGetMenuContent::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_LinearColor_C_OnGetMenuContent, CallFunc_GetDescriptor_ReturnValue) == 0x000010, "Member 'WBP_Property_LinearColor_C_OnGetMenuContent::CallFunc_GetDescriptor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_LinearColor_C_OnGetMenuContent, K2Node_DynamicCast_AsInspector_Property_Descriptor_Linear_Color) == 0x000018, "Member 'WBP_Property_LinearColor_C_OnGetMenuContent::K2Node_DynamicCast_AsInspector_Property_Descriptor_Linear_Color' has a wrong offset!");
static_assert(offsetof(WBP_Property_LinearColor_C_OnGetMenuContent, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_Property_LinearColor_C_OnGetMenuContent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Property_LinearColor_C_OnGetMenuContent, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'WBP_Property_LinearColor_C_OnGetMenuContent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Property_LinearColor_C_OnGetMenuContent, CallFunc_GetValue_ValueOut) == 0x000038, "Member 'WBP_Property_LinearColor_C_OnGetMenuContent::CallFunc_GetValue_ValueOut' has a wrong offset!");
static_assert(offsetof(WBP_Property_LinearColor_C_OnGetMenuContent, CallFunc_UnboxPropertyValue_AnyStruct_bIsValid) == 0x000050, "Member 'WBP_Property_LinearColor_C_OnGetMenuContent::CallFunc_UnboxPropertyValue_AnyStruct_bIsValid' has a wrong offset!");
static_assert(offsetof(WBP_Property_LinearColor_C_OnGetMenuContent, CallFunc_UnboxPropertyValue_AnyStruct_Unboxed) == 0x000054, "Member 'WBP_Property_LinearColor_C_OnGetMenuContent::CallFunc_UnboxPropertyValue_AnyStruct_Unboxed' has a wrong offset!");

// Function WBP_Property_LinearColor.WBP_Property_LinearColor_C.OnValueChangedExternally
// 0x0018 (0x0018 - 0x0000)
struct WBP_Property_LinearColor_C_OnValueChangedExternally final
{
public:
	struct FInspectorPropertyValue                ValueIn;                                           // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(WBP_Property_LinearColor_C_OnValueChangedExternally) == 0x000008, "Wrong alignment on WBP_Property_LinearColor_C_OnValueChangedExternally");
static_assert(sizeof(WBP_Property_LinearColor_C_OnValueChangedExternally) == 0x000018, "Wrong size on WBP_Property_LinearColor_C_OnValueChangedExternally");
static_assert(offsetof(WBP_Property_LinearColor_C_OnValueChangedExternally, ValueIn) == 0x000000, "Member 'WBP_Property_LinearColor_C_OnValueChangedExternally::ValueIn' has a wrong offset!");

// Function WBP_Property_LinearColor.WBP_Property_LinearColor_C.UpdatePreview
// 0x0030 (0x0030 - 0x0000)
struct WBP_Property_LinearColor_C_UpdatePreview final
{
public:
	struct FInspectorPropertyValue                CallFunc_GetValue_ValueOut;                        // 0x0000(0x0018)(ZeroConstructor)
	bool                                          CallFunc_UnboxPropertyValue_AnyStruct_bIsValid;    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_UnboxPropertyValue_AnyStruct_Unboxed;     // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Property_LinearColor_C_UpdatePreview) == 0x000008, "Wrong alignment on WBP_Property_LinearColor_C_UpdatePreview");
static_assert(sizeof(WBP_Property_LinearColor_C_UpdatePreview) == 0x000030, "Wrong size on WBP_Property_LinearColor_C_UpdatePreview");
static_assert(offsetof(WBP_Property_LinearColor_C_UpdatePreview, CallFunc_GetValue_ValueOut) == 0x000000, "Member 'WBP_Property_LinearColor_C_UpdatePreview::CallFunc_GetValue_ValueOut' has a wrong offset!");
static_assert(offsetof(WBP_Property_LinearColor_C_UpdatePreview, CallFunc_UnboxPropertyValue_AnyStruct_bIsValid) == 0x000018, "Member 'WBP_Property_LinearColor_C_UpdatePreview::CallFunc_UnboxPropertyValue_AnyStruct_bIsValid' has a wrong offset!");
static_assert(offsetof(WBP_Property_LinearColor_C_UpdatePreview, CallFunc_UnboxPropertyValue_AnyStruct_Unboxed) == 0x00001C, "Member 'WBP_Property_LinearColor_C_UpdatePreview::CallFunc_UnboxPropertyValue_AnyStruct_Unboxed' has a wrong offset!");

}

