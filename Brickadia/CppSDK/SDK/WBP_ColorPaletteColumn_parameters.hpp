#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ColorPaletteColumn

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.AddColorToGroup
// 0x0050 (0x0050 - 0x0000)
struct WBP_ColorPaletteColumn_C_AddColorToGroup final
{
public:
	struct FColor                                 Color;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayAnimation_0;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 Index)>                  K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 FromGroup, int32 ToGroup, int32 FromColorIndex, int32 ToColorIndex)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FColor& Color, int32 Index)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ColorPaletteEntry_C*               CallFunc_Create_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPaletteColumn_C_AddColorToGroup) == 0x000008, "Wrong alignment on WBP_ColorPaletteColumn_C_AddColorToGroup");
static_assert(sizeof(WBP_ColorPaletteColumn_C_AddColorToGroup) == 0x000050, "Wrong size on WBP_ColorPaletteColumn_C_AddColorToGroup");
static_assert(offsetof(WBP_ColorPaletteColumn_C_AddColorToGroup, Color) == 0x000000, "Member 'WBP_ColorPaletteColumn_C_AddColorToGroup::Color' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_AddColorToGroup, Index_0) == 0x000004, "Member 'WBP_ColorPaletteColumn_C_AddColorToGroup::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_AddColorToGroup, PlayAnimation_0) == 0x000008, "Member 'WBP_ColorPaletteColumn_C_AddColorToGroup::PlayAnimation_0' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_AddColorToGroup, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'WBP_ColorPaletteColumn_C_AddColorToGroup::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_AddColorToGroup, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'WBP_ColorPaletteColumn_C_AddColorToGroup::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_AddColorToGroup, K2Node_CreateDelegate_OutputDelegate_2) == 0x00002C, "Member 'WBP_ColorPaletteColumn_C_AddColorToGroup::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_AddColorToGroup, CallFunc_Create_ReturnValue) == 0x000040, "Member 'WBP_ColorPaletteColumn_C_AddColorToGroup::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_AddColorToGroup, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000048, "Member 'WBP_ColorPaletteColumn_C_AddColorToGroup::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");

// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.ExecuteUbergraph_WBP_ColorPaletteColumn
// 0x0060 (0x0060 - 0x0000)
struct WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 K2Node_MakeStruct_None;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 K2Node_CustomEvent_Color;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Index_1;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_Array_Get_Item;                           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_FromGroup;                      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ToGroup;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_FromColorIndex;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ToColorIndex;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Index;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 K2Node_MakeStruct_None_1;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 K2Node_MakeStruct_None_2;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn) == 0x000004, "Wrong alignment on WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn");
static_assert(sizeof(WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn) == 0x000060, "Wrong size on WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn");
static_assert(offsetof(WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn, EntryPoint) == 0x000000, "Member 'WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn, K2Node_MakeStruct_None) == 0x000004, "Member 'WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn::K2Node_MakeStruct_None' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn, K2Node_CustomEvent_Color) == 0x000008, "Member 'WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn::K2Node_CustomEvent_Color' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn, K2Node_CustomEvent_Index_1) == 0x00000C, "Member 'WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn::K2Node_CustomEvent_Index_1' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn, Temp_int_Array_Index_Variable) == 0x000014, "Member 'WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn, K2Node_CustomEvent_FromGroup) == 0x00001C, "Member 'WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn::K2Node_CustomEvent_FromGroup' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn, K2Node_CustomEvent_ToGroup) == 0x000020, "Member 'WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn::K2Node_CustomEvent_ToGroup' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn, K2Node_CustomEvent_FromColorIndex) == 0x000024, "Member 'WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn::K2Node_CustomEvent_FromColorIndex' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn, K2Node_CustomEvent_ToColorIndex) == 0x000028, "Member 'WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn::K2Node_CustomEvent_ToColorIndex' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn, K2Node_CustomEvent_Index) == 0x00002C, "Member 'WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn::K2Node_CustomEvent_Index' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn, CallFunc_Array_Length_ReturnValue_1) == 0x000030, "Member 'WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn, CallFunc_Greater_IntInt_ReturnValue) == 0x000034, "Member 'WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn, K2Node_MakeStruct_None_1) == 0x000054, "Member 'WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn::K2Node_MakeStruct_None_1' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn, K2Node_MakeStruct_None_2) == 0x000058, "Member 'WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn::K2Node_MakeStruct_None_2' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn, CallFunc_Array_Add_ReturnValue) == 0x00005C, "Member 'WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.FixColorsAfterIndex
// 0x0050 (0x0050 - 0x0000)
struct WBP_ColorPaletteColumn_C_FixColorsAfterIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ColorPaletteEntry_C*               K2Node_DynamicCast_AsWBP_Color_Palette_Entry;      // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPaletteColumn_C_FixColorsAfterIndex) == 0x000008, "Wrong alignment on WBP_ColorPaletteColumn_C_FixColorsAfterIndex");
static_assert(sizeof(WBP_ColorPaletteColumn_C_FixColorsAfterIndex) == 0x000050, "Wrong size on WBP_ColorPaletteColumn_C_FixColorsAfterIndex");
static_assert(offsetof(WBP_ColorPaletteColumn_C_FixColorsAfterIndex, Index_0) == 0x000000, "Member 'WBP_ColorPaletteColumn_C_FixColorsAfterIndex::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_FixColorsAfterIndex, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_ColorPaletteColumn_C_FixColorsAfterIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_FixColorsAfterIndex, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WBP_ColorPaletteColumn_C_FixColorsAfterIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_FixColorsAfterIndex, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_ColorPaletteColumn_C_FixColorsAfterIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_FixColorsAfterIndex, Temp_int_Variable) == 0x000010, "Member 'WBP_ColorPaletteColumn_C_FixColorsAfterIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_FixColorsAfterIndex, CallFunc_GetAllChildren_ReturnValue) == 0x000018, "Member 'WBP_ColorPaletteColumn_C_FixColorsAfterIndex::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_FixColorsAfterIndex, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'WBP_ColorPaletteColumn_C_FixColorsAfterIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_FixColorsAfterIndex, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_ColorPaletteColumn_C_FixColorsAfterIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_FixColorsAfterIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'WBP_ColorPaletteColumn_C_FixColorsAfterIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_FixColorsAfterIndex, K2Node_DynamicCast_AsWBP_Color_Palette_Entry) == 0x000040, "Member 'WBP_ColorPaletteColumn_C_FixColorsAfterIndex::K2Node_DynamicCast_AsWBP_Color_Palette_Entry' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_FixColorsAfterIndex, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WBP_ColorPaletteColumn_C_FixColorsAfterIndex::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_FixColorsAfterIndex, CallFunc_Greater_IntInt_ReturnValue) == 0x000049, "Member 'WBP_ColorPaletteColumn_C_FixColorsAfterIndex::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_FixColorsAfterIndex, CallFunc_Subtract_IntInt_ReturnValue) == 0x00004C, "Member 'WBP_ColorPaletteColumn_C_FixColorsAfterIndex::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.On Color Change
// 0x0008 (0x0008 - 0x0000)
struct WBP_ColorPaletteColumn_C_On_Color_Change final
{
public:
	struct FColor                                 Color;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPaletteColumn_C_On_Color_Change) == 0x000004, "Wrong alignment on WBP_ColorPaletteColumn_C_On_Color_Change");
static_assert(sizeof(WBP_ColorPaletteColumn_C_On_Color_Change) == 0x000008, "Wrong size on WBP_ColorPaletteColumn_C_On_Color_Change");
static_assert(offsetof(WBP_ColorPaletteColumn_C_On_Color_Change, Color) == 0x000000, "Member 'WBP_ColorPaletteColumn_C_On_Color_Change::Color' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_On_Color_Change, Index_0) == 0x000004, "Member 'WBP_ColorPaletteColumn_C_On_Color_Change::Index_0' has a wrong offset!");

// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.On Color Drag Drop
// 0x0010 (0x0010 - 0x0000)
struct WBP_ColorPaletteColumn_C_On_Color_Drag_Drop final
{
public:
	int32                                         FromGroup;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToGroup;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FromColorIndex;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToColorIndex;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPaletteColumn_C_On_Color_Drag_Drop) == 0x000004, "Wrong alignment on WBP_ColorPaletteColumn_C_On_Color_Drag_Drop");
static_assert(sizeof(WBP_ColorPaletteColumn_C_On_Color_Drag_Drop) == 0x000010, "Wrong size on WBP_ColorPaletteColumn_C_On_Color_Drag_Drop");
static_assert(offsetof(WBP_ColorPaletteColumn_C_On_Color_Drag_Drop, FromGroup) == 0x000000, "Member 'WBP_ColorPaletteColumn_C_On_Color_Drag_Drop::FromGroup' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_On_Color_Drag_Drop, ToGroup) == 0x000004, "Member 'WBP_ColorPaletteColumn_C_On_Color_Drag_Drop::ToGroup' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_On_Color_Drag_Drop, FromColorIndex) == 0x000008, "Member 'WBP_ColorPaletteColumn_C_On_Color_Drag_Drop::FromColorIndex' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_On_Color_Drag_Drop, ToColorIndex) == 0x00000C, "Member 'WBP_ColorPaletteColumn_C_On_Color_Drag_Drop::ToColorIndex' has a wrong offset!");

// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.On Remove Color
// 0x0004 (0x0004 - 0x0000)
struct WBP_ColorPaletteColumn_C_On_Remove_Color final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPaletteColumn_C_On_Remove_Color) == 0x000004, "Wrong alignment on WBP_ColorPaletteColumn_C_On_Remove_Color");
static_assert(sizeof(WBP_ColorPaletteColumn_C_On_Remove_Color) == 0x000004, "Wrong size on WBP_ColorPaletteColumn_C_On_Remove_Color");
static_assert(offsetof(WBP_ColorPaletteColumn_C_On_Remove_Color, Index_0) == 0x000000, "Member 'WBP_ColorPaletteColumn_C_On_Remove_Color::Index_0' has a wrong offset!");

// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.OnDragDetected
// 0x00E0 (0x00E0 - 0x0000)
struct WBP_ColorPaletteColumn_C_OnDragDetected final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UDragDropOperation*                     Operation;                                         // 0x00B0(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_ColorPaletteColumnVisual_C*        CallFunc_Create_ReturnValue;                       // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UDragDropOperation*                     CallFunc_CreateDragDropOperation_ReturnValue;      // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x00D0(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPaletteColumn_C_OnDragDetected) == 0x000008, "Wrong alignment on WBP_ColorPaletteColumn_C_OnDragDetected");
static_assert(sizeof(WBP_ColorPaletteColumn_C_OnDragDetected) == 0x0000E0, "Wrong size on WBP_ColorPaletteColumn_C_OnDragDetected");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDragDetected, MyGeometry) == 0x000000, "Member 'WBP_ColorPaletteColumn_C_OnDragDetected::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDragDetected, PointerEvent) == 0x000038, "Member 'WBP_ColorPaletteColumn_C_OnDragDetected::PointerEvent' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDragDetected, Operation) == 0x0000B0, "Member 'WBP_ColorPaletteColumn_C_OnDragDetected::Operation' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDragDetected, CallFunc_Create_ReturnValue) == 0x0000B8, "Member 'WBP_ColorPaletteColumn_C_OnDragDetected::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDragDetected, CallFunc_CreateDragDropOperation_ReturnValue) == 0x0000C0, "Member 'WBP_ColorPaletteColumn_C_OnDragDetected::CallFunc_CreateDragDropOperation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDragDetected, CallFunc_MakeLiteralByte_ReturnValue) == 0x0000C8, "Member 'WBP_ColorPaletteColumn_C_OnDragDetected::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDragDetected, Temp_struct_Variable) == 0x0000D0, "Member 'WBP_ColorPaletteColumn_C_OnDragDetected::Temp_struct_Variable' has a wrong offset!");

// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.OnDragLeave
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_ColorPaletteColumn_C_OnDragLeave final
{
public:
	struct FPointerEvent                          PointerEvent;                                      // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_ColorPaletteColumn_C*              K2Node_DynamicCast_AsWBP_Color_Palette_Column;     // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ColorPaletteEntry_C*               K2Node_DynamicCast_AsWBP_Color_Palette_Entry;      // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPaletteColumn_C_OnDragLeave) == 0x000008, "Wrong alignment on WBP_ColorPaletteColumn_C_OnDragLeave");
static_assert(sizeof(WBP_ColorPaletteColumn_C_OnDragLeave) == 0x0000A0, "Wrong size on WBP_ColorPaletteColumn_C_OnDragLeave");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDragLeave, PointerEvent) == 0x000000, "Member 'WBP_ColorPaletteColumn_C_OnDragLeave::PointerEvent' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDragLeave, Operation) == 0x000078, "Member 'WBP_ColorPaletteColumn_C_OnDragLeave::Operation' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDragLeave, K2Node_DynamicCast_AsWBP_Color_Palette_Column) == 0x000080, "Member 'WBP_ColorPaletteColumn_C_OnDragLeave::K2Node_DynamicCast_AsWBP_Color_Palette_Column' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDragLeave, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'WBP_ColorPaletteColumn_C_OnDragLeave::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDragLeave, K2Node_DynamicCast_AsWBP_Color_Palette_Entry) == 0x000090, "Member 'WBP_ColorPaletteColumn_C_OnDragLeave::K2Node_DynamicCast_AsWBP_Color_Palette_Entry' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDragLeave, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'WBP_ColorPaletteColumn_C_OnDragLeave::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.OnDragOver
// 0x00F0 (0x00F0 - 0x0000)
struct WBP_ColorPaletteColumn_C_OnDragOver final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x00B8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ColorPaletteColumn_C*              K2Node_DynamicCast_AsWBP_Color_Palette_Column;     // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_ColorPaletteEntry_C*               K2Node_DynamicCast_AsWBP_Color_Palette_Entry;      // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E3[0x1];                                       // 0x00E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_2;            // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPaletteColumn_C_OnDragOver) == 0x000008, "Wrong alignment on WBP_ColorPaletteColumn_C_OnDragOver");
static_assert(sizeof(WBP_ColorPaletteColumn_C_OnDragOver) == 0x0000F0, "Wrong size on WBP_ColorPaletteColumn_C_OnDragOver");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDragOver, MyGeometry) == 0x000000, "Member 'WBP_ColorPaletteColumn_C_OnDragOver::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDragOver, PointerEvent) == 0x000038, "Member 'WBP_ColorPaletteColumn_C_OnDragOver::PointerEvent' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDragOver, Operation) == 0x0000B0, "Member 'WBP_ColorPaletteColumn_C_OnDragOver::Operation' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDragOver, ReturnValue) == 0x0000B8, "Member 'WBP_ColorPaletteColumn_C_OnDragOver::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDragOver, K2Node_DynamicCast_AsWBP_Color_Palette_Column) == 0x0000C0, "Member 'WBP_ColorPaletteColumn_C_OnDragOver::K2Node_DynamicCast_AsWBP_Color_Palette_Column' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDragOver, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'WBP_ColorPaletteColumn_C_OnDragOver::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDragOver, CallFunc_Array_Length_ReturnValue) == 0x0000CC, "Member 'WBP_ColorPaletteColumn_C_OnDragOver::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDragOver, K2Node_DynamicCast_AsWBP_Color_Palette_Entry) == 0x0000D0, "Member 'WBP_ColorPaletteColumn_C_OnDragOver::K2Node_DynamicCast_AsWBP_Color_Palette_Entry' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDragOver, K2Node_DynamicCast_bSuccess_1) == 0x0000D8, "Member 'WBP_ColorPaletteColumn_C_OnDragOver::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDragOver, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000DC, "Member 'WBP_ColorPaletteColumn_C_OnDragOver::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDragOver, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000E0, "Member 'WBP_ColorPaletteColumn_C_OnDragOver::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDragOver, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x0000E1, "Member 'WBP_ColorPaletteColumn_C_OnDragOver::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDragOver, CallFunc_BooleanOR_ReturnValue) == 0x0000E2, "Member 'WBP_ColorPaletteColumn_C_OnDragOver::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDragOver, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000E4, "Member 'WBP_ColorPaletteColumn_C_OnDragOver::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDragOver, CallFunc_NotEqual_IntInt_ReturnValue_2) == 0x0000E8, "Member 'WBP_ColorPaletteColumn_C_OnDragOver::CallFunc_NotEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDragOver, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000E9, "Member 'WBP_ColorPaletteColumn_C_OnDragOver::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDragOver, CallFunc_BooleanAND_ReturnValue) == 0x0000EA, "Member 'WBP_ColorPaletteColumn_C_OnDragOver::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.OnDrop
// 0x00E0 (0x00E0 - 0x0000)
struct WBP_ColorPaletteColumn_C_OnDrop final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x00B8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ColorPaletteColumn_C*              K2Node_DynamicCast_AsWBP_Color_Palette_Column;     // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ColorPaletteEntry_C*               K2Node_DynamicCast_AsWBP_Color_Palette_Entry;      // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPaletteColumn_C_OnDrop) == 0x000008, "Wrong alignment on WBP_ColorPaletteColumn_C_OnDrop");
static_assert(sizeof(WBP_ColorPaletteColumn_C_OnDrop) == 0x0000E0, "Wrong size on WBP_ColorPaletteColumn_C_OnDrop");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDrop, MyGeometry) == 0x000000, "Member 'WBP_ColorPaletteColumn_C_OnDrop::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDrop, PointerEvent) == 0x000038, "Member 'WBP_ColorPaletteColumn_C_OnDrop::PointerEvent' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDrop, Operation) == 0x0000B0, "Member 'WBP_ColorPaletteColumn_C_OnDrop::Operation' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDrop, ReturnValue) == 0x0000B8, "Member 'WBP_ColorPaletteColumn_C_OnDrop::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDrop, K2Node_DynamicCast_AsWBP_Color_Palette_Column) == 0x0000C0, "Member 'WBP_ColorPaletteColumn_C_OnDrop::K2Node_DynamicCast_AsWBP_Color_Palette_Column' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDrop, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'WBP_ColorPaletteColumn_C_OnDrop::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDrop, K2Node_DynamicCast_AsWBP_Color_Palette_Entry) == 0x0000D0, "Member 'WBP_ColorPaletteColumn_C_OnDrop::K2Node_DynamicCast_AsWBP_Color_Palette_Entry' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDrop, K2Node_DynamicCast_bSuccess_1) == 0x0000D8, "Member 'WBP_ColorPaletteColumn_C_OnDrop::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnDrop, CallFunc_Array_Length_ReturnValue) == 0x0000DC, "Member 'WBP_ColorPaletteColumn_C_OnDrop::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.OnMouseButtonDown
// 0x0220 (0x0220 - 0x0000)
struct WBP_ColorPaletteColumn_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_DetectDragIfPressed_ReturnValue;          // 0x0168(0x00B8)()
};
static_assert(alignof(WBP_ColorPaletteColumn_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on WBP_ColorPaletteColumn_C_OnMouseButtonDown");
static_assert(sizeof(WBP_ColorPaletteColumn_C_OnMouseButtonDown) == 0x000220, "Wrong size on WBP_ColorPaletteColumn_C_OnMouseButtonDown");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'WBP_ColorPaletteColumn_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'WBP_ColorPaletteColumn_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnMouseButtonDown, ReturnValue) == 0x0000B0, "Member 'WBP_ColorPaletteColumn_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnMouseButtonDown, CallFunc_DetectDragIfPressed_ReturnValue) == 0x000168, "Member 'WBP_ColorPaletteColumn_C_OnMouseButtonDown::CallFunc_DetectDragIfPressed_ReturnValue' has a wrong offset!");

// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.OnMouseButtonUp
// 0x03B8 (0x03B8 - 0x0000)
struct WBP_ColorPaletteColumn_C_OnMouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue; // 0x0168(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0183(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0188(0x00B8)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0248(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue_1;                    // 0x0300(0x00B8)()
};
static_assert(alignof(WBP_ColorPaletteColumn_C_OnMouseButtonUp) == 0x000008, "Wrong alignment on WBP_ColorPaletteColumn_C_OnMouseButtonUp");
static_assert(sizeof(WBP_ColorPaletteColumn_C_OnMouseButtonUp) == 0x0003B8, "Wrong size on WBP_ColorPaletteColumn_C_OnMouseButtonUp");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnMouseButtonUp, MyGeometry) == 0x000000, "Member 'WBP_ColorPaletteColumn_C_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnMouseButtonUp, MouseEvent) == 0x000038, "Member 'WBP_ColorPaletteColumn_C_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnMouseButtonUp, ReturnValue) == 0x0000B0, "Member 'WBP_ColorPaletteColumn_C_OnMouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnMouseButtonUp, CallFunc_PointerEvent_GetEffectingButton_ReturnValue) == 0x000168, "Member 'WBP_ColorPaletteColumn_C_OnMouseButtonUp::CallFunc_PointerEvent_GetEffectingButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnMouseButtonUp, CallFunc_IsHovered_ReturnValue) == 0x000180, "Member 'WBP_ColorPaletteColumn_C_OnMouseButtonUp::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnMouseButtonUp, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000181, "Member 'WBP_ColorPaletteColumn_C_OnMouseButtonUp::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnMouseButtonUp, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x000182, "Member 'WBP_ColorPaletteColumn_C_OnMouseButtonUp::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnMouseButtonUp, CallFunc_BooleanAND_ReturnValue) == 0x000183, "Member 'WBP_ColorPaletteColumn_C_OnMouseButtonUp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue) == 0x000188, "Member 'WBP_ColorPaletteColumn_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnMouseButtonUp, CallFunc_PlayAnimationForward_ReturnValue) == 0x000240, "Member 'WBP_ColorPaletteColumn_C_OnMouseButtonUp::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnMouseButtonUp, CallFunc_Unhandled_ReturnValue) == 0x000248, "Member 'WBP_ColorPaletteColumn_C_OnMouseButtonUp::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue_1) == 0x000300, "Member 'WBP_ColorPaletteColumn_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue_1' has a wrong offset!");

// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.PlayAddAnimation
// 0x0008 (0x0008 - 0x0000)
struct WBP_ColorPaletteColumn_C_PlayAddAnimation final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPaletteColumn_C_PlayAddAnimation) == 0x000008, "Wrong alignment on WBP_ColorPaletteColumn_C_PlayAddAnimation");
static_assert(sizeof(WBP_ColorPaletteColumn_C_PlayAddAnimation) == 0x000008, "Wrong size on WBP_ColorPaletteColumn_C_PlayAddAnimation");
static_assert(offsetof(WBP_ColorPaletteColumn_C_PlayAddAnimation, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_ColorPaletteColumn_C_PlayAddAnimation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.PlayRemoveAnimation
// 0x0008 (0x0008 - 0x0000)
struct WBP_ColorPaletteColumn_C_PlayRemoveAnimation final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPaletteColumn_C_PlayRemoveAnimation) == 0x000008, "Wrong alignment on WBP_ColorPaletteColumn_C_PlayRemoveAnimation");
static_assert(sizeof(WBP_ColorPaletteColumn_C_PlayRemoveAnimation) == 0x000008, "Wrong size on WBP_ColorPaletteColumn_C_PlayRemoveAnimation");
static_assert(offsetof(WBP_ColorPaletteColumn_C_PlayRemoveAnimation, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_ColorPaletteColumn_C_PlayRemoveAnimation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.RemoveGroup
// 0x0014 (0x0014 - 0x0000)
struct WBP_ColorPaletteColumn_C_RemoveGroup final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPaletteColumn_C_RemoveGroup) == 0x000004, "Wrong alignment on WBP_ColorPaletteColumn_C_RemoveGroup");
static_assert(sizeof(WBP_ColorPaletteColumn_C_RemoveGroup) == 0x000014, "Wrong size on WBP_ColorPaletteColumn_C_RemoveGroup");
static_assert(offsetof(WBP_ColorPaletteColumn_C_RemoveGroup, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_ColorPaletteColumn_C_RemoveGroup::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_RemoveGroup, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_ColorPaletteColumn_C_RemoveGroup::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_RemoveGroup, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_ColorPaletteColumn_C_RemoveGroup::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_RemoveGroup, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'WBP_ColorPaletteColumn_C_RemoveGroup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_RemoveGroup, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'WBP_ColorPaletteColumn_C_RemoveGroup::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.UpdateAddButton
// 0x0018 (0x0018 - 0x0000)
struct WBP_ColorPaletteColumn_C_UpdateAddButton final
{
public:
	class UBRColorSubsystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxRows_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPaletteColumn_C_UpdateAddButton) == 0x000008, "Wrong alignment on WBP_ColorPaletteColumn_C_UpdateAddButton");
static_assert(sizeof(WBP_ColorPaletteColumn_C_UpdateAddButton) == 0x000018, "Wrong size on WBP_ColorPaletteColumn_C_UpdateAddButton");
static_assert(offsetof(WBP_ColorPaletteColumn_C_UpdateAddButton, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'WBP_ColorPaletteColumn_C_UpdateAddButton::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_UpdateAddButton, CallFunc_GetMaxRows_ReturnValue) == 0x000008, "Member 'WBP_ColorPaletteColumn_C_UpdateAddButton::CallFunc_GetMaxRows_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_UpdateAddButton, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'WBP_ColorPaletteColumn_C_UpdateAddButton::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_UpdateAddButton, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'WBP_ColorPaletteColumn_C_UpdateAddButton::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPaletteColumn_C_UpdateAddButton, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'WBP_ColorPaletteColumn_C_UpdateAddButton::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

