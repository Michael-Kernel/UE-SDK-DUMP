#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ColorPaletteColumn

#include "Basic.hpp"

#include "WBP_ColorPaletteColumn_classes.hpp"
#include "WBP_ColorPaletteColumn_parameters.hpp"


namespace SDK
{

// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.AddColorToGroup
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FColor&                    Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    PlayAnimation_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ColorPaletteColumn_C::AddColorToGroup(const struct FColor& Color, int32 Index_0, bool PlayAnimation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ColorPaletteColumn_C", "AddColorToGroup");

	Params::WBP_ColorPaletteColumn_C_AddColorToGroup Parms{};

	Parms.Color = std::move(Color);
	Parms.Index_0 = Index_0;
	Parms.PlayAnimation_0 = PlayAnimation_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.BndEvt__AddColorButton_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature
// (BlueprintEvent)

void UWBP_ColorPaletteColumn_C::BndEvt__AddColorButton_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ColorPaletteColumn_C", "BndEvt__AddColorButton_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_ColorPaletteColumn_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ColorPaletteColumn_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.ExecuteUbergraph_WBP_ColorPaletteColumn
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ColorPaletteColumn_C::ExecuteUbergraph_WBP_ColorPaletteColumn(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ColorPaletteColumn_C", "ExecuteUbergraph_WBP_ColorPaletteColumn");

	Params::WBP_ColorPaletteColumn_C_ExecuteUbergraph_WBP_ColorPaletteColumn Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.FixColorsAfterIndex
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ColorPaletteColumn_C::FixColorsAfterIndex(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ColorPaletteColumn_C", "FixColorsAfterIndex");

	Params::WBP_ColorPaletteColumn_C_FixColorsAfterIndex Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.On Color Change
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FColor&                    Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ColorPaletteColumn_C::On_Color_Change(const struct FColor& Color, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ColorPaletteColumn_C", "On Color Change");

	Params::WBP_ColorPaletteColumn_C_On_Color_Change Parms{};

	Parms.Color = std::move(Color);
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.On Color Drag Drop
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   FromGroup                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ToGroup                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   FromColorIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ToColorIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ColorPaletteColumn_C::On_Color_Drag_Drop(int32 FromGroup, int32 ToGroup, int32 FromColorIndex, int32 ToColorIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ColorPaletteColumn_C", "On Color Drag Drop");

	Params::WBP_ColorPaletteColumn_C_On_Color_Drag_Drop Parms{};

	Parms.FromGroup = FromGroup;
	Parms.ToGroup = ToGroup;
	Parms.FromColorIndex = FromColorIndex;
	Parms.ToColorIndex = ToColorIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.On Remove Animation Complete
// (BlueprintCallable, BlueprintEvent)

void UWBP_ColorPaletteColumn_C::On_Remove_Animation_Complete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ColorPaletteColumn_C", "On Remove Animation Complete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.On Remove Color
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ColorPaletteColumn_C::On_Remove_Color(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ColorPaletteColumn_C", "On Remove Color");

	Params::WBP_ColorPaletteColumn_C_On_Remove_Color Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.OnDragDetected
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             PointerEvent                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UDragDropOperation**              Operation                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_ColorPaletteColumn_C::OnDragDetected(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation** Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ColorPaletteColumn_C", "OnDragDetected");

	Params::WBP_ColorPaletteColumn_C_OnDragDetected Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.PointerEvent = std::move(PointerEvent);

	UObject::ProcessEvent(Func, &Parms);

	if (Operation != nullptr)
		*Operation = Parms.Operation;
}


// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.OnDragLeave
// (BlueprintCosmetic, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FPointerEvent&             PointerEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class UDragDropOperation*               Operation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_ColorPaletteColumn_C::OnDragLeave(const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ColorPaletteColumn_C", "OnDragLeave");

	Params::WBP_ColorPaletteColumn_C_OnDragLeave Parms{};

	Parms.PointerEvent = std::move(PointerEvent);
	Parms.Operation = Operation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.OnDragOver
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             PointerEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class UDragDropOperation*               Operation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UWBP_ColorPaletteColumn_C::OnDragOver(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ColorPaletteColumn_C", "OnDragOver");

	Params::WBP_ColorPaletteColumn_C_OnDragOver Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.PointerEvent = std::move(PointerEvent);
	Parms.Operation = Operation;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.OnDrop
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             PointerEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class UDragDropOperation*               Operation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UWBP_ColorPaletteColumn_C::OnDrop(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ColorPaletteColumn_C", "OnDrop");

	Params::WBP_ColorPaletteColumn_C_OnDrop Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.PointerEvent = std::move(PointerEvent);
	Parms.Operation = Operation;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.OnMouseButtonDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWBP_ColorPaletteColumn_C::OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ColorPaletteColumn_C", "OnMouseButtonDown");

	Params::WBP_ColorPaletteColumn_C_OnMouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.OnMouseButtonUp
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWBP_ColorPaletteColumn_C::OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ColorPaletteColumn_C", "OnMouseButtonUp");

	Params::WBP_ColorPaletteColumn_C_OnMouseButtonUp Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.PlayAddAnimation
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_ColorPaletteColumn_C::PlayAddAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ColorPaletteColumn_C", "PlayAddAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.PlayRemoveAnimation
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_ColorPaletteColumn_C::PlayRemoveAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ColorPaletteColumn_C", "PlayRemoveAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.RemoveGroup
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_ColorPaletteColumn_C::RemoveGroup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ColorPaletteColumn_C", "RemoveGroup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ColorPaletteColumn.WBP_ColorPaletteColumn_C.UpdateAddButton
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_ColorPaletteColumn_C::UpdateAddButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ColorPaletteColumn_C", "UpdateAddButton");

	UObject::ProcessEvent(Func, nullptr);
}

}

