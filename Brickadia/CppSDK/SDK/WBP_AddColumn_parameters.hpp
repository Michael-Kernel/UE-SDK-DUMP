#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AddColumn

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_AddColumn.WBP_AddColumn_C.ExecuteUbergraph_WBP_AddColumn
// 0x0004 (0x0004 - 0x0000)
struct WBP_AddColumn_C_ExecuteUbergraph_WBP_AddColumn final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AddColumn_C_ExecuteUbergraph_WBP_AddColumn) == 0x000004, "Wrong alignment on WBP_AddColumn_C_ExecuteUbergraph_WBP_AddColumn");
static_assert(sizeof(WBP_AddColumn_C_ExecuteUbergraph_WBP_AddColumn) == 0x000004, "Wrong size on WBP_AddColumn_C_ExecuteUbergraph_WBP_AddColumn");
static_assert(offsetof(WBP_AddColumn_C_ExecuteUbergraph_WBP_AddColumn, EntryPoint) == 0x000000, "Member 'WBP_AddColumn_C_ExecuteUbergraph_WBP_AddColumn::EntryPoint' has a wrong offset!");

// Function WBP_AddColumn.WBP_AddColumn_C.OnDragLeave
// 0x0090 (0x0090 - 0x0000)
struct WBP_AddColumn_C_OnDragLeave final
{
public:
	struct FPointerEvent                          PointerEvent;                                      // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_ColorPaletteColumn_C*              K2Node_DynamicCast_AsWBP_Color_Palette_Column;     // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AddColumn_C_OnDragLeave) == 0x000008, "Wrong alignment on WBP_AddColumn_C_OnDragLeave");
static_assert(sizeof(WBP_AddColumn_C_OnDragLeave) == 0x000090, "Wrong size on WBP_AddColumn_C_OnDragLeave");
static_assert(offsetof(WBP_AddColumn_C_OnDragLeave, PointerEvent) == 0x000000, "Member 'WBP_AddColumn_C_OnDragLeave::PointerEvent' has a wrong offset!");
static_assert(offsetof(WBP_AddColumn_C_OnDragLeave, Operation) == 0x000078, "Member 'WBP_AddColumn_C_OnDragLeave::Operation' has a wrong offset!");
static_assert(offsetof(WBP_AddColumn_C_OnDragLeave, K2Node_DynamicCast_AsWBP_Color_Palette_Column) == 0x000080, "Member 'WBP_AddColumn_C_OnDragLeave::K2Node_DynamicCast_AsWBP_Color_Palette_Column' has a wrong offset!");
static_assert(offsetof(WBP_AddColumn_C_OnDragLeave, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'WBP_AddColumn_C_OnDragLeave::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_AddColumn.WBP_AddColumn_C.OnDragOver
// 0x00D0 (0x00D0 - 0x0000)
struct WBP_AddColumn_C_OnDragOver final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x00B8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_ColorPaletteColumn_C*              K2Node_DynamicCast_AsWBP_Color_Palette_Column;     // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AddColumn_C_OnDragOver) == 0x000008, "Wrong alignment on WBP_AddColumn_C_OnDragOver");
static_assert(sizeof(WBP_AddColumn_C_OnDragOver) == 0x0000D0, "Wrong size on WBP_AddColumn_C_OnDragOver");
static_assert(offsetof(WBP_AddColumn_C_OnDragOver, MyGeometry) == 0x000000, "Member 'WBP_AddColumn_C_OnDragOver::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_AddColumn_C_OnDragOver, PointerEvent) == 0x000038, "Member 'WBP_AddColumn_C_OnDragOver::PointerEvent' has a wrong offset!");
static_assert(offsetof(WBP_AddColumn_C_OnDragOver, Operation) == 0x0000B0, "Member 'WBP_AddColumn_C_OnDragOver::Operation' has a wrong offset!");
static_assert(offsetof(WBP_AddColumn_C_OnDragOver, ReturnValue) == 0x0000B8, "Member 'WBP_AddColumn_C_OnDragOver::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AddColumn_C_OnDragOver, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000BC, "Member 'WBP_AddColumn_C_OnDragOver::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AddColumn_C_OnDragOver, K2Node_DynamicCast_AsWBP_Color_Palette_Column) == 0x0000C0, "Member 'WBP_AddColumn_C_OnDragOver::K2Node_DynamicCast_AsWBP_Color_Palette_Column' has a wrong offset!");
static_assert(offsetof(WBP_AddColumn_C_OnDragOver, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'WBP_AddColumn_C_OnDragOver::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_AddColumn_C_OnDragOver, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000C9, "Member 'WBP_AddColumn_C_OnDragOver::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AddColumn_C_OnDragOver, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000CA, "Member 'WBP_AddColumn_C_OnDragOver::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AddColumn_C_OnDragOver, CallFunc_BooleanAND_ReturnValue) == 0x0000CB, "Member 'WBP_AddColumn_C_OnDragOver::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_AddColumn.WBP_AddColumn_C.OnDrop
// 0x00D0 (0x00D0 - 0x0000)
struct WBP_AddColumn_C_OnDrop final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x00B8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ColorPaletteColumn_C*              K2Node_DynamicCast_AsWBP_Color_Palette_Column;     // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AddColumn_C_OnDrop) == 0x000008, "Wrong alignment on WBP_AddColumn_C_OnDrop");
static_assert(sizeof(WBP_AddColumn_C_OnDrop) == 0x0000D0, "Wrong size on WBP_AddColumn_C_OnDrop");
static_assert(offsetof(WBP_AddColumn_C_OnDrop, MyGeometry) == 0x000000, "Member 'WBP_AddColumn_C_OnDrop::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_AddColumn_C_OnDrop, PointerEvent) == 0x000038, "Member 'WBP_AddColumn_C_OnDrop::PointerEvent' has a wrong offset!");
static_assert(offsetof(WBP_AddColumn_C_OnDrop, Operation) == 0x0000B0, "Member 'WBP_AddColumn_C_OnDrop::Operation' has a wrong offset!");
static_assert(offsetof(WBP_AddColumn_C_OnDrop, ReturnValue) == 0x0000B8, "Member 'WBP_AddColumn_C_OnDrop::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AddColumn_C_OnDrop, K2Node_DynamicCast_AsWBP_Color_Palette_Column) == 0x0000C0, "Member 'WBP_AddColumn_C_OnDrop::K2Node_DynamicCast_AsWBP_Color_Palette_Column' has a wrong offset!");
static_assert(offsetof(WBP_AddColumn_C_OnDrop, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'WBP_AddColumn_C_OnDrop::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_AddColumn.WBP_AddColumn_C.SetButtonEnabled
// 0x0001 (0x0001 - 0x0000)
struct WBP_AddColumn_C_SetButtonEnabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AddColumn_C_SetButtonEnabled) == 0x000001, "Wrong alignment on WBP_AddColumn_C_SetButtonEnabled");
static_assert(sizeof(WBP_AddColumn_C_SetButtonEnabled) == 0x000001, "Wrong size on WBP_AddColumn_C_SetButtonEnabled");
static_assert(offsetof(WBP_AddColumn_C_SetButtonEnabled, Enabled) == 0x000000, "Member 'WBP_AddColumn_C_SetButtonEnabled::Enabled' has a wrong offset!");

}

