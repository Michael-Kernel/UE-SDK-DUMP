#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AvatarPreviewPanel

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_AvatarPreviewPanel.WBP_AvatarPreviewPanel_C.BndEvt__ViewportController_K2Node_ComponentBoundEvent_2_OnPartClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_AvatarPreviewPanel_C_BndEvt__ViewportController_K2Node_ComponentBoundEvent_2_OnPartClicked__DelegateSignature final
{
public:
	class UBRPlayerPartComponent*                 Part;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AvatarPreviewPanel_C_BndEvt__ViewportController_K2Node_ComponentBoundEvent_2_OnPartClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_AvatarPreviewPanel_C_BndEvt__ViewportController_K2Node_ComponentBoundEvent_2_OnPartClicked__DelegateSignature");
static_assert(sizeof(WBP_AvatarPreviewPanel_C_BndEvt__ViewportController_K2Node_ComponentBoundEvent_2_OnPartClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_AvatarPreviewPanel_C_BndEvt__ViewportController_K2Node_ComponentBoundEvent_2_OnPartClicked__DelegateSignature");
static_assert(offsetof(WBP_AvatarPreviewPanel_C_BndEvt__ViewportController_K2Node_ComponentBoundEvent_2_OnPartClicked__DelegateSignature, Part) == 0x000000, "Member 'WBP_AvatarPreviewPanel_C_BndEvt__ViewportController_K2Node_ComponentBoundEvent_2_OnPartClicked__DelegateSignature::Part' has a wrong offset!");

// Function WBP_AvatarPreviewPanel.WBP_AvatarPreviewPanel_C.BndEvt__WBP_AvatarPreviewPanel_PaintMenuAnchor_K2Node_ComponentBoundEvent_4_OnMenuOpenChangedEvent__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_AvatarPreviewPanel_C_BndEvt__WBP_AvatarPreviewPanel_PaintMenuAnchor_K2Node_ComponentBoundEvent_4_OnMenuOpenChangedEvent__DelegateSignature final
{
public:
	bool                                          bIsOpen;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AvatarPreviewPanel_C_BndEvt__WBP_AvatarPreviewPanel_PaintMenuAnchor_K2Node_ComponentBoundEvent_4_OnMenuOpenChangedEvent__DelegateSignature) == 0x000001, "Wrong alignment on WBP_AvatarPreviewPanel_C_BndEvt__WBP_AvatarPreviewPanel_PaintMenuAnchor_K2Node_ComponentBoundEvent_4_OnMenuOpenChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_AvatarPreviewPanel_C_BndEvt__WBP_AvatarPreviewPanel_PaintMenuAnchor_K2Node_ComponentBoundEvent_4_OnMenuOpenChangedEvent__DelegateSignature) == 0x000001, "Wrong size on WBP_AvatarPreviewPanel_C_BndEvt__WBP_AvatarPreviewPanel_PaintMenuAnchor_K2Node_ComponentBoundEvent_4_OnMenuOpenChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_AvatarPreviewPanel_C_BndEvt__WBP_AvatarPreviewPanel_PaintMenuAnchor_K2Node_ComponentBoundEvent_4_OnMenuOpenChangedEvent__DelegateSignature, bIsOpen) == 0x000000, "Member 'WBP_AvatarPreviewPanel_C_BndEvt__WBP_AvatarPreviewPanel_PaintMenuAnchor_K2Node_ComponentBoundEvent_4_OnMenuOpenChangedEvent__DelegateSignature::bIsOpen' has a wrong offset!");

// Function WBP_AvatarPreviewPanel.WBP_AvatarPreviewPanel_C.BndEvt__WBP_AvatarPreviewPanel_ViewportController_K2Node_ComponentBoundEvent_3_OnColorCopied__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_AvatarPreviewPanel_C_BndEvt__WBP_AvatarPreviewPanel_ViewportController_K2Node_ComponentBoundEvent_3_OnColorCopied__DelegateSignature final
{
public:
	struct FColor                                 Color;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AvatarPreviewPanel_C_BndEvt__WBP_AvatarPreviewPanel_ViewportController_K2Node_ComponentBoundEvent_3_OnColorCopied__DelegateSignature) == 0x000004, "Wrong alignment on WBP_AvatarPreviewPanel_C_BndEvt__WBP_AvatarPreviewPanel_ViewportController_K2Node_ComponentBoundEvent_3_OnColorCopied__DelegateSignature");
static_assert(sizeof(WBP_AvatarPreviewPanel_C_BndEvt__WBP_AvatarPreviewPanel_ViewportController_K2Node_ComponentBoundEvent_3_OnColorCopied__DelegateSignature) == 0x000004, "Wrong size on WBP_AvatarPreviewPanel_C_BndEvt__WBP_AvatarPreviewPanel_ViewportController_K2Node_ComponentBoundEvent_3_OnColorCopied__DelegateSignature");
static_assert(offsetof(WBP_AvatarPreviewPanel_C_BndEvt__WBP_AvatarPreviewPanel_ViewportController_K2Node_ComponentBoundEvent_3_OnColorCopied__DelegateSignature, Color) == 0x000000, "Member 'WBP_AvatarPreviewPanel_C_BndEvt__WBP_AvatarPreviewPanel_ViewportController_K2Node_ComponentBoundEvent_3_OnColorCopied__DelegateSignature::Color' has a wrong offset!");

// Function WBP_AvatarPreviewPanel.WBP_AvatarPreviewPanel_C.ClosePaint
// 0x0010 (0x0010 - 0x0000)
struct WBP_AvatarPreviewPanel_C_ClosePaint final
{
public:
	class FText                                   Temp_text_Variable;                                // 0x0000(0x0010)(ConstParm)
};
static_assert(alignof(WBP_AvatarPreviewPanel_C_ClosePaint) == 0x000008, "Wrong alignment on WBP_AvatarPreviewPanel_C_ClosePaint");
static_assert(sizeof(WBP_AvatarPreviewPanel_C_ClosePaint) == 0x000010, "Wrong size on WBP_AvatarPreviewPanel_C_ClosePaint");
static_assert(offsetof(WBP_AvatarPreviewPanel_C_ClosePaint, Temp_text_Variable) == 0x000000, "Member 'WBP_AvatarPreviewPanel_C_ClosePaint::Temp_text_Variable' has a wrong offset!");

// Function WBP_AvatarPreviewPanel.WBP_AvatarPreviewPanel_C.ExecuteUbergraph_WBP_AvatarPreviewPanel
// 0x0018 (0x0018 - 0x0000)
struct WBP_AvatarPreviewPanel_C_ExecuteUbergraph_WBP_AvatarPreviewPanel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOpen_ReturnValue;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBRPlayerPartComponent*                 K2Node_ComponentBoundEvent_Part;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 K2Node_ComponentBoundEvent_Color;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsOpen;                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AvatarPreviewPanel_C_ExecuteUbergraph_WBP_AvatarPreviewPanel) == 0x000008, "Wrong alignment on WBP_AvatarPreviewPanel_C_ExecuteUbergraph_WBP_AvatarPreviewPanel");
static_assert(sizeof(WBP_AvatarPreviewPanel_C_ExecuteUbergraph_WBP_AvatarPreviewPanel) == 0x000018, "Wrong size on WBP_AvatarPreviewPanel_C_ExecuteUbergraph_WBP_AvatarPreviewPanel");
static_assert(offsetof(WBP_AvatarPreviewPanel_C_ExecuteUbergraph_WBP_AvatarPreviewPanel, EntryPoint) == 0x000000, "Member 'WBP_AvatarPreviewPanel_C_ExecuteUbergraph_WBP_AvatarPreviewPanel::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_AvatarPreviewPanel_C_ExecuteUbergraph_WBP_AvatarPreviewPanel, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WBP_AvatarPreviewPanel_C_ExecuteUbergraph_WBP_AvatarPreviewPanel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AvatarPreviewPanel_C_ExecuteUbergraph_WBP_AvatarPreviewPanel, CallFunc_IsOpen_ReturnValue) == 0x000005, "Member 'WBP_AvatarPreviewPanel_C_ExecuteUbergraph_WBP_AvatarPreviewPanel::CallFunc_IsOpen_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AvatarPreviewPanel_C_ExecuteUbergraph_WBP_AvatarPreviewPanel, K2Node_ComponentBoundEvent_Part) == 0x000008, "Member 'WBP_AvatarPreviewPanel_C_ExecuteUbergraph_WBP_AvatarPreviewPanel::K2Node_ComponentBoundEvent_Part' has a wrong offset!");
static_assert(offsetof(WBP_AvatarPreviewPanel_C_ExecuteUbergraph_WBP_AvatarPreviewPanel, K2Node_ComponentBoundEvent_Color) == 0x000010, "Member 'WBP_AvatarPreviewPanel_C_ExecuteUbergraph_WBP_AvatarPreviewPanel::K2Node_ComponentBoundEvent_Color' has a wrong offset!");
static_assert(offsetof(WBP_AvatarPreviewPanel_C_ExecuteUbergraph_WBP_AvatarPreviewPanel, K2Node_ComponentBoundEvent_bIsOpen) == 0x000014, "Member 'WBP_AvatarPreviewPanel_C_ExecuteUbergraph_WBP_AvatarPreviewPanel::K2Node_ComponentBoundEvent_bIsOpen' has a wrong offset!");

// Function WBP_AvatarPreviewPanel.WBP_AvatarPreviewPanel_C.GetPaintMenuContent
// 0x0030 (0x0030 - 0x0000)
struct WBP_AvatarPreviewPanel_C_GetPaintMenuContent final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_ColorsetColorPickerMenu_C*         CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FColor& New_Color)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AvatarPreviewPanel_C_GetPaintMenuContent) == 0x000008, "Wrong alignment on WBP_AvatarPreviewPanel_C_GetPaintMenuContent");
static_assert(sizeof(WBP_AvatarPreviewPanel_C_GetPaintMenuContent) == 0x000030, "Wrong size on WBP_AvatarPreviewPanel_C_GetPaintMenuContent");
static_assert(offsetof(WBP_AvatarPreviewPanel_C_GetPaintMenuContent, ReturnValue) == 0x000000, "Member 'WBP_AvatarPreviewPanel_C_GetPaintMenuContent::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AvatarPreviewPanel_C_GetPaintMenuContent, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_AvatarPreviewPanel_C_GetPaintMenuContent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_AvatarPreviewPanel_C_GetPaintMenuContent, CallFunc_Create_ReturnValue) == 0x000018, "Member 'WBP_AvatarPreviewPanel_C_GetPaintMenuContent::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AvatarPreviewPanel_C_GetPaintMenuContent, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'WBP_AvatarPreviewPanel_C_GetPaintMenuContent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function WBP_AvatarPreviewPanel.WBP_AvatarPreviewPanel_C.HandleDragStarted
// 0x0028 (0x0028 - 0x0000)
struct WBP_AvatarPreviewPanel_C_HandleDragStarted final
{
public:
	class UObject*                                EntryPayload;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBRPlayerDecalDescriptor*               K2Node_DynamicCast_AsBR_Player_Decal_Descriptor;   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBRPlayerPartDescriptor*                K2Node_DynamicCast_AsBR_Player_Part_Descriptor;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AvatarPreviewPanel_C_HandleDragStarted) == 0x000008, "Wrong alignment on WBP_AvatarPreviewPanel_C_HandleDragStarted");
static_assert(sizeof(WBP_AvatarPreviewPanel_C_HandleDragStarted) == 0x000028, "Wrong size on WBP_AvatarPreviewPanel_C_HandleDragStarted");
static_assert(offsetof(WBP_AvatarPreviewPanel_C_HandleDragStarted, EntryPayload) == 0x000000, "Member 'WBP_AvatarPreviewPanel_C_HandleDragStarted::EntryPayload' has a wrong offset!");
static_assert(offsetof(WBP_AvatarPreviewPanel_C_HandleDragStarted, K2Node_DynamicCast_AsBR_Player_Decal_Descriptor) == 0x000008, "Member 'WBP_AvatarPreviewPanel_C_HandleDragStarted::K2Node_DynamicCast_AsBR_Player_Decal_Descriptor' has a wrong offset!");
static_assert(offsetof(WBP_AvatarPreviewPanel_C_HandleDragStarted, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_AvatarPreviewPanel_C_HandleDragStarted::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_AvatarPreviewPanel_C_HandleDragStarted, K2Node_DynamicCast_AsBR_Player_Part_Descriptor) == 0x000018, "Member 'WBP_AvatarPreviewPanel_C_HandleDragStarted::K2Node_DynamicCast_AsBR_Player_Part_Descriptor' has a wrong offset!");
static_assert(offsetof(WBP_AvatarPreviewPanel_C_HandleDragStarted, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'WBP_AvatarPreviewPanel_C_HandleDragStarted::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WBP_AvatarPreviewPanel.WBP_AvatarPreviewPanel_C.HandleHoverEnded
// 0x0001 (0x0001 - 0x0000)
struct WBP_AvatarPreviewPanel_C_HandleHoverEnded final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AvatarPreviewPanel_C_HandleHoverEnded) == 0x000001, "Wrong alignment on WBP_AvatarPreviewPanel_C_HandleHoverEnded");
static_assert(sizeof(WBP_AvatarPreviewPanel_C_HandleHoverEnded) == 0x000001, "Wrong size on WBP_AvatarPreviewPanel_C_HandleHoverEnded");
static_assert(offsetof(WBP_AvatarPreviewPanel_C_HandleHoverEnded, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'WBP_AvatarPreviewPanel_C_HandleHoverEnded::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_AvatarPreviewPanel.WBP_AvatarPreviewPanel_C.HandleHoverStarted
// 0x0028 (0x0028 - 0x0000)
struct WBP_AvatarPreviewPanel_C_HandleHoverStarted final
{
public:
	class UObject*                                EntryPayload;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBRPlayerDecalDescriptor*               K2Node_DynamicCast_AsBR_Player_Decal_Descriptor;   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBRPlayerPartDescriptor*                K2Node_DynamicCast_AsBR_Player_Part_Descriptor;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AvatarPreviewPanel_C_HandleHoverStarted) == 0x000008, "Wrong alignment on WBP_AvatarPreviewPanel_C_HandleHoverStarted");
static_assert(sizeof(WBP_AvatarPreviewPanel_C_HandleHoverStarted) == 0x000028, "Wrong size on WBP_AvatarPreviewPanel_C_HandleHoverStarted");
static_assert(offsetof(WBP_AvatarPreviewPanel_C_HandleHoverStarted, EntryPayload) == 0x000000, "Member 'WBP_AvatarPreviewPanel_C_HandleHoverStarted::EntryPayload' has a wrong offset!");
static_assert(offsetof(WBP_AvatarPreviewPanel_C_HandleHoverStarted, K2Node_DynamicCast_AsBR_Player_Decal_Descriptor) == 0x000008, "Member 'WBP_AvatarPreviewPanel_C_HandleHoverStarted::K2Node_DynamicCast_AsBR_Player_Decal_Descriptor' has a wrong offset!");
static_assert(offsetof(WBP_AvatarPreviewPanel_C_HandleHoverStarted, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_AvatarPreviewPanel_C_HandleHoverStarted::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_AvatarPreviewPanel_C_HandleHoverStarted, K2Node_DynamicCast_AsBR_Player_Part_Descriptor) == 0x000018, "Member 'WBP_AvatarPreviewPanel_C_HandleHoverStarted::K2Node_DynamicCast_AsBR_Player_Part_Descriptor' has a wrong offset!");
static_assert(offsetof(WBP_AvatarPreviewPanel_C_HandleHoverStarted, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'WBP_AvatarPreviewPanel_C_HandleHoverStarted::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WBP_AvatarPreviewPanel.WBP_AvatarPreviewPanel_C.HandlePaintColorChanged
// 0x0004 (0x0004 - 0x0000)
struct WBP_AvatarPreviewPanel_C_HandlePaintColorChanged final
{
public:
	struct FColor                                 New_Color;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AvatarPreviewPanel_C_HandlePaintColorChanged) == 0x000004, "Wrong alignment on WBP_AvatarPreviewPanel_C_HandlePaintColorChanged");
static_assert(sizeof(WBP_AvatarPreviewPanel_C_HandlePaintColorChanged) == 0x000004, "Wrong size on WBP_AvatarPreviewPanel_C_HandlePaintColorChanged");
static_assert(offsetof(WBP_AvatarPreviewPanel_C_HandlePaintColorChanged, New_Color) == 0x000000, "Member 'WBP_AvatarPreviewPanel_C_HandlePaintColorChanged::New_Color' has a wrong offset!");

// Function WBP_AvatarPreviewPanel.WBP_AvatarPreviewPanel_C.HandleQuickAttach
// 0x0028 (0x0028 - 0x0000)
struct WBP_AvatarPreviewPanel_C_HandleQuickAttach final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBRPlayerDecalDescriptor*               K2Node_DynamicCast_AsBR_Player_Decal_Descriptor;   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBRPlayerPartDescriptor*                K2Node_DynamicCast_AsBR_Player_Part_Descriptor;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AvatarPreviewPanel_C_HandleQuickAttach) == 0x000008, "Wrong alignment on WBP_AvatarPreviewPanel_C_HandleQuickAttach");
static_assert(sizeof(WBP_AvatarPreviewPanel_C_HandleQuickAttach) == 0x000028, "Wrong size on WBP_AvatarPreviewPanel_C_HandleQuickAttach");
static_assert(offsetof(WBP_AvatarPreviewPanel_C_HandleQuickAttach, Object) == 0x000000, "Member 'WBP_AvatarPreviewPanel_C_HandleQuickAttach::Object' has a wrong offset!");
static_assert(offsetof(WBP_AvatarPreviewPanel_C_HandleQuickAttach, K2Node_DynamicCast_AsBR_Player_Decal_Descriptor) == 0x000008, "Member 'WBP_AvatarPreviewPanel_C_HandleQuickAttach::K2Node_DynamicCast_AsBR_Player_Decal_Descriptor' has a wrong offset!");
static_assert(offsetof(WBP_AvatarPreviewPanel_C_HandleQuickAttach, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_AvatarPreviewPanel_C_HandleQuickAttach::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_AvatarPreviewPanel_C_HandleQuickAttach, K2Node_DynamicCast_AsBR_Player_Part_Descriptor) == 0x000018, "Member 'WBP_AvatarPreviewPanel_C_HandleQuickAttach::K2Node_DynamicCast_AsBR_Player_Part_Descriptor' has a wrong offset!");
static_assert(offsetof(WBP_AvatarPreviewPanel_C_HandleQuickAttach, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'WBP_AvatarPreviewPanel_C_HandleQuickAttach::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WBP_AvatarPreviewPanel.WBP_AvatarPreviewPanel_C.OpenPaint
// 0x0010 (0x0010 - 0x0000)
struct WBP_AvatarPreviewPanel_C_OpenPaint final
{
public:
	class FText                                   Temp_text_Variable;                                // 0x0000(0x0010)(ConstParm)
};
static_assert(alignof(WBP_AvatarPreviewPanel_C_OpenPaint) == 0x000008, "Wrong alignment on WBP_AvatarPreviewPanel_C_OpenPaint");
static_assert(sizeof(WBP_AvatarPreviewPanel_C_OpenPaint) == 0x000010, "Wrong size on WBP_AvatarPreviewPanel_C_OpenPaint");
static_assert(offsetof(WBP_AvatarPreviewPanel_C_OpenPaint, Temp_text_Variable) == 0x000000, "Member 'WBP_AvatarPreviewPanel_C_OpenPaint::Temp_text_Variable' has a wrong offset!");

}

