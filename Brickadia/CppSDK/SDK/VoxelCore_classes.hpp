#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VoxelCore

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"
#include "DeveloperSettings_classes.hpp"


namespace SDK
{

// Class VoxelCore.ApplyVoxelShaderHooksCommandlet
// 0x0000 (0x0080 - 0x0080)
class UApplyVoxelShaderHooksCommandlet final : public UCommandlet
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ApplyVoxelShaderHooksCommandlet">();
	}
	static class UApplyVoxelShaderHooksCommandlet* GetDefaultObj()
	{
		return GetDefaultObjImpl<UApplyVoxelShaderHooksCommandlet>();
	}
};
static_assert(alignof(UApplyVoxelShaderHooksCommandlet) == 0x000008, "Wrong alignment on UApplyVoxelShaderHooksCommandlet");
static_assert(sizeof(UApplyVoxelShaderHooksCommandlet) == 0x000080, "Wrong size on UApplyVoxelShaderHooksCommandlet");

// Class VoxelCore.VoxelCoreBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UVoxelCoreBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void RefreshMaterialInstance(class UMaterialInstanceDynamic* MaterialInstance);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VoxelCoreBlueprintLibrary">();
	}
	static class UVoxelCoreBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVoxelCoreBlueprintLibrary>();
	}
};
static_assert(alignof(UVoxelCoreBlueprintLibrary) == 0x000008, "Wrong alignment on UVoxelCoreBlueprintLibrary");
static_assert(sizeof(UVoxelCoreBlueprintLibrary) == 0x000028, "Wrong size on UVoxelCoreBlueprintLibrary");

// Class VoxelCore.VoxelDeveloperSettings
// 0x0000 (0x0038 - 0x0038)
class UVoxelDeveloperSettings : public UDeveloperSettings
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VoxelDeveloperSettings">();
	}
	static class UVoxelDeveloperSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVoxelDeveloperSettings>();
	}
};
static_assert(alignof(UVoxelDeveloperSettings) == 0x000008, "Wrong alignment on UVoxelDeveloperSettings");
static_assert(sizeof(UVoxelDeveloperSettings) == 0x000038, "Wrong size on UVoxelDeveloperSettings");

// Class VoxelCore.VoxelObjectWithGuid
// 0x0010 (0x0038 - 0x0028)
class UVoxelObjectWithGuid final : public UObject
{
public:
	struct FGuid                                  PrivateGuid;                                       // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VoxelObjectWithGuid">();
	}
	static class UVoxelObjectWithGuid* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVoxelObjectWithGuid>();
	}
};
static_assert(alignof(UVoxelObjectWithGuid) == 0x000008, "Wrong alignment on UVoxelObjectWithGuid");
static_assert(sizeof(UVoxelObjectWithGuid) == 0x000038, "Wrong size on UVoxelObjectWithGuid");
static_assert(offsetof(UVoxelObjectWithGuid, PrivateGuid) == 0x000028, "Member 'UVoxelObjectWithGuid::PrivateGuid' has a wrong offset!");

// Class VoxelCore.VoxelShaderHooksSettings
// 0x0000 (0x0038 - 0x0038)
class UVoxelShaderHooksSettings final : public UVoxelDeveloperSettings
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VoxelShaderHooksSettings">();
	}
	static class UVoxelShaderHooksSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVoxelShaderHooksSettings>();
	}
};
static_assert(alignof(UVoxelShaderHooksSettings) == 0x000008, "Wrong alignment on UVoxelShaderHooksSettings");
static_assert(sizeof(UVoxelShaderHooksSettings) == 0x000038, "Wrong size on UVoxelShaderHooksSettings");

// Class VoxelCore.VoxelTickerWorldSubsystem
// 0x0000 (0x0040 - 0x0040)
class UVoxelTickerWorldSubsystem final : public UTickableWorldSubsystem
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VoxelTickerWorldSubsystem">();
	}
	static class UVoxelTickerWorldSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVoxelTickerWorldSubsystem>();
	}
};
static_assert(alignof(UVoxelTickerWorldSubsystem) == 0x000008, "Wrong alignment on UVoxelTickerWorldSubsystem");
static_assert(sizeof(UVoxelTickerWorldSubsystem) == 0x000040, "Wrong size on UVoxelTickerWorldSubsystem");

}

