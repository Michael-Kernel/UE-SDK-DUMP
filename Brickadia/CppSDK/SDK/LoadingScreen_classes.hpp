#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LoadingScreen

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "SlateCore_structs.hpp"
#include "LoadingScreen_structs.hpp"
#include "DeveloperSettings_classes.hpp"


namespace SDK
{

// Class LoadingScreen.LoadingScreenLibrary
// 0x0000 (0x0028 - 0x0028)
class ULoadingScreenLibrary final : public UBlueprintFunctionLibrary
{
public:
	static int32 GetLoadingFrameIndex(int32 NumFrames, float Speed);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LoadingScreenLibrary">();
	}
	static class ULoadingScreenLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadingScreenLibrary>();
	}
};
static_assert(alignof(ULoadingScreenLibrary) == 0x000008, "Wrong alignment on ULoadingScreenLibrary");
static_assert(sizeof(ULoadingScreenLibrary) == 0x000028, "Wrong size on ULoadingScreenLibrary");

// Class LoadingScreen.LoadingScreenSettings
// 0x0908 (0x0940 - 0x0038)
class ULoadingScreenSettings final : public UDeveloperSettings
{
public:
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLoadingScreenDescription              StartupScreen;                                     // 0x0040(0x0410)(Edit, Config, NativeAccessSpecifierPublic)
	struct FLoadingScreenDescription              DefaultScreen;                                     // 0x0450(0x0410)(Edit, Config, NativeAccessSpecifierPublic)
	struct FSlateFontInfo                         TipFont;                                           // 0x0860(0x0060)(Edit, BlueprintVisible, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateFontInfo                         LoadingFont;                                       // 0x08C0(0x0060)(Edit, BlueprintVisible, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TipWrapAt;                                         // 0x0920(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_924[0x4];                                      // 0x0924(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           Tips;                                              // 0x0928(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	uint8                                         Pad_938[0x8];                                      // 0x0938(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LoadingScreenSettings">();
	}
	static class ULoadingScreenSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadingScreenSettings>();
	}
};
static_assert(alignof(ULoadingScreenSettings) == 0x000010, "Wrong alignment on ULoadingScreenSettings");
static_assert(sizeof(ULoadingScreenSettings) == 0x000940, "Wrong size on ULoadingScreenSettings");
static_assert(offsetof(ULoadingScreenSettings, StartupScreen) == 0x000040, "Member 'ULoadingScreenSettings::StartupScreen' has a wrong offset!");
static_assert(offsetof(ULoadingScreenSettings, DefaultScreen) == 0x000450, "Member 'ULoadingScreenSettings::DefaultScreen' has a wrong offset!");
static_assert(offsetof(ULoadingScreenSettings, TipFont) == 0x000860, "Member 'ULoadingScreenSettings::TipFont' has a wrong offset!");
static_assert(offsetof(ULoadingScreenSettings, LoadingFont) == 0x0008C0, "Member 'ULoadingScreenSettings::LoadingFont' has a wrong offset!");
static_assert(offsetof(ULoadingScreenSettings, TipWrapAt) == 0x000920, "Member 'ULoadingScreenSettings::TipWrapAt' has a wrong offset!");
static_assert(offsetof(ULoadingScreenSettings, Tips) == 0x000928, "Member 'ULoadingScreenSettings::Tips' has a wrong offset!");

}

