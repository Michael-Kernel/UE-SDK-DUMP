#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ColorsetColorPicker_Entry

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ColorsetColorPicker_Entry.WBP_ColorsetColorPicker_Entry_C
// 0x0040 (0x0310 - 0x02D0)
class UWBP_ColorsetColorPicker_Entry_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FlashEntry;                                        // 0x02D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 ColorPreview;                                      // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FlashFrame;                                        // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                SelectButton;                                      // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(const struct FColor& Color)> OnColorSelected;                                   // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FColor                                 Color;                                             // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void BndEvt__SelectButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void Construct();
	void ExecuteUbergraph_WBP_ColorsetColorPicker_Entry(int32 EntryPoint);
	void FlashColor();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ColorsetColorPicker_Entry_C">();
	}
	static class UWBP_ColorsetColorPicker_Entry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ColorsetColorPicker_Entry_C>();
	}
};
static_assert(alignof(UWBP_ColorsetColorPicker_Entry_C) == 0x000008, "Wrong alignment on UWBP_ColorsetColorPicker_Entry_C");
static_assert(sizeof(UWBP_ColorsetColorPicker_Entry_C) == 0x000310, "Wrong size on UWBP_ColorsetColorPicker_Entry_C");
static_assert(offsetof(UWBP_ColorsetColorPicker_Entry_C, UberGraphFrame) == 0x0002D0, "Member 'UWBP_ColorsetColorPicker_Entry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ColorsetColorPicker_Entry_C, FlashEntry) == 0x0002D8, "Member 'UWBP_ColorsetColorPicker_Entry_C::FlashEntry' has a wrong offset!");
static_assert(offsetof(UWBP_ColorsetColorPicker_Entry_C, ColorPreview) == 0x0002E0, "Member 'UWBP_ColorsetColorPicker_Entry_C::ColorPreview' has a wrong offset!");
static_assert(offsetof(UWBP_ColorsetColorPicker_Entry_C, FlashFrame) == 0x0002E8, "Member 'UWBP_ColorsetColorPicker_Entry_C::FlashFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ColorsetColorPicker_Entry_C, SelectButton) == 0x0002F0, "Member 'UWBP_ColorsetColorPicker_Entry_C::SelectButton' has a wrong offset!");
static_assert(offsetof(UWBP_ColorsetColorPicker_Entry_C, OnColorSelected) == 0x0002F8, "Member 'UWBP_ColorsetColorPicker_Entry_C::OnColorSelected' has a wrong offset!");
static_assert(offsetof(UWBP_ColorsetColorPicker_Entry_C, Color) == 0x000308, "Member 'UWBP_ColorsetColorPicker_Entry_C::Color' has a wrong offset!");

}

