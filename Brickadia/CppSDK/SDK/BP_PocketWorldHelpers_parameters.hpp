#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PocketWorldHelpers

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_PocketWorldHelpers.BP_PocketWorldHelpers_C.PocketWorldLineTraceByChannel
// 0x0250 (0x0250 - 0x0000)
struct BP_PocketWorldHelpers_C_PocketWorldLineTraceByChannel final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0020(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETraceTypeQuery                               TraceChannel;                                      // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTraceComplex;                                     // 0x0039(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0040(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	EDrawDebugTrace                               DrawDebugType;                                     // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIgnoreSelf;                                       // 0x0051(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             OutHit;                                            // 0x0060(0x00F0)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0150(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0158(0x00F0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PocketWorldHelpers_C_PocketWorldLineTraceByChannel) == 0x000008, "Wrong alignment on BP_PocketWorldHelpers_C_PocketWorldLineTraceByChannel");
static_assert(sizeof(BP_PocketWorldHelpers_C_PocketWorldLineTraceByChannel) == 0x000250, "Wrong size on BP_PocketWorldHelpers_C_PocketWorldLineTraceByChannel");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceByChannel, WorldContextObject) == 0x000000, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceByChannel::WorldContextObject' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceByChannel, Start) == 0x000008, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceByChannel::Start' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceByChannel, End) == 0x000020, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceByChannel::End' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceByChannel, TraceChannel) == 0x000038, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceByChannel::TraceChannel' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceByChannel, bTraceComplex) == 0x000039, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceByChannel::bTraceComplex' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceByChannel, ActorsToIgnore) == 0x000040, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceByChannel::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceByChannel, DrawDebugType) == 0x000050, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceByChannel::DrawDebugType' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceByChannel, bIgnoreSelf) == 0x000051, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceByChannel::bIgnoreSelf' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceByChannel, __WorldContext) == 0x000058, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceByChannel::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceByChannel, OutHit) == 0x000060, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceByChannel::OutHit' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceByChannel, ReturnValue) == 0x000150, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceByChannel::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceByChannel, CallFunc_LineTraceSingle_OutHit) == 0x000158, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceByChannel::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceByChannel, CallFunc_LineTraceSingle_ReturnValue) == 0x000248, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceByChannel::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");

// Function BP_PocketWorldHelpers.BP_PocketWorldHelpers_C.PocketWorldLineTraceByProfile
// 0x0258 (0x0258 - 0x0000)
struct BP_PocketWorldHelpers_C_PocketWorldLineTraceByProfile final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0020(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ProfileName;                                       // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTraceComplex;                                     // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0048(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	EDrawDebugTrace                               DrawDebugType;                                     // 0x0058(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIgnoreSelf;                                       // 0x0059(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             OutHit;                                            // 0x0068(0x00F0)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0158(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingleByProfile_OutHit;          // 0x0160(0x00F0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleByProfile_ReturnValue;     // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PocketWorldHelpers_C_PocketWorldLineTraceByProfile) == 0x000008, "Wrong alignment on BP_PocketWorldHelpers_C_PocketWorldLineTraceByProfile");
static_assert(sizeof(BP_PocketWorldHelpers_C_PocketWorldLineTraceByProfile) == 0x000258, "Wrong size on BP_PocketWorldHelpers_C_PocketWorldLineTraceByProfile");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceByProfile, WorldContextObject) == 0x000000, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceByProfile::WorldContextObject' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceByProfile, Start) == 0x000008, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceByProfile::Start' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceByProfile, End) == 0x000020, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceByProfile::End' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceByProfile, ProfileName) == 0x000038, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceByProfile::ProfileName' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceByProfile, bTraceComplex) == 0x000040, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceByProfile::bTraceComplex' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceByProfile, ActorsToIgnore) == 0x000048, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceByProfile::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceByProfile, DrawDebugType) == 0x000058, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceByProfile::DrawDebugType' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceByProfile, bIgnoreSelf) == 0x000059, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceByProfile::bIgnoreSelf' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceByProfile, __WorldContext) == 0x000060, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceByProfile::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceByProfile, OutHit) == 0x000068, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceByProfile::OutHit' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceByProfile, ReturnValue) == 0x000158, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceByProfile::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceByProfile, CallFunc_LineTraceSingleByProfile_OutHit) == 0x000160, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceByProfile::CallFunc_LineTraceSingleByProfile_OutHit' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceByProfile, CallFunc_LineTraceSingleByProfile_ReturnValue) == 0x000250, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceByProfile::CallFunc_LineTraceSingleByProfile_ReturnValue' has a wrong offset!");

// Function BP_PocketWorldHelpers.BP_PocketWorldHelpers_C.PocketWorldLineTraceForObjects
// 0x0260 (0x0260 - 0x0000)
struct BP_PocketWorldHelpers_C_PocketWorldLineTraceForObjects final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0020(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      ObjectTypes;                                       // 0x0038(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bTraceComplex;                                     // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0050(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	EDrawDebugTrace                               DrawDebugType;                                     // 0x0060(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIgnoreSelf;                                       // 0x0061(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             OutHit;                                            // 0x0070(0x00F0)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0160(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0168(0x00F0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PocketWorldHelpers_C_PocketWorldLineTraceForObjects) == 0x000008, "Wrong alignment on BP_PocketWorldHelpers_C_PocketWorldLineTraceForObjects");
static_assert(sizeof(BP_PocketWorldHelpers_C_PocketWorldLineTraceForObjects) == 0x000260, "Wrong size on BP_PocketWorldHelpers_C_PocketWorldLineTraceForObjects");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceForObjects, WorldContextObject) == 0x000000, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceForObjects::WorldContextObject' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceForObjects, Start) == 0x000008, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceForObjects::Start' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceForObjects, End) == 0x000020, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceForObjects::End' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceForObjects, ObjectTypes) == 0x000038, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceForObjects::ObjectTypes' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceForObjects, bTraceComplex) == 0x000048, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceForObjects::bTraceComplex' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceForObjects, ActorsToIgnore) == 0x000050, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceForObjects::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceForObjects, DrawDebugType) == 0x000060, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceForObjects::DrawDebugType' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceForObjects, bIgnoreSelf) == 0x000061, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceForObjects::bIgnoreSelf' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceForObjects, __WorldContext) == 0x000068, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceForObjects::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceForObjects, OutHit) == 0x000070, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceForObjects::OutHit' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceForObjects, ReturnValue) == 0x000160, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceForObjects::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceForObjects, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000168, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceForObjects::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldLineTraceForObjects, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000258, "Member 'BP_PocketWorldHelpers_C_PocketWorldLineTraceForObjects::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");

// Function BP_PocketWorldHelpers.BP_PocketWorldHelpers_C.PocketWorldMultiLineTraceByChannel
// 0x0090 (0x0090 - 0x0000)
struct BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByChannel final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0020(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETraceTypeQuery                               TraceChannel;                                      // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTraceComplex;                                     // 0x0039(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0040(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	EDrawDebugTrace                               DrawDebugType;                                     // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIgnoreSelf;                                       // 0x0051(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     OutHits;                                           // 0x0060(0x0010)(Parm, OutParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_LineTraceMulti_OutHits;                   // 0x0078(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceMulti_ReturnValue;               // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByChannel) == 0x000008, "Wrong alignment on BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByChannel");
static_assert(sizeof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByChannel) == 0x000090, "Wrong size on BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByChannel");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByChannel, WorldContextObject) == 0x000000, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByChannel::WorldContextObject' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByChannel, Start) == 0x000008, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByChannel::Start' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByChannel, End) == 0x000020, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByChannel::End' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByChannel, TraceChannel) == 0x000038, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByChannel::TraceChannel' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByChannel, bTraceComplex) == 0x000039, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByChannel::bTraceComplex' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByChannel, ActorsToIgnore) == 0x000040, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByChannel::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByChannel, DrawDebugType) == 0x000050, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByChannel::DrawDebugType' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByChannel, bIgnoreSelf) == 0x000051, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByChannel::bIgnoreSelf' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByChannel, __WorldContext) == 0x000058, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByChannel::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByChannel, OutHits) == 0x000060, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByChannel::OutHits' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByChannel, ReturnValue) == 0x000070, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByChannel::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByChannel, CallFunc_LineTraceMulti_OutHits) == 0x000078, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByChannel::CallFunc_LineTraceMulti_OutHits' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByChannel, CallFunc_LineTraceMulti_ReturnValue) == 0x000088, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByChannel::CallFunc_LineTraceMulti_ReturnValue' has a wrong offset!");

// Function BP_PocketWorldHelpers.BP_PocketWorldHelpers_C.PocketWorldMultiLineTraceByProfile
// 0x0080 (0x0080 - 0x0000)
struct BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByProfile final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0020(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ProfileName;                                       // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTraceComplex;                                     // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0048(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	EDrawDebugTrace                               DrawDebugType;                                     // 0x0058(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIgnoreSelf;                                       // 0x0059(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     OutHits;                                           // 0x0068(0x0010)(Parm, OutParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByProfile) == 0x000008, "Wrong alignment on BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByProfile");
static_assert(sizeof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByProfile) == 0x000080, "Wrong size on BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByProfile");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByProfile, WorldContextObject) == 0x000000, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByProfile::WorldContextObject' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByProfile, Start) == 0x000008, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByProfile::Start' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByProfile, End) == 0x000020, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByProfile::End' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByProfile, ProfileName) == 0x000038, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByProfile::ProfileName' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByProfile, bTraceComplex) == 0x000040, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByProfile::bTraceComplex' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByProfile, ActorsToIgnore) == 0x000048, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByProfile::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByProfile, DrawDebugType) == 0x000058, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByProfile::DrawDebugType' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByProfile, bIgnoreSelf) == 0x000059, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByProfile::bIgnoreSelf' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByProfile, __WorldContext) == 0x000060, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByProfile::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByProfile, OutHits) == 0x000068, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByProfile::OutHits' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByProfile, ReturnValue) == 0x000078, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceByProfile::ReturnValue' has a wrong offset!");

// Function BP_PocketWorldHelpers.BP_PocketWorldHelpers_C.PocketWorldMultiLineTraceForObjects
// 0x00A0 (0x00A0 - 0x0000)
struct BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceForObjects final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0020(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      ObjectTypes;                                       // 0x0038(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bTraceComplex;                                     // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0050(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	EDrawDebugTrace                               DrawDebugType;                                     // 0x0060(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIgnoreSelf;                                       // 0x0061(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     OutHits;                                           // 0x0070(0x0010)(Parm, OutParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0080(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_LineTraceMultiForObjects_OutHits;         // 0x0088(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceMultiForObjects_ReturnValue;     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceForObjects) == 0x000008, "Wrong alignment on BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceForObjects");
static_assert(sizeof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceForObjects) == 0x0000A0, "Wrong size on BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceForObjects");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceForObjects, WorldContextObject) == 0x000000, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceForObjects::WorldContextObject' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceForObjects, Start) == 0x000008, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceForObjects::Start' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceForObjects, End) == 0x000020, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceForObjects::End' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceForObjects, ObjectTypes) == 0x000038, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceForObjects::ObjectTypes' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceForObjects, bTraceComplex) == 0x000048, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceForObjects::bTraceComplex' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceForObjects, ActorsToIgnore) == 0x000050, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceForObjects::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceForObjects, DrawDebugType) == 0x000060, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceForObjects::DrawDebugType' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceForObjects, bIgnoreSelf) == 0x000061, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceForObjects::bIgnoreSelf' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceForObjects, __WorldContext) == 0x000068, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceForObjects::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceForObjects, OutHits) == 0x000070, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceForObjects::OutHits' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceForObjects, ReturnValue) == 0x000080, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceForObjects::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceForObjects, CallFunc_LineTraceMultiForObjects_OutHits) == 0x000088, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceForObjects::CallFunc_LineTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceForObjects, CallFunc_LineTraceMultiForObjects_ReturnValue) == 0x000098, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiLineTraceForObjects::CallFunc_LineTraceMultiForObjects_ReturnValue' has a wrong offset!");

// Function BP_PocketWorldHelpers.BP_PocketWorldHelpers_C.PocketWorldMultiSphereTraceByChannel
// 0x0098 (0x0098 - 0x0000)
struct BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0020(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Radius;                                            // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETraceTypeQuery                               TraceChannel;                                      // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTraceComplex;                                     // 0x0041(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0048(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	EDrawDebugTrace                               DrawDebugType;                                     // 0x0058(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIgnoreSelf;                                       // 0x0059(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     OutHits;                                           // 0x0068(0x0010)(Parm, OutParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_SphereTraceMulti_OutHits;                 // 0x0080(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMulti_ReturnValue;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SphereTraceMulti_Radius_ImplicitCast;     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel) == 0x000008, "Wrong alignment on BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel");
static_assert(sizeof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel) == 0x000098, "Wrong size on BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel, WorldContextObject) == 0x000000, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel::WorldContextObject' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel, Start) == 0x000008, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel::Start' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel, End) == 0x000020, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel::End' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel, Radius) == 0x000038, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel::Radius' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel, TraceChannel) == 0x000040, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel::TraceChannel' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel, bTraceComplex) == 0x000041, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel::bTraceComplex' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel, ActorsToIgnore) == 0x000048, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel, DrawDebugType) == 0x000058, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel::DrawDebugType' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel, bIgnoreSelf) == 0x000059, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel::bIgnoreSelf' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel, __WorldContext) == 0x000060, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel, OutHits) == 0x000068, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel::OutHits' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel, ReturnValue) == 0x000078, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel, CallFunc_SphereTraceMulti_OutHits) == 0x000080, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel::CallFunc_SphereTraceMulti_OutHits' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel, CallFunc_SphereTraceMulti_ReturnValue) == 0x000090, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel::CallFunc_SphereTraceMulti_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel, CallFunc_SphereTraceMulti_Radius_ImplicitCast) == 0x000094, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByChannel::CallFunc_SphereTraceMulti_Radius_ImplicitCast' has a wrong offset!");

// Function BP_PocketWorldHelpers.BP_PocketWorldHelpers_C.PocketWorldMultiSphereTraceByProfile
// 0x00A0 (0x00A0 - 0x0000)
struct BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0020(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Radius;                                            // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ProfileName;                                       // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTraceComplex;                                     // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0050(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	EDrawDebugTrace                               DrawDebugType;                                     // 0x0060(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIgnoreSelf;                                       // 0x0061(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     OutHits;                                           // 0x0070(0x0010)(Parm, OutParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0080(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_SphereTraceMultiByProfile_OutHits;        // 0x0088(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMultiByProfile_ReturnValue;    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SphereTraceMultiByProfile_Radius_ImplicitCast; // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile) == 0x000008, "Wrong alignment on BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile");
static_assert(sizeof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile) == 0x0000A0, "Wrong size on BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile, WorldContextObject) == 0x000000, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile::WorldContextObject' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile, Start) == 0x000008, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile::Start' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile, End) == 0x000020, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile::End' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile, Radius) == 0x000038, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile::Radius' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile, ProfileName) == 0x000040, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile::ProfileName' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile, bTraceComplex) == 0x000048, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile::bTraceComplex' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile, ActorsToIgnore) == 0x000050, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile, DrawDebugType) == 0x000060, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile::DrawDebugType' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile, bIgnoreSelf) == 0x000061, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile::bIgnoreSelf' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile, __WorldContext) == 0x000068, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile, OutHits) == 0x000070, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile::OutHits' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile, ReturnValue) == 0x000080, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile, CallFunc_SphereTraceMultiByProfile_OutHits) == 0x000088, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile::CallFunc_SphereTraceMultiByProfile_OutHits' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile, CallFunc_SphereTraceMultiByProfile_ReturnValue) == 0x000098, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile::CallFunc_SphereTraceMultiByProfile_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile, CallFunc_SphereTraceMultiByProfile_Radius_ImplicitCast) == 0x00009C, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceByProfile::CallFunc_SphereTraceMultiByProfile_Radius_ImplicitCast' has a wrong offset!");

// Function BP_PocketWorldHelpers.BP_PocketWorldHelpers_C.PocketWorldMultiSphereTraceForObjects
// 0x00A8 (0x00A8 - 0x0000)
struct BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0020(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Radius;                                            // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      ObjectTypes;                                       // 0x0040(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bTraceComplex;                                     // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0058(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	EDrawDebugTrace                               DrawDebugType;                                     // 0x0068(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIgnoreSelf;                                       // 0x0069(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     OutHits;                                           // 0x0078(0x0010)(Parm, OutParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_SphereTraceMultiForObjects_OutHits;       // 0x0090(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMultiForObjects_ReturnValue;   // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SphereTraceMultiForObjects_Radius_ImplicitCast; // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects) == 0x000008, "Wrong alignment on BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects");
static_assert(sizeof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects) == 0x0000A8, "Wrong size on BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects, WorldContextObject) == 0x000000, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects::WorldContextObject' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects, Start) == 0x000008, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects::Start' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects, End) == 0x000020, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects::End' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects, Radius) == 0x000038, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects::Radius' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects, ObjectTypes) == 0x000040, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects::ObjectTypes' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects, bTraceComplex) == 0x000050, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects::bTraceComplex' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects, ActorsToIgnore) == 0x000058, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects, DrawDebugType) == 0x000068, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects::DrawDebugType' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects, bIgnoreSelf) == 0x000069, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects::bIgnoreSelf' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects, __WorldContext) == 0x000070, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects, OutHits) == 0x000078, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects::OutHits' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects, ReturnValue) == 0x000088, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects, CallFunc_SphereTraceMultiForObjects_OutHits) == 0x000090, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects::CallFunc_SphereTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects, CallFunc_SphereTraceMultiForObjects_ReturnValue) == 0x0000A0, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects::CallFunc_SphereTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects, CallFunc_SphereTraceMultiForObjects_Radius_ImplicitCast) == 0x0000A4, "Member 'BP_PocketWorldHelpers_C_PocketWorldMultiSphereTraceForObjects::CallFunc_SphereTraceMultiForObjects_Radius_ImplicitCast' has a wrong offset!");

// Function BP_PocketWorldHelpers.BP_PocketWorldHelpers_C.PocketWorldSphereOverlapActors
// 0x0088 (0x0088 - 0x0000)
struct BP_PocketWorldHelpers_C_PocketWorldSphereOverlapActors final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpherePos;                                         // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SphereRadius;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      ObjectTypes;                                       // 0x0028(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UClass*                                 ActorClassFilter;                                  // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0040(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         OutActors;                                         // 0x0058(0x0010)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0070(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast; // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PocketWorldHelpers_C_PocketWorldSphereOverlapActors) == 0x000008, "Wrong alignment on BP_PocketWorldHelpers_C_PocketWorldSphereOverlapActors");
static_assert(sizeof(BP_PocketWorldHelpers_C_PocketWorldSphereOverlapActors) == 0x000088, "Wrong size on BP_PocketWorldHelpers_C_PocketWorldSphereOverlapActors");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereOverlapActors, WorldContextObject) == 0x000000, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereOverlapActors::WorldContextObject' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereOverlapActors, SpherePos) == 0x000008, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereOverlapActors::SpherePos' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereOverlapActors, SphereRadius) == 0x000020, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereOverlapActors::SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereOverlapActors, ObjectTypes) == 0x000028, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereOverlapActors::ObjectTypes' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereOverlapActors, ActorClassFilter) == 0x000038, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereOverlapActors::ActorClassFilter' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereOverlapActors, ActorsToIgnore) == 0x000040, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereOverlapActors::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereOverlapActors, __WorldContext) == 0x000050, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereOverlapActors::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereOverlapActors, OutActors) == 0x000058, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereOverlapActors::OutActors' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereOverlapActors, ReturnValue) == 0x000068, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereOverlapActors::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereOverlapActors, CallFunc_SphereOverlapActors_OutActors) == 0x000070, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereOverlapActors::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereOverlapActors, CallFunc_SphereOverlapActors_ReturnValue) == 0x000080, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereOverlapActors::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereOverlapActors, CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast) == 0x000084, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereOverlapActors::CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast' has a wrong offset!");

// Function BP_PocketWorldHelpers.BP_PocketWorldHelpers_C.PocketWorldSphereTraceByChannel
// 0x0258 (0x0258 - 0x0000)
struct BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0020(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Radius;                                            // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETraceTypeQuery                               TraceChannel;                                      // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTraceComplex;                                     // 0x0041(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0048(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	EDrawDebugTrace                               DrawDebugType;                                     // 0x0058(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIgnoreSelf;                                       // 0x0059(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             OutHit;                                            // 0x0068(0x00F0)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0158(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x0160(0x00F0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SphereTraceSingle_Radius_ImplicitCast;    // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel) == 0x000008, "Wrong alignment on BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel");
static_assert(sizeof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel) == 0x000258, "Wrong size on BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel, WorldContextObject) == 0x000000, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel::WorldContextObject' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel, Start) == 0x000008, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel::Start' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel, End) == 0x000020, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel::End' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel, Radius) == 0x000038, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel::Radius' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel, TraceChannel) == 0x000040, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel::TraceChannel' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel, bTraceComplex) == 0x000041, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel::bTraceComplex' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel, ActorsToIgnore) == 0x000048, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel, DrawDebugType) == 0x000058, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel::DrawDebugType' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel, bIgnoreSelf) == 0x000059, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel::bIgnoreSelf' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel, __WorldContext) == 0x000060, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel, OutHit) == 0x000068, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel::OutHit' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel, ReturnValue) == 0x000158, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel, CallFunc_SphereTraceSingle_OutHit) == 0x000160, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel, CallFunc_SphereTraceSingle_ReturnValue) == 0x000250, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel, CallFunc_SphereTraceSingle_Radius_ImplicitCast) == 0x000254, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceByChannel::CallFunc_SphereTraceSingle_Radius_ImplicitCast' has a wrong offset!");

// Function BP_PocketWorldHelpers.BP_PocketWorldHelpers_C.PocketWorldSphereTraceByProfile
// 0x0260 (0x0260 - 0x0000)
struct BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0020(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Radius;                                            // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ProfileName;                                       // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTraceComplex;                                     // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0050(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	EDrawDebugTrace                               DrawDebugType;                                     // 0x0060(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIgnoreSelf;                                       // 0x0061(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             OutHit;                                            // 0x0070(0x00F0)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0160(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_SphereTraceSingleByProfile_OutHit;        // 0x0168(0x00F0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleByProfile_ReturnValue;   // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SphereTraceSingleByProfile_Radius_ImplicitCast; // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile) == 0x000008, "Wrong alignment on BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile");
static_assert(sizeof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile) == 0x000260, "Wrong size on BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile, WorldContextObject) == 0x000000, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile::WorldContextObject' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile, Start) == 0x000008, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile::Start' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile, End) == 0x000020, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile::End' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile, Radius) == 0x000038, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile::Radius' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile, ProfileName) == 0x000040, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile::ProfileName' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile, bTraceComplex) == 0x000048, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile::bTraceComplex' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile, ActorsToIgnore) == 0x000050, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile, DrawDebugType) == 0x000060, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile::DrawDebugType' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile, bIgnoreSelf) == 0x000061, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile::bIgnoreSelf' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile, __WorldContext) == 0x000068, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile, OutHit) == 0x000070, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile::OutHit' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile, ReturnValue) == 0x000160, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile, CallFunc_SphereTraceSingleByProfile_OutHit) == 0x000168, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile::CallFunc_SphereTraceSingleByProfile_OutHit' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile, CallFunc_SphereTraceSingleByProfile_ReturnValue) == 0x000258, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile::CallFunc_SphereTraceSingleByProfile_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile, CallFunc_SphereTraceSingleByProfile_Radius_ImplicitCast) == 0x00025C, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceByProfile::CallFunc_SphereTraceSingleByProfile_Radius_ImplicitCast' has a wrong offset!");

// Function BP_PocketWorldHelpers.BP_PocketWorldHelpers_C.PocketWorldSphereTraceForObjects
// 0x0268 (0x0268 - 0x0000)
struct BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0020(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Radius;                                            // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      ObjectTypes;                                       // 0x0040(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bTraceComplex;                                     // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0058(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	EDrawDebugTrace                               DrawDebugType;                                     // 0x0068(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIgnoreSelf;                                       // 0x0069(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             OutHit;                                            // 0x0078(0x00F0)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0168(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x0170(0x00F0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SphereTraceSingleForObjects_Radius_ImplicitCast; // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects) == 0x000008, "Wrong alignment on BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects");
static_assert(sizeof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects) == 0x000268, "Wrong size on BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects, WorldContextObject) == 0x000000, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects::WorldContextObject' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects, Start) == 0x000008, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects::Start' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects, End) == 0x000020, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects::End' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects, Radius) == 0x000038, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects::Radius' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects, ObjectTypes) == 0x000040, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects::ObjectTypes' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects, bTraceComplex) == 0x000050, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects::bTraceComplex' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects, ActorsToIgnore) == 0x000058, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects, DrawDebugType) == 0x000068, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects::DrawDebugType' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects, bIgnoreSelf) == 0x000069, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects::bIgnoreSelf' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects, __WorldContext) == 0x000070, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects, OutHit) == 0x000078, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects::OutHit' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects, ReturnValue) == 0x000168, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x000170, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x000260, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects, CallFunc_SphereTraceSingleForObjects_Radius_ImplicitCast) == 0x000264, "Member 'BP_PocketWorldHelpers_C_PocketWorldSphereTraceForObjects::CallFunc_SphereTraceSingleForObjects_Radius_ImplicitCast' has a wrong offset!");

}

