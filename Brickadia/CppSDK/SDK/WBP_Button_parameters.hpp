#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Button

#include "Basic.hpp"

#include "Brickadia_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK::Params
{

// Function WBP_Button.WBP_Button_C.ApplyButtonIcon
// 0x0038 (0x0038 - 0x0000)
struct WBP_Button_C_ApplyButtonIcon final
{
public:
	struct FMargin                                K2Node_MakeStruct_None;                            // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_None_1;                          // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_1;    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Button_C_ApplyButtonIcon) == 0x000008, "Wrong alignment on WBP_Button_C_ApplyButtonIcon");
static_assert(sizeof(WBP_Button_C_ApplyButtonIcon) == 0x000038, "Wrong size on WBP_Button_C_ApplyButtonIcon");
static_assert(offsetof(WBP_Button_C_ApplyButtonIcon, K2Node_MakeStruct_None) == 0x000000, "Member 'WBP_Button_C_ApplyButtonIcon::K2Node_MakeStruct_None' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ApplyButtonIcon, K2Node_MakeStruct_None_1) == 0x000010, "Member 'WBP_Button_C_ApplyButtonIcon::K2Node_MakeStruct_None_1' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ApplyButtonIcon, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WBP_Button_C_ApplyButtonIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ApplyButtonIcon, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x000028, "Member 'WBP_Button_C_ApplyButtonIcon::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ApplyButtonIcon, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_1) == 0x000030, "Member 'WBP_Button_C_ApplyButtonIcon::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_1' has a wrong offset!");

// Function WBP_Button.WBP_Button_C.ApplyButtonStyle
// 0x0430 (0x0430 - 0x0000)
struct WBP_Button_C_ApplyButtonStyle final
{
public:
	class UClass*                                 LV_ColoredBaseStyle;                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable;                               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_1;                             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_2;                             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EBRDialogButtonStyle                          Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable_3;                             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_4;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_5;                             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_6;                             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_7;                             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_8;                             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FButtonStyle                           CallFunc_RecolorButtonStyle_ReturnValue;           // 0x0060(0x0370)()
	class UClass*                                 Temp_class_Variable_9;                             // 0x03D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EBRDialogButtonStyle                          Temp_byte_Variable_1;                              // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UButtonSlot*                            K2Node_DynamicCast_AsButton_Slot;                  // 0x03E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9[0x3];                                      // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_None;                            // 0x03EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_None_1;                          // 0x03FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x040C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40D[0x3];                                      // 0x040D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_Select_Default;                             // 0x0410(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                 K2Node_Select_Default_1;                           // 0x0420(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default_2;                           // 0x0428(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Button_C_ApplyButtonStyle) == 0x000010, "Wrong alignment on WBP_Button_C_ApplyButtonStyle");
static_assert(sizeof(WBP_Button_C_ApplyButtonStyle) == 0x000430, "Wrong size on WBP_Button_C_ApplyButtonStyle");
static_assert(offsetof(WBP_Button_C_ApplyButtonStyle, LV_ColoredBaseStyle) == 0x000000, "Member 'WBP_Button_C_ApplyButtonStyle::LV_ColoredBaseStyle' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ApplyButtonStyle, Temp_class_Variable) == 0x000008, "Member 'WBP_Button_C_ApplyButtonStyle::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ApplyButtonStyle, Temp_class_Variable_1) == 0x000010, "Member 'WBP_Button_C_ApplyButtonStyle::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ApplyButtonStyle, Temp_class_Variable_2) == 0x000018, "Member 'WBP_Button_C_ApplyButtonStyle::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ApplyButtonStyle, Temp_byte_Variable) == 0x000020, "Member 'WBP_Button_C_ApplyButtonStyle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ApplyButtonStyle, Temp_class_Variable_3) == 0x000028, "Member 'WBP_Button_C_ApplyButtonStyle::Temp_class_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ApplyButtonStyle, Temp_class_Variable_4) == 0x000030, "Member 'WBP_Button_C_ApplyButtonStyle::Temp_class_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ApplyButtonStyle, Temp_class_Variable_5) == 0x000038, "Member 'WBP_Button_C_ApplyButtonStyle::Temp_class_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ApplyButtonStyle, Temp_class_Variable_6) == 0x000040, "Member 'WBP_Button_C_ApplyButtonStyle::Temp_class_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ApplyButtonStyle, Temp_class_Variable_7) == 0x000048, "Member 'WBP_Button_C_ApplyButtonStyle::Temp_class_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ApplyButtonStyle, Temp_class_Variable_8) == 0x000050, "Member 'WBP_Button_C_ApplyButtonStyle::Temp_class_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ApplyButtonStyle, CallFunc_RecolorButtonStyle_ReturnValue) == 0x000060, "Member 'WBP_Button_C_ApplyButtonStyle::CallFunc_RecolorButtonStyle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ApplyButtonStyle, Temp_class_Variable_9) == 0x0003D0, "Member 'WBP_Button_C_ApplyButtonStyle::Temp_class_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ApplyButtonStyle, Temp_byte_Variable_1) == 0x0003D8, "Member 'WBP_Button_C_ApplyButtonStyle::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ApplyButtonStyle, K2Node_DynamicCast_AsButton_Slot) == 0x0003E0, "Member 'WBP_Button_C_ApplyButtonStyle::K2Node_DynamicCast_AsButton_Slot' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ApplyButtonStyle, K2Node_DynamicCast_bSuccess) == 0x0003E8, "Member 'WBP_Button_C_ApplyButtonStyle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ApplyButtonStyle, K2Node_MakeStruct_None) == 0x0003EC, "Member 'WBP_Button_C_ApplyButtonStyle::K2Node_MakeStruct_None' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ApplyButtonStyle, K2Node_MakeStruct_None_1) == 0x0003FC, "Member 'WBP_Button_C_ApplyButtonStyle::K2Node_MakeStruct_None_1' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ApplyButtonStyle, Temp_bool_Variable) == 0x00040C, "Member 'WBP_Button_C_ApplyButtonStyle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ApplyButtonStyle, K2Node_Select_Default) == 0x000410, "Member 'WBP_Button_C_ApplyButtonStyle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ApplyButtonStyle, K2Node_Select_Default_1) == 0x000420, "Member 'WBP_Button_C_ApplyButtonStyle::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ApplyButtonStyle, K2Node_Select_Default_2) == 0x000428, "Member 'WBP_Button_C_ApplyButtonStyle::K2Node_Select_Default_2' has a wrong offset!");

// Function WBP_Button.WBP_Button_C.ExecuteUbergraph_WBP_Button
// 0x0020 (0x0020 - 0x0000)
struct WBP_Button_C_ExecuteUbergraph_WBP_Button final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_3;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_4;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_5;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UButtonSlot*                            K2Node_DynamicCast_AsButton_Slot;                  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          K2Node_Select_Default;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Button_C_ExecuteUbergraph_WBP_Button) == 0x000008, "Wrong alignment on WBP_Button_C_ExecuteUbergraph_WBP_Button");
static_assert(sizeof(WBP_Button_C_ExecuteUbergraph_WBP_Button) == 0x000020, "Wrong size on WBP_Button_C_ExecuteUbergraph_WBP_Button");
static_assert(offsetof(WBP_Button_C_ExecuteUbergraph_WBP_Button, EntryPoint) == 0x000000, "Member 'WBP_Button_C_ExecuteUbergraph_WBP_Button::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ExecuteUbergraph_WBP_Button, Temp_byte_Variable) == 0x000004, "Member 'WBP_Button_C_ExecuteUbergraph_WBP_Button::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ExecuteUbergraph_WBP_Button, Temp_byte_Variable_1) == 0x000005, "Member 'WBP_Button_C_ExecuteUbergraph_WBP_Button::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ExecuteUbergraph_WBP_Button, Temp_byte_Variable_2) == 0x000006, "Member 'WBP_Button_C_ExecuteUbergraph_WBP_Button::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ExecuteUbergraph_WBP_Button, Temp_byte_Variable_3) == 0x000007, "Member 'WBP_Button_C_ExecuteUbergraph_WBP_Button::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ExecuteUbergraph_WBP_Button, Temp_byte_Variable_4) == 0x000008, "Member 'WBP_Button_C_ExecuteUbergraph_WBP_Button::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ExecuteUbergraph_WBP_Button, Temp_byte_Variable_5) == 0x000009, "Member 'WBP_Button_C_ExecuteUbergraph_WBP_Button::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ExecuteUbergraph_WBP_Button, K2Node_DynamicCast_AsButton_Slot) == 0x000010, "Member 'WBP_Button_C_ExecuteUbergraph_WBP_Button::K2Node_DynamicCast_AsButton_Slot' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ExecuteUbergraph_WBP_Button, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_Button_C_ExecuteUbergraph_WBP_Button::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ExecuteUbergraph_WBP_Button, K2Node_Select_Default) == 0x000019, "Member 'WBP_Button_C_ExecuteUbergraph_WBP_Button::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_ExecuteUbergraph_WBP_Button, K2Node_Event_IsDesignTime) == 0x00001A, "Member 'WBP_Button_C_ExecuteUbergraph_WBP_Button::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_Button.WBP_Button_C.OnMouseButtonDown
// 0x02E0 (0x02E0 - 0x0000)
struct WBP_Button_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue; // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0170(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0228(0x00B8)()
};
static_assert(alignof(WBP_Button_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on WBP_Button_C_OnMouseButtonDown");
static_assert(sizeof(WBP_Button_C_OnMouseButtonDown) == 0x0002E0, "Wrong size on WBP_Button_C_OnMouseButtonDown");
static_assert(offsetof(WBP_Button_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'WBP_Button_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'WBP_Button_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_OnMouseButtonDown, ReturnValue) == 0x0000B0, "Member 'WBP_Button_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_OnMouseButtonDown, CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue) == 0x000168, "Member 'WBP_Button_C_OnMouseButtonDown::CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_OnMouseButtonDown, CallFunc_Unhandled_ReturnValue) == 0x000170, "Member 'WBP_Button_C_OnMouseButtonDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000228, "Member 'WBP_Button_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_Button.WBP_Button_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Button_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Button_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Button_C_PreConstruct");
static_assert(sizeof(WBP_Button_C_PreConstruct) == 0x000001, "Wrong size on WBP_Button_C_PreConstruct");
static_assert(offsetof(WBP_Button_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Button_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Button.WBP_Button_C.SetButtonEnabled
// 0x0001 (0x0001 - 0x0000)
struct WBP_Button_C_SetButtonEnabled final
{
public:
	bool                                          bEnabled_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Button_C_SetButtonEnabled) == 0x000001, "Wrong alignment on WBP_Button_C_SetButtonEnabled");
static_assert(sizeof(WBP_Button_C_SetButtonEnabled) == 0x000001, "Wrong size on WBP_Button_C_SetButtonEnabled");
static_assert(offsetof(WBP_Button_C_SetButtonEnabled, bEnabled_0) == 0x000000, "Member 'WBP_Button_C_SetButtonEnabled::bEnabled_0' has a wrong offset!");

// Function WBP_Button.WBP_Button_C.SetButtonIcon
// 0x0008 (0x0008 - 0x0000)
struct WBP_Button_C_SetButtonIcon final
{
public:
	class UTexture2D*                             Icon_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Button_C_SetButtonIcon) == 0x000008, "Wrong alignment on WBP_Button_C_SetButtonIcon");
static_assert(sizeof(WBP_Button_C_SetButtonIcon) == 0x000008, "Wrong size on WBP_Button_C_SetButtonIcon");
static_assert(offsetof(WBP_Button_C_SetButtonIcon, Icon_0) == 0x000000, "Member 'WBP_Button_C_SetButtonIcon::Icon_0' has a wrong offset!");

// Function WBP_Button.WBP_Button_C.SetButtonStyle
// 0x0002 (0x0002 - 0x0000)
struct WBP_Button_C_SetButtonStyle final
{
public:
	EBRDialogButtonStyle                          Style_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRound_0;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Button_C_SetButtonStyle) == 0x000001, "Wrong alignment on WBP_Button_C_SetButtonStyle");
static_assert(sizeof(WBP_Button_C_SetButtonStyle) == 0x000002, "Wrong size on WBP_Button_C_SetButtonStyle");
static_assert(offsetof(WBP_Button_C_SetButtonStyle, Style_0) == 0x000000, "Member 'WBP_Button_C_SetButtonStyle::Style_0' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_SetButtonStyle, bRound_0) == 0x000001, "Member 'WBP_Button_C_SetButtonStyle::bRound_0' has a wrong offset!");

// Function WBP_Button.WBP_Button_C.SetButtonStyle_CustomColor
// 0x0020 (0x0020 - 0x0000)
struct WBP_Button_C_SetButtonStyle_CustomColor final
{
public:
	bool                                          bRound_0;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Color;                                             // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 LV_ColoredBaseStyle;                               // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Button_C_SetButtonStyle_CustomColor) == 0x000008, "Wrong alignment on WBP_Button_C_SetButtonStyle_CustomColor");
static_assert(sizeof(WBP_Button_C_SetButtonStyle_CustomColor) == 0x000020, "Wrong size on WBP_Button_C_SetButtonStyle_CustomColor");
static_assert(offsetof(WBP_Button_C_SetButtonStyle_CustomColor, bRound_0) == 0x000000, "Member 'WBP_Button_C_SetButtonStyle_CustomColor::bRound_0' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_SetButtonStyle_CustomColor, Color) == 0x000004, "Member 'WBP_Button_C_SetButtonStyle_CustomColor::Color' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_SetButtonStyle_CustomColor, LV_ColoredBaseStyle) == 0x000018, "Member 'WBP_Button_C_SetButtonStyle_CustomColor::LV_ColoredBaseStyle' has a wrong offset!");

// Function WBP_Button.WBP_Button_C.SetButtonText
// 0x0010 (0x0010 - 0x0000)
struct WBP_Button_C_SetButtonText final
{
public:
	class FText                                   Text_0;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_Button_C_SetButtonText) == 0x000008, "Wrong alignment on WBP_Button_C_SetButtonText");
static_assert(sizeof(WBP_Button_C_SetButtonText) == 0x000010, "Wrong size on WBP_Button_C_SetButtonText");
static_assert(offsetof(WBP_Button_C_SetButtonText, Text_0) == 0x000000, "Member 'WBP_Button_C_SetButtonText::Text_0' has a wrong offset!");

// Function WBP_Button.WBP_Button_C.Setup
// 0x0020 (0x0020 - 0x0000)
struct WBP_Button_C_Setup final
{
public:
	class FText                                   Text_0;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	EBRDialogButtonStyle                          Style_0;                                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRound_0;                                          // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Icon_0;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Button_C_Setup) == 0x000008, "Wrong alignment on WBP_Button_C_Setup");
static_assert(sizeof(WBP_Button_C_Setup) == 0x000020, "Wrong size on WBP_Button_C_Setup");
static_assert(offsetof(WBP_Button_C_Setup, Text_0) == 0x000000, "Member 'WBP_Button_C_Setup::Text_0' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_Setup, Style_0) == 0x000010, "Member 'WBP_Button_C_Setup::Style_0' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_Setup, bRound_0) == 0x000011, "Member 'WBP_Button_C_Setup::bRound_0' has a wrong offset!");
static_assert(offsetof(WBP_Button_C_Setup, Icon_0) == 0x000018, "Member 'WBP_Button_C_Setup::Icon_0' has a wrong offset!");

}

