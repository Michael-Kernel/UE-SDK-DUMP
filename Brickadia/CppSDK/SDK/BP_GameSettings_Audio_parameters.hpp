#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameSettings_Audio

#include "Basic.hpp"

#include "E_SoundPresets_structs.hpp"
#include "E_BuildMusicSetting_structs.hpp"


namespace SDK::Params
{

// Function BP_GameSettings_Audio.BP_GameSettings_Audio_C.ExecuteUbergraph_BP_GameSettings_Audio
// 0x0004 (0x0004 - 0x0000)
struct BP_GameSettings_Audio_C_ExecuteUbergraph_BP_GameSettings_Audio final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameSettings_Audio_C_ExecuteUbergraph_BP_GameSettings_Audio) == 0x000004, "Wrong alignment on BP_GameSettings_Audio_C_ExecuteUbergraph_BP_GameSettings_Audio");
static_assert(sizeof(BP_GameSettings_Audio_C_ExecuteUbergraph_BP_GameSettings_Audio) == 0x000004, "Wrong size on BP_GameSettings_Audio_C_ExecuteUbergraph_BP_GameSettings_Audio");
static_assert(offsetof(BP_GameSettings_Audio_C_ExecuteUbergraph_BP_GameSettings_Audio, EntryPoint) == 0x000000, "Member 'BP_GameSettings_Audio_C_ExecuteUbergraph_BP_GameSettings_Audio::EntryPoint' has a wrong offset!");

// Function BP_GameSettings_Audio.BP_GameSettings_Audio_C.SetEnableBackgroundMusic
// 0x0001 (0x0001 - 0x0000)
struct BP_GameSettings_Audio_C_SetEnableBackgroundMusic final
{
public:
	E_BuildMusicSetting                           bNewValue;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameSettings_Audio_C_SetEnableBackgroundMusic) == 0x000001, "Wrong alignment on BP_GameSettings_Audio_C_SetEnableBackgroundMusic");
static_assert(sizeof(BP_GameSettings_Audio_C_SetEnableBackgroundMusic) == 0x000001, "Wrong size on BP_GameSettings_Audio_C_SetEnableBackgroundMusic");
static_assert(offsetof(BP_GameSettings_Audio_C_SetEnableBackgroundMusic, bNewValue) == 0x000000, "Member 'BP_GameSettings_Audio_C_SetEnableBackgroundMusic::bNewValue' has a wrong offset!");

// Function BP_GameSettings_Audio.BP_GameSettings_Audio_C.SetEnableUnfocusedAudio
// 0x0018 (0x0018 - 0x0000)
struct BP_GameSettings_Audio_C_SetEnableUnfocusedAudio final
{
public:
	bool                                          bNewValue;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetUnfocusedVolumeMultiplier_NewMultiplier_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameSettings_Audio_C_SetEnableUnfocusedAudio) == 0x000008, "Wrong alignment on BP_GameSettings_Audio_C_SetEnableUnfocusedAudio");
static_assert(sizeof(BP_GameSettings_Audio_C_SetEnableUnfocusedAudio) == 0x000018, "Wrong size on BP_GameSettings_Audio_C_SetEnableUnfocusedAudio");
static_assert(offsetof(BP_GameSettings_Audio_C_SetEnableUnfocusedAudio, bNewValue) == 0x000000, "Member 'BP_GameSettings_Audio_C_SetEnableUnfocusedAudio::bNewValue' has a wrong offset!");
static_assert(offsetof(BP_GameSettings_Audio_C_SetEnableUnfocusedAudio, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'BP_GameSettings_Audio_C_SetEnableUnfocusedAudio::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameSettings_Audio_C_SetEnableUnfocusedAudio, CallFunc_SetUnfocusedVolumeMultiplier_NewMultiplier_ImplicitCast) == 0x000010, "Member 'BP_GameSettings_Audio_C_SetEnableUnfocusedAudio::CallFunc_SetUnfocusedVolumeMultiplier_NewMultiplier_ImplicitCast' has a wrong offset!");

// Function BP_GameSettings_Audio.BP_GameSettings_Audio_C.SetInterfaceVolume
// 0x0018 (0x0018 - 0x0000)
struct BP_GameSettings_Audio_C_SetInterfaceVolume final
{
public:
	double                                        NewValue;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameSettings_Audio_C_SetInterfaceVolume) == 0x000008, "Wrong alignment on BP_GameSettings_Audio_C_SetInterfaceVolume");
static_assert(sizeof(BP_GameSettings_Audio_C_SetInterfaceVolume) == 0x000018, "Wrong size on BP_GameSettings_Audio_C_SetInterfaceVolume");
static_assert(offsetof(BP_GameSettings_Audio_C_SetInterfaceVolume, NewValue) == 0x000000, "Member 'BP_GameSettings_Audio_C_SetInterfaceVolume::NewValue' has a wrong offset!");
static_assert(offsetof(BP_GameSettings_Audio_C_SetInterfaceVolume, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_GameSettings_Audio_C_SetInterfaceVolume::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameSettings_Audio_C_SetInterfaceVolume, CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast) == 0x000010, "Member 'BP_GameSettings_Audio_C_SetInterfaceVolume::CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast' has a wrong offset!");

// Function BP_GameSettings_Audio.BP_GameSettings_Audio_C.SetItemVolume
// 0x0018 (0x0018 - 0x0000)
struct BP_GameSettings_Audio_C_SetItemVolume final
{
public:
	double                                        NewValue;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameSettings_Audio_C_SetItemVolume) == 0x000008, "Wrong alignment on BP_GameSettings_Audio_C_SetItemVolume");
static_assert(sizeof(BP_GameSettings_Audio_C_SetItemVolume) == 0x000018, "Wrong size on BP_GameSettings_Audio_C_SetItemVolume");
static_assert(offsetof(BP_GameSettings_Audio_C_SetItemVolume, NewValue) == 0x000000, "Member 'BP_GameSettings_Audio_C_SetItemVolume::NewValue' has a wrong offset!");
static_assert(offsetof(BP_GameSettings_Audio_C_SetItemVolume, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_GameSettings_Audio_C_SetItemVolume::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameSettings_Audio_C_SetItemVolume, CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast) == 0x000010, "Member 'BP_GameSettings_Audio_C_SetItemVolume::CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast' has a wrong offset!");

// Function BP_GameSettings_Audio.BP_GameSettings_Audio_C.SetMasterVolume
// 0x0018 (0x0018 - 0x0000)
struct BP_GameSettings_Audio_C_SetMasterVolume final
{
public:
	double                                        NewValue;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameSettings_Audio_C_SetMasterVolume) == 0x000008, "Wrong alignment on BP_GameSettings_Audio_C_SetMasterVolume");
static_assert(sizeof(BP_GameSettings_Audio_C_SetMasterVolume) == 0x000018, "Wrong size on BP_GameSettings_Audio_C_SetMasterVolume");
static_assert(offsetof(BP_GameSettings_Audio_C_SetMasterVolume, NewValue) == 0x000000, "Member 'BP_GameSettings_Audio_C_SetMasterVolume::NewValue' has a wrong offset!");
static_assert(offsetof(BP_GameSettings_Audio_C_SetMasterVolume, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_GameSettings_Audio_C_SetMasterVolume::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameSettings_Audio_C_SetMasterVolume, CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast) == 0x000010, "Member 'BP_GameSettings_Audio_C_SetMasterVolume::CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast' has a wrong offset!");

// Function BP_GameSettings_Audio.BP_GameSettings_Audio_C.SetMusicVolume
// 0x0018 (0x0018 - 0x0000)
struct BP_GameSettings_Audio_C_SetMusicVolume final
{
public:
	double                                        NewValue;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameSettings_Audio_C_SetMusicVolume) == 0x000008, "Wrong alignment on BP_GameSettings_Audio_C_SetMusicVolume");
static_assert(sizeof(BP_GameSettings_Audio_C_SetMusicVolume) == 0x000018, "Wrong size on BP_GameSettings_Audio_C_SetMusicVolume");
static_assert(offsetof(BP_GameSettings_Audio_C_SetMusicVolume, NewValue) == 0x000000, "Member 'BP_GameSettings_Audio_C_SetMusicVolume::NewValue' has a wrong offset!");
static_assert(offsetof(BP_GameSettings_Audio_C_SetMusicVolume, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_GameSettings_Audio_C_SetMusicVolume::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameSettings_Audio_C_SetMusicVolume, CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast) == 0x000010, "Member 'BP_GameSettings_Audio_C_SetMusicVolume::CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast' has a wrong offset!");

// Function BP_GameSettings_Audio.BP_GameSettings_Audio_C.SetPhysicsVolume
// 0x0018 (0x0018 - 0x0000)
struct BP_GameSettings_Audio_C_SetPhysicsVolume final
{
public:
	double                                        NewValue;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameSettings_Audio_C_SetPhysicsVolume) == 0x000008, "Wrong alignment on BP_GameSettings_Audio_C_SetPhysicsVolume");
static_assert(sizeof(BP_GameSettings_Audio_C_SetPhysicsVolume) == 0x000018, "Wrong size on BP_GameSettings_Audio_C_SetPhysicsVolume");
static_assert(offsetof(BP_GameSettings_Audio_C_SetPhysicsVolume, NewValue) == 0x000000, "Member 'BP_GameSettings_Audio_C_SetPhysicsVolume::NewValue' has a wrong offset!");
static_assert(offsetof(BP_GameSettings_Audio_C_SetPhysicsVolume, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_GameSettings_Audio_C_SetPhysicsVolume::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameSettings_Audio_C_SetPhysicsVolume, CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast) == 0x000010, "Member 'BP_GameSettings_Audio_C_SetPhysicsVolume::CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast' has a wrong offset!");

// Function BP_GameSettings_Audio.BP_GameSettings_Audio_C.SetSoundEffectsVolume
// 0x0018 (0x0018 - 0x0000)
struct BP_GameSettings_Audio_C_SetSoundEffectsVolume final
{
public:
	double                                        NewValue;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameSettings_Audio_C_SetSoundEffectsVolume) == 0x000008, "Wrong alignment on BP_GameSettings_Audio_C_SetSoundEffectsVolume");
static_assert(sizeof(BP_GameSettings_Audio_C_SetSoundEffectsVolume) == 0x000018, "Wrong size on BP_GameSettings_Audio_C_SetSoundEffectsVolume");
static_assert(offsetof(BP_GameSettings_Audio_C_SetSoundEffectsVolume, NewValue) == 0x000000, "Member 'BP_GameSettings_Audio_C_SetSoundEffectsVolume::NewValue' has a wrong offset!");
static_assert(offsetof(BP_GameSettings_Audio_C_SetSoundEffectsVolume, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_GameSettings_Audio_C_SetSoundEffectsVolume::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameSettings_Audio_C_SetSoundEffectsVolume, CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast) == 0x000010, "Member 'BP_GameSettings_Audio_C_SetSoundEffectsVolume::CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast' has a wrong offset!");

// Function BP_GameSettings_Audio.BP_GameSettings_Audio_C.SetSoundPreset
// 0x0002 (0x0002 - 0x0000)
struct BP_GameSettings_Audio_C_SetSoundPreset final
{
public:
	E_SoundPresets                                NewPreset;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameSettings_Audio_C_SetSoundPreset) == 0x000001, "Wrong alignment on BP_GameSettings_Audio_C_SetSoundPreset");
static_assert(sizeof(BP_GameSettings_Audio_C_SetSoundPreset) == 0x000002, "Wrong size on BP_GameSettings_Audio_C_SetSoundPreset");
static_assert(offsetof(BP_GameSettings_Audio_C_SetSoundPreset, NewPreset) == 0x000000, "Member 'BP_GameSettings_Audio_C_SetSoundPreset::NewPreset' has a wrong offset!");
static_assert(offsetof(BP_GameSettings_Audio_C_SetSoundPreset, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_GameSettings_Audio_C_SetSoundPreset::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_GameSettings_Audio.BP_GameSettings_Audio_C.SetVehicleVolume
// 0x0018 (0x0018 - 0x0000)
struct BP_GameSettings_Audio_C_SetVehicleVolume final
{
public:
	double                                        NewValue;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameSettings_Audio_C_SetVehicleVolume) == 0x000008, "Wrong alignment on BP_GameSettings_Audio_C_SetVehicleVolume");
static_assert(sizeof(BP_GameSettings_Audio_C_SetVehicleVolume) == 0x000018, "Wrong size on BP_GameSettings_Audio_C_SetVehicleVolume");
static_assert(offsetof(BP_GameSettings_Audio_C_SetVehicleVolume, NewValue) == 0x000000, "Member 'BP_GameSettings_Audio_C_SetVehicleVolume::NewValue' has a wrong offset!");
static_assert(offsetof(BP_GameSettings_Audio_C_SetVehicleVolume, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_GameSettings_Audio_C_SetVehicleVolume::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameSettings_Audio_C_SetVehicleVolume, CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast) == 0x000010, "Member 'BP_GameSettings_Audio_C_SetVehicleVolume::CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast' has a wrong offset!");

}

