#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UDW_and_Weather_Override_Volume_Interface

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "UDS_RandomWeatherTiming_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass UDW_and_Weather_Override_Volume_Interface.UDW_and_Weather_Override_Volume_Interface_C
// 0x0000 (0x0028 - 0x0028)
class IUDW_and_Weather_Override_Volume_Interface_C final : public IInterface
{
public:
	void Check_for_Material_Refresh();
	void Force_WOV_Tick();
	void Get_Random_Weather_Mode(EUDS_RandomWeatherTiming* Mode);
	void Get_Random_Weather_Probability_Maps(TMap<class UUDS_Weather_Settings_C*, double>* Spring, TMap<class UUDS_Weather_Settings_C*, double>* Summer, TMap<class UUDS_Weather_Settings_C*, double>* Autumn, TMap<class UUDS_Weather_Settings_C*, double>* Winter);
	void Get_Season_Temperature_Ranges(struct FVector2D* Spring, struct FVector2D* Summer, struct FVector2D* Autumn, struct FVector2D* Winter);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UDW_and_Weather_Override_Volume_Interface_C">();
	}
	static class IUDW_and_Weather_Override_Volume_Interface_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<IUDW_and_Weather_Override_Volume_Interface_C>();
	}
};
static_assert(alignof(IUDW_and_Weather_Override_Volume_Interface_C) == 0x000008, "Wrong alignment on IUDW_and_Weather_Override_Volume_Interface_C");
static_assert(sizeof(IUDW_and_Weather_Override_Volume_Interface_C) == 0x000028, "Wrong size on IUDW_and_Weather_Override_Volume_Interface_C");

}

