#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ColorPalettePreview

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Brickadia_structs.hpp"


namespace SDK::Params
{

// Function WBP_ColorPalettePreview.WBP_ColorPalettePreview_C.AddColorGroup
// 0x0090 (0x0090 - 0x0000)
struct WBP_ColorPalettePreview_C_AddColorGroup final
{
public:
	struct FBRColorPaletteGroupInfo               GroupInfo;                                         // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Index_0;                                           // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ColorPaletteColumn_C*              Widget;                                            // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 GroupIndex, int32 ColorIndex)> K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Group, int32 InsertIndex)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 FromGroup, int32 ToGroup, int32 FromColorIndex, int32 ToColorIndex)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 GroupIndex, const struct FColor& Color, int32 Index)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0060(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 GroupIndex)>             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0070(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_ColorPaletteColumn_C*              CallFunc_Create_ReturnValue;                       // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPalettePreview_C_AddColorGroup) == 0x000008, "Wrong alignment on WBP_ColorPalettePreview_C_AddColorGroup");
static_assert(sizeof(WBP_ColorPalettePreview_C_AddColorGroup) == 0x000090, "Wrong size on WBP_ColorPalettePreview_C_AddColorGroup");
static_assert(offsetof(WBP_ColorPalettePreview_C_AddColorGroup, GroupInfo) == 0x000000, "Member 'WBP_ColorPalettePreview_C_AddColorGroup::GroupInfo' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_AddColorGroup, Index_0) == 0x000020, "Member 'WBP_ColorPalettePreview_C_AddColorGroup::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_AddColorGroup, Widget) == 0x000028, "Member 'WBP_ColorPalettePreview_C_AddColorGroup::Widget' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_AddColorGroup, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'WBP_ColorPalettePreview_C_AddColorGroup::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_AddColorGroup, K2Node_CreateDelegate_OutputDelegate_1) == 0x000040, "Member 'WBP_ColorPalettePreview_C_AddColorGroup::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_AddColorGroup, K2Node_CreateDelegate_OutputDelegate_2) == 0x000050, "Member 'WBP_ColorPalettePreview_C_AddColorGroup::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_AddColorGroup, K2Node_CreateDelegate_OutputDelegate_3) == 0x000060, "Member 'WBP_ColorPalettePreview_C_AddColorGroup::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_AddColorGroup, K2Node_CreateDelegate_OutputDelegate_4) == 0x000070, "Member 'WBP_ColorPalettePreview_C_AddColorGroup::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_AddColorGroup, CallFunc_Create_ReturnValue) == 0x000080, "Member 'WBP_ColorPalettePreview_C_AddColorGroup::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_AddColorGroup, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000088, "Member 'WBP_ColorPalettePreview_C_AddColorGroup::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");

// Function WBP_ColorPalettePreview.WBP_ColorPalettePreview_C.BndEvt__WBP_AddColumn_K2Node_ComponentBoundEvent_2_OnMoveGroup__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ColorPalettePreview_C_BndEvt__WBP_AddColumn_K2Node_ComponentBoundEvent_2_OnMoveGroup__DelegateSignature final
{
public:
	int32                                         Group;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InsertIndex;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPalettePreview_C_BndEvt__WBP_AddColumn_K2Node_ComponentBoundEvent_2_OnMoveGroup__DelegateSignature) == 0x000004, "Wrong alignment on WBP_ColorPalettePreview_C_BndEvt__WBP_AddColumn_K2Node_ComponentBoundEvent_2_OnMoveGroup__DelegateSignature");
static_assert(sizeof(WBP_ColorPalettePreview_C_BndEvt__WBP_AddColumn_K2Node_ComponentBoundEvent_2_OnMoveGroup__DelegateSignature) == 0x000008, "Wrong size on WBP_ColorPalettePreview_C_BndEvt__WBP_AddColumn_K2Node_ComponentBoundEvent_2_OnMoveGroup__DelegateSignature");
static_assert(offsetof(WBP_ColorPalettePreview_C_BndEvt__WBP_AddColumn_K2Node_ComponentBoundEvent_2_OnMoveGroup__DelegateSignature, Group) == 0x000000, "Member 'WBP_ColorPalettePreview_C_BndEvt__WBP_AddColumn_K2Node_ComponentBoundEvent_2_OnMoveGroup__DelegateSignature::Group' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_BndEvt__WBP_AddColumn_K2Node_ComponentBoundEvent_2_OnMoveGroup__DelegateSignature, InsertIndex) == 0x000004, "Member 'WBP_ColorPalettePreview_C_BndEvt__WBP_AddColumn_K2Node_ComponentBoundEvent_2_OnMoveGroup__DelegateSignature::InsertIndex' has a wrong offset!");

// Function WBP_ColorPalettePreview.WBP_ColorPalettePreview_C.CleanupEmptyGroups
// 0x0040 (0x0040 - 0x0000)
struct WBP_ColorPalettePreview_C_CleanupEmptyGroups final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBRColorPaletteGroupInfo               CallFunc_Array_Get_Item;                           // 0x0010(0x0020)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPalettePreview_C_CleanupEmptyGroups) == 0x000008, "Wrong alignment on WBP_ColorPalettePreview_C_CleanupEmptyGroups");
static_assert(sizeof(WBP_ColorPalettePreview_C_CleanupEmptyGroups) == 0x000040, "Wrong size on WBP_ColorPalettePreview_C_CleanupEmptyGroups");
static_assert(offsetof(WBP_ColorPalettePreview_C_CleanupEmptyGroups, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_ColorPalettePreview_C_CleanupEmptyGroups::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_CleanupEmptyGroups, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_ColorPalettePreview_C_CleanupEmptyGroups::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_CleanupEmptyGroups, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_ColorPalettePreview_C_CleanupEmptyGroups::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_CleanupEmptyGroups, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'WBP_ColorPalettePreview_C_CleanupEmptyGroups::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_CleanupEmptyGroups, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_ColorPalettePreview_C_CleanupEmptyGroups::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_CleanupEmptyGroups, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WBP_ColorPalettePreview_C_CleanupEmptyGroups::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_CleanupEmptyGroups, CallFunc_Array_Length_ReturnValue_1) == 0x000034, "Member 'WBP_ColorPalettePreview_C_CleanupEmptyGroups::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_CleanupEmptyGroups, CallFunc_Less_IntInt_ReturnValue_1) == 0x000038, "Member 'WBP_ColorPalettePreview_C_CleanupEmptyGroups::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function WBP_ColorPalettePreview.WBP_ColorPalettePreview_C.CreateGroup
// 0x0070 (0x0070 - 0x0000)
struct WBP_ColorPalettePreview_C_CreateGroup final
{
public:
	struct FColor                                 K2Node_MakeStruct_None;                            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FColor>                         K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FBRColorPaletteGroupInfo               K2Node_MakeStruct_None_1;                          // 0x0040(0x0020)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ColorPaletteColumn_C*              CallFunc_AddColorGroup_Widget;                     // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPalettePreview_C_CreateGroup) == 0x000008, "Wrong alignment on WBP_ColorPalettePreview_C_CreateGroup");
static_assert(sizeof(WBP_ColorPalettePreview_C_CreateGroup) == 0x000070, "Wrong size on WBP_ColorPalettePreview_C_CreateGroup");
static_assert(offsetof(WBP_ColorPalettePreview_C_CreateGroup, K2Node_MakeStruct_None) == 0x000000, "Member 'WBP_ColorPalettePreview_C_CreateGroup::K2Node_MakeStruct_None' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_CreateGroup, K2Node_MakeArray_Array) == 0x000008, "Member 'WBP_ColorPalettePreview_C_CreateGroup::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_CreateGroup, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'WBP_ColorPalettePreview_C_CreateGroup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_CreateGroup, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_ColorPalettePreview_C_CreateGroup::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_CreateGroup, CallFunc_Conv_IntToString_ReturnValue) == 0x000020, "Member 'WBP_ColorPalettePreview_C_CreateGroup::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_CreateGroup, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'WBP_ColorPalettePreview_C_CreateGroup::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_CreateGroup, K2Node_MakeStruct_None_1) == 0x000040, "Member 'WBP_ColorPalettePreview_C_CreateGroup::K2Node_MakeStruct_None_1' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_CreateGroup, CallFunc_Array_Add_ReturnValue) == 0x000060, "Member 'WBP_ColorPalettePreview_C_CreateGroup::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_CreateGroup, CallFunc_AddColorGroup_Widget) == 0x000068, "Member 'WBP_ColorPalettePreview_C_CreateGroup::CallFunc_AddColorGroup_Widget' has a wrong offset!");

// Function WBP_ColorPalettePreview.WBP_ColorPalettePreview_C.ExecuteUbergraph_WBP_ColorPalettePreview
// 0x0034 (0x0034 - 0x0000)
struct WBP_ColorPalettePreview_C_ExecuteUbergraph_WBP_ColorPalettePreview final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_GroupIndex;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 K2Node_CustomEvent_Color;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Index;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_FromGroup;                      // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ToGroup;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_FromColorIndex;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ToColorIndex;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Group_1;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_InsertIndex;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_Group;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_InsertIndex;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Group;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPalettePreview_C_ExecuteUbergraph_WBP_ColorPalettePreview) == 0x000004, "Wrong alignment on WBP_ColorPalettePreview_C_ExecuteUbergraph_WBP_ColorPalettePreview");
static_assert(sizeof(WBP_ColorPalettePreview_C_ExecuteUbergraph_WBP_ColorPalettePreview) == 0x000034, "Wrong size on WBP_ColorPalettePreview_C_ExecuteUbergraph_WBP_ColorPalettePreview");
static_assert(offsetof(WBP_ColorPalettePreview_C_ExecuteUbergraph_WBP_ColorPalettePreview, EntryPoint) == 0x000000, "Member 'WBP_ColorPalettePreview_C_ExecuteUbergraph_WBP_ColorPalettePreview::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_ExecuteUbergraph_WBP_ColorPalettePreview, K2Node_CustomEvent_GroupIndex) == 0x000004, "Member 'WBP_ColorPalettePreview_C_ExecuteUbergraph_WBP_ColorPalettePreview::K2Node_CustomEvent_GroupIndex' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_ExecuteUbergraph_WBP_ColorPalettePreview, K2Node_CustomEvent_Color) == 0x000008, "Member 'WBP_ColorPalettePreview_C_ExecuteUbergraph_WBP_ColorPalettePreview::K2Node_CustomEvent_Color' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_ExecuteUbergraph_WBP_ColorPalettePreview, K2Node_CustomEvent_Index) == 0x00000C, "Member 'WBP_ColorPalettePreview_C_ExecuteUbergraph_WBP_ColorPalettePreview::K2Node_CustomEvent_Index' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_ExecuteUbergraph_WBP_ColorPalettePreview, K2Node_CustomEvent_FromGroup) == 0x000010, "Member 'WBP_ColorPalettePreview_C_ExecuteUbergraph_WBP_ColorPalettePreview::K2Node_CustomEvent_FromGroup' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_ExecuteUbergraph_WBP_ColorPalettePreview, K2Node_CustomEvent_ToGroup) == 0x000014, "Member 'WBP_ColorPalettePreview_C_ExecuteUbergraph_WBP_ColorPalettePreview::K2Node_CustomEvent_ToGroup' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_ExecuteUbergraph_WBP_ColorPalettePreview, K2Node_CustomEvent_FromColorIndex) == 0x000018, "Member 'WBP_ColorPalettePreview_C_ExecuteUbergraph_WBP_ColorPalettePreview::K2Node_CustomEvent_FromColorIndex' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_ExecuteUbergraph_WBP_ColorPalettePreview, K2Node_CustomEvent_ToColorIndex) == 0x00001C, "Member 'WBP_ColorPalettePreview_C_ExecuteUbergraph_WBP_ColorPalettePreview::K2Node_CustomEvent_ToColorIndex' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_ExecuteUbergraph_WBP_ColorPalettePreview, K2Node_CustomEvent_Group_1) == 0x000020, "Member 'WBP_ColorPalettePreview_C_ExecuteUbergraph_WBP_ColorPalettePreview::K2Node_CustomEvent_Group_1' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_ExecuteUbergraph_WBP_ColorPalettePreview, K2Node_CustomEvent_InsertIndex) == 0x000024, "Member 'WBP_ColorPalettePreview_C_ExecuteUbergraph_WBP_ColorPalettePreview::K2Node_CustomEvent_InsertIndex' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_ExecuteUbergraph_WBP_ColorPalettePreview, K2Node_ComponentBoundEvent_Group) == 0x000028, "Member 'WBP_ColorPalettePreview_C_ExecuteUbergraph_WBP_ColorPalettePreview::K2Node_ComponentBoundEvent_Group' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_ExecuteUbergraph_WBP_ColorPalettePreview, K2Node_ComponentBoundEvent_InsertIndex) == 0x00002C, "Member 'WBP_ColorPalettePreview_C_ExecuteUbergraph_WBP_ColorPalettePreview::K2Node_ComponentBoundEvent_InsertIndex' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_ExecuteUbergraph_WBP_ColorPalettePreview, K2Node_CustomEvent_Group) == 0x000030, "Member 'WBP_ColorPalettePreview_C_ExecuteUbergraph_WBP_ColorPalettePreview::K2Node_CustomEvent_Group' has a wrong offset!");

// Function WBP_ColorPalettePreview.WBP_ColorPalettePreview_C.FixGroupsAfterIndex
// 0x0060 (0x0060 - 0x0000)
struct WBP_ColorPalettePreview_C_FixGroupsAfterIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ColorPaletteColumn_C*              K2Node_DynamicCast_AsWBP_Color_Palette_Column;     // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPalettePreview_C_FixGroupsAfterIndex) == 0x000008, "Wrong alignment on WBP_ColorPalettePreview_C_FixGroupsAfterIndex");
static_assert(sizeof(WBP_ColorPalettePreview_C_FixGroupsAfterIndex) == 0x000060, "Wrong size on WBP_ColorPalettePreview_C_FixGroupsAfterIndex");
static_assert(offsetof(WBP_ColorPalettePreview_C_FixGroupsAfterIndex, Index_0) == 0x000000, "Member 'WBP_ColorPalettePreview_C_FixGroupsAfterIndex::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_FixGroupsAfterIndex, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_ColorPalettePreview_C_FixGroupsAfterIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_FixGroupsAfterIndex, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WBP_ColorPalettePreview_C_FixGroupsAfterIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_FixGroupsAfterIndex, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_ColorPalettePreview_C_FixGroupsAfterIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_FixGroupsAfterIndex, Temp_int_Variable) == 0x000010, "Member 'WBP_ColorPalettePreview_C_FixGroupsAfterIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_FixGroupsAfterIndex, CallFunc_GetAllChildren_ReturnValue) == 0x000018, "Member 'WBP_ColorPalettePreview_C_FixGroupsAfterIndex::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_FixGroupsAfterIndex, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'WBP_ColorPalettePreview_C_FixGroupsAfterIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_FixGroupsAfterIndex, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_ColorPalettePreview_C_FixGroupsAfterIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_FixGroupsAfterIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'WBP_ColorPalettePreview_C_FixGroupsAfterIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_FixGroupsAfterIndex, K2Node_DynamicCast_AsWBP_Color_Palette_Column) == 0x000040, "Member 'WBP_ColorPalettePreview_C_FixGroupsAfterIndex::K2Node_DynamicCast_AsWBP_Color_Palette_Column' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_FixGroupsAfterIndex, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WBP_ColorPalettePreview_C_FixGroupsAfterIndex::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_FixGroupsAfterIndex, CallFunc_Greater_IntInt_ReturnValue) == 0x000049, "Member 'WBP_ColorPalettePreview_C_FixGroupsAfterIndex::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_FixGroupsAfterIndex, CallFunc_Subtract_IntInt_ReturnValue) == 0x00004C, "Member 'WBP_ColorPalettePreview_C_FixGroupsAfterIndex::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_FixGroupsAfterIndex, CallFunc_Conv_IntToString_ReturnValue) == 0x000050, "Member 'WBP_ColorPalettePreview_C_FixGroupsAfterIndex::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");

// Function WBP_ColorPalettePreview.WBP_ColorPalettePreview_C.GetColorPalette
// 0x0008 (0x0008 - 0x0000)
struct WBP_ColorPalettePreview_C_GetColorPalette final
{
public:
	class UBRColorPalette*                        Palette;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPalettePreview_C_GetColorPalette) == 0x000008, "Wrong alignment on WBP_ColorPalettePreview_C_GetColorPalette");
static_assert(sizeof(WBP_ColorPalettePreview_C_GetColorPalette) == 0x000008, "Wrong size on WBP_ColorPalettePreview_C_GetColorPalette");
static_assert(offsetof(WBP_ColorPalettePreview_C_GetColorPalette, Palette) == 0x000000, "Member 'WBP_ColorPalettePreview_C_GetColorPalette::Palette' has a wrong offset!");

// Function WBP_ColorPalettePreview.WBP_ColorPalettePreview_C.IsDirty
// 0x0001 (0x0001 - 0x0000)
struct WBP_ColorPalettePreview_C_IsDirty final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPalettePreview_C_IsDirty) == 0x000001, "Wrong alignment on WBP_ColorPalettePreview_C_IsDirty");
static_assert(sizeof(WBP_ColorPalettePreview_C_IsDirty) == 0x000001, "Wrong size on WBP_ColorPalettePreview_C_IsDirty");
static_assert(offsetof(WBP_ColorPalettePreview_C_IsDirty, ReturnValue) == 0x000000, "Member 'WBP_ColorPalettePreview_C_IsDirty::ReturnValue' has a wrong offset!");

// Function WBP_ColorPalettePreview.WBP_ColorPalettePreview_C.IsEmpty
// 0x000C (0x000C - 0x0000)
struct WBP_ColorPalettePreview_C_IsEmpty final
{
public:
	bool                                          bEmpty;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPalettePreview_C_IsEmpty) == 0x000004, "Wrong alignment on WBP_ColorPalettePreview_C_IsEmpty");
static_assert(sizeof(WBP_ColorPalettePreview_C_IsEmpty) == 0x00000C, "Wrong size on WBP_ColorPalettePreview_C_IsEmpty");
static_assert(offsetof(WBP_ColorPalettePreview_C_IsEmpty, bEmpty) == 0x000000, "Member 'WBP_ColorPalettePreview_C_IsEmpty::bEmpty' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_IsEmpty, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'WBP_ColorPalettePreview_C_IsEmpty::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_IsEmpty, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'WBP_ColorPalettePreview_C_IsEmpty::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_ColorPalettePreview.WBP_ColorPalettePreview_C.MoveColor
// 0x0070 (0x0070 - 0x0000)
struct WBP_ColorPalettePreview_C_MoveColor final
{
public:
	int32                                         FromGroup;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToGroup;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FromColorIndex;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToColorIndex;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 Color;                                             // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBRColorPaletteGroupInfo               GroupB;                                            // 0x0018(0x0020)(Edit, BlueprintVisible)
	struct FBRColorPaletteGroupInfo               GroupA;                                            // 0x0038(0x0020)(Edit, BlueprintVisible)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 CallFunc_Array_Get_Item;                           // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPalettePreview_C_MoveColor) == 0x000008, "Wrong alignment on WBP_ColorPalettePreview_C_MoveColor");
static_assert(sizeof(WBP_ColorPalettePreview_C_MoveColor) == 0x000070, "Wrong size on WBP_ColorPalettePreview_C_MoveColor");
static_assert(offsetof(WBP_ColorPalettePreview_C_MoveColor, FromGroup) == 0x000000, "Member 'WBP_ColorPalettePreview_C_MoveColor::FromGroup' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_MoveColor, ToGroup) == 0x000004, "Member 'WBP_ColorPalettePreview_C_MoveColor::ToGroup' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_MoveColor, FromColorIndex) == 0x000008, "Member 'WBP_ColorPalettePreview_C_MoveColor::FromColorIndex' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_MoveColor, ToColorIndex) == 0x00000C, "Member 'WBP_ColorPalettePreview_C_MoveColor::ToColorIndex' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_MoveColor, Color) == 0x000010, "Member 'WBP_ColorPalettePreview_C_MoveColor::Color' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_MoveColor, GroupB) == 0x000018, "Member 'WBP_ColorPalettePreview_C_MoveColor::GroupB' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_MoveColor, GroupA) == 0x000038, "Member 'WBP_ColorPalettePreview_C_MoveColor::GroupA' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_MoveColor, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000058, "Member 'WBP_ColorPalettePreview_C_MoveColor::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_MoveColor, CallFunc_Subtract_IntInt_ReturnValue) == 0x00005C, "Member 'WBP_ColorPalettePreview_C_MoveColor::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_MoveColor, CallFunc_Greater_IntInt_ReturnValue) == 0x000060, "Member 'WBP_ColorPalettePreview_C_MoveColor::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_MoveColor, Temp_int_Variable) == 0x000064, "Member 'WBP_ColorPalettePreview_C_MoveColor::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_MoveColor, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000068, "Member 'WBP_ColorPalettePreview_C_MoveColor::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_MoveColor, CallFunc_Array_Get_Item) == 0x00006C, "Member 'WBP_ColorPalettePreview_C_MoveColor::CallFunc_Array_Get_Item' has a wrong offset!");

// Function WBP_ColorPalettePreview.WBP_ColorPalettePreview_C.MoveGroup
// 0x0058 (0x0058 - 0x0000)
struct WBP_ColorPalettePreview_C_MoveGroup final
{
public:
	int32                                         Group;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InsertIndex;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBRColorPaletteGroupInfo               InsertGroup;                                       // 0x0008(0x0020)(Edit, BlueprintVisible)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBRColorPaletteGroupInfo               CallFunc_Array_Get_Item;                           // 0x0038(0x0020)()
};
static_assert(alignof(WBP_ColorPalettePreview_C_MoveGroup) == 0x000008, "Wrong alignment on WBP_ColorPalettePreview_C_MoveGroup");
static_assert(sizeof(WBP_ColorPalettePreview_C_MoveGroup) == 0x000058, "Wrong size on WBP_ColorPalettePreview_C_MoveGroup");
static_assert(offsetof(WBP_ColorPalettePreview_C_MoveGroup, Group) == 0x000000, "Member 'WBP_ColorPalettePreview_C_MoveGroup::Group' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_MoveGroup, InsertIndex) == 0x000004, "Member 'WBP_ColorPalettePreview_C_MoveGroup::InsertIndex' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_MoveGroup, InsertGroup) == 0x000008, "Member 'WBP_ColorPalettePreview_C_MoveGroup::InsertGroup' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_MoveGroup, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000028, "Member 'WBP_ColorPalettePreview_C_MoveGroup::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_MoveGroup, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'WBP_ColorPalettePreview_C_MoveGroup::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_MoveGroup, CallFunc_Greater_IntInt_ReturnValue) == 0x000030, "Member 'WBP_ColorPalettePreview_C_MoveGroup::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_MoveGroup, Temp_int_Variable) == 0x000034, "Member 'WBP_ColorPalettePreview_C_MoveGroup::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_MoveGroup, CallFunc_Array_Get_Item) == 0x000038, "Member 'WBP_ColorPalettePreview_C_MoveGroup::CallFunc_Array_Get_Item' has a wrong offset!");

// Function WBP_ColorPalettePreview.WBP_ColorPalettePreview_C.On Color Drag Drop
// 0x0010 (0x0010 - 0x0000)
struct WBP_ColorPalettePreview_C_On_Color_Drag_Drop final
{
public:
	int32                                         FromGroup;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToGroup;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FromColorIndex;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToColorIndex;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPalettePreview_C_On_Color_Drag_Drop) == 0x000004, "Wrong alignment on WBP_ColorPalettePreview_C_On_Color_Drag_Drop");
static_assert(sizeof(WBP_ColorPalettePreview_C_On_Color_Drag_Drop) == 0x000010, "Wrong size on WBP_ColorPalettePreview_C_On_Color_Drag_Drop");
static_assert(offsetof(WBP_ColorPalettePreview_C_On_Color_Drag_Drop, FromGroup) == 0x000000, "Member 'WBP_ColorPalettePreview_C_On_Color_Drag_Drop::FromGroup' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_On_Color_Drag_Drop, ToGroup) == 0x000004, "Member 'WBP_ColorPalettePreview_C_On_Color_Drag_Drop::ToGroup' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_On_Color_Drag_Drop, FromColorIndex) == 0x000008, "Member 'WBP_ColorPalettePreview_C_On_Color_Drag_Drop::FromColorIndex' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_On_Color_Drag_Drop, ToColorIndex) == 0x00000C, "Member 'WBP_ColorPalettePreview_C_On_Color_Drag_Drop::ToColorIndex' has a wrong offset!");

// Function WBP_ColorPalettePreview.WBP_ColorPalettePreview_C.On Group Change
// 0x000C (0x000C - 0x0000)
struct WBP_ColorPalettePreview_C_On_Group_Change final
{
public:
	int32                                         GroupIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 Color;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPalettePreview_C_On_Group_Change) == 0x000004, "Wrong alignment on WBP_ColorPalettePreview_C_On_Group_Change");
static_assert(sizeof(WBP_ColorPalettePreview_C_On_Group_Change) == 0x00000C, "Wrong size on WBP_ColorPalettePreview_C_On_Group_Change");
static_assert(offsetof(WBP_ColorPalettePreview_C_On_Group_Change, GroupIndex) == 0x000000, "Member 'WBP_ColorPalettePreview_C_On_Group_Change::GroupIndex' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_On_Group_Change, Color) == 0x000004, "Member 'WBP_ColorPalettePreview_C_On_Group_Change::Color' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_On_Group_Change, Index_0) == 0x000008, "Member 'WBP_ColorPalettePreview_C_On_Group_Change::Index_0' has a wrong offset!");

// Function WBP_ColorPalettePreview.WBP_ColorPalettePreview_C.On Group Selected
// 0x0004 (0x0004 - 0x0000)
struct WBP_ColorPalettePreview_C_On_Group_Selected final
{
public:
	int32                                         Group;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPalettePreview_C_On_Group_Selected) == 0x000004, "Wrong alignment on WBP_ColorPalettePreview_C_On_Group_Selected");
static_assert(sizeof(WBP_ColorPalettePreview_C_On_Group_Selected) == 0x000004, "Wrong size on WBP_ColorPalettePreview_C_On_Group_Selected");
static_assert(offsetof(WBP_ColorPalettePreview_C_On_Group_Selected, Group) == 0x000000, "Member 'WBP_ColorPalettePreview_C_On_Group_Selected::Group' has a wrong offset!");

// Function WBP_ColorPalettePreview.WBP_ColorPalettePreview_C.On Move Group
// 0x0008 (0x0008 - 0x0000)
struct WBP_ColorPalettePreview_C_On_Move_Group final
{
public:
	int32                                         Group;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InsertIndex;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPalettePreview_C_On_Move_Group) == 0x000004, "Wrong alignment on WBP_ColorPalettePreview_C_On_Move_Group");
static_assert(sizeof(WBP_ColorPalettePreview_C_On_Move_Group) == 0x000008, "Wrong size on WBP_ColorPalettePreview_C_On_Move_Group");
static_assert(offsetof(WBP_ColorPalettePreview_C_On_Move_Group, Group) == 0x000000, "Member 'WBP_ColorPalettePreview_C_On_Move_Group::Group' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_On_Move_Group, InsertIndex) == 0x000004, "Member 'WBP_ColorPalettePreview_C_On_Move_Group::InsertIndex' has a wrong offset!");

// Function WBP_ColorPalettePreview.WBP_ColorPalettePreview_C.RemoveColor
// 0x0010 (0x0010 - 0x0000)
struct WBP_ColorPalettePreview_C_RemoveColor final
{
public:
	int32                                         GroupIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ColorIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPalettePreview_C_RemoveColor) == 0x000004, "Wrong alignment on WBP_ColorPalettePreview_C_RemoveColor");
static_assert(sizeof(WBP_ColorPalettePreview_C_RemoveColor) == 0x000010, "Wrong size on WBP_ColorPalettePreview_C_RemoveColor");
static_assert(offsetof(WBP_ColorPalettePreview_C_RemoveColor, GroupIndex) == 0x000000, "Member 'WBP_ColorPalettePreview_C_RemoveColor::GroupIndex' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_RemoveColor, ColorIndex) == 0x000004, "Member 'WBP_ColorPalettePreview_C_RemoveColor::ColorIndex' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_RemoveColor, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'WBP_ColorPalettePreview_C_RemoveColor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_RemoveColor, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_ColorPalettePreview_C_RemoveColor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_ColorPalettePreview.WBP_ColorPalettePreview_C.SetColorPalettePreview
// 0x0058 (0x0058 - 0x0000)
struct WBP_ColorPalettePreview_C_SetColorPalettePreview final
{
public:
	class UBRColorPalette*                        Palette;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBRColorPalette*                        CallFunc_SpawnObject_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FBRColorPaletteGroupInfo               CallFunc_Array_Get_Item;                           // 0x0020(0x0020)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ColorPaletteColumn_C*              CallFunc_AddColorGroup_Widget;                     // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPalettePreview_C_SetColorPalettePreview) == 0x000008, "Wrong alignment on WBP_ColorPalettePreview_C_SetColorPalettePreview");
static_assert(sizeof(WBP_ColorPalettePreview_C_SetColorPalettePreview) == 0x000058, "Wrong size on WBP_ColorPalettePreview_C_SetColorPalettePreview");
static_assert(offsetof(WBP_ColorPalettePreview_C_SetColorPalettePreview, Palette) == 0x000000, "Member 'WBP_ColorPalettePreview_C_SetColorPalettePreview::Palette' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_SetColorPalettePreview, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_ColorPalettePreview_C_SetColorPalettePreview::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_SetColorPalettePreview, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_ColorPalettePreview_C_SetColorPalettePreview::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_SetColorPalettePreview, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_ColorPalettePreview_C_SetColorPalettePreview::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_SetColorPalettePreview, CallFunc_SpawnObject_ReturnValue) == 0x000018, "Member 'WBP_ColorPalettePreview_C_SetColorPalettePreview::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_SetColorPalettePreview, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_ColorPalettePreview_C_SetColorPalettePreview::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_SetColorPalettePreview, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'WBP_ColorPalettePreview_C_SetColorPalettePreview::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_SetColorPalettePreview, CallFunc_AddColorGroup_Widget) == 0x000048, "Member 'WBP_ColorPalettePreview_C_SetColorPalettePreview::CallFunc_AddColorGroup_Widget' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_SetColorPalettePreview, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'WBP_ColorPalettePreview_C_SetColorPalettePreview::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_SetColorPalettePreview, CallFunc_Array_Length_ReturnValue_1) == 0x000054, "Member 'WBP_ColorPalettePreview_C_SetColorPalettePreview::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function WBP_ColorPalettePreview.WBP_ColorPalettePreview_C.SetGroupName
// 0x0048 (0x0048 - 0x0000)
struct WBP_ColorPalettePreview_C_SetGroupName final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Name_0;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FBRColorPaletteGroupInfo               K2Node_MakeStruct_None;                            // 0x0028(0x0020)()
};
static_assert(alignof(WBP_ColorPalettePreview_C_SetGroupName) == 0x000008, "Wrong alignment on WBP_ColorPalettePreview_C_SetGroupName");
static_assert(sizeof(WBP_ColorPalettePreview_C_SetGroupName) == 0x000048, "Wrong size on WBP_ColorPalettePreview_C_SetGroupName");
static_assert(offsetof(WBP_ColorPalettePreview_C_SetGroupName, Index_0) == 0x000000, "Member 'WBP_ColorPalettePreview_C_SetGroupName::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_SetGroupName, Name_0) == 0x000008, "Member 'WBP_ColorPalettePreview_C_SetGroupName::Name_0' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_SetGroupName, CallFunc_Conv_TextToString_ReturnValue) == 0x000018, "Member 'WBP_ColorPalettePreview_C_SetGroupName::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_SetGroupName, K2Node_MakeStruct_None) == 0x000028, "Member 'WBP_ColorPalettePreview_C_SetGroupName::K2Node_MakeStruct_None' has a wrong offset!");

// Function WBP_ColorPalettePreview.WBP_ColorPalettePreview_C.UpdateAddGroupButton
// 0x0018 (0x0018 - 0x0000)
struct WBP_ColorPalettePreview_C_UpdateAddGroupButton final
{
public:
	class UBRColorSubsystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxGroups_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ColorPalettePreview_C_UpdateAddGroupButton) == 0x000008, "Wrong alignment on WBP_ColorPalettePreview_C_UpdateAddGroupButton");
static_assert(sizeof(WBP_ColorPalettePreview_C_UpdateAddGroupButton) == 0x000018, "Wrong size on WBP_ColorPalettePreview_C_UpdateAddGroupButton");
static_assert(offsetof(WBP_ColorPalettePreview_C_UpdateAddGroupButton, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'WBP_ColorPalettePreview_C_UpdateAddGroupButton::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_UpdateAddGroupButton, CallFunc_GetMaxGroups_ReturnValue) == 0x000008, "Member 'WBP_ColorPalettePreview_C_UpdateAddGroupButton::CallFunc_GetMaxGroups_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_UpdateAddGroupButton, CallFunc_GetChildrenCount_ReturnValue) == 0x00000C, "Member 'WBP_ColorPalettePreview_C_UpdateAddGroupButton::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ColorPalettePreview_C_UpdateAddGroupButton, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'WBP_ColorPalettePreview_C_UpdateAddGroupButton::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

