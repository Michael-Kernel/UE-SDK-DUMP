#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameInstance

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "NetCore_structs.hpp"


namespace SDK::Params
{

// Function BP_GameInstance.BP_GameInstance_C.DisableBackgroundMusic
// 0x0001 (0x0001 - 0x0000)
struct BP_GameInstance_C_DisableBackgroundMusic final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameInstance_C_DisableBackgroundMusic) == 0x000001, "Wrong alignment on BP_GameInstance_C_DisableBackgroundMusic");
static_assert(sizeof(BP_GameInstance_C_DisableBackgroundMusic) == 0x000001, "Wrong size on BP_GameInstance_C_DisableBackgroundMusic");
static_assert(offsetof(BP_GameInstance_C_DisableBackgroundMusic, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_GameInstance_C_DisableBackgroundMusic::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function BP_GameInstance.BP_GameInstance_C.EnableBackgroundMusic
// 0x0002 (0x0002 - 0x0000)
struct BP_GameInstance_C_EnableBackgroundMusic final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameInstance_C_EnableBackgroundMusic) == 0x000001, "Wrong alignment on BP_GameInstance_C_EnableBackgroundMusic");
static_assert(sizeof(BP_GameInstance_C_EnableBackgroundMusic) == 0x000002, "Wrong size on BP_GameInstance_C_EnableBackgroundMusic");
static_assert(offsetof(BP_GameInstance_C_EnableBackgroundMusic, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_GameInstance_C_EnableBackgroundMusic::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_EnableBackgroundMusic, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000001, "Member 'BP_GameInstance_C_EnableBackgroundMusic::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");

// Function BP_GameInstance.BP_GameInstance_C.ExecuteUbergraph_BP_GameInstance
// 0x0178 (0x0178 - 0x0000)
struct BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_DynamicCast_AsSound_Base;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0010)()
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_None;                            // 0x0048(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A0(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00B0(0x0010)()
	class UAsyncActionOneButtonDialog*            CallFunc_QuickCreateOneButtonDialog_ReturnValue;   // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ENetworkFailure                               K2Node_Event_FailureType_1;                        // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_ErrorString_1;                        // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsServer;                            // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundBase>              K2Node_CustomEvent_Song;                           // 0x0100(0x0028)(HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_FadeDuration;                   // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETravelFailure                                K2Node_Event_FailureType;                          // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_ErrorString;                          // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanNOR_ReturnValue;                   // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A[0x2];                                      // 0x015A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x015C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance) == 0x000008, "Wrong alignment on BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance");
static_assert(sizeof(BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance) == 0x000178, "Wrong size on BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance");
static_assert(offsetof(BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance, EntryPoint) == 0x000000, "Member 'BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance, Temp_object_Variable) == 0x000008, "Member 'BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance, K2Node_DynamicCast_AsSound_Base) == 0x000010, "Member 'BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance::K2Node_DynamicCast_AsSound_Base' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance, K2Node_CustomEvent_Loaded) == 0x000020, "Member 'BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance, K2Node_MakeStruct_None) == 0x000048, "Member 'BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance::K2Node_MakeStruct_None' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance, K2Node_MakeArray_Array) == 0x000090, "Member 'BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000B0, "Member 'BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance, CallFunc_QuickCreateOneButtonDialog_ReturnValue) == 0x0000C0, "Member 'BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance::CallFunc_QuickCreateOneButtonDialog_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance, K2Node_Event_FailureType_1) == 0x0000C8, "Member 'BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance::K2Node_Event_FailureType_1' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance, K2Node_Event_ErrorString_1) == 0x0000D0, "Member 'BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance::K2Node_Event_ErrorString_1' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance, K2Node_Event_bIsServer) == 0x0000E0, "Member 'BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance::K2Node_Event_bIsServer' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0000E8, "Member 'BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance, CallFunc_IsValid_ReturnValue) == 0x0000F8, "Member 'BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance, K2Node_CustomEvent_Song) == 0x000100, "Member 'BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance::K2Node_CustomEvent_Song' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance, K2Node_CustomEvent_FadeDuration) == 0x000128, "Member 'BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance::K2Node_CustomEvent_FadeDuration' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance, K2Node_Event_FailureType) == 0x000130, "Member 'BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance::K2Node_Event_FailureType' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance, K2Node_Event_ErrorString) == 0x000138, "Member 'BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance::K2Node_Event_ErrorString' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000148, "Member 'BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance, CallFunc_Not_PreBool_ReturnValue) == 0x000158, "Member 'BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance, CallFunc_BooleanNOR_ReturnValue) == 0x000159, "Member 'BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance::CallFunc_BooleanNOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance, K2Node_CreateDelegate_OutputDelegate_1) == 0x00015C, "Member 'BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance, CallFunc_UtcNow_ReturnValue) == 0x000170, "Member 'BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance::CallFunc_UtcNow_ReturnValue' has a wrong offset!");

// Function BP_GameInstance.BP_GameInstance_C.ForcePlaySongLooping
// 0x0030 (0x0030 - 0x0000)
struct BP_GameInstance_C_ForcePlaySongLooping final
{
public:
	TSoftObjectPtr<class USoundBase>              Song;                                              // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameInstance_C_ForcePlaySongLooping) == 0x000008, "Wrong alignment on BP_GameInstance_C_ForcePlaySongLooping");
static_assert(sizeof(BP_GameInstance_C_ForcePlaySongLooping) == 0x000030, "Wrong size on BP_GameInstance_C_ForcePlaySongLooping");
static_assert(offsetof(BP_GameInstance_C_ForcePlaySongLooping, Song) == 0x000000, "Member 'BP_GameInstance_C_ForcePlaySongLooping::Song' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_ForcePlaySongLooping, CallFunc_IsDedicatedServer_ReturnValue) == 0x000028, "Member 'BP_GameInstance_C_ForcePlaySongLooping::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function BP_GameInstance.BP_GameInstance_C.GetNextSongDelay
// 0x0028 (0x0028 - 0x0000)
struct BP_GameInstance_C_GetNextSongDelay final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBRGameSettingsSubsystem*               CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_GameSettings_Audio_C*               CallFunc_GetSettingsInstance_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameInstance_C_GetNextSongDelay) == 0x000008, "Wrong alignment on BP_GameInstance_C_GetNextSongDelay");
static_assert(sizeof(BP_GameInstance_C_GetNextSongDelay) == 0x000028, "Wrong size on BP_GameInstance_C_GetNextSongDelay");
static_assert(offsetof(BP_GameInstance_C_GetNextSongDelay, Delay) == 0x000000, "Member 'BP_GameInstance_C_GetNextSongDelay::Delay' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_GetNextSongDelay, CallFunc_RandomFloatInRange_ReturnValue) == 0x000008, "Member 'BP_GameInstance_C_GetNextSongDelay::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_GetNextSongDelay, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000010, "Member 'BP_GameInstance_C_GetNextSongDelay::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_GetNextSongDelay, CallFunc_GetSettingsInstance_ReturnValue) == 0x000018, "Member 'BP_GameInstance_C_GetNextSongDelay::CallFunc_GetSettingsInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_GetNextSongDelay, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'BP_GameInstance_C_GetNextSongDelay::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_GameInstance.BP_GameInstance_C.HandleNetworkError
// 0x0020 (0x0020 - 0x0000)
struct BP_GameInstance_C_HandleNetworkError final
{
public:
	ENetworkFailure                               FailureType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ErrorString;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bIsServer;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameInstance_C_HandleNetworkError) == 0x000008, "Wrong alignment on BP_GameInstance_C_HandleNetworkError");
static_assert(sizeof(BP_GameInstance_C_HandleNetworkError) == 0x000020, "Wrong size on BP_GameInstance_C_HandleNetworkError");
static_assert(offsetof(BP_GameInstance_C_HandleNetworkError, FailureType) == 0x000000, "Member 'BP_GameInstance_C_HandleNetworkError::FailureType' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_HandleNetworkError, ErrorString) == 0x000008, "Member 'BP_GameInstance_C_HandleNetworkError::ErrorString' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_HandleNetworkError, bIsServer) == 0x000018, "Member 'BP_GameInstance_C_HandleNetworkError::bIsServer' has a wrong offset!");

// Function BP_GameInstance.BP_GameInstance_C.HandleTravelError
// 0x0018 (0x0018 - 0x0000)
struct BP_GameInstance_C_HandleTravelError final
{
public:
	ETravelFailure                                FailureType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ErrorString;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameInstance_C_HandleTravelError) == 0x000008, "Wrong alignment on BP_GameInstance_C_HandleTravelError");
static_assert(sizeof(BP_GameInstance_C_HandleTravelError) == 0x000018, "Wrong size on BP_GameInstance_C_HandleTravelError");
static_assert(offsetof(BP_GameInstance_C_HandleTravelError, FailureType) == 0x000000, "Member 'BP_GameInstance_C_HandleTravelError::FailureType' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_HandleTravelError, ErrorString) == 0x000008, "Member 'BP_GameInstance_C_HandleTravelError::ErrorString' has a wrong offset!");

// Function BP_GameInstance.BP_GameInstance_C.OnLoaded_EA74557847793C63A74DE8B3A1428A7B
// 0x0008 (0x0008 - 0x0000)
struct BP_GameInstance_C_OnLoaded_EA74557847793C63A74DE8B3A1428A7B final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameInstance_C_OnLoaded_EA74557847793C63A74DE8B3A1428A7B) == 0x000008, "Wrong alignment on BP_GameInstance_C_OnLoaded_EA74557847793C63A74DE8B3A1428A7B");
static_assert(sizeof(BP_GameInstance_C_OnLoaded_EA74557847793C63A74DE8B3A1428A7B) == 0x000008, "Wrong size on BP_GameInstance_C_OnLoaded_EA74557847793C63A74DE8B3A1428A7B");
static_assert(offsetof(BP_GameInstance_C_OnLoaded_EA74557847793C63A74DE8B3A1428A7B, Loaded) == 0x000000, "Member 'BP_GameInstance_C_OnLoaded_EA74557847793C63A74DE8B3A1428A7B::Loaded' has a wrong offset!");

// Function BP_GameInstance.BP_GameInstance_C.PlayNextSongInPlaylist
// 0x00B0 (0x00B0 - 0x0000)
struct BP_GameInstance_C_PlayNextSongInPlaylist final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_None;                            // 0x0010(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ReferenceParm)
	TSoftObjectPtr<class USoundBase>              CallFunc_Array_Get_Item;                           // 0x0068(0x0028)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0090(0x0010)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameInstance_C_PlayNextSongInPlaylist) == 0x000008, "Wrong alignment on BP_GameInstance_C_PlayNextSongInPlaylist");
static_assert(sizeof(BP_GameInstance_C_PlayNextSongInPlaylist) == 0x0000B0, "Wrong size on BP_GameInstance_C_PlayNextSongInPlaylist");
static_assert(offsetof(BP_GameInstance_C_PlayNextSongInPlaylist, Temp_int_Variable) == 0x000000, "Member 'BP_GameInstance_C_PlayNextSongInPlaylist::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_PlayNextSongInPlaylist, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000008, "Member 'BP_GameInstance_C_PlayNextSongInPlaylist::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_PlayNextSongInPlaylist, K2Node_MakeStruct_None) == 0x000010, "Member 'BP_GameInstance_C_PlayNextSongInPlaylist::K2Node_MakeStruct_None' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_PlayNextSongInPlaylist, K2Node_MakeArray_Array) == 0x000058, "Member 'BP_GameInstance_C_PlayNextSongInPlaylist::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_PlayNextSongInPlaylist, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_GameInstance_C_PlayNextSongInPlaylist::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_PlayNextSongInPlaylist, CallFunc_Format_ReturnValue) == 0x000090, "Member 'BP_GameInstance_C_PlayNextSongInPlaylist::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_PlayNextSongInPlaylist, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'BP_GameInstance_C_PlayNextSongInPlaylist::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_PlayNextSongInPlaylist, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_GameInstance_C_PlayNextSongInPlaylist::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_PlayNextSongInPlaylist, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_GameInstance_C_PlayNextSongInPlaylist::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GameInstance.BP_GameInstance_C.PlaySong
// 0x00A8 (0x00A8 - 0x0000)
struct BP_GameInstance_C_PlaySong final
{
public:
	class USoundBase*                             Song;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        FadeDuration;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0010(0x0010)()
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_None;                            // 0x0028(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0080(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0090(0x0010)()
	float                                         CallFunc_FadeIn_FadeInDuration_ImplicitCast;       // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameInstance_C_PlaySong) == 0x000008, "Wrong alignment on BP_GameInstance_C_PlaySong");
static_assert(sizeof(BP_GameInstance_C_PlaySong) == 0x0000A8, "Wrong size on BP_GameInstance_C_PlaySong");
static_assert(offsetof(BP_GameInstance_C_PlaySong, Song) == 0x000000, "Member 'BP_GameInstance_C_PlaySong::Song' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_PlaySong, FadeDuration) == 0x000008, "Member 'BP_GameInstance_C_PlaySong::FadeDuration' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_PlaySong, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000010, "Member 'BP_GameInstance_C_PlaySong::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_PlaySong, CallFunc_SpawnSound2D_ReturnValue) == 0x000020, "Member 'BP_GameInstance_C_PlaySong::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_PlaySong, K2Node_MakeStruct_None) == 0x000028, "Member 'BP_GameInstance_C_PlaySong::K2Node_MakeStruct_None' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_PlaySong, K2Node_MakeArray_Array) == 0x000070, "Member 'BP_GameInstance_C_PlaySong::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_PlaySong, K2Node_CreateDelegate_OutputDelegate) == 0x000080, "Member 'BP_GameInstance_C_PlaySong::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_PlaySong, CallFunc_Format_ReturnValue) == 0x000090, "Member 'BP_GameInstance_C_PlaySong::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_PlaySong, CallFunc_FadeIn_FadeInDuration_ImplicitCast) == 0x0000A0, "Member 'BP_GameInstance_C_PlaySong::CallFunc_FadeIn_FadeInDuration_ImplicitCast' has a wrong offset!");

// Function BP_GameInstance.BP_GameInstance_C.Private_AsyncLoadAndPlaySong
// 0x0030 (0x0030 - 0x0000)
struct BP_GameInstance_C_Private_AsyncLoadAndPlaySong final
{
public:
	TSoftObjectPtr<class USoundBase>              Song;                                              // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	double                                        FadeDuration;                                      // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameInstance_C_Private_AsyncLoadAndPlaySong) == 0x000008, "Wrong alignment on BP_GameInstance_C_Private_AsyncLoadAndPlaySong");
static_assert(sizeof(BP_GameInstance_C_Private_AsyncLoadAndPlaySong) == 0x000030, "Wrong size on BP_GameInstance_C_Private_AsyncLoadAndPlaySong");
static_assert(offsetof(BP_GameInstance_C_Private_AsyncLoadAndPlaySong, Song) == 0x000000, "Member 'BP_GameInstance_C_Private_AsyncLoadAndPlaySong::Song' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_Private_AsyncLoadAndPlaySong, FadeDuration) == 0x000028, "Member 'BP_GameInstance_C_Private_AsyncLoadAndPlaySong::FadeDuration' has a wrong offset!");

// Function BP_GameInstance.BP_GameInstance_C.SetTimerForNextSong
// 0x0038 (0x0038 - 0x0000)
struct BP_GameInstance_C_SetTimerForNextSong final
{
public:
	double                                        LV_Delay;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetNextSongDelay_Delay;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameInstance_C_SetTimerForNextSong) == 0x000008, "Wrong alignment on BP_GameInstance_C_SetTimerForNextSong");
static_assert(sizeof(BP_GameInstance_C_SetTimerForNextSong) == 0x000038, "Wrong size on BP_GameInstance_C_SetTimerForNextSong");
static_assert(offsetof(BP_GameInstance_C_SetTimerForNextSong, LV_Delay) == 0x000000, "Member 'BP_GameInstance_C_SetTimerForNextSong::LV_Delay' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_SetTimerForNextSong, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_GameInstance_C_SetTimerForNextSong::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_SetTimerForNextSong, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'BP_GameInstance_C_SetTimerForNextSong::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_SetTimerForNextSong, CallFunc_GetNextSongDelay_Delay) == 0x000020, "Member 'BP_GameInstance_C_SetTimerForNextSong::CallFunc_GetNextSongDelay_Delay' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_SetTimerForNextSong, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'BP_GameInstance_C_SetTimerForNextSong::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_SetTimerForNextSong, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000030, "Member 'BP_GameInstance_C_SetTimerForNextSong::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function BP_GameInstance.BP_GameInstance_C.StopSong
// 0x0014 (0x0014 - 0x0000)
struct BP_GameInstance_C_StopSong final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameInstance_C_StopSong) == 0x000004, "Wrong alignment on BP_GameInstance_C_StopSong");
static_assert(sizeof(BP_GameInstance_C_StopSong) == 0x000014, "Wrong size on BP_GameInstance_C_StopSong");
static_assert(offsetof(BP_GameInstance_C_StopSong, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_GameInstance_C_StopSong::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_StopSong, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_GameInstance_C_StopSong::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_StopSong, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_GameInstance_C_StopSong::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

}

