#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LoadingScreen

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "MoviePlayer_structs.hpp"
#include "Slate_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// ScriptStruct LoadingScreen.LoadingScreenDescription
// 0x0410 (0x0410 - 0x0000)
struct FLoadingScreenDescription final
{
public:
	float                                         MinimumLoadingScreenDisplayTime;                   // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoCompleteWhenLoadingCompletes;                 // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMoviesAreSkippable;                               // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWaitForManualStop;                                // 0x0006(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMoviePlaybackType                            PlaybackType;                                      // 0x0007(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         MoviePaths;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bShowUIOverlay;                                    // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LoadingText;                                       // 0x0020(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FSoftObjectPath>                Images;                                            // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	EStretch                                      ImageStretch;                                      // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           BackgroundColor;                                   // 0x0044(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           TipBackgroundColor;                                // 0x0054(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSoftObjectPath>                IconImages;                                        // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTextBlockStyle                        TextStyle;                                         // 0x0080(0x02E0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateBrush                            TextBorderStyle;                                   // 0x0360(0x00B0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FLoadingScreenDescription) == 0x000010, "Wrong alignment on FLoadingScreenDescription");
static_assert(sizeof(FLoadingScreenDescription) == 0x000410, "Wrong size on FLoadingScreenDescription");
static_assert(offsetof(FLoadingScreenDescription, MinimumLoadingScreenDisplayTime) == 0x000000, "Member 'FLoadingScreenDescription::MinimumLoadingScreenDisplayTime' has a wrong offset!");
static_assert(offsetof(FLoadingScreenDescription, bAutoCompleteWhenLoadingCompletes) == 0x000004, "Member 'FLoadingScreenDescription::bAutoCompleteWhenLoadingCompletes' has a wrong offset!");
static_assert(offsetof(FLoadingScreenDescription, bMoviesAreSkippable) == 0x000005, "Member 'FLoadingScreenDescription::bMoviesAreSkippable' has a wrong offset!");
static_assert(offsetof(FLoadingScreenDescription, bWaitForManualStop) == 0x000006, "Member 'FLoadingScreenDescription::bWaitForManualStop' has a wrong offset!");
static_assert(offsetof(FLoadingScreenDescription, PlaybackType) == 0x000007, "Member 'FLoadingScreenDescription::PlaybackType' has a wrong offset!");
static_assert(offsetof(FLoadingScreenDescription, MoviePaths) == 0x000008, "Member 'FLoadingScreenDescription::MoviePaths' has a wrong offset!");
static_assert(offsetof(FLoadingScreenDescription, bShowUIOverlay) == 0x000018, "Member 'FLoadingScreenDescription::bShowUIOverlay' has a wrong offset!");
static_assert(offsetof(FLoadingScreenDescription, LoadingText) == 0x000020, "Member 'FLoadingScreenDescription::LoadingText' has a wrong offset!");
static_assert(offsetof(FLoadingScreenDescription, Images) == 0x000030, "Member 'FLoadingScreenDescription::Images' has a wrong offset!");
static_assert(offsetof(FLoadingScreenDescription, ImageStretch) == 0x000040, "Member 'FLoadingScreenDescription::ImageStretch' has a wrong offset!");
static_assert(offsetof(FLoadingScreenDescription, BackgroundColor) == 0x000044, "Member 'FLoadingScreenDescription::BackgroundColor' has a wrong offset!");
static_assert(offsetof(FLoadingScreenDescription, TipBackgroundColor) == 0x000054, "Member 'FLoadingScreenDescription::TipBackgroundColor' has a wrong offset!");
static_assert(offsetof(FLoadingScreenDescription, IconImages) == 0x000068, "Member 'FLoadingScreenDescription::IconImages' has a wrong offset!");
static_assert(offsetof(FLoadingScreenDescription, TextStyle) == 0x000080, "Member 'FLoadingScreenDescription::TextStyle' has a wrong offset!");
static_assert(offsetof(FLoadingScreenDescription, TextBorderStyle) == 0x000360, "Member 'FLoadingScreenDescription::TextBorderStyle' has a wrong offset!");

}

