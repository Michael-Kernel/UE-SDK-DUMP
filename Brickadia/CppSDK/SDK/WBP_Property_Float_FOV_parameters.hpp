#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Property_Float_FOV

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Brickadia_structs.hpp"


namespace SDK::Params
{

// Function WBP_Property_Float_FOV.WBP_Property_Float_FOV_C.BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Property_Float_FOV_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   CommitMethod;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Property_Float_FOV_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_Property_Float_FOV_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(sizeof(WBP_Property_Float_FOV_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000008, "Wrong size on WBP_Property_Float_FOV_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(offsetof(WBP_Property_Float_FOV_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_Property_Float_FOV_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature::InValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature, CommitMethod) == 0x000004, "Member 'WBP_Property_Float_FOV_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WBP_Property_Float_FOV.WBP_Property_Float_FOV_C.BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_Property_Float_FOV_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Property_Float_FOV_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_Property_Float_FOV_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_Property_Float_FOV_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on WBP_Property_Float_FOV_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_Property_Float_FOV_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_Property_Float_FOV_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature::InValue' has a wrong offset!");

// Function WBP_Property_Float_FOV.WBP_Property_Float_FOV_C.BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_3_OnSpinBoxValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_Property_Float_FOV_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_3_OnSpinBoxValueChangedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Property_Float_FOV_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_3_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_Property_Float_FOV_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_3_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_Property_Float_FOV_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_3_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on WBP_Property_Float_FOV_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_3_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_Property_Float_FOV_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_3_OnSpinBoxValueChangedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_Property_Float_FOV_C_BndEvt__ValueInputBox_K2Node_ComponentBoundEvent_3_OnSpinBoxValueChangedEvent__DelegateSignature::InValue' has a wrong offset!");

// Function WBP_Property_Float_FOV.WBP_Property_Float_FOV_C.ExecuteUbergraph_WBP_Property_Float_FOV
// 0x0130 (0x0130 - 0x0000)
struct WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInspectorPropertyDescriptor*           K2Node_Event_NewDescriptor;                        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInspectorViewTarget                   K2Node_Event_NewViewTarget;                        // 0x0010(0x0030)(ConstParm, NoDestructor)
	class UInspectorPropertyDescriptor*           CallFunc_GetDescriptor_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInspectorPropertyDescriptor_Float*     K2Node_DynamicCast_AsInspector_Property_Descriptor_Float; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInspectorPropertyDescriptor_Float*     K2Node_DynamicCast_AsInspector_Property_Descriptor_Float_1; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_InValue_1;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInspectorPropertyValue                CallFunc_BoxPropertyValue_Float_ReturnValue;       // 0x0070(0x0018)(ZeroConstructor)
	float                                         K2Node_ComponentBoundEvent_InValue;                // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UnboxPropertyValue_Float_bIsValid;        // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_UnboxPropertyValue_Float_Unboxed;         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInspectorPropertyValue                K2Node_Event_ValueIn;                              // 0x0098(0x0018)(ConstParm, ZeroConstructor)
	bool                                          K2Node_Event_Enabled;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UnboxPropertyValue_Float_bIsValid_1;      // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_UnboxPropertyValue_Float_Unboxed_1;       // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_InValue_2;              // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE[0x2];                                       // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInspectorPropertyValue                CallFunc_BoxPropertyValue_Float_ReturnValue_1;     // 0x00C0(0x0018)(ZeroConstructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00D8(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_UpdateHorizontalDisplayText_Vertical_ImplicitCast; // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetDelta_NewValue_ImplicitCast;           // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV) == 0x000008, "Wrong alignment on WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV");
static_assert(sizeof(WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV) == 0x000130, "Wrong size on WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV");
static_assert(offsetof(WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV, EntryPoint) == 0x000000, "Member 'WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV, CallFunc_GetValue_ReturnValue) == 0x000004, "Member 'WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV, K2Node_Event_NewDescriptor) == 0x000008, "Member 'WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV::K2Node_Event_NewDescriptor' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV, K2Node_Event_NewViewTarget) == 0x000010, "Member 'WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV::K2Node_Event_NewViewTarget' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV, CallFunc_GetDescriptor_ReturnValue) == 0x000040, "Member 'WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV::CallFunc_GetDescriptor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV, K2Node_DynamicCast_AsInspector_Property_Descriptor_Float) == 0x000048, "Member 'WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV::K2Node_DynamicCast_AsInspector_Property_Descriptor_Float' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV, K2Node_DynamicCast_AsInspector_Property_Descriptor_Float_1) == 0x000058, "Member 'WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV::K2Node_DynamicCast_AsInspector_Property_Descriptor_Float_1' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV, K2Node_ComponentBoundEvent_InValue_1) == 0x000064, "Member 'WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV::K2Node_ComponentBoundEvent_InValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV, CallFunc_SelectFloat_ReturnValue) == 0x000068, "Member 'WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV, CallFunc_BoxPropertyValue_Float_ReturnValue) == 0x000070, "Member 'WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV::CallFunc_BoxPropertyValue_Float_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV, K2Node_ComponentBoundEvent_InValue) == 0x000088, "Member 'WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV::K2Node_ComponentBoundEvent_InValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV, CallFunc_UnboxPropertyValue_Float_bIsValid) == 0x00008C, "Member 'WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV::CallFunc_UnboxPropertyValue_Float_bIsValid' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV, CallFunc_UnboxPropertyValue_Float_Unboxed) == 0x000090, "Member 'WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV::CallFunc_UnboxPropertyValue_Float_Unboxed' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV, K2Node_Event_ValueIn) == 0x000098, "Member 'WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV::K2Node_Event_ValueIn' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV, K2Node_Event_Enabled) == 0x0000B0, "Member 'WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV::K2Node_Event_Enabled' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV, CallFunc_UnboxPropertyValue_Float_bIsValid_1) == 0x0000B1, "Member 'WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV::CallFunc_UnboxPropertyValue_Float_bIsValid_1' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV, CallFunc_UnboxPropertyValue_Float_Unboxed_1) == 0x0000B4, "Member 'WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV::CallFunc_UnboxPropertyValue_Float_Unboxed_1' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV, K2Node_ComponentBoundEvent_InValue_2) == 0x0000B8, "Member 'WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV::K2Node_ComponentBoundEvent_InValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV, K2Node_ComponentBoundEvent_CommitMethod) == 0x0000BC, "Member 'WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000BD, "Member 'WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV, CallFunc_BoxPropertyValue_Float_ReturnValue_1) == 0x0000C0, "Member 'WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV::CallFunc_BoxPropertyValue_Float_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV, K2Node_Event_MyGeometry) == 0x0000D8, "Member 'WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV, K2Node_Event_InDeltaTime) == 0x000110, "Member 'WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV, CallFunc_UpdateHorizontalDisplayText_Vertical_ImplicitCast) == 0x000118, "Member 'WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV::CallFunc_UpdateHorizontalDisplayText_Vertical_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV, CallFunc_SelectFloat_A_ImplicitCast) == 0x000120, "Member 'WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV, CallFunc_SetDelta_NewValue_ImplicitCast) == 0x000128, "Member 'WBP_Property_Float_FOV_C_ExecuteUbergraph_WBP_Property_Float_FOV::CallFunc_SetDelta_NewValue_ImplicitCast' has a wrong offset!");

// Function WBP_Property_Float_FOV.WBP_Property_Float_FOV_C.OnAvailabilityChange
// 0x0001 (0x0001 - 0x0000)
struct WBP_Property_Float_FOV_C_OnAvailabilityChange final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Property_Float_FOV_C_OnAvailabilityChange) == 0x000001, "Wrong alignment on WBP_Property_Float_FOV_C_OnAvailabilityChange");
static_assert(sizeof(WBP_Property_Float_FOV_C_OnAvailabilityChange) == 0x000001, "Wrong size on WBP_Property_Float_FOV_C_OnAvailabilityChange");
static_assert(offsetof(WBP_Property_Float_FOV_C_OnAvailabilityChange, Enabled) == 0x000000, "Member 'WBP_Property_Float_FOV_C_OnAvailabilityChange::Enabled' has a wrong offset!");

// Function WBP_Property_Float_FOV.WBP_Property_Float_FOV_C.OnInit
// 0x0038 (0x0038 - 0x0000)
struct WBP_Property_Float_FOV_C_OnInit final
{
public:
	class UInspectorPropertyDescriptor*           NewDescriptor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInspectorViewTarget                   NewViewTarget;                                     // 0x0008(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(WBP_Property_Float_FOV_C_OnInit) == 0x000008, "Wrong alignment on WBP_Property_Float_FOV_C_OnInit");
static_assert(sizeof(WBP_Property_Float_FOV_C_OnInit) == 0x000038, "Wrong size on WBP_Property_Float_FOV_C_OnInit");
static_assert(offsetof(WBP_Property_Float_FOV_C_OnInit, NewDescriptor) == 0x000000, "Member 'WBP_Property_Float_FOV_C_OnInit::NewDescriptor' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_OnInit, NewViewTarget) == 0x000008, "Member 'WBP_Property_Float_FOV_C_OnInit::NewViewTarget' has a wrong offset!");

// Function WBP_Property_Float_FOV.WBP_Property_Float_FOV_C.OnValueChangedExternally
// 0x0018 (0x0018 - 0x0000)
struct WBP_Property_Float_FOV_C_OnValueChangedExternally final
{
public:
	struct FInspectorPropertyValue                ValueIn;                                           // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(WBP_Property_Float_FOV_C_OnValueChangedExternally) == 0x000008, "Wrong alignment on WBP_Property_Float_FOV_C_OnValueChangedExternally");
static_assert(sizeof(WBP_Property_Float_FOV_C_OnValueChangedExternally) == 0x000018, "Wrong size on WBP_Property_Float_FOV_C_OnValueChangedExternally");
static_assert(offsetof(WBP_Property_Float_FOV_C_OnValueChangedExternally, ValueIn) == 0x000000, "Member 'WBP_Property_Float_FOV_C_OnValueChangedExternally::ValueIn' has a wrong offset!");

// Function WBP_Property_Float_FOV.WBP_Property_Float_FOV_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_Property_Float_FOV_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Property_Float_FOV_C_Tick) == 0x000004, "Wrong alignment on WBP_Property_Float_FOV_C_Tick");
static_assert(sizeof(WBP_Property_Float_FOV_C_Tick) == 0x00003C, "Wrong size on WBP_Property_Float_FOV_C_Tick");
static_assert(offsetof(WBP_Property_Float_FOV_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_Property_Float_FOV_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_Property_Float_FOV_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_Property_Float_FOV.WBP_Property_Float_FOV_C.UpdateHorizontalDisplayText
// 0x0088 (0x0088 - 0x0000)
struct WBP_Property_Float_FOV_C_UpdateHorizontalDisplayText final
{
public:
	double                                        Vertical;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VerticalToHorizontal_Horizontal;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_None;                            // 0x0020(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0078(0x0010)()
};
static_assert(alignof(WBP_Property_Float_FOV_C_UpdateHorizontalDisplayText) == 0x000008, "Wrong alignment on WBP_Property_Float_FOV_C_UpdateHorizontalDisplayText");
static_assert(sizeof(WBP_Property_Float_FOV_C_UpdateHorizontalDisplayText) == 0x000088, "Wrong size on WBP_Property_Float_FOV_C_UpdateHorizontalDisplayText");
static_assert(offsetof(WBP_Property_Float_FOV_C_UpdateHorizontalDisplayText, Vertical) == 0x000000, "Member 'WBP_Property_Float_FOV_C_UpdateHorizontalDisplayText::Vertical' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_UpdateHorizontalDisplayText, CallFunc_VerticalToHorizontal_Horizontal) == 0x000008, "Member 'WBP_Property_Float_FOV_C_UpdateHorizontalDisplayText::CallFunc_VerticalToHorizontal_Horizontal' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_UpdateHorizontalDisplayText, CallFunc_Round_ReturnValue) == 0x000010, "Member 'WBP_Property_Float_FOV_C_UpdateHorizontalDisplayText::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_UpdateHorizontalDisplayText, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000018, "Member 'WBP_Property_Float_FOV_C_UpdateHorizontalDisplayText::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_UpdateHorizontalDisplayText, K2Node_MakeStruct_None) == 0x000020, "Member 'WBP_Property_Float_FOV_C_UpdateHorizontalDisplayText::K2Node_MakeStruct_None' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_UpdateHorizontalDisplayText, K2Node_MakeArray_Array) == 0x000068, "Member 'WBP_Property_Float_FOV_C_UpdateHorizontalDisplayText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_UpdateHorizontalDisplayText, CallFunc_Format_ReturnValue) == 0x000078, "Member 'WBP_Property_Float_FOV_C_UpdateHorizontalDisplayText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_Property_Float_FOV.WBP_Property_Float_FOV_C.VerticalToHorizontal
// 0x0060 (0x0060 - 0x0000)
struct WBP_Property_Float_FOV_C_VerticalToHorizontal final
{
public:
	double                                        Vertical;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Horizontal;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegTan_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAtan_ReturnValue;                      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Property_Float_FOV_C_VerticalToHorizontal) == 0x000008, "Wrong alignment on WBP_Property_Float_FOV_C_VerticalToHorizontal");
static_assert(sizeof(WBP_Property_Float_FOV_C_VerticalToHorizontal) == 0x000060, "Wrong size on WBP_Property_Float_FOV_C_VerticalToHorizontal");
static_assert(offsetof(WBP_Property_Float_FOV_C_VerticalToHorizontal, Vertical) == 0x000000, "Member 'WBP_Property_Float_FOV_C_VerticalToHorizontal::Vertical' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_VerticalToHorizontal, Horizontal) == 0x000008, "Member 'WBP_Property_Float_FOV_C_VerticalToHorizontal::Horizontal' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_VerticalToHorizontal, CallFunc_GetViewportSize_ReturnValue) == 0x000010, "Member 'WBP_Property_Float_FOV_C_VerticalToHorizontal::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_VerticalToHorizontal, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'WBP_Property_Float_FOV_C_VerticalToHorizontal::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_VerticalToHorizontal, CallFunc_BreakVector2D_X) == 0x000028, "Member 'WBP_Property_Float_FOV_C_VerticalToHorizontal::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_VerticalToHorizontal, CallFunc_BreakVector2D_Y) == 0x000030, "Member 'WBP_Property_Float_FOV_C_VerticalToHorizontal::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_VerticalToHorizontal, CallFunc_DegTan_ReturnValue) == 0x000038, "Member 'WBP_Property_Float_FOV_C_VerticalToHorizontal::CallFunc_DegTan_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_VerticalToHorizontal, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'WBP_Property_Float_FOV_C_VerticalToHorizontal::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_VerticalToHorizontal, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'WBP_Property_Float_FOV_C_VerticalToHorizontal::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_VerticalToHorizontal, CallFunc_DegAtan_ReturnValue) == 0x000050, "Member 'WBP_Property_Float_FOV_C_VerticalToHorizontal::CallFunc_DegAtan_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Property_Float_FOV_C_VerticalToHorizontal, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'WBP_Property_Float_FOV_C_VerticalToHorizontal::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

}

