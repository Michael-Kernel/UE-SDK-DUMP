#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_EditGameDetailsPanel

#include "Basic.hpp"

#include "Brickadia_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_EditGameDetailsPanel.WBP_EditGameDetailsPanel_C.Apply
// 0x0070 (0x0070 - 0x0000)
struct WBP_EditGameDetailsPanel_C_Apply final
{
public:
	bool                                          bDidAnnouncement;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDirty_bYes;                             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInspectorPropertyChangelist           CallFunc_GenerateChangelist_Changelist;            // 0x0008(0x0010)()
	class UBRGameSettingsSubsystem*               CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInspectorPropertyChangelist           CallFunc_GenerateChangelist_Changelist_1;          // 0x0020(0x0010)()
	class UBP_ServerSettings_General_C*           CallFunc_GetSettingsInstance_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABRPlayerController*                    CallFunc_GetBRPlayerController_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInspectorViewTarget                   CallFunc_MakeViewTargetFromObject_ReturnValue;     // 0x0040(0x0030)(NoDestructor)
};
static_assert(alignof(WBP_EditGameDetailsPanel_C_Apply) == 0x000008, "Wrong alignment on WBP_EditGameDetailsPanel_C_Apply");
static_assert(sizeof(WBP_EditGameDetailsPanel_C_Apply) == 0x000070, "Wrong size on WBP_EditGameDetailsPanel_C_Apply");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_Apply, bDidAnnouncement) == 0x000000, "Member 'WBP_EditGameDetailsPanel_C_Apply::bDidAnnouncement' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_Apply, CallFunc_IsDirty_bYes) == 0x000001, "Member 'WBP_EditGameDetailsPanel_C_Apply::CallFunc_IsDirty_bYes' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_Apply, CallFunc_GenerateChangelist_Changelist) == 0x000008, "Member 'WBP_EditGameDetailsPanel_C_Apply::CallFunc_GenerateChangelist_Changelist' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_Apply, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000018, "Member 'WBP_EditGameDetailsPanel_C_Apply::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_Apply, CallFunc_GenerateChangelist_Changelist_1) == 0x000020, "Member 'WBP_EditGameDetailsPanel_C_Apply::CallFunc_GenerateChangelist_Changelist_1' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_Apply, CallFunc_GetSettingsInstance_ReturnValue) == 0x000030, "Member 'WBP_EditGameDetailsPanel_C_Apply::CallFunc_GetSettingsInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_Apply, CallFunc_GetBRPlayerController_ReturnValue) == 0x000038, "Member 'WBP_EditGameDetailsPanel_C_Apply::CallFunc_GetBRPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_Apply, CallFunc_MakeViewTargetFromObject_ReturnValue) == 0x000040, "Member 'WBP_EditGameDetailsPanel_C_Apply::CallFunc_MakeViewTargetFromObject_ReturnValue' has a wrong offset!");

// Function WBP_EditGameDetailsPanel.WBP_EditGameDetailsPanel_C.BndEvt__DescriptionBox_K2Node_ComponentBoundEvent_5_OnMultiLineEditableTextBoxCommittedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WBP_EditGameDetailsPanel_C_BndEvt__DescriptionBox_K2Node_ComponentBoundEvent_5_OnMultiLineEditableTextBoxCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EditGameDetailsPanel_C_BndEvt__DescriptionBox_K2Node_ComponentBoundEvent_5_OnMultiLineEditableTextBoxCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_EditGameDetailsPanel_C_BndEvt__DescriptionBox_K2Node_ComponentBoundEvent_5_OnMultiLineEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(sizeof(WBP_EditGameDetailsPanel_C_BndEvt__DescriptionBox_K2Node_ComponentBoundEvent_5_OnMultiLineEditableTextBoxCommittedEvent__DelegateSignature) == 0x000018, "Wrong size on WBP_EditGameDetailsPanel_C_BndEvt__DescriptionBox_K2Node_ComponentBoundEvent_5_OnMultiLineEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_BndEvt__DescriptionBox_K2Node_ComponentBoundEvent_5_OnMultiLineEditableTextBoxCommittedEvent__DelegateSignature, Text) == 0x000000, "Member 'WBP_EditGameDetailsPanel_C_BndEvt__DescriptionBox_K2Node_ComponentBoundEvent_5_OnMultiLineEditableTextBoxCommittedEvent__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_BndEvt__DescriptionBox_K2Node_ComponentBoundEvent_5_OnMultiLineEditableTextBoxCommittedEvent__DelegateSignature, CommitMethod) == 0x000010, "Member 'WBP_EditGameDetailsPanel_C_BndEvt__DescriptionBox_K2Node_ComponentBoundEvent_5_OnMultiLineEditableTextBoxCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WBP_EditGameDetailsPanel.WBP_EditGameDetailsPanel_C.BndEvt__NameBox_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_EditGameDetailsPanel_C_BndEvt__NameBox_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_EditGameDetailsPanel_C_BndEvt__NameBox_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_EditGameDetailsPanel_C_BndEvt__NameBox_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_EditGameDetailsPanel_C_BndEvt__NameBox_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000010, "Wrong size on WBP_EditGameDetailsPanel_C_BndEvt__NameBox_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_BndEvt__NameBox_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'WBP_EditGameDetailsPanel_C_BndEvt__NameBox_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function WBP_EditGameDetailsPanel.WBP_EditGameDetailsPanel_C.BndEvt__NameBox_K2Node_ComponentBoundEvent_4_OnEditableTextBoxCommittedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WBP_EditGameDetailsPanel_C_BndEvt__NameBox_K2Node_ComponentBoundEvent_4_OnEditableTextBoxCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EditGameDetailsPanel_C_BndEvt__NameBox_K2Node_ComponentBoundEvent_4_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_EditGameDetailsPanel_C_BndEvt__NameBox_K2Node_ComponentBoundEvent_4_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(sizeof(WBP_EditGameDetailsPanel_C_BndEvt__NameBox_K2Node_ComponentBoundEvent_4_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000018, "Wrong size on WBP_EditGameDetailsPanel_C_BndEvt__NameBox_K2Node_ComponentBoundEvent_4_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_BndEvt__NameBox_K2Node_ComponentBoundEvent_4_OnEditableTextBoxCommittedEvent__DelegateSignature, Text) == 0x000000, "Member 'WBP_EditGameDetailsPanel_C_BndEvt__NameBox_K2Node_ComponentBoundEvent_4_OnEditableTextBoxCommittedEvent__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_BndEvt__NameBox_K2Node_ComponentBoundEvent_4_OnEditableTextBoxCommittedEvent__DelegateSignature, CommitMethod) == 0x000010, "Member 'WBP_EditGameDetailsPanel_C_BndEvt__NameBox_K2Node_ComponentBoundEvent_4_OnEditableTextBoxCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WBP_EditGameDetailsPanel.WBP_EditGameDetailsPanel_C.BndEvt__PasswordBox_K2Node_ComponentBoundEvent_6_OnEditableTextBoxChangedEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_EditGameDetailsPanel_C_BndEvt__PasswordBox_K2Node_ComponentBoundEvent_6_OnEditableTextBoxChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_EditGameDetailsPanel_C_BndEvt__PasswordBox_K2Node_ComponentBoundEvent_6_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_EditGameDetailsPanel_C_BndEvt__PasswordBox_K2Node_ComponentBoundEvent_6_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_EditGameDetailsPanel_C_BndEvt__PasswordBox_K2Node_ComponentBoundEvent_6_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000010, "Wrong size on WBP_EditGameDetailsPanel_C_BndEvt__PasswordBox_K2Node_ComponentBoundEvent_6_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_BndEvt__PasswordBox_K2Node_ComponentBoundEvent_6_OnEditableTextBoxChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'WBP_EditGameDetailsPanel_C_BndEvt__PasswordBox_K2Node_ComponentBoundEvent_6_OnEditableTextBoxChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function WBP_EditGameDetailsPanel.WBP_EditGameDetailsPanel_C.BndEvt__PlayerLimitBox_K2Node_ComponentBoundEvent_8_OnSpinBoxValueCommittedEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_EditGameDetailsPanel_C_BndEvt__PlayerLimitBox_K2Node_ComponentBoundEvent_8_OnSpinBoxValueCommittedEvent__DelegateSignature final
{
public:
	int32                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   CommitMethod;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EditGameDetailsPanel_C_BndEvt__PlayerLimitBox_K2Node_ComponentBoundEvent_8_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_EditGameDetailsPanel_C_BndEvt__PlayerLimitBox_K2Node_ComponentBoundEvent_8_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(sizeof(WBP_EditGameDetailsPanel_C_BndEvt__PlayerLimitBox_K2Node_ComponentBoundEvent_8_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000008, "Wrong size on WBP_EditGameDetailsPanel_C_BndEvt__PlayerLimitBox_K2Node_ComponentBoundEvent_8_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_BndEvt__PlayerLimitBox_K2Node_ComponentBoundEvent_8_OnSpinBoxValueCommittedEvent__DelegateSignature, InValue) == 0x000000, "Member 'WBP_EditGameDetailsPanel_C_BndEvt__PlayerLimitBox_K2Node_ComponentBoundEvent_8_OnSpinBoxValueCommittedEvent__DelegateSignature::InValue' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_BndEvt__PlayerLimitBox_K2Node_ComponentBoundEvent_8_OnSpinBoxValueCommittedEvent__DelegateSignature, CommitMethod) == 0x000004, "Member 'WBP_EditGameDetailsPanel_C_BndEvt__PlayerLimitBox_K2Node_ComponentBoundEvent_8_OnSpinBoxValueCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WBP_EditGameDetailsPanel.WBP_EditGameDetailsPanel_C.ExecuteUbergraph_WBP_EditGameDetailsPanel
// 0x0068 (0x0068 - 0x0000)
struct WBP_EditGameDetailsPanel_C_ExecuteUbergraph_WBP_EditGameDetailsPanel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text_3;                 // 0x0008(0x0010)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod_2;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text_2;                 // 0x0020(0x0010)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod_1;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text_1;                 // 0x0038(0x0010)(ConstParm)
	int32                                         K2Node_ComponentBoundEvent_InValue;                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0050(0x0010)(ConstParm)
	bool                                          CallFunc_IsValidServerName_bIsValid;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EditGameDetailsPanel_C_ExecuteUbergraph_WBP_EditGameDetailsPanel) == 0x000008, "Wrong alignment on WBP_EditGameDetailsPanel_C_ExecuteUbergraph_WBP_EditGameDetailsPanel");
static_assert(sizeof(WBP_EditGameDetailsPanel_C_ExecuteUbergraph_WBP_EditGameDetailsPanel) == 0x000068, "Wrong size on WBP_EditGameDetailsPanel_C_ExecuteUbergraph_WBP_EditGameDetailsPanel");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_ExecuteUbergraph_WBP_EditGameDetailsPanel, EntryPoint) == 0x000000, "Member 'WBP_EditGameDetailsPanel_C_ExecuteUbergraph_WBP_EditGameDetailsPanel::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_ExecuteUbergraph_WBP_EditGameDetailsPanel, Temp_byte_Variable) == 0x000004, "Member 'WBP_EditGameDetailsPanel_C_ExecuteUbergraph_WBP_EditGameDetailsPanel::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_ExecuteUbergraph_WBP_EditGameDetailsPanel, Temp_byte_Variable_1) == 0x000005, "Member 'WBP_EditGameDetailsPanel_C_ExecuteUbergraph_WBP_EditGameDetailsPanel::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_ExecuteUbergraph_WBP_EditGameDetailsPanel, K2Node_ComponentBoundEvent_Text_3) == 0x000008, "Member 'WBP_EditGameDetailsPanel_C_ExecuteUbergraph_WBP_EditGameDetailsPanel::K2Node_ComponentBoundEvent_Text_3' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_ExecuteUbergraph_WBP_EditGameDetailsPanel, K2Node_ComponentBoundEvent_CommitMethod_2) == 0x000018, "Member 'WBP_EditGameDetailsPanel_C_ExecuteUbergraph_WBP_EditGameDetailsPanel::K2Node_ComponentBoundEvent_CommitMethod_2' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_ExecuteUbergraph_WBP_EditGameDetailsPanel, K2Node_ComponentBoundEvent_Text_2) == 0x000020, "Member 'WBP_EditGameDetailsPanel_C_ExecuteUbergraph_WBP_EditGameDetailsPanel::K2Node_ComponentBoundEvent_Text_2' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_ExecuteUbergraph_WBP_EditGameDetailsPanel, K2Node_ComponentBoundEvent_CommitMethod_1) == 0x000030, "Member 'WBP_EditGameDetailsPanel_C_ExecuteUbergraph_WBP_EditGameDetailsPanel::K2Node_ComponentBoundEvent_CommitMethod_1' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_ExecuteUbergraph_WBP_EditGameDetailsPanel, K2Node_ComponentBoundEvent_Text_1) == 0x000038, "Member 'WBP_EditGameDetailsPanel_C_ExecuteUbergraph_WBP_EditGameDetailsPanel::K2Node_ComponentBoundEvent_Text_1' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_ExecuteUbergraph_WBP_EditGameDetailsPanel, K2Node_ComponentBoundEvent_InValue) == 0x000048, "Member 'WBP_EditGameDetailsPanel_C_ExecuteUbergraph_WBP_EditGameDetailsPanel::K2Node_ComponentBoundEvent_InValue' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_ExecuteUbergraph_WBP_EditGameDetailsPanel, K2Node_ComponentBoundEvent_CommitMethod) == 0x00004C, "Member 'WBP_EditGameDetailsPanel_C_ExecuteUbergraph_WBP_EditGameDetailsPanel::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_ExecuteUbergraph_WBP_EditGameDetailsPanel, K2Node_ComponentBoundEvent_Text) == 0x000050, "Member 'WBP_EditGameDetailsPanel_C_ExecuteUbergraph_WBP_EditGameDetailsPanel::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_ExecuteUbergraph_WBP_EditGameDetailsPanel, CallFunc_IsValidServerName_bIsValid) == 0x000060, "Member 'WBP_EditGameDetailsPanel_C_ExecuteUbergraph_WBP_EditGameDetailsPanel::CallFunc_IsValidServerName_bIsValid' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_ExecuteUbergraph_WBP_EditGameDetailsPanel, Temp_bool_Variable) == 0x000061, "Member 'WBP_EditGameDetailsPanel_C_ExecuteUbergraph_WBP_EditGameDetailsPanel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_ExecuteUbergraph_WBP_EditGameDetailsPanel, K2Node_Select_Default) == 0x000062, "Member 'WBP_EditGameDetailsPanel_C_ExecuteUbergraph_WBP_EditGameDetailsPanel::K2Node_Select_Default' has a wrong offset!");

// Function WBP_EditGameDetailsPanel.WBP_EditGameDetailsPanel_C.GenerateChangelist
// 0x0220 (0x0220 - 0x0000)
struct WBP_EditGameDetailsPanel_C_GenerateChangelist final
{
public:
	struct FInspectorPropertyChangelist           Changelist;                                        // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FInspectorPropertyChangelistEntry> ChangesOut;                                        // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetSelectedIndex_ReturnValue;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInspectorPropertyValue                CallFunc_BoxPropertyValue_Int_ReturnValue;         // 0x0028(0x0018)(ZeroConstructor)
	struct FInspectorPropertyChangelistEntry      K2Node_MakeStruct_None;                            // 0x0040(0x0020)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_ReturnValue_1;           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetValue_ReturnValue;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInspectorPropertyValue                CallFunc_BoxPropertyValue_Boolean_ReturnValue;     // 0x0070(0x0018)(ZeroConstructor)
	struct FInspectorPropertyValue                CallFunc_BoxPropertyValue_Int_ReturnValue_1;       // 0x0088(0x0018)(ZeroConstructor)
	struct FInspectorPropertyChangelistEntry      K2Node_MakeStruct_None_1;                          // 0x00A0(0x0020)()
	struct FInspectorPropertyChangelistEntry      K2Node_MakeStruct_None_2;                          // 0x00C0(0x0020)()
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInspectorPropertyChangelist           K2Node_MakeStruct_None_3;                          // 0x00E8(0x0010)()
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x00F8(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FInspectorPropertyValue                CallFunc_BoxPropertyValue_String_ReturnValue;      // 0x0118(0x0018)(ZeroConstructor)
	class FText                                   CallFunc_GetText_ReturnValue_1;                    // 0x0130(0x0010)()
	struct FInspectorPropertyChangelistEntry      K2Node_MakeStruct_None_4;                          // 0x0140(0x0020)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInspectorPropertyValue                CallFunc_BoxPropertyValue_String_ReturnValue_1;    // 0x0178(0x0018)(ZeroConstructor)
	struct FInspectorPropertyChangelistEntry      K2Node_MakeStruct_None_5;                          // 0x0190(0x0020)()
	class FText                                   CallFunc_GetText_ReturnValue_2;                    // 0x01B0(0x0010)()
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FInspectorPropertyValue                CallFunc_BoxPropertyValue_String_ReturnValue_2;    // 0x01D8(0x0018)(ZeroConstructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInspectorPropertyChangelistEntry      K2Node_MakeStruct_None_6;                          // 0x01F8(0x0020)()
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EditGameDetailsPanel_C_GenerateChangelist) == 0x000008, "Wrong alignment on WBP_EditGameDetailsPanel_C_GenerateChangelist");
static_assert(sizeof(WBP_EditGameDetailsPanel_C_GenerateChangelist) == 0x000220, "Wrong size on WBP_EditGameDetailsPanel_C_GenerateChangelist");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_GenerateChangelist, Changelist) == 0x000000, "Member 'WBP_EditGameDetailsPanel_C_GenerateChangelist::Changelist' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_GenerateChangelist, ChangesOut) == 0x000010, "Member 'WBP_EditGameDetailsPanel_C_GenerateChangelist::ChangesOut' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_GenerateChangelist, CallFunc_GetSelectedIndex_ReturnValue) == 0x000020, "Member 'WBP_EditGameDetailsPanel_C_GenerateChangelist::CallFunc_GetSelectedIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_GenerateChangelist, CallFunc_Not_PreBool_ReturnValue) == 0x000024, "Member 'WBP_EditGameDetailsPanel_C_GenerateChangelist::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_GenerateChangelist, CallFunc_BoxPropertyValue_Int_ReturnValue) == 0x000028, "Member 'WBP_EditGameDetailsPanel_C_GenerateChangelist::CallFunc_BoxPropertyValue_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_GenerateChangelist, K2Node_MakeStruct_None) == 0x000040, "Member 'WBP_EditGameDetailsPanel_C_GenerateChangelist::K2Node_MakeStruct_None' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_GenerateChangelist, CallFunc_Array_Add_ReturnValue) == 0x000060, "Member 'WBP_EditGameDetailsPanel_C_GenerateChangelist::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_GenerateChangelist, CallFunc_GetSelectedIndex_ReturnValue_1) == 0x000064, "Member 'WBP_EditGameDetailsPanel_C_GenerateChangelist::CallFunc_GetSelectedIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_GenerateChangelist, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000068, "Member 'WBP_EditGameDetailsPanel_C_GenerateChangelist::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_GenerateChangelist, CallFunc_GetValue_ReturnValue) == 0x00006C, "Member 'WBP_EditGameDetailsPanel_C_GenerateChangelist::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_GenerateChangelist, CallFunc_BoxPropertyValue_Boolean_ReturnValue) == 0x000070, "Member 'WBP_EditGameDetailsPanel_C_GenerateChangelist::CallFunc_BoxPropertyValue_Boolean_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_GenerateChangelist, CallFunc_BoxPropertyValue_Int_ReturnValue_1) == 0x000088, "Member 'WBP_EditGameDetailsPanel_C_GenerateChangelist::CallFunc_BoxPropertyValue_Int_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_GenerateChangelist, K2Node_MakeStruct_None_1) == 0x0000A0, "Member 'WBP_EditGameDetailsPanel_C_GenerateChangelist::K2Node_MakeStruct_None_1' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_GenerateChangelist, K2Node_MakeStruct_None_2) == 0x0000C0, "Member 'WBP_EditGameDetailsPanel_C_GenerateChangelist::K2Node_MakeStruct_None_2' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_GenerateChangelist, CallFunc_Array_Add_ReturnValue_1) == 0x0000E0, "Member 'WBP_EditGameDetailsPanel_C_GenerateChangelist::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_GenerateChangelist, CallFunc_Array_Add_ReturnValue_2) == 0x0000E4, "Member 'WBP_EditGameDetailsPanel_C_GenerateChangelist::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_GenerateChangelist, K2Node_MakeStruct_None_3) == 0x0000E8, "Member 'WBP_EditGameDetailsPanel_C_GenerateChangelist::K2Node_MakeStruct_None_3' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_GenerateChangelist, CallFunc_GetText_ReturnValue) == 0x0000F8, "Member 'WBP_EditGameDetailsPanel_C_GenerateChangelist::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_GenerateChangelist, CallFunc_Conv_TextToString_ReturnValue) == 0x000108, "Member 'WBP_EditGameDetailsPanel_C_GenerateChangelist::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_GenerateChangelist, CallFunc_BoxPropertyValue_String_ReturnValue) == 0x000118, "Member 'WBP_EditGameDetailsPanel_C_GenerateChangelist::CallFunc_BoxPropertyValue_String_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_GenerateChangelist, CallFunc_GetText_ReturnValue_1) == 0x000130, "Member 'WBP_EditGameDetailsPanel_C_GenerateChangelist::CallFunc_GetText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_GenerateChangelist, K2Node_MakeStruct_None_4) == 0x000140, "Member 'WBP_EditGameDetailsPanel_C_GenerateChangelist::K2Node_MakeStruct_None_4' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_GenerateChangelist, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000160, "Member 'WBP_EditGameDetailsPanel_C_GenerateChangelist::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_GenerateChangelist, CallFunc_Array_Add_ReturnValue_3) == 0x000170, "Member 'WBP_EditGameDetailsPanel_C_GenerateChangelist::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_GenerateChangelist, CallFunc_BoxPropertyValue_String_ReturnValue_1) == 0x000178, "Member 'WBP_EditGameDetailsPanel_C_GenerateChangelist::CallFunc_BoxPropertyValue_String_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_GenerateChangelist, K2Node_MakeStruct_None_5) == 0x000190, "Member 'WBP_EditGameDetailsPanel_C_GenerateChangelist::K2Node_MakeStruct_None_5' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_GenerateChangelist, CallFunc_GetText_ReturnValue_2) == 0x0001B0, "Member 'WBP_EditGameDetailsPanel_C_GenerateChangelist::CallFunc_GetText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_GenerateChangelist, CallFunc_Array_Add_ReturnValue_4) == 0x0001C0, "Member 'WBP_EditGameDetailsPanel_C_GenerateChangelist::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_GenerateChangelist, CallFunc_Conv_TextToString_ReturnValue_2) == 0x0001C8, "Member 'WBP_EditGameDetailsPanel_C_GenerateChangelist::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_GenerateChangelist, CallFunc_BoxPropertyValue_String_ReturnValue_2) == 0x0001D8, "Member 'WBP_EditGameDetailsPanel_C_GenerateChangelist::CallFunc_BoxPropertyValue_String_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_GenerateChangelist, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001F0, "Member 'WBP_EditGameDetailsPanel_C_GenerateChangelist::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_GenerateChangelist, K2Node_MakeStruct_None_6) == 0x0001F8, "Member 'WBP_EditGameDetailsPanel_C_GenerateChangelist::K2Node_MakeStruct_None_6' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_GenerateChangelist, CallFunc_Array_Add_ReturnValue_5) == 0x000218, "Member 'WBP_EditGameDetailsPanel_C_GenerateChangelist::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");

// Function WBP_EditGameDetailsPanel.WBP_EditGameDetailsPanel_C.HandleSettingsUpdate
// 0x0008 (0x0008 - 0x0000)
struct WBP_EditGameDetailsPanel_C_HandleSettingsUpdate final
{
public:
	class UBRGameSettingsBase*                    SettingsObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EditGameDetailsPanel_C_HandleSettingsUpdate) == 0x000008, "Wrong alignment on WBP_EditGameDetailsPanel_C_HandleSettingsUpdate");
static_assert(sizeof(WBP_EditGameDetailsPanel_C_HandleSettingsUpdate) == 0x000008, "Wrong size on WBP_EditGameDetailsPanel_C_HandleSettingsUpdate");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_HandleSettingsUpdate, SettingsObject) == 0x000000, "Member 'WBP_EditGameDetailsPanel_C_HandleSettingsUpdate::SettingsObject' has a wrong offset!");

// Function WBP_EditGameDetailsPanel.WBP_EditGameDetailsPanel_C.Init
// 0x0070 (0x0070 - 0x0000)
struct WBP_EditGameDetailsPanel_C_Init final
{
public:
	bool                                          bInGame;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBRMapInfo*                             CurrentMap;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0018(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0028(0x0010)()
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x1];                                       // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UBRGameSettingsBase* SettingsObject)> K2Node_CreateDelegate_OutputDelegate;              // 0x003C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0050(0x0010)()
	class UBRGameSettingsSubsystem*               CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EditGameDetailsPanel_C_Init) == 0x000008, "Wrong alignment on WBP_EditGameDetailsPanel_C_Init");
static_assert(sizeof(WBP_EditGameDetailsPanel_C_Init) == 0x000070, "Wrong size on WBP_EditGameDetailsPanel_C_Init");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_Init, bInGame) == 0x000000, "Member 'WBP_EditGameDetailsPanel_C_Init::bInGame' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_Init, CurrentMap) == 0x000008, "Member 'WBP_EditGameDetailsPanel_C_Init::CurrentMap' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_Init, Temp_bool_Variable) == 0x000010, "Member 'WBP_EditGameDetailsPanel_C_Init::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_Init, Temp_text_Variable) == 0x000018, "Member 'WBP_EditGameDetailsPanel_C_Init::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_Init, Temp_text_Variable_1) == 0x000028, "Member 'WBP_EditGameDetailsPanel_C_Init::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_Init, Temp_bool_Variable_1) == 0x000038, "Member 'WBP_EditGameDetailsPanel_C_Init::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_Init, Temp_byte_Variable) == 0x000039, "Member 'WBP_EditGameDetailsPanel_C_Init::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_Init, Temp_byte_Variable_1) == 0x00003A, "Member 'WBP_EditGameDetailsPanel_C_Init::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_Init, K2Node_CreateDelegate_OutputDelegate) == 0x00003C, "Member 'WBP_EditGameDetailsPanel_C_Init::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_Init, K2Node_Select_Default) == 0x000050, "Member 'WBP_EditGameDetailsPanel_C_Init::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_Init, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000060, "Member 'WBP_EditGameDetailsPanel_C_Init::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_Init, K2Node_Select_Default_1) == 0x000068, "Member 'WBP_EditGameDetailsPanel_C_Init::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_EditGameDetailsPanel.WBP_EditGameDetailsPanel_C.IsDirty
// 0x0004 (0x0004 - 0x0000)
struct WBP_EditGameDetailsPanel_C_IsDirty final
{
public:
	bool                                          bYes;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EditGameDetailsPanel_C_IsDirty) == 0x000001, "Wrong alignment on WBP_EditGameDetailsPanel_C_IsDirty");
static_assert(sizeof(WBP_EditGameDetailsPanel_C_IsDirty) == 0x000004, "Wrong size on WBP_EditGameDetailsPanel_C_IsDirty");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_IsDirty, bYes) == 0x000000, "Member 'WBP_EditGameDetailsPanel_C_IsDirty::bYes' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_IsDirty, CallFunc_BooleanOR_ReturnValue) == 0x000001, "Member 'WBP_EditGameDetailsPanel_C_IsDirty::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_IsDirty, CallFunc_BooleanOR_ReturnValue_1) == 0x000002, "Member 'WBP_EditGameDetailsPanel_C_IsDirty::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_IsDirty, CallFunc_BooleanOR_ReturnValue_2) == 0x000003, "Member 'WBP_EditGameDetailsPanel_C_IsDirty::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function WBP_EditGameDetailsPanel.WBP_EditGameDetailsPanel_C.IsValidServerName
// 0x0030 (0x0030 - 0x0000)
struct WBP_EditGameDetailsPanel_C_IsValidServerName final
{
public:
	class FText                                   NameIn;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          bIsValid;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EditGameDetailsPanel_C_IsValidServerName) == 0x000008, "Wrong alignment on WBP_EditGameDetailsPanel_C_IsValidServerName");
static_assert(sizeof(WBP_EditGameDetailsPanel_C_IsValidServerName) == 0x000030, "Wrong size on WBP_EditGameDetailsPanel_C_IsValidServerName");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_IsValidServerName, NameIn) == 0x000000, "Member 'WBP_EditGameDetailsPanel_C_IsValidServerName::NameIn' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_IsValidServerName, bIsValid) == 0x000010, "Member 'WBP_EditGameDetailsPanel_C_IsValidServerName::bIsValid' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_IsValidServerName, CallFunc_Conv_TextToString_ReturnValue) == 0x000018, "Member 'WBP_EditGameDetailsPanel_C_IsValidServerName::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_IsValidServerName, CallFunc_Len_ReturnValue) == 0x000028, "Member 'WBP_EditGameDetailsPanel_C_IsValidServerName::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_IsValidServerName, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00002C, "Member 'WBP_EditGameDetailsPanel_C_IsValidServerName::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_EditGameDetailsPanel.WBP_EditGameDetailsPanel_C.LoadCurrentSettings
// 0x0040 (0x0040 - 0x0000)
struct WBP_EditGameDetailsPanel_C_LoadCurrentSettings final
{
public:
	class UBRGameSettingsSubsystem*               CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ServerSettings_General_C*           CallFunc_GetSettingsInstance_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0010(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0020(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0030(0x0010)()
};
static_assert(alignof(WBP_EditGameDetailsPanel_C_LoadCurrentSettings) == 0x000008, "Wrong alignment on WBP_EditGameDetailsPanel_C_LoadCurrentSettings");
static_assert(sizeof(WBP_EditGameDetailsPanel_C_LoadCurrentSettings) == 0x000040, "Wrong size on WBP_EditGameDetailsPanel_C_LoadCurrentSettings");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_LoadCurrentSettings, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'WBP_EditGameDetailsPanel_C_LoadCurrentSettings::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_LoadCurrentSettings, CallFunc_GetSettingsInstance_ReturnValue) == 0x000008, "Member 'WBP_EditGameDetailsPanel_C_LoadCurrentSettings::CallFunc_GetSettingsInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_LoadCurrentSettings, CallFunc_Conv_StringToText_ReturnValue) == 0x000010, "Member 'WBP_EditGameDetailsPanel_C_LoadCurrentSettings::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_LoadCurrentSettings, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000020, "Member 'WBP_EditGameDetailsPanel_C_LoadCurrentSettings::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_LoadCurrentSettings, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000030, "Member 'WBP_EditGameDetailsPanel_C_LoadCurrentSettings::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");

// Function WBP_EditGameDetailsPanel.WBP_EditGameDetailsPanel_C.SetCanChangeSettings
// 0x0001 (0x0001 - 0x0000)
struct WBP_EditGameDetailsPanel_C_SetCanChangeSettings final
{
public:
	bool                                          bCanChangeSettings;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EditGameDetailsPanel_C_SetCanChangeSettings) == 0x000001, "Wrong alignment on WBP_EditGameDetailsPanel_C_SetCanChangeSettings");
static_assert(sizeof(WBP_EditGameDetailsPanel_C_SetCanChangeSettings) == 0x000001, "Wrong size on WBP_EditGameDetailsPanel_C_SetCanChangeSettings");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_SetCanChangeSettings, bCanChangeSettings) == 0x000000, "Member 'WBP_EditGameDetailsPanel_C_SetCanChangeSettings::bCanChangeSettings' has a wrong offset!");

// Function WBP_EditGameDetailsPanel.WBP_EditGameDetailsPanel_C.SetMapPreview
// 0x0058 (0x0058 - 0x0000)
struct WBP_EditGameDetailsPanel_C_SetMapPreview final
{
public:
	class UBRMapInfo*                             Info;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EBRDialogButtonStyle                          Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EBRDialogButtonStyle                          Temp_byte_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0030(0x0010)()
	bool                                          Temp_bool_Variable_1;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBRDialogButtonStyle                          K2Node_Select_Default;                             // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0048(0x0010)()
};
static_assert(alignof(WBP_EditGameDetailsPanel_C_SetMapPreview) == 0x000008, "Wrong alignment on WBP_EditGameDetailsPanel_C_SetMapPreview");
static_assert(sizeof(WBP_EditGameDetailsPanel_C_SetMapPreview) == 0x000058, "Wrong size on WBP_EditGameDetailsPanel_C_SetMapPreview");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_SetMapPreview, Info) == 0x000000, "Member 'WBP_EditGameDetailsPanel_C_SetMapPreview::Info' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_SetMapPreview, Temp_byte_Variable) == 0x000008, "Member 'WBP_EditGameDetailsPanel_C_SetMapPreview::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_SetMapPreview, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_EditGameDetailsPanel_C_SetMapPreview::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_SetMapPreview, Temp_byte_Variable_1) == 0x000018, "Member 'WBP_EditGameDetailsPanel_C_SetMapPreview::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_SetMapPreview, Temp_bool_Variable) == 0x000019, "Member 'WBP_EditGameDetailsPanel_C_SetMapPreview::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_SetMapPreview, Temp_text_Variable) == 0x000020, "Member 'WBP_EditGameDetailsPanel_C_SetMapPreview::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_SetMapPreview, Temp_text_Variable_1) == 0x000030, "Member 'WBP_EditGameDetailsPanel_C_SetMapPreview::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_SetMapPreview, Temp_bool_Variable_1) == 0x000040, "Member 'WBP_EditGameDetailsPanel_C_SetMapPreview::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_SetMapPreview, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000041, "Member 'WBP_EditGameDetailsPanel_C_SetMapPreview::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_SetMapPreview, K2Node_Select_Default) == 0x000042, "Member 'WBP_EditGameDetailsPanel_C_SetMapPreview::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_EditGameDetailsPanel_C_SetMapPreview, K2Node_Select_Default_1) == 0x000048, "Member 'WBP_EditGameDetailsPanel_C_SetMapPreview::K2Node_Select_Default_1' has a wrong offset!");

}

