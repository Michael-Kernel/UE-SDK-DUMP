#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Component_Internal_WheelEngine

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Brickadia_structs.hpp"
#include "Brickadia_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Component_Internal_WheelEngine.Component_Internal_WheelEngine_C
// 0x0020 (0x0200 - 0x01E0)
class UComponent_Internal_WheelEngine_C final : public UBrickComponentType_Internal_WheelEngine
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        CurrentAudioComponent;                             // 0x01E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentRPM;                                        // 0x01F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentLoad;                                       // 0x01F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Effects_OnEngineAudioDescriptorUpdated(const struct FBrickComponentInstanceRef& InstanceRef, const struct FBrickComponentData_WheelEngine& EngineState, EBrickComponentPropertyChangeReason Reason);
	void Effects_OnEngineOnStateChanged(const struct FBrickComponentInstanceRef& InstanceRef, const struct FBrickComponentData_WheelEngine& EngineState, const struct FBrickWheelEngineUpdateContext& EngineContext);
	void Effects_OnEngineUpdate(const struct FBrickComponentInstanceRef& InstanceRef, const struct FBrickComponentData_WheelEngine& EngineState, const struct FBrickWheelEngineUpdateContext& EngineContext);
	void Event_Toggle_Engine_Sound(const struct FBrickComponentData_WheelEngine& Engine_State, bool Toggle);
	void ExecuteUbergraph_Component_Internal_WheelEngine(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Component_Internal_WheelEngine_C">();
	}
	static class UComponent_Internal_WheelEngine_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UComponent_Internal_WheelEngine_C>();
	}
};
static_assert(alignof(UComponent_Internal_WheelEngine_C) == 0x000008, "Wrong alignment on UComponent_Internal_WheelEngine_C");
static_assert(sizeof(UComponent_Internal_WheelEngine_C) == 0x000200, "Wrong size on UComponent_Internal_WheelEngine_C");
static_assert(offsetof(UComponent_Internal_WheelEngine_C, UberGraphFrame) == 0x0001E0, "Member 'UComponent_Internal_WheelEngine_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UComponent_Internal_WheelEngine_C, CurrentAudioComponent) == 0x0001E8, "Member 'UComponent_Internal_WheelEngine_C::CurrentAudioComponent' has a wrong offset!");
static_assert(offsetof(UComponent_Internal_WheelEngine_C, CurrentRPM) == 0x0001F0, "Member 'UComponent_Internal_WheelEngine_C::CurrentRPM' has a wrong offset!");
static_assert(offsetof(UComponent_Internal_WheelEngine_C, CurrentLoad) == 0x0001F8, "Member 'UComponent_Internal_WheelEngine_C::CurrentLoad' has a wrong offset!");

}

