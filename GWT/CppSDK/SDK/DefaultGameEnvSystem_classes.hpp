#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DefaultGameEnvSystem

#include "Basic.hpp"

#include "Snowfall_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass DefaultGameEnvSystem.DefaultGameEnvSystem_C
// 0x00D0 (0x0218 - 0x0148)
class UDefaultGameEnvSystem_C final : public USnfGameEnvSystem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0148(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FLinearColor                           Color_FL;                                          // 0x0150(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color_FR;                                          // 0x0160(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color_RL;                                          // 0x0170(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color_RR;                                          // 0x0180(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color_UP;                                          // 0x0190(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color_FW;                                          // 0x01A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxTrace;                                          // 0x01B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETraceTypeQuery                               TraceChannel;                                      // 0x01B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Distance_FL;                                       // 0x01B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor_FL;                                          // 0x01C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance_FR;                                       // 0x01C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor_FR;                                          // 0x01D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance_RL;                                       // 0x01D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor_RL;                                          // 0x01E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance_RR;                                       // 0x01E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor_RR;                                          // 0x01F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance_UP;                                       // 0x01F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor_UP;                                          // 0x0200(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance_FW;                                       // 0x0208(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor_FW;                                          // 0x0210(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_DefaultGameEnvSystem(int32 EntryPoint);
	void Blueprint_PostUpdate(float DeltaSeconds);
	void LineTrace(const struct FVector& ActorLocation, const struct FVector& Vector, float MaxDistance, ETraceTypeQuery TraceChannel_0, const struct FLinearColor& TraceColor, class FName RTPC, float* OutHitDistance, class AActor** OutHitActor);
	void PrintDistanceAndActor(const class FString& StringPrefix, class AActor* Actor, float Distance, const struct FLinearColor& TextColor, float DisplayTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DefaultGameEnvSystem_C">();
	}
	static class UDefaultGameEnvSystem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDefaultGameEnvSystem_C>();
	}
};
static_assert(alignof(UDefaultGameEnvSystem_C) == 0x000008, "Wrong alignment on UDefaultGameEnvSystem_C");
static_assert(sizeof(UDefaultGameEnvSystem_C) == 0x000218, "Wrong size on UDefaultGameEnvSystem_C");
static_assert(offsetof(UDefaultGameEnvSystem_C, UberGraphFrame) == 0x000148, "Member 'UDefaultGameEnvSystem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UDefaultGameEnvSystem_C, Color_FL) == 0x000150, "Member 'UDefaultGameEnvSystem_C::Color_FL' has a wrong offset!");
static_assert(offsetof(UDefaultGameEnvSystem_C, Color_FR) == 0x000160, "Member 'UDefaultGameEnvSystem_C::Color_FR' has a wrong offset!");
static_assert(offsetof(UDefaultGameEnvSystem_C, Color_RL) == 0x000170, "Member 'UDefaultGameEnvSystem_C::Color_RL' has a wrong offset!");
static_assert(offsetof(UDefaultGameEnvSystem_C, Color_RR) == 0x000180, "Member 'UDefaultGameEnvSystem_C::Color_RR' has a wrong offset!");
static_assert(offsetof(UDefaultGameEnvSystem_C, Color_UP) == 0x000190, "Member 'UDefaultGameEnvSystem_C::Color_UP' has a wrong offset!");
static_assert(offsetof(UDefaultGameEnvSystem_C, Color_FW) == 0x0001A0, "Member 'UDefaultGameEnvSystem_C::Color_FW' has a wrong offset!");
static_assert(offsetof(UDefaultGameEnvSystem_C, MaxTrace) == 0x0001B0, "Member 'UDefaultGameEnvSystem_C::MaxTrace' has a wrong offset!");
static_assert(offsetof(UDefaultGameEnvSystem_C, TraceChannel) == 0x0001B4, "Member 'UDefaultGameEnvSystem_C::TraceChannel' has a wrong offset!");
static_assert(offsetof(UDefaultGameEnvSystem_C, Distance_FL) == 0x0001B8, "Member 'UDefaultGameEnvSystem_C::Distance_FL' has a wrong offset!");
static_assert(offsetof(UDefaultGameEnvSystem_C, Actor_FL) == 0x0001C0, "Member 'UDefaultGameEnvSystem_C::Actor_FL' has a wrong offset!");
static_assert(offsetof(UDefaultGameEnvSystem_C, Distance_FR) == 0x0001C8, "Member 'UDefaultGameEnvSystem_C::Distance_FR' has a wrong offset!");
static_assert(offsetof(UDefaultGameEnvSystem_C, Actor_FR) == 0x0001D0, "Member 'UDefaultGameEnvSystem_C::Actor_FR' has a wrong offset!");
static_assert(offsetof(UDefaultGameEnvSystem_C, Distance_RL) == 0x0001D8, "Member 'UDefaultGameEnvSystem_C::Distance_RL' has a wrong offset!");
static_assert(offsetof(UDefaultGameEnvSystem_C, Actor_RL) == 0x0001E0, "Member 'UDefaultGameEnvSystem_C::Actor_RL' has a wrong offset!");
static_assert(offsetof(UDefaultGameEnvSystem_C, Distance_RR) == 0x0001E8, "Member 'UDefaultGameEnvSystem_C::Distance_RR' has a wrong offset!");
static_assert(offsetof(UDefaultGameEnvSystem_C, Actor_RR) == 0x0001F0, "Member 'UDefaultGameEnvSystem_C::Actor_RR' has a wrong offset!");
static_assert(offsetof(UDefaultGameEnvSystem_C, Distance_UP) == 0x0001F8, "Member 'UDefaultGameEnvSystem_C::Distance_UP' has a wrong offset!");
static_assert(offsetof(UDefaultGameEnvSystem_C, Actor_UP) == 0x000200, "Member 'UDefaultGameEnvSystem_C::Actor_UP' has a wrong offset!");
static_assert(offsetof(UDefaultGameEnvSystem_C, Distance_FW) == 0x000208, "Member 'UDefaultGameEnvSystem_C::Distance_FW' has a wrong offset!");
static_assert(offsetof(UDefaultGameEnvSystem_C, Actor_FW) == 0x000210, "Member 'UDefaultGameEnvSystem_C::Actor_FW' has a wrong offset!");

}

