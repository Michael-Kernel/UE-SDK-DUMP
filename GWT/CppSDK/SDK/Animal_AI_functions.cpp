#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Animal_AI

#include "Basic.hpp"

#include "Animal_AI_classes.hpp"
#include "Animal_AI_parameters.hpp"


namespace SDK
{

// Function Animal_AI.Animal_AI_C.OnFirstEnemyContact__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void AAnimal_AI_C::OnFirstEnemyContact__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animal_AI_C", "OnFirstEnemyContact__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Animal_AI.Animal_AI_C.ExecuteUbergraph_Animal_AI
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAnimal_AI_C::ExecuteUbergraph_Animal_AI(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animal_AI_C", "ExecuteUbergraph_Animal_AI");

	Params::Animal_AI_C_ExecuteUbergraph_Animal_AI Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Animal_AI.Animal_AI_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAnimal_AI_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animal_AI_C", "ReceiveTick");

	Params::Animal_AI_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Animal_AI.Animal_AI_C.IsLostedInSightActor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           CheckActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AAnimal_AI_C::IsLostedInSightActor(class AActor* CheckActor, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animal_AI_C", "IsLostedInSightActor");

	Params::Animal_AI_C_IsLostedInSightActor Parms{};

	Parms.CheckActor = CheckActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function Animal_AI.Animal_AI_C.GetAIEnemyContactRate
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float AAnimal_AI_C::GetAIEnemyContactRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animal_AI_C", "GetAIEnemyContactRate");

	Params::Animal_AI_C_GetAIEnemyContactRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Animal_AI.Animal_AI_C.OnChangeAIState
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AAnimal_AI_C::OnChangeAIState(class FName NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animal_AI_C", "OnChangeAIState");

	Params::Animal_AI_C_OnChangeAIState Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

