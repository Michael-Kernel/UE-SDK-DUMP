#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimalBase_CH

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AnimalBase_CH.AnimalBase_CH_C.ExecuteUbergraph_AnimalBase_CH
// 0x0008 (0x0008 - 0x0000)
struct AnimalBase_CH_C_ExecuteUbergraph_AnimalBase_CH final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimalBase_CH_C_ExecuteUbergraph_AnimalBase_CH) == 0x000004, "Wrong alignment on AnimalBase_CH_C_ExecuteUbergraph_AnimalBase_CH");
static_assert(sizeof(AnimalBase_CH_C_ExecuteUbergraph_AnimalBase_CH) == 0x000008, "Wrong size on AnimalBase_CH_C_ExecuteUbergraph_AnimalBase_CH");
static_assert(offsetof(AnimalBase_CH_C_ExecuteUbergraph_AnimalBase_CH, EntryPoint) == 0x000000, "Member 'AnimalBase_CH_C_ExecuteUbergraph_AnimalBase_CH::EntryPoint' has a wrong offset!");
static_assert(offsetof(AnimalBase_CH_C_ExecuteUbergraph_AnimalBase_CH, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'AnimalBase_CH_C_ExecuteUbergraph_AnimalBase_CH::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function AnimalBase_CH.AnimalBase_CH_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct AnimalBase_CH_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimalBase_CH_C_ReceiveTick) == 0x000004, "Wrong alignment on AnimalBase_CH_C_ReceiveTick");
static_assert(sizeof(AnimalBase_CH_C_ReceiveTick) == 0x000004, "Wrong size on AnimalBase_CH_C_ReceiveTick");
static_assert(offsetof(AnimalBase_CH_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'AnimalBase_CH_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function AnimalBase_CH.AnimalBase_CH_C.FrontObstacleCheck
// 0x0054 (0x0054 - 0x0000)
struct AnimalBase_CH_C_FrontObstacleCheck final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimalBase_CH_C_FrontObstacleCheck) == 0x000004, "Wrong alignment on AnimalBase_CH_C_FrontObstacleCheck");
static_assert(sizeof(AnimalBase_CH_C_FrontObstacleCheck) == 0x000054, "Wrong size on AnimalBase_CH_C_FrontObstacleCheck");
static_assert(offsetof(AnimalBase_CH_C_FrontObstacleCheck, DeltaTime) == 0x000000, "Member 'AnimalBase_CH_C_FrontObstacleCheck::DeltaTime' has a wrong offset!");
static_assert(offsetof(AnimalBase_CH_C_FrontObstacleCheck, CallFunc_MakeVector_ReturnValue) == 0x000004, "Member 'AnimalBase_CH_C_FrontObstacleCheck::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimalBase_CH_C_FrontObstacleCheck, CallFunc_GetActorForwardVector_ReturnValue) == 0x000010, "Member 'AnimalBase_CH_C_FrontObstacleCheck::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimalBase_CH_C_FrontObstacleCheck, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'AnimalBase_CH_C_FrontObstacleCheck::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimalBase_CH_C_FrontObstacleCheck, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000028, "Member 'AnimalBase_CH_C_FrontObstacleCheck::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimalBase_CH_C_FrontObstacleCheck, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000034, "Member 'AnimalBase_CH_C_FrontObstacleCheck::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimalBase_CH_C_FrontObstacleCheck, CallFunc_Add_VectorVector_ReturnValue) == 0x000040, "Member 'AnimalBase_CH_C_FrontObstacleCheck::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimalBase_CH_C_FrontObstacleCheck, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00004C, "Member 'AnimalBase_CH_C_FrontObstacleCheck::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimalBase_CH_C_FrontObstacleCheck, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000050, "Member 'AnimalBase_CH_C_FrontObstacleCheck::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

}

