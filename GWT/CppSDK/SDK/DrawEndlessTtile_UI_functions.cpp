#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DrawEndlessTtile_UI

#include "Basic.hpp"

#include "DrawEndlessTtile_UI_classes.hpp"
#include "DrawEndlessTtile_UI_parameters.hpp"


namespace SDK
{

// Function DrawEndlessTtile_UI.DrawEndlessTtile_UI_C.ExecuteUbergraph_DrawEndlessTtile_UI
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDrawEndlessTtile_UI_C::ExecuteUbergraph_DrawEndlessTtile_UI(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DrawEndlessTtile_UI_C", "ExecuteUbergraph_DrawEndlessTtile_UI");

	Params::DrawEndlessTtile_UI_C_ExecuteUbergraph_DrawEndlessTtile_UI Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DrawEndlessTtile_UI.DrawEndlessTtile_UI_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UDrawEndlessTtile_UI_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DrawEndlessTtile_UI_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DrawEndlessTtile_UI.DrawEndlessTtile_UI_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDrawEndlessTtile_UI_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DrawEndlessTtile_UI_C", "PreConstruct");

	Params::DrawEndlessTtile_UI_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}

}

