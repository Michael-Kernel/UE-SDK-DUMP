#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimNotifyState_Impulse

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AnimNotifyState_Impulse.AnimNotifyState_Impulse_C.Received_NotifyBegin
// 0x0068 (0x0068 - 0x0000)
struct AnimNotifyState_Impulse_C_Received_NotifyBegin final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Animation;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TotalDuration;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAT_Character_BP_C*                     K2Node_DynamicCast_AsAT_Character_BP;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimNotifyState_Impulse_C_Received_NotifyBegin) == 0x000008, "Wrong alignment on AnimNotifyState_Impulse_C_Received_NotifyBegin");
static_assert(sizeof(AnimNotifyState_Impulse_C_Received_NotifyBegin) == 0x000068, "Wrong size on AnimNotifyState_Impulse_C_Received_NotifyBegin");
static_assert(offsetof(AnimNotifyState_Impulse_C_Received_NotifyBegin, MeshComp) == 0x000000, "Member 'AnimNotifyState_Impulse_C_Received_NotifyBegin::MeshComp' has a wrong offset!");
static_assert(offsetof(AnimNotifyState_Impulse_C_Received_NotifyBegin, Animation) == 0x000008, "Member 'AnimNotifyState_Impulse_C_Received_NotifyBegin::Animation' has a wrong offset!");
static_assert(offsetof(AnimNotifyState_Impulse_C_Received_NotifyBegin, TotalDuration) == 0x000010, "Member 'AnimNotifyState_Impulse_C_Received_NotifyBegin::TotalDuration' has a wrong offset!");
static_assert(offsetof(AnimNotifyState_Impulse_C_Received_NotifyBegin, ReturnValue) == 0x000014, "Member 'AnimNotifyState_Impulse_C_Received_NotifyBegin::ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotifyState_Impulse_C_Received_NotifyBegin, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'AnimNotifyState_Impulse_C_Received_NotifyBegin::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotifyState_Impulse_C_Received_NotifyBegin, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'AnimNotifyState_Impulse_C_Received_NotifyBegin::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotifyState_Impulse_C_Received_NotifyBegin, K2Node_DynamicCast_AsAT_Character_BP) == 0x000028, "Member 'AnimNotifyState_Impulse_C_Received_NotifyBegin::K2Node_DynamicCast_AsAT_Character_BP' has a wrong offset!");
static_assert(offsetof(AnimNotifyState_Impulse_C_Received_NotifyBegin, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'AnimNotifyState_Impulse_C_Received_NotifyBegin::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AnimNotifyState_Impulse_C_Received_NotifyBegin, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000034, "Member 'AnimNotifyState_Impulse_C_Received_NotifyBegin::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotifyState_Impulse_C_Received_NotifyBegin, CallFunc_GetForwardVector_ReturnValue) == 0x000040, "Member 'AnimNotifyState_Impulse_C_Received_NotifyBegin::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotifyState_Impulse_C_Received_NotifyBegin, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00004C, "Member 'AnimNotifyState_Impulse_C_Received_NotifyBegin::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotifyState_Impulse_C_Received_NotifyBegin, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x000058, "Member 'AnimNotifyState_Impulse_C_Received_NotifyBegin::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");

// Function AnimNotifyState_Impulse.AnimNotifyState_Impulse_C.Received_NotifyTick
// 0x0060 (0x0060 - 0x0000)
struct AnimNotifyState_Impulse_C_Received_NotifyTick final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Animation;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FrameDeltaTime;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAT_Character_BP_C*                     K2Node_DynamicCast_AsAT_Character_BP;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimNotifyState_Impulse_C_Received_NotifyTick) == 0x000008, "Wrong alignment on AnimNotifyState_Impulse_C_Received_NotifyTick");
static_assert(sizeof(AnimNotifyState_Impulse_C_Received_NotifyTick) == 0x000060, "Wrong size on AnimNotifyState_Impulse_C_Received_NotifyTick");
static_assert(offsetof(AnimNotifyState_Impulse_C_Received_NotifyTick, MeshComp) == 0x000000, "Member 'AnimNotifyState_Impulse_C_Received_NotifyTick::MeshComp' has a wrong offset!");
static_assert(offsetof(AnimNotifyState_Impulse_C_Received_NotifyTick, Animation) == 0x000008, "Member 'AnimNotifyState_Impulse_C_Received_NotifyTick::Animation' has a wrong offset!");
static_assert(offsetof(AnimNotifyState_Impulse_C_Received_NotifyTick, FrameDeltaTime) == 0x000010, "Member 'AnimNotifyState_Impulse_C_Received_NotifyTick::FrameDeltaTime' has a wrong offset!");
static_assert(offsetof(AnimNotifyState_Impulse_C_Received_NotifyTick, ReturnValue) == 0x000014, "Member 'AnimNotifyState_Impulse_C_Received_NotifyTick::ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotifyState_Impulse_C_Received_NotifyTick, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'AnimNotifyState_Impulse_C_Received_NotifyTick::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotifyState_Impulse_C_Received_NotifyTick, K2Node_DynamicCast_AsAT_Character_BP) == 0x000020, "Member 'AnimNotifyState_Impulse_C_Received_NotifyTick::K2Node_DynamicCast_AsAT_Character_BP' has a wrong offset!");
static_assert(offsetof(AnimNotifyState_Impulse_C_Received_NotifyTick, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'AnimNotifyState_Impulse_C_Received_NotifyTick::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AnimNotifyState_Impulse_C_Received_NotifyTick, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00002C, "Member 'AnimNotifyState_Impulse_C_Received_NotifyTick::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotifyState_Impulse_C_Received_NotifyTick, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000038, "Member 'AnimNotifyState_Impulse_C_Received_NotifyTick::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotifyState_Impulse_C_Received_NotifyTick, CallFunc_GetForwardVector_ReturnValue) == 0x00003C, "Member 'AnimNotifyState_Impulse_C_Received_NotifyTick::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotifyState_Impulse_C_Received_NotifyTick, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000048, "Member 'AnimNotifyState_Impulse_C_Received_NotifyTick::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimNotifyState_Impulse_C_Received_NotifyTick, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x000054, "Member 'AnimNotifyState_Impulse_C_Received_NotifyTick::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");

}

