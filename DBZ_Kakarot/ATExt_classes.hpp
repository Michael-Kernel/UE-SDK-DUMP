#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ATExt

#include "Basic.hpp"

#include "GCG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "CFramework_classes.hpp"
#include "ATExt_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AT_structs.hpp"
#include "AT_classes.hpp"


namespace SDK
{

// Class ATExt.ATEventBattleLoader
// 0x0000 (0x0338 - 0x0338)
class AATEventBattleLoader final : public AActor
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleLoader">();
	}
	static class AATEventBattleLoader* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATEventBattleLoader>();
	}
};
static_assert(alignof(AATEventBattleLoader) == 0x000008, "Wrong alignment on AATEventBattleLoader");
static_assert(sizeof(AATEventBattleLoader) == 0x000338, "Wrong size on AATEventBattleLoader");

// Class ATExt.ATEventBattlePhaseBase
// 0x0008 (0x0030 - 0x0028)
class UATEventBattlePhaseBase : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattlePhaseBase">();
	}
	static class UATEventBattlePhaseBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATEventBattlePhaseBase>();
	}
};
static_assert(alignof(UATEventBattlePhaseBase) == 0x000008, "Wrong alignment on UATEventBattlePhaseBase");
static_assert(sizeof(UATEventBattlePhaseBase) == 0x000030, "Wrong size on UATEventBattlePhaseBase");

// Class ATExt.ATGeneralBattleMainPhase
// 0x0058 (0x0088 - 0x0030)
class UATGeneralBattleMainPhase : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x58];                                      // 0x0030(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATGeneralBattleMainPhase">();
	}
	static class UATGeneralBattleMainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATGeneralBattleMainPhase>();
	}
};
static_assert(alignof(UATGeneralBattleMainPhase) == 0x000008, "Wrong alignment on UATGeneralBattleMainPhase");
static_assert(sizeof(UATGeneralBattleMainPhase) == 0x000088, "Wrong size on UATGeneralBattleMainPhase");

// Class ATExt.ATAndroidAssaultBattleMainPhase
// 0x0000 (0x0088 - 0x0088)
class UATAndroidAssaultBattleMainPhase final : public UATGeneralBattleMainPhase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATAndroidAssaultBattleMainPhase">();
	}
	static class UATAndroidAssaultBattleMainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATAndroidAssaultBattleMainPhase>();
	}
};
static_assert(alignof(UATAndroidAssaultBattleMainPhase) == 0x000008, "Wrong alignment on UATAndroidAssaultBattleMainPhase");
static_assert(sizeof(UATAndroidAssaultBattleMainPhase) == 0x000088, "Wrong size on UATAndroidAssaultBattleMainPhase");

// Class ATExt.ATGeneralBattleSetUpPhase
// 0x01A0 (0x01D0 - 0x0030)
class UATGeneralBattleSetUpPhase : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x1A0];                                     // 0x0030(0x01A0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATGeneralBattleSetUpPhase">();
	}
	static class UATGeneralBattleSetUpPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATGeneralBattleSetUpPhase>();
	}
};
static_assert(alignof(UATGeneralBattleSetUpPhase) == 0x000008, "Wrong alignment on UATGeneralBattleSetUpPhase");
static_assert(sizeof(UATGeneralBattleSetUpPhase) == 0x0001D0, "Wrong size on UATGeneralBattleSetUpPhase");

// Class ATExt.ATEventBattleB0400010SetupPhase
// 0x0000 (0x01D0 - 0x01D0)
class UATEventBattleB0400010SetupPhase final : public UATGeneralBattleSetUpPhase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleB0400010SetupPhase">();
	}
	static class UATEventBattleB0400010SetupPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATEventBattleB0400010SetupPhase>();
	}
};
static_assert(alignof(UATEventBattleB0400010SetupPhase) == 0x000008, "Wrong alignment on UATEventBattleB0400010SetupPhase");
static_assert(sizeof(UATEventBattleB0400010SetupPhase) == 0x0001D0, "Wrong size on UATEventBattleB0400010SetupPhase");

// Class ATExt.ATEventBattleRootManagerBase
// 0x00B0 (0x03E8 - 0x0338)
class AATEventBattleRootManagerBase : public AActor
{
public:
	TArray<TSubclassOf<class UATEventBattlePhaseBase>> PhaseClass;                                        // 0x0338(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)
	struct FHiddenMobInfo                         PhaseVisibleMob;                                   // 0x0348(0x0008)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	TArray<class UATEventBattlePhaseBase*>        PhaseTbl;                                          // 0x0350(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UATEventBattleSituationJudge*           StuationJudge;                                     // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UATEventBattleCondition*                BattleCondition;                                   // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UATEventBattleAfterAction*              AfterAction;                                       // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UATEventBattleMission*                  BattleMission;                                     // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UATEventBattleCounter*                  BattleCounter;                                     // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class AActor>                     RoofBarrierClass;                                  // 0x0388(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         RoofBarrierOffset;                                 // 0x0390(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_394[0x4];                                      // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 RoofBarrierActor;                                  // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterial*                              PostEffectMaterial;                                // 0x03A0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UATEventBattleMobPlacement> MobPlacementClass;                                 // 0x03A8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UATEventBattleMobPlacement*             MobPlacement;                                      // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         AutoBattleFieldRadius;                             // 0x03B8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         AutoBattleFieldHeight;                             // 0x03BC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3C0[0x10];                                     // 0x03C0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleBarrier*                         AutoBattleField;                                   // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AStaticMeshActor*                       BattleFieldEffect;                                 // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3E0[0x8];                                      // 0x03E0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleRootManagerBase">();
	}
	static class AATEventBattleRootManagerBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATEventBattleRootManagerBase>();
	}
};
static_assert(alignof(AATEventBattleRootManagerBase) == 0x000008, "Wrong alignment on AATEventBattleRootManagerBase");
static_assert(sizeof(AATEventBattleRootManagerBase) == 0x0003E8, "Wrong size on AATEventBattleRootManagerBase");
static_assert(offsetof(AATEventBattleRootManagerBase, PhaseClass) == 0x000338, "Member 'AATEventBattleRootManagerBase::PhaseClass' has a wrong offset!");
static_assert(offsetof(AATEventBattleRootManagerBase, PhaseVisibleMob) == 0x000348, "Member 'AATEventBattleRootManagerBase::PhaseVisibleMob' has a wrong offset!");
static_assert(offsetof(AATEventBattleRootManagerBase, PhaseTbl) == 0x000350, "Member 'AATEventBattleRootManagerBase::PhaseTbl' has a wrong offset!");
static_assert(offsetof(AATEventBattleRootManagerBase, StuationJudge) == 0x000360, "Member 'AATEventBattleRootManagerBase::StuationJudge' has a wrong offset!");
static_assert(offsetof(AATEventBattleRootManagerBase, BattleCondition) == 0x000368, "Member 'AATEventBattleRootManagerBase::BattleCondition' has a wrong offset!");
static_assert(offsetof(AATEventBattleRootManagerBase, AfterAction) == 0x000370, "Member 'AATEventBattleRootManagerBase::AfterAction' has a wrong offset!");
static_assert(offsetof(AATEventBattleRootManagerBase, BattleMission) == 0x000378, "Member 'AATEventBattleRootManagerBase::BattleMission' has a wrong offset!");
static_assert(offsetof(AATEventBattleRootManagerBase, BattleCounter) == 0x000380, "Member 'AATEventBattleRootManagerBase::BattleCounter' has a wrong offset!");
static_assert(offsetof(AATEventBattleRootManagerBase, RoofBarrierClass) == 0x000388, "Member 'AATEventBattleRootManagerBase::RoofBarrierClass' has a wrong offset!");
static_assert(offsetof(AATEventBattleRootManagerBase, RoofBarrierOffset) == 0x000390, "Member 'AATEventBattleRootManagerBase::RoofBarrierOffset' has a wrong offset!");
static_assert(offsetof(AATEventBattleRootManagerBase, RoofBarrierActor) == 0x000398, "Member 'AATEventBattleRootManagerBase::RoofBarrierActor' has a wrong offset!");
static_assert(offsetof(AATEventBattleRootManagerBase, PostEffectMaterial) == 0x0003A0, "Member 'AATEventBattleRootManagerBase::PostEffectMaterial' has a wrong offset!");
static_assert(offsetof(AATEventBattleRootManagerBase, MobPlacementClass) == 0x0003A8, "Member 'AATEventBattleRootManagerBase::MobPlacementClass' has a wrong offset!");
static_assert(offsetof(AATEventBattleRootManagerBase, MobPlacement) == 0x0003B0, "Member 'AATEventBattleRootManagerBase::MobPlacement' has a wrong offset!");
static_assert(offsetof(AATEventBattleRootManagerBase, AutoBattleFieldRadius) == 0x0003B8, "Member 'AATEventBattleRootManagerBase::AutoBattleFieldRadius' has a wrong offset!");
static_assert(offsetof(AATEventBattleRootManagerBase, AutoBattleFieldHeight) == 0x0003BC, "Member 'AATEventBattleRootManagerBase::AutoBattleFieldHeight' has a wrong offset!");
static_assert(offsetof(AATEventBattleRootManagerBase, AutoBattleField) == 0x0003D0, "Member 'AATEventBattleRootManagerBase::AutoBattleField' has a wrong offset!");
static_assert(offsetof(AATEventBattleRootManagerBase, BattleFieldEffect) == 0x0003D8, "Member 'AATEventBattleRootManagerBase::BattleFieldEffect' has a wrong offset!");

// Class ATExt.ATCommunityBoard
// 0x0110 (0x0138 - 0x0028)
class UATCommunityBoard final : public UObject
{
public:
	uint8                                         Pad_28[0x110];                                     // 0x0028(0x0110)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCommunityBoard">();
	}
	static class UATCommunityBoard* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATCommunityBoard>();
	}
};
static_assert(alignof(UATCommunityBoard) == 0x000008, "Wrong alignment on UATCommunityBoard");
static_assert(sizeof(UATCommunityBoard) == 0x000138, "Wrong size on UATCommunityBoard");

// Class ATExt.ATAndroidAssaultBattleRootManager
// 0x00C8 (0x04B0 - 0x03E8)
class AATAndroidAssaultBattleRootManager final : public AATEventBattleRootManagerBase
{
public:
	TArray<struct FAndroidAssaultEndConditionInfo> EndConditionInfoList;                              // 0x03E8(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3F8[0xB8];                                     // 0x03F8(0x00B8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATAndroidAssaultBattleRootManager">();
	}
	static class AATAndroidAssaultBattleRootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATAndroidAssaultBattleRootManager>();
	}
};
static_assert(alignof(AATAndroidAssaultBattleRootManager) == 0x000008, "Wrong alignment on AATAndroidAssaultBattleRootManager");
static_assert(sizeof(AATAndroidAssaultBattleRootManager) == 0x0004B0, "Wrong size on AATAndroidAssaultBattleRootManager");
static_assert(offsetof(AATAndroidAssaultBattleRootManager, EndConditionInfoList) == 0x0003E8, "Member 'AATAndroidAssaultBattleRootManager::EndConditionInfoList' has a wrong offset!");

// Class ATExt.ViewActor
// 0x00A0 (0x03D8 - 0x0338)
class AViewActor : public AActor
{
public:
	class USpringArmComponent*                    M_xSpringArmComp;                                  // 0x0338(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                       M_xCameraComp;                                     // 0x0340(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_348[0x90];                                     // 0x0348(0x0090)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActor">();
	}
	static class AViewActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActor>();
	}
};
static_assert(alignof(AViewActor) == 0x000008, "Wrong alignment on AViewActor");
static_assert(sizeof(AViewActor) == 0x0003D8, "Wrong size on AViewActor");
static_assert(offsetof(AViewActor, M_xSpringArmComp) == 0x000338, "Member 'AViewActor::M_xSpringArmComp' has a wrong offset!");
static_assert(offsetof(AViewActor, M_xCameraComp) == 0x000340, "Member 'AViewActor::M_xCameraComp' has a wrong offset!");

// Class ATExt.ViewActorTargetActor
// 0x0008 (0x03E0 - 0x03D8)
class AViewActorTargetActor final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x8];                                      // 0x03D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorTargetActor">();
	}
	static class AViewActorTargetActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorTargetActor>();
	}
};
static_assert(alignof(AViewActorTargetActor) == 0x000008, "Wrong alignment on AViewActorTargetActor");
static_assert(sizeof(AViewActorTargetActor) == 0x0003E0, "Wrong size on AViewActorTargetActor");

// Class ATExt.ATAndroidAssaultBattleSettlePhase
// 0x0090 (0x00C0 - 0x0030)
class UATAndroidAssaultBattleSettlePhase final : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x90];                                      // 0x0030(0x0090)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnEndBattleHUD();
	void OnEndResult();
	void OnEndWarning();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATAndroidAssaultBattleSettlePhase">();
	}
	static class UATAndroidAssaultBattleSettlePhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATAndroidAssaultBattleSettlePhase>();
	}
};
static_assert(alignof(UATAndroidAssaultBattleSettlePhase) == 0x000008, "Wrong alignment on UATAndroidAssaultBattleSettlePhase");
static_assert(sizeof(UATAndroidAssaultBattleSettlePhase) == 0x0000C0, "Wrong size on UATAndroidAssaultBattleSettlePhase");

// Class ATExt.ATAndroidAssaultBattleSetUpPhase
// 0x01A0 (0x01D0 - 0x0030)
class UATAndroidAssaultBattleSetUpPhase final : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x1A0];                                     // 0x0030(0x01A0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATAndroidAssaultBattleSetUpPhase">();
	}
	static class UATAndroidAssaultBattleSetUpPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATAndroidAssaultBattleSetUpPhase>();
	}
};
static_assert(alignof(UATAndroidAssaultBattleSetUpPhase) == 0x000008, "Wrong alignment on UATAndroidAssaultBattleSetUpPhase");
static_assert(sizeof(UATAndroidAssaultBattleSetUpPhase) == 0x0001D0, "Wrong size on UATAndroidAssaultBattleSetUpPhase");

// Class ATExt.DMBattleDebugDispMotionInfo
// 0x0000 (0x0058 - 0x0058)
class UDMBattleDebugDispMotionInfo final : public UCFDebugMenuEventHandlerBool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DMBattleDebugDispMotionInfo">();
	}
	static class UDMBattleDebugDispMotionInfo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDMBattleDebugDispMotionInfo>();
	}
};
static_assert(alignof(UDMBattleDebugDispMotionInfo) == 0x000008, "Wrong alignment on UDMBattleDebugDispMotionInfo");
static_assert(sizeof(UDMBattleDebugDispMotionInfo) == 0x000058, "Wrong size on UDMBattleDebugDispMotionInfo");

// Class ATExt.ATAnimationBlueprintChanger
// 0x0040 (0x0140 - 0x0100)
class UATAnimationBlueprintChanger final : public UActorComponent
{
public:
	TArray<struct FATABPChangerRequest>           RequestList;                                       // 0x0100(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_110[0x30];                                     // 0x0110(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATAnimationBlueprintChanger">();
	}
	static class UATAnimationBlueprintChanger* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATAnimationBlueprintChanger>();
	}
};
static_assert(alignof(UATAnimationBlueprintChanger) == 0x000008, "Wrong alignment on UATAnimationBlueprintChanger");
static_assert(sizeof(UATAnimationBlueprintChanger) == 0x000140, "Wrong size on UATAnimationBlueprintChanger");
static_assert(offsetof(UATAnimationBlueprintChanger, RequestList) == 0x000100, "Member 'UATAnimationBlueprintChanger::RequestList' has a wrong offset!");

// Class ATExt.ATAnimNotify_CtrlBrightness
// 0x0010 (0x0048 - 0x0038)
class UATAnimNotify_CtrlBrightness final : public UAnimNotify
{
public:
	class UCurveFloat*                            InAnimCurve;                                       // 0x0038(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            OutAnimCurve;                                      // 0x0040(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATAnimNotify_CtrlBrightness">();
	}
	static class UATAnimNotify_CtrlBrightness* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATAnimNotify_CtrlBrightness>();
	}
};
static_assert(alignof(UATAnimNotify_CtrlBrightness) == 0x000008, "Wrong alignment on UATAnimNotify_CtrlBrightness");
static_assert(sizeof(UATAnimNotify_CtrlBrightness) == 0x000048, "Wrong size on UATAnimNotify_CtrlBrightness");
static_assert(offsetof(UATAnimNotify_CtrlBrightness, InAnimCurve) == 0x000038, "Member 'UATAnimNotify_CtrlBrightness::InAnimCurve' has a wrong offset!");
static_assert(offsetof(UATAnimNotify_CtrlBrightness, OutAnimCurve) == 0x000040, "Member 'UATAnimNotify_CtrlBrightness::OutAnimCurve' has a wrong offset!");

// Class ATExt.ATAnimNotify_WearEffectSpawn
// 0x0030 (0x0068 - 0x0038)
class UATAnimNotify_WearEffectSpawn : public UAnimNotify
{
public:
	class UParticleSystem*                        Effect;                                            // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   AttachName;                                        // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                OffsetLocation;                                    // 0x0048(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                               OffsetRotation;                                    // 0x0054(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	EAttachLocation                               AttachType;                                        // 0x0060(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATAnimNotify_WearEffectSpawn">();
	}
	static class UATAnimNotify_WearEffectSpawn* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATAnimNotify_WearEffectSpawn>();
	}
};
static_assert(alignof(UATAnimNotify_WearEffectSpawn) == 0x000008, "Wrong alignment on UATAnimNotify_WearEffectSpawn");
static_assert(sizeof(UATAnimNotify_WearEffectSpawn) == 0x000068, "Wrong size on UATAnimNotify_WearEffectSpawn");
static_assert(offsetof(UATAnimNotify_WearEffectSpawn, Effect) == 0x000038, "Member 'UATAnimNotify_WearEffectSpawn::Effect' has a wrong offset!");
static_assert(offsetof(UATAnimNotify_WearEffectSpawn, AttachName) == 0x000040, "Member 'UATAnimNotify_WearEffectSpawn::AttachName' has a wrong offset!");
static_assert(offsetof(UATAnimNotify_WearEffectSpawn, OffsetLocation) == 0x000048, "Member 'UATAnimNotify_WearEffectSpawn::OffsetLocation' has a wrong offset!");
static_assert(offsetof(UATAnimNotify_WearEffectSpawn, OffsetRotation) == 0x000054, "Member 'UATAnimNotify_WearEffectSpawn::OffsetRotation' has a wrong offset!");
static_assert(offsetof(UATAnimNotify_WearEffectSpawn, AttachType) == 0x000060, "Member 'UATAnimNotify_WearEffectSpawn::AttachType' has a wrong offset!");

// Class ATExt.ATAnimNotifyState_LoopWearEffectSpawn
// 0x0088 (0x00B8 - 0x0030)
class UATAnimNotifyState_LoopWearEffectSpawn : public UAnimNotifyState
{
public:
	class UParticleSystem*                        Effect;                                            // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          RotationFix;                                       // 0x0038(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   AttachName;                                        // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                OffsetLocation;                                    // 0x0048(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                               OffsetRotation;                                    // 0x0054(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	EAttachLocation                               AttachType;                                        // 0x0060(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<uint32, struct FLoopWearEffectInfo>      ParticleMap;                                       // 0x0068(0x0050)(BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATAnimNotifyState_LoopWearEffectSpawn">();
	}
	static class UATAnimNotifyState_LoopWearEffectSpawn* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATAnimNotifyState_LoopWearEffectSpawn>();
	}
};
static_assert(alignof(UATAnimNotifyState_LoopWearEffectSpawn) == 0x000008, "Wrong alignment on UATAnimNotifyState_LoopWearEffectSpawn");
static_assert(sizeof(UATAnimNotifyState_LoopWearEffectSpawn) == 0x0000B8, "Wrong size on UATAnimNotifyState_LoopWearEffectSpawn");
static_assert(offsetof(UATAnimNotifyState_LoopWearEffectSpawn, Effect) == 0x000030, "Member 'UATAnimNotifyState_LoopWearEffectSpawn::Effect' has a wrong offset!");
static_assert(offsetof(UATAnimNotifyState_LoopWearEffectSpawn, RotationFix) == 0x000038, "Member 'UATAnimNotifyState_LoopWearEffectSpawn::RotationFix' has a wrong offset!");
static_assert(offsetof(UATAnimNotifyState_LoopWearEffectSpawn, AttachName) == 0x000040, "Member 'UATAnimNotifyState_LoopWearEffectSpawn::AttachName' has a wrong offset!");
static_assert(offsetof(UATAnimNotifyState_LoopWearEffectSpawn, OffsetLocation) == 0x000048, "Member 'UATAnimNotifyState_LoopWearEffectSpawn::OffsetLocation' has a wrong offset!");
static_assert(offsetof(UATAnimNotifyState_LoopWearEffectSpawn, OffsetRotation) == 0x000054, "Member 'UATAnimNotifyState_LoopWearEffectSpawn::OffsetRotation' has a wrong offset!");
static_assert(offsetof(UATAnimNotifyState_LoopWearEffectSpawn, AttachType) == 0x000060, "Member 'UATAnimNotifyState_LoopWearEffectSpawn::AttachType' has a wrong offset!");
static_assert(offsetof(UATAnimNotifyState_LoopWearEffectSpawn, ParticleMap) == 0x000068, "Member 'UATAnimNotifyState_LoopWearEffectSpawn::ParticleMap' has a wrong offset!");

// Class ATExt.ATTournamentBattleRootManager
// 0x00A8 (0x0490 - 0x03E8)
class AATTournamentBattleRootManager : public AATEventBattleRootManagerBase
{
public:
	class AATTournamentField*                     TournamentField;                                   // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UATBattleCheerManager*                  BattleCheerManager;                                // 0x03F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3F8[0x70];                                     // 0x03F8(0x0070)(Fixing Size After Last Property [ Dumper-7 ])
	class UATTournamentBattleBattleCountQTE*      BattleCountQTE;                                    // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UATTournamentBattleRingoutWarning*      RingoutWarning;                                    // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                             AnnounserCrossTalkDataTable;                       // 0x0478(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UATBattleCheerManager>      BattleCheerManagerClass;                           // 0x0480(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TournamentFieldWidth;                              // 0x0488(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TournamentFieldHeight;                             // 0x048C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATTournamentBattleRootManager">();
	}
	static class AATTournamentBattleRootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATTournamentBattleRootManager>();
	}
};
static_assert(alignof(AATTournamentBattleRootManager) == 0x000008, "Wrong alignment on AATTournamentBattleRootManager");
static_assert(sizeof(AATTournamentBattleRootManager) == 0x000490, "Wrong size on AATTournamentBattleRootManager");
static_assert(offsetof(AATTournamentBattleRootManager, TournamentField) == 0x0003E8, "Member 'AATTournamentBattleRootManager::TournamentField' has a wrong offset!");
static_assert(offsetof(AATTournamentBattleRootManager, BattleCheerManager) == 0x0003F0, "Member 'AATTournamentBattleRootManager::BattleCheerManager' has a wrong offset!");
static_assert(offsetof(AATTournamentBattleRootManager, BattleCountQTE) == 0x000468, "Member 'AATTournamentBattleRootManager::BattleCountQTE' has a wrong offset!");
static_assert(offsetof(AATTournamentBattleRootManager, RingoutWarning) == 0x000470, "Member 'AATTournamentBattleRootManager::RingoutWarning' has a wrong offset!");
static_assert(offsetof(AATTournamentBattleRootManager, AnnounserCrossTalkDataTable) == 0x000478, "Member 'AATTournamentBattleRootManager::AnnounserCrossTalkDataTable' has a wrong offset!");
static_assert(offsetof(AATTournamentBattleRootManager, BattleCheerManagerClass) == 0x000480, "Member 'AATTournamentBattleRootManager::BattleCheerManagerClass' has a wrong offset!");
static_assert(offsetof(AATTournamentBattleRootManager, TournamentFieldWidth) == 0x000488, "Member 'AATTournamentBattleRootManager::TournamentFieldWidth' has a wrong offset!");
static_assert(offsetof(AATTournamentBattleRootManager, TournamentFieldHeight) == 0x00048C, "Member 'AATTournamentBattleRootManager::TournamentFieldHeight' has a wrong offset!");

// Class ATExt.ATEventBattleB0600010ARootManager
// 0x0020 (0x04B0 - 0x0490)
class AATEventBattleB0600010ARootManager final : public AATTournamentBattleRootManager
{
public:
	float                                         FinishBlowLifeRate;                                // 0x0490(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_494[0x4];                                      // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   FinishBlowDemoId;                                  // 0x0498(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         FinishBlowRestartTime;                             // 0x04A0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         QteWaitTime;                                       // 0x04A4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         BoostWaitTime;                                     // 0x04A8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4AC[0x4];                                      // 0x04AC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleB0600010ARootManager">();
	}
	static class AATEventBattleB0600010ARootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATEventBattleB0600010ARootManager>();
	}
};
static_assert(alignof(AATEventBattleB0600010ARootManager) == 0x000008, "Wrong alignment on AATEventBattleB0600010ARootManager");
static_assert(sizeof(AATEventBattleB0600010ARootManager) == 0x0004B0, "Wrong size on AATEventBattleB0600010ARootManager");
static_assert(offsetof(AATEventBattleB0600010ARootManager, FinishBlowLifeRate) == 0x000490, "Member 'AATEventBattleB0600010ARootManager::FinishBlowLifeRate' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0600010ARootManager, FinishBlowDemoId) == 0x000498, "Member 'AATEventBattleB0600010ARootManager::FinishBlowDemoId' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0600010ARootManager, FinishBlowRestartTime) == 0x0004A0, "Member 'AATEventBattleB0600010ARootManager::FinishBlowRestartTime' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0600010ARootManager, QteWaitTime) == 0x0004A4, "Member 'AATEventBattleB0600010ARootManager::QteWaitTime' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0600010ARootManager, BoostWaitTime) == 0x0004A8, "Member 'AATEventBattleB0600010ARootManager::BoostWaitTime' has a wrong offset!");

// Class ATExt.ATAnimNotifyState_WearEffect
// 0x0008 (0x0038 - 0x0030)
class UATAnimNotifyState_WearEffect : public UAnimNotifyState
{
public:
	bool                                          UseHeatUp;                                         // 0x0030(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          NotEndHeatUp;                                      // 0x0031(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATAnimNotifyState_WearEffect">();
	}
	static class UATAnimNotifyState_WearEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATAnimNotifyState_WearEffect>();
	}
};
static_assert(alignof(UATAnimNotifyState_WearEffect) == 0x000008, "Wrong alignment on UATAnimNotifyState_WearEffect");
static_assert(sizeof(UATAnimNotifyState_WearEffect) == 0x000038, "Wrong size on UATAnimNotifyState_WearEffect");
static_assert(offsetof(UATAnimNotifyState_WearEffect, UseHeatUp) == 0x000030, "Member 'UATAnimNotifyState_WearEffect::UseHeatUp' has a wrong offset!");
static_assert(offsetof(UATAnimNotifyState_WearEffect, NotEndHeatUp) == 0x000031, "Member 'UATAnimNotifyState_WearEffect::NotEndHeatUp' has a wrong offset!");

// Class ATExt.ATCommunitySkillBase
// 0x0038 (0x0060 - 0x0028)
class UATCommunitySkillBase : public UObject
{
public:
	uint8                                         Pad_28[0x38];                                      // 0x0028(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCommunitySkillBase">();
	}
	static class UATCommunitySkillBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATCommunitySkillBase>();
	}
};
static_assert(alignof(UATCommunitySkillBase) == 0x000008, "Wrong alignment on UATCommunitySkillBase");
static_assert(sizeof(UATCommunitySkillBase) == 0x000060, "Wrong size on UATCommunitySkillBase");

// Class ATExt.ATCommunitySkillAdult
// 0x0010 (0x0070 - 0x0060)
class UATCommunitySkillAdult final : public UATCommunitySkillBase
{
public:
	uint8                                         Pad_60[0x10];                                      // 0x0060(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCommunitySkillAdult">();
	}
	static class UATCommunitySkillAdult* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATCommunitySkillAdult>();
	}
};
static_assert(alignof(UATCommunitySkillAdult) == 0x000008, "Wrong alignment on UATCommunitySkillAdult");
static_assert(sizeof(UATCommunitySkillAdult) == 0x000070, "Wrong size on UATCommunitySkillAdult");

// Class ATExt.ATBossBattle0101MainPhase
// 0x0058 (0x0088 - 0x0030)
class UATBossBattle0101MainPhase final : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x58];                                      // 0x0030(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0101MainPhase">();
	}
	static class UATBossBattle0101MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATBossBattle0101MainPhase>();
	}
};
static_assert(alignof(UATBossBattle0101MainPhase) == 0x000008, "Wrong alignment on UATBossBattle0101MainPhase");
static_assert(sizeof(UATBossBattle0101MainPhase) == 0x000088, "Wrong size on UATBossBattle0101MainPhase");

// Class ATExt.ATBossBattle0101RootManager
// 0x0008 (0x03F0 - 0x03E8)
class AATBossBattle0101RootManager final : public AATEventBattleRootManagerBase
{
public:
	float                                         MarginValue;                                       // 0x03E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0101RootManager">();
	}
	static class AATBossBattle0101RootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATBossBattle0101RootManager>();
	}
};
static_assert(alignof(AATBossBattle0101RootManager) == 0x000008, "Wrong alignment on AATBossBattle0101RootManager");
static_assert(sizeof(AATBossBattle0101RootManager) == 0x0003F0, "Wrong size on AATBossBattle0101RootManager");
static_assert(offsetof(AATBossBattle0101RootManager, MarginValue) == 0x0003E8, "Member 'AATBossBattle0101RootManager::MarginValue' has a wrong offset!");

// Class ATExt.ATBossBattle0102MainPhase
// 0x0060 (0x0090 - 0x0030)
class UATBossBattle0102MainPhase final : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x60];                                      // 0x0030(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0102MainPhase">();
	}
	static class UATBossBattle0102MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATBossBattle0102MainPhase>();
	}
};
static_assert(alignof(UATBossBattle0102MainPhase) == 0x000008, "Wrong alignment on UATBossBattle0102MainPhase");
static_assert(sizeof(UATBossBattle0102MainPhase) == 0x000090, "Wrong size on UATBossBattle0102MainPhase");

// Class ATExt.ATEventBattle0300070MainPhase
// 0x0028 (0x00B0 - 0x0088)
class UATEventBattle0300070MainPhase final : public UATGeneralBattleMainPhase
{
public:
	uint8                                         Pad_88[0x28];                                      // 0x0088(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void StartFinishBlow(class AAT_Character* EnemyChara);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattle0300070MainPhase">();
	}
	static class UATEventBattle0300070MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATEventBattle0300070MainPhase>();
	}
};
static_assert(alignof(UATEventBattle0300070MainPhase) == 0x000008, "Wrong alignment on UATEventBattle0300070MainPhase");
static_assert(sizeof(UATEventBattle0300070MainPhase) == 0x0000B0, "Wrong size on UATEventBattle0300070MainPhase");

// Class ATExt.ATCharacterCpl097Base
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl097Base : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl097Base">();
	}
	static class AATCharacterCpl097Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl097Base>();
	}
};
static_assert(alignof(AATCharacterCpl097Base) == 0x000010, "Wrong alignment on AATCharacterCpl097Base");
static_assert(sizeof(AATCharacterCpl097Base) == 0x001110, "Wrong size on AATCharacterCpl097Base");

// Class ATExt.ATCharacterCpl097c01
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl097c01 final : public AATCharacterCpl097Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl097c01">();
	}
	static class AATCharacterCpl097c01* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl097c01>();
	}
};
static_assert(alignof(AATCharacterCpl097c01) == 0x000010, "Wrong alignment on AATCharacterCpl097c01");
static_assert(sizeof(AATCharacterCpl097c01) == 0x001110, "Wrong size on AATCharacterCpl097c01");

// Class ATExt.ATBossBattle0102RootManager
// 0x0008 (0x03F0 - 0x03E8)
class AATBossBattle0102RootManager final : public AATEventBattleRootManagerBase
{
public:
	float                                         MarginValue;                                       // 0x03E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         HeatupValue;                                       // 0x03EC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0102RootManager">();
	}
	static class AATBossBattle0102RootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATBossBattle0102RootManager>();
	}
};
static_assert(alignof(AATBossBattle0102RootManager) == 0x000008, "Wrong alignment on AATBossBattle0102RootManager");
static_assert(sizeof(AATBossBattle0102RootManager) == 0x0003F0, "Wrong size on AATBossBattle0102RootManager");
static_assert(offsetof(AATBossBattle0102RootManager, MarginValue) == 0x0003E8, "Member 'AATBossBattle0102RootManager::MarginValue' has a wrong offset!");
static_assert(offsetof(AATBossBattle0102RootManager, HeatupValue) == 0x0003EC, "Member 'AATBossBattle0102RootManager::HeatupValue' has a wrong offset!");

// Class ATExt.ATGroupBattleMobNear
// 0x0028 (0x0360 - 0x0338)
class AATGroupBattleMobNear final : public AActor
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent;                             // 0x0338(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_340[0x20];                                     // 0x0340(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATGroupBattleMobNear">();
	}
	static class AATGroupBattleMobNear* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATGroupBattleMobNear>();
	}
};
static_assert(alignof(AATGroupBattleMobNear) == 0x000008, "Wrong alignment on AATGroupBattleMobNear");
static_assert(sizeof(AATGroupBattleMobNear) == 0x000360, "Wrong size on AATGroupBattleMobNear");
static_assert(offsetof(AATGroupBattleMobNear, SkeletalMeshComponent) == 0x000338, "Member 'AATGroupBattleMobNear::SkeletalMeshComponent' has a wrong offset!");

// Class ATExt.ATBossBattle0201MainPhase
// 0x0058 (0x0088 - 0x0030)
class UATBossBattle0201MainPhase final : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x58];                                      // 0x0030(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0201MainPhase">();
	}
	static class UATBossBattle0201MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATBossBattle0201MainPhase>();
	}
};
static_assert(alignof(UATBossBattle0201MainPhase) == 0x000008, "Wrong alignment on UATBossBattle0201MainPhase");
static_assert(sizeof(UATBossBattle0201MainPhase) == 0x000088, "Wrong size on UATBossBattle0201MainPhase");

// Class ATExt.ATBossBattle0201RootManager
// 0x0000 (0x03E8 - 0x03E8)
class AATBossBattle0201RootManager final : public AATEventBattleRootManagerBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0201RootManager">();
	}
	static class AATBossBattle0201RootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATBossBattle0201RootManager>();
	}
};
static_assert(alignof(AATBossBattle0201RootManager) == 0x000008, "Wrong alignment on AATBossBattle0201RootManager");
static_assert(sizeof(AATBossBattle0201RootManager) == 0x0003E8, "Wrong size on AATBossBattle0201RootManager");

// Class ATExt.ATBossBattle0301MainPhase
// 0x0060 (0x0090 - 0x0030)
class UATBossBattle0301MainPhase final : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x60];                                      // 0x0030(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0301MainPhase">();
	}
	static class UATBossBattle0301MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATBossBattle0301MainPhase>();
	}
};
static_assert(alignof(UATBossBattle0301MainPhase) == 0x000008, "Wrong alignment on UATBossBattle0301MainPhase");
static_assert(sizeof(UATBossBattle0301MainPhase) == 0x000090, "Wrong size on UATBossBattle0301MainPhase");

// Class ATExt.ATSceneChangeCommonCallBase
// 0x0000 (0x0030 - 0x0030)
class UATSceneChangeCommonCallBase : public UCFSceneChangeCommonCall
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneChangeCommonCallBase">();
	}
	static class UATSceneChangeCommonCallBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneChangeCommonCallBase>();
	}
};
static_assert(alignof(UATSceneChangeCommonCallBase) == 0x000008, "Wrong alignment on UATSceneChangeCommonCallBase");
static_assert(sizeof(UATSceneChangeCommonCallBase) == 0x000030, "Wrong size on UATSceneChangeCommonCallBase");

// Class ATExt.ATSceneChangeCommonCallLevelChange
// 0x0000 (0x0030 - 0x0030)
class UATSceneChangeCommonCallLevelChange final : public UATSceneChangeCommonCallBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneChangeCommonCallLevelChange">();
	}
	static class UATSceneChangeCommonCallLevelChange* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneChangeCommonCallLevelChange>();
	}
};
static_assert(alignof(UATSceneChangeCommonCallLevelChange) == 0x000008, "Wrong alignment on UATSceneChangeCommonCallLevelChange");
static_assert(sizeof(UATSceneChangeCommonCallLevelChange) == 0x000030, "Wrong size on UATSceneChangeCommonCallLevelChange");

// Class ATExt.ATBossBattle0301RootManager
// 0x0008 (0x03F0 - 0x03E8)
class AATBossBattle0301RootManager final : public AATEventBattleRootManagerBase
{
public:
	float                                         MarginValue;                                       // 0x03E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         HeatupValue;                                       // 0x03EC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0301RootManager">();
	}
	static class AATBossBattle0301RootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATBossBattle0301RootManager>();
	}
};
static_assert(alignof(AATBossBattle0301RootManager) == 0x000008, "Wrong alignment on AATBossBattle0301RootManager");
static_assert(sizeof(AATBossBattle0301RootManager) == 0x0003F0, "Wrong size on AATBossBattle0301RootManager");
static_assert(offsetof(AATBossBattle0301RootManager, MarginValue) == 0x0003E8, "Member 'AATBossBattle0301RootManager::MarginValue' has a wrong offset!");
static_assert(offsetof(AATBossBattle0301RootManager, HeatupValue) == 0x0003EC, "Member 'AATBossBattle0301RootManager::HeatupValue' has a wrong offset!");

// Class ATExt.ATEventBattle0300190MainPhase
// 0x0000 (0x0088 - 0x0088)
class UATEventBattle0300190MainPhase final : public UATGeneralBattleMainPhase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattle0300190MainPhase">();
	}
	static class UATEventBattle0300190MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATEventBattle0300190MainPhase>();
	}
};
static_assert(alignof(UATEventBattle0300190MainPhase) == 0x000008, "Wrong alignment on UATEventBattle0300190MainPhase");
static_assert(sizeof(UATEventBattle0300190MainPhase) == 0x000088, "Wrong size on UATEventBattle0300190MainPhase");

// Class ATExt.ATBossBattle0302MainPhase
// 0x0058 (0x0088 - 0x0030)
class UATBossBattle0302MainPhase final : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x58];                                      // 0x0030(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0302MainPhase">();
	}
	static class UATBossBattle0302MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATBossBattle0302MainPhase>();
	}
};
static_assert(alignof(UATBossBattle0302MainPhase) == 0x000008, "Wrong alignment on UATBossBattle0302MainPhase");
static_assert(sizeof(UATBossBattle0302MainPhase) == 0x000088, "Wrong size on UATBossBattle0302MainPhase");

// Class ATExt.ATBossBattle0302RootManager
// 0x0008 (0x03F0 - 0x03E8)
class AATBossBattle0302RootManager final : public AATEventBattleRootManagerBase
{
public:
	float                                         MarginValue;                                       // 0x03E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0302RootManager">();
	}
	static class AATBossBattle0302RootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATBossBattle0302RootManager>();
	}
};
static_assert(alignof(AATBossBattle0302RootManager) == 0x000008, "Wrong alignment on AATBossBattle0302RootManager");
static_assert(sizeof(AATBossBattle0302RootManager) == 0x0003F0, "Wrong size on AATBossBattle0302RootManager");
static_assert(offsetof(AATBossBattle0302RootManager, MarginValue) == 0x0003E8, "Member 'AATBossBattle0302RootManager::MarginValue' has a wrong offset!");

// Class ATExt.ATBossBattle0401MainPhase
// 0x0060 (0x0090 - 0x0030)
class UATBossBattle0401MainPhase final : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x60];                                      // 0x0030(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0401MainPhase">();
	}
	static class UATBossBattle0401MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATBossBattle0401MainPhase>();
	}
};
static_assert(alignof(UATBossBattle0401MainPhase) == 0x000008, "Wrong alignment on UATBossBattle0401MainPhase");
static_assert(sizeof(UATBossBattle0401MainPhase) == 0x000090, "Wrong size on UATBossBattle0401MainPhase");

// Class ATExt.ATRiver
// 0x0018 (0x0350 - 0x0338)
class AATRiver final : public AActor
{
public:
	uint8                                         Pad_338[0x10];                                     // 0x0338(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class APostProcessVolume*                     PostProcessVolume;                                 // 0x0348(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATRiver">();
	}
	static class AATRiver* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATRiver>();
	}
};
static_assert(alignof(AATRiver) == 0x000008, "Wrong alignment on AATRiver");
static_assert(sizeof(AATRiver) == 0x000350, "Wrong size on AATRiver");
static_assert(offsetof(AATRiver, PostProcessVolume) == 0x000348, "Member 'AATRiver::PostProcessVolume' has a wrong offset!");

// Class ATExt.ATCharacterCpl101B
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl101B final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl101B">();
	}
	static class AATCharacterCpl101B* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl101B>();
	}
};
static_assert(alignof(AATCharacterCpl101B) == 0x000010, "Wrong alignment on AATCharacterCpl101B");
static_assert(sizeof(AATCharacterCpl101B) == 0x001110, "Wrong size on AATCharacterCpl101B");

// Class ATExt.ATBossBattle0401RootManager
// 0x0008 (0x03F0 - 0x03E8)
class AATBossBattle0401RootManager final : public AATEventBattleRootManagerBase
{
public:
	float                                         HeatupValue;                                       // 0x03E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0401RootManager">();
	}
	static class AATBossBattle0401RootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATBossBattle0401RootManager>();
	}
};
static_assert(alignof(AATBossBattle0401RootManager) == 0x000008, "Wrong alignment on AATBossBattle0401RootManager");
static_assert(sizeof(AATBossBattle0401RootManager) == 0x0003F0, "Wrong size on AATBossBattle0401RootManager");
static_assert(offsetof(AATBossBattle0401RootManager, HeatupValue) == 0x0003E8, "Member 'AATBossBattle0401RootManager::HeatupValue' has a wrong offset!");

// Class ATExt.ATBossBattle0402MainPhase
// 0x0058 (0x0088 - 0x0030)
class UATBossBattle0402MainPhase final : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x58];                                      // 0x0030(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0402MainPhase">();
	}
	static class UATBossBattle0402MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATBossBattle0402MainPhase>();
	}
};
static_assert(alignof(UATBossBattle0402MainPhase) == 0x000008, "Wrong alignment on UATBossBattle0402MainPhase");
static_assert(sizeof(UATBossBattle0402MainPhase) == 0x000088, "Wrong size on UATBossBattle0402MainPhase");

// Class ATExt.ATBossBattle0402RootManager
// 0x0000 (0x03E8 - 0x03E8)
class AATBossBattle0402RootManager final : public AATEventBattleRootManagerBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0402RootManager">();
	}
	static class AATBossBattle0402RootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATBossBattle0402RootManager>();
	}
};
static_assert(alignof(AATBossBattle0402RootManager) == 0x000008, "Wrong alignment on AATBossBattle0402RootManager");
static_assert(sizeof(AATBossBattle0402RootManager) == 0x0003E8, "Wrong size on AATBossBattle0402RootManager");

// Class ATExt.ATBossBattle0501MainPhase
// 0x0060 (0x0090 - 0x0030)
class UATBossBattle0501MainPhase final : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x60];                                      // 0x0030(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0501MainPhase">();
	}
	static class UATBossBattle0501MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATBossBattle0501MainPhase>();
	}
};
static_assert(alignof(UATBossBattle0501MainPhase) == 0x000008, "Wrong alignment on UATBossBattle0501MainPhase");
static_assert(sizeof(UATBossBattle0501MainPhase) == 0x000090, "Wrong size on UATBossBattle0501MainPhase");

// Class ATExt.ATSceneCharacterPartsLoadParam
// 0x0018 (0x0058 - 0x0040)
class UATSceneCharacterPartsLoadParam final : public UCFSceneChangeParamBase
{
public:
	uint8                                         Pad_40[0x18];                                      // 0x0040(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneCharacterPartsLoadParam">();
	}
	static class UATSceneCharacterPartsLoadParam* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneCharacterPartsLoadParam>();
	}
};
static_assert(alignof(UATSceneCharacterPartsLoadParam) == 0x000008, "Wrong alignment on UATSceneCharacterPartsLoadParam");
static_assert(sizeof(UATSceneCharacterPartsLoadParam) == 0x000058, "Wrong size on UATSceneCharacterPartsLoadParam");

// Class ATExt.ATBossBattle0501RootManager
// 0x0008 (0x03F0 - 0x03E8)
class AATBossBattle0501RootManager final : public AATEventBattleRootManagerBase
{
public:
	float                                         HeatupValue;                                       // 0x03E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0501RootManager">();
	}
	static class AATBossBattle0501RootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATBossBattle0501RootManager>();
	}
};
static_assert(alignof(AATBossBattle0501RootManager) == 0x000008, "Wrong alignment on AATBossBattle0501RootManager");
static_assert(sizeof(AATBossBattle0501RootManager) == 0x0003F0, "Wrong size on AATBossBattle0501RootManager");
static_assert(offsetof(AATBossBattle0501RootManager, HeatupValue) == 0x0003E8, "Member 'AATBossBattle0501RootManager::HeatupValue' has a wrong offset!");

// Class ATExt.ATSaveSystem
// 0x9AB70 (0x9AB98 - 0x0028)
class UATSaveSystem final : public USaveGame
{
public:
	struct FATSaveSystemUser                      User;                                              // 0x0028(0x0088)(NativeAccessSpecifierPublic)
	struct FATSaveSystemOption                    Option;                                            // 0x00B0(0x026C)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FATSaveSystemInputAssign               InputAssign;                                       // 0x0320(0x01E0)(NoDestructor, NativeAccessSpecifierPublic)
	struct FATSaveSystemHeader                    Headers[0xB];                                      // 0x0500(0xE090)(NoDestructor, NativeAccessSpecifierPublic)
	struct FATSaveSystemDlc                       DLC;                                               // 0x9AB30(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_9AB44[0x4];                                    // 0x9AB44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ClearQuestId;                                      // 0x9AB48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         ClearPhaseNo;                                      // 0x9AB50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9AB54[0x4];                                    // 0x9AB54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           ClearSubStoryList;                                 // 0x9AB58(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class FName>                           CardIdList;                                        // 0x9AB68(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class FName>                           ClearEventBattleIdList;                            // 0x9AB78(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class FName>                           ClearQuestIdList;                                  // 0x9AB88(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSaveSystem">();
	}
	static class UATSaveSystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSaveSystem>();
	}
};
static_assert(alignof(UATSaveSystem) == 0x000008, "Wrong alignment on UATSaveSystem");
static_assert(sizeof(UATSaveSystem) == 0x09AB98, "Wrong size on UATSaveSystem");
static_assert(offsetof(UATSaveSystem, User) == 0x000028, "Member 'UATSaveSystem::User' has a wrong offset!");
static_assert(offsetof(UATSaveSystem, Option) == 0x0000B0, "Member 'UATSaveSystem::Option' has a wrong offset!");
static_assert(offsetof(UATSaveSystem, InputAssign) == 0x000320, "Member 'UATSaveSystem::InputAssign' has a wrong offset!");
static_assert(offsetof(UATSaveSystem, Headers) == 0x000500, "Member 'UATSaveSystem::Headers' has a wrong offset!");
static_assert(offsetof(UATSaveSystem, DLC) == 0x09AB30, "Member 'UATSaveSystem::DLC' has a wrong offset!");
static_assert(offsetof(UATSaveSystem, ClearQuestId) == 0x09AB48, "Member 'UATSaveSystem::ClearQuestId' has a wrong offset!");
static_assert(offsetof(UATSaveSystem, ClearPhaseNo) == 0x09AB50, "Member 'UATSaveSystem::ClearPhaseNo' has a wrong offset!");
static_assert(offsetof(UATSaveSystem, ClearSubStoryList) == 0x09AB58, "Member 'UATSaveSystem::ClearSubStoryList' has a wrong offset!");
static_assert(offsetof(UATSaveSystem, CardIdList) == 0x09AB68, "Member 'UATSaveSystem::CardIdList' has a wrong offset!");
static_assert(offsetof(UATSaveSystem, ClearEventBattleIdList) == 0x09AB78, "Member 'UATSaveSystem::ClearEventBattleIdList' has a wrong offset!");
static_assert(offsetof(UATSaveSystem, ClearQuestIdList) == 0x09AB88, "Member 'UATSaveSystem::ClearQuestIdList' has a wrong offset!");

// Class ATExt.ATBossBattle0502MainPhase
// 0x0058 (0x0088 - 0x0030)
class UATBossBattle0502MainPhase final : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x58];                                      // 0x0030(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0502MainPhase">();
	}
	static class UATBossBattle0502MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATBossBattle0502MainPhase>();
	}
};
static_assert(alignof(UATBossBattle0502MainPhase) == 0x000008, "Wrong alignment on UATBossBattle0502MainPhase");
static_assert(sizeof(UATBossBattle0502MainPhase) == 0x000088, "Wrong size on UATBossBattle0502MainPhase");

// Class ATExt.ATBossBattle0502RootManager
// 0x0000 (0x03E8 - 0x03E8)
class AATBossBattle0502RootManager final : public AATEventBattleRootManagerBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0502RootManager">();
	}
	static class AATBossBattle0502RootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATBossBattle0502RootManager>();
	}
};
static_assert(alignof(AATBossBattle0502RootManager) == 0x000008, "Wrong alignment on AATBossBattle0502RootManager");
static_assert(sizeof(AATBossBattle0502RootManager) == 0x0003E8, "Wrong size on AATBossBattle0502RootManager");

// Class ATExt.ATBossBattle0601MainPhase
// 0x0058 (0x0088 - 0x0030)
class UATBossBattle0601MainPhase final : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x58];                                      // 0x0030(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0601MainPhase">();
	}
	static class UATBossBattle0601MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATBossBattle0601MainPhase>();
	}
};
static_assert(alignof(UATBossBattle0601MainPhase) == 0x000008, "Wrong alignment on UATBossBattle0601MainPhase");
static_assert(sizeof(UATBossBattle0601MainPhase) == 0x000088, "Wrong size on UATBossBattle0601MainPhase");

// Class ATExt.ATCharacterCpl102Base
// 0x0080 (0x1190 - 0x1110)
class AATCharacterCpl102Base : public AAT_Character
{
public:
	uint8                                         Pad_1110[0x10];                                    // 0x1110(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DropWeaponVanishTime;                              // 0x1120(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         DropWeaponFallSpeed;                               // 0x1124(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                               DropWeaponRotate;                                  // 0x1128(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1134[0x4];                                     // 0x1134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           SkillIds;                                          // 0x1138(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1148[0x48];                                    // 0x1148(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnChangeAction(class AAT_Character* InCharacter, int32 InActionIdPrev, int32 InActionIdNext);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl102Base">();
	}
	static class AATCharacterCpl102Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl102Base>();
	}
};
static_assert(alignof(AATCharacterCpl102Base) == 0x000010, "Wrong alignment on AATCharacterCpl102Base");
static_assert(sizeof(AATCharacterCpl102Base) == 0x001190, "Wrong size on AATCharacterCpl102Base");
static_assert(offsetof(AATCharacterCpl102Base, DropWeaponVanishTime) == 0x001120, "Member 'AATCharacterCpl102Base::DropWeaponVanishTime' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl102Base, DropWeaponFallSpeed) == 0x001124, "Member 'AATCharacterCpl102Base::DropWeaponFallSpeed' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl102Base, DropWeaponRotate) == 0x001128, "Member 'AATCharacterCpl102Base::DropWeaponRotate' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl102Base, SkillIds) == 0x001138, "Member 'AATCharacterCpl102Base::SkillIds' has a wrong offset!");

// Class ATExt.ATCharacterCpl103Base
// 0x0000 (0x1190 - 0x1190)
class AATCharacterCpl103Base : public AATCharacterCpl102Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl103Base">();
	}
	static class AATCharacterCpl103Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl103Base>();
	}
};
static_assert(alignof(AATCharacterCpl103Base) == 0x000010, "Wrong alignment on AATCharacterCpl103Base");
static_assert(sizeof(AATCharacterCpl103Base) == 0x001190, "Wrong size on AATCharacterCpl103Base");

// Class ATExt.ATCharacterCpl103A
// 0x0000 (0x1190 - 0x1190)
class AATCharacterCpl103A final : public AATCharacterCpl103Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl103A">();
	}
	static class AATCharacterCpl103A* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl103A>();
	}
};
static_assert(alignof(AATCharacterCpl103A) == 0x000010, "Wrong alignment on AATCharacterCpl103A");
static_assert(sizeof(AATCharacterCpl103A) == 0x001190, "Wrong size on AATCharacterCpl103A");

// Class ATExt.ATBossBattle0601RootManager
// 0x0000 (0x03E8 - 0x03E8)
class AATBossBattle0601RootManager final : public AATEventBattleRootManagerBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0601RootManager">();
	}
	static class AATBossBattle0601RootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATBossBattle0601RootManager>();
	}
};
static_assert(alignof(AATBossBattle0601RootManager) == 0x000008, "Wrong alignment on AATBossBattle0601RootManager");
static_assert(sizeof(AATBossBattle0601RootManager) == 0x0003E8, "Wrong size on AATBossBattle0601RootManager");

// Class ATExt.ATBossBattle0602MainPhase
// 0x0058 (0x0088 - 0x0030)
class UATBossBattle0602MainPhase final : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x58];                                      // 0x0030(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0602MainPhase">();
	}
	static class UATBossBattle0602MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATBossBattle0602MainPhase>();
	}
};
static_assert(alignof(UATBossBattle0602MainPhase) == 0x000008, "Wrong alignment on UATBossBattle0602MainPhase");
static_assert(sizeof(UATBossBattle0602MainPhase) == 0x000088, "Wrong size on UATBossBattle0602MainPhase");

// Class ATExt.ATBossBattle0602RootManager
// 0x0000 (0x03E8 - 0x03E8)
class AATBossBattle0602RootManager final : public AATEventBattleRootManagerBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0602RootManager">();
	}
	static class AATBossBattle0602RootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATBossBattle0602RootManager>();
	}
};
static_assert(alignof(AATBossBattle0602RootManager) == 0x000008, "Wrong alignment on AATBossBattle0602RootManager");
static_assert(sizeof(AATBossBattle0602RootManager) == 0x0003E8, "Wrong size on AATBossBattle0602RootManager");

// Class ATExt.ATCharacterLightBase
// 0x0000 (0x1110 - 0x1110)
class AATCharacterLightBase : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterLightBase">();
	}
	static class AATCharacterLightBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterLightBase>();
	}
};
static_assert(alignof(AATCharacterLightBase) == 0x000010, "Wrong alignment on AATCharacterLightBase");
static_assert(sizeof(AATCharacterLightBase) == 0x001110, "Wrong size on AATCharacterLightBase");

// Class ATExt.ATCharacterCpl094BaseLight
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl094BaseLight : public AATCharacterLightBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl094BaseLight">();
	}
	static class AATCharacterCpl094BaseLight* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl094BaseLight>();
	}
};
static_assert(alignof(AATCharacterCpl094BaseLight) == 0x000010, "Wrong alignment on AATCharacterCpl094BaseLight");
static_assert(sizeof(AATCharacterCpl094BaseLight) == 0x001110, "Wrong size on AATCharacterCpl094BaseLight");

// Class ATExt.ATBossBattle0701MainPhase
// 0x0058 (0x0088 - 0x0030)
class UATBossBattle0701MainPhase final : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x58];                                      // 0x0030(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0701MainPhase">();
	}
	static class UATBossBattle0701MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATBossBattle0701MainPhase>();
	}
};
static_assert(alignof(UATBossBattle0701MainPhase) == 0x000008, "Wrong alignment on UATBossBattle0701MainPhase");
static_assert(sizeof(UATBossBattle0701MainPhase) == 0x000088, "Wrong size on UATBossBattle0701MainPhase");

// Class ATExt.ATEventBattleStartPointManager
// 0x00F0 (0x0118 - 0x0028)
class UATEventBattleStartPointManager final : public UObject
{
public:
	uint8                                         Pad_28[0xF0];                                      // 0x0028(0x00F0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleStartPointManager">();
	}
	static class UATEventBattleStartPointManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATEventBattleStartPointManager>();
	}
};
static_assert(alignof(UATEventBattleStartPointManager) == 0x000008, "Wrong alignment on UATEventBattleStartPointManager");
static_assert(sizeof(UATEventBattleStartPointManager) == 0x000118, "Wrong size on UATEventBattleStartPointManager");

// Class ATExt.ATBossBattle0701RootManager
// 0x0008 (0x03F0 - 0x03E8)
class AATBossBattle0701RootManager final : public AATEventBattleRootManagerBase
{
public:
	float                                         MarginValue;                                       // 0x03E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0701RootManager">();
	}
	static class AATBossBattle0701RootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATBossBattle0701RootManager>();
	}
};
static_assert(alignof(AATBossBattle0701RootManager) == 0x000008, "Wrong alignment on AATBossBattle0701RootManager");
static_assert(sizeof(AATBossBattle0701RootManager) == 0x0003F0, "Wrong size on AATBossBattle0701RootManager");
static_assert(offsetof(AATBossBattle0701RootManager, MarginValue) == 0x0003E8, "Member 'AATBossBattle0701RootManager::MarginValue' has a wrong offset!");

// Class ATExt.ATSceneBattleGameOverMenu
// 0x0000 (0x0040 - 0x0040)
class UATSceneBattleGameOverMenu final : public UCFScene
{
public:
	void OnEndGameOverUI(EGameoverSelectType SelectType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneBattleGameOverMenu">();
	}
	static class UATSceneBattleGameOverMenu* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneBattleGameOverMenu>();
	}
};
static_assert(alignof(UATSceneBattleGameOverMenu) == 0x000008, "Wrong alignment on UATSceneBattleGameOverMenu");
static_assert(sizeof(UATSceneBattleGameOverMenu) == 0x000040, "Wrong size on UATSceneBattleGameOverMenu");

// Class ATExt.ATBossBattle0702MainPhase
// 0x0058 (0x0088 - 0x0030)
class UATBossBattle0702MainPhase final : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x58];                                      // 0x0030(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0702MainPhase">();
	}
	static class UATBossBattle0702MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATBossBattle0702MainPhase>();
	}
};
static_assert(alignof(UATBossBattle0702MainPhase) == 0x000008, "Wrong alignment on UATBossBattle0702MainPhase");
static_assert(sizeof(UATBossBattle0702MainPhase) == 0x000088, "Wrong size on UATBossBattle0702MainPhase");

// Class ATExt.ATBossBattle0702RootManager
// 0x0000 (0x03E8 - 0x03E8)
class AATBossBattle0702RootManager final : public AATEventBattleRootManagerBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0702RootManager">();
	}
	static class AATBossBattle0702RootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATBossBattle0702RootManager>();
	}
};
static_assert(alignof(AATBossBattle0702RootManager) == 0x000008, "Wrong alignment on AATBossBattle0702RootManager");
static_assert(sizeof(AATBossBattle0702RootManager) == 0x0003E8, "Wrong size on AATBossBattle0702RootManager");

// Class ATExt.ATBossBattle0801MainPhase
// 0x0060 (0x0090 - 0x0030)
class UATBossBattle0801MainPhase final : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x60];                                      // 0x0030(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0801MainPhase">();
	}
	static class UATBossBattle0801MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATBossBattle0801MainPhase>();
	}
};
static_assert(alignof(UATBossBattle0801MainPhase) == 0x000008, "Wrong alignment on UATBossBattle0801MainPhase");
static_assert(sizeof(UATBossBattle0801MainPhase) == 0x000090, "Wrong size on UATBossBattle0801MainPhase");

// Class ATExt.ATCharacterCpl082BaseLight
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl082BaseLight : public AATCharacterLightBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl082BaseLight">();
	}
	static class AATCharacterCpl082BaseLight* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl082BaseLight>();
	}
};
static_assert(alignof(AATCharacterCpl082BaseLight) == 0x000010, "Wrong alignment on AATCharacterCpl082BaseLight");
static_assert(sizeof(AATCharacterCpl082BaseLight) == 0x001110, "Wrong size on AATCharacterCpl082BaseLight");

// Class ATExt.ATBossBattle0801RootManager
// 0x0008 (0x03F0 - 0x03E8)
class AATBossBattle0801RootManager final : public AATEventBattleRootManagerBase
{
public:
	float                                         HeatupValue;                                       // 0x03E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0801RootManager">();
	}
	static class AATBossBattle0801RootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATBossBattle0801RootManager>();
	}
};
static_assert(alignof(AATBossBattle0801RootManager) == 0x000008, "Wrong alignment on AATBossBattle0801RootManager");
static_assert(sizeof(AATBossBattle0801RootManager) == 0x0003F0, "Wrong size on AATBossBattle0801RootManager");
static_assert(offsetof(AATBossBattle0801RootManager, HeatupValue) == 0x0003E8, "Member 'AATBossBattle0801RootManager::HeatupValue' has a wrong offset!");

// Class ATExt.ATBossBattle0802MainPhase
// 0x0060 (0x0090 - 0x0030)
class UATBossBattle0802MainPhase final : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x60];                                      // 0x0030(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0802MainPhase">();
	}
	static class UATBossBattle0802MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATBossBattle0802MainPhase>();
	}
};
static_assert(alignof(UATBossBattle0802MainPhase) == 0x000008, "Wrong alignment on UATBossBattle0802MainPhase");
static_assert(sizeof(UATBossBattle0802MainPhase) == 0x000090, "Wrong size on UATBossBattle0802MainPhase");

// Class ATExt.ATBossBattle0802RootManager
// 0x0008 (0x03F0 - 0x03E8)
class AATBossBattle0802RootManager final : public AATEventBattleRootManagerBase
{
public:
	float                                         HeatupValue;                                       // 0x03E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0802RootManager">();
	}
	static class AATBossBattle0802RootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATBossBattle0802RootManager>();
	}
};
static_assert(alignof(AATBossBattle0802RootManager) == 0x000008, "Wrong alignment on AATBossBattle0802RootManager");
static_assert(sizeof(AATBossBattle0802RootManager) == 0x0003F0, "Wrong size on AATBossBattle0802RootManager");
static_assert(offsetof(AATBossBattle0802RootManager, HeatupValue) == 0x0003E8, "Member 'AATBossBattle0802RootManager::HeatupValue' has a wrong offset!");

// Class ATExt.ATCharacterCpl096Base
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl096Base : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl096Base">();
	}
	static class AATCharacterCpl096Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl096Base>();
	}
};
static_assert(alignof(AATCharacterCpl096Base) == 0x000010, "Wrong alignment on AATCharacterCpl096Base");
static_assert(sizeof(AATCharacterCpl096Base) == 0x001110, "Wrong size on AATCharacterCpl096Base");

// Class ATExt.ATCharacterCpl096c03
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl096c03 final : public AATCharacterCpl096Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl096c03">();
	}
	static class AATCharacterCpl096c03* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl096c03>();
	}
};
static_assert(alignof(AATCharacterCpl096c03) == 0x000010, "Wrong alignment on AATCharacterCpl096c03");
static_assert(sizeof(AATCharacterCpl096c03) == 0x001110, "Wrong size on AATCharacterCpl096c03");

// Class ATExt.ATBossBattle0901MainPhase
// 0x0058 (0x0088 - 0x0030)
class UATBossBattle0901MainPhase final : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x58];                                      // 0x0030(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0901MainPhase">();
	}
	static class UATBossBattle0901MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATBossBattle0901MainPhase>();
	}
};
static_assert(alignof(UATBossBattle0901MainPhase) == 0x000008, "Wrong alignment on UATBossBattle0901MainPhase");
static_assert(sizeof(UATBossBattle0901MainPhase) == 0x000088, "Wrong size on UATBossBattle0901MainPhase");

// Class ATExt.ATGroupBattleMainPhase
// 0x0000 (0x0088 - 0x0088)
class UATGroupBattleMainPhase final : public UATGeneralBattleMainPhase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATGroupBattleMainPhase">();
	}
	static class UATGroupBattleMainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATGroupBattleMainPhase>();
	}
};
static_assert(alignof(UATGroupBattleMainPhase) == 0x000008, "Wrong alignment on UATGroupBattleMainPhase");
static_assert(sizeof(UATGroupBattleMainPhase) == 0x000088, "Wrong size on UATGroupBattleMainPhase");

// Class ATExt.ATBossBattle0901RootManager
// 0x0000 (0x03E8 - 0x03E8)
class AATBossBattle0901RootManager final : public AATEventBattleRootManagerBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0901RootManager">();
	}
	static class AATBossBattle0901RootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATBossBattle0901RootManager>();
	}
};
static_assert(alignof(AATBossBattle0901RootManager) == 0x000008, "Wrong alignment on AATBossBattle0901RootManager");
static_assert(sizeof(AATBossBattle0901RootManager) == 0x0003E8, "Wrong size on AATBossBattle0901RootManager");

// Class ATExt.ATBossBattle0902MainPhase
// 0x0060 (0x0090 - 0x0030)
class UATBossBattle0902MainPhase final : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x60];                                      // 0x0030(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0902MainPhase">();
	}
	static class UATBossBattle0902MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATBossBattle0902MainPhase>();
	}
};
static_assert(alignof(UATBossBattle0902MainPhase) == 0x000008, "Wrong alignment on UATBossBattle0902MainPhase");
static_assert(sizeof(UATBossBattle0902MainPhase) == 0x000090, "Wrong size on UATBossBattle0902MainPhase");

// Class ATExt.ATBossBattle0902RootManager
// 0x0008 (0x03F0 - 0x03E8)
class AATBossBattle0902RootManager final : public AATEventBattleRootManagerBase
{
public:
	float                                         MarginValue;                                       // 0x03E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         HeatupValue;                                       // 0x03EC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle0902RootManager">();
	}
	static class AATBossBattle0902RootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATBossBattle0902RootManager>();
	}
};
static_assert(alignof(AATBossBattle0902RootManager) == 0x000008, "Wrong alignment on AATBossBattle0902RootManager");
static_assert(sizeof(AATBossBattle0902RootManager) == 0x0003F0, "Wrong size on AATBossBattle0902RootManager");
static_assert(offsetof(AATBossBattle0902RootManager, MarginValue) == 0x0003E8, "Member 'AATBossBattle0902RootManager::MarginValue' has a wrong offset!");
static_assert(offsetof(AATBossBattle0902RootManager, HeatupValue) == 0x0003EC, "Member 'AATBossBattle0902RootManager::HeatupValue' has a wrong offset!");

// Class ATExt.ATBossBattle1001MainPhase
// 0x0060 (0x0090 - 0x0030)
class UATBossBattle1001MainPhase final : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x60];                                      // 0x0030(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle1001MainPhase">();
	}
	static class UATBossBattle1001MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATBossBattle1001MainPhase>();
	}
};
static_assert(alignof(UATBossBattle1001MainPhase) == 0x000008, "Wrong alignment on UATBossBattle1001MainPhase");
static_assert(sizeof(UATBossBattle1001MainPhase) == 0x000090, "Wrong size on UATBossBattle1001MainPhase");

// Class ATExt.ATBossBattle1001RootManager
// 0x0008 (0x03F0 - 0x03E8)
class AATBossBattle1001RootManager final : public AATEventBattleRootManagerBase
{
public:
	float                                         HeatupValue;                                       // 0x03E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle1001RootManager">();
	}
	static class AATBossBattle1001RootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATBossBattle1001RootManager>();
	}
};
static_assert(alignof(AATBossBattle1001RootManager) == 0x000008, "Wrong alignment on AATBossBattle1001RootManager");
static_assert(sizeof(AATBossBattle1001RootManager) == 0x0003F0, "Wrong size on AATBossBattle1001RootManager");
static_assert(offsetof(AATBossBattle1001RootManager, HeatupValue) == 0x0003E8, "Member 'AATBossBattle1001RootManager::HeatupValue' has a wrong offset!");

// Class ATExt.ATSceneBootInstall
// 0x0058 (0x0098 - 0x0040)
class UATSceneBootInstall final : public UCFScene
{
public:
	uint8                                         Pad_40[0x58];                                      // 0x0040(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneBootInstall">();
	}
	static class UATSceneBootInstall* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneBootInstall>();
	}
};
static_assert(alignof(UATSceneBootInstall) == 0x000008, "Wrong alignment on UATSceneBootInstall");
static_assert(sizeof(UATSceneBootInstall) == 0x000098, "Wrong size on UATSceneBootInstall");

// Class ATExt.ATBossBattle1101MainPhase
// 0x0058 (0x0088 - 0x0030)
class UATBossBattle1101MainPhase final : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x58];                                      // 0x0030(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle1101MainPhase">();
	}
	static class UATBossBattle1101MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATBossBattle1101MainPhase>();
	}
};
static_assert(alignof(UATBossBattle1101MainPhase) == 0x000008, "Wrong alignment on UATBossBattle1101MainPhase");
static_assert(sizeof(UATBossBattle1101MainPhase) == 0x000088, "Wrong size on UATBossBattle1101MainPhase");

// Class ATExt.ATBossBattle1101RootManager
// 0x0000 (0x03E8 - 0x03E8)
class AATBossBattle1101RootManager final : public AATEventBattleRootManagerBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle1101RootManager">();
	}
	static class AATBossBattle1101RootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATBossBattle1101RootManager>();
	}
};
static_assert(alignof(AATBossBattle1101RootManager) == 0x000008, "Wrong alignment on AATBossBattle1101RootManager");
static_assert(sizeof(AATBossBattle1101RootManager) == 0x0003E8, "Wrong size on AATBossBattle1101RootManager");

// Class ATExt.ATBossBattle1102MainPhase
// 0x0058 (0x0088 - 0x0030)
class UATBossBattle1102MainPhase final : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x58];                                      // 0x0030(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle1102MainPhase">();
	}
	static class UATBossBattle1102MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATBossBattle1102MainPhase>();
	}
};
static_assert(alignof(UATBossBattle1102MainPhase) == 0x000008, "Wrong alignment on UATBossBattle1102MainPhase");
static_assert(sizeof(UATBossBattle1102MainPhase) == 0x000088, "Wrong size on UATBossBattle1102MainPhase");

// Class ATExt.DMDebugHud_PrintLog
// 0x0000 (0x0058 - 0x0058)
class UDMDebugHud_PrintLog final : public UCFDebugMenuEventHandlerBool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DMDebugHud_PrintLog">();
	}
	static class UDMDebugHud_PrintLog* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDMDebugHud_PrintLog>();
	}
};
static_assert(alignof(UDMDebugHud_PrintLog) == 0x000008, "Wrong alignment on UDMDebugHud_PrintLog");
static_assert(sizeof(UDMDebugHud_PrintLog) == 0x000058, "Wrong size on UDMDebugHud_PrintLog");

// Class ATExt.ATBossBattle1102RootManager
// 0x0000 (0x03E8 - 0x03E8)
class AATBossBattle1102RootManager final : public AATEventBattleRootManagerBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle1102RootManager">();
	}
	static class AATBossBattle1102RootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATBossBattle1102RootManager>();
	}
};
static_assert(alignof(AATBossBattle1102RootManager) == 0x000008, "Wrong alignment on AATBossBattle1102RootManager");
static_assert(sizeof(AATBossBattle1102RootManager) == 0x0003E8, "Wrong size on AATBossBattle1102RootManager");

// Class ATExt.ATEventBattleFinishBlowMainPhase
// 0x0010 (0x0098 - 0x0088)
class UATEventBattleFinishBlowMainPhase final : public UATGeneralBattleMainPhase
{
public:
	uint8                                         Pad_88[0x10];                                      // 0x0088(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnFaceActionEvent(const struct FEventParam& EvParam);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleFinishBlowMainPhase">();
	}
	static class UATEventBattleFinishBlowMainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATEventBattleFinishBlowMainPhase>();
	}
};
static_assert(alignof(UATEventBattleFinishBlowMainPhase) == 0x000008, "Wrong alignment on UATEventBattleFinishBlowMainPhase");
static_assert(sizeof(UATEventBattleFinishBlowMainPhase) == 0x000098, "Wrong size on UATEventBattleFinishBlowMainPhase");

// Class ATExt.ATBossBattle1201MainPhase
// 0x0058 (0x0088 - 0x0030)
class UATBossBattle1201MainPhase final : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x58];                                      // 0x0030(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle1201MainPhase">();
	}
	static class UATBossBattle1201MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATBossBattle1201MainPhase>();
	}
};
static_assert(alignof(UATBossBattle1201MainPhase) == 0x000008, "Wrong alignment on UATBossBattle1201MainPhase");
static_assert(sizeof(UATBossBattle1201MainPhase) == 0x000088, "Wrong size on UATBossBattle1201MainPhase");

// Class ATExt.ATBossBattle1201RootManager
// 0x0000 (0x03E8 - 0x03E8)
class AATBossBattle1201RootManager final : public AATEventBattleRootManagerBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle1201RootManager">();
	}
	static class AATBossBattle1201RootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATBossBattle1201RootManager>();
	}
};
static_assert(alignof(AATBossBattle1201RootManager) == 0x000008, "Wrong alignment on AATBossBattle1201RootManager");
static_assert(sizeof(AATBossBattle1201RootManager) == 0x0003E8, "Wrong size on AATBossBattle1201RootManager");

// Class ATExt.ATBossBattle1202MainPhase
// 0x0060 (0x0090 - 0x0030)
class UATBossBattle1202MainPhase final : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x60];                                      // 0x0030(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle1202MainPhase">();
	}
	static class UATBossBattle1202MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATBossBattle1202MainPhase>();
	}
};
static_assert(alignof(UATBossBattle1202MainPhase) == 0x000008, "Wrong alignment on UATBossBattle1202MainPhase");
static_assert(sizeof(UATBossBattle1202MainPhase) == 0x000090, "Wrong size on UATBossBattle1202MainPhase");

// Class ATExt.ATSceneFree
// 0x0018 (0x0058 - 0x0040)
class UATSceneFree : public UCFScene
{
public:
	uint8                                         Pad_40[0x18];                                      // 0x0040(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnDemoTiming(EDEMO_TYPE Type, EDEMO_TIMING_TYPE Timing, class FName Name_0, bool bContinueFlag);
	void OnQuestEventBegin(class FName PhaseID, EQUEST_PHASE_TYPE Type);
	void OnQuestPhaseBegin(class FName PhaseID, EQUEST_PHASE_TYPE Type);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFree">();
	}
	static class UATSceneFree* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFree>();
	}
};
static_assert(alignof(UATSceneFree) == 0x000008, "Wrong alignment on UATSceneFree");
static_assert(sizeof(UATSceneFree) == 0x000058, "Wrong size on UATSceneFree");

// Class ATExt.ATBossBattle1202RootManager
// 0x0008 (0x03F0 - 0x03E8)
class AATBossBattle1202RootManager final : public AATEventBattleRootManagerBase
{
public:
	float                                         HeatupValue;                                       // 0x03E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle1202RootManager">();
	}
	static class AATBossBattle1202RootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATBossBattle1202RootManager>();
	}
};
static_assert(alignof(AATBossBattle1202RootManager) == 0x000008, "Wrong alignment on AATBossBattle1202RootManager");
static_assert(sizeof(AATBossBattle1202RootManager) == 0x0003F0, "Wrong size on AATBossBattle1202RootManager");
static_assert(offsetof(AATBossBattle1202RootManager, HeatupValue) == 0x0003E8, "Member 'AATBossBattle1202RootManager::HeatupValue' has a wrong offset!");

// Class ATExt.ATSceneCharacterChangeParam
// 0x0018 (0x0058 - 0x0040)
class UATSceneCharacterChangeParam final : public UCFSceneChangeParamBase
{
public:
	uint8                                         Pad_40[0x18];                                      // 0x0040(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneCharacterChangeParam">();
	}
	static class UATSceneCharacterChangeParam* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneCharacterChangeParam>();
	}
};
static_assert(alignof(UATSceneCharacterChangeParam) == 0x000008, "Wrong alignment on UATSceneCharacterChangeParam");
static_assert(sizeof(UATSceneCharacterChangeParam) == 0x000058, "Wrong size on UATSceneCharacterChangeParam");

// Class ATExt.ATBossBattle1301MainPhase
// 0x0058 (0x0088 - 0x0030)
class UATBossBattle1301MainPhase final : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x58];                                      // 0x0030(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle1301MainPhase">();
	}
	static class UATBossBattle1301MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATBossBattle1301MainPhase>();
	}
};
static_assert(alignof(UATBossBattle1301MainPhase) == 0x000008, "Wrong alignment on UATBossBattle1301MainPhase");
static_assert(sizeof(UATBossBattle1301MainPhase) == 0x000088, "Wrong size on UATBossBattle1301MainPhase");

// Class ATExt.ATBossBattle1301RootManager
// 0x0000 (0x03E8 - 0x03E8)
class AATBossBattle1301RootManager final : public AATEventBattleRootManagerBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle1301RootManager">();
	}
	static class AATBossBattle1301RootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATBossBattle1301RootManager>();
	}
};
static_assert(alignof(AATBossBattle1301RootManager) == 0x000008, "Wrong alignment on AATBossBattle1301RootManager");
static_assert(sizeof(AATBossBattle1301RootManager) == 0x0003E8, "Wrong size on AATBossBattle1301RootManager");

// Class ATExt.ATBossBattle1302MainPhase
// 0x0058 (0x0088 - 0x0030)
class UATBossBattle1302MainPhase final : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x58];                                      // 0x0030(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle1302MainPhase">();
	}
	static class UATBossBattle1302MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATBossBattle1302MainPhase>();
	}
};
static_assert(alignof(UATBossBattle1302MainPhase) == 0x000008, "Wrong alignment on UATBossBattle1302MainPhase");
static_assert(sizeof(UATBossBattle1302MainPhase) == 0x000088, "Wrong size on UATBossBattle1302MainPhase");

// Class ATExt.ATEventBattle25RootManager
// 0x0010 (0x03F8 - 0x03E8)
class AATEventBattle25RootManager final : public AATEventBattleRootManagerBase
{
public:
	float                                         DiseaseConditionTime;                              // 0x03E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         DiseaseConditionLife;                              // 0x03EC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         DiseaseConditionLifeEnemy;                         // 0x03F0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3F4[0x4];                                      // 0x03F4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattle25RootManager">();
	}
	static class AATEventBattle25RootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATEventBattle25RootManager>();
	}
};
static_assert(alignof(AATEventBattle25RootManager) == 0x000008, "Wrong alignment on AATEventBattle25RootManager");
static_assert(sizeof(AATEventBattle25RootManager) == 0x0003F8, "Wrong size on AATEventBattle25RootManager");
static_assert(offsetof(AATEventBattle25RootManager, DiseaseConditionTime) == 0x0003E8, "Member 'AATEventBattle25RootManager::DiseaseConditionTime' has a wrong offset!");
static_assert(offsetof(AATEventBattle25RootManager, DiseaseConditionLife) == 0x0003EC, "Member 'AATEventBattle25RootManager::DiseaseConditionLife' has a wrong offset!");
static_assert(offsetof(AATEventBattle25RootManager, DiseaseConditionLifeEnemy) == 0x0003F0, "Member 'AATEventBattle25RootManager::DiseaseConditionLifeEnemy' has a wrong offset!");

// Class ATExt.ATBossBattle1302RootManager
// 0x0000 (0x03E8 - 0x03E8)
class AATBossBattle1302RootManager final : public AATEventBattleRootManagerBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle1302RootManager">();
	}
	static class AATBossBattle1302RootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATBossBattle1302RootManager>();
	}
};
static_assert(alignof(AATBossBattle1302RootManager) == 0x000008, "Wrong alignment on AATBossBattle1302RootManager");
static_assert(sizeof(AATBossBattle1302RootManager) == 0x0003E8, "Wrong size on AATBossBattle1302RootManager");

// Class ATExt.ATDebugMenuEventHandlerBattleSetting
// 0x0000 (0x0030 - 0x0030)
class UATDebugMenuEventHandlerBattleSetting final : public UCFDebugMenuEventHandlerContentsFactory
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATDebugMenuEventHandlerBattleSetting">();
	}
	static class UATDebugMenuEventHandlerBattleSetting* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATDebugMenuEventHandlerBattleSetting>();
	}
};
static_assert(alignof(UATDebugMenuEventHandlerBattleSetting) == 0x000008, "Wrong alignment on UATDebugMenuEventHandlerBattleSetting");
static_assert(sizeof(UATDebugMenuEventHandlerBattleSetting) == 0x000030, "Wrong size on UATDebugMenuEventHandlerBattleSetting");

// Class ATExt.ATBossBattle1401MainPhase
// 0x0060 (0x0090 - 0x0030)
class UATBossBattle1401MainPhase final : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x60];                                      // 0x0030(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle1401MainPhase">();
	}
	static class UATBossBattle1401MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATBossBattle1401MainPhase>();
	}
};
static_assert(alignof(UATBossBattle1401MainPhase) == 0x000008, "Wrong alignment on UATBossBattle1401MainPhase");
static_assert(sizeof(UATBossBattle1401MainPhase) == 0x000090, "Wrong size on UATBossBattle1401MainPhase");

// Class ATExt.ATBossBattle1401RootManager
// 0x0008 (0x03F0 - 0x03E8)
class AATBossBattle1401RootManager final : public AATEventBattleRootManagerBase
{
public:
	float                                         HeatupValue;                                       // 0x03E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle1401RootManager">();
	}
	static class AATBossBattle1401RootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATBossBattle1401RootManager>();
	}
};
static_assert(alignof(AATBossBattle1401RootManager) == 0x000008, "Wrong alignment on AATBossBattle1401RootManager");
static_assert(sizeof(AATBossBattle1401RootManager) == 0x0003F0, "Wrong size on AATBossBattle1401RootManager");
static_assert(offsetof(AATBossBattle1401RootManager, HeatupValue) == 0x0003E8, "Member 'AATBossBattle1401RootManager::HeatupValue' has a wrong offset!");

// Class ATExt.ATBossBattle1501MainPhase
// 0x0060 (0x0090 - 0x0030)
class UATBossBattle1501MainPhase final : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x60];                                      // 0x0030(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle1501MainPhase">();
	}
	static class UATBossBattle1501MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATBossBattle1501MainPhase>();
	}
};
static_assert(alignof(UATBossBattle1501MainPhase) == 0x000008, "Wrong alignment on UATBossBattle1501MainPhase");
static_assert(sizeof(UATBossBattle1501MainPhase) == 0x000090, "Wrong size on UATBossBattle1501MainPhase");

// Class ATExt.ATGameModeBase
// 0x0000 (0x0420 - 0x0420)
class AATGameModeBase : public ACFGameMode
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATGameModeBase">();
	}
	static class AATGameModeBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATGameModeBase>();
	}
};
static_assert(alignof(AATGameModeBase) == 0x000008, "Wrong alignment on AATGameModeBase");
static_assert(sizeof(AATGameModeBase) == 0x000420, "Wrong size on AATGameModeBase");

// Class ATExt.ATGameModeRoot
// 0x0000 (0x0420 - 0x0420)
class AATGameModeRoot final : public AATGameModeBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATGameModeRoot">();
	}
	static class AATGameModeRoot* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATGameModeRoot>();
	}
};
static_assert(alignof(AATGameModeRoot) == 0x000008, "Wrong alignment on AATGameModeRoot");
static_assert(sizeof(AATGameModeRoot) == 0x000420, "Wrong size on AATGameModeRoot");

// Class ATExt.ATBossBattle1501RootManager
// 0x0008 (0x03F0 - 0x03E8)
class AATBossBattle1501RootManager final : public AATEventBattleRootManagerBase
{
public:
	float                                         HeatupValue;                                       // 0x03E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle1501RootManager">();
	}
	static class AATBossBattle1501RootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATBossBattle1501RootManager>();
	}
};
static_assert(alignof(AATBossBattle1501RootManager) == 0x000008, "Wrong alignment on AATBossBattle1501RootManager");
static_assert(sizeof(AATBossBattle1501RootManager) == 0x0003F0, "Wrong size on AATBossBattle1501RootManager");
static_assert(offsetof(AATBossBattle1501RootManager, HeatupValue) == 0x0003E8, "Member 'AATBossBattle1501RootManager::HeatupValue' has a wrong offset!");

// Class ATExt.ATSceneDemoBase
// 0x0008 (0x0048 - 0x0040)
class UATSceneDemoBase : public UCFScene
{
public:
	uint8                                         Pad_40[0x8];                                       // 0x0040(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnDemoTiming(EDEMO_TYPE Type, EDEMO_TIMING_TYPE Timing, class FName Name_0, bool bContinueFlag);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneDemoBase">();
	}
	static class UATSceneDemoBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneDemoBase>();
	}
};
static_assert(alignof(UATSceneDemoBase) == 0x000008, "Wrong alignment on UATSceneDemoBase");
static_assert(sizeof(UATSceneDemoBase) == 0x000048, "Wrong size on UATSceneDemoBase");

// Class ATExt.ATSceneCinemaDemo
// 0x0000 (0x0048 - 0x0048)
class UATSceneCinemaDemo final : public UATSceneDemoBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneCinemaDemo">();
	}
	static class UATSceneCinemaDemo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneCinemaDemo>();
	}
};
static_assert(alignof(UATSceneCinemaDemo) == 0x000008, "Wrong alignment on UATSceneCinemaDemo");
static_assert(sizeof(UATSceneCinemaDemo) == 0x000048, "Wrong size on UATSceneCinemaDemo");

// Class ATExt.ATBossBattle1502MainPhase
// 0x0068 (0x0098 - 0x0030)
class UATBossBattle1502MainPhase final : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x68];                                      // 0x0030(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle1502MainPhase">();
	}
	static class UATBossBattle1502MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATBossBattle1502MainPhase>();
	}
};
static_assert(alignof(UATBossBattle1502MainPhase) == 0x000008, "Wrong alignment on UATBossBattle1502MainPhase");
static_assert(sizeof(UATBossBattle1502MainPhase) == 0x000098, "Wrong size on UATBossBattle1502MainPhase");

// Class ATExt.ATBossBattle1502RootManager
// 0x0048 (0x0430 - 0x03E8)
class AATBossBattle1502RootManager final : public AATEventBattleRootManagerBase
{
public:
	class UParticleSystem*                        ParticleGenkiBall;                                 // 0x03E8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystem*                        ParticleGenkiParticle;                             // 0x03F0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class AActor>                     GenkiBallCollisionClass;                           // 0x03F8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                GenkiBallLocation;                                 // 0x0400(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                GenkiParticleLocation;                             // 0x040C(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*               ParticleCompGenkiBall;                             // 0x0418(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*               ParticleCompGenkiParticle;                         // 0x0420(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                 GenkiBallCollision;                                // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATBossBattle1502RootManager">();
	}
	static class AATBossBattle1502RootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATBossBattle1502RootManager>();
	}
};
static_assert(alignof(AATBossBattle1502RootManager) == 0x000008, "Wrong alignment on AATBossBattle1502RootManager");
static_assert(sizeof(AATBossBattle1502RootManager) == 0x000430, "Wrong size on AATBossBattle1502RootManager");
static_assert(offsetof(AATBossBattle1502RootManager, ParticleGenkiBall) == 0x0003E8, "Member 'AATBossBattle1502RootManager::ParticleGenkiBall' has a wrong offset!");
static_assert(offsetof(AATBossBattle1502RootManager, ParticleGenkiParticle) == 0x0003F0, "Member 'AATBossBattle1502RootManager::ParticleGenkiParticle' has a wrong offset!");
static_assert(offsetof(AATBossBattle1502RootManager, GenkiBallCollisionClass) == 0x0003F8, "Member 'AATBossBattle1502RootManager::GenkiBallCollisionClass' has a wrong offset!");
static_assert(offsetof(AATBossBattle1502RootManager, GenkiBallLocation) == 0x000400, "Member 'AATBossBattle1502RootManager::GenkiBallLocation' has a wrong offset!");
static_assert(offsetof(AATBossBattle1502RootManager, GenkiParticleLocation) == 0x00040C, "Member 'AATBossBattle1502RootManager::GenkiParticleLocation' has a wrong offset!");
static_assert(offsetof(AATBossBattle1502RootManager, ParticleCompGenkiBall) == 0x000418, "Member 'AATBossBattle1502RootManager::ParticleCompGenkiBall' has a wrong offset!");
static_assert(offsetof(AATBossBattle1502RootManager, ParticleCompGenkiParticle) == 0x000420, "Member 'AATBossBattle1502RootManager::ParticleCompGenkiParticle' has a wrong offset!");
static_assert(offsetof(AATBossBattle1502RootManager, GenkiBallCollision) == 0x000428, "Member 'AATBossBattle1502RootManager::GenkiBallCollision' has a wrong offset!");

// Class ATExt.ATCharacterCpl001
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl001 : public AAT_CharacterPlayableBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl001">();
	}
	static class AATCharacterCpl001* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl001>();
	}
};
static_assert(alignof(AATCharacterCpl001) == 0x000010, "Wrong alignment on AATCharacterCpl001");
static_assert(sizeof(AATCharacterCpl001) == 0x001110, "Wrong size on AATCharacterCpl001");

// Class ATExt.ATSceneAtrociousPhase
// 0x0060 (0x00A0 - 0x0040)
class UATSceneAtrociousPhase final : public UCFScene
{
public:
	uint8                                         Pad_40[0x60];                                      // 0x0040(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneAtrociousPhase">();
	}
	static class UATSceneAtrociousPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneAtrociousPhase>();
	}
};
static_assert(alignof(UATSceneAtrociousPhase) == 0x000008, "Wrong alignment on UATSceneAtrociousPhase");
static_assert(sizeof(UATSceneAtrociousPhase) == 0x0000A0, "Wrong size on UATSceneAtrociousPhase");

// Class ATExt.ATCharacterCpl001C
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl001C final : public AAT_CharacterPlayableBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl001C">();
	}
	static class AATCharacterCpl001C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl001C>();
	}
};
static_assert(alignof(AATCharacterCpl001C) == 0x000010, "Wrong alignment on AATCharacterCpl001C");
static_assert(sizeof(AATCharacterCpl001C) == 0x001110, "Wrong size on AATCharacterCpl001C");

// Class ATExt.DMBattlePlyaer_FriendlyFire_Damage
// 0x0000 (0x0058 - 0x0058)
class UDMBattlePlyaer_FriendlyFire_Damage final : public UCFDebugMenuEventHandlerBool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DMBattlePlyaer_FriendlyFire_Damage">();
	}
	static class UDMBattlePlyaer_FriendlyFire_Damage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDMBattlePlyaer_FriendlyFire_Damage>();
	}
};
static_assert(alignof(UDMBattlePlyaer_FriendlyFire_Damage) == 0x000008, "Wrong alignment on UDMBattlePlyaer_FriendlyFire_Damage");
static_assert(sizeof(UDMBattlePlyaer_FriendlyFire_Damage) == 0x000058, "Wrong size on UDMBattlePlyaer_FriendlyFire_Damage");

// Class ATExt.ATCharacterCpl001D
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl001D final : public AAT_CharacterPlayableBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl001D">();
	}
	static class AATCharacterCpl001D* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl001D>();
	}
};
static_assert(alignof(AATCharacterCpl001D) == 0x000010, "Wrong alignment on AATCharacterCpl001D");
static_assert(sizeof(AATCharacterCpl001D) == 0x001110, "Wrong size on AATCharacterCpl001D");

// Class ATExt.ATCharacterCpl001E
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl001E final : public AAT_CharacterPlayableBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl001E">();
	}
	static class AATCharacterCpl001E* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl001E>();
	}
};
static_assert(alignof(AATCharacterCpl001E) == 0x000010, "Wrong alignment on AATCharacterCpl001E");
static_assert(sizeof(AATCharacterCpl001E) == 0x001110, "Wrong size on AATCharacterCpl001E");

// Class ATExt.ATCharacterCpl001F
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl001F final : public AAT_CharacterPlayableBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl001F">();
	}
	static class AATCharacterCpl001F* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl001F>();
	}
};
static_assert(alignof(AATCharacterCpl001F) == 0x000010, "Wrong alignment on AATCharacterCpl001F");
static_assert(sizeof(AATCharacterCpl001F) == 0x001110, "Wrong size on AATCharacterCpl001F");

// Class ATExt.ATGroupBattleReinforceManager
// 0x00E0 (0x0108 - 0x0028)
class UATGroupBattleReinforceManager final : public UObject
{
public:
	uint8                                         Pad_28[0xE0];                                      // 0x0028(0x00E0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATGroupBattleReinforceManager">();
	}
	static class UATGroupBattleReinforceManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATGroupBattleReinforceManager>();
	}
};
static_assert(alignof(UATGroupBattleReinforceManager) == 0x000008, "Wrong alignment on UATGroupBattleReinforceManager");
static_assert(sizeof(UATGroupBattleReinforceManager) == 0x000108, "Wrong size on UATGroupBattleReinforceManager");

// Class ATExt.ATCharacterCpl094c02
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl094c02 final : public AATCharacterCpl094BaseLight
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl094c02">();
	}
	static class AATCharacterCpl094c02* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl094c02>();
	}
};
static_assert(alignof(AATCharacterCpl094c02) == 0x000010, "Wrong alignment on AATCharacterCpl094c02");
static_assert(sizeof(AATCharacterCpl094c02) == 0x001110, "Wrong size on AATCharacterCpl094c02");

// Class ATExt.ATCharacterCpl001N
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl001N final : public AATCharacterCpl001
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl001N">();
	}
	static class AATCharacterCpl001N* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl001N>();
	}
};
static_assert(alignof(AATCharacterCpl001N) == 0x000010, "Wrong alignment on AATCharacterCpl001N");
static_assert(sizeof(AATCharacterCpl001N) == 0x001110, "Wrong size on AATCharacterCpl001N");

// Class ATExt.ATCharacterCpl002Base
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl002Base : public AAT_CharacterPlayableBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl002Base">();
	}
	static class AATCharacterCpl002Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl002Base>();
	}
};
static_assert(alignof(AATCharacterCpl002Base) == 0x000010, "Wrong alignment on AATCharacterCpl002Base");
static_assert(sizeof(AATCharacterCpl002Base) == 0x001110, "Wrong size on AATCharacterCpl002Base");

// Class ATExt.ATCharacterCpl002A
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl002A final : public AATCharacterCpl002Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl002A">();
	}
	static class AATCharacterCpl002A* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl002A>();
	}
};
static_assert(alignof(AATCharacterCpl002A) == 0x000010, "Wrong alignment on AATCharacterCpl002A");
static_assert(sizeof(AATCharacterCpl002A) == 0x001110, "Wrong size on AATCharacterCpl002A");

// Class ATExt.ATCharacterCpl002B
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl002B final : public AATCharacterCpl002Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl002B">();
	}
	static class AATCharacterCpl002B* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl002B>();
	}
};
static_assert(alignof(AATCharacterCpl002B) == 0x000010, "Wrong alignment on AATCharacterCpl002B");
static_assert(sizeof(AATCharacterCpl002B) == 0x001110, "Wrong size on AATCharacterCpl002B");

// Class ATExt.ATSceneBattleResult
// 0x0000 (0x0040 - 0x0040)
class UATSceneBattleResult final : public UCFScene
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneBattleResult">();
	}
	static class UATSceneBattleResult* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneBattleResult>();
	}
};
static_assert(alignof(UATSceneBattleResult) == 0x000008, "Wrong alignment on UATSceneBattleResult");
static_assert(sizeof(UATSceneBattleResult) == 0x000040, "Wrong size on UATSceneBattleResult");

// Class ATExt.ATCharacterCpl002C
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl002C final : public AATCharacterCpl002Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl002C">();
	}
	static class AATCharacterCpl002C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl002C>();
	}
};
static_assert(alignof(AATCharacterCpl002C) == 0x000010, "Wrong alignment on AATCharacterCpl002C");
static_assert(sizeof(AATCharacterCpl002C) == 0x001110, "Wrong size on AATCharacterCpl002C");

// Class ATExt.ATDebugMenuEventHandlerSkillSetting
// 0x0000 (0x0030 - 0x0030)
class UATDebugMenuEventHandlerSkillSetting final : public UCFDebugMenuEventHandlerContentsFactory
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATDebugMenuEventHandlerSkillSetting">();
	}
	static class UATDebugMenuEventHandlerSkillSetting* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATDebugMenuEventHandlerSkillSetting>();
	}
};
static_assert(alignof(UATDebugMenuEventHandlerSkillSetting) == 0x000008, "Wrong alignment on UATDebugMenuEventHandlerSkillSetting");
static_assert(sizeof(UATDebugMenuEventHandlerSkillSetting) == 0x000030, "Wrong size on UATDebugMenuEventHandlerSkillSetting");

// Class ATExt.ATCharacterCpl002D
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl002D final : public AATCharacterCpl002Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl002D">();
	}
	static class AATCharacterCpl002D* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl002D>();
	}
};
static_assert(alignof(AATCharacterCpl002D) == 0x000010, "Wrong alignment on AATCharacterCpl002D");
static_assert(sizeof(AATCharacterCpl002D) == 0x001110, "Wrong size on AATCharacterCpl002D");

// Class ATExt.ATCharacterCpl002E
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl002E final : public AATCharacterCpl002Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl002E">();
	}
	static class AATCharacterCpl002E* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl002E>();
	}
};
static_assert(alignof(AATCharacterCpl002E) == 0x000010, "Wrong alignment on AATCharacterCpl002E");
static_assert(sizeof(AATCharacterCpl002E) == 0x001110, "Wrong size on AATCharacterCpl002E");

// Class ATExt.ATCharacterCpl002F
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl002F final : public AATCharacterCpl002Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl002F">();
	}
	static class AATCharacterCpl002F* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl002F>();
	}
};
static_assert(alignof(AATCharacterCpl002F) == 0x000010, "Wrong alignment on AATCharacterCpl002F");
static_assert(sizeof(AATCharacterCpl002F) == 0x001110, "Wrong size on AATCharacterCpl002F");

// Class ATExt.ATLake
// 0x0010 (0x0348 - 0x0338)
class AATLake : public AActor
{
public:
	uint8                                         Pad_338[0x10];                                     // 0x0338(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Init(class UPostProcessComponent* PostProcessComponent, class UStaticMeshComponent* LakeMesh, class UStaticMeshComponent* UnderLakeMesh);
	void Update(class UPostProcessComponent* PostProcessComponent, class UStaticMeshComponent* LakeMesh, class UStaticMeshComponent* UnderLakeMesh);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATLake">();
	}
	static class AATLake* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATLake>();
	}
};
static_assert(alignof(AATLake) == 0x000008, "Wrong alignment on AATLake");
static_assert(sizeof(AATLake) == 0x000348, "Wrong size on AATLake");

// Class ATExt.ATDebugMenuEventHandlerLog
// 0x0080 (0x00B0 - 0x0030)
class UATDebugMenuEventHandlerLog final : public UCFDebugMenuEventHandlerContentsFactory
{
public:
	class UCFDebugMenuEventHandlerBool*           Handlers[0x10];                                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATDebugMenuEventHandlerLog">();
	}
	static class UATDebugMenuEventHandlerLog* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATDebugMenuEventHandlerLog>();
	}
};
static_assert(alignof(UATDebugMenuEventHandlerLog) == 0x000008, "Wrong alignment on UATDebugMenuEventHandlerLog");
static_assert(sizeof(UATDebugMenuEventHandlerLog) == 0x0000B0, "Wrong size on UATDebugMenuEventHandlerLog");
static_assert(offsetof(UATDebugMenuEventHandlerLog, Handlers) == 0x000030, "Member 'UATDebugMenuEventHandlerLog::Handlers' has a wrong offset!");

// Class ATExt.ATCharacterCpl002G
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl002G final : public AATCharacterCpl002Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl002G">();
	}
	static class AATCharacterCpl002G* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl002G>();
	}
};
static_assert(alignof(AATCharacterCpl002G) == 0x000010, "Wrong alignment on AATCharacterCpl002G");
static_assert(sizeof(AATCharacterCpl002G) == 0x001110, "Wrong size on AATCharacterCpl002G");

// Class ATExt.ATCharacterCpl002Z
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl002Z final : public AAT_CharacterHugeBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl002Z">();
	}
	static class AATCharacterCpl002Z* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl002Z>();
	}
};
static_assert(alignof(AATCharacterCpl002Z) == 0x000010, "Wrong alignment on AATCharacterCpl002Z");
static_assert(sizeof(AATCharacterCpl002Z) == 0x001110, "Wrong size on AATCharacterCpl002Z");

// Class ATExt.ATCharacterCpl003Base
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl003Base : public AAT_CharacterPlayableBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl003Base">();
	}
	static class AATCharacterCpl003Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl003Base>();
	}
};
static_assert(alignof(AATCharacterCpl003Base) == 0x000010, "Wrong alignment on AATCharacterCpl003Base");
static_assert(sizeof(AATCharacterCpl003Base) == 0x001110, "Wrong size on AATCharacterCpl003Base");

// Class ATExt.ATCharacterCpl085
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl085 final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl085">();
	}
	static class AATCharacterCpl085* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl085>();
	}
};
static_assert(alignof(AATCharacterCpl085) == 0x000010, "Wrong alignment on AATCharacterCpl085");
static_assert(sizeof(AATCharacterCpl085) == 0x001110, "Wrong size on AATCharacterCpl085");

// Class ATExt.ATCharacterCpl003A
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl003A final : public AATCharacterCpl003Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl003A">();
	}
	static class AATCharacterCpl003A* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl003A>();
	}
};
static_assert(alignof(AATCharacterCpl003A) == 0x000010, "Wrong alignment on AATCharacterCpl003A");
static_assert(sizeof(AATCharacterCpl003A) == 0x001110, "Wrong size on AATCharacterCpl003A");

// Class ATExt.ATCharacterCpl102C
// 0x0000 (0x1190 - 0x1190)
class AATCharacterCpl102C final : public AATCharacterCpl102Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl102C">();
	}
	static class AATCharacterCpl102C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl102C>();
	}
};
static_assert(alignof(AATCharacterCpl102C) == 0x000010, "Wrong alignment on AATCharacterCpl102C");
static_assert(sizeof(AATCharacterCpl102C) == 0x001190, "Wrong size on AATCharacterCpl102C");

// Class ATExt.ATCharacterCpl003B
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl003B final : public AATCharacterCpl003Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl003B">();
	}
	static class AATCharacterCpl003B* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl003B>();
	}
};
static_assert(alignof(AATCharacterCpl003B) == 0x000010, "Wrong alignment on AATCharacterCpl003B");
static_assert(sizeof(AATCharacterCpl003B) == 0x001110, "Wrong size on AATCharacterCpl003B");

// Class ATExt.ATMonitoring
// 0x0018 (0x0040 - 0x0028)
class UATMonitoring final : public UObject
{
public:
	uint8                                         Pad_28[0x4];                                       // 0x0028(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIsBind_OnEndAutoSave;                             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          ParentGameInstance;                                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMonitoring">();
	}
	static class UATMonitoring* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMonitoring>();
	}
};
static_assert(alignof(UATMonitoring) == 0x000008, "Wrong alignment on UATMonitoring");
static_assert(sizeof(UATMonitoring) == 0x000040, "Wrong size on UATMonitoring");
static_assert(offsetof(UATMonitoring, bIsBind_OnEndAutoSave) == 0x00002C, "Member 'UATMonitoring::bIsBind_OnEndAutoSave' has a wrong offset!");
static_assert(offsetof(UATMonitoring, ParentGameInstance) == 0x000030, "Member 'UATMonitoring::ParentGameInstance' has a wrong offset!");

// Class ATExt.ATCharacterCpl003C
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl003C final : public AATCharacterCpl003Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl003C">();
	}
	static class AATCharacterCpl003C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl003C>();
	}
};
static_assert(alignof(AATCharacterCpl003C) == 0x000010, "Wrong alignment on AATCharacterCpl003C");
static_assert(sizeof(AATCharacterCpl003C) == 0x001110, "Wrong size on AATCharacterCpl003C");

// Class ATExt.ATCharacterCpl003E
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl003E final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl003E">();
	}
	static class AATCharacterCpl003E* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl003E>();
	}
};
static_assert(alignof(AATCharacterCpl003E) == 0x000010, "Wrong alignment on AATCharacterCpl003E");
static_assert(sizeof(AATCharacterCpl003E) == 0x001110, "Wrong size on AATCharacterCpl003E");

// Class ATExt.ATCharacterCpl098
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl098 final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl098">();
	}
	static class AATCharacterCpl098* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl098>();
	}
};
static_assert(alignof(AATCharacterCpl098) == 0x000010, "Wrong alignment on AATCharacterCpl098");
static_assert(sizeof(AATCharacterCpl098) == 0x001110, "Wrong size on AATCharacterCpl098");

// Class ATExt.ATCharacterCpl003Z
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl003Z final : public AAT_CharacterHugeBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl003Z">();
	}
	static class AATCharacterCpl003Z* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl003Z>();
	}
};
static_assert(alignof(AATCharacterCpl003Z) == 0x000010, "Wrong alignment on AATCharacterCpl003Z");
static_assert(sizeof(AATCharacterCpl003Z) == 0x001110, "Wrong size on AATCharacterCpl003Z");

// Class ATExt.DMBattleDraw_Base
// 0x0000 (0x0058 - 0x0058)
class UDMBattleDraw_Base : public UCFDebugMenuEventHandlerBool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DMBattleDraw_Base">();
	}
	static class UDMBattleDraw_Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDMBattleDraw_Base>();
	}
};
static_assert(alignof(UDMBattleDraw_Base) == 0x000008, "Wrong alignment on UDMBattleDraw_Base");
static_assert(sizeof(UDMBattleDraw_Base) == 0x000058, "Wrong size on UDMBattleDraw_Base");

// Class ATExt.DMBattleDraw_Stage_Tree
// 0x0000 (0x0058 - 0x0058)
class UDMBattleDraw_Stage_Tree final : public UDMBattleDraw_Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DMBattleDraw_Stage_Tree">();
	}
	static class UDMBattleDraw_Stage_Tree* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDMBattleDraw_Stage_Tree>();
	}
};
static_assert(alignof(UDMBattleDraw_Stage_Tree) == 0x000008, "Wrong alignment on UDMBattleDraw_Stage_Tree");
static_assert(sizeof(UDMBattleDraw_Stage_Tree) == 0x000058, "Wrong size on UDMBattleDraw_Stage_Tree");

// Class ATExt.ATCharacterCpl004Base
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl004Base : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl004Base">();
	}
	static class AATCharacterCpl004Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl004Base>();
	}
};
static_assert(alignof(AATCharacterCpl004Base) == 0x000010, "Wrong alignment on AATCharacterCpl004Base");
static_assert(sizeof(AATCharacterCpl004Base) == 0x001110, "Wrong size on AATCharacterCpl004Base");

// Class ATExt.ATCharacterCpl004c01
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl004c01 : public AATCharacterCpl004Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl004c01">();
	}
	static class AATCharacterCpl004c01* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl004c01>();
	}
};
static_assert(alignof(AATCharacterCpl004c01) == 0x000010, "Wrong alignment on AATCharacterCpl004c01");
static_assert(sizeof(AATCharacterCpl004c01) == 0x001110, "Wrong size on AATCharacterCpl004c01");

// Class ATExt.ATCharacterCpl004c02
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl004c02 : public AATCharacterCpl004Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl004c02">();
	}
	static class AATCharacterCpl004c02* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl004c02>();
	}
};
static_assert(alignof(AATCharacterCpl004c02) == 0x000010, "Wrong alignment on AATCharacterCpl004c02");
static_assert(sizeof(AATCharacterCpl004c02) == 0x001110, "Wrong size on AATCharacterCpl004c02");

// Class ATExt.ATCharacterCpl093BaseLight
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl093BaseLight : public AATCharacterLightBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl093BaseLight">();
	}
	static class AATCharacterCpl093BaseLight* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl093BaseLight>();
	}
};
static_assert(alignof(AATCharacterCpl093BaseLight) == 0x000010, "Wrong alignment on AATCharacterCpl093BaseLight");
static_assert(sizeof(AATCharacterCpl093BaseLight) == 0x001110, "Wrong size on AATCharacterCpl093BaseLight");

// Class ATExt.ATCharacterCpl004c03
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl004c03 : public AATCharacterCpl004Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl004c03">();
	}
	static class AATCharacterCpl004c03* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl004c03>();
	}
};
static_assert(alignof(AATCharacterCpl004c03) == 0x000010, "Wrong alignment on AATCharacterCpl004c03");
static_assert(sizeof(AATCharacterCpl004c03) == 0x001110, "Wrong size on AATCharacterCpl004c03");

// Class ATExt.ATCharacterCpl076Base
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl076Base : public AAT_CharacterPlayableBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl076Base">();
	}
	static class AATCharacterCpl076Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl076Base>();
	}
};
static_assert(alignof(AATCharacterCpl076Base) == 0x000010, "Wrong alignment on AATCharacterCpl076Base");
static_assert(sizeof(AATCharacterCpl076Base) == 0x001110, "Wrong size on AATCharacterCpl076Base");

// Class ATExt.ATCharacterCpl076A
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl076A final : public AATCharacterCpl076Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl076A">();
	}
	static class AATCharacterCpl076A* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl076A>();
	}
};
static_assert(alignof(AATCharacterCpl076A) == 0x000010, "Wrong alignment on AATCharacterCpl076A");
static_assert(sizeof(AATCharacterCpl076A) == 0x001110, "Wrong size on AATCharacterCpl076A");

// Class ATExt.ATCharacterCpl004c04
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl004c04 : public AATCharacterCpl004Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl004c04">();
	}
	static class AATCharacterCpl004c04* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl004c04>();
	}
};
static_assert(alignof(AATCharacterCpl004c04) == 0x000010, "Wrong alignment on AATCharacterCpl004c04");
static_assert(sizeof(AATCharacterCpl004c04) == 0x001110, "Wrong size on AATCharacterCpl004c04");

// Class ATExt.ATCharacterCpl004c05
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl004c05 final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl004c05">();
	}
	static class AATCharacterCpl004c05* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl004c05>();
	}
};
static_assert(alignof(AATCharacterCpl004c05) == 0x000010, "Wrong alignment on AATCharacterCpl004c05");
static_assert(sizeof(AATCharacterCpl004c05) == 0x001110, "Wrong size on AATCharacterCpl004c05");

// Class ATExt.ATCharacterCpl005Base
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl005Base : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl005Base">();
	}
	static class AATCharacterCpl005Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl005Base>();
	}
};
static_assert(alignof(AATCharacterCpl005Base) == 0x000010, "Wrong alignment on AATCharacterCpl005Base");
static_assert(sizeof(AATCharacterCpl005Base) == 0x001110, "Wrong size on AATCharacterCpl005Base");

// Class ATExt.ATCharacterCpl102A
// 0x0000 (0x1190 - 0x1190)
class AATCharacterCpl102A final : public AATCharacterCpl102Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl102A">();
	}
	static class AATCharacterCpl102A* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl102A>();
	}
};
static_assert(alignof(AATCharacterCpl102A) == 0x000010, "Wrong alignment on AATCharacterCpl102A");
static_assert(sizeof(AATCharacterCpl102A) == 0x001190, "Wrong size on AATCharacterCpl102A");

// Class ATExt.ATCharacterCpl005A
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl005A final : public AATCharacterCpl005Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl005A">();
	}
	static class AATCharacterCpl005A* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl005A>();
	}
};
static_assert(alignof(AATCharacterCpl005A) == 0x000010, "Wrong alignment on AATCharacterCpl005A");
static_assert(sizeof(AATCharacterCpl005A) == 0x001110, "Wrong size on AATCharacterCpl005A");

// Class ATExt.DMBoolShowBattleScore
// 0x0000 (0x0058 - 0x0058)
class UDMBoolShowBattleScore final : public UCFDebugMenuEventHandlerBool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DMBoolShowBattleScore">();
	}
	static class UDMBoolShowBattleScore* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDMBoolShowBattleScore>();
	}
};
static_assert(alignof(UDMBoolShowBattleScore) == 0x000008, "Wrong alignment on UDMBoolShowBattleScore");
static_assert(sizeof(UDMBoolShowBattleScore) == 0x000058, "Wrong size on UDMBoolShowBattleScore");

// Class ATExt.ATCharacterCpl005B
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl005B final : public AATCharacterCpl005Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl005B">();
	}
	static class AATCharacterCpl005B* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl005B>();
	}
};
static_assert(alignof(AATCharacterCpl005B) == 0x000010, "Wrong alignment on AATCharacterCpl005B");
static_assert(sizeof(AATCharacterCpl005B) == 0x001110, "Wrong size on AATCharacterCpl005B");

// Class ATExt.ATCharacterCpl005C
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl005C final : public AATCharacterCpl005Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl005C">();
	}
	static class AATCharacterCpl005C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl005C>();
	}
};
static_assert(alignof(AATCharacterCpl005C) == 0x000010, "Wrong alignment on AATCharacterCpl005C");
static_assert(sizeof(AATCharacterCpl005C) == 0x001110, "Wrong size on AATCharacterCpl005C");

// Class ATExt.ATCharacterCpl005D
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl005D final : public AATCharacterCpl005Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl005D">();
	}
	static class AATCharacterCpl005D* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl005D>();
	}
};
static_assert(alignof(AATCharacterCpl005D) == 0x000010, "Wrong alignment on AATCharacterCpl005D");
static_assert(sizeof(AATCharacterCpl005D) == 0x001110, "Wrong size on AATCharacterCpl005D");

// Class ATExt.CFDMLogSwitchCollision
// 0x0000 (0x0058 - 0x0058)
class UCFDMLogSwitchCollision final : public UCFDebugMenuEventHandlerBool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CFDMLogSwitchCollision">();
	}
	static class UCFDMLogSwitchCollision* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCFDMLogSwitchCollision>();
	}
};
static_assert(alignof(UCFDMLogSwitchCollision) == 0x000008, "Wrong alignment on UCFDMLogSwitchCollision");
static_assert(sizeof(UCFDMLogSwitchCollision) == 0x000058, "Wrong size on UCFDMLogSwitchCollision");

// Class ATExt.ATCharacterCpl005E
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl005E final : public AATCharacterCpl005Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl005E">();
	}
	static class AATCharacterCpl005E* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl005E>();
	}
};
static_assert(alignof(AATCharacterCpl005E) == 0x000010, "Wrong alignment on AATCharacterCpl005E");
static_assert(sizeof(AATCharacterCpl005E) == 0x001110, "Wrong size on AATCharacterCpl005E");

// Class ATExt.ATCharacterCpl082c02Light
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl082c02Light final : public AATCharacterCpl082BaseLight
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl082c02Light">();
	}
	static class AATCharacterCpl082c02Light* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl082c02Light>();
	}
};
static_assert(alignof(AATCharacterCpl082c02Light) == 0x000010, "Wrong alignment on AATCharacterCpl082c02Light");
static_assert(sizeof(AATCharacterCpl082c02Light) == 0x001110, "Wrong size on AATCharacterCpl082c02Light");

// Class ATExt.ATCharacterCpl005F
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl005F final : public AATCharacterCpl005Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl005F">();
	}
	static class AATCharacterCpl005F* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl005F>();
	}
};
static_assert(alignof(AATCharacterCpl005F) == 0x000010, "Wrong alignment on AATCharacterCpl005F");
static_assert(sizeof(AATCharacterCpl005F) == 0x001110, "Wrong size on AATCharacterCpl005F");

// Class ATExt.ATCharacterCpl005G
// 0x0010 (0x1120 - 0x1110)
class AATCharacterCpl005G final : public AATCharacterCpl005Base
{
public:
	uint8                                         Pad_1110[0x10];                                    // 0x1110(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl005G">();
	}
	static class AATCharacterCpl005G* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl005G>();
	}
};
static_assert(alignof(AATCharacterCpl005G) == 0x000010, "Wrong alignment on AATCharacterCpl005G");
static_assert(sizeof(AATCharacterCpl005G) == 0x001120, "Wrong size on AATCharacterCpl005G");

// Class ATExt.ATCharacterCpl006
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl006 final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl006">();
	}
	static class AATCharacterCpl006* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl006>();
	}
};
static_assert(alignof(AATCharacterCpl006) == 0x000010, "Wrong alignment on AATCharacterCpl006");
static_assert(sizeof(AATCharacterCpl006) == 0x001110, "Wrong size on AATCharacterCpl006");

// Class ATExt.ATCharacterCpl103C
// 0x0000 (0x1190 - 0x1190)
class AATCharacterCpl103C final : public AATCharacterCpl103Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl103C">();
	}
	static class AATCharacterCpl103C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl103C>();
	}
};
static_assert(alignof(AATCharacterCpl103C) == 0x000010, "Wrong alignment on AATCharacterCpl103C");
static_assert(sizeof(AATCharacterCpl103C) == 0x001190, "Wrong size on AATCharacterCpl103C");

// Class ATExt.ATCharacterCpl007
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl007 final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl007">();
	}
	static class AATCharacterCpl007* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl007>();
	}
};
static_assert(alignof(AATCharacterCpl007) == 0x000010, "Wrong alignment on AATCharacterCpl007");
static_assert(sizeof(AATCharacterCpl007) == 0x001110, "Wrong size on AATCharacterCpl007");

// Class ATExt.ATCharacterCpl106A
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl106A : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl106A">();
	}
	static class AATCharacterCpl106A* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl106A>();
	}
};
static_assert(alignof(AATCharacterCpl106A) == 0x000010, "Wrong alignment on AATCharacterCpl106A");
static_assert(sizeof(AATCharacterCpl106A) == 0x001110, "Wrong size on AATCharacterCpl106A");

// Class ATExt.ATCharacterCpl008
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl008 final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl008">();
	}
	static class AATCharacterCpl008* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl008>();
	}
};
static_assert(alignof(AATCharacterCpl008) == 0x000010, "Wrong alignment on AATCharacterCpl008");
static_assert(sizeof(AATCharacterCpl008) == 0x001110, "Wrong size on AATCharacterCpl008");

// Class ATExt.ATCharacterCpl008B
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl008B final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl008B">();
	}
	static class AATCharacterCpl008B* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl008B>();
	}
};
static_assert(alignof(AATCharacterCpl008B) == 0x000010, "Wrong alignment on AATCharacterCpl008B");
static_assert(sizeof(AATCharacterCpl008B) == 0x001110, "Wrong size on AATCharacterCpl008B");

// Class ATExt.ATCharacterCpl009
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl009 final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl009">();
	}
	static class AATCharacterCpl009* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl009>();
	}
};
static_assert(alignof(AATCharacterCpl009) == 0x000010, "Wrong alignment on AATCharacterCpl009");
static_assert(sizeof(AATCharacterCpl009) == 0x001110, "Wrong size on AATCharacterCpl009");

// Class ATExt.CFDMLogSwitchGeneral
// 0x0000 (0x0058 - 0x0058)
class UCFDMLogSwitchGeneral final : public UCFDebugMenuEventHandlerBool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CFDMLogSwitchGeneral">();
	}
	static class UCFDMLogSwitchGeneral* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCFDMLogSwitchGeneral>();
	}
};
static_assert(alignof(UCFDMLogSwitchGeneral) == 0x000008, "Wrong alignment on UCFDMLogSwitchGeneral");
static_assert(sizeof(UCFDMLogSwitchGeneral) == 0x000058, "Wrong size on UCFDMLogSwitchGeneral");

// Class ATExt.ATCharacterCpl010
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl010 final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl010">();
	}
	static class AATCharacterCpl010* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl010>();
	}
};
static_assert(alignof(AATCharacterCpl010) == 0x000010, "Wrong alignment on AATCharacterCpl010");
static_assert(sizeof(AATCharacterCpl010) == 0x001110, "Wrong size on AATCharacterCpl010");

// Class ATExt.ATCharacterCpl083Base
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl083Base : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl083Base">();
	}
	static class AATCharacterCpl083Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl083Base>();
	}
};
static_assert(alignof(AATCharacterCpl083Base) == 0x000010, "Wrong alignment on AATCharacterCpl083Base");
static_assert(sizeof(AATCharacterCpl083Base) == 0x001110, "Wrong size on AATCharacterCpl083Base");

// Class ATExt.ATCharacterCpl083c03
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl083c03 final : public AATCharacterCpl083Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl083c03">();
	}
	static class AATCharacterCpl083c03* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl083c03>();
	}
};
static_assert(alignof(AATCharacterCpl083c03) == 0x000010, "Wrong alignment on AATCharacterCpl083c03");
static_assert(sizeof(AATCharacterCpl083c03) == 0x001110, "Wrong size on AATCharacterCpl083c03");

// Class ATExt.ATCharacterCpl011
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl011 final : public AAT_CharacterPlayableBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl011">();
	}
	static class AATCharacterCpl011* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl011>();
	}
};
static_assert(alignof(AATCharacterCpl011) == 0x000010, "Wrong alignment on AATCharacterCpl011");
static_assert(sizeof(AATCharacterCpl011) == 0x001110, "Wrong size on AATCharacterCpl011");

// Class ATExt.ATCharacterCpl011B
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl011B final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl011B">();
	}
	static class AATCharacterCpl011B* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl011B>();
	}
};
static_assert(alignof(AATCharacterCpl011B) == 0x000010, "Wrong alignment on AATCharacterCpl011B");
static_assert(sizeof(AATCharacterCpl011B) == 0x001110, "Wrong size on AATCharacterCpl011B");

// Class ATExt.ATCharacterCpl011C
// 0x0060 (0x1180 - 0x1120)
class AATCharacterCpl011C final : public AAT_CharacterMultipleLockonBase
{
public:
	uint8                                         Pad_1120[0x18];                                    // 0x1120(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   OverrideSocketName[0x3];                           // 0x1138(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         DamageCut;                                         // 0x1150(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDownCheckInfo                         DownInfos[0x3];                                    // 0x1154(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_116C[0x4];                                     // 0x116C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UShapeComponent*                        DownBlockCollision;                                // 0x1170(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1178[0x8];                                     // 0x1178(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnActionChange(class AAT_Character* InCharacter, int32 InActionIdPrev, int32 InActionIdNext);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl011C">();
	}
	static class AATCharacterCpl011C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl011C>();
	}
};
static_assert(alignof(AATCharacterCpl011C) == 0x000010, "Wrong alignment on AATCharacterCpl011C");
static_assert(sizeof(AATCharacterCpl011C) == 0x001180, "Wrong size on AATCharacterCpl011C");
static_assert(offsetof(AATCharacterCpl011C, OverrideSocketName) == 0x001138, "Member 'AATCharacterCpl011C::OverrideSocketName' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl011C, DamageCut) == 0x001150, "Member 'AATCharacterCpl011C::DamageCut' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl011C, DownInfos) == 0x001154, "Member 'AATCharacterCpl011C::DownInfos' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl011C, DownBlockCollision) == 0x001170, "Member 'AATCharacterCpl011C::DownBlockCollision' has a wrong offset!");

// Class ATExt.ATCharacterCpl082c01Light
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl082c01Light final : public AATCharacterCpl082BaseLight
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl082c01Light">();
	}
	static class AATCharacterCpl082c01Light* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl082c01Light>();
	}
};
static_assert(alignof(AATCharacterCpl082c01Light) == 0x000010, "Wrong alignment on AATCharacterCpl082c01Light");
static_assert(sizeof(AATCharacterCpl082c01Light) == 0x001110, "Wrong size on AATCharacterCpl082c01Light");

// Class ATExt.ATCharacterCpl012
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl012 final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl012">();
	}
	static class AATCharacterCpl012* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl012>();
	}
};
static_assert(alignof(AATCharacterCpl012) == 0x000010, "Wrong alignment on AATCharacterCpl012");
static_assert(sizeof(AATCharacterCpl012) == 0x001110, "Wrong size on AATCharacterCpl012");

// Class ATExt.ATCharacterCpl013
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl013 final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl013">();
	}
	static class AATCharacterCpl013* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl013>();
	}
};
static_assert(alignof(AATCharacterCpl013) == 0x000010, "Wrong alignment on AATCharacterCpl013");
static_assert(sizeof(AATCharacterCpl013) == 0x001110, "Wrong size on AATCharacterCpl013");

// Class ATExt.ATCharacterCpl014Base
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl014Base : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl014Base">();
	}
	static class AATCharacterCpl014Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl014Base>();
	}
};
static_assert(alignof(AATCharacterCpl014Base) == 0x000010, "Wrong alignment on AATCharacterCpl014Base");
static_assert(sizeof(AATCharacterCpl014Base) == 0x001110, "Wrong size on AATCharacterCpl014Base");

// Class ATExt.ATCharacterCpl014c01
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl014c01 : public AATCharacterCpl014Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl014c01">();
	}
	static class AATCharacterCpl014c01* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl014c01>();
	}
};
static_assert(alignof(AATCharacterCpl014c01) == 0x000010, "Wrong alignment on AATCharacterCpl014c01");
static_assert(sizeof(AATCharacterCpl014c01) == 0x001110, "Wrong size on AATCharacterCpl014c01");

// Class ATExt.ATCharacterCpl100C
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl100C final : public AAT_CharacterPlayableBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl100C">();
	}
	static class AATCharacterCpl100C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl100C>();
	}
};
static_assert(alignof(AATCharacterCpl100C) == 0x000010, "Wrong alignment on AATCharacterCpl100C");
static_assert(sizeof(AATCharacterCpl100C) == 0x001110, "Wrong size on AATCharacterCpl100C");

// Class ATExt.ATCharacterCpl014c02
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl014c02 : public AATCharacterCpl014Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl014c02">();
	}
	static class AATCharacterCpl014c02* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl014c02>();
	}
};
static_assert(alignof(AATCharacterCpl014c02) == 0x000010, "Wrong alignment on AATCharacterCpl014c02");
static_assert(sizeof(AATCharacterCpl014c02) == 0x001110, "Wrong size on AATCharacterCpl014c02");

// Class ATExt.ATGroupBattleSZCActor
// 0x0028 (0x0360 - 0x0338)
class AATGroupBattleSZCActor final : public AActor
{
public:
	uint8                                         Pad_338[0x8];                                      // 0x0338(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 SkeletalMeshComponent;                             // 0x0340(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UATCombineMeshComponent*                CombineMeshComponent;                              // 0x0348(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                           AnimNormal;                                        // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                           AnimDamage;                                        // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATGroupBattleSZCActor">();
	}
	static class AATGroupBattleSZCActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATGroupBattleSZCActor>();
	}
};
static_assert(alignof(AATGroupBattleSZCActor) == 0x000008, "Wrong alignment on AATGroupBattleSZCActor");
static_assert(sizeof(AATGroupBattleSZCActor) == 0x000360, "Wrong size on AATGroupBattleSZCActor");
static_assert(offsetof(AATGroupBattleSZCActor, SkeletalMeshComponent) == 0x000340, "Member 'AATGroupBattleSZCActor::SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(AATGroupBattleSZCActor, CombineMeshComponent) == 0x000348, "Member 'AATGroupBattleSZCActor::CombineMeshComponent' has a wrong offset!");
static_assert(offsetof(AATGroupBattleSZCActor, AnimNormal) == 0x000350, "Member 'AATGroupBattleSZCActor::AnimNormal' has a wrong offset!");
static_assert(offsetof(AATGroupBattleSZCActor, AnimDamage) == 0x000358, "Member 'AATGroupBattleSZCActor::AnimDamage' has a wrong offset!");

// Class ATExt.ATCharacterCpl014c03
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl014c03 : public AATCharacterCpl014Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl014c03">();
	}
	static class AATCharacterCpl014c03* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl014c03>();
	}
};
static_assert(alignof(AATCharacterCpl014c03) == 0x000010, "Wrong alignment on AATCharacterCpl014c03");
static_assert(sizeof(AATCharacterCpl014c03) == 0x001110, "Wrong size on AATCharacterCpl014c03");

// Class ATExt.ATSceneCharacterPartsChangeParam
// 0x0018 (0x0058 - 0x0040)
class UATSceneCharacterPartsChangeParam final : public UCFSceneChangeParamBase
{
public:
	uint8                                         Pad_40[0x18];                                      // 0x0040(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneCharacterPartsChangeParam">();
	}
	static class UATSceneCharacterPartsChangeParam* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneCharacterPartsChangeParam>();
	}
};
static_assert(alignof(UATSceneCharacterPartsChangeParam) == 0x000008, "Wrong alignment on UATSceneCharacterPartsChangeParam");
static_assert(sizeof(UATSceneCharacterPartsChangeParam) == 0x000058, "Wrong size on UATSceneCharacterPartsChangeParam");

// Class ATExt.ATCharacterCpl014c04
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl014c04 : public AATCharacterCpl014Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl014c04">();
	}
	static class AATCharacterCpl014c04* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl014c04>();
	}
};
static_assert(alignof(AATCharacterCpl014c04) == 0x000010, "Wrong alignment on AATCharacterCpl014c04");
static_assert(sizeof(AATCharacterCpl014c04) == 0x001110, "Wrong size on AATCharacterCpl014c04");

// Class ATExt.ATCharacterCpl014c05
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl014c05 final : public AATCharacterCpl014Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl014c05">();
	}
	static class AATCharacterCpl014c05* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl014c05>();
	}
};
static_assert(alignof(AATCharacterCpl014c05) == 0x000010, "Wrong alignment on AATCharacterCpl014c05");
static_assert(sizeof(AATCharacterCpl014c05) == 0x001110, "Wrong size on AATCharacterCpl014c05");

// Class ATExt.ATCharacterCpl017
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl017 final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl017">();
	}
	static class AATCharacterCpl017* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl017>();
	}
};
static_assert(alignof(AATCharacterCpl017) == 0x000010, "Wrong alignment on AATCharacterCpl017");
static_assert(sizeof(AATCharacterCpl017) == 0x001110, "Wrong size on AATCharacterCpl017");

// Class ATExt.ATCharacterCpl086c02
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl086c02 final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl086c02">();
	}
	static class AATCharacterCpl086c02* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl086c02>();
	}
};
static_assert(alignof(AATCharacterCpl086c02) == 0x000010, "Wrong alignment on AATCharacterCpl086c02");
static_assert(sizeof(AATCharacterCpl086c02) == 0x001110, "Wrong size on AATCharacterCpl086c02");

// Class ATExt.ATCharacterCpl017B
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl017B final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl017B">();
	}
	static class AATCharacterCpl017B* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl017B>();
	}
};
static_assert(alignof(AATCharacterCpl017B) == 0x000010, "Wrong alignment on AATCharacterCpl017B");
static_assert(sizeof(AATCharacterCpl017B) == 0x001110, "Wrong size on AATCharacterCpl017B");

// Class ATExt.ATCharacterCpl018
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl018 final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl018">();
	}
	static class AATCharacterCpl018* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl018>();
	}
};
static_assert(alignof(AATCharacterCpl018) == 0x000010, "Wrong alignment on AATCharacterCpl018");
static_assert(sizeof(AATCharacterCpl018) == 0x001110, "Wrong size on AATCharacterCpl018");

// Class ATExt.ATCharacterCpl018B
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl018B final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl018B">();
	}
	static class AATCharacterCpl018B* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl018B>();
	}
};
static_assert(alignof(AATCharacterCpl018B) == 0x000010, "Wrong alignment on AATCharacterCpl018B");
static_assert(sizeof(AATCharacterCpl018B) == 0x001110, "Wrong size on AATCharacterCpl018B");

// Class ATExt.ATCharacterCpl102E
// 0x0000 (0x1190 - 0x1190)
class AATCharacterCpl102E final : public AATCharacterCpl102Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl102E">();
	}
	static class AATCharacterCpl102E* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl102E>();
	}
};
static_assert(alignof(AATCharacterCpl102E) == 0x000010, "Wrong alignment on AATCharacterCpl102E");
static_assert(sizeof(AATCharacterCpl102E) == 0x001190, "Wrong size on AATCharacterCpl102E");

// Class ATExt.ATCharacterCpl019Base
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl019Base : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl019Base">();
	}
	static class AATCharacterCpl019Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl019Base>();
	}
};
static_assert(alignof(AATCharacterCpl019Base) == 0x000010, "Wrong alignment on AATCharacterCpl019Base");
static_assert(sizeof(AATCharacterCpl019Base) == 0x001110, "Wrong size on AATCharacterCpl019Base");

// Class ATExt.ATPadVibrationManager
// 0x0028 (0x0058 - 0x0030)
class UATPadVibrationManager final : public UBaseObject
{
public:
	uint8                                         Pad_30[0x28];                                      // 0x0030(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATPadVibrationManager">();
	}
	static class UATPadVibrationManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATPadVibrationManager>();
	}
};
static_assert(alignof(UATPadVibrationManager) == 0x000008, "Wrong alignment on UATPadVibrationManager");
static_assert(sizeof(UATPadVibrationManager) == 0x000058, "Wrong size on UATPadVibrationManager");

// Class ATExt.ATCharacterCpl093c03Light
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl093c03Light final : public AATCharacterCpl093BaseLight
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl093c03Light">();
	}
	static class AATCharacterCpl093c03Light* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl093c03Light>();
	}
};
static_assert(alignof(AATCharacterCpl093c03Light) == 0x000010, "Wrong alignment on AATCharacterCpl093c03Light");
static_assert(sizeof(AATCharacterCpl093c03Light) == 0x001110, "Wrong size on AATCharacterCpl093c03Light");

// Class ATExt.ATCharacterCpl019A
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl019A final : public AATCharacterCpl019Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl019A">();
	}
	static class AATCharacterCpl019A* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl019A>();
	}
};
static_assert(alignof(AATCharacterCpl019A) == 0x000010, "Wrong alignment on AATCharacterCpl019A");
static_assert(sizeof(AATCharacterCpl019A) == 0x001110, "Wrong size on AATCharacterCpl019A");

// Class ATExt.ATEventBattleStartPoint
// 0x0010 (0x0348 - 0x0338)
class AATEventBattleStartPoint : public AActor
{
public:
	class FName                                   BattleName;                                        // 0x0338(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EEventBattleTeamType                          TeamType;                                          // 0x0340(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EEventBattleMemberIndex                       MemberIndex;                                       // 0x0341(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bSetRotation;                                      // 0x0342(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_343[0x5];                                      // 0x0343(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleStartPoint">();
	}
	static class AATEventBattleStartPoint* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATEventBattleStartPoint>();
	}
};
static_assert(alignof(AATEventBattleStartPoint) == 0x000008, "Wrong alignment on AATEventBattleStartPoint");
static_assert(sizeof(AATEventBattleStartPoint) == 0x000348, "Wrong size on AATEventBattleStartPoint");
static_assert(offsetof(AATEventBattleStartPoint, BattleName) == 0x000338, "Member 'AATEventBattleStartPoint::BattleName' has a wrong offset!");
static_assert(offsetof(AATEventBattleStartPoint, TeamType) == 0x000340, "Member 'AATEventBattleStartPoint::TeamType' has a wrong offset!");
static_assert(offsetof(AATEventBattleStartPoint, MemberIndex) == 0x000341, "Member 'AATEventBattleStartPoint::MemberIndex' has a wrong offset!");
static_assert(offsetof(AATEventBattleStartPoint, bSetRotation) == 0x000342, "Member 'AATEventBattleStartPoint::bSetRotation' has a wrong offset!");

// Class ATExt.ATCharacterCpl019B
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl019B final : public AATCharacterCpl019Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl019B">();
	}
	static class AATCharacterCpl019B* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl019B>();
	}
};
static_assert(alignof(AATCharacterCpl019B) == 0x000010, "Wrong alignment on AATCharacterCpl019B");
static_assert(sizeof(AATCharacterCpl019B) == 0x001110, "Wrong size on AATCharacterCpl019B");

// Class ATExt.ATCharacterCpl020
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl020 final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl020">();
	}
	static class AATCharacterCpl020* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl020>();
	}
};
static_assert(alignof(AATCharacterCpl020) == 0x000010, "Wrong alignment on AATCharacterCpl020");
static_assert(sizeof(AATCharacterCpl020) == 0x001110, "Wrong size on AATCharacterCpl020");

// Class ATExt.ATCharacterCpl021
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl021 final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl021">();
	}
	static class AATCharacterCpl021* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl021>();
	}
};
static_assert(alignof(AATCharacterCpl021) == 0x000010, "Wrong alignment on AATCharacterCpl021");
static_assert(sizeof(AATCharacterCpl021) == 0x001110, "Wrong size on AATCharacterCpl021");

// Class ATExt.ATCharacterCpl093c01Light
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl093c01Light final : public AATCharacterCpl093BaseLight
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl093c01Light">();
	}
	static class AATCharacterCpl093c01Light* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl093c01Light>();
	}
};
static_assert(alignof(AATCharacterCpl093c01Light) == 0x000010, "Wrong alignment on AATCharacterCpl093c01Light");
static_assert(sizeof(AATCharacterCpl093c01Light) == 0x001110, "Wrong size on AATCharacterCpl093c01Light");

// Class ATExt.ATCharacterCpl022
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl022 final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl022">();
	}
	static class AATCharacterCpl022* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl022>();
	}
};
static_assert(alignof(AATCharacterCpl022) == 0x000010, "Wrong alignment on AATCharacterCpl022");
static_assert(sizeof(AATCharacterCpl022) == 0x001110, "Wrong size on AATCharacterCpl022");

// Class ATExt.ATCharacterCpl023
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl023 final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl023">();
	}
	static class AATCharacterCpl023* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl023>();
	}
};
static_assert(alignof(AATCharacterCpl023) == 0x000010, "Wrong alignment on AATCharacterCpl023");
static_assert(sizeof(AATCharacterCpl023) == 0x001110, "Wrong size on AATCharacterCpl023");

// Class ATExt.ATCharacterCpl024
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl024 final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl024">();
	}
	static class AATCharacterCpl024* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl024>();
	}
};
static_assert(alignof(AATCharacterCpl024) == 0x000010, "Wrong alignment on AATCharacterCpl024");
static_assert(sizeof(AATCharacterCpl024) == 0x001110, "Wrong size on AATCharacterCpl024");

// Class ATExt.ATCharacterCpl079
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl079 final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl079">();
	}
	static class AATCharacterCpl079* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl079>();
	}
};
static_assert(alignof(AATCharacterCpl079) == 0x000010, "Wrong alignment on AATCharacterCpl079");
static_assert(sizeof(AATCharacterCpl079) == 0x001110, "Wrong size on AATCharacterCpl079");

// Class ATExt.ATCharacterCpl025
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl025 final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl025">();
	}
	static class AATCharacterCpl025* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl025>();
	}
};
static_assert(alignof(AATCharacterCpl025) == 0x000010, "Wrong alignment on AATCharacterCpl025");
static_assert(sizeof(AATCharacterCpl025) == 0x001110, "Wrong size on AATCharacterCpl025");

// Class ATExt.ATCharacterCpl096c01
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl096c01 final : public AATCharacterCpl096Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl096c01">();
	}
	static class AATCharacterCpl096c01* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl096c01>();
	}
};
static_assert(alignof(AATCharacterCpl096c01) == 0x000010, "Wrong alignment on AATCharacterCpl096c01");
static_assert(sizeof(AATCharacterCpl096c01) == 0x001110, "Wrong size on AATCharacterCpl096c01");

// Class ATExt.ATCharacterCpl027
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl027 : public AAT_CharacterPlayableBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl027">();
	}
	static class AATCharacterCpl027* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl027>();
	}
};
static_assert(alignof(AATCharacterCpl027) == 0x000010, "Wrong alignment on AATCharacterCpl027");
static_assert(sizeof(AATCharacterCpl027) == 0x001110, "Wrong size on AATCharacterCpl027");

// Class ATExt.ATGeneralBattleRootManager
// 0x0000 (0x03E8 - 0x03E8)
class AATGeneralBattleRootManager final : public AATEventBattleRootManagerBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATGeneralBattleRootManager">();
	}
	static class AATGeneralBattleRootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATGeneralBattleRootManager>();
	}
};
static_assert(alignof(AATGeneralBattleRootManager) == 0x000008, "Wrong alignment on AATGeneralBattleRootManager");
static_assert(sizeof(AATGeneralBattleRootManager) == 0x0003E8, "Wrong size on AATGeneralBattleRootManager");

// Class ATExt.ATCharacterCpl027B
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl027B final : public AATCharacterCpl027
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl027B">();
	}
	static class AATCharacterCpl027B* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl027B>();
	}
};
static_assert(alignof(AATCharacterCpl027B) == 0x000010, "Wrong alignment on AATCharacterCpl027B");
static_assert(sizeof(AATCharacterCpl027B) == 0x001110, "Wrong size on AATCharacterCpl027B");

// Class ATExt.ATCharacterCpl028Base
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl028Base : public AAT_CharacterPlayableBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl028Base">();
	}
	static class AATCharacterCpl028Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl028Base>();
	}
};
static_assert(alignof(AATCharacterCpl028Base) == 0x000010, "Wrong alignment on AATCharacterCpl028Base");
static_assert(sizeof(AATCharacterCpl028Base) == 0x001110, "Wrong size on AATCharacterCpl028Base");

// Class ATExt.ATCharacterCpl028A
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl028A : public AATCharacterCpl028Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl028A">();
	}
	static class AATCharacterCpl028A* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl028A>();
	}
};
static_assert(alignof(AATCharacterCpl028A) == 0x000010, "Wrong alignment on AATCharacterCpl028A");
static_assert(sizeof(AATCharacterCpl028A) == 0x001110, "Wrong size on AATCharacterCpl028A");

// Class ATExt.CFDMLogSwitchParameter
// 0x0000 (0x0058 - 0x0058)
class UCFDMLogSwitchParameter final : public UCFDebugMenuEventHandlerBool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CFDMLogSwitchParameter">();
	}
	static class UCFDMLogSwitchParameter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCFDMLogSwitchParameter>();
	}
};
static_assert(alignof(UCFDMLogSwitchParameter) == 0x000008, "Wrong alignment on UCFDMLogSwitchParameter");
static_assert(sizeof(UCFDMLogSwitchParameter) == 0x000058, "Wrong size on UCFDMLogSwitchParameter");

// Class ATExt.ATCharacterCpl028B
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl028B final : public AATCharacterCpl028Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl028B">();
	}
	static class AATCharacterCpl028B* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl028B>();
	}
};
static_assert(alignof(AATCharacterCpl028B) == 0x000010, "Wrong alignment on AATCharacterCpl028B");
static_assert(sizeof(AATCharacterCpl028B) == 0x001110, "Wrong size on AATCharacterCpl028B");

// Class ATExt.ATCharacterCpl028C
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl028C final : public AATCharacterCpl028Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl028C">();
	}
	static class AATCharacterCpl028C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl028C>();
	}
};
static_assert(alignof(AATCharacterCpl028C) == 0x000010, "Wrong alignment on AATCharacterCpl028C");
static_assert(sizeof(AATCharacterCpl028C) == 0x001110, "Wrong size on AATCharacterCpl028C");

// Class ATExt.ATCharacterCpl028D
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl028D final : public AATCharacterCpl028Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl028D">();
	}
	static class AATCharacterCpl028D* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl028D>();
	}
};
static_assert(alignof(AATCharacterCpl028D) == 0x000010, "Wrong alignment on AATCharacterCpl028D");
static_assert(sizeof(AATCharacterCpl028D) == 0x001110, "Wrong size on AATCharacterCpl028D");

// Class ATExt.ATCharacterCpl082c03Light
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl082c03Light final : public AATCharacterCpl082BaseLight
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl082c03Light">();
	}
	static class AATCharacterCpl082c03Light* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl082c03Light>();
	}
};
static_assert(alignof(AATCharacterCpl082c03Light) == 0x000010, "Wrong alignment on AATCharacterCpl082c03Light");
static_assert(sizeof(AATCharacterCpl082c03Light) == 0x001110, "Wrong size on AATCharacterCpl082c03Light");

// Class ATExt.ATCharacterCpl028E
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl028E final : public AATCharacterCpl028Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl028E">();
	}
	static class AATCharacterCpl028E* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl028E>();
	}
};
static_assert(alignof(AATCharacterCpl028E) == 0x000010, "Wrong alignment on AATCharacterCpl028E");
static_assert(sizeof(AATCharacterCpl028E) == 0x001110, "Wrong size on AATCharacterCpl028E");

// Class ATExt.ATCharacterCpl100A
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl100A final : public AAT_CharacterPlayableBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl100A">();
	}
	static class AATCharacterCpl100A* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl100A>();
	}
};
static_assert(alignof(AATCharacterCpl100A) == 0x000010, "Wrong alignment on AATCharacterCpl100A");
static_assert(sizeof(AATCharacterCpl100A) == 0x001110, "Wrong size on AATCharacterCpl100A");

// Class ATExt.ATCharacterCpl029
// 0x0020 (0x1130 - 0x1110)
class AATCharacterCpl029 final : public AAT_Character
{
public:
	class UParticleSystem*                        AbsorbEffect;                                      // 0x1110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                AbsorbEffectLocation;                              // 0x1118(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AbsorbLifeRate;                                    // 0x1124(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1128[0x8];                                     // 0x1128(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl029">();
	}
	static class AATCharacterCpl029* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl029>();
	}
};
static_assert(alignof(AATCharacterCpl029) == 0x000010, "Wrong alignment on AATCharacterCpl029");
static_assert(sizeof(AATCharacterCpl029) == 0x001130, "Wrong size on AATCharacterCpl029");
static_assert(offsetof(AATCharacterCpl029, AbsorbEffect) == 0x001110, "Member 'AATCharacterCpl029::AbsorbEffect' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl029, AbsorbEffectLocation) == 0x001118, "Member 'AATCharacterCpl029::AbsorbEffectLocation' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl029, AbsorbLifeRate) == 0x001124, "Member 'AATCharacterCpl029::AbsorbLifeRate' has a wrong offset!");

// Class ATExt.ATGroupBattleRootManager
// 0x01C0 (0x05A8 - 0x03E8)
class AATGroupBattleRootManager final : public AATEventBattleRootManagerBase
{
public:
	TArray<struct FMobArrangeParameter>           NearMobParameterTbl;                               // 0x03E8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<class FName>                           NearMobCharacters;                                 // 0x03F8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FMobArrangeParameter>           FarMobParameterTbl;                                // 0x0408(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<TSubclassOf<class AATGroupBattleMobReturn>> ReturnMobClasses;                                  // 0x0418(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)
	float                                         BattleFieldRadius;                                 // 0x0428(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bDisableBattleField;                               // 0x042C(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_42D[0x3];                                      // 0x042D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UATGroupBattleReinforceManager*         ReinforceManager;                                  // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AATGroupBattleMobNear*>          NearMobActors;                                     // 0x0438(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AATGroupBattleMobFar*>           FarMobActors;                                      // 0x0448(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class AActor*                                 ReturnMobActor;                                    // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AATGroupBattleSZCDirector*              SZCDirector;                                       // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ABattleBarrier*                         BattleFieldBarrier;                                // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_470[0x138];                                    // 0x0470(0x0138)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATGroupBattleRootManager">();
	}
	static class AATGroupBattleRootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATGroupBattleRootManager>();
	}
};
static_assert(alignof(AATGroupBattleRootManager) == 0x000008, "Wrong alignment on AATGroupBattleRootManager");
static_assert(sizeof(AATGroupBattleRootManager) == 0x0005A8, "Wrong size on AATGroupBattleRootManager");
static_assert(offsetof(AATGroupBattleRootManager, NearMobParameterTbl) == 0x0003E8, "Member 'AATGroupBattleRootManager::NearMobParameterTbl' has a wrong offset!");
static_assert(offsetof(AATGroupBattleRootManager, NearMobCharacters) == 0x0003F8, "Member 'AATGroupBattleRootManager::NearMobCharacters' has a wrong offset!");
static_assert(offsetof(AATGroupBattleRootManager, FarMobParameterTbl) == 0x000408, "Member 'AATGroupBattleRootManager::FarMobParameterTbl' has a wrong offset!");
static_assert(offsetof(AATGroupBattleRootManager, ReturnMobClasses) == 0x000418, "Member 'AATGroupBattleRootManager::ReturnMobClasses' has a wrong offset!");
static_assert(offsetof(AATGroupBattleRootManager, BattleFieldRadius) == 0x000428, "Member 'AATGroupBattleRootManager::BattleFieldRadius' has a wrong offset!");
static_assert(offsetof(AATGroupBattleRootManager, bDisableBattleField) == 0x00042C, "Member 'AATGroupBattleRootManager::bDisableBattleField' has a wrong offset!");
static_assert(offsetof(AATGroupBattleRootManager, ReinforceManager) == 0x000430, "Member 'AATGroupBattleRootManager::ReinforceManager' has a wrong offset!");
static_assert(offsetof(AATGroupBattleRootManager, NearMobActors) == 0x000438, "Member 'AATGroupBattleRootManager::NearMobActors' has a wrong offset!");
static_assert(offsetof(AATGroupBattleRootManager, FarMobActors) == 0x000448, "Member 'AATGroupBattleRootManager::FarMobActors' has a wrong offset!");
static_assert(offsetof(AATGroupBattleRootManager, ReturnMobActor) == 0x000458, "Member 'AATGroupBattleRootManager::ReturnMobActor' has a wrong offset!");
static_assert(offsetof(AATGroupBattleRootManager, SZCDirector) == 0x000460, "Member 'AATGroupBattleRootManager::SZCDirector' has a wrong offset!");
static_assert(offsetof(AATGroupBattleRootManager, BattleFieldBarrier) == 0x000468, "Member 'AATGroupBattleRootManager::BattleFieldBarrier' has a wrong offset!");

// Class ATExt.ATCharacterCpl030
// 0x0130 (0x1240 - 0x1110)
class AATCharacterCpl030 final : public AAT_Character
{
public:
	class UParticleSystem*                        ParticleAbsorbST_0;                                // 0x1110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                        ParticleAbsorbLP_0;                                // 0x1118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                        ParticleAbsorbST_1;                                // 0x1120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                        ParticleAbsorbLP_1;                                // 0x1128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                        ParticleAbsorbExec;                                // 0x1130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*               ParticleCompCameraAttachHitEffect;                 // 0x1138(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                BG_Color_IN;                                       // 0x1140(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                BG_Color_OUT;                                      // 0x114C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Main_Color_IN;                                     // 0x1158(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Main_Color_OUT;                                    // 0x1164(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Ring_Color_IN;                                     // 0x1170(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Ring_Color_OUT;                                    // 0x117C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Aura_Color_IN;                                     // 0x1188(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Aura_Color_OUT;                                    // 0x1194(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Aura_Alfa_IN;                                      // 0x11A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Aura_Alfa_OUT;                                     // 0x11A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AbsorbModeTime;                                    // 0x11A8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxDeleteWaitTime;                                 // 0x11AC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AbsorbRateLongRange;                               // 0x11B0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AbsorbLifeRate;                                    // 0x11B4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11B8[0x60];                                    // 0x11B8(0x0060)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               ParticleCompSTNow;                                 // 0x1218(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*               ParticleCompSTOld;                                 // 0x1220(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*               ParticleCompLPNow;                                 // 0x1228(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*               ParticleCompLPOld;                                 // 0x1230(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1238[0x8];                                     // 0x1238(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnChangeAction(class AAT_Character* InCharacter, int32 InActionIdPrev, int32 InActionIdNext);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl030">();
	}
	static class AATCharacterCpl030* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl030>();
	}
};
static_assert(alignof(AATCharacterCpl030) == 0x000010, "Wrong alignment on AATCharacterCpl030");
static_assert(sizeof(AATCharacterCpl030) == 0x001240, "Wrong size on AATCharacterCpl030");
static_assert(offsetof(AATCharacterCpl030, ParticleAbsorbST_0) == 0x001110, "Member 'AATCharacterCpl030::ParticleAbsorbST_0' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl030, ParticleAbsorbLP_0) == 0x001118, "Member 'AATCharacterCpl030::ParticleAbsorbLP_0' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl030, ParticleAbsorbST_1) == 0x001120, "Member 'AATCharacterCpl030::ParticleAbsorbST_1' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl030, ParticleAbsorbLP_1) == 0x001128, "Member 'AATCharacterCpl030::ParticleAbsorbLP_1' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl030, ParticleAbsorbExec) == 0x001130, "Member 'AATCharacterCpl030::ParticleAbsorbExec' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl030, ParticleCompCameraAttachHitEffect) == 0x001138, "Member 'AATCharacterCpl030::ParticleCompCameraAttachHitEffect' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl030, BG_Color_IN) == 0x001140, "Member 'AATCharacterCpl030::BG_Color_IN' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl030, BG_Color_OUT) == 0x00114C, "Member 'AATCharacterCpl030::BG_Color_OUT' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl030, Main_Color_IN) == 0x001158, "Member 'AATCharacterCpl030::Main_Color_IN' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl030, Main_Color_OUT) == 0x001164, "Member 'AATCharacterCpl030::Main_Color_OUT' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl030, Ring_Color_IN) == 0x001170, "Member 'AATCharacterCpl030::Ring_Color_IN' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl030, Ring_Color_OUT) == 0x00117C, "Member 'AATCharacterCpl030::Ring_Color_OUT' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl030, Aura_Color_IN) == 0x001188, "Member 'AATCharacterCpl030::Aura_Color_IN' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl030, Aura_Color_OUT) == 0x001194, "Member 'AATCharacterCpl030::Aura_Color_OUT' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl030, Aura_Alfa_IN) == 0x0011A0, "Member 'AATCharacterCpl030::Aura_Alfa_IN' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl030, Aura_Alfa_OUT) == 0x0011A4, "Member 'AATCharacterCpl030::Aura_Alfa_OUT' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl030, AbsorbModeTime) == 0x0011A8, "Member 'AATCharacterCpl030::AbsorbModeTime' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl030, MaxDeleteWaitTime) == 0x0011AC, "Member 'AATCharacterCpl030::MaxDeleteWaitTime' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl030, AbsorbRateLongRange) == 0x0011B0, "Member 'AATCharacterCpl030::AbsorbRateLongRange' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl030, AbsorbLifeRate) == 0x0011B4, "Member 'AATCharacterCpl030::AbsorbLifeRate' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl030, ParticleCompSTNow) == 0x001218, "Member 'AATCharacterCpl030::ParticleCompSTNow' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl030, ParticleCompSTOld) == 0x001220, "Member 'AATCharacterCpl030::ParticleCompSTOld' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl030, ParticleCompLPNow) == 0x001228, "Member 'AATCharacterCpl030::ParticleCompLPNow' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl030, ParticleCompLPOld) == 0x001230, "Member 'AATCharacterCpl030::ParticleCompLPOld' has a wrong offset!");

// Class ATExt.ATCharacterCpl031
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl031 final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl031">();
	}
	static class AATCharacterCpl031* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl031>();
	}
};
static_assert(alignof(AATCharacterCpl031) == 0x000010, "Wrong alignment on AATCharacterCpl031");
static_assert(sizeof(AATCharacterCpl031) == 0x001110, "Wrong size on AATCharacterCpl031");

// Class ATExt.ATCharacterCpl095
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl095 final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl095">();
	}
	static class AATCharacterCpl095* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl095>();
	}
};
static_assert(alignof(AATCharacterCpl095) == 0x000010, "Wrong alignment on AATCharacterCpl095");
static_assert(sizeof(AATCharacterCpl095) == 0x001110, "Wrong size on AATCharacterCpl095");

// Class ATExt.ATCharacterCpl031B
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl031B final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl031B">();
	}
	static class AATCharacterCpl031B* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl031B>();
	}
};
static_assert(alignof(AATCharacterCpl031B) == 0x000010, "Wrong alignment on AATCharacterCpl031B");
static_assert(sizeof(AATCharacterCpl031B) == 0x001110, "Wrong size on AATCharacterCpl031B");

// Class ATExt.ATCharacterCpl032
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl032 : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl032">();
	}
	static class AATCharacterCpl032* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl032>();
	}
};
static_assert(alignof(AATCharacterCpl032) == 0x000010, "Wrong alignment on AATCharacterCpl032");
static_assert(sizeof(AATCharacterCpl032) == 0x001110, "Wrong size on AATCharacterCpl032");

// Class ATExt.ATSceneFreeRoot
// 0x0008 (0x0048 - 0x0040)
class UATSceneFreeRoot : public UCFScene
{
public:
	uint8                                         Pad_40[0x8];                                       // 0x0040(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeRoot">();
	}
	static class UATSceneFreeRoot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeRoot>();
	}
};
static_assert(alignof(UATSceneFreeRoot) == 0x000008, "Wrong alignment on UATSceneFreeRoot");
static_assert(sizeof(UATSceneFreeRoot) == 0x000048, "Wrong size on UATSceneFreeRoot");

// Class ATExt.ATSceneFreeArea12
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea12 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea12">();
	}
	static class UATSceneFreeArea12* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea12>();
	}
};
static_assert(alignof(UATSceneFreeArea12) == 0x000008, "Wrong alignment on UATSceneFreeArea12");
static_assert(sizeof(UATSceneFreeArea12) == 0x000048, "Wrong size on UATSceneFreeArea12");

// Class ATExt.ATEventBattleB0600020MainPhase
// 0x0008 (0x0090 - 0x0088)
class UATEventBattleB0600020MainPhase final : public UATGeneralBattleMainPhase
{
public:
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleB0600020MainPhase">();
	}
	static class UATEventBattleB0600020MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATEventBattleB0600020MainPhase>();
	}
};
static_assert(alignof(UATEventBattleB0600020MainPhase) == 0x000008, "Wrong alignment on UATEventBattleB0600020MainPhase");
static_assert(sizeof(UATEventBattleB0600020MainPhase) == 0x000090, "Wrong size on UATEventBattleB0600020MainPhase");

// Class ATExt.ATCharacterCpl032B
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl032B final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl032B">();
	}
	static class AATCharacterCpl032B* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl032B>();
	}
};
static_assert(alignof(AATCharacterCpl032B) == 0x000010, "Wrong alignment on AATCharacterCpl032B");
static_assert(sizeof(AATCharacterCpl032B) == 0x001110, "Wrong size on AATCharacterCpl032B");

// Class ATExt.ATCharacterCpl034Base
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl034Base : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl034Base">();
	}
	static class AATCharacterCpl034Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl034Base>();
	}
};
static_assert(alignof(AATCharacterCpl034Base) == 0x000010, "Wrong alignment on AATCharacterCpl034Base");
static_assert(sizeof(AATCharacterCpl034Base) == 0x001110, "Wrong size on AATCharacterCpl034Base");

// Class ATExt.ATDataAssetTalkAnimAsyncLoad
// 0x0040 (0x0070 - 0x0030)
class UATDataAssetTalkAnimAsyncLoad final : public UATDataAssetAsyncLoad
{
public:
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLoadingTalkAnimAsset                  LoadingAsset;                                      // 0x0040(0x0028)(NativeAccessSpecifierPrivate)
	struct FReferenceToTalkAnimAssetInstance      Reference;                                         // 0x0068(0x0008)(NoDestructor, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATDataAssetTalkAnimAsyncLoad">();
	}
	static class UATDataAssetTalkAnimAsyncLoad* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATDataAssetTalkAnimAsyncLoad>();
	}
};
static_assert(alignof(UATDataAssetTalkAnimAsyncLoad) == 0x000008, "Wrong alignment on UATDataAssetTalkAnimAsyncLoad");
static_assert(sizeof(UATDataAssetTalkAnimAsyncLoad) == 0x000070, "Wrong size on UATDataAssetTalkAnimAsyncLoad");
static_assert(offsetof(UATDataAssetTalkAnimAsyncLoad, LoadingAsset) == 0x000040, "Member 'UATDataAssetTalkAnimAsyncLoad::LoadingAsset' has a wrong offset!");
static_assert(offsetof(UATDataAssetTalkAnimAsyncLoad, Reference) == 0x000068, "Member 'UATDataAssetTalkAnimAsyncLoad::Reference' has a wrong offset!");

// Class ATExt.ATCharacterCpl034A
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl034A final : public AATCharacterCpl034Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl034A">();
	}
	static class AATCharacterCpl034A* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl034A>();
	}
};
static_assert(alignof(AATCharacterCpl034A) == 0x000010, "Wrong alignment on AATCharacterCpl034A");
static_assert(sizeof(AATCharacterCpl034A) == 0x001110, "Wrong size on AATCharacterCpl034A");

// Class ATExt.DMBattleDraw_Decal_All
// 0x0000 (0x0058 - 0x0058)
class UDMBattleDraw_Decal_All final : public UDMBattleDraw_Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DMBattleDraw_Decal_All">();
	}
	static class UDMBattleDraw_Decal_All* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDMBattleDraw_Decal_All>();
	}
};
static_assert(alignof(UDMBattleDraw_Decal_All) == 0x000008, "Wrong alignment on UDMBattleDraw_Decal_All");
static_assert(sizeof(UDMBattleDraw_Decal_All) == 0x000058, "Wrong size on UDMBattleDraw_Decal_All");

// Class ATExt.ATCharacterCpl034B
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl034B final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl034B">();
	}
	static class AATCharacterCpl034B* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl034B>();
	}
};
static_assert(alignof(AATCharacterCpl034B) == 0x000010, "Wrong alignment on AATCharacterCpl034B");
static_assert(sizeof(AATCharacterCpl034B) == 0x001110, "Wrong size on AATCharacterCpl034B");

// Class ATExt.ATCharacterCpl034C
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl034C final : public AATCharacterCpl034Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl034C">();
	}
	static class AATCharacterCpl034C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl034C>();
	}
};
static_assert(alignof(AATCharacterCpl034C) == 0x000010, "Wrong alignment on AATCharacterCpl034C");
static_assert(sizeof(AATCharacterCpl034C) == 0x001110, "Wrong size on AATCharacterCpl034C");

// Class ATExt.ATCharacterCpl034F
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl034F final : public AATCharacterCpl034Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl034F">();
	}
	static class AATCharacterCpl034F* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl034F>();
	}
};
static_assert(alignof(AATCharacterCpl034F) == 0x000010, "Wrong alignment on AATCharacterCpl034F");
static_assert(sizeof(AATCharacterCpl034F) == 0x001110, "Wrong size on AATCharacterCpl034F");

// Class ATExt.ATCharacterCpl035
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl035 final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl035">();
	}
	static class AATCharacterCpl035* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl035>();
	}
};
static_assert(alignof(AATCharacterCpl035) == 0x000010, "Wrong alignment on AATCharacterCpl035");
static_assert(sizeof(AATCharacterCpl035) == 0x001110, "Wrong size on AATCharacterCpl035");

// Class ATExt.ATSceneFreeArea11
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea11 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea11">();
	}
	static class UATSceneFreeArea11* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea11>();
	}
};
static_assert(alignof(UATSceneFreeArea11) == 0x000008, "Wrong alignment on UATSceneFreeArea11");
static_assert(sizeof(UATSceneFreeArea11) == 0x000048, "Wrong size on UATSceneFreeArea11");

// Class ATExt.ATCharacterCpl036
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl036 final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl036">();
	}
	static class AATCharacterCpl036* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl036>();
	}
};
static_assert(alignof(AATCharacterCpl036) == 0x000010, "Wrong alignment on AATCharacterCpl036");
static_assert(sizeof(AATCharacterCpl036) == 0x001110, "Wrong size on AATCharacterCpl036");

// Class ATExt.ATSceneFreeArea20
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea20 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea20">();
	}
	static class UATSceneFreeArea20* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea20>();
	}
};
static_assert(alignof(UATSceneFreeArea20) == 0x000008, "Wrong alignment on UATSceneFreeArea20");
static_assert(sizeof(UATSceneFreeArea20) == 0x000048, "Wrong size on UATSceneFreeArea20");

// Class ATExt.ATEventBattleB0600030BSetupPhase
// 0x0000 (0x01D0 - 0x01D0)
class UATEventBattleB0600030BSetupPhase final : public UATGeneralBattleSetUpPhase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleB0600030BSetupPhase">();
	}
	static class UATEventBattleB0600030BSetupPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATEventBattleB0600030BSetupPhase>();
	}
};
static_assert(alignof(UATEventBattleB0600030BSetupPhase) == 0x000008, "Wrong alignment on UATEventBattleB0600030BSetupPhase");
static_assert(sizeof(UATEventBattleB0600030BSetupPhase) == 0x0001D0, "Wrong size on UATEventBattleB0600030BSetupPhase");

// Class ATExt.ATCharacterCpl036B
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl036B final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl036B">();
	}
	static class AATCharacterCpl036B* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl036B>();
	}
};
static_assert(alignof(AATCharacterCpl036B) == 0x000010, "Wrong alignment on AATCharacterCpl036B");
static_assert(sizeof(AATCharacterCpl036B) == 0x001110, "Wrong size on AATCharacterCpl036B");

// Class ATExt.ATCharacterCpl037A
// 0x0020 (0x1130 - 0x1110)
class AATCharacterCpl037A final : public AAT_Character
{
public:
	class UParticleSystem*                        DisappearParticle;                                 // 0x1110(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAT037ARequestActionComponent*          RequestActionComponent;                            // 0x1118(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1120[0x10];                                    // 0x1120(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl037A">();
	}
	static class AATCharacterCpl037A* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl037A>();
	}
};
static_assert(alignof(AATCharacterCpl037A) == 0x000010, "Wrong alignment on AATCharacterCpl037A");
static_assert(sizeof(AATCharacterCpl037A) == 0x001130, "Wrong size on AATCharacterCpl037A");
static_assert(offsetof(AATCharacterCpl037A, DisappearParticle) == 0x001110, "Member 'AATCharacterCpl037A::DisappearParticle' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl037A, RequestActionComponent) == 0x001118, "Member 'AATCharacterCpl037A::RequestActionComponent' has a wrong offset!");

// Class ATExt.ATCharacterCpl038
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl038 final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl038">();
	}
	static class AATCharacterCpl038* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl038>();
	}
};
static_assert(alignof(AATCharacterCpl038) == 0x000010, "Wrong alignment on AATCharacterCpl038");
static_assert(sizeof(AATCharacterCpl038) == 0x001110, "Wrong size on AATCharacterCpl038");

// Class ATExt.ATCharacterCpl103E
// 0x0000 (0x1190 - 0x1190)
class AATCharacterCpl103E final : public AATCharacterCpl103Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl103E">();
	}
	static class AATCharacterCpl103E* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl103E>();
	}
};
static_assert(alignof(AATCharacterCpl103E) == 0x000010, "Wrong alignment on AATCharacterCpl103E");
static_assert(sizeof(AATCharacterCpl103E) == 0x001190, "Wrong size on AATCharacterCpl103E");

// Class ATExt.ATCharacterCpl038B
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl038B final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl038B">();
	}
	static class AATCharacterCpl038B* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl038B>();
	}
};
static_assert(alignof(AATCharacterCpl038B) == 0x000010, "Wrong alignment on AATCharacterCpl038B");
static_assert(sizeof(AATCharacterCpl038B) == 0x001110, "Wrong size on AATCharacterCpl038B");

// Class ATExt.ATCharacterCpl039
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl039 final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl039">();
	}
	static class AATCharacterCpl039* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl039>();
	}
};
static_assert(alignof(AATCharacterCpl039) == 0x000010, "Wrong alignment on AATCharacterCpl039");
static_assert(sizeof(AATCharacterCpl039) == 0x001110, "Wrong size on AATCharacterCpl039");

// Class ATExt.ATCharacterCpl040
// 0x0070 (0x1180 - 0x1110)
class AATCharacterCpl040 final : public AAT_Character
{
public:
	class UParticleSystem*                        AbsorbEffect;                                      // 0x1110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                AbsorbEffectLocation;                              // 0x1118(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AbsorbLifeRate;                                    // 0x1124(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1128[0x58];                                    // 0x1128(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnChangeAction(class AAT_Character* InCharacter, int32 InActionIdPrev, int32 InActionIdNext);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl040">();
	}
	static class AATCharacterCpl040* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl040>();
	}
};
static_assert(alignof(AATCharacterCpl040) == 0x000010, "Wrong alignment on AATCharacterCpl040");
static_assert(sizeof(AATCharacterCpl040) == 0x001180, "Wrong size on AATCharacterCpl040");
static_assert(offsetof(AATCharacterCpl040, AbsorbEffect) == 0x001110, "Member 'AATCharacterCpl040::AbsorbEffect' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl040, AbsorbEffectLocation) == 0x001118, "Member 'AATCharacterCpl040::AbsorbEffectLocation' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl040, AbsorbLifeRate) == 0x001124, "Member 'AATCharacterCpl040::AbsorbLifeRate' has a wrong offset!");

// Class ATExt.DMBattleDraw_Stage_Etc
// 0x0000 (0x0058 - 0x0058)
class UDMBattleDraw_Stage_Etc final : public UDMBattleDraw_Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DMBattleDraw_Stage_Etc">();
	}
	static class UDMBattleDraw_Stage_Etc* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDMBattleDraw_Stage_Etc>();
	}
};
static_assert(alignof(UDMBattleDraw_Stage_Etc) == 0x000008, "Wrong alignment on UDMBattleDraw_Stage_Etc");
static_assert(sizeof(UDMBattleDraw_Stage_Etc) == 0x000058, "Wrong size on UDMBattleDraw_Stage_Etc");

// Class ATExt.ATCharacterCpl041Base
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl041Base : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl041Base">();
	}
	static class AATCharacterCpl041Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl041Base>();
	}
};
static_assert(alignof(AATCharacterCpl041Base) == 0x000010, "Wrong alignment on AATCharacterCpl041Base");
static_assert(sizeof(AATCharacterCpl041Base) == 0x001110, "Wrong size on AATCharacterCpl041Base");

// Class ATExt.ATSceneFreeArea19
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea19 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea19">();
	}
	static class UATSceneFreeArea19* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea19>();
	}
};
static_assert(alignof(UATSceneFreeArea19) == 0x000008, "Wrong alignment on UATSceneFreeArea19");
static_assert(sizeof(UATSceneFreeArea19) == 0x000048, "Wrong size on UATSceneFreeArea19");

// Class ATExt.ATCharacterCpl041A
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl041A final : public AATCharacterCpl041Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl041A">();
	}
	static class AATCharacterCpl041A* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl041A>();
	}
};
static_assert(alignof(AATCharacterCpl041A) == 0x000010, "Wrong alignment on AATCharacterCpl041A");
static_assert(sizeof(AATCharacterCpl041A) == 0x001110, "Wrong size on AATCharacterCpl041A");

// Class ATExt.ATSceneFreeArea28
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea28 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea28">();
	}
	static class UATSceneFreeArea28* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea28>();
	}
};
static_assert(alignof(UATSceneFreeArea28) == 0x000008, "Wrong alignment on UATSceneFreeArea28");
static_assert(sizeof(UATSceneFreeArea28) == 0x000048, "Wrong size on UATSceneFreeArea28");

// Class ATExt.ATEventBattleMobActor
// 0x0000 (0x0338 - 0x0338)
class AATEventBattleMobActor final : public AActor
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleMobActor">();
	}
	static class AATEventBattleMobActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATEventBattleMobActor>();
	}
};
static_assert(alignof(AATEventBattleMobActor) == 0x000008, "Wrong alignment on AATEventBattleMobActor");
static_assert(sizeof(AATEventBattleMobActor) == 0x000338, "Wrong size on AATEventBattleMobActor");

// Class ATExt.ATCharacterCpl041B
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl041B final : public AATCharacterCpl041Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl041B">();
	}
	static class AATCharacterCpl041B* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl041B>();
	}
};
static_assert(alignof(AATCharacterCpl041B) == 0x000010, "Wrong alignment on AATCharacterCpl041B");
static_assert(sizeof(AATCharacterCpl041B) == 0x001110, "Wrong size on AATCharacterCpl041B");

// Class ATExt.ATSceneFreeArea10
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea10 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea10">();
	}
	static class UATSceneFreeArea10* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea10>();
	}
};
static_assert(alignof(UATSceneFreeArea10) == 0x000008, "Wrong alignment on UATSceneFreeArea10");
static_assert(sizeof(UATSceneFreeArea10) == 0x000048, "Wrong size on UATSceneFreeArea10");

// Class ATExt.ATCharacterCpl041C
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl041C final : public AATCharacterCpl041Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl041C">();
	}
	static class AATCharacterCpl041C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl041C>();
	}
};
static_assert(alignof(AATCharacterCpl041C) == 0x000010, "Wrong alignment on AATCharacterCpl041C");
static_assert(sizeof(AATCharacterCpl041C) == 0x001110, "Wrong size on AATCharacterCpl041C");

// Class ATExt.ATTournamentBattleMainPhase
// 0x0008 (0x0090 - 0x0088)
class UATTournamentBattleMainPhase : public UATGeneralBattleMainPhase
{
public:
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATTournamentBattleMainPhase">();
	}
	static class UATTournamentBattleMainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATTournamentBattleMainPhase>();
	}
};
static_assert(alignof(UATTournamentBattleMainPhase) == 0x000008, "Wrong alignment on UATTournamentBattleMainPhase");
static_assert(sizeof(UATTournamentBattleMainPhase) == 0x000090, "Wrong size on UATTournamentBattleMainPhase");

// Class ATExt.ATCharacterCpl041E
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl041E final : public AATCharacterCpl041Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl041E">();
	}
	static class AATCharacterCpl041E* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl041E>();
	}
};
static_assert(alignof(AATCharacterCpl041E) == 0x000010, "Wrong alignment on AATCharacterCpl041E");
static_assert(sizeof(AATCharacterCpl041E) == 0x001110, "Wrong size on AATCharacterCpl041E");

// Class ATExt.ATCommunityManager
// 0x0158 (0x0258 - 0x0100)
class UATCommunityManager final : public UActorComponent
{
public:
	uint8                                         Pad_100[0x10];                                     // 0x0100(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FSoulEmTableInfo>    SoulEmInsMap;                                      // 0x0110(0x0050)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<int32, class FName>                      SoulEmSaveNoToInsMap;                              // 0x0160(0x0050)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UATSoulEmblem*>                  SoulEmList;                                        // 0x01B0(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UATCommunityBoard*                      CommunityBoradIns[0x7];                            // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UATCommunitySkillZFighters*             CommSkillZFighters;                                // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UATCommunitySkillCooking*               CommSkillCooking;                                  // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UATCommunitySkillTraining*              CommSkillTraining;                                 // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UATCommunitySkillDevelop*               CommSkillDevelop;                                  // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UATCommunitySkillGods*                  CommSkillGods;                                     // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UATCommunitySkillAdult*                 CommSkillAdult;                                    // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UATCommunitySkillAdventure*             CommSkillAdventure;                                // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UATLinkBonus*                           LinkBonusIns;                                      // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_238[0x20];                                     // 0x0238(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CTExec(int32 InTestCase, class FName TestId);
	void OnAutoSaveData();
	void OnLoadData(bool bIsSuccess);
	void OnSaveData();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCommunityManager">();
	}
	static class UATCommunityManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATCommunityManager>();
	}
};
static_assert(alignof(UATCommunityManager) == 0x000008, "Wrong alignment on UATCommunityManager");
static_assert(sizeof(UATCommunityManager) == 0x000258, "Wrong size on UATCommunityManager");
static_assert(offsetof(UATCommunityManager, SoulEmInsMap) == 0x000110, "Member 'UATCommunityManager::SoulEmInsMap' has a wrong offset!");
static_assert(offsetof(UATCommunityManager, SoulEmSaveNoToInsMap) == 0x000160, "Member 'UATCommunityManager::SoulEmSaveNoToInsMap' has a wrong offset!");
static_assert(offsetof(UATCommunityManager, SoulEmList) == 0x0001B0, "Member 'UATCommunityManager::SoulEmList' has a wrong offset!");
static_assert(offsetof(UATCommunityManager, CommunityBoradIns) == 0x0001C0, "Member 'UATCommunityManager::CommunityBoradIns' has a wrong offset!");
static_assert(offsetof(UATCommunityManager, CommSkillZFighters) == 0x0001F8, "Member 'UATCommunityManager::CommSkillZFighters' has a wrong offset!");
static_assert(offsetof(UATCommunityManager, CommSkillCooking) == 0x000200, "Member 'UATCommunityManager::CommSkillCooking' has a wrong offset!");
static_assert(offsetof(UATCommunityManager, CommSkillTraining) == 0x000208, "Member 'UATCommunityManager::CommSkillTraining' has a wrong offset!");
static_assert(offsetof(UATCommunityManager, CommSkillDevelop) == 0x000210, "Member 'UATCommunityManager::CommSkillDevelop' has a wrong offset!");
static_assert(offsetof(UATCommunityManager, CommSkillGods) == 0x000218, "Member 'UATCommunityManager::CommSkillGods' has a wrong offset!");
static_assert(offsetof(UATCommunityManager, CommSkillAdult) == 0x000220, "Member 'UATCommunityManager::CommSkillAdult' has a wrong offset!");
static_assert(offsetof(UATCommunityManager, CommSkillAdventure) == 0x000228, "Member 'UATCommunityManager::CommSkillAdventure' has a wrong offset!");
static_assert(offsetof(UATCommunityManager, LinkBonusIns) == 0x000230, "Member 'UATCommunityManager::LinkBonusIns' has a wrong offset!");

// Class ATExt.ATCharacterCpl042
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl042 final : public AAT_CharacterPlayableBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl042">();
	}
	static class AATCharacterCpl042* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl042>();
	}
};
static_assert(alignof(AATCharacterCpl042) == 0x000010, "Wrong alignment on AATCharacterCpl042");
static_assert(sizeof(AATCharacterCpl042) == 0x001110, "Wrong size on AATCharacterCpl042");

// Class ATExt.ATCharacterCpl043
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl043 final : public AAT_CharacterPlayableBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl043">();
	}
	static class AATCharacterCpl043* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl043>();
	}
};
static_assert(alignof(AATCharacterCpl043) == 0x000010, "Wrong alignment on AATCharacterCpl043");
static_assert(sizeof(AATCharacterCpl043) == 0x001110, "Wrong size on AATCharacterCpl043");

// Class ATExt.ATCharacterCpl056Base
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl056Base : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl056Base">();
	}
	static class AATCharacterCpl056Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl056Base>();
	}
};
static_assert(alignof(AATCharacterCpl056Base) == 0x000010, "Wrong alignment on AATCharacterCpl056Base");
static_assert(sizeof(AATCharacterCpl056Base) == 0x001110, "Wrong size on AATCharacterCpl056Base");

// Class ATExt.DMBoolInfinityItem
// 0x0000 (0x0058 - 0x0058)
class UDMBoolInfinityItem final : public UCFDebugMenuEventHandlerBool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DMBoolInfinityItem">();
	}
	static class UDMBoolInfinityItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDMBoolInfinityItem>();
	}
};
static_assert(alignof(UDMBoolInfinityItem) == 0x000008, "Wrong alignment on UDMBoolInfinityItem");
static_assert(sizeof(UDMBoolInfinityItem) == 0x000058, "Wrong size on UDMBoolInfinityItem");

// Class ATExt.ATCharacterCpl056c01
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl056c01 final : public AATCharacterCpl056Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl056c01">();
	}
	static class AATCharacterCpl056c01* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl056c01>();
	}
};
static_assert(alignof(AATCharacterCpl056c01) == 0x000010, "Wrong alignment on AATCharacterCpl056c01");
static_assert(sizeof(AATCharacterCpl056c01) == 0x001110, "Wrong size on AATCharacterCpl056c01");

// Class ATExt.ATSceneFreeArea27
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea27 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea27">();
	}
	static class UATSceneFreeArea27* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea27>();
	}
};
static_assert(alignof(UATSceneFreeArea27) == 0x000008, "Wrong alignment on UATSceneFreeArea27");
static_assert(sizeof(UATSceneFreeArea27) == 0x000048, "Wrong size on UATSceneFreeArea27");

// Class ATExt.DMChangePlayerControllerToAI
// 0x0000 (0x0038 - 0x0038)
class UDMChangePlayerControllerToAI final : public UCFDebugMenuEventHandlerTrigger
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DMChangePlayerControllerToAI">();
	}
	static class UDMChangePlayerControllerToAI* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDMChangePlayerControllerToAI>();
	}
};
static_assert(alignof(UDMChangePlayerControllerToAI) == 0x000008, "Wrong alignment on UDMChangePlayerControllerToAI");
static_assert(sizeof(UDMChangePlayerControllerToAI) == 0x000038, "Wrong size on UDMChangePlayerControllerToAI");

// Class ATExt.ATSceneFreeArea38
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea38 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea38">();
	}
	static class UATSceneFreeArea38* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea38>();
	}
};
static_assert(alignof(UATSceneFreeArea38) == 0x000008, "Wrong alignment on UATSceneFreeArea38");
static_assert(sizeof(UATSceneFreeArea38) == 0x000048, "Wrong size on UATSceneFreeArea38");

// Class ATExt.ATCharacterCpl056c02
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl056c02 final : public AATCharacterCpl056Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl056c02">();
	}
	static class AATCharacterCpl056c02* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl056c02>();
	}
};
static_assert(alignof(AATCharacterCpl056c02) == 0x000010, "Wrong alignment on AATCharacterCpl056c02");
static_assert(sizeof(AATCharacterCpl056c02) == 0x001110, "Wrong size on AATCharacterCpl056c02");

// Class ATExt.ATSceneFreeArea09
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea09 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea09">();
	}
	static class UATSceneFreeArea09* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea09>();
	}
};
static_assert(alignof(UATSceneFreeArea09) == 0x000008, "Wrong alignment on UATSceneFreeArea09");
static_assert(sizeof(UATSceneFreeArea09) == 0x000048, "Wrong size on UATSceneFreeArea09");

// Class ATExt.ATCharacterCpl056c03
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl056c03 final : public AATCharacterCpl056Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl056c03">();
	}
	static class AATCharacterCpl056c03* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl056c03>();
	}
};
static_assert(alignof(AATCharacterCpl056c03) == 0x000010, "Wrong alignment on AATCharacterCpl056c03");
static_assert(sizeof(AATCharacterCpl056c03) == 0x001110, "Wrong size on AATCharacterCpl056c03");

// Class ATExt.ATSceneFreeArea18
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea18 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea18">();
	}
	static class UATSceneFreeArea18* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea18>();
	}
};
static_assert(alignof(UATSceneFreeArea18) == 0x000008, "Wrong alignment on UATSceneFreeArea18");
static_assert(sizeof(UATSceneFreeArea18) == 0x000048, "Wrong size on UATSceneFreeArea18");

// Class ATExt.ATCharacterCpl056GroundBase
// 0x0020 (0x1130 - 0x1110)
class AATCharacterCpl056GroundBase final : public AATCharacterCpl056Base
{
public:
	float                                         FallMeshOffset;                                    // 0x1110(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1114[0x1C];                                    // 0x1114(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl056GroundBase">();
	}
	static class AATCharacterCpl056GroundBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl056GroundBase>();
	}
};
static_assert(alignof(AATCharacterCpl056GroundBase) == 0x000010, "Wrong alignment on AATCharacterCpl056GroundBase");
static_assert(sizeof(AATCharacterCpl056GroundBase) == 0x001130, "Wrong size on AATCharacterCpl056GroundBase");
static_assert(offsetof(AATCharacterCpl056GroundBase, FallMeshOffset) == 0x001110, "Member 'AATCharacterCpl056GroundBase::FallMeshOffset' has a wrong offset!");

// Class ATExt.ATEventBattleB0600010BMainPhase01
// 0x0020 (0x00B0 - 0x0090)
class UATEventBattleB0600010BMainPhase01 final : public UATTournamentBattleMainPhase
{
public:
	uint8                                         Pad_90[0x20];                                      // 0x0090(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleB0600010BMainPhase01">();
	}
	static class UATEventBattleB0600010BMainPhase01* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATEventBattleB0600010BMainPhase01>();
	}
};
static_assert(alignof(UATEventBattleB0600010BMainPhase01) == 0x000008, "Wrong alignment on UATEventBattleB0600010BMainPhase01");
static_assert(sizeof(UATEventBattleB0600010BMainPhase01) == 0x0000B0, "Wrong size on UATEventBattleB0600010BMainPhase01");

// Class ATExt.ATCharacterCpl057Base
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl057Base : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl057Base">();
	}
	static class AATCharacterCpl057Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl057Base>();
	}
};
static_assert(alignof(AATCharacterCpl057Base) == 0x000010, "Wrong alignment on AATCharacterCpl057Base");
static_assert(sizeof(AATCharacterCpl057Base) == 0x001110, "Wrong size on AATCharacterCpl057Base");

// Class ATExt.ATCommunitySkillAdventure
// 0x0010 (0x0070 - 0x0060)
class UATCommunitySkillAdventure final : public UATCommunitySkillBase
{
public:
	uint8                                         Pad_60[0x10];                                      // 0x0060(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCommunitySkillAdventure">();
	}
	static class UATCommunitySkillAdventure* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATCommunitySkillAdventure>();
	}
};
static_assert(alignof(UATCommunitySkillAdventure) == 0x000008, "Wrong alignment on UATCommunitySkillAdventure");
static_assert(sizeof(UATCommunitySkillAdventure) == 0x000070, "Wrong size on UATCommunitySkillAdventure");

// Class ATExt.ATCharacterCpl057c01
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl057c01 final : public AATCharacterCpl057Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl057c01">();
	}
	static class AATCharacterCpl057c01* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl057c01>();
	}
};
static_assert(alignof(AATCharacterCpl057c01) == 0x000010, "Wrong alignment on AATCharacterCpl057c01");
static_assert(sizeof(AATCharacterCpl057c01) == 0x001110, "Wrong size on AATCharacterCpl057c01");

// Class ATExt.ATCharacterCpl057c02
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl057c02 final : public AATCharacterCpl057Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl057c02">();
	}
	static class AATCharacterCpl057c02* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl057c02>();
	}
};
static_assert(alignof(AATCharacterCpl057c02) == 0x000010, "Wrong alignment on AATCharacterCpl057c02");
static_assert(sizeof(AATCharacterCpl057c02) == 0x001110, "Wrong size on AATCharacterCpl057c02");

// Class ATExt.ATCharacterCpl057c03
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl057c03 final : public AATCharacterCpl057Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl057c03">();
	}
	static class AATCharacterCpl057c03* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl057c03>();
	}
};
static_assert(alignof(AATCharacterCpl057c03) == 0x000010, "Wrong alignment on AATCharacterCpl057c03");
static_assert(sizeof(AATCharacterCpl057c03) == 0x001110, "Wrong size on AATCharacterCpl057c03");

// Class ATExt.ATCharacterCpl107A
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl107A final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl107A">();
	}
	static class AATCharacterCpl107A* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl107A>();
	}
};
static_assert(alignof(AATCharacterCpl107A) == 0x000010, "Wrong alignment on AATCharacterCpl107A");
static_assert(sizeof(AATCharacterCpl107A) == 0x001110, "Wrong size on AATCharacterCpl107A");

// Class ATExt.ATSceneFreeArea37
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea37 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea37">();
	}
	static class UATSceneFreeArea37* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea37>();
	}
};
static_assert(alignof(UATSceneFreeArea37) == 0x000008, "Wrong alignment on UATSceneFreeArea37");
static_assert(sizeof(UATSceneFreeArea37) == 0x000048, "Wrong size on UATSceneFreeArea37");

// Class ATExt.ATCharacterCpl058Base
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl058Base : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl058Base">();
	}
	static class AATCharacterCpl058Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl058Base>();
	}
};
static_assert(alignof(AATCharacterCpl058Base) == 0x000010, "Wrong alignment on AATCharacterCpl058Base");
static_assert(sizeof(AATCharacterCpl058Base) == 0x001110, "Wrong size on AATCharacterCpl058Base");

// Class ATExt.ATCommunitySkillTraining
// 0x0008 (0x0068 - 0x0060)
class UATCommunitySkillTraining final : public UATCommunitySkillBase
{
public:
	uint8                                         Pad_60[0x8];                                       // 0x0060(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCommunitySkillTraining">();
	}
	static class UATCommunitySkillTraining* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATCommunitySkillTraining>();
	}
};
static_assert(alignof(UATCommunitySkillTraining) == 0x000008, "Wrong alignment on UATCommunitySkillTraining");
static_assert(sizeof(UATCommunitySkillTraining) == 0x000068, "Wrong size on UATCommunitySkillTraining");

// Class ATExt.ATCharacterCpl058c01
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl058c01 final : public AATCharacterCpl058Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl058c01">();
	}
	static class AATCharacterCpl058c01* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl058c01>();
	}
};
static_assert(alignof(AATCharacterCpl058c01) == 0x000010, "Wrong alignment on AATCharacterCpl058c01");
static_assert(sizeof(AATCharacterCpl058c01) == 0x001110, "Wrong size on AATCharacterCpl058c01");

// Class ATExt.ATCharacterCpl058c02
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl058c02 final : public AATCharacterCpl058Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl058c02">();
	}
	static class AATCharacterCpl058c02* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl058c02>();
	}
};
static_assert(alignof(AATCharacterCpl058c02) == 0x000010, "Wrong alignment on AATCharacterCpl058c02");
static_assert(sizeof(AATCharacterCpl058c02) == 0x001110, "Wrong size on AATCharacterCpl058c02");

// Class ATExt.ATCharacterCpl058c03
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl058c03 final : public AATCharacterCpl058Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl058c03">();
	}
	static class AATCharacterCpl058c03* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl058c03>();
	}
};
static_assert(alignof(AATCharacterCpl058c03) == 0x000010, "Wrong alignment on AATCharacterCpl058c03");
static_assert(sizeof(AATCharacterCpl058c03) == 0x001110, "Wrong size on AATCharacterCpl058c03");

// Class ATExt.DMBattleDraw_Skill_Single
// 0x0008 (0x0060 - 0x0058)
class UDMBattleDraw_Skill_Single final : public UDMBattleDraw_Base
{
public:
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DMBattleDraw_Skill_Single">();
	}
	static class UDMBattleDraw_Skill_Single* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDMBattleDraw_Skill_Single>();
	}
};
static_assert(alignof(UDMBattleDraw_Skill_Single) == 0x000008, "Wrong alignment on UDMBattleDraw_Skill_Single");
static_assert(sizeof(UDMBattleDraw_Skill_Single) == 0x000060, "Wrong size on UDMBattleDraw_Skill_Single");

// Class ATExt.ATCharacterCpl058c04
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl058c04 final : public AATCharacterCpl058Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl058c04">();
	}
	static class AATCharacterCpl058c04* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl058c04>();
	}
};
static_assert(alignof(AATCharacterCpl058c04) == 0x000010, "Wrong alignment on AATCharacterCpl058c04");
static_assert(sizeof(AATCharacterCpl058c04) == 0x001110, "Wrong size on AATCharacterCpl058c04");

// Class ATExt.ATCharacterCpl092Base
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl092Base : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl092Base">();
	}
	static class AATCharacterCpl092Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl092Base>();
	}
};
static_assert(alignof(AATCharacterCpl092Base) == 0x000010, "Wrong alignment on AATCharacterCpl092Base");
static_assert(sizeof(AATCharacterCpl092Base) == 0x001110, "Wrong size on AATCharacterCpl092Base");

// Class ATExt.ATCharacterCpl092c01
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl092c01 final : public AATCharacterCpl092Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl092c01">();
	}
	static class AATCharacterCpl092c01* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl092c01>();
	}
};
static_assert(alignof(AATCharacterCpl092c01) == 0x000010, "Wrong alignment on AATCharacterCpl092c01");
static_assert(sizeof(AATCharacterCpl092c01) == 0x001110, "Wrong size on AATCharacterCpl092c01");

// Class ATExt.ATCharacterCpl058c05
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl058c05 final : public AATCharacterCpl058Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl058c05">();
	}
	static class AATCharacterCpl058c05* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl058c05>();
	}
};
static_assert(alignof(AATCharacterCpl058c05) == 0x000010, "Wrong alignment on AATCharacterCpl058c05");
static_assert(sizeof(AATCharacterCpl058c05) == 0x001110, "Wrong size on AATCharacterCpl058c05");

// Class ATExt.ATCharacterCpl058c06
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl058c06 final : public AATCharacterCpl058Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl058c06">();
	}
	static class AATCharacterCpl058c06* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl058c06>();
	}
};
static_assert(alignof(AATCharacterCpl058c06) == 0x000010, "Wrong alignment on AATCharacterCpl058c06");
static_assert(sizeof(AATCharacterCpl058c06) == 0x001110, "Wrong size on AATCharacterCpl058c06");

// Class ATExt.ATCharacterCpl059Base
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl059Base : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl059Base">();
	}
	static class AATCharacterCpl059Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl059Base>();
	}
};
static_assert(alignof(AATCharacterCpl059Base) == 0x000010, "Wrong alignment on AATCharacterCpl059Base");
static_assert(sizeof(AATCharacterCpl059Base) == 0x001110, "Wrong size on AATCharacterCpl059Base");

// Class ATExt.ATCharacterCpl083c01
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl083c01 final : public AATCharacterCpl083Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl083c01">();
	}
	static class AATCharacterCpl083c01* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl083c01>();
	}
};
static_assert(alignof(AATCharacterCpl083c01) == 0x000010, "Wrong alignment on AATCharacterCpl083c01");
static_assert(sizeof(AATCharacterCpl083c01) == 0x001110, "Wrong size on AATCharacterCpl083c01");

// Class ATExt.ATCharacterCpl059c01
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl059c01 : public AATCharacterCpl059Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl059c01">();
	}
	static class AATCharacterCpl059c01* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl059c01>();
	}
};
static_assert(alignof(AATCharacterCpl059c01) == 0x000010, "Wrong alignment on AATCharacterCpl059c01");
static_assert(sizeof(AATCharacterCpl059c01) == 0x001110, "Wrong size on AATCharacterCpl059c01");

// Class ATExt.ATDataAssetTalkAnimation
// 0x0010 (0x0040 - 0x0030)
class UATDataAssetTalkAnimation final : public UATDataAssetBase
{
public:
	TArray<struct FATDataAssetTalkAnimationInfo>  AssetInfo;                                         // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATDataAssetTalkAnimation">();
	}
	static class UATDataAssetTalkAnimation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATDataAssetTalkAnimation>();
	}
};
static_assert(alignof(UATDataAssetTalkAnimation) == 0x000008, "Wrong alignment on UATDataAssetTalkAnimation");
static_assert(sizeof(UATDataAssetTalkAnimation) == 0x000040, "Wrong size on UATDataAssetTalkAnimation");
static_assert(offsetof(UATDataAssetTalkAnimation, AssetInfo) == 0x000030, "Member 'UATDataAssetTalkAnimation::AssetInfo' has a wrong offset!");

// Class ATExt.ATCharacterCpl059c02
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl059c02 : public AATCharacterCpl059Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl059c02">();
	}
	static class AATCharacterCpl059c02* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl059c02>();
	}
};
static_assert(alignof(AATCharacterCpl059c02) == 0x000010, "Wrong alignment on AATCharacterCpl059c02");
static_assert(sizeof(AATCharacterCpl059c02) == 0x001110, "Wrong size on AATCharacterCpl059c02");

// Class ATExt.ATCharacterCpl059c03
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl059c03 : public AATCharacterCpl059Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl059c03">();
	}
	static class AATCharacterCpl059c03* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl059c03>();
	}
};
static_assert(alignof(AATCharacterCpl059c03) == 0x000010, "Wrong alignment on AATCharacterCpl059c03");
static_assert(sizeof(AATCharacterCpl059c03) == 0x001110, "Wrong size on AATCharacterCpl059c03");

// Class ATExt.ATCharacterCpl059c04
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl059c04 final : public AATCharacterCpl059Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl059c04">();
	}
	static class AATCharacterCpl059c04* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl059c04>();
	}
};
static_assert(alignof(AATCharacterCpl059c04) == 0x000010, "Wrong alignment on AATCharacterCpl059c04");
static_assert(sizeof(AATCharacterCpl059c04) == 0x001110, "Wrong size on AATCharacterCpl059c04");

// Class ATExt.DMBattleDraw_ScreenEffect_All
// 0x0000 (0x0058 - 0x0058)
class UDMBattleDraw_ScreenEffect_All final : public UDMBattleDraw_Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DMBattleDraw_ScreenEffect_All">();
	}
	static class UDMBattleDraw_ScreenEffect_All* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDMBattleDraw_ScreenEffect_All>();
	}
};
static_assert(alignof(UDMBattleDraw_ScreenEffect_All) == 0x000008, "Wrong alignment on UDMBattleDraw_ScreenEffect_All");
static_assert(sizeof(UDMBattleDraw_ScreenEffect_All) == 0x000058, "Wrong size on UDMBattleDraw_ScreenEffect_All");

// Class ATExt.ATCharacterCpl059c05
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl059c05 final : public AATCharacterCpl059Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl059c05">();
	}
	static class AATCharacterCpl059c05* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl059c05>();
	}
};
static_assert(alignof(AATCharacterCpl059c05) == 0x000010, "Wrong alignment on AATCharacterCpl059c05");
static_assert(sizeof(AATCharacterCpl059c05) == 0x001110, "Wrong size on AATCharacterCpl059c05");

// Class ATExt.CFDMLogSwitchCamera
// 0x0000 (0x0058 - 0x0058)
class UCFDMLogSwitchCamera final : public UCFDebugMenuEventHandlerBool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CFDMLogSwitchCamera">();
	}
	static class UCFDMLogSwitchCamera* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCFDMLogSwitchCamera>();
	}
};
static_assert(alignof(UCFDMLogSwitchCamera) == 0x000008, "Wrong alignment on UCFDMLogSwitchCamera");
static_assert(sizeof(UCFDMLogSwitchCamera) == 0x000058, "Wrong size on UCFDMLogSwitchCamera");

// Class ATExt.ATCharacterCpl059c06
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl059c06 final : public AATCharacterCpl059Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl059c06">();
	}
	static class AATCharacterCpl059c06* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl059c06>();
	}
};
static_assert(alignof(AATCharacterCpl059c06) == 0x000010, "Wrong alignment on AATCharacterCpl059c06");
static_assert(sizeof(AATCharacterCpl059c06) == 0x001110, "Wrong size on AATCharacterCpl059c06");

// Class ATExt.ATCharacterCpl060
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl060 : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl060">();
	}
	static class AATCharacterCpl060* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl060>();
	}
};
static_assert(alignof(AATCharacterCpl060) == 0x000010, "Wrong alignment on AATCharacterCpl060");
static_assert(sizeof(AATCharacterCpl060) == 0x001110, "Wrong size on AATCharacterCpl060");

// Class ATExt.ATCharacterCpl061
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl061 : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl061">();
	}
	static class AATCharacterCpl061* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl061>();
	}
};
static_assert(alignof(AATCharacterCpl061) == 0x000010, "Wrong alignment on AATCharacterCpl061");
static_assert(sizeof(AATCharacterCpl061) == 0x001110, "Wrong size on AATCharacterCpl061");

// Class ATExt.ATCharacterCpl091Base
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl091Base : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl091Base">();
	}
	static class AATCharacterCpl091Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl091Base>();
	}
};
static_assert(alignof(AATCharacterCpl091Base) == 0x000010, "Wrong alignment on AATCharacterCpl091Base");
static_assert(sizeof(AATCharacterCpl091Base) == 0x001110, "Wrong size on AATCharacterCpl091Base");

// Class ATExt.ATCharacterCpl091c01
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl091c01 final : public AATCharacterCpl091Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl091c01">();
	}
	static class AATCharacterCpl091c01* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl091c01>();
	}
};
static_assert(alignof(AATCharacterCpl091c01) == 0x000010, "Wrong alignment on AATCharacterCpl091c01");
static_assert(sizeof(AATCharacterCpl091c01) == 0x001110, "Wrong size on AATCharacterCpl091c01");

// Class ATExt.ATCharacterCpl062
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl062 : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl062">();
	}
	static class AATCharacterCpl062* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl062>();
	}
};
static_assert(alignof(AATCharacterCpl062) == 0x000010, "Wrong alignment on AATCharacterCpl062");
static_assert(sizeof(AATCharacterCpl062) == 0x001110, "Wrong size on AATCharacterCpl062");

// Class ATExt.CFDMLogSwitchProjectile
// 0x0000 (0x0058 - 0x0058)
class UCFDMLogSwitchProjectile final : public UCFDebugMenuEventHandlerBool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CFDMLogSwitchProjectile">();
	}
	static class UCFDMLogSwitchProjectile* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCFDMLogSwitchProjectile>();
	}
};
static_assert(alignof(UCFDMLogSwitchProjectile) == 0x000008, "Wrong alignment on UCFDMLogSwitchProjectile");
static_assert(sizeof(UCFDMLogSwitchProjectile) == 0x000058, "Wrong size on UCFDMLogSwitchProjectile");

// Class ATExt.ATCharacterCpl063
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl063 : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl063">();
	}
	static class AATCharacterCpl063* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl063>();
	}
};
static_assert(alignof(AATCharacterCpl063) == 0x000010, "Wrong alignment on AATCharacterCpl063");
static_assert(sizeof(AATCharacterCpl063) == 0x001110, "Wrong size on AATCharacterCpl063");

// Class ATExt.ATCharacterCpl064Base
// 0x0010 (0x1120 - 0x1110)
class AATCharacterCpl064Base : public AAT_Character
{
public:
	uint8                                         Pad_1110[0x10];                                    // 0x1110(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl064Base">();
	}
	static class AATCharacterCpl064Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl064Base>();
	}
};
static_assert(alignof(AATCharacterCpl064Base) == 0x000010, "Wrong alignment on AATCharacterCpl064Base");
static_assert(sizeof(AATCharacterCpl064Base) == 0x001120, "Wrong size on AATCharacterCpl064Base");

// Class ATExt.ATCharacterCpl104B
// 0x0000 (0x1190 - 0x1190)
class AATCharacterCpl104B final : public AATCharacterCpl102Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl104B">();
	}
	static class AATCharacterCpl104B* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl104B>();
	}
};
static_assert(alignof(AATCharacterCpl104B) == 0x000010, "Wrong alignment on AATCharacterCpl104B");
static_assert(sizeof(AATCharacterCpl104B) == 0x001190, "Wrong size on AATCharacterCpl104B");

// Class ATExt.ATCharacterCpl064BaseLight
// 0x0010 (0x1120 - 0x1110)
class AATCharacterCpl064BaseLight final : public AATCharacterLightBase
{
public:
	uint8                                         Pad_1110[0x10];                                    // 0x1110(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl064BaseLight">();
	}
	static class AATCharacterCpl064BaseLight* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl064BaseLight>();
	}
};
static_assert(alignof(AATCharacterCpl064BaseLight) == 0x000010, "Wrong alignment on AATCharacterCpl064BaseLight");
static_assert(sizeof(AATCharacterCpl064BaseLight) == 0x001120, "Wrong size on AATCharacterCpl064BaseLight");

// Class ATExt.CFDMLogSwitchNetBattle
// 0x0000 (0x0058 - 0x0058)
class UCFDMLogSwitchNetBattle final : public UCFDebugMenuEventHandlerBool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CFDMLogSwitchNetBattle">();
	}
	static class UCFDMLogSwitchNetBattle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCFDMLogSwitchNetBattle>();
	}
};
static_assert(alignof(UCFDMLogSwitchNetBattle) == 0x000008, "Wrong alignment on UCFDMLogSwitchNetBattle");
static_assert(sizeof(UCFDMLogSwitchNetBattle) == 0x000058, "Wrong size on UCFDMLogSwitchNetBattle");

// Class ATExt.ATCharacterCpl064c01
// 0x0000 (0x1120 - 0x1120)
class AATCharacterCpl064c01 : public AATCharacterCpl064Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl064c01">();
	}
	static class AATCharacterCpl064c01* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl064c01>();
	}
};
static_assert(alignof(AATCharacterCpl064c01) == 0x000010, "Wrong alignment on AATCharacterCpl064c01");
static_assert(sizeof(AATCharacterCpl064c01) == 0x001120, "Wrong size on AATCharacterCpl064c01");

// Class ATExt.ATCharacterCpl064c02
// 0x0000 (0x1120 - 0x1120)
class AATCharacterCpl064c02 : public AATCharacterCpl064Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl064c02">();
	}
	static class AATCharacterCpl064c02* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl064c02>();
	}
};
static_assert(alignof(AATCharacterCpl064c02) == 0x000010, "Wrong alignment on AATCharacterCpl064c02");
static_assert(sizeof(AATCharacterCpl064c02) == 0x001120, "Wrong size on AATCharacterCpl064c02");

// Class ATExt.ATCharacterCpl064c03
// 0x0000 (0x1120 - 0x1120)
class AATCharacterCpl064c03 : public AATCharacterCpl064Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl064c03">();
	}
	static class AATCharacterCpl064c03* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl064c03>();
	}
};
static_assert(alignof(AATCharacterCpl064c03) == 0x000010, "Wrong alignment on AATCharacterCpl064c03");
static_assert(sizeof(AATCharacterCpl064c03) == 0x001120, "Wrong size on AATCharacterCpl064c03");

// Class ATExt.ATCharacterCpl093c02Light
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl093c02Light final : public AATCharacterCpl093BaseLight
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl093c02Light">();
	}
	static class AATCharacterCpl093c02Light* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl093c02Light>();
	}
};
static_assert(alignof(AATCharacterCpl093c02Light) == 0x000010, "Wrong alignment on AATCharacterCpl093c02Light");
static_assert(sizeof(AATCharacterCpl093c02Light) == 0x001110, "Wrong size on AATCharacterCpl093c02Light");

// Class ATExt.ATCharacterCpl065Base
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl065Base : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl065Base">();
	}
	static class AATCharacterCpl065Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl065Base>();
	}
};
static_assert(alignof(AATCharacterCpl065Base) == 0x000010, "Wrong alignment on AATCharacterCpl065Base");
static_assert(sizeof(AATCharacterCpl065Base) == 0x001110, "Wrong size on AATCharacterCpl065Base");

// Class ATExt.ATCharacterCpl065c01
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl065c01 : public AATCharacterCpl065Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl065c01">();
	}
	static class AATCharacterCpl065c01* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl065c01>();
	}
};
static_assert(alignof(AATCharacterCpl065c01) == 0x000010, "Wrong alignment on AATCharacterCpl065c01");
static_assert(sizeof(AATCharacterCpl065c01) == 0x001110, "Wrong size on AATCharacterCpl065c01");

// Class ATExt.ATCharacterCpl065c02
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl065c02 : public AATCharacterCpl065Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl065c02">();
	}
	static class AATCharacterCpl065c02* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl065c02>();
	}
};
static_assert(alignof(AATCharacterCpl065c02) == 0x000010, "Wrong alignment on AATCharacterCpl065c02");
static_assert(sizeof(AATCharacterCpl065c02) == 0x001110, "Wrong size on AATCharacterCpl065c02");

// Class ATExt.ATCharacterCpl065c03
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl065c03 : public AATCharacterCpl065Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl065c03">();
	}
	static class AATCharacterCpl065c03* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl065c03>();
	}
};
static_assert(alignof(AATCharacterCpl065c03) == 0x000010, "Wrong alignment on AATCharacterCpl065c03");
static_assert(sizeof(AATCharacterCpl065c03) == 0x001110, "Wrong size on AATCharacterCpl065c03");

// Class ATExt.ATCommunitySkillZFighters
// 0x0008 (0x0068 - 0x0060)
class UATCommunitySkillZFighters final : public UATCommunitySkillBase
{
public:
	uint8                                         Pad_60[0x8];                                       // 0x0060(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCommunitySkillZFighters">();
	}
	static class UATCommunitySkillZFighters* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATCommunitySkillZFighters>();
	}
};
static_assert(alignof(UATCommunitySkillZFighters) == 0x000008, "Wrong alignment on UATCommunitySkillZFighters");
static_assert(sizeof(UATCommunitySkillZFighters) == 0x000068, "Wrong size on UATCommunitySkillZFighters");

// Class ATExt.ATCharacterCpl067
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl067 final : public AAT_Character
{
public:
	void OnChangeAction(class AAT_Character* InCharacter, int32 InActionIdPrev, int32 InActionIdNext);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl067">();
	}
	static class AATCharacterCpl067* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl067>();
	}
};
static_assert(alignof(AATCharacterCpl067) == 0x000010, "Wrong alignment on AATCharacterCpl067");
static_assert(sizeof(AATCharacterCpl067) == 0x001110, "Wrong size on AATCharacterCpl067");

// Class ATExt.DMBattleDraw_Player_Single
// 0x0008 (0x0060 - 0x0058)
class UDMBattleDraw_Player_Single final : public UDMBattleDraw_Base
{
public:
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DMBattleDraw_Player_Single">();
	}
	static class UDMBattleDraw_Player_Single* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDMBattleDraw_Player_Single>();
	}
};
static_assert(alignof(UDMBattleDraw_Player_Single) == 0x000008, "Wrong alignment on UDMBattleDraw_Player_Single");
static_assert(sizeof(UDMBattleDraw_Player_Single) == 0x000060, "Wrong size on UDMBattleDraw_Player_Single");

// Class ATExt.ATCharacterCpl069
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl069 final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl069">();
	}
	static class AATCharacterCpl069* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl069>();
	}
};
static_assert(alignof(AATCharacterCpl069) == 0x000010, "Wrong alignment on AATCharacterCpl069");
static_assert(sizeof(AATCharacterCpl069) == 0x001110, "Wrong size on AATCharacterCpl069");

// Class ATExt.ATCharacterCpl070
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl070 final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl070">();
	}
	static class AATCharacterCpl070* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl070>();
	}
};
static_assert(alignof(AATCharacterCpl070) == 0x000010, "Wrong alignment on AATCharacterCpl070");
static_assert(sizeof(AATCharacterCpl070) == 0x001110, "Wrong size on AATCharacterCpl070");

// Class ATExt.ATCharacterCpl071
// 0x0040 (0x1150 - 0x1110)
class AATCharacterCpl071 final : public AAT_Character
{
public:
	TArray<ECHARACTER_TYPE>                       SummonCharacters;                                  // 0x1110(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1120[0x30];                                    // 0x1120(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl071">();
	}
	static class AATCharacterCpl071* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl071>();
	}
};
static_assert(alignof(AATCharacterCpl071) == 0x000010, "Wrong alignment on AATCharacterCpl071");
static_assert(sizeof(AATCharacterCpl071) == 0x001150, "Wrong size on AATCharacterCpl071");
static_assert(offsetof(AATCharacterCpl071, SummonCharacters) == 0x001110, "Member 'AATCharacterCpl071::SummonCharacters' has a wrong offset!");

// Class ATExt.CFDMLogSwitchAdvTalk
// 0x0000 (0x0058 - 0x0058)
class UCFDMLogSwitchAdvTalk final : public UCFDebugMenuEventHandlerBool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CFDMLogSwitchAdvTalk">();
	}
	static class UCFDMLogSwitchAdvTalk* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCFDMLogSwitchAdvTalk>();
	}
};
static_assert(alignof(UCFDMLogSwitchAdvTalk) == 0x000008, "Wrong alignment on UCFDMLogSwitchAdvTalk");
static_assert(sizeof(UCFDMLogSwitchAdvTalk) == 0x000058, "Wrong size on UCFDMLogSwitchAdvTalk");

// Class ATExt.ATCharacterCpl074
// 0x0060 (0x1170 - 0x1110)
class AATCharacterCpl074 final : public AAT_Character
{
public:
	bool                                          UseBarrierEff;                                     // 0x1110(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1111[0x7];                                     // 0x1111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BarrierSocketName;                                 // 0x1118(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystem*                        BarrierEffST;                                      // 0x1120(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystem*                        BarrierEff100;                                     // 0x1128(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystem*                        BarrierEff50;                                      // 0x1130(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystem*                        BarrierEff25;                                      // 0x1138(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystem*                        BarrierEndEff100;                                  // 0x1140(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystem*                        BarrierEndEff50;                                   // 0x1148(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystem*                        BarrierEndEff25;                                   // 0x1150(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1158[0x18];                                    // 0x1158(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl074">();
	}
	static class AATCharacterCpl074* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl074>();
	}
};
static_assert(alignof(AATCharacterCpl074) == 0x000010, "Wrong alignment on AATCharacterCpl074");
static_assert(sizeof(AATCharacterCpl074) == 0x001170, "Wrong size on AATCharacterCpl074");
static_assert(offsetof(AATCharacterCpl074, UseBarrierEff) == 0x001110, "Member 'AATCharacterCpl074::UseBarrierEff' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl074, BarrierSocketName) == 0x001118, "Member 'AATCharacterCpl074::BarrierSocketName' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl074, BarrierEffST) == 0x001120, "Member 'AATCharacterCpl074::BarrierEffST' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl074, BarrierEff100) == 0x001128, "Member 'AATCharacterCpl074::BarrierEff100' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl074, BarrierEff50) == 0x001130, "Member 'AATCharacterCpl074::BarrierEff50' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl074, BarrierEff25) == 0x001138, "Member 'AATCharacterCpl074::BarrierEff25' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl074, BarrierEndEff100) == 0x001140, "Member 'AATCharacterCpl074::BarrierEndEff100' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl074, BarrierEndEff50) == 0x001148, "Member 'AATCharacterCpl074::BarrierEndEff50' has a wrong offset!");
static_assert(offsetof(AATCharacterCpl074, BarrierEndEff25) == 0x001150, "Member 'AATCharacterCpl074::BarrierEndEff25' has a wrong offset!");

// Class ATExt.ATCharacterCpl078
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl078 final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl078">();
	}
	static class AATCharacterCpl078* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl078>();
	}
};
static_assert(alignof(AATCharacterCpl078) == 0x000010, "Wrong alignment on AATCharacterCpl078");
static_assert(sizeof(AATCharacterCpl078) == 0x001110, "Wrong size on AATCharacterCpl078");

// Class ATExt.ATCharacterCpl082Base
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl082Base : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl082Base">();
	}
	static class AATCharacterCpl082Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl082Base>();
	}
};
static_assert(alignof(AATCharacterCpl082Base) == 0x000010, "Wrong alignment on AATCharacterCpl082Base");
static_assert(sizeof(AATCharacterCpl082Base) == 0x001110, "Wrong size on AATCharacterCpl082Base");

// Class ATExt.ATCharacterCpl082c01
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl082c01 final : public AATCharacterCpl082Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl082c01">();
	}
	static class AATCharacterCpl082c01* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl082c01>();
	}
};
static_assert(alignof(AATCharacterCpl082c01) == 0x000010, "Wrong alignment on AATCharacterCpl082c01");
static_assert(sizeof(AATCharacterCpl082c01) == 0x001110, "Wrong size on AATCharacterCpl082c01");

// Class ATExt.ATCharacterCpl082c02
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl082c02 final : public AATCharacterCpl082Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl082c02">();
	}
	static class AATCharacterCpl082c02* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl082c02>();
	}
};
static_assert(alignof(AATCharacterCpl082c02) == 0x000010, "Wrong alignment on AATCharacterCpl082c02");
static_assert(sizeof(AATCharacterCpl082c02) == 0x001110, "Wrong size on AATCharacterCpl082c02");

// Class ATExt.ATCharacterCpl082c03
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl082c03 final : public AATCharacterCpl082Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl082c03">();
	}
	static class AATCharacterCpl082c03* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl082c03>();
	}
};
static_assert(alignof(AATCharacterCpl082c03) == 0x000010, "Wrong alignment on AATCharacterCpl082c03");
static_assert(sizeof(AATCharacterCpl082c03) == 0x001110, "Wrong size on AATCharacterCpl082c03");

// Class ATExt.ATCharacterCpl082c04
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl082c04 final : public AATCharacterCpl082Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl082c04">();
	}
	static class AATCharacterCpl082c04* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl082c04>();
	}
};
static_assert(alignof(AATCharacterCpl082c04) == 0x000010, "Wrong alignment on AATCharacterCpl082c04");
static_assert(sizeof(AATCharacterCpl082c04) == 0x001110, "Wrong size on AATCharacterCpl082c04");

// Class ATExt.ATCharacterCpl083BaseLight
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl083BaseLight final : public AATCharacterLightBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl083BaseLight">();
	}
	static class AATCharacterCpl083BaseLight* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl083BaseLight>();
	}
};
static_assert(alignof(AATCharacterCpl083BaseLight) == 0x000010, "Wrong alignment on AATCharacterCpl083BaseLight");
static_assert(sizeof(AATCharacterCpl083BaseLight) == 0x001110, "Wrong size on AATCharacterCpl083BaseLight");

// Class ATExt.ATCharacterCpl083c02
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl083c02 final : public AATCharacterCpl083Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl083c02">();
	}
	static class AATCharacterCpl083c02* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl083c02>();
	}
};
static_assert(alignof(AATCharacterCpl083c02) == 0x000010, "Wrong alignment on AATCharacterCpl083c02");
static_assert(sizeof(AATCharacterCpl083c02) == 0x001110, "Wrong size on AATCharacterCpl083c02");

// Class ATExt.ATCharacterCpl084
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl084 final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl084">();
	}
	static class AATCharacterCpl084* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl084>();
	}
};
static_assert(alignof(AATCharacterCpl084) == 0x000010, "Wrong alignment on AATCharacterCpl084");
static_assert(sizeof(AATCharacterCpl084) == 0x001110, "Wrong size on AATCharacterCpl084");

// Class ATExt.ATCharacterCpl086
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl086 final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl086">();
	}
	static class AATCharacterCpl086* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl086>();
	}
};
static_assert(alignof(AATCharacterCpl086) == 0x000010, "Wrong alignment on AATCharacterCpl086");
static_assert(sizeof(AATCharacterCpl086) == 0x001110, "Wrong size on AATCharacterCpl086");

// Class ATExt.ATCharacterCpl093Base
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl093Base : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl093Base">();
	}
	static class AATCharacterCpl093Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl093Base>();
	}
};
static_assert(alignof(AATCharacterCpl093Base) == 0x000010, "Wrong alignment on AATCharacterCpl093Base");
static_assert(sizeof(AATCharacterCpl093Base) == 0x001110, "Wrong size on AATCharacterCpl093Base");

// Class ATExt.ATCharacterCpl093c01
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl093c01 final : public AATCharacterCpl093Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl093c01">();
	}
	static class AATCharacterCpl093c01* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl093c01>();
	}
};
static_assert(alignof(AATCharacterCpl093c01) == 0x000010, "Wrong alignment on AATCharacterCpl093c01");
static_assert(sizeof(AATCharacterCpl093c01) == 0x001110, "Wrong size on AATCharacterCpl093c01");

// Class ATExt.ATCharacterCpl093c02
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl093c02 final : public AATCharacterCpl093Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl093c02">();
	}
	static class AATCharacterCpl093c02* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl093c02>();
	}
};
static_assert(alignof(AATCharacterCpl093c02) == 0x000010, "Wrong alignment on AATCharacterCpl093c02");
static_assert(sizeof(AATCharacterCpl093c02) == 0x001110, "Wrong size on AATCharacterCpl093c02");

// Class ATExt.ATCharacterCpl093c03
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl093c03 final : public AATCharacterCpl093Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl093c03">();
	}
	static class AATCharacterCpl093c03* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl093c03>();
	}
};
static_assert(alignof(AATCharacterCpl093c03) == 0x000010, "Wrong alignment on AATCharacterCpl093c03");
static_assert(sizeof(AATCharacterCpl093c03) == 0x001110, "Wrong size on AATCharacterCpl093c03");

// Class ATExt.ATCharacterCpl094Base
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl094Base final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl094Base">();
	}
	static class AATCharacterCpl094Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl094Base>();
	}
};
static_assert(alignof(AATCharacterCpl094Base) == 0x000010, "Wrong alignment on AATCharacterCpl094Base");
static_assert(sizeof(AATCharacterCpl094Base) == 0x001110, "Wrong size on AATCharacterCpl094Base");

// Class ATExt.ATCharacterCpl094c01
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl094c01 final : public AATCharacterCpl094BaseLight
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl094c01">();
	}
	static class AATCharacterCpl094c01* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl094c01>();
	}
};
static_assert(alignof(AATCharacterCpl094c01) == 0x000010, "Wrong alignment on AATCharacterCpl094c01");
static_assert(sizeof(AATCharacterCpl094c01) == 0x001110, "Wrong size on AATCharacterCpl094c01");

// Class ATExt.ATCharacterCpl094c03
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl094c03 final : public AATCharacterCpl094BaseLight
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl094c03">();
	}
	static class AATCharacterCpl094c03* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl094c03>();
	}
};
static_assert(alignof(AATCharacterCpl094c03) == 0x000010, "Wrong alignment on AATCharacterCpl094c03");
static_assert(sizeof(AATCharacterCpl094c03) == 0x001110, "Wrong size on AATCharacterCpl094c03");

// Class ATExt.ATCharacterCpl096c02
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl096c02 final : public AATCharacterCpl096Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl096c02">();
	}
	static class AATCharacterCpl096c02* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl096c02>();
	}
};
static_assert(alignof(AATCharacterCpl096c02) == 0x000010, "Wrong alignment on AATCharacterCpl096c02");
static_assert(sizeof(AATCharacterCpl096c02) == 0x001110, "Wrong size on AATCharacterCpl096c02");

// Class ATExt.ATCharacterCpl097c02
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl097c02 final : public AATCharacterCpl097Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl097c02">();
	}
	static class AATCharacterCpl097c02* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl097c02>();
	}
};
static_assert(alignof(AATCharacterCpl097c02) == 0x000010, "Wrong alignment on AATCharacterCpl097c02");
static_assert(sizeof(AATCharacterCpl097c02) == 0x001110, "Wrong size on AATCharacterCpl097c02");

// Class ATExt.ATCharacterCpl099
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl099 final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl099">();
	}
	static class AATCharacterCpl099* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl099>();
	}
};
static_assert(alignof(AATCharacterCpl099) == 0x000010, "Wrong alignment on AATCharacterCpl099");
static_assert(sizeof(AATCharacterCpl099) == 0x001110, "Wrong size on AATCharacterCpl099");

// Class ATExt.ATCharacterCpl100B
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl100B final : public AAT_CharacterPlayableBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl100B">();
	}
	static class AATCharacterCpl100B* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl100B>();
	}
};
static_assert(alignof(AATCharacterCpl100B) == 0x000010, "Wrong alignment on AATCharacterCpl100B");
static_assert(sizeof(AATCharacterCpl100B) == 0x001110, "Wrong size on AATCharacterCpl100B");

// Class ATExt.ATCharacterCpl101A
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl101A final : public AAT_Character
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl101A">();
	}
	static class AATCharacterCpl101A* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl101A>();
	}
};
static_assert(alignof(AATCharacterCpl101A) == 0x000010, "Wrong alignment on AATCharacterCpl101A");
static_assert(sizeof(AATCharacterCpl101A) == 0x001110, "Wrong size on AATCharacterCpl101A");

// Class ATExt.ATCharacterCpl102B
// 0x0000 (0x1190 - 0x1190)
class AATCharacterCpl102B final : public AATCharacterCpl102Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl102B">();
	}
	static class AATCharacterCpl102B* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl102B>();
	}
};
static_assert(alignof(AATCharacterCpl102B) == 0x000010, "Wrong alignment on AATCharacterCpl102B");
static_assert(sizeof(AATCharacterCpl102B) == 0x001190, "Wrong size on AATCharacterCpl102B");

// Class ATExt.ATCharacterCpl102D
// 0x0000 (0x1190 - 0x1190)
class AATCharacterCpl102D final : public AATCharacterCpl102Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl102D">();
	}
	static class AATCharacterCpl102D* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl102D>();
	}
};
static_assert(alignof(AATCharacterCpl102D) == 0x000010, "Wrong alignment on AATCharacterCpl102D");
static_assert(sizeof(AATCharacterCpl102D) == 0x001190, "Wrong size on AATCharacterCpl102D");

// Class ATExt.ATCharacterCpl103B
// 0x0000 (0x1190 - 0x1190)
class AATCharacterCpl103B final : public AATCharacterCpl103Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl103B">();
	}
	static class AATCharacterCpl103B* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl103B>();
	}
};
static_assert(alignof(AATCharacterCpl103B) == 0x000010, "Wrong alignment on AATCharacterCpl103B");
static_assert(sizeof(AATCharacterCpl103B) == 0x001190, "Wrong size on AATCharacterCpl103B");

// Class ATExt.ATCharacterCpl103D
// 0x0000 (0x1190 - 0x1190)
class AATCharacterCpl103D final : public AATCharacterCpl103Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl103D">();
	}
	static class AATCharacterCpl103D* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl103D>();
	}
};
static_assert(alignof(AATCharacterCpl103D) == 0x000010, "Wrong alignment on AATCharacterCpl103D");
static_assert(sizeof(AATCharacterCpl103D) == 0x001190, "Wrong size on AATCharacterCpl103D");

// Class ATExt.ATCharacterCpl104A
// 0x0000 (0x1190 - 0x1190)
class AATCharacterCpl104A final : public AATCharacterCpl102Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl104A">();
	}
	static class AATCharacterCpl104A* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl104A>();
	}
};
static_assert(alignof(AATCharacterCpl104A) == 0x000010, "Wrong alignment on AATCharacterCpl104A");
static_assert(sizeof(AATCharacterCpl104A) == 0x001190, "Wrong size on AATCharacterCpl104A");

// Class ATExt.ATCharacterCpl105A
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl105A final : public AAT_CharacterPlayableBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl105A">();
	}
	static class AATCharacterCpl105A* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl105A>();
	}
};
static_assert(alignof(AATCharacterCpl105A) == 0x000010, "Wrong alignment on AATCharacterCpl105A");
static_assert(sizeof(AATCharacterCpl105A) == 0x001110, "Wrong size on AATCharacterCpl105A");

// Class ATExt.ATCharacterCpl106A_2
// 0x0000 (0x1110 - 0x1110)
class AATCharacterCpl106A_2 final : public AATCharacterCpl106A
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCharacterCpl106A_2">();
	}
	static class AATCharacterCpl106A_2* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATCharacterCpl106A_2>();
	}
};
static_assert(alignof(AATCharacterCpl106A_2) == 0x000010, "Wrong alignment on AATCharacterCpl106A_2");
static_assert(sizeof(AATCharacterCpl106A_2) == 0x001110, "Wrong size on AATCharacterCpl106A_2");

// Class ATExt.ATCommunitySkillCooking
// 0x0010 (0x0070 - 0x0060)
class UATCommunitySkillCooking final : public UATCommunitySkillBase
{
public:
	uint8                                         Pad_60[0x10];                                      // 0x0060(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCommunitySkillCooking">();
	}
	static class UATCommunitySkillCooking* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATCommunitySkillCooking>();
	}
};
static_assert(alignof(UATCommunitySkillCooking) == 0x000008, "Wrong alignment on UATCommunitySkillCooking");
static_assert(sizeof(UATCommunitySkillCooking) == 0x000070, "Wrong size on UATCommunitySkillCooking");

// Class ATExt.ATCommunitySkillDevelop
// 0x0000 (0x0060 - 0x0060)
class UATCommunitySkillDevelop final : public UATCommunitySkillBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCommunitySkillDevelop">();
	}
	static class UATCommunitySkillDevelop* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATCommunitySkillDevelop>();
	}
};
static_assert(alignof(UATCommunitySkillDevelop) == 0x000008, "Wrong alignment on UATCommunitySkillDevelop");
static_assert(sizeof(UATCommunitySkillDevelop) == 0x000060, "Wrong size on UATCommunitySkillDevelop");

// Class ATExt.ATCommunitySkillGods
// 0x0008 (0x0068 - 0x0060)
class UATCommunitySkillGods final : public UATCommunitySkillBase
{
public:
	uint8                                         Pad_60[0x8];                                       // 0x0060(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATCommunitySkillGods">();
	}
	static class UATCommunitySkillGods* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATCommunitySkillGods>();
	}
};
static_assert(alignof(UATCommunitySkillGods) == 0x000008, "Wrong alignment on UATCommunitySkillGods");
static_assert(sizeof(UATCommunitySkillGods) == 0x000068, "Wrong size on UATCommunitySkillGods");

// Class ATExt.ATDataAssetCarParameterArea
// 0x0018 (0x0048 - 0x0030)
class UATDataAssetCarParameterArea final : public UATDataAssetBase
{
public:
	struct FATDataAssetCarParameterAreaInfo       CarParameterAreaInfo;                              // 0x0030(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATDataAssetCarParameterArea">();
	}
	static class UATDataAssetCarParameterArea* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATDataAssetCarParameterArea>();
	}
};
static_assert(alignof(UATDataAssetCarParameterArea) == 0x000008, "Wrong alignment on UATDataAssetCarParameterArea");
static_assert(sizeof(UATDataAssetCarParameterArea) == 0x000048, "Wrong size on UATDataAssetCarParameterArea");
static_assert(offsetof(UATDataAssetCarParameterArea, CarParameterAreaInfo) == 0x000030, "Member 'UATDataAssetCarParameterArea::CarParameterAreaInfo' has a wrong offset!");

// Class ATExt.ATTalkAnimLoader
// 0x0060 (0x0088 - 0x0028)
class UATTalkAnimLoader final : public UObject
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, class UATDataAssetTalkAnimAsyncLoad*> LoaderMap;                                         // 0x0038(0x0050)(ZeroConstructor, NativeAccessSpecifierPrivate)

public:
	void CompleteLoad(class UATDataAssetTalkAnimAsyncLoad* Loader);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATTalkAnimLoader">();
	}
	static class UATTalkAnimLoader* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATTalkAnimLoader>();
	}
};
static_assert(alignof(UATTalkAnimLoader) == 0x000008, "Wrong alignment on UATTalkAnimLoader");
static_assert(sizeof(UATTalkAnimLoader) == 0x000088, "Wrong size on UATTalkAnimLoader");
static_assert(offsetof(UATTalkAnimLoader, LoaderMap) == 0x000038, "Member 'UATTalkAnimLoader::LoaderMap' has a wrong offset!");

// Class ATExt.ATDebugDrawTime
// 0x0010 (0x0040 - 0x0030)
class UATDebugDrawTime final : public UCFManagerObject
{
public:
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATDebugDrawTime">();
	}
	static class UATDebugDrawTime* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATDebugDrawTime>();
	}
};
static_assert(alignof(UATDebugDrawTime) == 0x000008, "Wrong alignment on UATDebugDrawTime");
static_assert(sizeof(UATDebugDrawTime) == 0x000040, "Wrong size on UATDebugDrawTime");

// Class ATExt.ATDebugMenuHandler
// 0x0008 (0x00F0 - 0x00E8)
class UATDebugMenuHandler final : public UCFDebugMenuHandler
{
public:
	class UATDebugMenuEventHandler*               EventHandler;                                      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATDebugMenuHandler">();
	}
	static class UATDebugMenuHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATDebugMenuHandler>();
	}
};
static_assert(alignof(UATDebugMenuHandler) == 0x000008, "Wrong alignment on UATDebugMenuHandler");
static_assert(sizeof(UATDebugMenuHandler) == 0x0000F0, "Wrong size on UATDebugMenuHandler");
static_assert(offsetof(UATDebugMenuHandler, EventHandler) == 0x0000E8, "Member 'UATDebugMenuHandler::EventHandler' has a wrong offset!");

// Class ATExt.ATDebugMenuEventHandler
// 0x0050 (0x0078 - 0x0028)
class UATDebugMenuEventHandler final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UATDebugMenuEventHandlerLog*            LogHandler;                                        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UATDebugMenuEventHandlerBatch*          BatchHandler;                                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UATDebugMenuEventHandlerBattleSetting*  BattleSettingHandler;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UATDebugMenuEventHandlerDraw*           DrawHandler;                                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UATDebugMenuEventHandlerBattlePlayer*   BattlePlayerHandler;                               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UATDebugMenuEventHandlerRandomPadSetting* RandomPadSettingHandler;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UATDebugMenuEventHandlerBattleDebugDisp* BattleDebugDisp;                                   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UATDebugMenuEventHandlerSkillSetting*   SkillSetting;                                      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UATDebugMenuEventHandlerDebugHudSetting* DebugHudSetting;                                   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATDebugMenuEventHandler">();
	}
	static class UATDebugMenuEventHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATDebugMenuEventHandler>();
	}
};
static_assert(alignof(UATDebugMenuEventHandler) == 0x000008, "Wrong alignment on UATDebugMenuEventHandler");
static_assert(sizeof(UATDebugMenuEventHandler) == 0x000078, "Wrong size on UATDebugMenuEventHandler");
static_assert(offsetof(UATDebugMenuEventHandler, LogHandler) == 0x000030, "Member 'UATDebugMenuEventHandler::LogHandler' has a wrong offset!");
static_assert(offsetof(UATDebugMenuEventHandler, BatchHandler) == 0x000038, "Member 'UATDebugMenuEventHandler::BatchHandler' has a wrong offset!");
static_assert(offsetof(UATDebugMenuEventHandler, BattleSettingHandler) == 0x000040, "Member 'UATDebugMenuEventHandler::BattleSettingHandler' has a wrong offset!");
static_assert(offsetof(UATDebugMenuEventHandler, DrawHandler) == 0x000048, "Member 'UATDebugMenuEventHandler::DrawHandler' has a wrong offset!");
static_assert(offsetof(UATDebugMenuEventHandler, BattlePlayerHandler) == 0x000050, "Member 'UATDebugMenuEventHandler::BattlePlayerHandler' has a wrong offset!");
static_assert(offsetof(UATDebugMenuEventHandler, RandomPadSettingHandler) == 0x000058, "Member 'UATDebugMenuEventHandler::RandomPadSettingHandler' has a wrong offset!");
static_assert(offsetof(UATDebugMenuEventHandler, BattleDebugDisp) == 0x000060, "Member 'UATDebugMenuEventHandler::BattleDebugDisp' has a wrong offset!");
static_assert(offsetof(UATDebugMenuEventHandler, SkillSetting) == 0x000068, "Member 'UATDebugMenuEventHandler::SkillSetting' has a wrong offset!");
static_assert(offsetof(UATDebugMenuEventHandler, DebugHudSetting) == 0x000070, "Member 'UATDebugMenuEventHandler::DebugHudSetting' has a wrong offset!");

// Class ATExt.CFDMLogSwitchBattle
// 0x0000 (0x0058 - 0x0058)
class UCFDMLogSwitchBattle final : public UCFDebugMenuEventHandlerBool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CFDMLogSwitchBattle">();
	}
	static class UCFDMLogSwitchBattle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCFDMLogSwitchBattle>();
	}
};
static_assert(alignof(UCFDMLogSwitchBattle) == 0x000008, "Wrong alignment on UCFDMLogSwitchBattle");
static_assert(sizeof(UCFDMLogSwitchBattle) == 0x000058, "Wrong size on UCFDMLogSwitchBattle");

// Class ATExt.CFDMLogSwitchStage
// 0x0000 (0x0058 - 0x0058)
class UCFDMLogSwitchStage final : public UCFDebugMenuEventHandlerBool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CFDMLogSwitchStage">();
	}
	static class UCFDMLogSwitchStage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCFDMLogSwitchStage>();
	}
};
static_assert(alignof(UCFDMLogSwitchStage) == 0x000008, "Wrong alignment on UCFDMLogSwitchStage");
static_assert(sizeof(UCFDMLogSwitchStage) == 0x000058, "Wrong size on UCFDMLogSwitchStage");

// Class ATExt.CFDMLogSwitchEffect
// 0x0000 (0x0058 - 0x0058)
class UCFDMLogSwitchEffect final : public UCFDebugMenuEventHandlerBool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CFDMLogSwitchEffect">();
	}
	static class UCFDMLogSwitchEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCFDMLogSwitchEffect>();
	}
};
static_assert(alignof(UCFDMLogSwitchEffect) == 0x000008, "Wrong alignment on UCFDMLogSwitchEffect");
static_assert(sizeof(UCFDMLogSwitchEffect) == 0x000058, "Wrong size on UCFDMLogSwitchEffect");

// Class ATExt.CFDMLogSwitchAI
// 0x0000 (0x0058 - 0x0058)
class UCFDMLogSwitchAI final : public UCFDebugMenuEventHandlerBool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CFDMLogSwitchAI">();
	}
	static class UCFDMLogSwitchAI* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCFDMLogSwitchAI>();
	}
};
static_assert(alignof(UCFDMLogSwitchAI) == 0x000008, "Wrong alignment on UCFDMLogSwitchAI");
static_assert(sizeof(UCFDMLogSwitchAI) == 0x000058, "Wrong size on UCFDMLogSwitchAI");

// Class ATExt.CFDMLogSwitchInput
// 0x0000 (0x0058 - 0x0058)
class UCFDMLogSwitchInput final : public UCFDebugMenuEventHandlerBool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CFDMLogSwitchInput">();
	}
	static class UCFDMLogSwitchInput* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCFDMLogSwitchInput>();
	}
};
static_assert(alignof(UCFDMLogSwitchInput) == 0x000008, "Wrong alignment on UCFDMLogSwitchInput");
static_assert(sizeof(UCFDMLogSwitchInput) == 0x000058, "Wrong size on UCFDMLogSwitchInput");

// Class ATExt.CFDMLogSwitchUI
// 0x0000 (0x0058 - 0x0058)
class UCFDMLogSwitchUI final : public UCFDebugMenuEventHandlerBool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CFDMLogSwitchUI">();
	}
	static class UCFDMLogSwitchUI* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCFDMLogSwitchUI>();
	}
};
static_assert(alignof(UCFDMLogSwitchUI) == 0x000008, "Wrong alignment on UCFDMLogSwitchUI");
static_assert(sizeof(UCFDMLogSwitchUI) == 0x000058, "Wrong size on UCFDMLogSwitchUI");

// Class ATExt.CFDMLogSwitchAdvLevel
// 0x0000 (0x0058 - 0x0058)
class UCFDMLogSwitchAdvLevel final : public UCFDebugMenuEventHandlerBool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CFDMLogSwitchAdvLevel">();
	}
	static class UCFDMLogSwitchAdvLevel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCFDMLogSwitchAdvLevel>();
	}
};
static_assert(alignof(UCFDMLogSwitchAdvLevel) == 0x000008, "Wrong alignment on UCFDMLogSwitchAdvLevel");
static_assert(sizeof(UCFDMLogSwitchAdvLevel) == 0x000058, "Wrong size on UCFDMLogSwitchAdvLevel");

// Class ATExt.CFDMLogSwitchAdvMob
// 0x0000 (0x0058 - 0x0058)
class UCFDMLogSwitchAdvMob final : public UCFDebugMenuEventHandlerBool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CFDMLogSwitchAdvMob">();
	}
	static class UCFDMLogSwitchAdvMob* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCFDMLogSwitchAdvMob>();
	}
};
static_assert(alignof(UCFDMLogSwitchAdvMob) == 0x000008, "Wrong alignment on UCFDMLogSwitchAdvMob");
static_assert(sizeof(UCFDMLogSwitchAdvMob) == 0x000058, "Wrong size on UCFDMLogSwitchAdvMob");

// Class ATExt.CFDMLogSwitchNetLobby
// 0x0000 (0x0058 - 0x0058)
class UCFDMLogSwitchNetLobby final : public UCFDebugMenuEventHandlerBool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CFDMLogSwitchNetLobby">();
	}
	static class UCFDMLogSwitchNetLobby* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCFDMLogSwitchNetLobby>();
	}
};
static_assert(alignof(UCFDMLogSwitchNetLobby) == 0x000008, "Wrong alignment on UCFDMLogSwitchNetLobby");
static_assert(sizeof(UCFDMLogSwitchNetLobby) == 0x000058, "Wrong size on UCFDMLogSwitchNetLobby");

// Class ATExt.ATDebugMenuEventHandlerBatch
// 0x0010 (0x0040 - 0x0030)
class UATDebugMenuEventHandlerBatch final : public UCFDebugMenuEventHandlerContentsFactory
{
public:
	class UCFDebugMenuEventHandlerBool*           Handlers[0x2];                                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATDebugMenuEventHandlerBatch">();
	}
	static class UATDebugMenuEventHandlerBatch* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATDebugMenuEventHandlerBatch>();
	}
};
static_assert(alignof(UATDebugMenuEventHandlerBatch) == 0x000008, "Wrong alignment on UATDebugMenuEventHandlerBatch");
static_assert(sizeof(UATDebugMenuEventHandlerBatch) == 0x000040, "Wrong size on UATDebugMenuEventHandlerBatch");
static_assert(offsetof(UATDebugMenuEventHandlerBatch, Handlers) == 0x000030, "Member 'UATDebugMenuEventHandlerBatch::Handlers' has a wrong offset!");

// Class ATExt.DMBattleDraw_Player_All
// 0x0000 (0x0058 - 0x0058)
class UDMBattleDraw_Player_All final : public UDMBattleDraw_Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DMBattleDraw_Player_All">();
	}
	static class UDMBattleDraw_Player_All* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDMBattleDraw_Player_All>();
	}
};
static_assert(alignof(UDMBattleDraw_Player_All) == 0x000008, "Wrong alignment on UDMBattleDraw_Player_All");
static_assert(sizeof(UDMBattleDraw_Player_All) == 0x000058, "Wrong size on UDMBattleDraw_Player_All");

// Class ATExt.DMBattleDraw_Skill_All
// 0x0000 (0x0058 - 0x0058)
class UDMBattleDraw_Skill_All final : public UDMBattleDraw_Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DMBattleDraw_Skill_All">();
	}
	static class UDMBattleDraw_Skill_All* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDMBattleDraw_Skill_All>();
	}
};
static_assert(alignof(UDMBattleDraw_Skill_All) == 0x000008, "Wrong alignment on UDMBattleDraw_Skill_All");
static_assert(sizeof(UDMBattleDraw_Skill_All) == 0x000058, "Wrong size on UDMBattleDraw_Skill_All");

// Class ATExt.DMBattleDraw_Stage_All
// 0x0000 (0x0058 - 0x0058)
class UDMBattleDraw_Stage_All final : public UDMBattleDraw_Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DMBattleDraw_Stage_All">();
	}
	static class UDMBattleDraw_Stage_All* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDMBattleDraw_Stage_All>();
	}
};
static_assert(alignof(UDMBattleDraw_Stage_All) == 0x000008, "Wrong alignment on UDMBattleDraw_Stage_All");
static_assert(sizeof(UDMBattleDraw_Stage_All) == 0x000058, "Wrong size on UDMBattleDraw_Stage_All");

// Class ATExt.DMBattleDraw_Stage_Background
// 0x0000 (0x0058 - 0x0058)
class UDMBattleDraw_Stage_Background final : public UDMBattleDraw_Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DMBattleDraw_Stage_Background">();
	}
	static class UDMBattleDraw_Stage_Background* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDMBattleDraw_Stage_Background>();
	}
};
static_assert(alignof(UDMBattleDraw_Stage_Background) == 0x000008, "Wrong alignment on UDMBattleDraw_Stage_Background");
static_assert(sizeof(UDMBattleDraw_Stage_Background) == 0x000058, "Wrong size on UDMBattleDraw_Stage_Background");

// Class ATExt.DMBattleDraw_Effect_All
// 0x0000 (0x0058 - 0x0058)
class UDMBattleDraw_Effect_All final : public UDMBattleDraw_Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DMBattleDraw_Effect_All">();
	}
	static class UDMBattleDraw_Effect_All* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDMBattleDraw_Effect_All>();
	}
};
static_assert(alignof(UDMBattleDraw_Effect_All) == 0x000008, "Wrong alignment on UDMBattleDraw_Effect_All");
static_assert(sizeof(UDMBattleDraw_Effect_All) == 0x000058, "Wrong size on UDMBattleDraw_Effect_All");

// Class ATExt.DMBattleDraw_EnvActor_All
// 0x0000 (0x0058 - 0x0058)
class UDMBattleDraw_EnvActor_All final : public UDMBattleDraw_Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DMBattleDraw_EnvActor_All">();
	}
	static class UDMBattleDraw_EnvActor_All* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDMBattleDraw_EnvActor_All>();
	}
};
static_assert(alignof(UDMBattleDraw_EnvActor_All) == 0x000008, "Wrong alignment on UDMBattleDraw_EnvActor_All");
static_assert(sizeof(UDMBattleDraw_EnvActor_All) == 0x000058, "Wrong size on UDMBattleDraw_EnvActor_All");

// Class ATExt.ATDebugMenuEventHandlerDraw
// 0x0000 (0x0030 - 0x0030)
class UATDebugMenuEventHandlerDraw final : public UCFDebugMenuEventHandlerContentsFactory
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATDebugMenuEventHandlerDraw">();
	}
	static class UATDebugMenuEventHandlerDraw* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATDebugMenuEventHandlerDraw>();
	}
};
static_assert(alignof(UATDebugMenuEventHandlerDraw) == 0x000008, "Wrong alignment on UATDebugMenuEventHandlerDraw");
static_assert(sizeof(UATDebugMenuEventHandlerDraw) == 0x000030, "Wrong size on UATDebugMenuEventHandlerDraw");

// Class ATExt.DMBoolStopBattleTimer
// 0x0000 (0x0058 - 0x0058)
class UDMBoolStopBattleTimer final : public UCFDebugMenuEventHandlerBool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DMBoolStopBattleTimer">();
	}
	static class UDMBoolStopBattleTimer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDMBoolStopBattleTimer>();
	}
};
static_assert(alignof(UDMBoolStopBattleTimer) == 0x000008, "Wrong alignment on UDMBoolStopBattleTimer");
static_assert(sizeof(UDMBoolStopBattleTimer) == 0x000058, "Wrong size on UDMBoolStopBattleTimer");

// Class ATExt.ATSceneFreeArea34
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea34 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea34">();
	}
	static class UATSceneFreeArea34* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea34>();
	}
};
static_assert(alignof(UATSceneFreeArea34) == 0x000008, "Wrong alignment on UATSceneFreeArea34");
static_assert(sizeof(UATSceneFreeArea34) == 0x000048, "Wrong size on UATSceneFreeArea34");

// Class ATExt.DMBattlePlayer_NotDeath
// 0x0000 (0x0058 - 0x0058)
class UDMBattlePlayer_NotDeath final : public UCFDebugMenuEventHandlerBool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DMBattlePlayer_NotDeath">();
	}
	static class UDMBattlePlayer_NotDeath* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDMBattlePlayer_NotDeath>();
	}
};
static_assert(alignof(UDMBattlePlayer_NotDeath) == 0x000008, "Wrong alignment on UDMBattlePlayer_NotDeath");
static_assert(sizeof(UDMBattlePlayer_NotDeath) == 0x000058, "Wrong size on UDMBattlePlayer_NotDeath");

// Class ATExt.DMBattlePlayer_VisibleActionCancel
// 0x0000 (0x0058 - 0x0058)
class UDMBattlePlayer_VisibleActionCancel final : public UCFDebugMenuEventHandlerBool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DMBattlePlayer_VisibleActionCancel">();
	}
	static class UDMBattlePlayer_VisibleActionCancel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDMBattlePlayer_VisibleActionCancel>();
	}
};
static_assert(alignof(UDMBattlePlayer_VisibleActionCancel) == 0x000008, "Wrong alignment on UDMBattlePlayer_VisibleActionCancel");
static_assert(sizeof(UDMBattlePlayer_VisibleActionCancel) == 0x000058, "Wrong size on UDMBattlePlayer_VisibleActionCancel");

// Class ATExt.ATSceneDevelopmentAssaultTestRoot
// 0x0000 (0x0040 - 0x0040)
class UATSceneDevelopmentAssaultTestRoot final : public UCFScene
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneDevelopmentAssaultTestRoot">();
	}
	static class UATSceneDevelopmentAssaultTestRoot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneDevelopmentAssaultTestRoot>();
	}
};
static_assert(alignof(UATSceneDevelopmentAssaultTestRoot) == 0x000008, "Wrong alignment on UATSceneDevelopmentAssaultTestRoot");
static_assert(sizeof(UATSceneDevelopmentAssaultTestRoot) == 0x000040, "Wrong size on UATSceneDevelopmentAssaultTestRoot");

// Class ATExt.DMBattlePlayer_VisibleSuperArmor
// 0x0000 (0x0058 - 0x0058)
class UDMBattlePlayer_VisibleSuperArmor final : public UCFDebugMenuEventHandlerBool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DMBattlePlayer_VisibleSuperArmor">();
	}
	static class UDMBattlePlayer_VisibleSuperArmor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDMBattlePlayer_VisibleSuperArmor>();
	}
};
static_assert(alignof(UDMBattlePlayer_VisibleSuperArmor) == 0x000008, "Wrong alignment on UDMBattlePlayer_VisibleSuperArmor");
static_assert(sizeof(UDMBattlePlayer_VisibleSuperArmor) == 0x000058, "Wrong size on UDMBattlePlayer_VisibleSuperArmor");

// Class ATExt.DMChangePlayerControllerToAIAll
// 0x0000 (0x0038 - 0x0038)
class UDMChangePlayerControllerToAIAll final : public UCFDebugMenuEventHandlerTrigger
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DMChangePlayerControllerToAIAll">();
	}
	static class UDMChangePlayerControllerToAIAll* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDMChangePlayerControllerToAIAll>();
	}
};
static_assert(alignof(UDMChangePlayerControllerToAIAll) == 0x000008, "Wrong alignment on UDMChangePlayerControllerToAIAll");
static_assert(sizeof(UDMChangePlayerControllerToAIAll) == 0x000038, "Wrong size on UDMChangePlayerControllerToAIAll");

// Class ATExt.ATSceneFreeArea32
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea32 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea32">();
	}
	static class UATSceneFreeArea32* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea32>();
	}
};
static_assert(alignof(UATSceneFreeArea32) == 0x000008, "Wrong alignment on UATSceneFreeArea32");
static_assert(sizeof(UATSceneFreeArea32) == 0x000048, "Wrong size on UATSceneFreeArea32");

// Class ATExt.DMBattlePlayer_DispInfoAI
// 0x0000 (0x0058 - 0x0058)
class UDMBattlePlayer_DispInfoAI final : public UCFDebugMenuEventHandlerBool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DMBattlePlayer_DispInfoAI">();
	}
	static class UDMBattlePlayer_DispInfoAI* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDMBattlePlayer_DispInfoAI>();
	}
};
static_assert(alignof(UDMBattlePlayer_DispInfoAI) == 0x000008, "Wrong alignment on UDMBattlePlayer_DispInfoAI");
static_assert(sizeof(UDMBattlePlayer_DispInfoAI) == 0x000058, "Wrong size on UDMBattlePlayer_DispInfoAI");

// Class ATExt.ATScenePreLoad
// 0x0058 (0x0098 - 0x0040)
class UATScenePreLoad : public UCFScene
{
public:
	uint8                                         Pad_40[0x58];                                      // 0x0040(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATScenePreLoad">();
	}
	static class UATScenePreLoad* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATScenePreLoad>();
	}
};
static_assert(alignof(UATScenePreLoad) == 0x000008, "Wrong alignment on UATScenePreLoad");
static_assert(sizeof(UATScenePreLoad) == 0x000098, "Wrong size on UATScenePreLoad");

// Class ATExt.DMDebugDispPlayerEffect
// 0x0000 (0x0058 - 0x0058)
class UDMDebugDispPlayerEffect final : public UCFDebugMenuEventHandlerBool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DMDebugDispPlayerEffect">();
	}
	static class UDMDebugDispPlayerEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDMDebugDispPlayerEffect>();
	}
};
static_assert(alignof(UDMDebugDispPlayerEffect) == 0x000008, "Wrong alignment on UDMDebugDispPlayerEffect");
static_assert(sizeof(UDMDebugDispPlayerEffect) == 0x000058, "Wrong size on UDMDebugDispPlayerEffect");

// Class ATExt.DMDebugDelayDamage
// 0x0000 (0x0058 - 0x0058)
class UDMDebugDelayDamage final : public UCFDebugMenuEventHandlerBool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DMDebugDelayDamage">();
	}
	static class UDMDebugDelayDamage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDMDebugDelayDamage>();
	}
};
static_assert(alignof(UDMDebugDelayDamage) == 0x000008, "Wrong alignment on UDMDebugDelayDamage");
static_assert(sizeof(UDMDebugDelayDamage) == 0x000058, "Wrong size on UDMDebugDelayDamage");

// Class ATExt.ATSceneDevelopmentMemoryCheckPreLoad
// 0x0000 (0x0098 - 0x0098)
class UATSceneDevelopmentMemoryCheckPreLoad final : public UATScenePreLoad
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneDevelopmentMemoryCheckPreLoad">();
	}
	static class UATSceneDevelopmentMemoryCheckPreLoad* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneDevelopmentMemoryCheckPreLoad>();
	}
};
static_assert(alignof(UATSceneDevelopmentMemoryCheckPreLoad) == 0x000008, "Wrong alignment on UATSceneDevelopmentMemoryCheckPreLoad");
static_assert(sizeof(UATSceneDevelopmentMemoryCheckPreLoad) == 0x000098, "Wrong size on UATSceneDevelopmentMemoryCheckPreLoad");

// Class ATExt.ATDebugMenuEventHandlerBattlePlayer
// 0x0000 (0x0030 - 0x0030)
class UATDebugMenuEventHandlerBattlePlayer final : public UCFDebugMenuEventHandlerContentsFactory
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATDebugMenuEventHandlerBattlePlayer">();
	}
	static class UATDebugMenuEventHandlerBattlePlayer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATDebugMenuEventHandlerBattlePlayer>();
	}
};
static_assert(alignof(UATDebugMenuEventHandlerBattlePlayer) == 0x000008, "Wrong alignment on UATDebugMenuEventHandlerBattlePlayer");
static_assert(sizeof(UATDebugMenuEventHandlerBattlePlayer) == 0x000030, "Wrong size on UATDebugMenuEventHandlerBattlePlayer");

// Class ATExt.DMBoolRandomPadEnable
// 0x0000 (0x0058 - 0x0058)
class UDMBoolRandomPadEnable final : public UCFDebugMenuEventHandlerBool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DMBoolRandomPadEnable">();
	}
	static class UDMBoolRandomPadEnable* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDMBoolRandomPadEnable>();
	}
};
static_assert(alignof(UDMBoolRandomPadEnable) == 0x000008, "Wrong alignment on UDMBoolRandomPadEnable");
static_assert(sizeof(UDMBoolRandomPadEnable) == 0x000058, "Wrong size on UDMBoolRandomPadEnable");

// Class ATExt.ATSceneFreeLoadBase
// 0x0080 (0x00C0 - 0x0040)
class UATSceneFreeLoadBase : public UCFScene
{
public:
	uint8                                         Pad_40[0x80];                                      // 0x0040(0x0080)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnQuestEventBegin(class FName PhaseID, EQUEST_PHASE_TYPE Type);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeLoadBase">();
	}
	static class UATSceneFreeLoadBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeLoadBase>();
	}
};
static_assert(alignof(UATSceneFreeLoadBase) == 0x000008, "Wrong alignment on UATSceneFreeLoadBase");
static_assert(sizeof(UATSceneFreeLoadBase) == 0x0000C0, "Wrong size on UATSceneFreeLoadBase");

// Class ATExt.ATSceneDevelopmentAssetCheckLoad
// 0x0000 (0x00C0 - 0x00C0)
class UATSceneDevelopmentAssetCheckLoad final : public UATSceneFreeLoadBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneDevelopmentAssetCheckLoad">();
	}
	static class UATSceneDevelopmentAssetCheckLoad* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneDevelopmentAssetCheckLoad>();
	}
};
static_assert(alignof(UATSceneDevelopmentAssetCheckLoad) == 0x000008, "Wrong alignment on UATSceneDevelopmentAssetCheckLoad");
static_assert(sizeof(UATSceneDevelopmentAssetCheckLoad) == 0x0000C0, "Wrong size on UATSceneDevelopmentAssetCheckLoad");

// Class ATExt.ATDebugMenuEventHandlerRandomPadSetting
// 0x0000 (0x0030 - 0x0030)
class UATDebugMenuEventHandlerRandomPadSetting final : public UCFDebugMenuEventHandlerContentsFactory
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATDebugMenuEventHandlerRandomPadSetting">();
	}
	static class UATDebugMenuEventHandlerRandomPadSetting* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATDebugMenuEventHandlerRandomPadSetting>();
	}
};
static_assert(alignof(UATDebugMenuEventHandlerRandomPadSetting) == 0x000008, "Wrong alignment on UATDebugMenuEventHandlerRandomPadSetting");
static_assert(sizeof(UATDebugMenuEventHandlerRandomPadSetting) == 0x000030, "Wrong size on UATDebugMenuEventHandlerRandomPadSetting");

// Class ATExt.ATDebugMenuEventHandlerBattleDebugDisp
// 0x0000 (0x0030 - 0x0030)
class UATDebugMenuEventHandlerBattleDebugDisp final : public UCFDebugMenuEventHandlerContentsFactory
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATDebugMenuEventHandlerBattleDebugDisp">();
	}
	static class UATDebugMenuEventHandlerBattleDebugDisp* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATDebugMenuEventHandlerBattleDebugDisp>();
	}
};
static_assert(alignof(UATDebugMenuEventHandlerBattleDebugDisp) == 0x000008, "Wrong alignment on UATDebugMenuEventHandlerBattleDebugDisp");
static_assert(sizeof(UATDebugMenuEventHandlerBattleDebugDisp) == 0x000030, "Wrong size on UATDebugMenuEventHandlerBattleDebugDisp");

// Class ATExt.ATSceneDevelopmentMemoryCheckFree
// 0x0000 (0x0058 - 0x0058)
class UATSceneDevelopmentMemoryCheckFree final : public UATSceneFree
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneDevelopmentMemoryCheckFree">();
	}
	static class UATSceneDevelopmentMemoryCheckFree* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneDevelopmentMemoryCheckFree>();
	}
};
static_assert(alignof(UATSceneDevelopmentMemoryCheckFree) == 0x000008, "Wrong alignment on UATSceneDevelopmentMemoryCheckFree");
static_assert(sizeof(UATSceneDevelopmentMemoryCheckFree) == 0x000058, "Wrong size on UATSceneDevelopmentMemoryCheckFree");

// Class ATExt.DMDebugHud_DebugInfo
// 0x0000 (0x0058 - 0x0058)
class UDMDebugHud_DebugInfo final : public UCFDebugMenuEventHandlerBool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DMDebugHud_DebugInfo">();
	}
	static class UDMDebugHud_DebugInfo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDMDebugHud_DebugInfo>();
	}
};
static_assert(alignof(UDMDebugHud_DebugInfo) == 0x000008, "Wrong alignment on UDMDebugHud_DebugInfo");
static_assert(sizeof(UDMDebugHud_DebugInfo) == 0x000058, "Wrong size on UDMDebugHud_DebugInfo");

// Class ATExt.ATSceneDevelopmentSoundTestCRI
// 0x0000 (0x0040 - 0x0040)
class UATSceneDevelopmentSoundTestCRI final : public UCFScene
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneDevelopmentSoundTestCRI">();
	}
	static class UATSceneDevelopmentSoundTestCRI* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneDevelopmentSoundTestCRI>();
	}
};
static_assert(alignof(UATSceneDevelopmentSoundTestCRI) == 0x000008, "Wrong alignment on UATSceneDevelopmentSoundTestCRI");
static_assert(sizeof(UATSceneDevelopmentSoundTestCRI) == 0x000040, "Wrong size on UATSceneDevelopmentSoundTestCRI");

// Class ATExt.ATDebugMenuEventHandlerDebugHudSetting
// 0x0000 (0x0030 - 0x0030)
class UATDebugMenuEventHandlerDebugHudSetting final : public UCFDebugMenuEventHandlerContentsFactory
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATDebugMenuEventHandlerDebugHudSetting">();
	}
	static class UATDebugMenuEventHandlerDebugHudSetting* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATDebugMenuEventHandlerDebugHudSetting>();
	}
};
static_assert(alignof(UATDebugMenuEventHandlerDebugHudSetting) == 0x000008, "Wrong alignment on UATDebugMenuEventHandlerDebugHudSetting");
static_assert(sizeof(UATDebugMenuEventHandlerDebugHudSetting) == 0x000030, "Wrong size on UATDebugMenuEventHandlerDebugHudSetting");

// Class ATExt.ATEventBattle0103002MainPhase
// 0x0010 (0x0098 - 0x0088)
class UATEventBattle0103002MainPhase final : public UATGeneralBattleMainPhase
{
public:
	uint8                                         Pad_88[0x10];                                      // 0x0088(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnFaceActionEvent(const struct FEventParam& EvParam);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattle0103002MainPhase">();
	}
	static class UATEventBattle0103002MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATEventBattle0103002MainPhase>();
	}
};
static_assert(alignof(UATEventBattle0103002MainPhase) == 0x000008, "Wrong alignment on UATEventBattle0103002MainPhase");
static_assert(sizeof(UATEventBattle0103002MainPhase) == 0x000098, "Wrong size on UATEventBattle0103002MainPhase");

// Class ATExt.ATSceneDevelopmentMessageTest
// 0x0000 (0x0040 - 0x0040)
class UATSceneDevelopmentMessageTest final : public UCFScene
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneDevelopmentMessageTest">();
	}
	static class UATSceneDevelopmentMessageTest* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneDevelopmentMessageTest>();
	}
};
static_assert(alignof(UATSceneDevelopmentMessageTest) == 0x000008, "Wrong alignment on UATSceneDevelopmentMessageTest");
static_assert(sizeof(UATSceneDevelopmentMessageTest) == 0x000040, "Wrong size on UATSceneDevelopmentMessageTest");

// Class ATExt.ATEventBattle0103002RootManager
// 0x0010 (0x03F8 - 0x03E8)
class AATEventBattle0103002RootManager final : public AATEventBattleRootManagerBase
{
public:
	float                                         FinishBlowLifeRate;                                // 0x03E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   FinishBlowDemoId;                                  // 0x03F0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattle0103002RootManager">();
	}
	static class AATEventBattle0103002RootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATEventBattle0103002RootManager>();
	}
};
static_assert(alignof(AATEventBattle0103002RootManager) == 0x000008, "Wrong alignment on AATEventBattle0103002RootManager");
static_assert(sizeof(AATEventBattle0103002RootManager) == 0x0003F8, "Wrong size on AATEventBattle0103002RootManager");
static_assert(offsetof(AATEventBattle0103002RootManager, FinishBlowLifeRate) == 0x0003E8, "Member 'AATEventBattle0103002RootManager::FinishBlowLifeRate' has a wrong offset!");
static_assert(offsetof(AATEventBattle0103002RootManager, FinishBlowDemoId) == 0x0003F0, "Member 'AATEventBattle0103002RootManager::FinishBlowDemoId' has a wrong offset!");

// Class ATExt.ATSceneDevelopmentAssetCheckRoot
// 0x0000 (0x0040 - 0x0040)
class UATSceneDevelopmentAssetCheckRoot final : public UCFScene
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneDevelopmentAssetCheckRoot">();
	}
	static class UATSceneDevelopmentAssetCheckRoot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneDevelopmentAssetCheckRoot>();
	}
};
static_assert(alignof(UATSceneDevelopmentAssetCheckRoot) == 0x000008, "Wrong alignment on UATSceneDevelopmentAssetCheckRoot");
static_assert(sizeof(UATSceneDevelopmentAssetCheckRoot) == 0x000040, "Wrong size on UATSceneDevelopmentAssetCheckRoot");

// Class ATExt.ATEventBattle0300080MainPhase
// 0x0000 (0x0088 - 0x0088)
class UATEventBattle0300080MainPhase final : public UATGeneralBattleMainPhase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattle0300080MainPhase">();
	}
	static class UATEventBattle0300080MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATEventBattle0300080MainPhase>();
	}
};
static_assert(alignof(UATEventBattle0300080MainPhase) == 0x000008, "Wrong alignment on UATEventBattle0300080MainPhase");
static_assert(sizeof(UATEventBattle0300080MainPhase) == 0x000088, "Wrong size on UATEventBattle0300080MainPhase");

// Class ATExt.ATSceneDevelopmentQuestTestRoot
// 0x0000 (0x0040 - 0x0040)
class UATSceneDevelopmentQuestTestRoot final : public UCFScene
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneDevelopmentQuestTestRoot">();
	}
	static class UATSceneDevelopmentQuestTestRoot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneDevelopmentQuestTestRoot>();
	}
};
static_assert(alignof(UATSceneDevelopmentQuestTestRoot) == 0x000008, "Wrong alignment on UATSceneDevelopmentQuestTestRoot");
static_assert(sizeof(UATSceneDevelopmentQuestTestRoot) == 0x000040, "Wrong size on UATSceneDevelopmentQuestTestRoot");

// Class ATExt.ATEventBattle25MainPhase
// 0x0008 (0x0090 - 0x0088)
class UATEventBattle25MainPhase final : public UATGeneralBattleMainPhase
{
public:
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattle25MainPhase">();
	}
	static class UATEventBattle25MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATEventBattle25MainPhase>();
	}
};
static_assert(alignof(UATEventBattle25MainPhase) == 0x000008, "Wrong alignment on UATEventBattle25MainPhase");
static_assert(sizeof(UATEventBattle25MainPhase) == 0x000090, "Wrong size on UATEventBattle25MainPhase");

// Class ATExt.ATSceneFreeArea02
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea02 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea02">();
	}
	static class UATSceneFreeArea02* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea02>();
	}
};
static_assert(alignof(UATSceneFreeArea02) == 0x000008, "Wrong alignment on UATSceneFreeArea02");
static_assert(sizeof(UATSceneFreeArea02) == 0x000048, "Wrong size on UATSceneFreeArea02");

// Class ATExt.ATEventBattle41MainPhase
// 0x0060 (0x0090 - 0x0030)
class UATEventBattle41MainPhase final : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x60];                                      // 0x0030(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattle41MainPhase">();
	}
	static class UATEventBattle41MainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATEventBattle41MainPhase>();
	}
};
static_assert(alignof(UATEventBattle41MainPhase) == 0x000008, "Wrong alignment on UATEventBattle41MainPhase");
static_assert(sizeof(UATEventBattle41MainPhase) == 0x000090, "Wrong size on UATEventBattle41MainPhase");

// Class ATExt.ATEventBattle41RootManager
// 0x0008 (0x03F0 - 0x03E8)
class AATEventBattle41RootManager final : public AATEventBattleRootManagerBase
{
public:
	float                                         HeatupValue;                                       // 0x03E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattle41RootManager">();
	}
	static class AATEventBattle41RootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATEventBattle41RootManager>();
	}
};
static_assert(alignof(AATEventBattle41RootManager) == 0x000008, "Wrong alignment on AATEventBattle41RootManager");
static_assert(sizeof(AATEventBattle41RootManager) == 0x0003F0, "Wrong size on AATEventBattle41RootManager");
static_assert(offsetof(AATEventBattle41RootManager, HeatupValue) == 0x0003E8, "Member 'AATEventBattle41RootManager::HeatupValue' has a wrong offset!");

// Class ATExt.ATSceneDevelopmentTestBattleLoad
// 0x0000 (0x00C0 - 0x00C0)
class UATSceneDevelopmentTestBattleLoad final : public UATSceneFreeLoadBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneDevelopmentTestBattleLoad">();
	}
	static class UATSceneDevelopmentTestBattleLoad* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneDevelopmentTestBattleLoad>();
	}
};
static_assert(alignof(UATSceneDevelopmentTestBattleLoad) == 0x000008, "Wrong alignment on UATSceneDevelopmentTestBattleLoad");
static_assert(sizeof(UATSceneDevelopmentTestBattleLoad) == 0x0000C0, "Wrong size on UATSceneDevelopmentTestBattleLoad");

// Class ATExt.ATEventBattleAccessor
// 0x25690 (0x256B8 - 0x0028)
class UATEventBattleAccessor final : public UObject
{
public:
	uint8                                         Pad_28[0xF8];                                      // 0x0028(0x00F8)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BattleName;                                        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_128[0x254B0];                                  // 0x0128(0x254B0)(Fixing Size After Last Property [ Dumper-7 ])
	class UATDataAssetEventBattleAsyncLoad*       BattleLoader;                                      // 0x255D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UATEventBattleMobLoader*                BattleMobLoader;                                   // 0x255E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_255E8[0xC9];                                   // 0x255E8(0x00C9)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bRetryBattle;                                      // 0x256B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_256B2[0x6];                                    // 0x256B2(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleAccessor">();
	}
	static class UATEventBattleAccessor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATEventBattleAccessor>();
	}
};
static_assert(alignof(UATEventBattleAccessor) == 0x000008, "Wrong alignment on UATEventBattleAccessor");
static_assert(sizeof(UATEventBattleAccessor) == 0x0256B8, "Wrong size on UATEventBattleAccessor");
static_assert(offsetof(UATEventBattleAccessor, BattleName) == 0x000120, "Member 'UATEventBattleAccessor::BattleName' has a wrong offset!");
static_assert(offsetof(UATEventBattleAccessor, BattleLoader) == 0x0255D8, "Member 'UATEventBattleAccessor::BattleLoader' has a wrong offset!");
static_assert(offsetof(UATEventBattleAccessor, BattleMobLoader) == 0x0255E0, "Member 'UATEventBattleAccessor::BattleMobLoader' has a wrong offset!");
static_assert(offsetof(UATEventBattleAccessor, bRetryBattle) == 0x0256B1, "Member 'UATEventBattleAccessor::bRetryBattle' has a wrong offset!");

// Class ATExt.ATEventBattleAfterAction
// 0x0000 (0x0028 - 0x0028)
class UATEventBattleAfterAction final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleAfterAction">();
	}
	static class UATEventBattleAfterAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATEventBattleAfterAction>();
	}
};
static_assert(alignof(UATEventBattleAfterAction) == 0x000008, "Wrong alignment on UATEventBattleAfterAction");
static_assert(sizeof(UATEventBattleAfterAction) == 0x000028, "Wrong size on UATEventBattleAfterAction");

// Class ATExt.ATSceneDevelopmentQuestTestLoad
// 0x0000 (0x00C0 - 0x00C0)
class UATSceneDevelopmentQuestTestLoad final : public UATSceneFreeLoadBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneDevelopmentQuestTestLoad">();
	}
	static class UATSceneDevelopmentQuestTestLoad* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneDevelopmentQuestTestLoad>();
	}
};
static_assert(alignof(UATSceneDevelopmentQuestTestLoad) == 0x000008, "Wrong alignment on UATSceneDevelopmentQuestTestLoad");
static_assert(sizeof(UATSceneDevelopmentQuestTestLoad) == 0x0000C0, "Wrong size on UATSceneDevelopmentQuestTestLoad");

// Class ATExt.ATEventBattleB0400010MainPhase01
// 0x0020 (0x00A8 - 0x0088)
class UATEventBattleB0400010MainPhase01 final : public UATGeneralBattleMainPhase
{
public:
	uint8                                         Pad_88[0x20];                                      // 0x0088(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnFaceActionEvent(const struct FEventParam& EvParam);
	void OnVisionBegin(const struct FEventParam& EvParam);
	void OnVisionEnd(const struct FEventParam& EvParam);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleB0400010MainPhase01">();
	}
	static class UATEventBattleB0400010MainPhase01* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATEventBattleB0400010MainPhase01>();
	}
};
static_assert(alignof(UATEventBattleB0400010MainPhase01) == 0x000008, "Wrong alignment on UATEventBattleB0400010MainPhase01");
static_assert(sizeof(UATEventBattleB0400010MainPhase01) == 0x0000A8, "Wrong size on UATEventBattleB0400010MainPhase01");

// Class ATExt.ATEventBattleB0400010RootManager
// 0x0028 (0x0410 - 0x03E8)
class AATEventBattleB0400010RootManager final : public AATEventBattleRootManagerBase
{
public:
	float                                         FinishBlowLifeRate;                                // 0x03E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   FinishBlowDemoId;                                  // 0x03F0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         FinishBlowDelayTime;                               // 0x03F8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         PlayerTeleport;                                    // 0x03FC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UATEventBattleVision>       VisionClass;                                       // 0x0400(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UATEventBattleVision*                   VisionManager;                                     // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleB0400010RootManager">();
	}
	static class AATEventBattleB0400010RootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATEventBattleB0400010RootManager>();
	}
};
static_assert(alignof(AATEventBattleB0400010RootManager) == 0x000008, "Wrong alignment on AATEventBattleB0400010RootManager");
static_assert(sizeof(AATEventBattleB0400010RootManager) == 0x000410, "Wrong size on AATEventBattleB0400010RootManager");
static_assert(offsetof(AATEventBattleB0400010RootManager, FinishBlowLifeRate) == 0x0003E8, "Member 'AATEventBattleB0400010RootManager::FinishBlowLifeRate' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0400010RootManager, FinishBlowDemoId) == 0x0003F0, "Member 'AATEventBattleB0400010RootManager::FinishBlowDemoId' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0400010RootManager, FinishBlowDelayTime) == 0x0003F8, "Member 'AATEventBattleB0400010RootManager::FinishBlowDelayTime' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0400010RootManager, PlayerTeleport) == 0x0003FC, "Member 'AATEventBattleB0400010RootManager::PlayerTeleport' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0400010RootManager, VisionClass) == 0x000400, "Member 'AATEventBattleB0400010RootManager::VisionClass' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0400010RootManager, VisionManager) == 0x000408, "Member 'AATEventBattleB0400010RootManager::VisionManager' has a wrong offset!");

// Class ATExt.ATEventBattleB0500010CMainPhase01
// 0x0010 (0x00A0 - 0x0090)
class UATEventBattleB0500010CMainPhase01 final : public UATTournamentBattleMainPhase
{
public:
	uint8                                         Pad_90[0x10];                                      // 0x0090(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnFaceActionEvent(const struct FEventParam& EvParam);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleB0500010CMainPhase01">();
	}
	static class UATEventBattleB0500010CMainPhase01* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATEventBattleB0500010CMainPhase01>();
	}
};
static_assert(alignof(UATEventBattleB0500010CMainPhase01) == 0x000008, "Wrong alignment on UATEventBattleB0500010CMainPhase01");
static_assert(sizeof(UATEventBattleB0500010CMainPhase01) == 0x0000A0, "Wrong size on UATEventBattleB0500010CMainPhase01");

// Class ATExt.ATEventBattleB0500010CRootManager
// 0x0018 (0x04A8 - 0x0490)
class AATEventBattleB0500010CRootManager final : public AATTournamentBattleRootManager
{
public:
	float                                         FinishBlowLifeRate;                                // 0x0490(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_494[0x4];                                      // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   FinishBlowDemoId;                                  // 0x0498(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         FinishBlowDelayTime;                               // 0x04A0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         PlayerTeleport;                                    // 0x04A4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleB0500010CRootManager">();
	}
	static class AATEventBattleB0500010CRootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATEventBattleB0500010CRootManager>();
	}
};
static_assert(alignof(AATEventBattleB0500010CRootManager) == 0x000008, "Wrong alignment on AATEventBattleB0500010CRootManager");
static_assert(sizeof(AATEventBattleB0500010CRootManager) == 0x0004A8, "Wrong size on AATEventBattleB0500010CRootManager");
static_assert(offsetof(AATEventBattleB0500010CRootManager, FinishBlowLifeRate) == 0x000490, "Member 'AATEventBattleB0500010CRootManager::FinishBlowLifeRate' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0500010CRootManager, FinishBlowDemoId) == 0x000498, "Member 'AATEventBattleB0500010CRootManager::FinishBlowDemoId' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0500010CRootManager, FinishBlowDelayTime) == 0x0004A0, "Member 'AATEventBattleB0500010CRootManager::FinishBlowDelayTime' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0500010CRootManager, PlayerTeleport) == 0x0004A4, "Member 'AATEventBattleB0500010CRootManager::PlayerTeleport' has a wrong offset!");

// Class ATExt.ATTournamentBattleSetupPhase
// 0x0000 (0x01D0 - 0x01D0)
class UATTournamentBattleSetupPhase : public UATGeneralBattleSetUpPhase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATTournamentBattleSetupPhase">();
	}
	static class UATTournamentBattleSetupPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATTournamentBattleSetupPhase>();
	}
};
static_assert(alignof(UATTournamentBattleSetupPhase) == 0x000008, "Wrong alignment on UATTournamentBattleSetupPhase");
static_assert(sizeof(UATTournamentBattleSetupPhase) == 0x0001D0, "Wrong size on UATTournamentBattleSetupPhase");

// Class ATExt.ATEventBattleB0500010CSetupPhase
// 0x0000 (0x01D0 - 0x01D0)
class UATEventBattleB0500010CSetupPhase final : public UATTournamentBattleSetupPhase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleB0500010CSetupPhase">();
	}
	static class UATEventBattleB0500010CSetupPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATEventBattleB0500010CSetupPhase>();
	}
};
static_assert(alignof(UATEventBattleB0500010CSetupPhase) == 0x000008, "Wrong alignment on UATEventBattleB0500010CSetupPhase");
static_assert(sizeof(UATEventBattleB0500010CSetupPhase) == 0x0001D0, "Wrong size on UATEventBattleB0500010CSetupPhase");

// Class ATExt.ATSceneFreeArea08
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea08 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea08">();
	}
	static class UATSceneFreeArea08* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea08>();
	}
};
static_assert(alignof(UATSceneFreeArea08) == 0x000008, "Wrong alignment on UATSceneFreeArea08");
static_assert(sizeof(UATSceneFreeArea08) == 0x000048, "Wrong size on UATSceneFreeArea08");

// Class ATExt.ATEventBattleB0600010AMainPhase01
// 0x0038 (0x00C8 - 0x0090)
class UATEventBattleB0600010AMainPhase01 final : public UATTournamentBattleMainPhase
{
public:
	uint8                                         Pad_90[0x38];                                      // 0x0090(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnQteActionEvent(const struct FEventParam& EvParam);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleB0600010AMainPhase01">();
	}
	static class UATEventBattleB0600010AMainPhase01* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATEventBattleB0600010AMainPhase01>();
	}
};
static_assert(alignof(UATEventBattleB0600010AMainPhase01) == 0x000008, "Wrong alignment on UATEventBattleB0600010AMainPhase01");
static_assert(sizeof(UATEventBattleB0600010AMainPhase01) == 0x0000C8, "Wrong size on UATEventBattleB0600010AMainPhase01");

// Class ATExt.ATEventBattleB0600010BRootManager
// 0x0018 (0x04A8 - 0x0490)
class AATEventBattleB0600010BRootManager final : public AATTournamentBattleRootManager
{
public:
	float                                         FinishBlowLifeRate;                                // 0x0490(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_494[0x4];                                      // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   FinishBlowDemoId;                                  // 0x0498(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         FinishBlowDelayTime;                               // 0x04A0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4A4[0x4];                                      // 0x04A4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleB0600010BRootManager">();
	}
	static class AATEventBattleB0600010BRootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATEventBattleB0600010BRootManager>();
	}
};
static_assert(alignof(AATEventBattleB0600010BRootManager) == 0x000008, "Wrong alignment on AATEventBattleB0600010BRootManager");
static_assert(sizeof(AATEventBattleB0600010BRootManager) == 0x0004A8, "Wrong size on AATEventBattleB0600010BRootManager");
static_assert(offsetof(AATEventBattleB0600010BRootManager, FinishBlowLifeRate) == 0x000490, "Member 'AATEventBattleB0600010BRootManager::FinishBlowLifeRate' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0600010BRootManager, FinishBlowDemoId) == 0x000498, "Member 'AATEventBattleB0600010BRootManager::FinishBlowDemoId' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0600010BRootManager, FinishBlowDelayTime) == 0x0004A0, "Member 'AATEventBattleB0600010BRootManager::FinishBlowDelayTime' has a wrong offset!");

// Class ATExt.ATEventBattleB0600020RootManager
// 0x0028 (0x0410 - 0x03E8)
class AATEventBattleB0600020RootManager final : public AATEventBattleRootManagerBase
{
public:
	uint8                                         Pad_3E8[0x8];                                      // 0x03E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           EventBattleLevel;                                  // 0x03F0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<EBgmCode>                              EventBattleBGM;                                    // 0x0400(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleB0600020RootManager">();
	}
	static class AATEventBattleB0600020RootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATEventBattleB0600020RootManager>();
	}
};
static_assert(alignof(AATEventBattleB0600020RootManager) == 0x000008, "Wrong alignment on AATEventBattleB0600020RootManager");
static_assert(sizeof(AATEventBattleB0600020RootManager) == 0x000410, "Wrong size on AATEventBattleB0600020RootManager");
static_assert(offsetof(AATEventBattleB0600020RootManager, EventBattleLevel) == 0x0003F0, "Member 'AATEventBattleB0600020RootManager::EventBattleLevel' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0600020RootManager, EventBattleBGM) == 0x000400, "Member 'AATEventBattleB0600020RootManager::EventBattleBGM' has a wrong offset!");

// Class ATExt.ATSceneFreeArea06
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea06 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea06">();
	}
	static class UATSceneFreeArea06* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea06>();
	}
};
static_assert(alignof(UATSceneFreeArea06) == 0x000008, "Wrong alignment on UATSceneFreeArea06");
static_assert(sizeof(UATSceneFreeArea06) == 0x000048, "Wrong size on UATSceneFreeArea06");

// Class ATExt.ATGeneralBattleSettlePhase
// 0x00B8 (0x00E8 - 0x0030)
class UATGeneralBattleSettlePhase : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0xA8];                                      // 0x0030(0x00A8)(Fixing Size After Last Property [ Dumper-7 ])
	class UATGroupBattleResult*                   GBResult;                                          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E0[0x8];                                       // 0x00E0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnEndBattleHUD();
	void OnEndResult();
	void OnEndWarning();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATGeneralBattleSettlePhase">();
	}
	static class UATGeneralBattleSettlePhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATGeneralBattleSettlePhase>();
	}
};
static_assert(alignof(UATGeneralBattleSettlePhase) == 0x000008, "Wrong alignment on UATGeneralBattleSettlePhase");
static_assert(sizeof(UATGeneralBattleSettlePhase) == 0x0000E8, "Wrong size on UATGeneralBattleSettlePhase");
static_assert(offsetof(UATGeneralBattleSettlePhase, GBResult) == 0x0000D8, "Member 'UATGeneralBattleSettlePhase::GBResult' has a wrong offset!");

// Class ATExt.ATEventBattleB0600020SettlePhase
// 0x0008 (0x00F0 - 0x00E8)
class UATEventBattleB0600020SettlePhase final : public UATGeneralBattleSettlePhase
{
public:
	uint8                                         Pad_E8[0x8];                                       // 0x00E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleB0600020SettlePhase">();
	}
	static class UATEventBattleB0600020SettlePhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATEventBattleB0600020SettlePhase>();
	}
};
static_assert(alignof(UATEventBattleB0600020SettlePhase) == 0x000008, "Wrong alignment on UATEventBattleB0600020SettlePhase");
static_assert(sizeof(UATEventBattleB0600020SettlePhase) == 0x0000F0, "Wrong size on UATEventBattleB0600020SettlePhase");

// Class ATExt.ATSceneFreeArea16
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea16 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea16">();
	}
	static class UATSceneFreeArea16* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea16>();
	}
};
static_assert(alignof(UATSceneFreeArea16) == 0x000008, "Wrong alignment on UATSceneFreeArea16");
static_assert(sizeof(UATSceneFreeArea16) == 0x000048, "Wrong size on UATSceneFreeArea16");

// Class ATExt.ATEventBattleB0600020SetUpPhase
// 0x0010 (0x01E0 - 0x01D0)
class UATEventBattleB0600020SetUpPhase final : public UATGeneralBattleSetUpPhase
{
public:
	uint8                                         Pad_1D0[0x10];                                     // 0x01D0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleB0600020SetUpPhase">();
	}
	static class UATEventBattleB0600020SetUpPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATEventBattleB0600020SetUpPhase>();
	}
};
static_assert(alignof(UATEventBattleB0600020SetUpPhase) == 0x000008, "Wrong alignment on UATEventBattleB0600020SetUpPhase");
static_assert(sizeof(UATEventBattleB0600020SetUpPhase) == 0x0001E0, "Wrong size on UATEventBattleB0600020SetUpPhase");

// Class ATExt.ATEventBattleB0600030BFlashBackManager
// 0x0048 (0x0070 - 0x0028)
class UATEventBattleB0600030BFlashBackManager final : public UObject
{
public:
	TArray<struct FFlashBackParam>                FlashBackParams;                                   // 0x0028(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSubclassOf<class AATFlashBackEffect>         FlashBackEffectClass;                              // 0x0038(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DemoEndFadeInTime;                                 // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AfterTeleportWaitTime;                             // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Last_FlashBackCrossTalk_FlashBack1;                // 0x0048(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Last_FlashBackCrossTalk;                           // 0x0050(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UseHeightFix;                                      // 0x0058(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FlashBackTeleportHeight;                           // 0x005C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_60[0x8];                                       // 0x0060(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class AATFlashBackEffect*                     FlashBackEffect;                                   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleB0600030BFlashBackManager">();
	}
	static class UATEventBattleB0600030BFlashBackManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATEventBattleB0600030BFlashBackManager>();
	}
};
static_assert(alignof(UATEventBattleB0600030BFlashBackManager) == 0x000008, "Wrong alignment on UATEventBattleB0600030BFlashBackManager");
static_assert(sizeof(UATEventBattleB0600030BFlashBackManager) == 0x000070, "Wrong size on UATEventBattleB0600030BFlashBackManager");
static_assert(offsetof(UATEventBattleB0600030BFlashBackManager, FlashBackParams) == 0x000028, "Member 'UATEventBattleB0600030BFlashBackManager::FlashBackParams' has a wrong offset!");
static_assert(offsetof(UATEventBattleB0600030BFlashBackManager, FlashBackEffectClass) == 0x000038, "Member 'UATEventBattleB0600030BFlashBackManager::FlashBackEffectClass' has a wrong offset!");
static_assert(offsetof(UATEventBattleB0600030BFlashBackManager, DemoEndFadeInTime) == 0x000040, "Member 'UATEventBattleB0600030BFlashBackManager::DemoEndFadeInTime' has a wrong offset!");
static_assert(offsetof(UATEventBattleB0600030BFlashBackManager, AfterTeleportWaitTime) == 0x000044, "Member 'UATEventBattleB0600030BFlashBackManager::AfterTeleportWaitTime' has a wrong offset!");
static_assert(offsetof(UATEventBattleB0600030BFlashBackManager, Last_FlashBackCrossTalk_FlashBack1) == 0x000048, "Member 'UATEventBattleB0600030BFlashBackManager::Last_FlashBackCrossTalk_FlashBack1' has a wrong offset!");
static_assert(offsetof(UATEventBattleB0600030BFlashBackManager, Last_FlashBackCrossTalk) == 0x000050, "Member 'UATEventBattleB0600030BFlashBackManager::Last_FlashBackCrossTalk' has a wrong offset!");
static_assert(offsetof(UATEventBattleB0600030BFlashBackManager, UseHeightFix) == 0x000058, "Member 'UATEventBattleB0600030BFlashBackManager::UseHeightFix' has a wrong offset!");
static_assert(offsetof(UATEventBattleB0600030BFlashBackManager, FlashBackTeleportHeight) == 0x00005C, "Member 'UATEventBattleB0600030BFlashBackManager::FlashBackTeleportHeight' has a wrong offset!");
static_assert(offsetof(UATEventBattleB0600030BFlashBackManager, FlashBackEffect) == 0x000068, "Member 'UATEventBattleB0600030BFlashBackManager::FlashBackEffect' has a wrong offset!");

// Class ATExt.ATSceneFreeArea26
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea26 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea26">();
	}
	static class UATSceneFreeArea26* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea26>();
	}
};
static_assert(alignof(UATSceneFreeArea26) == 0x000008, "Wrong alignment on UATSceneFreeArea26");
static_assert(sizeof(UATSceneFreeArea26) == 0x000048, "Wrong size on UATSceneFreeArea26");

// Class ATExt.ATEventBattleB0600030BMainPhase01
// 0x00C0 (0x0148 - 0x0088)
class UATEventBattleB0600030BMainPhase01 final : public UATGeneralBattleMainPhase
{
public:
	uint8                                         Pad_88[0xC0];                                      // 0x0088(0x00C0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnFaceActionEvent(const struct FEventParam& EvParam);
	void OnRushQteEndEvent(const struct FEventParam& EvParam);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleB0600030BMainPhase01">();
	}
	static class UATEventBattleB0600030BMainPhase01* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATEventBattleB0600030BMainPhase01>();
	}
};
static_assert(alignof(UATEventBattleB0600030BMainPhase01) == 0x000008, "Wrong alignment on UATEventBattleB0600030BMainPhase01");
static_assert(sizeof(UATEventBattleB0600030BMainPhase01) == 0x000148, "Wrong size on UATEventBattleB0600030BMainPhase01");

// Class ATExt.ATEventBattleB0600030BRootManager
// 0x00B8 (0x04A0 - 0x03E8)
class AATEventBattleB0600030BRootManager final : public AATEventBattleRootManagerBase
{
public:
	float                                         FinishBlowLifeRate;                                // 0x03E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   FinishBlowDemoId;                                  // 0x03F0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         FinishBlowDelayTime;                               // 0x03F8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         PlayerTeleport;                                    // 0x03FC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         TeleportDistanceMin;                               // 0x0400(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         TeleportDistanceMax;                               // 0x0404(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         TeleportDistance;                                  // 0x0408(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         FormOffVariationPL;                                // 0x040C(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         FormOffFormPL;                                     // 0x040D(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         FormOffVariationEN;                                // 0x040E(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         FormOffFormEN;                                     // 0x040F(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UATEventBattleB0600030BFlashBackManager> FlashBackClass;                                    // 0x0410(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UATEventBattleB0600030BFlashBackManager* FlashBackManager;                                  // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FormChangeForceEndHealthPercentage;                // 0x0420(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RushQteLifeRate;                                   // 0x0424(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   RushQteDemoId;                                     // 0x0428(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         QteInputWaitSeconds;                               // 0x0430(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         QteNoSkipSeconds;                                  // 0x0434(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RushQteWhiteoutFadeOutSeconds;                     // 0x0438(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RushQteWhiteoutFadeInSeconds;                      // 0x043C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   RushQteSuccessJumpCutName;                         // 0x0440(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<float>                                 RushQteInputWaitSeconds;                           // 0x0448(0x0010)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<float>                                 RushQteNoSkipSeconds;                              // 0x0458(0x0010)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<int32>                                 RushQteNeedInputCount;                             // 0x0468(0x0010)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                           RushQteJumpCutName;                                // 0x0478(0x0010)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                         FormOffLifeRate;                                   // 0x0488(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_48C[0x4];                                      // 0x048C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   FormOffDemoId;                                     // 0x0490(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_498[0x8];                                      // 0x0498(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleB0600030BRootManager">();
	}
	static class AATEventBattleB0600030BRootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATEventBattleB0600030BRootManager>();
	}
};
static_assert(alignof(AATEventBattleB0600030BRootManager) == 0x000008, "Wrong alignment on AATEventBattleB0600030BRootManager");
static_assert(sizeof(AATEventBattleB0600030BRootManager) == 0x0004A0, "Wrong size on AATEventBattleB0600030BRootManager");
static_assert(offsetof(AATEventBattleB0600030BRootManager, FinishBlowLifeRate) == 0x0003E8, "Member 'AATEventBattleB0600030BRootManager::FinishBlowLifeRate' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0600030BRootManager, FinishBlowDemoId) == 0x0003F0, "Member 'AATEventBattleB0600030BRootManager::FinishBlowDemoId' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0600030BRootManager, FinishBlowDelayTime) == 0x0003F8, "Member 'AATEventBattleB0600030BRootManager::FinishBlowDelayTime' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0600030BRootManager, PlayerTeleport) == 0x0003FC, "Member 'AATEventBattleB0600030BRootManager::PlayerTeleport' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0600030BRootManager, TeleportDistanceMin) == 0x000400, "Member 'AATEventBattleB0600030BRootManager::TeleportDistanceMin' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0600030BRootManager, TeleportDistanceMax) == 0x000404, "Member 'AATEventBattleB0600030BRootManager::TeleportDistanceMax' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0600030BRootManager, TeleportDistance) == 0x000408, "Member 'AATEventBattleB0600030BRootManager::TeleportDistance' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0600030BRootManager, FormOffVariationPL) == 0x00040C, "Member 'AATEventBattleB0600030BRootManager::FormOffVariationPL' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0600030BRootManager, FormOffFormPL) == 0x00040D, "Member 'AATEventBattleB0600030BRootManager::FormOffFormPL' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0600030BRootManager, FormOffVariationEN) == 0x00040E, "Member 'AATEventBattleB0600030BRootManager::FormOffVariationEN' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0600030BRootManager, FormOffFormEN) == 0x00040F, "Member 'AATEventBattleB0600030BRootManager::FormOffFormEN' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0600030BRootManager, FlashBackClass) == 0x000410, "Member 'AATEventBattleB0600030BRootManager::FlashBackClass' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0600030BRootManager, FlashBackManager) == 0x000418, "Member 'AATEventBattleB0600030BRootManager::FlashBackManager' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0600030BRootManager, FormChangeForceEndHealthPercentage) == 0x000420, "Member 'AATEventBattleB0600030BRootManager::FormChangeForceEndHealthPercentage' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0600030BRootManager, RushQteLifeRate) == 0x000424, "Member 'AATEventBattleB0600030BRootManager::RushQteLifeRate' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0600030BRootManager, RushQteDemoId) == 0x000428, "Member 'AATEventBattleB0600030BRootManager::RushQteDemoId' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0600030BRootManager, QteInputWaitSeconds) == 0x000430, "Member 'AATEventBattleB0600030BRootManager::QteInputWaitSeconds' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0600030BRootManager, QteNoSkipSeconds) == 0x000434, "Member 'AATEventBattleB0600030BRootManager::QteNoSkipSeconds' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0600030BRootManager, RushQteWhiteoutFadeOutSeconds) == 0x000438, "Member 'AATEventBattleB0600030BRootManager::RushQteWhiteoutFadeOutSeconds' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0600030BRootManager, RushQteWhiteoutFadeInSeconds) == 0x00043C, "Member 'AATEventBattleB0600030BRootManager::RushQteWhiteoutFadeInSeconds' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0600030BRootManager, RushQteSuccessJumpCutName) == 0x000440, "Member 'AATEventBattleB0600030BRootManager::RushQteSuccessJumpCutName' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0600030BRootManager, RushQteInputWaitSeconds) == 0x000448, "Member 'AATEventBattleB0600030BRootManager::RushQteInputWaitSeconds' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0600030BRootManager, RushQteNoSkipSeconds) == 0x000458, "Member 'AATEventBattleB0600030BRootManager::RushQteNoSkipSeconds' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0600030BRootManager, RushQteNeedInputCount) == 0x000468, "Member 'AATEventBattleB0600030BRootManager::RushQteNeedInputCount' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0600030BRootManager, RushQteJumpCutName) == 0x000478, "Member 'AATEventBattleB0600030BRootManager::RushQteJumpCutName' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0600030BRootManager, FormOffLifeRate) == 0x000488, "Member 'AATEventBattleB0600030BRootManager::FormOffLifeRate' has a wrong offset!");
static_assert(offsetof(AATEventBattleB0600030BRootManager, FormOffDemoId) == 0x000490, "Member 'AATEventBattleB0600030BRootManager::FormOffDemoId' has a wrong offset!");

// Class ATExt.ATEventBattleCondition
// 0x0018 (0x0040 - 0x0028)
class UATEventBattleCondition final : public UObject
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleCondition">();
	}
	static class UATEventBattleCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATEventBattleCondition>();
	}
};
static_assert(alignof(UATEventBattleCondition) == 0x000008, "Wrong alignment on UATEventBattleCondition");
static_assert(sizeof(UATEventBattleCondition) == 0x000040, "Wrong size on UATEventBattleCondition");

// Class ATExt.ATSceneFreeArea14
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea14 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea14">();
	}
	static class UATSceneFreeArea14* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea14>();
	}
};
static_assert(alignof(UATSceneFreeArea14) == 0x000008, "Wrong alignment on UATSceneFreeArea14");
static_assert(sizeof(UATSceneFreeArea14) == 0x000048, "Wrong size on UATSceneFreeArea14");

// Class ATExt.ATEventBattleE0500030BRootManager
// 0x0028 (0x04B8 - 0x0490)
class AATEventBattleE0500030BRootManager final : public AATTournamentBattleRootManager
{
public:
	uint8                                         Pad_490[0x14];                                     // 0x0490(0x0014)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CornerMarginOffset;                                // 0x04A4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4A8[0x10];                                     // 0x04A8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleE0500030BRootManager">();
	}
	static class AATEventBattleE0500030BRootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATEventBattleE0500030BRootManager>();
	}
};
static_assert(alignof(AATEventBattleE0500030BRootManager) == 0x000008, "Wrong alignment on AATEventBattleE0500030BRootManager");
static_assert(sizeof(AATEventBattleE0500030BRootManager) == 0x0004B8, "Wrong size on AATEventBattleE0500030BRootManager");
static_assert(offsetof(AATEventBattleE0500030BRootManager, CornerMarginOffset) == 0x0004A4, "Member 'AATEventBattleE0500030BRootManager::CornerMarginOffset' has a wrong offset!");

// Class ATExt.ATSceneFreeArea24
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea24 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea24">();
	}
	static class UATSceneFreeArea24* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea24>();
	}
};
static_assert(alignof(UATSceneFreeArea24) == 0x000008, "Wrong alignment on UATSceneFreeArea24");
static_assert(sizeof(UATSceneFreeArea24) == 0x000048, "Wrong size on UATSceneFreeArea24");

// Class ATExt.ATEventBattleFinishBlowRootManager
// 0x0020 (0x0408 - 0x03E8)
class AATEventBattleFinishBlowRootManager final : public AATEventBattleRootManagerBase
{
public:
	float                                         FinishBlowLifeRate;                                // 0x03E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   FinishBlowDemoId;                                  // 0x03F0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         FinishBlowDelayTime;                               // 0x03F8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          ChackLeaderCharacter;                              // 0x03FC(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3FD[0x3];                                      // 0x03FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PlayerTeleport;                                    // 0x0400(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIsDemoLoadEnemyAITickDesable;                     // 0x0404(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_405[0x3];                                      // 0x0405(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleFinishBlowRootManager">();
	}
	static class AATEventBattleFinishBlowRootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATEventBattleFinishBlowRootManager>();
	}
};
static_assert(alignof(AATEventBattleFinishBlowRootManager) == 0x000008, "Wrong alignment on AATEventBattleFinishBlowRootManager");
static_assert(sizeof(AATEventBattleFinishBlowRootManager) == 0x000408, "Wrong size on AATEventBattleFinishBlowRootManager");
static_assert(offsetof(AATEventBattleFinishBlowRootManager, FinishBlowLifeRate) == 0x0003E8, "Member 'AATEventBattleFinishBlowRootManager::FinishBlowLifeRate' has a wrong offset!");
static_assert(offsetof(AATEventBattleFinishBlowRootManager, FinishBlowDemoId) == 0x0003F0, "Member 'AATEventBattleFinishBlowRootManager::FinishBlowDemoId' has a wrong offset!");
static_assert(offsetof(AATEventBattleFinishBlowRootManager, FinishBlowDelayTime) == 0x0003F8, "Member 'AATEventBattleFinishBlowRootManager::FinishBlowDelayTime' has a wrong offset!");
static_assert(offsetof(AATEventBattleFinishBlowRootManager, ChackLeaderCharacter) == 0x0003FC, "Member 'AATEventBattleFinishBlowRootManager::ChackLeaderCharacter' has a wrong offset!");
static_assert(offsetof(AATEventBattleFinishBlowRootManager, PlayerTeleport) == 0x000400, "Member 'AATEventBattleFinishBlowRootManager::PlayerTeleport' has a wrong offset!");
static_assert(offsetof(AATEventBattleFinishBlowRootManager, bIsDemoLoadEnemyAITickDesable) == 0x000404, "Member 'AATEventBattleFinishBlowRootManager::bIsDemoLoadEnemyAITickDesable' has a wrong offset!");

// Class ATExt.ATEventBattleFormChangeRootManager
// 0x0008 (0x03F0 - 0x03E8)
class AATEventBattleFormChangeRootManager final : public AATEventBattleRootManagerBase
{
public:
	class FName                                   FormID;                                            // 0x03E8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleFormChangeRootManager">();
	}
	static class AATEventBattleFormChangeRootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATEventBattleFormChangeRootManager>();
	}
};
static_assert(alignof(AATEventBattleFormChangeRootManager) == 0x000008, "Wrong alignment on AATEventBattleFormChangeRootManager");
static_assert(sizeof(AATEventBattleFormChangeRootManager) == 0x0003F0, "Wrong size on AATEventBattleFormChangeRootManager");
static_assert(offsetof(AATEventBattleFormChangeRootManager, FormID) == 0x0003E8, "Member 'AATEventBattleFormChangeRootManager::FormID' has a wrong offset!");

// Class ATExt.ATSceneFreeArea36
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea36 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea36">();
	}
	static class UATSceneFreeArea36* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea36>();
	}
};
static_assert(alignof(UATSceneFreeArea36) == 0x000008, "Wrong alignment on UATSceneFreeArea36");
static_assert(sizeof(UATSceneFreeArea36) == 0x000048, "Wrong size on UATSceneFreeArea36");

// Class ATExt.ATEventBattleFormChangeSetupPhase
// 0x0000 (0x01D0 - 0x01D0)
class UATEventBattleFormChangeSetupPhase final : public UATGeneralBattleSetUpPhase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleFormChangeSetupPhase">();
	}
	static class UATEventBattleFormChangeSetupPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATEventBattleFormChangeSetupPhase>();
	}
};
static_assert(alignof(UATEventBattleFormChangeSetupPhase) == 0x000008, "Wrong alignment on UATEventBattleFormChangeSetupPhase");
static_assert(sizeof(UATEventBattleFormChangeSetupPhase) == 0x0001D0, "Wrong size on UATEventBattleFormChangeSetupPhase");

// Class ATExt.ATEventBattleMobNear
// 0x0018 (0x0350 - 0x0338)
class AATEventBattleMobNear final : public AActor
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent;                             // 0x0338(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_340[0x10];                                     // 0x0340(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleMobNear">();
	}
	static class AATEventBattleMobNear* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATEventBattleMobNear>();
	}
};
static_assert(alignof(AATEventBattleMobNear) == 0x000008, "Wrong alignment on AATEventBattleMobNear");
static_assert(sizeof(AATEventBattleMobNear) == 0x000350, "Wrong size on AATEventBattleMobNear");
static_assert(offsetof(AATEventBattleMobNear, SkeletalMeshComponent) == 0x000338, "Member 'AATEventBattleMobNear::SkeletalMeshComponent' has a wrong offset!");

// Class ATExt.ATSceneFreeArea22
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea22 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea22">();
	}
	static class UATSceneFreeArea22* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea22>();
	}
};
static_assert(alignof(UATSceneFreeArea22) == 0x000008, "Wrong alignment on UATSceneFreeArea22");
static_assert(sizeof(UATSceneFreeArea22) == 0x000048, "Wrong size on UATSceneFreeArea22");

// Class ATExt.ATEventBattleSituationJudge
// 0x0028 (0x0050 - 0x0028)
class UATEventBattleSituationJudge final : public UObject
{
public:
	uint8                                         Pad_28[0x28];                                      // 0x0028(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleSituationJudge">();
	}
	static class UATEventBattleSituationJudge* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATEventBattleSituationJudge>();
	}
};
static_assert(alignof(UATEventBattleSituationJudge) == 0x000008, "Wrong alignment on UATEventBattleSituationJudge");
static_assert(sizeof(UATEventBattleSituationJudge) == 0x000050, "Wrong size on UATEventBattleSituationJudge");

// Class ATExt.ATEventBattleDummyPoint
// 0x0010 (0x0348 - 0x0338)
class AATEventBattleDummyPoint final : public AActor
{
public:
	class FName                                   BattleName;                                        // 0x0338(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   DummyName;                                         // 0x0340(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATEventBattleDummyPoint">();
	}
	static class AATEventBattleDummyPoint* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATEventBattleDummyPoint>();
	}
};
static_assert(alignof(AATEventBattleDummyPoint) == 0x000008, "Wrong alignment on AATEventBattleDummyPoint");
static_assert(sizeof(AATEventBattleDummyPoint) == 0x000348, "Wrong size on AATEventBattleDummyPoint");
static_assert(offsetof(AATEventBattleDummyPoint, BattleName) == 0x000338, "Member 'AATEventBattleDummyPoint::BattleName' has a wrong offset!");
static_assert(offsetof(AATEventBattleDummyPoint, DummyName) == 0x000340, "Member 'AATEventBattleDummyPoint::DummyName' has a wrong offset!");

// Class ATExt.ATGameModeDevelopmentRoot
// 0x0000 (0x0420 - 0x0420)
class AATGameModeDevelopmentRoot final : public AATGameModeBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATGameModeDevelopmentRoot">();
	}
	static class AATGameModeDevelopmentRoot* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATGameModeDevelopmentRoot>();
	}
};
static_assert(alignof(AATGameModeDevelopmentRoot) == 0x000008, "Wrong alignment on AATGameModeDevelopmentRoot");
static_assert(sizeof(AATGameModeDevelopmentRoot) == 0x000420, "Wrong size on AATGameModeDevelopmentRoot");

// Class ATExt.ATGeneralBattleDirectionPhase
// 0x0068 (0x0098 - 0x0030)
class UATGeneralBattleDirectionPhase final : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x68];                                      // 0x0030(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnDemoTiming(EDEMO_TYPE DemoType, EDEMO_TIMING_TYPE DemoTiming, class FName DemoName, bool ContinueFlag);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATGeneralBattleDirectionPhase">();
	}
	static class UATGeneralBattleDirectionPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATGeneralBattleDirectionPhase>();
	}
};
static_assert(alignof(UATGeneralBattleDirectionPhase) == 0x000008, "Wrong alignment on UATGeneralBattleDirectionPhase");
static_assert(sizeof(UATGeneralBattleDirectionPhase) == 0x000098, "Wrong size on UATGeneralBattleDirectionPhase");

// Class ATExt.ATGroundEventBattleRootManager
// 0x0008 (0x03F0 - 0x03E8)
class AATGroundEventBattleRootManager final : public AATEventBattleRootManagerBase
{
public:
	class UStaticMesh*                            OverwriteBattleFieldMesh;                          // 0x03E8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATGroundEventBattleRootManager">();
	}
	static class AATGroundEventBattleRootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATGroundEventBattleRootManager>();
	}
};
static_assert(alignof(AATGroundEventBattleRootManager) == 0x000008, "Wrong alignment on AATGroundEventBattleRootManager");
static_assert(sizeof(AATGroundEventBattleRootManager) == 0x0003F0, "Wrong size on AATGroundEventBattleRootManager");
static_assert(offsetof(AATGroundEventBattleRootManager, OverwriteBattleFieldMesh) == 0x0003E8, "Member 'AATGroundEventBattleRootManager::OverwriteBattleFieldMesh' has a wrong offset!");

// Class ATExt.ATGroupBattleMobFar
// 0x0018 (0x0350 - 0x0338)
class AATGroupBattleMobFar final : public AActor
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent;                             // 0x0338(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_340[0x10];                                     // 0x0340(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATGroupBattleMobFar">();
	}
	static class AATGroupBattleMobFar* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATGroupBattleMobFar>();
	}
};
static_assert(alignof(AATGroupBattleMobFar) == 0x000008, "Wrong alignment on AATGroupBattleMobFar");
static_assert(sizeof(AATGroupBattleMobFar) == 0x000350, "Wrong size on AATGroupBattleMobFar");
static_assert(offsetof(AATGroupBattleMobFar, SkeletalMeshComponent) == 0x000338, "Member 'AATGroupBattleMobFar::SkeletalMeshComponent' has a wrong offset!");

// Class ATExt.ATGroupBattleMobReturn
// 0x0058 (0x0390 - 0x0338)
class AATGroupBattleMobReturn final : public AActor
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent;                             // 0x0338(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class FName, class UAnimMontage*>        AnimationMap;                                      // 0x0340(0x0050)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATGroupBattleMobReturn">();
	}
	static class AATGroupBattleMobReturn* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATGroupBattleMobReturn>();
	}
};
static_assert(alignof(AATGroupBattleMobReturn) == 0x000008, "Wrong alignment on AATGroupBattleMobReturn");
static_assert(sizeof(AATGroupBattleMobReturn) == 0x000390, "Wrong size on AATGroupBattleMobReturn");
static_assert(offsetof(AATGroupBattleMobReturn, SkeletalMeshComponent) == 0x000338, "Member 'AATGroupBattleMobReturn::SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(AATGroupBattleMobReturn, AnimationMap) == 0x000340, "Member 'AATGroupBattleMobReturn::AnimationMap' has a wrong offset!");

// Class ATExt.ATGroupBattleResult
// 0x0078 (0x00A0 - 0x0028)
class UATGroupBattleResult final : public UObject
{
public:
	uint8                                         Pad_28[0x78];                                      // 0x0028(0x0078)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnCloseResult();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATGroupBattleResult">();
	}
	static class UATGroupBattleResult* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATGroupBattleResult>();
	}
};
static_assert(alignof(UATGroupBattleResult) == 0x000008, "Wrong alignment on UATGroupBattleResult");
static_assert(sizeof(UATGroupBattleResult) == 0x0000A0, "Wrong size on UATGroupBattleResult");

// Class ATExt.ATGroupBattleSetupPhase
// 0x0000 (0x01D0 - 0x01D0)
class UATGroupBattleSetupPhase final : public UATGeneralBattleSetUpPhase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATGroupBattleSetupPhase">();
	}
	static class UATGroupBattleSetupPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATGroupBattleSetupPhase>();
	}
};
static_assert(alignof(UATGroupBattleSetupPhase) == 0x000008, "Wrong alignment on UATGroupBattleSetupPhase");
static_assert(sizeof(UATGroupBattleSetupPhase) == 0x0001D0, "Wrong size on UATGroupBattleSetupPhase");

// Class ATExt.ATGroupBattleSZCDirector
// 0x0020 (0x0358 - 0x0338)
class AATGroupBattleSZCDirector final : public AActor
{
public:
	class USkeletalMeshComponent*                 DummyComponent;                                    // 0x0338(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AATGroupBattleSZCActor*>         ActorTbl;                                          // 0x0340(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_350[0x8];                                      // 0x0350(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATGroupBattleSZCDirector">();
	}
	static class AATGroupBattleSZCDirector* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATGroupBattleSZCDirector>();
	}
};
static_assert(alignof(AATGroupBattleSZCDirector) == 0x000008, "Wrong alignment on AATGroupBattleSZCDirector");
static_assert(sizeof(AATGroupBattleSZCDirector) == 0x000358, "Wrong size on AATGroupBattleSZCDirector");
static_assert(offsetof(AATGroupBattleSZCDirector, DummyComponent) == 0x000338, "Member 'AATGroupBattleSZCDirector::DummyComponent' has a wrong offset!");
static_assert(offsetof(AATGroupBattleSZCDirector, ActorTbl) == 0x000340, "Member 'AATGroupBattleSZCDirector::ActorTbl' has a wrong offset!");

// Class ATExt.ATHUDDebugBootMenu
// 0x0030 (0x0218 - 0x01E8)
class UATHUDDebugBootMenu final : public UCFHUDDebugNodeSelectorComponent
{
public:
	class UTexture2D*                             DrawTexture;                                       // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1F0[0x28];                                     // 0x01F0(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATHUDDebugBootMenu">();
	}
	static class UATHUDDebugBootMenu* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATHUDDebugBootMenu>();
	}
};
static_assert(alignof(UATHUDDebugBootMenu) == 0x000008, "Wrong alignment on UATHUDDebugBootMenu");
static_assert(sizeof(UATHUDDebugBootMenu) == 0x000218, "Wrong size on UATHUDDebugBootMenu");
static_assert(offsetof(UATHUDDebugBootMenu, DrawTexture) == 0x0001E8, "Member 'UATHUDDebugBootMenu::DrawTexture' has a wrong offset!");

// Class ATExt.ATLinkBonus
// 0x0160 (0x0188 - 0x0028)
class UATLinkBonus final : public UObject
{
public:
	uint8                                         Pad_28[0x160];                                     // 0x0028(0x0160)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATLinkBonus">();
	}
	static class UATLinkBonus* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATLinkBonus>();
	}
};
static_assert(alignof(UATLinkBonus) == 0x000008, "Wrong alignment on UATLinkBonus");
static_assert(sizeof(UATLinkBonus) == 0x000188, "Wrong size on UATLinkBonus");

// Class ATExt.ATMonitoringSaveGame
// 0x0498 (0x04C0 - 0x0028)
class UATMonitoringSaveGame final : public USaveGame
{
public:
	struct FMonitoringSavePack                    Pack;                                              // 0x0028(0x0498)(NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMonitoringSaveGame">();
	}
	static class UATMonitoringSaveGame* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMonitoringSaveGame>();
	}
};
static_assert(alignof(UATMonitoringSaveGame) == 0x000008, "Wrong alignment on UATMonitoringSaveGame");
static_assert(sizeof(UATMonitoringSaveGame) == 0x0004C0, "Wrong size on UATMonitoringSaveGame");
static_assert(offsetof(UATMonitoringSaveGame, Pack) == 0x000028, "Member 'UATMonitoringSaveGame::Pack' has a wrong offset!");

// Class ATExt.ATPushSolverShapeCapsule
// 0x0000 (0x05B0 - 0x05B0)
class UATPushSolverShapeCapsule final : public UCFPushSolverShapeCapsule
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATPushSolverShapeCapsule">();
	}
	static class UATPushSolverShapeCapsule* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATPushSolverShapeCapsule>();
	}
};
static_assert(alignof(UATPushSolverShapeCapsule) == 0x000008, "Wrong alignment on UATPushSolverShapeCapsule");
static_assert(sizeof(UATPushSolverShapeCapsule) == 0x0005B0, "Wrong size on UATPushSolverShapeCapsule");

// Class ATExt.ATSaveTcg
// 0x0728 (0x0750 - 0x0028)
class UATSaveTcg : public USaveGame
{
public:
	uint32                                        Version;                                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGCGSaveGame                           Tcg;                                               // 0x0030(0x0188)(NativeAccessSpecifierPublic)
	struct FGCGOfflineSaveGame                    OfflineTcg;                                        // 0x01B8(0x0598)(NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSaveTcg">();
	}
	static class UATSaveTcg* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSaveTcg>();
	}
};
static_assert(alignof(UATSaveTcg) == 0x000008, "Wrong alignment on UATSaveTcg");
static_assert(sizeof(UATSaveTcg) == 0x000750, "Wrong size on UATSaveTcg");
static_assert(offsetof(UATSaveTcg, Version) == 0x000028, "Member 'UATSaveTcg::Version' has a wrong offset!");
static_assert(offsetof(UATSaveTcg, Tcg) == 0x000030, "Member 'UATSaveTcg::Tcg' has a wrong offset!");
static_assert(offsetof(UATSaveTcg, OfflineTcg) == 0x0001B8, "Member 'UATSaveTcg::OfflineTcg' has a wrong offset!");

// Class ATExt.ATSceneAtrociousPhaseParam
// 0x0000 (0x0040 - 0x0040)
class UATSceneAtrociousPhaseParam final : public UCFSceneChangeParamBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneAtrociousPhaseParam">();
	}
	static class UATSceneAtrociousPhaseParam* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneAtrociousPhaseParam>();
	}
};
static_assert(alignof(UATSceneAtrociousPhaseParam) == 0x000008, "Wrong alignment on UATSceneAtrociousPhaseParam");
static_assert(sizeof(UATSceneAtrociousPhaseParam) == 0x000040, "Wrong size on UATSceneAtrociousPhaseParam");

// Class ATExt.ATSceneFreeArea04
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea04 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea04">();
	}
	static class UATSceneFreeArea04* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea04>();
	}
};
static_assert(alignof(UATSceneFreeArea04) == 0x000008, "Wrong alignment on UATSceneFreeArea04");
static_assert(sizeof(UATSceneFreeArea04) == 0x000048, "Wrong size on UATSceneFreeArea04");

// Class ATExt.ATSceneBattleBegin
// 0x0008 (0x0048 - 0x0040)
class UATSceneBattleBegin final : public UCFScene
{
public:
	uint8                                         Pad_40[0x8];                                       // 0x0040(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnBattleBegin();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneBattleBegin">();
	}
	static class UATSceneBattleBegin* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneBattleBegin>();
	}
};
static_assert(alignof(UATSceneBattleBegin) == 0x000008, "Wrong alignment on UATSceneBattleBegin");
static_assert(sizeof(UATSceneBattleBegin) == 0x000048, "Wrong size on UATSceneBattleBegin");

// Class ATExt.ATSceneBattleEnd
// 0x0008 (0x0048 - 0x0040)
class UATSceneBattleEnd final : public UCFScene
{
public:
	uint8                                         Pad_40[0x8];                                       // 0x0040(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnEndFinishUI();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneBattleEnd">();
	}
	static class UATSceneBattleEnd* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneBattleEnd>();
	}
};
static_assert(alignof(UATSceneBattleEnd) == 0x000008, "Wrong alignment on UATSceneBattleEnd");
static_assert(sizeof(UATSceneBattleEnd) == 0x000048, "Wrong size on UATSceneBattleEnd");

// Class ATExt.ATSceneDevelopmentTestBattleRoot
// 0x0000 (0x0040 - 0x0040)
class UATSceneDevelopmentTestBattleRoot final : public UCFScene
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneDevelopmentTestBattleRoot">();
	}
	static class UATSceneDevelopmentTestBattleRoot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneDevelopmentTestBattleRoot>();
	}
};
static_assert(alignof(UATSceneDevelopmentTestBattleRoot) == 0x000008, "Wrong alignment on UATSceneDevelopmentTestBattleRoot");
static_assert(sizeof(UATSceneDevelopmentTestBattleRoot) == 0x000040, "Wrong size on UATSceneDevelopmentTestBattleRoot");

// Class ATExt.ATSceneBattleGameOverAssault
// 0x0058 (0x0098 - 0x0040)
class UATSceneBattleGameOverAssault final : public UCFScene
{
public:
	uint8                                         Pad_40[0x58];                                      // 0x0040(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneBattleGameOverAssault">();
	}
	static class UATSceneBattleGameOverAssault* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneBattleGameOverAssault>();
	}
};
static_assert(alignof(UATSceneBattleGameOverAssault) == 0x000008, "Wrong alignment on UATSceneBattleGameOverAssault");
static_assert(sizeof(UATSceneBattleGameOverAssault) == 0x000098, "Wrong size on UATSceneBattleGameOverAssault");

// Class ATExt.ATSceneBattleMain
// 0x0008 (0x0048 - 0x0040)
class UATSceneBattleMain final : public UCFScene
{
public:
	uint8                                         Pad_40[0x8];                                       // 0x0040(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnBattleEnd();
	void OnBattleGameOverStart();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneBattleMain">();
	}
	static class UATSceneBattleMain* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneBattleMain>();
	}
};
static_assert(alignof(UATSceneBattleMain) == 0x000008, "Wrong alignment on UATSceneBattleMain");
static_assert(sizeof(UATSceneBattleMain) == 0x000048, "Wrong size on UATSceneBattleMain");

// Class ATExt.ATSceneBattleRetry
// 0x0000 (0x0040 - 0x0040)
class UATSceneBattleRetry final : public UCFScene
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneBattleRetry">();
	}
	static class UATSceneBattleRetry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneBattleRetry>();
	}
};
static_assert(alignof(UATSceneBattleRetry) == 0x000008, "Wrong alignment on UATSceneBattleRetry");
static_assert(sizeof(UATSceneBattleRetry) == 0x000040, "Wrong size on UATSceneBattleRetry");

// Class ATExt.ATSceneBootLogo
// 0x0000 (0x0040 - 0x0040)
class UATSceneBootLogo final : public UCFScene
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneBootLogo">();
	}
	static class UATSceneBootLogo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneBootLogo>();
	}
};
static_assert(alignof(UATSceneBootLogo) == 0x000008, "Wrong alignment on UATSceneBootLogo");
static_assert(sizeof(UATSceneBootLogo) == 0x000040, "Wrong size on UATSceneBootLogo");

// Class ATExt.ATSceneBootRoot
// 0x0000 (0x0040 - 0x0040)
class UATSceneBootRoot final : public UCFScene
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneBootRoot">();
	}
	static class UATSceneBootRoot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneBootRoot>();
	}
};
static_assert(alignof(UATSceneBootRoot) == 0x000008, "Wrong alignment on UATSceneBootRoot");
static_assert(sizeof(UATSceneBootRoot) == 0x000040, "Wrong size on UATSceneBootRoot");

// Class ATExt.ATSceneBootSetup
// 0x0058 (0x0098 - 0x0040)
class UATSceneBootSetup final : public UCFScene
{
public:
	uint8                                         Pad_40[0x58];                                      // 0x0040(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneBootSetup">();
	}
	static class UATSceneBootSetup* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneBootSetup>();
	}
};
static_assert(alignof(UATSceneBootSetup) == 0x000008, "Wrong alignment on UATSceneBootSetup");
static_assert(sizeof(UATSceneBootSetup) == 0x000098, "Wrong size on UATSceneBootSetup");

// Class ATExt.ATSceneCharacterChange
// 0x0000 (0x0040 - 0x0040)
class UATSceneCharacterChange final : public UCFScene
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneCharacterChange">();
	}
	static class UATSceneCharacterChange* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneCharacterChange>();
	}
};
static_assert(alignof(UATSceneCharacterChange) == 0x000008, "Wrong alignment on UATSceneCharacterChange");
static_assert(sizeof(UATSceneCharacterChange) == 0x000040, "Wrong size on UATSceneCharacterChange");

// Class ATExt.ATSceneCharacterLoad
// 0x0008 (0x0048 - 0x0040)
class UATSceneCharacterLoad final : public UCFScene
{
public:
	class UATSceneCharacterChangeParam*           ChangeParam;                                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneCharacterLoad">();
	}
	static class UATSceneCharacterLoad* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneCharacterLoad>();
	}
};
static_assert(alignof(UATSceneCharacterLoad) == 0x000008, "Wrong alignment on UATSceneCharacterLoad");
static_assert(sizeof(UATSceneCharacterLoad) == 0x000048, "Wrong size on UATSceneCharacterLoad");
static_assert(offsetof(UATSceneCharacterLoad, ChangeParam) == 0x000040, "Member 'UATSceneCharacterLoad::ChangeParam' has a wrong offset!");

// Class ATExt.ATSceneCharacterLoadParam
// 0x0018 (0x0058 - 0x0040)
class UATSceneCharacterLoadParam final : public UCFSceneChangeParamBase
{
public:
	uint8                                         Pad_40[0x18];                                      // 0x0040(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneCharacterLoadParam">();
	}
	static class UATSceneCharacterLoadParam* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneCharacterLoadParam>();
	}
};
static_assert(alignof(UATSceneCharacterLoadParam) == 0x000008, "Wrong alignment on UATSceneCharacterLoadParam");
static_assert(sizeof(UATSceneCharacterLoadParam) == 0x000058, "Wrong size on UATSceneCharacterLoadParam");

// Class ATExt.ATSceneCharacterPartsChange
// 0x0000 (0x0040 - 0x0040)
class UATSceneCharacterPartsChange final : public UCFScene
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneCharacterPartsChange">();
	}
	static class UATSceneCharacterPartsChange* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneCharacterPartsChange>();
	}
};
static_assert(alignof(UATSceneCharacterPartsChange) == 0x000008, "Wrong alignment on UATSceneCharacterPartsChange");
static_assert(sizeof(UATSceneCharacterPartsChange) == 0x000040, "Wrong size on UATSceneCharacterPartsChange");

// Class ATExt.ATSceneCharacterPartsLoad
// 0x0008 (0x0048 - 0x0040)
class UATSceneCharacterPartsLoad final : public UCFScene
{
public:
	class UATSceneCharacterPartsChangeParam*      ChangeParam;                                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneCharacterPartsLoad">();
	}
	static class UATSceneCharacterPartsLoad* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneCharacterPartsLoad>();
	}
};
static_assert(alignof(UATSceneCharacterPartsLoad) == 0x000008, "Wrong alignment on UATSceneCharacterPartsLoad");
static_assert(sizeof(UATSceneCharacterPartsLoad) == 0x000048, "Wrong size on UATSceneCharacterPartsLoad");
static_assert(offsetof(UATSceneCharacterPartsLoad, ChangeParam) == 0x000040, "Member 'UATSceneCharacterPartsLoad::ChangeParam' has a wrong offset!");

// Class ATExt.ATSceneDebugUIWindow
// 0x0058 (0x0098 - 0x0040)
class UATSceneDebugUIWindow final : public UCFScene
{
public:
	uint8                                         Pad_40[0x58];                                      // 0x0040(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneDebugUIWindow">();
	}
	static class UATSceneDebugUIWindow* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneDebugUIWindow>();
	}
};
static_assert(alignof(UATSceneDebugUIWindow) == 0x000008, "Wrong alignment on UATSceneDebugUIWindow");
static_assert(sizeof(UATSceneDebugUIWindow) == 0x000098, "Wrong size on UATSceneDebugUIWindow");

// Class ATExt.ATSceneDevelopmentAssaultTestFree
// 0x0000 (0x0058 - 0x0058)
class UATSceneDevelopmentAssaultTestFree final : public UATSceneFree
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneDevelopmentAssaultTestFree">();
	}
	static class UATSceneDevelopmentAssaultTestFree* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneDevelopmentAssaultTestFree>();
	}
};
static_assert(alignof(UATSceneDevelopmentAssaultTestFree) == 0x000008, "Wrong alignment on UATSceneDevelopmentAssaultTestFree");
static_assert(sizeof(UATSceneDevelopmentAssaultTestFree) == 0x000058, "Wrong size on UATSceneDevelopmentAssaultTestFree");

// Class ATExt.ATSceneDevelopmentAssaultTestLoad
// 0x0000 (0x00C0 - 0x00C0)
class UATSceneDevelopmentAssaultTestLoad final : public UATSceneFreeLoadBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneDevelopmentAssaultTestLoad">();
	}
	static class UATSceneDevelopmentAssaultTestLoad* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneDevelopmentAssaultTestLoad>();
	}
};
static_assert(alignof(UATSceneDevelopmentAssaultTestLoad) == 0x000008, "Wrong alignment on UATSceneDevelopmentAssaultTestLoad");
static_assert(sizeof(UATSceneDevelopmentAssaultTestLoad) == 0x0000C0, "Wrong size on UATSceneDevelopmentAssaultTestLoad");

// Class ATExt.ATSceneDevelopmentAssaultTestPreLoad
// 0x0000 (0x0098 - 0x0098)
class UATSceneDevelopmentAssaultTestPreLoad final : public UATScenePreLoad
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneDevelopmentAssaultTestPreLoad">();
	}
	static class UATSceneDevelopmentAssaultTestPreLoad* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneDevelopmentAssaultTestPreLoad>();
	}
};
static_assert(alignof(UATSceneDevelopmentAssaultTestPreLoad) == 0x000008, "Wrong alignment on UATSceneDevelopmentAssaultTestPreLoad");
static_assert(sizeof(UATSceneDevelopmentAssaultTestPreLoad) == 0x000098, "Wrong size on UATSceneDevelopmentAssaultTestPreLoad");

// Class ATExt.ATSceneDevelopmentAssetCheckFree
// 0x0000 (0x0058 - 0x0058)
class UATSceneDevelopmentAssetCheckFree final : public UATSceneFree
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneDevelopmentAssetCheckFree">();
	}
	static class UATSceneDevelopmentAssetCheckFree* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneDevelopmentAssetCheckFree>();
	}
};
static_assert(alignof(UATSceneDevelopmentAssetCheckFree) == 0x000008, "Wrong alignment on UATSceneDevelopmentAssetCheckFree");
static_assert(sizeof(UATSceneDevelopmentAssetCheckFree) == 0x000058, "Wrong size on UATSceneDevelopmentAssetCheckFree");

// Class ATExt.ATSceneDevelopmentAssetCheckPreLoad
// 0x0000 (0x0098 - 0x0098)
class UATSceneDevelopmentAssetCheckPreLoad final : public UATScenePreLoad
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneDevelopmentAssetCheckPreLoad">();
	}
	static class UATSceneDevelopmentAssetCheckPreLoad* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneDevelopmentAssetCheckPreLoad>();
	}
};
static_assert(alignof(UATSceneDevelopmentAssetCheckPreLoad) == 0x000008, "Wrong alignment on UATSceneDevelopmentAssetCheckPreLoad");
static_assert(sizeof(UATSceneDevelopmentAssetCheckPreLoad) == 0x000098, "Wrong size on UATSceneDevelopmentAssetCheckPreLoad");

// Class ATExt.ATSceneDevelopmentBootMenu
// 0x0078 (0x00B8 - 0x0040)
class UATSceneDevelopmentBootMenu final : public UCFScene
{
public:
	uint8                                         Pad_40[0x78];                                      // 0x0040(0x0078)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneDevelopmentBootMenu">();
	}
	static class UATSceneDevelopmentBootMenu* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneDevelopmentBootMenu>();
	}
};
static_assert(alignof(UATSceneDevelopmentBootMenu) == 0x000008, "Wrong alignment on UATSceneDevelopmentBootMenu");
static_assert(sizeof(UATSceneDevelopmentBootMenu) == 0x0000B8, "Wrong size on UATSceneDevelopmentBootMenu");

// Class ATExt.ATSceneDevelopmentMemoryCheckLoad
// 0x0000 (0x00C0 - 0x00C0)
class UATSceneDevelopmentMemoryCheckLoad final : public UATSceneFreeLoadBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneDevelopmentMemoryCheckLoad">();
	}
	static class UATSceneDevelopmentMemoryCheckLoad* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneDevelopmentMemoryCheckLoad>();
	}
};
static_assert(alignof(UATSceneDevelopmentMemoryCheckLoad) == 0x000008, "Wrong alignment on UATSceneDevelopmentMemoryCheckLoad");
static_assert(sizeof(UATSceneDevelopmentMemoryCheckLoad) == 0x0000C0, "Wrong size on UATSceneDevelopmentMemoryCheckLoad");

// Class ATExt.ATSceneDevelopmentMemoryCheckRoot
// 0x0000 (0x0040 - 0x0040)
class UATSceneDevelopmentMemoryCheckRoot final : public UCFScene
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneDevelopmentMemoryCheckRoot">();
	}
	static class UATSceneDevelopmentMemoryCheckRoot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneDevelopmentMemoryCheckRoot>();
	}
};
static_assert(alignof(UATSceneDevelopmentMemoryCheckRoot) == 0x000008, "Wrong alignment on UATSceneDevelopmentMemoryCheckRoot");
static_assert(sizeof(UATSceneDevelopmentMemoryCheckRoot) == 0x000040, "Wrong size on UATSceneDevelopmentMemoryCheckRoot");

// Class ATExt.ATSceneDevelopmentQuestTestFree
// 0x0000 (0x0058 - 0x0058)
class UATSceneDevelopmentQuestTestFree final : public UATSceneFree
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneDevelopmentQuestTestFree">();
	}
	static class UATSceneDevelopmentQuestTestFree* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneDevelopmentQuestTestFree>();
	}
};
static_assert(alignof(UATSceneDevelopmentQuestTestFree) == 0x000008, "Wrong alignment on UATSceneDevelopmentQuestTestFree");
static_assert(sizeof(UATSceneDevelopmentQuestTestFree) == 0x000058, "Wrong size on UATSceneDevelopmentQuestTestFree");

// Class ATExt.ATSceneDevelopmentQuestTestPreLoad
// 0x0000 (0x0098 - 0x0098)
class UATSceneDevelopmentQuestTestPreLoad final : public UATScenePreLoad
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneDevelopmentQuestTestPreLoad">();
	}
	static class UATSceneDevelopmentQuestTestPreLoad* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneDevelopmentQuestTestPreLoad>();
	}
};
static_assert(alignof(UATSceneDevelopmentQuestTestPreLoad) == 0x000008, "Wrong alignment on UATSceneDevelopmentQuestTestPreLoad");
static_assert(sizeof(UATSceneDevelopmentQuestTestPreLoad) == 0x000098, "Wrong size on UATSceneDevelopmentQuestTestPreLoad");

// Class ATExt.ATSceneDevelopmentRoot
// 0x0058 (0x0098 - 0x0040)
class UATSceneDevelopmentRoot final : public UCFScene
{
public:
	uint8                                         Pad_40[0x58];                                      // 0x0040(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneDevelopmentRoot">();
	}
	static class UATSceneDevelopmentRoot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneDevelopmentRoot>();
	}
};
static_assert(alignof(UATSceneDevelopmentRoot) == 0x000008, "Wrong alignment on UATSceneDevelopmentRoot");
static_assert(sizeof(UATSceneDevelopmentRoot) == 0x000098, "Wrong size on UATSceneDevelopmentRoot");

// Class ATExt.ATSceneDevelopmentTestBattleFree
// 0x0000 (0x0058 - 0x0058)
class UATSceneDevelopmentTestBattleFree final : public UATSceneFree
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneDevelopmentTestBattleFree">();
	}
	static class UATSceneDevelopmentTestBattleFree* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneDevelopmentTestBattleFree>();
	}
};
static_assert(alignof(UATSceneDevelopmentTestBattleFree) == 0x000008, "Wrong alignment on UATSceneDevelopmentTestBattleFree");
static_assert(sizeof(UATSceneDevelopmentTestBattleFree) == 0x000058, "Wrong size on UATSceneDevelopmentTestBattleFree");

// Class ATExt.ATSceneDevelopmentTestBattlePreLoad
// 0x0000 (0x0098 - 0x0098)
class UATSceneDevelopmentTestBattlePreLoad final : public UATScenePreLoad
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneDevelopmentTestBattlePreLoad">();
	}
	static class UATSceneDevelopmentTestBattlePreLoad* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneDevelopmentTestBattlePreLoad>();
	}
};
static_assert(alignof(UATSceneDevelopmentTestBattlePreLoad) == 0x000008, "Wrong alignment on UATSceneDevelopmentTestBattlePreLoad");
static_assert(sizeof(UATSceneDevelopmentTestBattlePreLoad) == 0x000098, "Wrong size on UATSceneDevelopmentTestBattlePreLoad");

// Class ATExt.ATSceneEvent
// 0x0018 (0x0058 - 0x0040)
class UATSceneEvent final : public UCFScene
{
public:
	uint8                                         Pad_40[0x18];                                      // 0x0040(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnDemoTiming(EDEMO_TYPE Type, EDEMO_TIMING_TYPE Timing, class FName Name_0, bool bContinueFlag);
	void OnQuestEventEnd(class FName PhaseID, EQUEST_PHASE_TYPE Type);
	void OnQuestPhaseBegin(class FName PhaseID, EQUEST_PHASE_TYPE Type);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneEvent">();
	}
	static class UATSceneEvent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneEvent>();
	}
};
static_assert(alignof(UATSceneEvent) == 0x000008, "Wrong alignment on UATSceneEvent");
static_assert(sizeof(UATSceneEvent) == 0x000058, "Wrong size on UATSceneEvent");

// Class ATExt.ATSceneFreeArea01
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea01 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea01">();
	}
	static class UATSceneFreeArea01* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea01>();
	}
};
static_assert(alignof(UATSceneFreeArea01) == 0x000008, "Wrong alignment on UATSceneFreeArea01");
static_assert(sizeof(UATSceneFreeArea01) == 0x000048, "Wrong size on UATSceneFreeArea01");

// Class ATExt.ATSceneFreeArea03
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea03 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea03">();
	}
	static class UATSceneFreeArea03* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea03>();
	}
};
static_assert(alignof(UATSceneFreeArea03) == 0x000008, "Wrong alignment on UATSceneFreeArea03");
static_assert(sizeof(UATSceneFreeArea03) == 0x000048, "Wrong size on UATSceneFreeArea03");

// Class ATExt.ATSceneFreeArea05
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea05 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea05">();
	}
	static class UATSceneFreeArea05* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea05>();
	}
};
static_assert(alignof(UATSceneFreeArea05) == 0x000008, "Wrong alignment on UATSceneFreeArea05");
static_assert(sizeof(UATSceneFreeArea05) == 0x000048, "Wrong size on UATSceneFreeArea05");

// Class ATExt.ATSceneFreeArea07
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea07 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea07">();
	}
	static class UATSceneFreeArea07* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea07>();
	}
};
static_assert(alignof(UATSceneFreeArea07) == 0x000008, "Wrong alignment on UATSceneFreeArea07");
static_assert(sizeof(UATSceneFreeArea07) == 0x000048, "Wrong size on UATSceneFreeArea07");

// Class ATExt.ATSceneFreeArea13
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea13 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea13">();
	}
	static class UATSceneFreeArea13* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea13>();
	}
};
static_assert(alignof(UATSceneFreeArea13) == 0x000008, "Wrong alignment on UATSceneFreeArea13");
static_assert(sizeof(UATSceneFreeArea13) == 0x000048, "Wrong size on UATSceneFreeArea13");

// Class ATExt.ATSceneFreeArea15
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea15 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea15">();
	}
	static class UATSceneFreeArea15* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea15>();
	}
};
static_assert(alignof(UATSceneFreeArea15) == 0x000008, "Wrong alignment on UATSceneFreeArea15");
static_assert(sizeof(UATSceneFreeArea15) == 0x000048, "Wrong size on UATSceneFreeArea15");

// Class ATExt.ATSceneFreeArea17
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea17 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea17">();
	}
	static class UATSceneFreeArea17* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea17>();
	}
};
static_assert(alignof(UATSceneFreeArea17) == 0x000008, "Wrong alignment on UATSceneFreeArea17");
static_assert(sizeof(UATSceneFreeArea17) == 0x000048, "Wrong size on UATSceneFreeArea17");

// Class ATExt.ATSceneFreeArea21
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea21 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea21">();
	}
	static class UATSceneFreeArea21* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea21>();
	}
};
static_assert(alignof(UATSceneFreeArea21) == 0x000008, "Wrong alignment on UATSceneFreeArea21");
static_assert(sizeof(UATSceneFreeArea21) == 0x000048, "Wrong size on UATSceneFreeArea21");

// Class ATExt.ATSceneFreeArea23
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea23 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea23">();
	}
	static class UATSceneFreeArea23* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea23>();
	}
};
static_assert(alignof(UATSceneFreeArea23) == 0x000008, "Wrong alignment on UATSceneFreeArea23");
static_assert(sizeof(UATSceneFreeArea23) == 0x000048, "Wrong size on UATSceneFreeArea23");

// Class ATExt.ATSceneFreeArea25
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea25 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea25">();
	}
	static class UATSceneFreeArea25* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea25>();
	}
};
static_assert(alignof(UATSceneFreeArea25) == 0x000008, "Wrong alignment on UATSceneFreeArea25");
static_assert(sizeof(UATSceneFreeArea25) == 0x000048, "Wrong size on UATSceneFreeArea25");

// Class ATExt.ATSceneFreeArea31
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea31 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea31">();
	}
	static class UATSceneFreeArea31* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea31>();
	}
};
static_assert(alignof(UATSceneFreeArea31) == 0x000008, "Wrong alignment on UATSceneFreeArea31");
static_assert(sizeof(UATSceneFreeArea31) == 0x000048, "Wrong size on UATSceneFreeArea31");

// Class ATExt.ATSceneFreeArea33
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea33 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea33">();
	}
	static class UATSceneFreeArea33* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea33>();
	}
};
static_assert(alignof(UATSceneFreeArea33) == 0x000008, "Wrong alignment on UATSceneFreeArea33");
static_assert(sizeof(UATSceneFreeArea33) == 0x000048, "Wrong size on UATSceneFreeArea33");

// Class ATExt.ATSceneFreeArea35
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea35 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea35">();
	}
	static class UATSceneFreeArea35* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea35>();
	}
};
static_assert(alignof(UATSceneFreeArea35) == 0x000008, "Wrong alignment on UATSceneFreeArea35");
static_assert(sizeof(UATSceneFreeArea35) == 0x000048, "Wrong size on UATSceneFreeArea35");

// Class ATExt.ATSceneFreeArea39
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea39 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea39">();
	}
	static class UATSceneFreeArea39* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea39>();
	}
};
static_assert(alignof(UATSceneFreeArea39) == 0x000008, "Wrong alignment on UATSceneFreeArea39");
static_assert(sizeof(UATSceneFreeArea39) == 0x000048, "Wrong size on UATSceneFreeArea39");

// Class ATExt.ATSceneFreeArea40
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea40 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea40">();
	}
	static class UATSceneFreeArea40* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea40>();
	}
};
static_assert(alignof(UATSceneFreeArea40) == 0x000008, "Wrong alignment on UATSceneFreeArea40");
static_assert(sizeof(UATSceneFreeArea40) == 0x000048, "Wrong size on UATSceneFreeArea40");

// Class ATExt.ATSceneFreeArea41
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea41 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea41">();
	}
	static class UATSceneFreeArea41* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea41>();
	}
};
static_assert(alignof(UATSceneFreeArea41) == 0x000008, "Wrong alignment on UATSceneFreeArea41");
static_assert(sizeof(UATSceneFreeArea41) == 0x000048, "Wrong size on UATSceneFreeArea41");

// Class ATExt.ATSceneFreeArea42
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea42 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea42">();
	}
	static class UATSceneFreeArea42* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea42>();
	}
};
static_assert(alignof(UATSceneFreeArea42) == 0x000008, "Wrong alignment on UATSceneFreeArea42");
static_assert(sizeof(UATSceneFreeArea42) == 0x000048, "Wrong size on UATSceneFreeArea42");

// Class ATExt.ATSceneFreeArea43
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea43 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea43">();
	}
	static class UATSceneFreeArea43* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea43>();
	}
};
static_assert(alignof(UATSceneFreeArea43) == 0x000008, "Wrong alignment on UATSceneFreeArea43");
static_assert(sizeof(UATSceneFreeArea43) == 0x000048, "Wrong size on UATSceneFreeArea43");

// Class ATExt.ATSceneFreeArea44
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea44 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea44">();
	}
	static class UATSceneFreeArea44* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea44>();
	}
};
static_assert(alignof(UATSceneFreeArea44) == 0x000008, "Wrong alignment on UATSceneFreeArea44");
static_assert(sizeof(UATSceneFreeArea44) == 0x000048, "Wrong size on UATSceneFreeArea44");

// Class ATExt.ATSceneFreeArea45
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea45 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea45">();
	}
	static class UATSceneFreeArea45* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea45>();
	}
};
static_assert(alignof(UATSceneFreeArea45) == 0x000008, "Wrong alignment on UATSceneFreeArea45");
static_assert(sizeof(UATSceneFreeArea45) == 0x000048, "Wrong size on UATSceneFreeArea45");

// Class ATExt.ATSceneFreeArea46
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea46 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea46">();
	}
	static class UATSceneFreeArea46* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea46>();
	}
};
static_assert(alignof(UATSceneFreeArea46) == 0x000008, "Wrong alignment on UATSceneFreeArea46");
static_assert(sizeof(UATSceneFreeArea46) == 0x000048, "Wrong size on UATSceneFreeArea46");

// Class ATExt.ATSceneFreeArea47
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea47 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea47">();
	}
	static class UATSceneFreeArea47* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea47>();
	}
};
static_assert(alignof(UATSceneFreeArea47) == 0x000008, "Wrong alignment on UATSceneFreeArea47");
static_assert(sizeof(UATSceneFreeArea47) == 0x000048, "Wrong size on UATSceneFreeArea47");

// Class ATExt.ATSceneFreeArea48
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea48 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea48">();
	}
	static class UATSceneFreeArea48* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea48>();
	}
};
static_assert(alignof(UATSceneFreeArea48) == 0x000008, "Wrong alignment on UATSceneFreeArea48");
static_assert(sizeof(UATSceneFreeArea48) == 0x000048, "Wrong size on UATSceneFreeArea48");

// Class ATExt.ATSceneFreeArea49
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea49 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea49">();
	}
	static class UATSceneFreeArea49* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea49>();
	}
};
static_assert(alignof(UATSceneFreeArea49) == 0x000008, "Wrong alignment on UATSceneFreeArea49");
static_assert(sizeof(UATSceneFreeArea49) == 0x000048, "Wrong size on UATSceneFreeArea49");

// Class ATExt.ATSceneFreeArea50
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea50 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea50">();
	}
	static class UATSceneFreeArea50* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea50>();
	}
};
static_assert(alignof(UATSceneFreeArea50) == 0x000008, "Wrong alignment on UATSceneFreeArea50");
static_assert(sizeof(UATSceneFreeArea50) == 0x000048, "Wrong size on UATSceneFreeArea50");

// Class ATExt.ATSceneFreeArea51
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea51 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea51">();
	}
	static class UATSceneFreeArea51* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea51>();
	}
};
static_assert(alignof(UATSceneFreeArea51) == 0x000008, "Wrong alignment on UATSceneFreeArea51");
static_assert(sizeof(UATSceneFreeArea51) == 0x000048, "Wrong size on UATSceneFreeArea51");

// Class ATExt.ATSceneFreeArea52
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea52 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea52">();
	}
	static class UATSceneFreeArea52* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea52>();
	}
};
static_assert(alignof(UATSceneFreeArea52) == 0x000008, "Wrong alignment on UATSceneFreeArea52");
static_assert(sizeof(UATSceneFreeArea52) == 0x000048, "Wrong size on UATSceneFreeArea52");

// Class ATExt.ATSceneFreeArea53
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea53 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea53">();
	}
	static class UATSceneFreeArea53* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea53>();
	}
};
static_assert(alignof(UATSceneFreeArea53) == 0x000008, "Wrong alignment on UATSceneFreeArea53");
static_assert(sizeof(UATSceneFreeArea53) == 0x000048, "Wrong size on UATSceneFreeArea53");

// Class ATExt.ATSceneFreeArea54
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea54 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea54">();
	}
	static class UATSceneFreeArea54* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea54>();
	}
};
static_assert(alignof(UATSceneFreeArea54) == 0x000008, "Wrong alignment on UATSceneFreeArea54");
static_assert(sizeof(UATSceneFreeArea54) == 0x000048, "Wrong size on UATSceneFreeArea54");

// Class ATExt.ATSceneFreeArea56
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea56 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea56">();
	}
	static class UATSceneFreeArea56* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea56>();
	}
};
static_assert(alignof(UATSceneFreeArea56) == 0x000008, "Wrong alignment on UATSceneFreeArea56");
static_assert(sizeof(UATSceneFreeArea56) == 0x000048, "Wrong size on UATSceneFreeArea56");

// Class ATExt.ATSceneFreeArea57
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea57 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea57">();
	}
	static class UATSceneFreeArea57* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea57>();
	}
};
static_assert(alignof(UATSceneFreeArea57) == 0x000008, "Wrong alignment on UATSceneFreeArea57");
static_assert(sizeof(UATSceneFreeArea57) == 0x000048, "Wrong size on UATSceneFreeArea57");

// Class ATExt.ATSceneFreeArea58
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea58 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea58">();
	}
	static class UATSceneFreeArea58* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea58>();
	}
};
static_assert(alignof(UATSceneFreeArea58) == 0x000008, "Wrong alignment on UATSceneFreeArea58");
static_assert(sizeof(UATSceneFreeArea58) == 0x000048, "Wrong size on UATSceneFreeArea58");

// Class ATExt.ATSceneFreeArea59
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea59 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea59">();
	}
	static class UATSceneFreeArea59* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea59>();
	}
};
static_assert(alignof(UATSceneFreeArea59) == 0x000008, "Wrong alignment on UATSceneFreeArea59");
static_assert(sizeof(UATSceneFreeArea59) == 0x000048, "Wrong size on UATSceneFreeArea59");

// Class ATExt.ATSceneFreeArea61
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea61 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea61">();
	}
	static class UATSceneFreeArea61* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea61>();
	}
};
static_assert(alignof(UATSceneFreeArea61) == 0x000008, "Wrong alignment on UATSceneFreeArea61");
static_assert(sizeof(UATSceneFreeArea61) == 0x000048, "Wrong size on UATSceneFreeArea61");

// Class ATExt.ATSceneFreeArea62
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea62 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea62">();
	}
	static class UATSceneFreeArea62* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea62>();
	}
};
static_assert(alignof(UATSceneFreeArea62) == 0x000008, "Wrong alignment on UATSceneFreeArea62");
static_assert(sizeof(UATSceneFreeArea62) == 0x000048, "Wrong size on UATSceneFreeArea62");

// Class ATExt.ATSceneFreeArea63
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea63 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea63">();
	}
	static class UATSceneFreeArea63* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea63>();
	}
};
static_assert(alignof(UATSceneFreeArea63) == 0x000008, "Wrong alignment on UATSceneFreeArea63");
static_assert(sizeof(UATSceneFreeArea63) == 0x000048, "Wrong size on UATSceneFreeArea63");

// Class ATExt.ATSceneFreeArea64
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea64 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea64">();
	}
	static class UATSceneFreeArea64* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea64>();
	}
};
static_assert(alignof(UATSceneFreeArea64) == 0x000008, "Wrong alignment on UATSceneFreeArea64");
static_assert(sizeof(UATSceneFreeArea64) == 0x000048, "Wrong size on UATSceneFreeArea64");

// Class ATExt.ATSceneFreeArea65
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea65 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea65">();
	}
	static class UATSceneFreeArea65* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea65>();
	}
};
static_assert(alignof(UATSceneFreeArea65) == 0x000008, "Wrong alignment on UATSceneFreeArea65");
static_assert(sizeof(UATSceneFreeArea65) == 0x000048, "Wrong size on UATSceneFreeArea65");

// Class ATExt.ATSceneFreeArea66
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea66 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea66">();
	}
	static class UATSceneFreeArea66* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea66>();
	}
};
static_assert(alignof(UATSceneFreeArea66) == 0x000008, "Wrong alignment on UATSceneFreeArea66");
static_assert(sizeof(UATSceneFreeArea66) == 0x000048, "Wrong size on UATSceneFreeArea66");

// Class ATExt.ATSceneFreeArea67
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea67 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea67">();
	}
	static class UATSceneFreeArea67* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea67>();
	}
};
static_assert(alignof(UATSceneFreeArea67) == 0x000008, "Wrong alignment on UATSceneFreeArea67");
static_assert(sizeof(UATSceneFreeArea67) == 0x000048, "Wrong size on UATSceneFreeArea67");

// Class ATExt.ATSceneFreeArea68
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea68 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea68">();
	}
	static class UATSceneFreeArea68* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea68>();
	}
};
static_assert(alignof(UATSceneFreeArea68) == 0x000008, "Wrong alignment on UATSceneFreeArea68");
static_assert(sizeof(UATSceneFreeArea68) == 0x000048, "Wrong size on UATSceneFreeArea68");

// Class ATExt.ATSceneFreeArea69
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea69 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea69">();
	}
	static class UATSceneFreeArea69* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea69>();
	}
};
static_assert(alignof(UATSceneFreeArea69) == 0x000008, "Wrong alignment on UATSceneFreeArea69");
static_assert(sizeof(UATSceneFreeArea69) == 0x000048, "Wrong size on UATSceneFreeArea69");

// Class ATExt.ATSceneFreeArea70
// 0x0000 (0x0048 - 0x0048)
class UATSceneFreeArea70 final : public UATSceneFreeRoot
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeArea70">();
	}
	static class UATSceneFreeArea70* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeArea70>();
	}
};
static_assert(alignof(UATSceneFreeArea70) == 0x000008, "Wrong alignment on UATSceneFreeArea70");
static_assert(sizeof(UATSceneFreeArea70) == 0x000048, "Wrong size on UATSceneFreeArea70");

// Class ATExt.ATSceneFreeLoad
// 0x0000 (0x00C0 - 0x00C0)
class UATSceneFreeLoad final : public UATSceneFreeLoadBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeLoad">();
	}
	static class UATSceneFreeLoad* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeLoad>();
	}
};
static_assert(alignof(UATSceneFreeLoad) == 0x000008, "Wrong alignment on UATSceneFreeLoad");
static_assert(sizeof(UATSceneFreeLoad) == 0x0000C0, "Wrong size on UATSceneFreeLoad");

// Class ATExt.ATSceneFreePreLoad
// 0x0000 (0x0098 - 0x0098)
class UATSceneFreePreLoad final : public UATScenePreLoad
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreePreLoad">();
	}
	static class UATSceneFreePreLoad* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreePreLoad>();
	}
};
static_assert(alignof(UATSceneFreePreLoad) == 0x000008, "Wrong alignment on UATSceneFreePreLoad");
static_assert(sizeof(UATSceneFreePreLoad) == 0x000098, "Wrong size on UATSceneFreePreLoad");

// Class ATExt.ATSceneFreeTalk
// 0x0058 (0x0098 - 0x0040)
class UATSceneFreeTalk final : public UCFScene
{
public:
	uint8                                         Pad_40[0x58];                                      // 0x0040(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneFreeTalk">();
	}
	static class UATSceneFreeTalk* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneFreeTalk>();
	}
};
static_assert(alignof(UATSceneFreeTalk) == 0x000008, "Wrong alignment on UATSceneFreeTalk");
static_assert(sizeof(UATSceneFreeTalk) == 0x000098, "Wrong size on UATSceneFreeTalk");

// Class ATExt.ATSceneGeneralDemo
// 0x0000 (0x0048 - 0x0048)
class UATSceneGeneralDemo final : public UATSceneDemoBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneGeneralDemo">();
	}
	static class UATSceneGeneralDemo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneGeneralDemo>();
	}
};
static_assert(alignof(UATSceneGeneralDemo) == 0x000008, "Wrong alignment on UATSceneGeneralDemo");
static_assert(sizeof(UATSceneGeneralDemo) == 0x000048, "Wrong size on UATSceneGeneralDemo");

// Class ATExt.ATSceneGeneralTalk
// 0x0008 (0x0048 - 0x0040)
class UATSceneGeneralTalk final : public UCFScene
{
public:
	uint8                                         Pad_40[0x8];                                       // 0x0040(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnQuestPhaseEnd(class FName PhaseID, EQUEST_PHASE_TYPE Type);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneGeneralTalk">();
	}
	static class UATSceneGeneralTalk* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneGeneralTalk>();
	}
};
static_assert(alignof(UATSceneGeneralTalk) == 0x000008, "Wrong alignment on UATSceneGeneralTalk");
static_assert(sizeof(UATSceneGeneralTalk) == 0x000048, "Wrong size on UATSceneGeneralTalk");

// Class ATExt.ATSceneIngameDemo
// 0x0000 (0x0048 - 0x0048)
class UATSceneIngameDemo final : public UATSceneDemoBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneIngameDemo">();
	}
	static class UATSceneIngameDemo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneIngameDemo>();
	}
};
static_assert(alignof(UATSceneIngameDemo) == 0x000008, "Wrong alignment on UATSceneIngameDemo");
static_assert(sizeof(UATSceneIngameDemo) == 0x000048, "Wrong size on UATSceneIngameDemo");

// Class ATExt.ATSceneMainRoot
// 0x0000 (0x0040 - 0x0040)
class UATSceneMainRoot final : public UCFScene
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneMainRoot">();
	}
	static class UATSceneMainRoot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneMainRoot>();
	}
};
static_assert(alignof(UATSceneMainRoot) == 0x000008, "Wrong alignment on UATSceneMainRoot");
static_assert(sizeof(UATSceneMainRoot) == 0x000040, "Wrong size on UATSceneMainRoot");

// Class ATExt.ATSceneManager
// 0x0000 (0x01C0 - 0x01C0)
class UATSceneManager final : public UCFSceneManager
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneManager">();
	}
	static class UATSceneManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneManager>();
	}
};
static_assert(alignof(UATSceneManager) == 0x000008, "Wrong alignment on UATSceneManager");
static_assert(sizeof(UATSceneManager) == 0x0001C0, "Wrong size on UATSceneManager");

// Class ATExt.ATSceneMiniGame
// 0x0058 (0x0098 - 0x0040)
class UATSceneMiniGame final : public UCFScene
{
public:
	uint8                                         Pad_40[0x58];                                      // 0x0040(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneMiniGame">();
	}
	static class UATSceneMiniGame* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneMiniGame>();
	}
};
static_assert(alignof(UATSceneMiniGame) == 0x000008, "Wrong alignment on UATSceneMiniGame");
static_assert(sizeof(UATSceneMiniGame) == 0x000098, "Wrong size on UATSceneMiniGame");

// Class ATExt.ATScenePause
// 0x0008 (0x0048 - 0x0040)
class UATScenePause final : public UCFScene
{
public:
	uint8                                         Pad_40[0x8];                                       // 0x0040(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATScenePause">();
	}
	static class UATScenePause* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATScenePause>();
	}
};
static_assert(alignof(UATScenePause) == 0x000008, "Wrong alignment on UATScenePause");
static_assert(sizeof(UATScenePause) == 0x000048, "Wrong size on UATScenePause");

// Class ATExt.ATSceneRoot
// 0x0058 (0x0098 - 0x0040)
class UATSceneRoot final : public UCFScene
{
public:
	uint8                                         Pad_40[0x58];                                      // 0x0040(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneRoot">();
	}
	static class UATSceneRoot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneRoot>();
	}
};
static_assert(alignof(UATSceneRoot) == 0x000008, "Wrong alignment on UATSceneRoot");
static_assert(sizeof(UATSceneRoot) == 0x000098, "Wrong size on UATSceneRoot");

// Class ATExt.ATSceneParam
// 0x0008 (0x0048 - 0x0040)
class UATSceneParam final : public UCFSceneChangeParamBase
{
public:
	uint8                                         Pad_40[0x8];                                       // 0x0040(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneParam">();
	}
	static class UATSceneParam* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneParam>();
	}
};
static_assert(alignof(UATSceneParam) == 0x000008, "Wrong alignment on UATSceneParam");
static_assert(sizeof(UATSceneParam) == 0x000048, "Wrong size on UATSceneParam");

// Class ATExt.ATSceneSaveDataLoadBase
// 0x0070 (0x00B0 - 0x0040)
class UATSceneSaveDataLoadBase : public UCFScene
{
public:
	uint8                                         Pad_40[0x70];                                      // 0x0040(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneSaveDataLoadBase">();
	}
	static class UATSceneSaveDataLoadBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneSaveDataLoadBase>();
	}
};
static_assert(alignof(UATSceneSaveDataLoadBase) == 0x000008, "Wrong alignment on UATSceneSaveDataLoadBase");
static_assert(sizeof(UATSceneSaveDataLoadBase) == 0x0000B0, "Wrong size on UATSceneSaveDataLoadBase");

// Class ATExt.ATSceneSaveDataLoad
// 0x0000 (0x00B0 - 0x00B0)
class UATSceneSaveDataLoad final : public UATSceneSaveDataLoadBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneSaveDataLoad">();
	}
	static class UATSceneSaveDataLoad* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneSaveDataLoad>();
	}
};
static_assert(alignof(UATSceneSaveDataLoad) == 0x000008, "Wrong alignment on UATSceneSaveDataLoad");
static_assert(sizeof(UATSceneSaveDataLoad) == 0x0000B0, "Wrong size on UATSceneSaveDataLoad");

// Class ATExt.ATSceneSaveDataLoadParam
// 0x0008 (0x0048 - 0x0040)
class UATSceneSaveDataLoadParam final : public UCFSceneChangeParamBase
{
public:
	uint8                                         Pad_40[0x8];                                       // 0x0040(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneSaveDataLoadParam">();
	}
	static class UATSceneSaveDataLoadParam* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneSaveDataLoadParam>();
	}
};
static_assert(alignof(UATSceneSaveDataLoadParam) == 0x000008, "Wrong alignment on UATSceneSaveDataLoadParam");
static_assert(sizeof(UATSceneSaveDataLoadParam) == 0x000048, "Wrong size on UATSceneSaveDataLoadParam");

// Class ATExt.ATSceneTcg
// 0x0008 (0x0048 - 0x0040)
class UATSceneTcg final : public UCFScene
{
public:
	uint8                                         Pad_40[0x8];                                       // 0x0040(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneTcg">();
	}
	static class UATSceneTcg* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneTcg>();
	}
};
static_assert(alignof(UATSceneTcg) == 0x000008, "Wrong alignment on UATSceneTcg");
static_assert(sizeof(UATSceneTcg) == 0x000048, "Wrong size on UATSceneTcg");

// Class ATExt.ATSceneTitleCheckSaveData
// 0x0058 (0x0098 - 0x0040)
class UATSceneTitleCheckSaveData final : public UCFScene
{
public:
	uint8                                         Pad_40[0x58];                                      // 0x0040(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneTitleCheckSaveData">();
	}
	static class UATSceneTitleCheckSaveData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneTitleCheckSaveData>();
	}
};
static_assert(alignof(UATSceneTitleCheckSaveData) == 0x000008, "Wrong alignment on UATSceneTitleCheckSaveData");
static_assert(sizeof(UATSceneTitleCheckSaveData) == 0x000098, "Wrong size on UATSceneTitleCheckSaveData");

// Class ATExt.ATSceneTitleMain
// 0x0058 (0x0098 - 0x0040)
class UATSceneTitleMain final : public UCFScene
{
public:
	uint8                                         Pad_40[0x58];                                      // 0x0040(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneTitleMain">();
	}
	static class UATSceneTitleMain* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneTitleMain>();
	}
};
static_assert(alignof(UATSceneTitleMain) == 0x000008, "Wrong alignment on UATSceneTitleMain");
static_assert(sizeof(UATSceneTitleMain) == 0x000098, "Wrong size on UATSceneTitleMain");

// Class ATExt.ATSceneTitleMenu
// 0x0058 (0x0098 - 0x0040)
class UATSceneTitleMenu final : public UCFScene
{
public:
	uint8                                         Pad_40[0x58];                                      // 0x0040(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneTitleMenu">();
	}
	static class UATSceneTitleMenu* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneTitleMenu>();
	}
};
static_assert(alignof(UATSceneTitleMenu) == 0x000008, "Wrong alignment on UATSceneTitleMenu");
static_assert(sizeof(UATSceneTitleMenu) == 0x000098, "Wrong size on UATSceneTitleMenu");

// Class ATExt.ATSceneTitleMenuLicense
// 0x0058 (0x0098 - 0x0040)
class UATSceneTitleMenuLicense final : public UCFScene
{
public:
	uint8                                         Pad_40[0x58];                                      // 0x0040(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneTitleMenuLicense">();
	}
	static class UATSceneTitleMenuLicense* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneTitleMenuLicense>();
	}
};
static_assert(alignof(UATSceneTitleMenuLicense) == 0x000008, "Wrong alignment on UATSceneTitleMenuLicense");
static_assert(sizeof(UATSceneTitleMenuLicense) == 0x000098, "Wrong size on UATSceneTitleMenuLicense");

// Class ATExt.ATSceneTitleMovie
// 0x0000 (0x0040 - 0x0040)
class UATSceneTitleMovie final : public UCFScene
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneTitleMovie">();
	}
	static class UATSceneTitleMovie* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneTitleMovie>();
	}
};
static_assert(alignof(UATSceneTitleMovie) == 0x000008, "Wrong alignment on UATSceneTitleMovie");
static_assert(sizeof(UATSceneTitleMovie) == 0x000040, "Wrong size on UATSceneTitleMovie");

// Class ATExt.ATSceneTitleRoot
// 0x0058 (0x0098 - 0x0040)
class UATSceneTitleRoot final : public UCFScene
{
public:
	uint8                                         Pad_40[0x58];                                      // 0x0040(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneTitleRoot">();
	}
	static class UATSceneTitleRoot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneTitleRoot>();
	}
};
static_assert(alignof(UATSceneTitleRoot) == 0x000008, "Wrong alignment on UATSceneTitleRoot");
static_assert(sizeof(UATSceneTitleRoot) == 0x000098, "Wrong size on UATSceneTitleRoot");

// Class ATExt.ATSceneTrialClear
// 0x0000 (0x0040 - 0x0040)
class UATSceneTrialClear final : public UCFScene
{
public:
	void OnEndFinishUI();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneTrialClear">();
	}
	static class UATSceneTrialClear* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneTrialClear>();
	}
};
static_assert(alignof(UATSceneTrialClear) == 0x000008, "Wrong alignment on UATSceneTrialClear");
static_assert(sizeof(UATSceneTrialClear) == 0x000040, "Wrong size on UATSceneTrialClear");

// Class ATExt.ATSceneUIDLCMenu
// 0x0018 (0x0058 - 0x0040)
class UATSceneUIDLCMenu final : public UCFScene
{
public:
	uint8                                         Pad_40[0x18];                                      // 0x0040(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneUIDLCMenu">();
	}
	static class UATSceneUIDLCMenu* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneUIDLCMenu>();
	}
};
static_assert(alignof(UATSceneUIDLCMenu) == 0x000008, "Wrong alignment on UATSceneUIDLCMenu");
static_assert(sizeof(UATSceneUIDLCMenu) == 0x000058, "Wrong size on UATSceneUIDLCMenu");

// Class ATExt.ATSceneUIMainMenu
// 0x0018 (0x0058 - 0x0040)
class UATSceneUIMainMenu final : public UCFScene
{
public:
	uint8                                         Pad_40[0x18];                                      // 0x0040(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneUIMainMenu">();
	}
	static class UATSceneUIMainMenu* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneUIMainMenu>();
	}
};
static_assert(alignof(UATSceneUIMainMenu) == 0x000008, "Wrong alignment on UATSceneUIMainMenu");
static_assert(sizeof(UATSceneUIMainMenu) == 0x000058, "Wrong size on UATSceneUIMainMenu");

// Class ATExt.ATSceneWorldMapLoad
// 0x0000 (0x00C0 - 0x00C0)
class UATSceneWorldMapLoad final : public UATSceneFreeLoadBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneWorldMapLoad">();
	}
	static class UATSceneWorldMapLoad* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneWorldMapLoad>();
	}
};
static_assert(alignof(UATSceneWorldMapLoad) == 0x000008, "Wrong alignment on UATSceneWorldMapLoad");
static_assert(sizeof(UATSceneWorldMapLoad) == 0x0000C0, "Wrong size on UATSceneWorldMapLoad");

// Class ATExt.ATSceneWorldMapRoot
// 0x0058 (0x0098 - 0x0040)
class UATSceneWorldMapRoot final : public UCFScene
{
public:
	uint8                                         Pad_40[0x58];                                      // 0x0040(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneWorldMapRoot">();
	}
	static class UATSceneWorldMapRoot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneWorldMapRoot>();
	}
};
static_assert(alignof(UATSceneWorldMapRoot) == 0x000008, "Wrong alignment on UATSceneWorldMapRoot");
static_assert(sizeof(UATSceneWorldMapRoot) == 0x000098, "Wrong size on UATSceneWorldMapRoot");

// Class ATExt.ATSceneWorldMapSelect
// 0x0000 (0x0040 - 0x0040)
class UATSceneWorldMapSelect final : public UCFScene
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSceneWorldMapSelect">();
	}
	static class UATSceneWorldMapSelect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSceneWorldMapSelect>();
	}
};
static_assert(alignof(UATSceneWorldMapSelect) == 0x000008, "Wrong alignment on UATSceneWorldMapSelect");
static_assert(sizeof(UATSceneWorldMapSelect) == 0x000040, "Wrong size on UATSceneWorldMapSelect");

// Class ATExt.ATSingleton
// 0x0000 (0x0048 - 0x0048)
class UATSingleton final : public UCFSingleton
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSingleton">();
	}
	static class UATSingleton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSingleton>();
	}
};
static_assert(alignof(UATSingleton) == 0x000008, "Wrong alignment on UATSingleton");
static_assert(sizeof(UATSingleton) == 0x000048, "Wrong size on UATSingleton");

// Class ATExt.ATSoulEmblem
// 0x0080 (0x00A8 - 0x0028)
class UATSoulEmblem final : public UObject
{
public:
	uint8                                         Pad_28[0x80];                                      // 0x0028(0x0080)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSoulEmblem">();
	}
	static class UATSoulEmblem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSoulEmblem>();
	}
};
static_assert(alignof(UATSoulEmblem) == 0x000008, "Wrong alignment on UATSoulEmblem");
static_assert(sizeof(UATSoulEmblem) == 0x0000A8, "Wrong size on UATSoulEmblem");

// Class ATExt.ATStateMachine
// 0x0000 (0x0028 - 0x0028)
class UATStateMachine final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATStateMachine">();
	}
	static class UATStateMachine* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATStateMachine>();
	}
};
static_assert(alignof(UATStateMachine) == 0x000008, "Wrong alignment on UATStateMachine");
static_assert(sizeof(UATStateMachine) == 0x000028, "Wrong size on UATStateMachine");

// Class ATExt.ATSyncTimer
// 0x0008 (0x0038 - 0x0030)
class UATSyncTimer final : public UCFManagerObject
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATSyncTimer">();
	}
	static class UATSyncTimer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATSyncTimer>();
	}
};
static_assert(alignof(UATSyncTimer) == 0x000008, "Wrong alignment on UATSyncTimer");
static_assert(sizeof(UATSyncTimer) == 0x000038, "Wrong size on UATSyncTimer");

// Class ATExt.ATTournamentBattleBattleCountQTE
// 0x0128 (0x0150 - 0x0028)
class UATTournamentBattleBattleCountQTE final : public UObject
{
public:
	uint8                                         Pad_28[0x128];                                     // 0x0028(0x0128)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATTournamentBattleBattleCountQTE">();
	}
	static class UATTournamentBattleBattleCountQTE* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATTournamentBattleBattleCountQTE>();
	}
};
static_assert(alignof(UATTournamentBattleBattleCountQTE) == 0x000008, "Wrong alignment on UATTournamentBattleBattleCountQTE");
static_assert(sizeof(UATTournamentBattleBattleCountQTE) == 0x000150, "Wrong size on UATTournamentBattleBattleCountQTE");

// Class ATExt.ATTournamentBattleRingoutWarning
// 0x00C0 (0x00E8 - 0x0028)
class UATTournamentBattleRingoutWarning final : public UObject
{
public:
	uint8                                         Pad_28[0xC0];                                      // 0x0028(0x00C0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATTournamentBattleRingoutWarning">();
	}
	static class UATTournamentBattleRingoutWarning* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATTournamentBattleRingoutWarning>();
	}
};
static_assert(alignof(UATTournamentBattleRingoutWarning) == 0x000008, "Wrong alignment on UATTournamentBattleRingoutWarning");
static_assert(sizeof(UATTournamentBattleRingoutWarning) == 0x0000E8, "Wrong size on UATTournamentBattleRingoutWarning");

// Class ATExt.ATTournamentField
// 0x0040 (0x0378 - 0x0338)
class AATTournamentField final : public AActor
{
public:
	class UBoxComponent*                          BoxComponentF;                                     // 0x0338(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                          BoxComponentB;                                     // 0x0340(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                          BoxComponentL;                                     // 0x0348(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                          BoxComponentR;                                     // 0x0350(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                          BoxComponentU;                                     // 0x0358(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                          BoxComponentD;                                     // 0x0360(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FATTournamentFieldParam                BarrierParam;                                      // 0x0368(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATTournamentField">();
	}
	static class AATTournamentField* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATTournamentField>();
	}
};
static_assert(alignof(AATTournamentField) == 0x000008, "Wrong alignment on AATTournamentField");
static_assert(sizeof(AATTournamentField) == 0x000378, "Wrong size on AATTournamentField");
static_assert(offsetof(AATTournamentField, BoxComponentF) == 0x000338, "Member 'AATTournamentField::BoxComponentF' has a wrong offset!");
static_assert(offsetof(AATTournamentField, BoxComponentB) == 0x000340, "Member 'AATTournamentField::BoxComponentB' has a wrong offset!");
static_assert(offsetof(AATTournamentField, BoxComponentL) == 0x000348, "Member 'AATTournamentField::BoxComponentL' has a wrong offset!");
static_assert(offsetof(AATTournamentField, BoxComponentR) == 0x000350, "Member 'AATTournamentField::BoxComponentR' has a wrong offset!");
static_assert(offsetof(AATTournamentField, BoxComponentU) == 0x000358, "Member 'AATTournamentField::BoxComponentU' has a wrong offset!");
static_assert(offsetof(AATTournamentField, BoxComponentD) == 0x000360, "Member 'AATTournamentField::BoxComponentD' has a wrong offset!");
static_assert(offsetof(AATTournamentField, BarrierParam) == 0x000368, "Member 'AATTournamentField::BarrierParam' has a wrong offset!");

// Class ATExt.ATTrophyManager
// 0x0048 (0x0078 - 0x0030)
class UATTrophyManager final : public UBaseObject
{
public:
	uint8                                         Pad_30[0x48];                                      // 0x0030(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATTrophyManager">();
	}
	static class UATTrophyManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATTrophyManager>();
	}
};
static_assert(alignof(UATTrophyManager) == 0x000008, "Wrong alignment on UATTrophyManager");
static_assert(sizeof(UATTrophyManager) == 0x000078, "Wrong size on UATTrophyManager");

// Class ATExt.ATTutorialBattleMainPhase
// 0x0098 (0x00C8 - 0x0030)
class UATTutorialBattleMainPhase final : public UATEventBattlePhaseBase
{
public:
	uint8                                         Pad_30[0x98];                                      // 0x0030(0x0098)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATTutorialBattleMainPhase">();
	}
	static class UATTutorialBattleMainPhase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATTutorialBattleMainPhase>();
	}
};
static_assert(alignof(UATTutorialBattleMainPhase) == 0x000008, "Wrong alignment on UATTutorialBattleMainPhase");
static_assert(sizeof(UATTutorialBattleMainPhase) == 0x0000C8, "Wrong size on UATTutorialBattleMainPhase");

// Class ATExt.ATTutorialBattleRootManager
// 0x0030 (0x0418 - 0x03E8)
class AATTutorialBattleRootManager final : public AATEventBattleRootManagerBase
{
public:
	float                                         WaitTimeAfterTips;                                 // 0x03E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTipsSpec>                      TipsSpecTable;                                     // 0x03F0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	float                                         HeatupValue;                                       // 0x0400(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         HpStopValue;                                       // 0x0404(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bEnableNoDeath;                                    // 0x0408(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        AtomEffect;                                        // 0x0410(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATTutorialBattleRootManager">();
	}
	static class AATTutorialBattleRootManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AATTutorialBattleRootManager>();
	}
};
static_assert(alignof(AATTutorialBattleRootManager) == 0x000008, "Wrong alignment on AATTutorialBattleRootManager");
static_assert(sizeof(AATTutorialBattleRootManager) == 0x000418, "Wrong size on AATTutorialBattleRootManager");
static_assert(offsetof(AATTutorialBattleRootManager, WaitTimeAfterTips) == 0x0003E8, "Member 'AATTutorialBattleRootManager::WaitTimeAfterTips' has a wrong offset!");
static_assert(offsetof(AATTutorialBattleRootManager, TipsSpecTable) == 0x0003F0, "Member 'AATTutorialBattleRootManager::TipsSpecTable' has a wrong offset!");
static_assert(offsetof(AATTutorialBattleRootManager, HeatupValue) == 0x000400, "Member 'AATTutorialBattleRootManager::HeatupValue' has a wrong offset!");
static_assert(offsetof(AATTutorialBattleRootManager, HpStopValue) == 0x000404, "Member 'AATTutorialBattleRootManager::HpStopValue' has a wrong offset!");
static_assert(offsetof(AATTutorialBattleRootManager, bEnableNoDeath) == 0x000408, "Member 'AATTutorialBattleRootManager::bEnableNoDeath' has a wrong offset!");
static_assert(offsetof(AATTutorialBattleRootManager, AtomEffect) == 0x000410, "Member 'AATTutorialBattleRootManager::AtomEffect' has a wrong offset!");

// Class ATExt.CameraActorIngameDemo
// 0x0010 (0x09B0 - 0x09A0)
class ACameraActorIngameDemo final : public ACameraActor
{
public:
	class UCameraAnimInst*                        CameraAnimInst;                                    // 0x09A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9A8[0x8];                                      // 0x09A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CameraActorIngameDemo">();
	}
	static class ACameraActorIngameDemo* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACameraActorIngameDemo>();
	}
};
static_assert(alignof(ACameraActorIngameDemo) == 0x000010, "Wrong alignment on ACameraActorIngameDemo");
static_assert(sizeof(ACameraActorIngameDemo) == 0x0009B0, "Wrong size on ACameraActorIngameDemo");
static_assert(offsetof(ACameraActorIngameDemo, CameraAnimInst) == 0x0009A0, "Member 'ACameraActorIngameDemo::CameraAnimInst' has a wrong offset!");

// Class ATExt.CameraAttachActor
// 0x0008 (0x0340 - 0x0338)
class ACameraAttachActor final : public AActor
{
public:
	class USceneComponent*                        SceneComponent;                                    // 0x0338(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CameraAttachActor">();
	}
	static class ACameraAttachActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACameraAttachActor>();
	}
};
static_assert(alignof(ACameraAttachActor) == 0x000008, "Wrong alignment on ACameraAttachActor");
static_assert(sizeof(ACameraAttachActor) == 0x000340, "Wrong size on ACameraAttachActor");
static_assert(offsetof(ACameraAttachActor, SceneComponent) == 0x000338, "Member 'ACameraAttachActor::SceneComponent' has a wrong offset!");

// Class ATExt.CameraSpringArmComponent
// 0x0030 (0x0300 - 0x02D0)
class UCameraSpringArmComponent final : public USpringArmComponent
{
public:
	uint8                                         Pad_2D0[0x30];                                     // 0x02D0(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CameraSpringArmComponent">();
	}
	static class UCameraSpringArmComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCameraSpringArmComponent>();
	}
};
static_assert(alignof(UCameraSpringArmComponent) == 0x000008, "Wrong alignment on UCameraSpringArmComponent");
static_assert(sizeof(UCameraSpringArmComponent) == 0x000300, "Wrong size on UCameraSpringArmComponent");

// Class ATExt.GCGTransferSaveFile
// 0x02D8 (0x0A28 - 0x0750)
class UGCGTransferSaveFile final : public UATSaveTcg
{
public:
	struct FGCGTransferOfflineInfoSave            TransferSaveFile;                                  // 0x0750(0x02D8)(NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GCGTransferSaveFile">();
	}
	static class UGCGTransferSaveFile* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGCGTransferSaveFile>();
	}
};
static_assert(alignof(UGCGTransferSaveFile) == 0x000008, "Wrong alignment on UGCGTransferSaveFile");
static_assert(sizeof(UGCGTransferSaveFile) == 0x000A28, "Wrong size on UGCGTransferSaveFile");
static_assert(offsetof(UGCGTransferSaveFile, TransferSaveFile) == 0x000750, "Member 'UGCGTransferSaveFile::TransferSaveFile' has a wrong offset!");

// Class ATExt.ViewActorPlayerMoveBase
// 0x0070 (0x0448 - 0x03D8)
class AViewActorPlayerMoveBase : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x70];                                     // 0x03D8(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorPlayerMoveBase">();
	}
	static class AViewActorPlayerMoveBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorPlayerMoveBase>();
	}
};
static_assert(alignof(AViewActorPlayerMoveBase) == 0x000008, "Wrong alignment on AViewActorPlayerMoveBase");
static_assert(sizeof(AViewActorPlayerMoveBase) == 0x000448, "Wrong size on AViewActorPlayerMoveBase");

// Class ATExt.ViewActorFly
// 0x00B8 (0x0500 - 0x0448)
class AViewActorFly : public AViewActorPlayerMoveBase
{
public:
	uint8                                         Pad_448[0xB8];                                     // 0x0448(0x00B8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorFly">();
	}
	static class AViewActorFly* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorFly>();
	}
};
static_assert(alignof(AViewActorFly) == 0x000008, "Wrong alignment on AViewActorFly");
static_assert(sizeof(AViewActorFly) == 0x000500, "Wrong size on AViewActorFly");

// Class ATExt.ViewActorAirCarFly
// 0x0030 (0x0530 - 0x0500)
class AViewActorAirCarFly final : public AViewActorFly
{
public:
	uint8                                         Pad_500[0x28];                                     // 0x0500(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             M_pAirCarCameraConstParamTable;                    // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorAirCarFly">();
	}
	static class AViewActorAirCarFly* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorAirCarFly>();
	}
};
static_assert(alignof(AViewActorAirCarFly) == 0x000008, "Wrong alignment on AViewActorAirCarFly");
static_assert(sizeof(AViewActorAirCarFly) == 0x000530, "Wrong size on AViewActorAirCarFly");
static_assert(offsetof(AViewActorAirCarFly, M_pAirCarCameraConstParamTable) == 0x000528, "Member 'AViewActorAirCarFly::M_pAirCarCameraConstParamTable' has a wrong offset!");

// Class ATExt.ViewActorAirCarFpView
// 0x0070 (0x0448 - 0x03D8)
class AViewActorAirCarFpView final : public AViewActor
{
public:
	class AAirCar*                                AirCarIns;                                         // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AAirCarController*                      AirCarCtl;                                         // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AAT_Character*                          RideCharIns;                                       // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMeshComponent*                 RideCharMesh;                                      // 0x03F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3F8[0x50];                                     // 0x03F8(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorAirCarFpView">();
	}
	static class AViewActorAirCarFpView* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorAirCarFpView>();
	}
};
static_assert(alignof(AViewActorAirCarFpView) == 0x000008, "Wrong alignment on AViewActorAirCarFpView");
static_assert(sizeof(AViewActorAirCarFpView) == 0x000448, "Wrong size on AViewActorAirCarFpView");
static_assert(offsetof(AViewActorAirCarFpView, AirCarIns) == 0x0003D8, "Member 'AViewActorAirCarFpView::AirCarIns' has a wrong offset!");
static_assert(offsetof(AViewActorAirCarFpView, AirCarCtl) == 0x0003E0, "Member 'AViewActorAirCarFpView::AirCarCtl' has a wrong offset!");
static_assert(offsetof(AViewActorAirCarFpView, RideCharIns) == 0x0003E8, "Member 'AViewActorAirCarFpView::RideCharIns' has a wrong offset!");
static_assert(offsetof(AViewActorAirCarFpView, RideCharMesh) == 0x0003F0, "Member 'AViewActorAirCarFpView::RideCharMesh' has a wrong offset!");

// Class ATExt.ViewActorAndroidAssaultEscape
// 0x0028 (0x0400 - 0x03D8)
class AViewActorAndroidAssaultEscape final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x28];                                     // 0x03D8(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorAndroidAssaultEscape">();
	}
	static class AViewActorAndroidAssaultEscape* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorAndroidAssaultEscape>();
	}
};
static_assert(alignof(AViewActorAndroidAssaultEscape) == 0x000008, "Wrong alignment on AViewActorAndroidAssaultEscape");
static_assert(sizeof(AViewActorAndroidAssaultEscape) == 0x000400, "Wrong size on AViewActorAndroidAssaultEscape");

// Class ATExt.ViewActorAnim
// 0x0018 (0x03F0 - 0x03D8)
class AViewActorAnim final : public AViewActor
{
public:
	bool                                          bCalcFov;                                          // 0x03D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACameraAttachActor*                     CameraAttachActor;                                 // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3E8[0x8];                                      // 0x03E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorAnim">();
	}
	static class AViewActorAnim* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorAnim>();
	}
};
static_assert(alignof(AViewActorAnim) == 0x000008, "Wrong alignment on AViewActorAnim");
static_assert(sizeof(AViewActorAnim) == 0x0003F0, "Wrong size on AViewActorAnim");
static_assert(offsetof(AViewActorAnim, bCalcFov) == 0x0003D8, "Member 'AViewActorAnim::bCalcFov' has a wrong offset!");
static_assert(offsetof(AViewActorAnim, CameraAttachActor) == 0x0003E0, "Member 'AViewActorAnim::CameraAttachActor' has a wrong offset!");

// Class ATExt.ViewActorAppearance
// 0x0008 (0x03E0 - 0x03D8)
class AViewActorAppearance final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x8];                                      // 0x03D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorAppearance">();
	}
	static class AViewActorAppearance* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorAppearance>();
	}
};
static_assert(alignof(AViewActorAppearance) == 0x000008, "Wrong alignment on AViewActorAppearance");
static_assert(sizeof(AViewActorAppearance) == 0x0003E0, "Wrong size on AViewActorAppearance");

// Class ATExt.ViewActorAssault
// 0x0018 (0x03F0 - 0x03D8)
class AViewActorAssault final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x18];                                     // 0x03D8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorAssault">();
	}
	static class AViewActorAssault* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorAssault>();
	}
};
static_assert(alignof(AViewActorAssault) == 0x000008, "Wrong alignment on AViewActorAssault");
static_assert(sizeof(AViewActorAssault) == 0x0003F0, "Wrong size on AViewActorAssault");

// Class ATExt.ViewActorBaseballGame
// 0x0040 (0x0418 - 0x03D8)
class AViewActorBaseballGame final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x38];                                     // 0x03D8(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               M_RadiationParticle;                               // 0x0410(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorBaseballGame">();
	}
	static class AViewActorBaseballGame* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorBaseballGame>();
	}
};
static_assert(alignof(AViewActorBaseballGame) == 0x000008, "Wrong alignment on AViewActorBaseballGame");
static_assert(sizeof(AViewActorBaseballGame) == 0x000418, "Wrong size on AViewActorBaseballGame");
static_assert(offsetof(AViewActorBaseballGame, M_RadiationParticle) == 0x000410, "Member 'AViewActorBaseballGame::M_RadiationParticle' has a wrong offset!");

// Class ATExt.ViewActorBattle
// 0x0090 (0x0468 - 0x03D8)
class AViewActorBattle final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x90];                                     // 0x03D8(0x0090)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorBattle">();
	}
	static class AViewActorBattle* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorBattle>();
	}
};
static_assert(alignof(AViewActorBattle) == 0x000008, "Wrong alignment on AViewActorBattle");
static_assert(sizeof(AViewActorBattle) == 0x000468, "Wrong size on AViewActorBattle");

// Class ATExt.ViewActorBattleBossSkill
// 0x0038 (0x0410 - 0x03D8)
class AViewActorBattleBossSkill final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x38];                                     // 0x03D8(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorBattleBossSkill">();
	}
	static class AViewActorBattleBossSkill* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorBattleBossSkill>();
	}
};
static_assert(alignof(AViewActorBattleBossSkill) == 0x000008, "Wrong alignment on AViewActorBattleBossSkill");
static_assert(sizeof(AViewActorBattleBossSkill) == 0x000410, "Wrong size on AViewActorBattleBossSkill");

// Class ATExt.ViewActorBattleEnd
// 0x0018 (0x03F0 - 0x03D8)
class AViewActorBattleEnd final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x18];                                     // 0x03D8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorBattleEnd">();
	}
	static class AViewActorBattleEnd* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorBattleEnd>();
	}
};
static_assert(alignof(AViewActorBattleEnd) == 0x000008, "Wrong alignment on AViewActorBattleEnd");
static_assert(sizeof(AViewActorBattleEnd) == 0x0003F0, "Wrong size on AViewActorBattleEnd");

// Class ATExt.ViewActorShortCombo
// 0x0010 (0x03E8 - 0x03D8)
class AViewActorShortCombo : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x10];                                     // 0x03D8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorShortCombo">();
	}
	static class AViewActorShortCombo* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorShortCombo>();
	}
};
static_assert(alignof(AViewActorShortCombo) == 0x000008, "Wrong alignment on AViewActorShortCombo");
static_assert(sizeof(AViewActorShortCombo) == 0x0003E8, "Wrong size on AViewActorShortCombo");

// Class ATExt.ViewActorComboCut
// 0x0008 (0x03F0 - 0x03E8)
class AViewActorComboCut final : public AViewActorShortCombo
{
public:
	uint8                                         Pad_3E8[0x8];                                      // 0x03E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorComboCut">();
	}
	static class AViewActorComboCut* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorComboCut>();
	}
};
static_assert(alignof(AViewActorComboCut) == 0x000008, "Wrong alignment on AViewActorComboCut");
static_assert(sizeof(AViewActorComboCut) == 0x0003F0, "Wrong size on AViewActorComboCut");

// Class ATExt.ViewActorCookDemo
// 0x0028 (0x0400 - 0x03D8)
class AViewActorCookDemo final : public AViewActor
{
public:
	class UCameraAnim*                            NowCameraAnim;                                     // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3E0[0x18];                                     // 0x03E0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class ACameraAttachActor*                     M_pAttachActor;                                    // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void ChangeCameraAnim(class UCameraAnim* CameraAnim, bool bLoop);
	void FinishCameraAnim();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorCookDemo">();
	}
	static class AViewActorCookDemo* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorCookDemo>();
	}
};
static_assert(alignof(AViewActorCookDemo) == 0x000008, "Wrong alignment on AViewActorCookDemo");
static_assert(sizeof(AViewActorCookDemo) == 0x000400, "Wrong size on AViewActorCookDemo");
static_assert(offsetof(AViewActorCookDemo, NowCameraAnim) == 0x0003D8, "Member 'AViewActorCookDemo::NowCameraAnim' has a wrong offset!");
static_assert(offsetof(AViewActorCookDemo, M_pAttachActor) == 0x0003F8, "Member 'AViewActorCookDemo::M_pAttachActor' has a wrong offset!");

// Class ATExt.ViewActorCpl003ESkill007
// 0x0020 (0x03F8 - 0x03D8)
class AViewActorCpl003ESkill007 final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x20];                                     // 0x03D8(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorCpl003ESkill007">();
	}
	static class AViewActorCpl003ESkill007* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorCpl003ESkill007>();
	}
};
static_assert(alignof(AViewActorCpl003ESkill007) == 0x000008, "Wrong alignment on AViewActorCpl003ESkill007");
static_assert(sizeof(AViewActorCpl003ESkill007) == 0x0003F8, "Wrong size on AViewActorCpl003ESkill007");

// Class ATExt.ViewActorCpl005GSkill003
// 0x0048 (0x0420 - 0x03D8)
class AViewActorCpl005GSkill003 final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x48];                                     // 0x03D8(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorCpl005GSkill003">();
	}
	static class AViewActorCpl005GSkill003* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorCpl005GSkill003>();
	}
};
static_assert(alignof(AViewActorCpl005GSkill003) == 0x000008, "Wrong alignment on AViewActorCpl005GSkill003");
static_assert(sizeof(AViewActorCpl005GSkill003) == 0x000420, "Wrong size on AViewActorCpl005GSkill003");

// Class ATExt.ViewActorCpl005SkillDeathSlicer
// 0x0028 (0x0400 - 0x03D8)
class AViewActorCpl005SkillDeathSlicer final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x28];                                     // 0x03D8(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorCpl005SkillDeathSlicer">();
	}
	static class AViewActorCpl005SkillDeathSlicer* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorCpl005SkillDeathSlicer>();
	}
};
static_assert(alignof(AViewActorCpl005SkillDeathSlicer) == 0x000008, "Wrong alignment on AViewActorCpl005SkillDeathSlicer");
static_assert(sizeof(AViewActorCpl005SkillDeathSlicer) == 0x000400, "Wrong size on AViewActorCpl005SkillDeathSlicer");

// Class ATExt.ViewActorCpl008BSkill002
// 0x0090 (0x0468 - 0x03D8)
class AViewActorCpl008BSkill002 final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x90];                                     // 0x03D8(0x0090)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorCpl008BSkill002">();
	}
	static class AViewActorCpl008BSkill002* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorCpl008BSkill002>();
	}
};
static_assert(alignof(AViewActorCpl008BSkill002) == 0x000008, "Wrong alignment on AViewActorCpl008BSkill002");
static_assert(sizeof(AViewActorCpl008BSkill002) == 0x000468, "Wrong size on AViewActorCpl008BSkill002");

// Class ATExt.ViewActorCpl008BSkill005
// 0x0090 (0x0468 - 0x03D8)
class AViewActorCpl008BSkill005 final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x90];                                     // 0x03D8(0x0090)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorCpl008BSkill005">();
	}
	static class AViewActorCpl008BSkill005* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorCpl008BSkill005>();
	}
};
static_assert(alignof(AViewActorCpl008BSkill005) == 0x000008, "Wrong alignment on AViewActorCpl008BSkill005");
static_assert(sizeof(AViewActorCpl008BSkill005) == 0x000468, "Wrong size on AViewActorCpl008BSkill005");

// Class ATExt.ViewActorCpl011BSkill004
// 0x0070 (0x0448 - 0x03D8)
class AViewActorCpl011BSkill004 final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x70];                                     // 0x03D8(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnActionChange(class AAT_Character* InCharacter, int32 InActionIdPrev, int32 InActionIdNext);
	void OnUpdateAnimation(EATCharacterMoveState InMoveType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorCpl011BSkill004">();
	}
	static class AViewActorCpl011BSkill004* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorCpl011BSkill004>();
	}
};
static_assert(alignof(AViewActorCpl011BSkill004) == 0x000008, "Wrong alignment on AViewActorCpl011BSkill004");
static_assert(sizeof(AViewActorCpl011BSkill004) == 0x000448, "Wrong size on AViewActorCpl011BSkill004");

// Class ATExt.ViewActorCpl011CSkill006
// 0x0018 (0x03F0 - 0x03D8)
class AViewActorCpl011CSkill006 final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x18];                                     // 0x03D8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorCpl011CSkill006">();
	}
	static class AViewActorCpl011CSkill006* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorCpl011CSkill006>();
	}
};
static_assert(alignof(AViewActorCpl011CSkill006) == 0x000008, "Wrong alignment on AViewActorCpl011CSkill006");
static_assert(sizeof(AViewActorCpl011CSkill006) == 0x0003F0, "Wrong size on AViewActorCpl011CSkill006");

// Class ATExt.ViewActorCpl011CSkill007
// 0x0048 (0x0420 - 0x03D8)
class AViewActorCpl011CSkill007 final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x48];                                     // 0x03D8(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorCpl011CSkill007">();
	}
	static class AViewActorCpl011CSkill007* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorCpl011CSkill007>();
	}
};
static_assert(alignof(AViewActorCpl011CSkill007) == 0x000008, "Wrong alignment on AViewActorCpl011CSkill007");
static_assert(sizeof(AViewActorCpl011CSkill007) == 0x000420, "Wrong size on AViewActorCpl011CSkill007");

// Class ATExt.ViewActorCpl018SkillSpecial
// 0x0028 (0x0400 - 0x03D8)
class AViewActorCpl018SkillSpecial final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x28];                                     // 0x03D8(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorCpl018SkillSpecial">();
	}
	static class AViewActorCpl018SkillSpecial* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorCpl018SkillSpecial>();
	}
};
static_assert(alignof(AViewActorCpl018SkillSpecial) == 0x000008, "Wrong alignment on AViewActorCpl018SkillSpecial");
static_assert(sizeof(AViewActorCpl018SkillSpecial) == 0x000400, "Wrong size on AViewActorCpl018SkillSpecial");

// Class ATExt.ViewActorCutinReversal
// 0x0010 (0x03E8 - 0x03D8)
class AViewActorCutinReversal final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x10];                                     // 0x03D8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorCutinReversal">();
	}
	static class AViewActorCutinReversal* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorCutinReversal>();
	}
};
static_assert(alignof(AViewActorCutinReversal) == 0x000008, "Wrong alignment on AViewActorCutinReversal");
static_assert(sizeof(AViewActorCutinReversal) == 0x0003E8, "Wrong size on AViewActorCutinReversal");

// Class ATExt.ViewActorDirection
// 0x0038 (0x0410 - 0x03D8)
class AViewActorDirection final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x28];                                     // 0x03D8(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	class ACameraAttachActor*                     M_pAttachActor;                                    // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_408[0x8];                                      // 0x0408(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool CalcCameraFlip(class AAT_CharacterBase* PDirecter) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorDirection">();
	}
	static class AViewActorDirection* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorDirection>();
	}
};
static_assert(alignof(AViewActorDirection) == 0x000008, "Wrong alignment on AViewActorDirection");
static_assert(sizeof(AViewActorDirection) == 0x000410, "Wrong size on AViewActorDirection");
static_assert(offsetof(AViewActorDirection, M_pAttachActor) == 0x000400, "Member 'AViewActorDirection::M_pAttachActor' has a wrong offset!");

// Class ATExt.ViewActorEncounter
// 0x0018 (0x03F0 - 0x03D8)
class AViewActorEncounter final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x18];                                     // 0x03D8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorEncounter">();
	}
	static class AViewActorEncounter* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorEncounter>();
	}
};
static_assert(alignof(AViewActorEncounter) == 0x000008, "Wrong alignment on AViewActorEncounter");
static_assert(sizeof(AViewActorEncounter) == 0x0003F0, "Wrong size on AViewActorEncounter");

// Class ATExt.ViewActorFix
// 0x0000 (0x03D8 - 0x03D8)
class AViewActorFix final : public AViewActor
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorFix">();
	}
	static class AViewActorFix* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorFix>();
	}
};
static_assert(alignof(AViewActorFix) == 0x000008, "Wrong alignment on AViewActorFix");
static_assert(sizeof(AViewActorFix) == 0x0003D8, "Wrong size on AViewActorFix");

// Class ATExt.ViewActorStayBase
// 0x0008 (0x03E0 - 0x03D8)
class AViewActorStayBase : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x8];                                      // 0x03D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorStayBase">();
	}
	static class AViewActorStayBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorStayBase>();
	}
};
static_assert(alignof(AViewActorStayBase) == 0x000008, "Wrong alignment on AViewActorStayBase");
static_assert(sizeof(AViewActorStayBase) == 0x0003E0, "Wrong size on AViewActorStayBase");

// Class ATExt.ViewActorFloatBoostSlide
// 0x0000 (0x03E0 - 0x03E0)
class AViewActorFloatBoostSlide final : public AViewActorStayBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorFloatBoostSlide">();
	}
	static class AViewActorFloatBoostSlide* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorFloatBoostSlide>();
	}
};
static_assert(alignof(AViewActorFloatBoostSlide) == 0x000008, "Wrong alignment on AViewActorFloatBoostSlide");
static_assert(sizeof(AViewActorFloatBoostSlide) == 0x0003E0, "Wrong size on AViewActorFloatBoostSlide");

// Class ATExt.ViewActorFlyPlayer
// 0x0038 (0x0538 - 0x0500)
class AViewActorFlyPlayer final : public AViewActorFly
{
public:
	uint8                                         Pad_500[0x38];                                     // 0x0500(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorFlyPlayer">();
	}
	static class AViewActorFlyPlayer* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorFlyPlayer>();
	}
};
static_assert(alignof(AViewActorFlyPlayer) == 0x000008, "Wrong alignment on AViewActorFlyPlayer");
static_assert(sizeof(AViewActorFlyPlayer) == 0x000538, "Wrong size on AViewActorFlyPlayer");

// Class ATExt.ViewActorFPS
// 0x0020 (0x03F8 - 0x03D8)
class AViewActorFPS final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x20];                                     // 0x03D8(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorFPS">();
	}
	static class AViewActorFPS* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorFPS>();
	}
};
static_assert(alignof(AViewActorFPS) == 0x000008, "Wrong alignment on AViewActorFPS");
static_assert(sizeof(AViewActorFPS) == 0x0003F8, "Wrong size on AViewActorFPS");

// Class ATExt.ViewActorFusion
// 0x0068 (0x0440 - 0x03D8)
class AViewActorFusion final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x68];                                     // 0x03D8(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorFusion">();
	}
	static class AViewActorFusion* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorFusion>();
	}
};
static_assert(alignof(AViewActorFusion) == 0x000008, "Wrong alignment on AViewActorFusion");
static_assert(sizeof(AViewActorFusion) == 0x000440, "Wrong size on AViewActorFusion");

// Class ATExt.ViewActorGetItemAutoPilot
// 0x0100 (0x04D8 - 0x03D8)
class AViewActorGetItemAutoPilot final : public AViewActor
{
public:
	class UMaterial*                              M_material;                                        // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3E0[0xF8];                                     // 0x03E0(0x00F8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorGetItemAutoPilot">();
	}
	static class AViewActorGetItemAutoPilot* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorGetItemAutoPilot>();
	}
};
static_assert(alignof(AViewActorGetItemAutoPilot) == 0x000008, "Wrong alignment on AViewActorGetItemAutoPilot");
static_assert(sizeof(AViewActorGetItemAutoPilot) == 0x0004D8, "Wrong size on AViewActorGetItemAutoPilot");
static_assert(offsetof(AViewActorGetItemAutoPilot, M_material) == 0x0003D8, "Member 'AViewActorGetItemAutoPilot::M_material' has a wrong offset!");

// Class ATExt.ViewActorGroundBattle
// 0x0090 (0x0468 - 0x03D8)
class AViewActorGroundBattle final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x90];                                     // 0x03D8(0x0090)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorGroundBattle">();
	}
	static class AViewActorGroundBattle* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorGroundBattle>();
	}
};
static_assert(alignof(AViewActorGroundBattle) == 0x000008, "Wrong alignment on AViewActorGroundBattle");
static_assert(sizeof(AViewActorGroundBattle) == 0x000468, "Wrong size on AViewActorGroundBattle");

// Class ATExt.ViewActorGroundBossBattle
// 0x00B8 (0x0490 - 0x03D8)
class AViewActorGroundBossBattle final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0xB8];                                     // 0x03D8(0x00B8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorGroundBossBattle">();
	}
	static class AViewActorGroundBossBattle* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorGroundBossBattle>();
	}
};
static_assert(alignof(AViewActorGroundBossBattle) == 0x000008, "Wrong alignment on AViewActorGroundBossBattle");
static_assert(sizeof(AViewActorGroundBossBattle) == 0x000490, "Wrong size on AViewActorGroundBossBattle");

// Class ATExt.ViewActorGroundCountQTE
// 0x00A8 (0x0480 - 0x03D8)
class AViewActorGroundCountQTE final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0xA8];                                     // 0x03D8(0x00A8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorGroundCountQTE">();
	}
	static class AViewActorGroundCountQTE* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorGroundCountQTE>();
	}
};
static_assert(alignof(AViewActorGroundCountQTE) == 0x000008, "Wrong alignment on AViewActorGroundCountQTE");
static_assert(sizeof(AViewActorGroundCountQTE) == 0x000480, "Wrong size on AViewActorGroundCountQTE");

// Class ATExt.ViewActorGroundOffsetHighBoost
// 0x0068 (0x0440 - 0x03D8)
class AViewActorGroundOffsetHighBoost final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x68];                                     // 0x03D8(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorGroundOffsetHighBoost">();
	}
	static class AViewActorGroundOffsetHighBoost* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorGroundOffsetHighBoost>();
	}
};
static_assert(alignof(AViewActorGroundOffsetHighBoost) == 0x000008, "Wrong alignment on AViewActorGroundOffsetHighBoost");
static_assert(sizeof(AViewActorGroundOffsetHighBoost) == 0x000440, "Wrong size on AViewActorGroundOffsetHighBoost");

// Class ATExt.ViewActorGroundRingout
// 0x0060 (0x0438 - 0x03D8)
class AViewActorGroundRingout final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x60];                                     // 0x03D8(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorGroundRingout">();
	}
	static class AViewActorGroundRingout* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorGroundRingout>();
	}
};
static_assert(alignof(AViewActorGroundRingout) == 0x000008, "Wrong alignment on AViewActorGroundRingout");
static_assert(sizeof(AViewActorGroundRingout) == 0x000438, "Wrong size on AViewActorGroundRingout");

// Class ATExt.ViewActorGroundShortCombo
// 0x0018 (0x03F0 - 0x03D8)
class AViewActorGroundShortCombo final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x18];                                     // 0x03D8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorGroundShortCombo">();
	}
	static class AViewActorGroundShortCombo* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorGroundShortCombo>();
	}
};
static_assert(alignof(AViewActorGroundShortCombo) == 0x000008, "Wrong alignment on AViewActorGroundShortCombo");
static_assert(sizeof(AViewActorGroundShortCombo) == 0x0003F0, "Wrong size on AViewActorGroundShortCombo");

// Class ATExt.ViewActorHuntingDino
// 0x0028 (0x0400 - 0x03D8)
class AViewActorHuntingDino final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x20];                                     // 0x03D8(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class ACameraAttachActor*                     M_pAttachActor;                                    // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	bool CalcCameraFlip(class AAT_CharacterBase* PDirecter) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorHuntingDino">();
	}
	static class AViewActorHuntingDino* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorHuntingDino>();
	}
};
static_assert(alignof(AViewActorHuntingDino) == 0x000008, "Wrong alignment on AViewActorHuntingDino");
static_assert(sizeof(AViewActorHuntingDino) == 0x000400, "Wrong size on AViewActorHuntingDino");
static_assert(offsetof(AViewActorHuntingDino, M_pAttachActor) == 0x0003F8, "Member 'AViewActorHuntingDino::M_pAttachActor' has a wrong offset!");

// Class ATExt.ViewActorIngameDemo
// 0x0008 (0x03E0 - 0x03D8)
class AViewActorIngameDemo final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x8];                                      // 0x03D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorIngameDemo">();
	}
	static class AViewActorIngameDemo* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorIngameDemo>();
	}
};
static_assert(alignof(AViewActorIngameDemo) == 0x000008, "Wrong alignment on AViewActorIngameDemo");
static_assert(sizeof(AViewActorIngameDemo) == 0x0003E0, "Wrong size on AViewActorIngameDemo");

// Class ATExt.ViewActorLandTarget
// 0x0000 (0x03D8 - 0x03D8)
class AViewActorLandTarget final : public AViewActor
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorLandTarget">();
	}
	static class AViewActorLandTarget* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorLandTarget>();
	}
};
static_assert(alignof(AViewActorLandTarget) == 0x000008, "Wrong alignment on AViewActorLandTarget");
static_assert(sizeof(AViewActorLandTarget) == 0x0003D8, "Wrong size on AViewActorLandTarget");

// Class ATExt.ViewActorLongBlowoff
// 0x0050 (0x0428 - 0x03D8)
class AViewActorLongBlowoff final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x50];                                     // 0x03D8(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorLongBlowoff">();
	}
	static class AViewActorLongBlowoff* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorLongBlowoff>();
	}
};
static_assert(alignof(AViewActorLongBlowoff) == 0x000008, "Wrong alignment on AViewActorLongBlowoff");
static_assert(sizeof(AViewActorLongBlowoff) == 0x000428, "Wrong size on AViewActorLongBlowoff");

// Class ATExt.ViewActorLongBlowoffChaseAttack
// 0x0028 (0x0400 - 0x03D8)
class AViewActorLongBlowoffChaseAttack final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x28];                                     // 0x03D8(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorLongBlowoffChaseAttack">();
	}
	static class AViewActorLongBlowoffChaseAttack* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorLongBlowoffChaseAttack>();
	}
};
static_assert(alignof(AViewActorLongBlowoffChaseAttack) == 0x000008, "Wrong alignment on AViewActorLongBlowoffChaseAttack");
static_assert(sizeof(AViewActorLongBlowoffChaseAttack) == 0x000400, "Wrong size on AViewActorLongBlowoffChaseAttack");

// Class ATExt.ViewActorLongBlowoffHit
// 0x0010 (0x03E8 - 0x03D8)
class AViewActorLongBlowoffHit final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x10];                                     // 0x03D8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorLongBlowoffHit">();
	}
	static class AViewActorLongBlowoffHit* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorLongBlowoffHit>();
	}
};
static_assert(alignof(AViewActorLongBlowoffHit) == 0x000008, "Wrong alignment on AViewActorLongBlowoffHit");
static_assert(sizeof(AViewActorLongBlowoffHit) == 0x0003E8, "Wrong size on AViewActorLongBlowoffHit");

// Class ATExt.ViewActorNappaBlazingStorm
// 0x0078 (0x0450 - 0x03D8)
class AViewActorNappaBlazingStorm final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x78];                                     // 0x03D8(0x0078)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorNappaBlazingStorm">();
	}
	static class AViewActorNappaBlazingStorm* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorNappaBlazingStorm>();
	}
};
static_assert(alignof(AViewActorNappaBlazingStorm) == 0x000008, "Wrong alignment on AViewActorNappaBlazingStorm");
static_assert(sizeof(AViewActorNappaBlazingStorm) == 0x000450, "Wrong size on AViewActorNappaBlazingStorm");

// Class ATExt.ViewActorNappaGiantStorm
// 0x0030 (0x0408 - 0x03D8)
class AViewActorNappaGiantStorm final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x30];                                     // 0x03D8(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorNappaGiantStorm">();
	}
	static class AViewActorNappaGiantStorm* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorNappaGiantStorm>();
	}
};
static_assert(alignof(AViewActorNappaGiantStorm) == 0x000008, "Wrong alignment on AViewActorNappaGiantStorm");
static_assert(sizeof(AViewActorNappaGiantStorm) == 0x000408, "Wrong size on AViewActorNappaGiantStorm");

// Class ATExt.ViewActorNimbusRoll
// 0x0008 (0x03E8 - 0x03E0)
class AViewActorNimbusRoll final : public AViewActorStayBase
{
public:
	uint8                                         Pad_3E0[0x8];                                      // 0x03E0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorNimbusRoll">();
	}
	static class AViewActorNimbusRoll* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorNimbusRoll>();
	}
};
static_assert(alignof(AViewActorNimbusRoll) == 0x000008, "Wrong alignment on AViewActorNimbusRoll");
static_assert(sizeof(AViewActorNimbusRoll) == 0x0003E8, "Wrong size on AViewActorNimbusRoll");

// Class ATExt.ViewActorNormal
// 0x00B8 (0x0500 - 0x0448)
class AViewActorNormal : public AViewActorPlayerMoveBase
{
public:
	TMap<class FName, float>                      OverrideConstParam;                                // 0x0448(0x0050)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bUseOverrideConstParam;                            // 0x0498(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_499[0x67];                                     // 0x0499(0x0067)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorNormal">();
	}
	static class AViewActorNormal* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorNormal>();
	}
};
static_assert(alignof(AViewActorNormal) == 0x000008, "Wrong alignment on AViewActorNormal");
static_assert(sizeof(AViewActorNormal) == 0x000500, "Wrong size on AViewActorNormal");
static_assert(offsetof(AViewActorNormal, OverrideConstParam) == 0x000448, "Member 'AViewActorNormal::OverrideConstParam' has a wrong offset!");
static_assert(offsetof(AViewActorNormal, bUseOverrideConstParam) == 0x000498, "Member 'AViewActorNormal::bUseOverrideConstParam' has a wrong offset!");

// Class ATExt.ViewActorOffsetHighBoost
// 0x0018 (0x03F0 - 0x03D8)
class AViewActorOffsetHighBoost final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x18];                                     // 0x03D8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorOffsetHighBoost">();
	}
	static class AViewActorOffsetHighBoost* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorOffsetHighBoost>();
	}
};
static_assert(alignof(AViewActorOffsetHighBoost) == 0x000008, "Wrong alignment on AViewActorOffsetHighBoost");
static_assert(sizeof(AViewActorOffsetHighBoost) == 0x0003F0, "Wrong size on AViewActorOffsetHighBoost");

// Class ATExt.ViewActorOnSphereGround
// 0x0080 (0x04C8 - 0x0448)
class AViewActorOnSphereGround final : public AViewActorPlayerMoveBase
{
public:
	bool                                          M_UseDebugRotate;                                  // 0x0448(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          M_AddDebugRotate;                                  // 0x0449(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_44A[0x2];                                      // 0x044A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               M_DebugRotate;                                     // 0x044C(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_458[0x70];                                     // 0x0458(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorOnSphereGround">();
	}
	static class AViewActorOnSphereGround* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorOnSphereGround>();
	}
};
static_assert(alignof(AViewActorOnSphereGround) == 0x000008, "Wrong alignment on AViewActorOnSphereGround");
static_assert(sizeof(AViewActorOnSphereGround) == 0x0004C8, "Wrong size on AViewActorOnSphereGround");
static_assert(offsetof(AViewActorOnSphereGround, M_UseDebugRotate) == 0x000448, "Member 'AViewActorOnSphereGround::M_UseDebugRotate' has a wrong offset!");
static_assert(offsetof(AViewActorOnSphereGround, M_AddDebugRotate) == 0x000449, "Member 'AViewActorOnSphereGround::M_AddDebugRotate' has a wrong offset!");
static_assert(offsetof(AViewActorOnSphereGround, M_DebugRotate) == 0x00044C, "Member 'AViewActorOnSphereGround::M_DebugRotate' has a wrong offset!");

// Class ATExt.ViewActorPillarThrow
// 0x00A8 (0x0480 - 0x03D8)
class AViewActorPillarThrow final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0xA8];                                     // 0x03D8(0x00A8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorPillarThrow">();
	}
	static class AViewActorPillarThrow* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorPillarThrow>();
	}
};
static_assert(alignof(AViewActorPillarThrow) == 0x000008, "Wrong alignment on AViewActorPillarThrow");
static_assert(sizeof(AViewActorPillarThrow) == 0x000480, "Wrong size on AViewActorPillarThrow");

// Class ATExt.ViewActorPillarToFly
// 0x0000 (0x0500 - 0x0500)
class AViewActorPillarToFly final : public AViewActorFly
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorPillarToFly">();
	}
	static class AViewActorPillarToFly* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorPillarToFly>();
	}
};
static_assert(alignof(AViewActorPillarToFly) == 0x000008, "Wrong alignment on AViewActorPillarToFly");
static_assert(sizeof(AViewActorPillarToFly) == 0x000500, "Wrong size on AViewActorPillarToFly");

// Class ATExt.ViewActorPlayableCharacterBustUp
// 0x0048 (0x0420 - 0x03D8)
class AViewActorPlayableCharacterBustUp final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x48];                                     // 0x03D8(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorPlayableCharacterBustUp">();
	}
	static class AViewActorPlayableCharacterBustUp* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorPlayableCharacterBustUp>();
	}
};
static_assert(alignof(AViewActorPlayableCharacterBustUp) == 0x000008, "Wrong alignment on AViewActorPlayableCharacterBustUp");
static_assert(sizeof(AViewActorPlayableCharacterBustUp) == 0x000420, "Wrong size on AViewActorPlayableCharacterBustUp");

// Class ATExt.ViewActorRaceGame
// 0x0020 (0x03F8 - 0x03D8)
class AViewActorRaceGame final : public AViewActor
{
public:
	class UCurveVector*                           CameraMoveCurve;                                   // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MoveTime;                                          // 0x03E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsRelative;                                        // 0x03E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3E5[0x13];                                     // 0x03E5(0x0013)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorRaceGame">();
	}
	static class AViewActorRaceGame* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorRaceGame>();
	}
};
static_assert(alignof(AViewActorRaceGame) == 0x000008, "Wrong alignment on AViewActorRaceGame");
static_assert(sizeof(AViewActorRaceGame) == 0x0003F8, "Wrong size on AViewActorRaceGame");
static_assert(offsetof(AViewActorRaceGame, CameraMoveCurve) == 0x0003D8, "Member 'AViewActorRaceGame::CameraMoveCurve' has a wrong offset!");
static_assert(offsetof(AViewActorRaceGame, MoveTime) == 0x0003E0, "Member 'AViewActorRaceGame::MoveTime' has a wrong offset!");
static_assert(offsetof(AViewActorRaceGame, IsRelative) == 0x0003E4, "Member 'AViewActorRaceGame::IsRelative' has a wrong offset!");

// Class ATExt.ViewActorReinforce
// 0x0038 (0x0410 - 0x03D8)
class AViewActorReinforce final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x38];                                     // 0x03D8(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorReinforce">();
	}
	static class AViewActorReinforce* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorReinforce>();
	}
};
static_assert(alignof(AViewActorReinforce) == 0x000008, "Wrong alignment on AViewActorReinforce");
static_assert(sizeof(AViewActorReinforce) == 0x000410, "Wrong size on AViewActorReinforce");

// Class ATExt.ViewActorReturnField
// 0x0020 (0x03F8 - 0x03D8)
class AViewActorReturnField final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x20];                                     // 0x03D8(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorReturnField">();
	}
	static class AViewActorReturnField* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorReturnField>();
	}
};
static_assert(alignof(AViewActorReturnField) == 0x000008, "Wrong alignment on AViewActorReturnField");
static_assert(sizeof(AViewActorReturnField) == 0x0003F8, "Wrong size on AViewActorReturnField");

// Class ATExt.ViewActorSkill
// 0x00C0 (0x0498 - 0x03D8)
class AViewActorSkill final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0xC0];                                     // 0x03D8(0x00C0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorSkill">();
	}
	static class AViewActorSkill* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorSkill>();
	}
};
static_assert(alignof(AViewActorSkill) == 0x000008, "Wrong alignment on AViewActorSkill");
static_assert(sizeof(AViewActorSkill) == 0x000498, "Wrong size on AViewActorSkill");

// Class ATExt.ViewActorSkillDoubleSunday
// 0x0010 (0x03E8 - 0x03D8)
class AViewActorSkillDoubleSunday final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x10];                                     // 0x03D8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorSkillDoubleSunday">();
	}
	static class AViewActorSkillDoubleSunday* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorSkillDoubleSunday>();
	}
};
static_assert(alignof(AViewActorSkillDoubleSunday) == 0x000008, "Wrong alignment on AViewActorSkillDoubleSunday");
static_assert(sizeof(AViewActorSkillDoubleSunday) == 0x0003E8, "Wrong size on AViewActorSkillDoubleSunday");

// Class ATExt.ViewActorSkillDoubleSundayAttack
// 0x0020 (0x03F8 - 0x03D8)
class AViewActorSkillDoubleSundayAttack final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x20];                                     // 0x03D8(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorSkillDoubleSundayAttack">();
	}
	static class AViewActorSkillDoubleSundayAttack* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorSkillDoubleSundayAttack>();
	}
};
static_assert(alignof(AViewActorSkillDoubleSundayAttack) == 0x000008, "Wrong alignment on AViewActorSkillDoubleSundayAttack");
static_assert(sizeof(AViewActorSkillDoubleSundayAttack) == 0x0003F8, "Wrong size on AViewActorSkillDoubleSundayAttack");

// Class ATExt.ViewActorSkillWildQuakeFall
// 0x0030 (0x0408 - 0x03D8)
class AViewActorSkillWildQuakeFall final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x30];                                     // 0x03D8(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorSkillWildQuakeFall">();
	}
	static class AViewActorSkillWildQuakeFall* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorSkillWildQuakeFall>();
	}
};
static_assert(alignof(AViewActorSkillWildQuakeFall) == 0x000008, "Wrong alignment on AViewActorSkillWildQuakeFall");
static_assert(sizeof(AViewActorSkillWildQuakeFall) == 0x000408, "Wrong size on AViewActorSkillWildQuakeFall");

// Class ATExt.ViewActorSkillWildQuakeRise
// 0x0010 (0x03E8 - 0x03D8)
class AViewActorSkillWildQuakeRise final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x10];                                     // 0x03D8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorSkillWildQuakeRise">();
	}
	static class AViewActorSkillWildQuakeRise* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorSkillWildQuakeRise>();
	}
};
static_assert(alignof(AViewActorSkillWildQuakeRise) == 0x000008, "Wrong alignment on AViewActorSkillWildQuakeRise");
static_assert(sizeof(AViewActorSkillWildQuakeRise) == 0x0003E8, "Wrong size on AViewActorSkillWildQuakeRise");

// Class ATExt.ViewActorSpecialMoveGroundZigzag
// 0x0050 (0x0428 - 0x03D8)
class AViewActorSpecialMoveGroundZigzag final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x50];                                     // 0x03D8(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorSpecialMoveGroundZigzag">();
	}
	static class AViewActorSpecialMoveGroundZigzag* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorSpecialMoveGroundZigzag>();
	}
};
static_assert(alignof(AViewActorSpecialMoveGroundZigzag) == 0x000008, "Wrong alignment on AViewActorSpecialMoveGroundZigzag");
static_assert(sizeof(AViewActorSpecialMoveGroundZigzag) == 0x000428, "Wrong size on AViewActorSpecialMoveGroundZigzag");

// Class ATExt.ViewActorStartingNimbus
// 0x0000 (0x03E0 - 0x03E0)
class AViewActorStartingNimbus final : public AViewActorStayBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorStartingNimbus">();
	}
	static class AViewActorStartingNimbus* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorStartingNimbus>();
	}
};
static_assert(alignof(AViewActorStartingNimbus) == 0x000008, "Wrong alignment on AViewActorStartingNimbus");
static_assert(sizeof(AViewActorStartingNimbus) == 0x0003E0, "Wrong size on AViewActorStartingNimbus");

// Class ATExt.ViewActorStunCornerRecovery
// 0x0010 (0x03E8 - 0x03D8)
class AViewActorStunCornerRecovery final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x10];                                     // 0x03D8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorStunCornerRecovery">();
	}
	static class AViewActorStunCornerRecovery* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorStunCornerRecovery>();
	}
};
static_assert(alignof(AViewActorStunCornerRecovery) == 0x000008, "Wrong alignment on AViewActorStunCornerRecovery");
static_assert(sizeof(AViewActorStunCornerRecovery) == 0x0003E8, "Wrong size on AViewActorStunCornerRecovery");

// Class ATExt.ViewActorSubQuest
// 0x0110 (0x04E8 - 0x03D8)
class AViewActorSubQuest final : public AViewActor
{
public:
	class AActor*                                 CurrentAttachActor;                                // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3E0[0x58];                                     // 0x03E0(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             SubQuestCameraTable;                               // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                             SubQuestCameraBlendParam;                          // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ACameraAttachActor*                     CameraAttachActor;                                 // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInterpGroupInst*                       AnimInterpGroupInst[0x3];                          // 0x0450(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCameraAnimInst*                        CameraAnimInst[0x3];                               // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_480[0x8];                                      // 0x0480(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraAnimInst*                        CameraAnimLPInst[0x3];                             // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4A0[0x8];                                      // 0x04A0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AttachBoneName;                                    // 0x04A8(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4B8[0x30];                                     // 0x04B8(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorSubQuest">();
	}
	static class AViewActorSubQuest* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorSubQuest>();
	}
};
static_assert(alignof(AViewActorSubQuest) == 0x000008, "Wrong alignment on AViewActorSubQuest");
static_assert(sizeof(AViewActorSubQuest) == 0x0004E8, "Wrong size on AViewActorSubQuest");
static_assert(offsetof(AViewActorSubQuest, CurrentAttachActor) == 0x0003D8, "Member 'AViewActorSubQuest::CurrentAttachActor' has a wrong offset!");
static_assert(offsetof(AViewActorSubQuest, SubQuestCameraTable) == 0x000438, "Member 'AViewActorSubQuest::SubQuestCameraTable' has a wrong offset!");
static_assert(offsetof(AViewActorSubQuest, SubQuestCameraBlendParam) == 0x000440, "Member 'AViewActorSubQuest::SubQuestCameraBlendParam' has a wrong offset!");
static_assert(offsetof(AViewActorSubQuest, CameraAttachActor) == 0x000448, "Member 'AViewActorSubQuest::CameraAttachActor' has a wrong offset!");
static_assert(offsetof(AViewActorSubQuest, AnimInterpGroupInst) == 0x000450, "Member 'AViewActorSubQuest::AnimInterpGroupInst' has a wrong offset!");
static_assert(offsetof(AViewActorSubQuest, CameraAnimInst) == 0x000468, "Member 'AViewActorSubQuest::CameraAnimInst' has a wrong offset!");
static_assert(offsetof(AViewActorSubQuest, CameraAnimLPInst) == 0x000488, "Member 'AViewActorSubQuest::CameraAnimLPInst' has a wrong offset!");
static_assert(offsetof(AViewActorSubQuest, AttachBoneName) == 0x0004A8, "Member 'AViewActorSubQuest::AttachBoneName' has a wrong offset!");

// Class ATExt.ViewActorSupportPursue
// 0x0020 (0x03F8 - 0x03D8)
class AViewActorSupportPursue final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x20];                                     // 0x03D8(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorSupportPursue">();
	}
	static class AViewActorSupportPursue* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorSupportPursue>();
	}
};
static_assert(alignof(AViewActorSupportPursue) == 0x000008, "Wrong alignment on AViewActorSupportPursue");
static_assert(sizeof(AViewActorSupportPursue) == 0x0003F8, "Wrong size on AViewActorSupportPursue");

// Class ATExt.ViewActorTalkFocus
// 0x0098 (0x0470 - 0x03D8)
class AViewActorTalkFocus final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x38];                                     // 0x03D8(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TargetActor;                                       // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_418[0x8];                                      // 0x0418(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class ACameraAttachActor*                     PCameraAttachActor;                                // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCameraAnim*                            CameraAnim;                                        // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCameraAnimInst*                        CameraAnimInst;                                    // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_438[0x30];                                     // 0x0438(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	class UInterpGroupInst*                       AnimInterpGroupInst;                               // 0x0468(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorTalkFocus">();
	}
	static class AViewActorTalkFocus* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorTalkFocus>();
	}
};
static_assert(alignof(AViewActorTalkFocus) == 0x000008, "Wrong alignment on AViewActorTalkFocus");
static_assert(sizeof(AViewActorTalkFocus) == 0x000470, "Wrong size on AViewActorTalkFocus");
static_assert(offsetof(AViewActorTalkFocus, TargetActor) == 0x000410, "Member 'AViewActorTalkFocus::TargetActor' has a wrong offset!");
static_assert(offsetof(AViewActorTalkFocus, PCameraAttachActor) == 0x000420, "Member 'AViewActorTalkFocus::PCameraAttachActor' has a wrong offset!");
static_assert(offsetof(AViewActorTalkFocus, CameraAnim) == 0x000428, "Member 'AViewActorTalkFocus::CameraAnim' has a wrong offset!");
static_assert(offsetof(AViewActorTalkFocus, CameraAnimInst) == 0x000430, "Member 'AViewActorTalkFocus::CameraAnimInst' has a wrong offset!");
static_assert(offsetof(AViewActorTalkFocus, AnimInterpGroupInst) == 0x000468, "Member 'AViewActorTalkFocus::AnimInterpGroupInst' has a wrong offset!");

// Class ATExt.ViewActorTargetFloat
// 0x0000 (0x03D8 - 0x03D8)
class AViewActorTargetFloat final : public AViewActor
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorTargetFloat">();
	}
	static class AViewActorTargetFloat* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorTargetFloat>();
	}
};
static_assert(alignof(AViewActorTargetFloat) == 0x000008, "Wrong alignment on AViewActorTargetFloat");
static_assert(sizeof(AViewActorTargetFloat) == 0x0003D8, "Wrong size on AViewActorTargetFloat");

// Class ATExt.ViewActorTPSSkill
// 0x0018 (0x03F0 - 0x03D8)
class AViewActorTPSSkill final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x18];                                     // 0x03D8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorTPSSkill">();
	}
	static class AViewActorTPSSkill* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorTPSSkill>();
	}
};
static_assert(alignof(AViewActorTPSSkill) == 0x000008, "Wrong alignment on AViewActorTPSSkill");
static_assert(sizeof(AViewActorTPSSkill) == 0x0003F0, "Wrong size on AViewActorTPSSkill");

// Class ATExt.ViewActorTwinFoot
// 0x0038 (0x0538 - 0x0500)
class AViewActorTwinFoot final : public AViewActorNormal
{
public:
	uint8                                         Pad_500[0x30];                                     // 0x0500(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             M_pTwinFootCameraConstParamTable;                  // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorTwinFoot">();
	}
	static class AViewActorTwinFoot* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorTwinFoot>();
	}
};
static_assert(alignof(AViewActorTwinFoot) == 0x000008, "Wrong alignment on AViewActorTwinFoot");
static_assert(sizeof(AViewActorTwinFoot) == 0x000538, "Wrong size on AViewActorTwinFoot");
static_assert(offsetof(AViewActorTwinFoot, M_pTwinFootCameraConstParamTable) == 0x000530, "Member 'AViewActorTwinFoot::M_pTwinFootCameraConstParamTable' has a wrong offset!");

// Class ATExt.ViewActorWeakness
// 0x0010 (0x03E8 - 0x03D8)
class AViewActorWeakness final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x10];                                     // 0x03D8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorWeakness">();
	}
	static class AViewActorWeakness* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorWeakness>();
	}
};
static_assert(alignof(AViewActorWeakness) == 0x000008, "Wrong alignment on AViewActorWeakness");
static_assert(sizeof(AViewActorWeakness) == 0x0003E8, "Wrong size on AViewActorWeakness");

// Class ATExt.ViewActorWindRoad
// 0x0048 (0x0420 - 0x03D8)
class AViewActorWindRoad final : public AViewActor
{
public:
	uint8                                         Pad_3D8[0x28];                                     // 0x03D8(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               M_RadiationEffect;                                 // 0x0400(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_408[0x18];                                     // 0x0408(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ViewActorWindRoad">();
	}
	static class AViewActorWindRoad* GetDefaultObj()
	{
		return GetDefaultObjImpl<AViewActorWindRoad>();
	}
};
static_assert(alignof(AViewActorWindRoad) == 0x000008, "Wrong alignment on AViewActorWindRoad");
static_assert(sizeof(AViewActorWindRoad) == 0x000420, "Wrong size on AViewActorWindRoad");
static_assert(offsetof(AViewActorWindRoad, M_RadiationEffect) == 0x000400, "Member 'AViewActorWindRoad::M_RadiationEffect' has a wrong offset!");

}

