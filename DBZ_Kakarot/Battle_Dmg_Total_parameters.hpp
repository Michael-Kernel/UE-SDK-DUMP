#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Battle_Dmg_Total

#include "Basic.hpp"


namespace SDK::Params
{

// Function Battle_Dmg_Total.Battle_Dmg_Total_C.ExecuteUbergraph_Battle_Dmg_Total
// 0x0028 (0x0028 - 0x0000)
struct Battle_Dmg_Total_C_ExecuteUbergraph_Battle_Dmg_Total final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UImage*>                         K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class UImage*>                         K2Node_MakeArray_Array1;                           // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(Battle_Dmg_Total_C_ExecuteUbergraph_Battle_Dmg_Total) == 0x000008, "Wrong alignment on Battle_Dmg_Total_C_ExecuteUbergraph_Battle_Dmg_Total");
static_assert(sizeof(Battle_Dmg_Total_C_ExecuteUbergraph_Battle_Dmg_Total) == 0x000028, "Wrong size on Battle_Dmg_Total_C_ExecuteUbergraph_Battle_Dmg_Total");
static_assert(offsetof(Battle_Dmg_Total_C_ExecuteUbergraph_Battle_Dmg_Total, EntryPoint) == 0x000000, "Member 'Battle_Dmg_Total_C_ExecuteUbergraph_Battle_Dmg_Total::EntryPoint' has a wrong offset!");
static_assert(offsetof(Battle_Dmg_Total_C_ExecuteUbergraph_Battle_Dmg_Total, K2Node_MakeArray_Array) == 0x000008, "Member 'Battle_Dmg_Total_C_ExecuteUbergraph_Battle_Dmg_Total::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Battle_Dmg_Total_C_ExecuteUbergraph_Battle_Dmg_Total, K2Node_MakeArray_Array1) == 0x000018, "Member 'Battle_Dmg_Total_C_ExecuteUbergraph_Battle_Dmg_Total::K2Node_MakeArray_Array1' has a wrong offset!");

}

