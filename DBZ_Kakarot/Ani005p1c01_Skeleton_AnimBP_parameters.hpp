#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ani005p1c01_Skeleton_AnimBP

#include "Basic.hpp"

#include "AT_structs.hpp"


namespace SDK::Params
{

// Function Ani005p1c01_Skeleton_AnimBP.Ani005p1c01_Skeleton_AnimBP_C.ExecuteUbergraph_Ani005p1c01_Skeleton_AnimBP
// 0x0020 (0x0020 - 0x0000)
struct Ani005p1c01_Skeleton_AnimBP_C_ExecuteUbergraph_Ani005p1c01_Skeleton_AnimBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFishPawnCPP*                           K2Node_DynamicCast_AsFish_Pawn_CPP;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetEscapeLoopFlg_ReturnValue;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFishState                                    CallFunc_GetState_ReturnValue;                     // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ani005p1c01_Skeleton_AnimBP_C_ExecuteUbergraph_Ani005p1c01_Skeleton_AnimBP) == 0x000008, "Wrong alignment on Ani005p1c01_Skeleton_AnimBP_C_ExecuteUbergraph_Ani005p1c01_Skeleton_AnimBP");
static_assert(sizeof(Ani005p1c01_Skeleton_AnimBP_C_ExecuteUbergraph_Ani005p1c01_Skeleton_AnimBP) == 0x000020, "Wrong size on Ani005p1c01_Skeleton_AnimBP_C_ExecuteUbergraph_Ani005p1c01_Skeleton_AnimBP");
static_assert(offsetof(Ani005p1c01_Skeleton_AnimBP_C_ExecuteUbergraph_Ani005p1c01_Skeleton_AnimBP, EntryPoint) == 0x000000, "Member 'Ani005p1c01_Skeleton_AnimBP_C_ExecuteUbergraph_Ani005p1c01_Skeleton_AnimBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ani005p1c01_Skeleton_AnimBP_C_ExecuteUbergraph_Ani005p1c01_Skeleton_AnimBP, K2Node_Event_DeltaTimeX) == 0x000004, "Member 'Ani005p1c01_Skeleton_AnimBP_C_ExecuteUbergraph_Ani005p1c01_Skeleton_AnimBP::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(Ani005p1c01_Skeleton_AnimBP_C_ExecuteUbergraph_Ani005p1c01_Skeleton_AnimBP, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000008, "Member 'Ani005p1c01_Skeleton_AnimBP_C_ExecuteUbergraph_Ani005p1c01_Skeleton_AnimBP::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ani005p1c01_Skeleton_AnimBP_C_ExecuteUbergraph_Ani005p1c01_Skeleton_AnimBP, K2Node_DynamicCast_AsFish_Pawn_CPP) == 0x000010, "Member 'Ani005p1c01_Skeleton_AnimBP_C_ExecuteUbergraph_Ani005p1c01_Skeleton_AnimBP::K2Node_DynamicCast_AsFish_Pawn_CPP' has a wrong offset!");
static_assert(offsetof(Ani005p1c01_Skeleton_AnimBP_C_ExecuteUbergraph_Ani005p1c01_Skeleton_AnimBP, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Ani005p1c01_Skeleton_AnimBP_C_ExecuteUbergraph_Ani005p1c01_Skeleton_AnimBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ani005p1c01_Skeleton_AnimBP_C_ExecuteUbergraph_Ani005p1c01_Skeleton_AnimBP, CallFunc_GetEscapeLoopFlg_ReturnValue) == 0x000019, "Member 'Ani005p1c01_Skeleton_AnimBP_C_ExecuteUbergraph_Ani005p1c01_Skeleton_AnimBP::CallFunc_GetEscapeLoopFlg_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ani005p1c01_Skeleton_AnimBP_C_ExecuteUbergraph_Ani005p1c01_Skeleton_AnimBP, CallFunc_GetState_ReturnValue) == 0x00001A, "Member 'Ani005p1c01_Skeleton_AnimBP_C_ExecuteUbergraph_Ani005p1c01_Skeleton_AnimBP::CallFunc_GetState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ani005p1c01_Skeleton_AnimBP_C_ExecuteUbergraph_Ani005p1c01_Skeleton_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001B, "Member 'Ani005p1c01_Skeleton_AnimBP_C_ExecuteUbergraph_Ani005p1c01_Skeleton_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Ani005p1c01_Skeleton_AnimBP.Ani005p1c01_Skeleton_AnimBP_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct Ani005p1c01_Skeleton_AnimBP_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ani005p1c01_Skeleton_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on Ani005p1c01_Skeleton_AnimBP_C_BlueprintUpdateAnimation");
static_assert(sizeof(Ani005p1c01_Skeleton_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on Ani005p1c01_Skeleton_AnimBP_C_BlueprintUpdateAnimation");
static_assert(offsetof(Ani005p1c01_Skeleton_AnimBP_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'Ani005p1c01_Skeleton_AnimBP_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function Ani005p1c01_Skeleton_AnimBP.Ani005p1c01_Skeleton_AnimBP_C.CheckEscapeLoop
// 0x0020 (0x0020 - 0x0000)
struct Ani005p1c01_Skeleton_AnimBP_C_CheckEscapeLoop final
{
public:
	bool                                          End;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFishPawnCPP*                           K2Node_DynamicCast_AsFish_Pawn_CPP;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ani005p1c01_Skeleton_AnimBP_C_CheckEscapeLoop) == 0x000008, "Wrong alignment on Ani005p1c01_Skeleton_AnimBP_C_CheckEscapeLoop");
static_assert(sizeof(Ani005p1c01_Skeleton_AnimBP_C_CheckEscapeLoop) == 0x000020, "Wrong size on Ani005p1c01_Skeleton_AnimBP_C_CheckEscapeLoop");
static_assert(offsetof(Ani005p1c01_Skeleton_AnimBP_C_CheckEscapeLoop, End) == 0x000000, "Member 'Ani005p1c01_Skeleton_AnimBP_C_CheckEscapeLoop::End' has a wrong offset!");
static_assert(offsetof(Ani005p1c01_Skeleton_AnimBP_C_CheckEscapeLoop, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000008, "Member 'Ani005p1c01_Skeleton_AnimBP_C_CheckEscapeLoop::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ani005p1c01_Skeleton_AnimBP_C_CheckEscapeLoop, K2Node_DynamicCast_AsFish_Pawn_CPP) == 0x000010, "Member 'Ani005p1c01_Skeleton_AnimBP_C_CheckEscapeLoop::K2Node_DynamicCast_AsFish_Pawn_CPP' has a wrong offset!");
static_assert(offsetof(Ani005p1c01_Skeleton_AnimBP_C_CheckEscapeLoop, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Ani005p1c01_Skeleton_AnimBP_C_CheckEscapeLoop::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

