#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Battle_Gauge_Sp

#include "Basic.hpp"

#include "AT_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Battle_Gauge_Sp.Battle_Gauge_Sp_C
// 0x0088 (0x0538 - 0x04B0)
class UBattle_Gauge_Sp_C final : public UAT_UIBattleHudGaugePlayerSp
{
public:
	class UWidgetAnimation*                       Charge_Recovery_Loop;                              // 0x04B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Charge_Recovery;                                   // 0x04B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Charge_Full;                                       // 0x04C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           All_Gauge_Sp;                                      // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           All_Nut;                                           // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvalidationBox*                       All_Nut_InvalidationBox;                           // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Gauge_Base;                                    // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Gauge_Frame;                                   // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Ins_Gauge_Base_Eff;                                // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Ins_Gauge_Eff00;                                   // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Ins_Gauge_Eff01;                                   // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Ins_Gauge_Mark_Full;                               // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Ins_Gauge_Recover;                                 // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Ins_Gauge_Sp;                                      // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Ins_Xef_Elc_Anm00;                                 // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Mat_Gauge_Hud_Light;                               // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Pnl_Sp;                                            // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Battle_Gauge_Sp_C">();
	}
	static class UBattle_Gauge_Sp_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattle_Gauge_Sp_C>();
	}
};
static_assert(alignof(UBattle_Gauge_Sp_C) == 0x000008, "Wrong alignment on UBattle_Gauge_Sp_C");
static_assert(sizeof(UBattle_Gauge_Sp_C) == 0x000538, "Wrong size on UBattle_Gauge_Sp_C");
static_assert(offsetof(UBattle_Gauge_Sp_C, Charge_Recovery_Loop) == 0x0004B0, "Member 'UBattle_Gauge_Sp_C::Charge_Recovery_Loop' has a wrong offset!");
static_assert(offsetof(UBattle_Gauge_Sp_C, Charge_Recovery) == 0x0004B8, "Member 'UBattle_Gauge_Sp_C::Charge_Recovery' has a wrong offset!");
static_assert(offsetof(UBattle_Gauge_Sp_C, Charge_Full) == 0x0004C0, "Member 'UBattle_Gauge_Sp_C::Charge_Full' has a wrong offset!");
static_assert(offsetof(UBattle_Gauge_Sp_C, All_Gauge_Sp) == 0x0004C8, "Member 'UBattle_Gauge_Sp_C::All_Gauge_Sp' has a wrong offset!");
static_assert(offsetof(UBattle_Gauge_Sp_C, All_Nut) == 0x0004D0, "Member 'UBattle_Gauge_Sp_C::All_Nut' has a wrong offset!");
static_assert(offsetof(UBattle_Gauge_Sp_C, All_Nut_InvalidationBox) == 0x0004D8, "Member 'UBattle_Gauge_Sp_C::All_Nut_InvalidationBox' has a wrong offset!");
static_assert(offsetof(UBattle_Gauge_Sp_C, Img_Gauge_Base) == 0x0004E0, "Member 'UBattle_Gauge_Sp_C::Img_Gauge_Base' has a wrong offset!");
static_assert(offsetof(UBattle_Gauge_Sp_C, Img_Gauge_Frame) == 0x0004E8, "Member 'UBattle_Gauge_Sp_C::Img_Gauge_Frame' has a wrong offset!");
static_assert(offsetof(UBattle_Gauge_Sp_C, Ins_Gauge_Base_Eff) == 0x0004F0, "Member 'UBattle_Gauge_Sp_C::Ins_Gauge_Base_Eff' has a wrong offset!");
static_assert(offsetof(UBattle_Gauge_Sp_C, Ins_Gauge_Eff00) == 0x0004F8, "Member 'UBattle_Gauge_Sp_C::Ins_Gauge_Eff00' has a wrong offset!");
static_assert(offsetof(UBattle_Gauge_Sp_C, Ins_Gauge_Eff01) == 0x000500, "Member 'UBattle_Gauge_Sp_C::Ins_Gauge_Eff01' has a wrong offset!");
static_assert(offsetof(UBattle_Gauge_Sp_C, Ins_Gauge_Mark_Full) == 0x000508, "Member 'UBattle_Gauge_Sp_C::Ins_Gauge_Mark_Full' has a wrong offset!");
static_assert(offsetof(UBattle_Gauge_Sp_C, Ins_Gauge_Recover) == 0x000510, "Member 'UBattle_Gauge_Sp_C::Ins_Gauge_Recover' has a wrong offset!");
static_assert(offsetof(UBattle_Gauge_Sp_C, Ins_Gauge_Sp) == 0x000518, "Member 'UBattle_Gauge_Sp_C::Ins_Gauge_Sp' has a wrong offset!");
static_assert(offsetof(UBattle_Gauge_Sp_C, Ins_Xef_Elc_Anm00) == 0x000520, "Member 'UBattle_Gauge_Sp_C::Ins_Xef_Elc_Anm00' has a wrong offset!");
static_assert(offsetof(UBattle_Gauge_Sp_C, Mat_Gauge_Hud_Light) == 0x000528, "Member 'UBattle_Gauge_Sp_C::Mat_Gauge_Hud_Light' has a wrong offset!");
static_assert(offsetof(UBattle_Gauge_Sp_C, Pnl_Sp) == 0x000530, "Member 'UBattle_Gauge_Sp_C::Pnl_Sp' has a wrong offset!");

}

