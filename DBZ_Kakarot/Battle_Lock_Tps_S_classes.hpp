#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Battle_Lock_Tps_S

#include "Basic.hpp"

#include "AT_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Battle_Lock_Tps_S.Battle_Lock_Tps_S_C
// 0x0088 (0x0480 - 0x03F8)
class UBattle_Lock_Tps_S_C final : public UAT_UITPSLockOnMark
{
public:
	class UWidgetAnimation*                       Out_01;                                            // 0x03F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Max;                                               // 0x0400(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Overlaid;                                          // 0x0408(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x0410(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Out_00;                                            // 0x0418(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Img_Curs_Mini00_00;                                // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Curs_Mini00_01_00;                             // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Curs_Mini00_01_01;                             // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Curs_Mini00_01_02;                             // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Curs_Mini00_01_03;                             // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Curs_Mini00_Eff00;                             // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Curs_Mini00_Eff02;                             // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Curs_Mini01_00;                                // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Curs_Mini01_01_00;                             // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Curs_Mini01_01_01;                             // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Curs_Mini01_01_02;                             // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Curs_Mini01_01_03;                             // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Battle_Lock_Tps_S_C">();
	}
	static class UBattle_Lock_Tps_S_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattle_Lock_Tps_S_C>();
	}
};
static_assert(alignof(UBattle_Lock_Tps_S_C) == 0x000008, "Wrong alignment on UBattle_Lock_Tps_S_C");
static_assert(sizeof(UBattle_Lock_Tps_S_C) == 0x000480, "Wrong size on UBattle_Lock_Tps_S_C");
static_assert(offsetof(UBattle_Lock_Tps_S_C, Out_01) == 0x0003F8, "Member 'UBattle_Lock_Tps_S_C::Out_01' has a wrong offset!");
static_assert(offsetof(UBattle_Lock_Tps_S_C, Max) == 0x000400, "Member 'UBattle_Lock_Tps_S_C::Max' has a wrong offset!");
static_assert(offsetof(UBattle_Lock_Tps_S_C, Overlaid) == 0x000408, "Member 'UBattle_Lock_Tps_S_C::Overlaid' has a wrong offset!");
static_assert(offsetof(UBattle_Lock_Tps_S_C, In) == 0x000410, "Member 'UBattle_Lock_Tps_S_C::In' has a wrong offset!");
static_assert(offsetof(UBattle_Lock_Tps_S_C, Out_00) == 0x000418, "Member 'UBattle_Lock_Tps_S_C::Out_00' has a wrong offset!");
static_assert(offsetof(UBattle_Lock_Tps_S_C, Img_Curs_Mini00_00) == 0x000420, "Member 'UBattle_Lock_Tps_S_C::Img_Curs_Mini00_00' has a wrong offset!");
static_assert(offsetof(UBattle_Lock_Tps_S_C, Img_Curs_Mini00_01_00) == 0x000428, "Member 'UBattle_Lock_Tps_S_C::Img_Curs_Mini00_01_00' has a wrong offset!");
static_assert(offsetof(UBattle_Lock_Tps_S_C, Img_Curs_Mini00_01_01) == 0x000430, "Member 'UBattle_Lock_Tps_S_C::Img_Curs_Mini00_01_01' has a wrong offset!");
static_assert(offsetof(UBattle_Lock_Tps_S_C, Img_Curs_Mini00_01_02) == 0x000438, "Member 'UBattle_Lock_Tps_S_C::Img_Curs_Mini00_01_02' has a wrong offset!");
static_assert(offsetof(UBattle_Lock_Tps_S_C, Img_Curs_Mini00_01_03) == 0x000440, "Member 'UBattle_Lock_Tps_S_C::Img_Curs_Mini00_01_03' has a wrong offset!");
static_assert(offsetof(UBattle_Lock_Tps_S_C, Img_Curs_Mini00_Eff00) == 0x000448, "Member 'UBattle_Lock_Tps_S_C::Img_Curs_Mini00_Eff00' has a wrong offset!");
static_assert(offsetof(UBattle_Lock_Tps_S_C, Img_Curs_Mini00_Eff02) == 0x000450, "Member 'UBattle_Lock_Tps_S_C::Img_Curs_Mini00_Eff02' has a wrong offset!");
static_assert(offsetof(UBattle_Lock_Tps_S_C, Img_Curs_Mini01_00) == 0x000458, "Member 'UBattle_Lock_Tps_S_C::Img_Curs_Mini01_00' has a wrong offset!");
static_assert(offsetof(UBattle_Lock_Tps_S_C, Img_Curs_Mini01_01_00) == 0x000460, "Member 'UBattle_Lock_Tps_S_C::Img_Curs_Mini01_01_00' has a wrong offset!");
static_assert(offsetof(UBattle_Lock_Tps_S_C, Img_Curs_Mini01_01_01) == 0x000468, "Member 'UBattle_Lock_Tps_S_C::Img_Curs_Mini01_01_01' has a wrong offset!");
static_assert(offsetof(UBattle_Lock_Tps_S_C, Img_Curs_Mini01_01_02) == 0x000470, "Member 'UBattle_Lock_Tps_S_C::Img_Curs_Mini01_01_02' has a wrong offset!");
static_assert(offsetof(UBattle_Lock_Tps_S_C, Img_Curs_Mini01_01_03) == 0x000478, "Member 'UBattle_Lock_Tps_S_C::Img_Curs_Mini01_01_03' has a wrong offset!");

}

