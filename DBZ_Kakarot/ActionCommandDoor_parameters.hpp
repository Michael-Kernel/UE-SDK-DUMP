#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ActionCommandDoor

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ActionCommandDoor.ActionCommandDoor_C.ExecuteUbergraph_ActionCommandDoor
// 0x0058 (0x0058 - 0x0000)
struct ActionCommandDoor_C_ExecuteUbergraph_ActionCommandDoor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameModeStateField_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OtherActor1;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAT_Character*                          CallFunc_GetPlayer_ReturnValue;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivatedWindow_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRiding_ReturnValue;                     // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ActionCommandDoor_C_ExecuteUbergraph_ActionCommandDoor) == 0x000008, "Wrong alignment on ActionCommandDoor_C_ExecuteUbergraph_ActionCommandDoor");
static_assert(sizeof(ActionCommandDoor_C_ExecuteUbergraph_ActionCommandDoor) == 0x000058, "Wrong size on ActionCommandDoor_C_ExecuteUbergraph_ActionCommandDoor");
static_assert(offsetof(ActionCommandDoor_C_ExecuteUbergraph_ActionCommandDoor, EntryPoint) == 0x000000, "Member 'ActionCommandDoor_C_ExecuteUbergraph_ActionCommandDoor::EntryPoint' has a wrong offset!");
static_assert(offsetof(ActionCommandDoor_C_ExecuteUbergraph_ActionCommandDoor, CallFunc_IsGameModeStateField_ReturnValue) == 0x000004, "Member 'ActionCommandDoor_C_ExecuteUbergraph_ActionCommandDoor::CallFunc_IsGameModeStateField_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActionCommandDoor_C_ExecuteUbergraph_ActionCommandDoor, K2Node_Event_OtherActor1) == 0x000008, "Member 'ActionCommandDoor_C_ExecuteUbergraph_ActionCommandDoor::K2Node_Event_OtherActor1' has a wrong offset!");
static_assert(offsetof(ActionCommandDoor_C_ExecuteUbergraph_ActionCommandDoor, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000010, "Member 'ActionCommandDoor_C_ExecuteUbergraph_ActionCommandDoor::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActionCommandDoor_C_ExecuteUbergraph_ActionCommandDoor, CallFunc_GetPlayer_ReturnValue) == 0x000018, "Member 'ActionCommandDoor_C_ExecuteUbergraph_ActionCommandDoor::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActionCommandDoor_C_ExecuteUbergraph_ActionCommandDoor, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000020, "Member 'ActionCommandDoor_C_ExecuteUbergraph_ActionCommandDoor::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActionCommandDoor_C_ExecuteUbergraph_ActionCommandDoor, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000024, "Member 'ActionCommandDoor_C_ExecuteUbergraph_ActionCommandDoor::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActionCommandDoor_C_ExecuteUbergraph_ActionCommandDoor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'ActionCommandDoor_C_ExecuteUbergraph_ActionCommandDoor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActionCommandDoor_C_ExecuteUbergraph_ActionCommandDoor, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x00003C, "Member 'ActionCommandDoor_C_ExecuteUbergraph_ActionCommandDoor::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActionCommandDoor_C_ExecuteUbergraph_ActionCommandDoor, K2Node_Event_OtherActor) == 0x000048, "Member 'ActionCommandDoor_C_ExecuteUbergraph_ActionCommandDoor::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(ActionCommandDoor_C_ExecuteUbergraph_ActionCommandDoor, CallFunc_IsActivatedWindow_ReturnValue) == 0x000050, "Member 'ActionCommandDoor_C_ExecuteUbergraph_ActionCommandDoor::CallFunc_IsActivatedWindow_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActionCommandDoor_C_ExecuteUbergraph_ActionCommandDoor, CallFunc_IsRiding_ReturnValue) == 0x000051, "Member 'ActionCommandDoor_C_ExecuteUbergraph_ActionCommandDoor::CallFunc_IsRiding_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActionCommandDoor_C_ExecuteUbergraph_ActionCommandDoor, CallFunc_Not_PreBool_ReturnValue) == 0x000052, "Member 'ActionCommandDoor_C_ExecuteUbergraph_ActionCommandDoor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActionCommandDoor_C_ExecuteUbergraph_ActionCommandDoor, CallFunc_BooleanAND_ReturnValue) == 0x000053, "Member 'ActionCommandDoor_C_ExecuteUbergraph_ActionCommandDoor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ActionCommandDoor.ActionCommandDoor_C.ReceiveActorBeginOverlap
// 0x0008 (0x0008 - 0x0000)
struct ActionCommandDoor_C_ReceiveActorBeginOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActionCommandDoor_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong alignment on ActionCommandDoor_C_ReceiveActorBeginOverlap");
static_assert(sizeof(ActionCommandDoor_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong size on ActionCommandDoor_C_ReceiveActorBeginOverlap");
static_assert(offsetof(ActionCommandDoor_C_ReceiveActorBeginOverlap, OtherActor) == 0x000000, "Member 'ActionCommandDoor_C_ReceiveActorBeginOverlap::OtherActor' has a wrong offset!");

// Function ActionCommandDoor.ActionCommandDoor_C.ReceiveActorEndOverlap
// 0x0008 (0x0008 - 0x0000)
struct ActionCommandDoor_C_ReceiveActorEndOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActionCommandDoor_C_ReceiveActorEndOverlap) == 0x000008, "Wrong alignment on ActionCommandDoor_C_ReceiveActorEndOverlap");
static_assert(sizeof(ActionCommandDoor_C_ReceiveActorEndOverlap) == 0x000008, "Wrong size on ActionCommandDoor_C_ReceiveActorEndOverlap");
static_assert(offsetof(ActionCommandDoor_C_ReceiveActorEndOverlap, OtherActor) == 0x000000, "Member 'ActionCommandDoor_C_ReceiveActorEndOverlap::OtherActor' has a wrong offset!");

}

