#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Battle_Win_Challenge

#include "Basic.hpp"

#include "AT_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Battle_Win_Challenge.Battle_Win_Challenge_C
// 0x0050 (0x0440 - 0x03F0)
class UBattle_Win_Challenge_C final : public UAT_UIBattleWinChallenge
{
public:
	class UWidgetAnimation*                       Out;                                               // 0x03F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x03F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Img_Win_Heading00;                                 // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Xwin01_Base;                                   // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Xwin01_Base_Shadow;                            // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Xwin01_Bg;                                     // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Xwin01_Bg_Shadow;                              // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Xwin01_Title;                                  // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Pnl_Base;                                          // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UXcmn_Fade_Black_C*                     Xcmn_Fade_Black;                                   // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Battle_Win_Challenge_C">();
	}
	static class UBattle_Win_Challenge_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattle_Win_Challenge_C>();
	}
};
static_assert(alignof(UBattle_Win_Challenge_C) == 0x000008, "Wrong alignment on UBattle_Win_Challenge_C");
static_assert(sizeof(UBattle_Win_Challenge_C) == 0x000440, "Wrong size on UBattle_Win_Challenge_C");
static_assert(offsetof(UBattle_Win_Challenge_C, Out) == 0x0003F0, "Member 'UBattle_Win_Challenge_C::Out' has a wrong offset!");
static_assert(offsetof(UBattle_Win_Challenge_C, In) == 0x0003F8, "Member 'UBattle_Win_Challenge_C::In' has a wrong offset!");
static_assert(offsetof(UBattle_Win_Challenge_C, Img_Win_Heading00) == 0x000400, "Member 'UBattle_Win_Challenge_C::Img_Win_Heading00' has a wrong offset!");
static_assert(offsetof(UBattle_Win_Challenge_C, Img_Xwin01_Base) == 0x000408, "Member 'UBattle_Win_Challenge_C::Img_Xwin01_Base' has a wrong offset!");
static_assert(offsetof(UBattle_Win_Challenge_C, Img_Xwin01_Base_Shadow) == 0x000410, "Member 'UBattle_Win_Challenge_C::Img_Xwin01_Base_Shadow' has a wrong offset!");
static_assert(offsetof(UBattle_Win_Challenge_C, Img_Xwin01_Bg) == 0x000418, "Member 'UBattle_Win_Challenge_C::Img_Xwin01_Bg' has a wrong offset!");
static_assert(offsetof(UBattle_Win_Challenge_C, Img_Xwin01_Bg_Shadow) == 0x000420, "Member 'UBattle_Win_Challenge_C::Img_Xwin01_Bg_Shadow' has a wrong offset!");
static_assert(offsetof(UBattle_Win_Challenge_C, Img_Xwin01_Title) == 0x000428, "Member 'UBattle_Win_Challenge_C::Img_Xwin01_Title' has a wrong offset!");
static_assert(offsetof(UBattle_Win_Challenge_C, Pnl_Base) == 0x000430, "Member 'UBattle_Win_Challenge_C::Pnl_Base' has a wrong offset!");
static_assert(offsetof(UBattle_Win_Challenge_C, Xcmn_Fade_Black) == 0x000438, "Member 'UBattle_Win_Challenge_C::Xcmn_Fade_Black' has a wrong offset!");

}

