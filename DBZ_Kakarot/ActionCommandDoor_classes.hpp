#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ActionCommandDoor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AT_structs.hpp"
#include "AT_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ActionCommandDoor.ActionCommandDoor_C
// 0x0020 (0x0390 - 0x0370)
class AActionCommandDoor_C final : public ATriggerStaticActorBox
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FString                                 Command_id;                                        // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Execute;                                           // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EATCharacterReset                             State;                                             // 0x0389(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnabledNimbus;                                     // 0x038A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ActionCommandDoor(int32 EntryPoint);
	void ReceiveActorBeginOverlap(class AActor* OtherActor);
	void ReceiveActorEndOverlap(class AActor* OtherActor);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ActionCommandDoor_C">();
	}
	static class AActionCommandDoor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AActionCommandDoor_C>();
	}
};
static_assert(alignof(AActionCommandDoor_C) == 0x000008, "Wrong alignment on AActionCommandDoor_C");
static_assert(sizeof(AActionCommandDoor_C) == 0x000390, "Wrong size on AActionCommandDoor_C");
static_assert(offsetof(AActionCommandDoor_C, UberGraphFrame) == 0x000370, "Member 'AActionCommandDoor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AActionCommandDoor_C, Command_id) == 0x000378, "Member 'AActionCommandDoor_C::Command_id' has a wrong offset!");
static_assert(offsetof(AActionCommandDoor_C, Execute) == 0x000388, "Member 'AActionCommandDoor_C::Execute' has a wrong offset!");
static_assert(offsetof(AActionCommandDoor_C, State) == 0x000389, "Member 'AActionCommandDoor_C::State' has a wrong offset!");
static_assert(offsetof(AActionCommandDoor_C, EnabledNimbus) == 0x00038A, "Member 'AActionCommandDoor_C::EnabledNimbus' has a wrong offset!");

}

