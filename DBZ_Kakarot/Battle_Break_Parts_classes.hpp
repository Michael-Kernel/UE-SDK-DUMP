#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Battle_Break_Parts

#include "Basic.hpp"

#include "AT_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Battle_Break_Parts.Battle_Break_Parts_C
// 0x0060 (0x0470 - 0x0410)
class UBattle_Break_Parts_C final : public UAT_UIBattleHudGaugeEnemyBreakParts
{
public:
	class UWidgetAnimation*                       Break_S;                                           // 0x0410(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Break_M;                                           // 0x0418(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Break_L;                                           // 0x0420(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Img_Break_Parts00_00;                              // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Break_Parts00_01;                              // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Break_Parts01_00;                              // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Break_Parts01_01;                              // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Break_Parts01_02;                              // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Break_Parts02_00;                              // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Break_Parts03_00;                              // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Break_Parts03_01;                              // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Break_Parts03_02;                              // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Battle_Break_Parts_C">();
	}
	static class UBattle_Break_Parts_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattle_Break_Parts_C>();
	}
};
static_assert(alignof(UBattle_Break_Parts_C) == 0x000008, "Wrong alignment on UBattle_Break_Parts_C");
static_assert(sizeof(UBattle_Break_Parts_C) == 0x000470, "Wrong size on UBattle_Break_Parts_C");
static_assert(offsetof(UBattle_Break_Parts_C, Break_S) == 0x000410, "Member 'UBattle_Break_Parts_C::Break_S' has a wrong offset!");
static_assert(offsetof(UBattle_Break_Parts_C, Break_M) == 0x000418, "Member 'UBattle_Break_Parts_C::Break_M' has a wrong offset!");
static_assert(offsetof(UBattle_Break_Parts_C, Break_L) == 0x000420, "Member 'UBattle_Break_Parts_C::Break_L' has a wrong offset!");
static_assert(offsetof(UBattle_Break_Parts_C, Img_Break_Parts00_00) == 0x000428, "Member 'UBattle_Break_Parts_C::Img_Break_Parts00_00' has a wrong offset!");
static_assert(offsetof(UBattle_Break_Parts_C, Img_Break_Parts00_01) == 0x000430, "Member 'UBattle_Break_Parts_C::Img_Break_Parts00_01' has a wrong offset!");
static_assert(offsetof(UBattle_Break_Parts_C, Img_Break_Parts01_00) == 0x000438, "Member 'UBattle_Break_Parts_C::Img_Break_Parts01_00' has a wrong offset!");
static_assert(offsetof(UBattle_Break_Parts_C, Img_Break_Parts01_01) == 0x000440, "Member 'UBattle_Break_Parts_C::Img_Break_Parts01_01' has a wrong offset!");
static_assert(offsetof(UBattle_Break_Parts_C, Img_Break_Parts01_02) == 0x000448, "Member 'UBattle_Break_Parts_C::Img_Break_Parts01_02' has a wrong offset!");
static_assert(offsetof(UBattle_Break_Parts_C, Img_Break_Parts02_00) == 0x000450, "Member 'UBattle_Break_Parts_C::Img_Break_Parts02_00' has a wrong offset!");
static_assert(offsetof(UBattle_Break_Parts_C, Img_Break_Parts03_00) == 0x000458, "Member 'UBattle_Break_Parts_C::Img_Break_Parts03_00' has a wrong offset!");
static_assert(offsetof(UBattle_Break_Parts_C, Img_Break_Parts03_01) == 0x000460, "Member 'UBattle_Break_Parts_C::Img_Break_Parts03_01' has a wrong offset!");
static_assert(offsetof(UBattle_Break_Parts_C, Img_Break_Parts03_02) == 0x000468, "Member 'UBattle_Break_Parts_C::Img_Break_Parts03_02' has a wrong offset!");

}

