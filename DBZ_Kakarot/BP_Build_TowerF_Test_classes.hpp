#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Build_TowerF_Test

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Build_TowerF_Test.BP_Build_TowerF_Test_C
// 0x0098 (0x03D0 - 0x0338)
class ABP_Build_TowerF_Test_C final : public AActor
{
public:
	class UStaticMeshComponent*                   S_Build_TowerPillarPartD_Test01;                   // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Build_TowerPillarPartC_Test01;                   // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Build_TowerPillarPartA_Test02;                   // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Build_TowerPillarPartD_Test;                     // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Build_TowerPillarPartE_Test;                     // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Build_TowerPillarPartC_Test;                     // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Build_TowerPillarPartA_Test01;                   // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Build_TowerPillarPartA_Test;                     // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Build_TowerGenSphereA_Test2;                     // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Build_TowerGenSupport_Test4;                     // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Build_TowerGenSupport_Test3;                     // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Build_TowerGenSupport_Test2;                     // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Build_TowerGenSphereB_Test2;                     // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Build_TowerGenSupport_Test;                      // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Build_TowerGenSphereB_Test;                      // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Build_TowerGenSphereA_Test;                      // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Build_TowerGenF_Test;                            // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Build_TowerGenBase_Test;                         // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Build_TowerF_Test_C">();
	}
	static class ABP_Build_TowerF_Test_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Build_TowerF_Test_C>();
	}
};
static_assert(alignof(ABP_Build_TowerF_Test_C) == 0x000008, "Wrong alignment on ABP_Build_TowerF_Test_C");
static_assert(sizeof(ABP_Build_TowerF_Test_C) == 0x0003D0, "Wrong size on ABP_Build_TowerF_Test_C");
static_assert(offsetof(ABP_Build_TowerF_Test_C, S_Build_TowerPillarPartD_Test01) == 0x000338, "Member 'ABP_Build_TowerF_Test_C::S_Build_TowerPillarPartD_Test01' has a wrong offset!");
static_assert(offsetof(ABP_Build_TowerF_Test_C, S_Build_TowerPillarPartC_Test01) == 0x000340, "Member 'ABP_Build_TowerF_Test_C::S_Build_TowerPillarPartC_Test01' has a wrong offset!");
static_assert(offsetof(ABP_Build_TowerF_Test_C, S_Build_TowerPillarPartA_Test02) == 0x000348, "Member 'ABP_Build_TowerF_Test_C::S_Build_TowerPillarPartA_Test02' has a wrong offset!");
static_assert(offsetof(ABP_Build_TowerF_Test_C, S_Build_TowerPillarPartD_Test) == 0x000350, "Member 'ABP_Build_TowerF_Test_C::S_Build_TowerPillarPartD_Test' has a wrong offset!");
static_assert(offsetof(ABP_Build_TowerF_Test_C, S_Build_TowerPillarPartE_Test) == 0x000358, "Member 'ABP_Build_TowerF_Test_C::S_Build_TowerPillarPartE_Test' has a wrong offset!");
static_assert(offsetof(ABP_Build_TowerF_Test_C, S_Build_TowerPillarPartC_Test) == 0x000360, "Member 'ABP_Build_TowerF_Test_C::S_Build_TowerPillarPartC_Test' has a wrong offset!");
static_assert(offsetof(ABP_Build_TowerF_Test_C, S_Build_TowerPillarPartA_Test01) == 0x000368, "Member 'ABP_Build_TowerF_Test_C::S_Build_TowerPillarPartA_Test01' has a wrong offset!");
static_assert(offsetof(ABP_Build_TowerF_Test_C, S_Build_TowerPillarPartA_Test) == 0x000370, "Member 'ABP_Build_TowerF_Test_C::S_Build_TowerPillarPartA_Test' has a wrong offset!");
static_assert(offsetof(ABP_Build_TowerF_Test_C, S_Build_TowerGenSphereA_Test2) == 0x000378, "Member 'ABP_Build_TowerF_Test_C::S_Build_TowerGenSphereA_Test2' has a wrong offset!");
static_assert(offsetof(ABP_Build_TowerF_Test_C, S_Build_TowerGenSupport_Test4) == 0x000380, "Member 'ABP_Build_TowerF_Test_C::S_Build_TowerGenSupport_Test4' has a wrong offset!");
static_assert(offsetof(ABP_Build_TowerF_Test_C, S_Build_TowerGenSupport_Test3) == 0x000388, "Member 'ABP_Build_TowerF_Test_C::S_Build_TowerGenSupport_Test3' has a wrong offset!");
static_assert(offsetof(ABP_Build_TowerF_Test_C, S_Build_TowerGenSupport_Test2) == 0x000390, "Member 'ABP_Build_TowerF_Test_C::S_Build_TowerGenSupport_Test2' has a wrong offset!");
static_assert(offsetof(ABP_Build_TowerF_Test_C, S_Build_TowerGenSphereB_Test2) == 0x000398, "Member 'ABP_Build_TowerF_Test_C::S_Build_TowerGenSphereB_Test2' has a wrong offset!");
static_assert(offsetof(ABP_Build_TowerF_Test_C, S_Build_TowerGenSupport_Test) == 0x0003A0, "Member 'ABP_Build_TowerF_Test_C::S_Build_TowerGenSupport_Test' has a wrong offset!");
static_assert(offsetof(ABP_Build_TowerF_Test_C, S_Build_TowerGenSphereB_Test) == 0x0003A8, "Member 'ABP_Build_TowerF_Test_C::S_Build_TowerGenSphereB_Test' has a wrong offset!");
static_assert(offsetof(ABP_Build_TowerF_Test_C, S_Build_TowerGenSphereA_Test) == 0x0003B0, "Member 'ABP_Build_TowerF_Test_C::S_Build_TowerGenSphereA_Test' has a wrong offset!");
static_assert(offsetof(ABP_Build_TowerF_Test_C, S_Build_TowerGenF_Test) == 0x0003B8, "Member 'ABP_Build_TowerF_Test_C::S_Build_TowerGenF_Test' has a wrong offset!");
static_assert(offsetof(ABP_Build_TowerF_Test_C, S_Build_TowerGenBase_Test) == 0x0003C0, "Member 'ABP_Build_TowerF_Test_C::S_Build_TowerGenBase_Test' has a wrong offset!");
static_assert(offsetof(ABP_Build_TowerF_Test_C, DefaultSceneRoot) == 0x0003C8, "Member 'ABP_Build_TowerF_Test_C::DefaultSceneRoot' has a wrong offset!");

}

