#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ATSpecialTrack

#include "Basic.hpp"

#include "MovieSceneTracks_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "MovieScene_structs.hpp"
#include "MovieScene_classes.hpp"
#include "Engine_structs.hpp"
#include "ATSpecialTrack_structs.hpp"
#include "AT_structs.hpp"


namespace SDK
{

// Class ATSpecialTrack.ATMovieSceneForcedLodPropertyTrack
// 0x0000 (0x0080 - 0x0080)
class UATMovieSceneForcedLodPropertyTrack : public UMovieScenePropertyTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneForcedLodPropertyTrack">();
	}
	static class UATMovieSceneForcedLodPropertyTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneForcedLodPropertyTrack>();
	}
};
static_assert(alignof(UATMovieSceneForcedLodPropertyTrack) == 0x000008, "Wrong alignment on UATMovieSceneForcedLodPropertyTrack");
static_assert(sizeof(UATMovieSceneForcedLodPropertyTrack) == 0x000080, "Wrong size on UATMovieSceneForcedLodPropertyTrack");

// Class ATSpecialTrack.ATMovieSceneCharaIntroductionPropertyTrack
// 0x0000 (0x0080 - 0x0080)
class UATMovieSceneCharaIntroductionPropertyTrack final : public UMovieScenePropertyTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneCharaIntroductionPropertyTrack">();
	}
	static class UATMovieSceneCharaIntroductionPropertyTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneCharaIntroductionPropertyTrack>();
	}
};
static_assert(alignof(UATMovieSceneCharaIntroductionPropertyTrack) == 0x000008, "Wrong alignment on UATMovieSceneCharaIntroductionPropertyTrack");
static_assert(sizeof(UATMovieSceneCharaIntroductionPropertyTrack) == 0x000080, "Wrong size on UATMovieSceneCharaIntroductionPropertyTrack");

// Class ATSpecialTrack.ATMovieSceneCharaIntroductionSection
// 0x0020 (0x0100 - 0x00E0)
class UATMovieSceneCharaIntroductionSection final : public UMovieSceneSection
{
public:
	class FName                                   CharacterID;                                       // 0x00E0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   PopularNameID;                                     // 0x00E8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                              Position;                                          // 0x00F0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          IsLargeSize;                                       // 0x00F8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneCharaIntroductionSection">();
	}
	static class UATMovieSceneCharaIntroductionSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneCharaIntroductionSection>();
	}
};
static_assert(alignof(UATMovieSceneCharaIntroductionSection) == 0x000008, "Wrong alignment on UATMovieSceneCharaIntroductionSection");
static_assert(sizeof(UATMovieSceneCharaIntroductionSection) == 0x000100, "Wrong size on UATMovieSceneCharaIntroductionSection");
static_assert(offsetof(UATMovieSceneCharaIntroductionSection, CharacterID) == 0x0000E0, "Member 'UATMovieSceneCharaIntroductionSection::CharacterID' has a wrong offset!");
static_assert(offsetof(UATMovieSceneCharaIntroductionSection, PopularNameID) == 0x0000E8, "Member 'UATMovieSceneCharaIntroductionSection::PopularNameID' has a wrong offset!");
static_assert(offsetof(UATMovieSceneCharaIntroductionSection, Position) == 0x0000F0, "Member 'UATMovieSceneCharaIntroductionSection::Position' has a wrong offset!");
static_assert(offsetof(UATMovieSceneCharaIntroductionSection, IsLargeSize) == 0x0000F8, "Member 'UATMovieSceneCharaIntroductionSection::IsLargeSize' has a wrong offset!");

// Class ATSpecialTrack.ATMovieSceneDirectionPropertyTrack
// 0x0000 (0x0080 - 0x0080)
class UATMovieSceneDirectionPropertyTrack final : public UMovieScenePropertyTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneDirectionPropertyTrack">();
	}
	static class UATMovieSceneDirectionPropertyTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneDirectionPropertyTrack>();
	}
};
static_assert(alignof(UATMovieSceneDirectionPropertyTrack) == 0x000008, "Wrong alignment on UATMovieSceneDirectionPropertyTrack");
static_assert(sizeof(UATMovieSceneDirectionPropertyTrack) == 0x000080, "Wrong size on UATMovieSceneDirectionPropertyTrack");

// Class ATSpecialTrack.ATMovieSceneDirectionSection
// 0x00F8 (0x01D8 - 0x00E0)
class UATMovieSceneDirectionSection final : public UMovieSceneSection
{
public:
	struct FNameCurve                             Directions;                                        // 0x00E0(0x0068)(Deprecated, NativeAccessSpecifierPrivate)
	struct FMovieSceneDirectionSectionData        DirectionData;                                     // 0x0148(0x0090)(NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneDirectionSection">();
	}
	static class UATMovieSceneDirectionSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneDirectionSection>();
	}
};
static_assert(alignof(UATMovieSceneDirectionSection) == 0x000008, "Wrong alignment on UATMovieSceneDirectionSection");
static_assert(sizeof(UATMovieSceneDirectionSection) == 0x0001D8, "Wrong size on UATMovieSceneDirectionSection");
static_assert(offsetof(UATMovieSceneDirectionSection, Directions) == 0x0000E0, "Member 'UATMovieSceneDirectionSection::Directions' has a wrong offset!");
static_assert(offsetof(UATMovieSceneDirectionSection, DirectionData) == 0x000148, "Member 'UATMovieSceneDirectionSection::DirectionData' has a wrong offset!");

// Class ATSpecialTrack.ATMovieSceneFadePropertyTrack
// 0x0000 (0x0080 - 0x0080)
class UATMovieSceneFadePropertyTrack final : public UMovieScenePropertyTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneFadePropertyTrack">();
	}
	static class UATMovieSceneFadePropertyTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneFadePropertyTrack>();
	}
};
static_assert(alignof(UATMovieSceneFadePropertyTrack) == 0x000008, "Wrong alignment on UATMovieSceneFadePropertyTrack");
static_assert(sizeof(UATMovieSceneFadePropertyTrack) == 0x000080, "Wrong size on UATMovieSceneFadePropertyTrack");

// Class ATSpecialTrack.ATMovieSceneFadeSection
// 0x0008 (0x00E8 - 0x00E0)
class UATMovieSceneFadeSection final : public UMovieSceneSection
{
public:
	EUMG_FADE_TYPE                                FadeType;                                          // 0x00E0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EUMG_FADE_COLOR                               FadeColor;                                         // 0x00E1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bImmidiate;                                        // 0x00E2(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bStartZero;                                        // 0x00E3(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bFirstSection;                                     // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bFlashBackFade;                                    // 0x00E5(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E6[0x2];                                       // 0x00E6(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneFadeSection">();
	}
	static class UATMovieSceneFadeSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneFadeSection>();
	}
};
static_assert(alignof(UATMovieSceneFadeSection) == 0x000008, "Wrong alignment on UATMovieSceneFadeSection");
static_assert(sizeof(UATMovieSceneFadeSection) == 0x0000E8, "Wrong size on UATMovieSceneFadeSection");
static_assert(offsetof(UATMovieSceneFadeSection, FadeType) == 0x0000E0, "Member 'UATMovieSceneFadeSection::FadeType' has a wrong offset!");
static_assert(offsetof(UATMovieSceneFadeSection, FadeColor) == 0x0000E1, "Member 'UATMovieSceneFadeSection::FadeColor' has a wrong offset!");
static_assert(offsetof(UATMovieSceneFadeSection, bImmidiate) == 0x0000E2, "Member 'UATMovieSceneFadeSection::bImmidiate' has a wrong offset!");
static_assert(offsetof(UATMovieSceneFadeSection, bStartZero) == 0x0000E3, "Member 'UATMovieSceneFadeSection::bStartZero' has a wrong offset!");
static_assert(offsetof(UATMovieSceneFadeSection, bFirstSection) == 0x0000E4, "Member 'UATMovieSceneFadeSection::bFirstSection' has a wrong offset!");
static_assert(offsetof(UATMovieSceneFadeSection, bFlashBackFade) == 0x0000E5, "Member 'UATMovieSceneFadeSection::bFlashBackFade' has a wrong offset!");

// Class ATSpecialTrack.ATMovieSceneFloatSection
// 0x00A0 (0x0180 - 0x00E0)
class UATMovieSceneFloatSection final : public UMovieSceneSection
{
public:
	struct FMovieSceneFloatChannel                FloatCurve;                                        // 0x00E0(0x00A0)(NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneFloatSection">();
	}
	static class UATMovieSceneFloatSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneFloatSection>();
	}
};
static_assert(alignof(UATMovieSceneFloatSection) == 0x000008, "Wrong alignment on UATMovieSceneFloatSection");
static_assert(sizeof(UATMovieSceneFloatSection) == 0x000180, "Wrong size on UATMovieSceneFloatSection");
static_assert(offsetof(UATMovieSceneFloatSection, FloatCurve) == 0x0000E0, "Member 'UATMovieSceneFloatSection::FloatCurve' has a wrong offset!");

// Class ATSpecialTrack.ATMovieSceneForcedLodForCharacterPropertyTrack
// 0x0000 (0x0080 - 0x0080)
class UATMovieSceneForcedLodForCharacterPropertyTrack final : public UATMovieSceneForcedLodPropertyTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneForcedLodForCharacterPropertyTrack">();
	}
	static class UATMovieSceneForcedLodForCharacterPropertyTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneForcedLodForCharacterPropertyTrack>();
	}
};
static_assert(alignof(UATMovieSceneForcedLodForCharacterPropertyTrack) == 0x000008, "Wrong alignment on UATMovieSceneForcedLodForCharacterPropertyTrack");
static_assert(sizeof(UATMovieSceneForcedLodForCharacterPropertyTrack) == 0x000080, "Wrong size on UATMovieSceneForcedLodForCharacterPropertyTrack");

// Class ATSpecialTrack.ATMovieSceneForcedLodForLandscapePropertyTrack
// 0x0000 (0x0080 - 0x0080)
class UATMovieSceneForcedLodForLandscapePropertyTrack final : public UATMovieSceneForcedLodPropertyTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneForcedLodForLandscapePropertyTrack">();
	}
	static class UATMovieSceneForcedLodForLandscapePropertyTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneForcedLodForLandscapePropertyTrack>();
	}
};
static_assert(alignof(UATMovieSceneForcedLodForLandscapePropertyTrack) == 0x000008, "Wrong alignment on UATMovieSceneForcedLodForLandscapePropertyTrack");
static_assert(sizeof(UATMovieSceneForcedLodForLandscapePropertyTrack) == 0x000080, "Wrong size on UATMovieSceneForcedLodForLandscapePropertyTrack");

// Class ATSpecialTrack.ATMovieSceneForcedLodForOtherPropertyTrack
// 0x0000 (0x0080 - 0x0080)
class UATMovieSceneForcedLodForOtherPropertyTrack final : public UATMovieSceneForcedLodPropertyTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneForcedLodForOtherPropertyTrack">();
	}
	static class UATMovieSceneForcedLodForOtherPropertyTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneForcedLodForOtherPropertyTrack>();
	}
};
static_assert(alignof(UATMovieSceneForcedLodForOtherPropertyTrack) == 0x000008, "Wrong alignment on UATMovieSceneForcedLodForOtherPropertyTrack");
static_assert(sizeof(UATMovieSceneForcedLodForOtherPropertyTrack) == 0x000080, "Wrong size on UATMovieSceneForcedLodForOtherPropertyTrack");

// Class ATSpecialTrack.ATMovieSceneForcedLodSection
// 0x0008 (0x00E8 - 0x00E0)
class UATMovieSceneForcedLodSection final : public UMovieSceneSection
{
public:
	int32                                         ForcedLodModel;                                    // 0x00E0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneForcedLodSection">();
	}
	static class UATMovieSceneForcedLodSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneForcedLodSection>();
	}
};
static_assert(alignof(UATMovieSceneForcedLodSection) == 0x000008, "Wrong alignment on UATMovieSceneForcedLodSection");
static_assert(sizeof(UATMovieSceneForcedLodSection) == 0x0000E8, "Wrong size on UATMovieSceneForcedLodSection");
static_assert(offsetof(UATMovieSceneForcedLodSection, ForcedLodModel) == 0x0000E0, "Member 'UATMovieSceneForcedLodSection::ForcedLodModel' has a wrong offset!");

// Class ATSpecialTrack.ATMovieSceneFutureVisionSection
// 0x0040 (0x0120 - 0x00E0)
class UATMovieSceneFutureVisionSection final : public UMovieSceneSection
{
public:
	class FName                                   SubTitleID;                                        // 0x00E0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class AATFutureVisionTrack>       FutureVisionTrack;                                 // 0x00E8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TSoftObjectPtr<class UTexture2D>>      PictureTexturePath;                                // 0x00F0(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<float>                                 DrawPictureTime;                                   // 0x0100(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                         OmenCount;                                         // 0x0110(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         FadeInTime;                                        // 0x0114(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         CrossFadeTimeSec;                                  // 0x0118(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneFutureVisionSection">();
	}
	static class UATMovieSceneFutureVisionSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneFutureVisionSection>();
	}
};
static_assert(alignof(UATMovieSceneFutureVisionSection) == 0x000008, "Wrong alignment on UATMovieSceneFutureVisionSection");
static_assert(sizeof(UATMovieSceneFutureVisionSection) == 0x000120, "Wrong size on UATMovieSceneFutureVisionSection");
static_assert(offsetof(UATMovieSceneFutureVisionSection, SubTitleID) == 0x0000E0, "Member 'UATMovieSceneFutureVisionSection::SubTitleID' has a wrong offset!");
static_assert(offsetof(UATMovieSceneFutureVisionSection, FutureVisionTrack) == 0x0000E8, "Member 'UATMovieSceneFutureVisionSection::FutureVisionTrack' has a wrong offset!");
static_assert(offsetof(UATMovieSceneFutureVisionSection, PictureTexturePath) == 0x0000F0, "Member 'UATMovieSceneFutureVisionSection::PictureTexturePath' has a wrong offset!");
static_assert(offsetof(UATMovieSceneFutureVisionSection, DrawPictureTime) == 0x000100, "Member 'UATMovieSceneFutureVisionSection::DrawPictureTime' has a wrong offset!");
static_assert(offsetof(UATMovieSceneFutureVisionSection, OmenCount) == 0x000110, "Member 'UATMovieSceneFutureVisionSection::OmenCount' has a wrong offset!");
static_assert(offsetof(UATMovieSceneFutureVisionSection, FadeInTime) == 0x000114, "Member 'UATMovieSceneFutureVisionSection::FadeInTime' has a wrong offset!");
static_assert(offsetof(UATMovieSceneFutureVisionSection, CrossFadeTimeSec) == 0x000118, "Member 'UATMovieSceneFutureVisionSection::CrossFadeTimeSec' has a wrong offset!");

// Class ATSpecialTrack.ATMovieSceneFutureVisionTrack
// 0x0000 (0x0080 - 0x0080)
class UATMovieSceneFutureVisionTrack final : public UMovieScenePropertyTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneFutureVisionTrack">();
	}
	static class UATMovieSceneFutureVisionTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneFutureVisionTrack>();
	}
};
static_assert(alignof(UATMovieSceneFutureVisionTrack) == 0x000008, "Wrong alignment on UATMovieSceneFutureVisionTrack");
static_assert(sizeof(UATMovieSceneFutureVisionTrack) == 0x000080, "Wrong size on UATMovieSceneFutureVisionTrack");

// Class ATSpecialTrack.ATMovieSceneLipSyncSection
// 0x0010 (0x00F0 - 0x00E0)
class UATMovieSceneLipSyncSection final : public UMovieSceneSection
{
public:
	class FName                                   SubTitleID;                                        // 0x00E0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace*                            BlendSpaceAsset;                                   // 0x00E8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneLipSyncSection">();
	}
	static class UATMovieSceneLipSyncSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneLipSyncSection>();
	}
};
static_assert(alignof(UATMovieSceneLipSyncSection) == 0x000008, "Wrong alignment on UATMovieSceneLipSyncSection");
static_assert(sizeof(UATMovieSceneLipSyncSection) == 0x0000F0, "Wrong size on UATMovieSceneLipSyncSection");
static_assert(offsetof(UATMovieSceneLipSyncSection, SubTitleID) == 0x0000E0, "Member 'UATMovieSceneLipSyncSection::SubTitleID' has a wrong offset!");
static_assert(offsetof(UATMovieSceneLipSyncSection, BlendSpaceAsset) == 0x0000E8, "Member 'UATMovieSceneLipSyncSection::BlendSpaceAsset' has a wrong offset!");

// Class ATSpecialTrack.ATMovieSceneLipSyncTrack
// 0x0010 (0x0068 - 0x0058)
class UATMovieSceneLipSyncTrack final : public UMovieSceneNameableTrack
{
public:
	TArray<class UMovieSceneSection*>             AnimationSections;                                 // 0x0058(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneLipSyncTrack">();
	}
	static class UATMovieSceneLipSyncTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneLipSyncTrack>();
	}
};
static_assert(alignof(UATMovieSceneLipSyncTrack) == 0x000008, "Wrong alignment on UATMovieSceneLipSyncTrack");
static_assert(sizeof(UATMovieSceneLipSyncTrack) == 0x000068, "Wrong size on UATMovieSceneLipSyncTrack");
static_assert(offsetof(UATMovieSceneLipSyncTrack, AnimationSections) == 0x000058, "Member 'UATMovieSceneLipSyncTrack::AnimationSections' has a wrong offset!");

// Class ATSpecialTrack.ATMovieSceneLocationPropertyTrack
// 0x0000 (0x0080 - 0x0080)
class UATMovieSceneLocationPropertyTrack final : public UMovieScenePropertyTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneLocationPropertyTrack">();
	}
	static class UATMovieSceneLocationPropertyTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneLocationPropertyTrack>();
	}
};
static_assert(alignof(UATMovieSceneLocationPropertyTrack) == 0x000008, "Wrong alignment on UATMovieSceneLocationPropertyTrack");
static_assert(sizeof(UATMovieSceneLocationPropertyTrack) == 0x000080, "Wrong size on UATMovieSceneLocationPropertyTrack");

// Class ATSpecialTrack.ATMovieSceneLocationSection
// 0x0020 (0x0100 - 0x00E0)
class UATMovieSceneLocationSection final : public UMovieSceneSection
{
public:
	class FName                                   AreaID;                                            // 0x00E0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EDEMO_TYPE                                    DemoType;                                          // 0x00E8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDemoLocationInfo>              LocationInfo;                                      // 0x00F0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneLocationSection">();
	}
	static class UATMovieSceneLocationSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneLocationSection>();
	}
};
static_assert(alignof(UATMovieSceneLocationSection) == 0x000008, "Wrong alignment on UATMovieSceneLocationSection");
static_assert(sizeof(UATMovieSceneLocationSection) == 0x000100, "Wrong size on UATMovieSceneLocationSection");
static_assert(offsetof(UATMovieSceneLocationSection, AreaID) == 0x0000E0, "Member 'UATMovieSceneLocationSection::AreaID' has a wrong offset!");
static_assert(offsetof(UATMovieSceneLocationSection, DemoType) == 0x0000E8, "Member 'UATMovieSceneLocationSection::DemoType' has a wrong offset!");
static_assert(offsetof(UATMovieSceneLocationSection, LocationInfo) == 0x0000F0, "Member 'UATMovieSceneLocationSection::LocationInfo' has a wrong offset!");

// Class ATSpecialTrack.ATMovieSceneMoviePropertyTrack
// 0x0000 (0x0080 - 0x0080)
class UATMovieSceneMoviePropertyTrack final : public UMovieScenePropertyTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneMoviePropertyTrack">();
	}
	static class UATMovieSceneMoviePropertyTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneMoviePropertyTrack>();
	}
};
static_assert(alignof(UATMovieSceneMoviePropertyTrack) == 0x000008, "Wrong alignment on UATMovieSceneMoviePropertyTrack");
static_assert(sizeof(UATMovieSceneMoviePropertyTrack) == 0x000080, "Wrong size on UATMovieSceneMoviePropertyTrack");

// Class ATSpecialTrack.ATMovieSceneMovieSection
// 0x0000 (0x00E0 - 0x00E0)
class UATMovieSceneMovieSection final : public UMovieSceneSection
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneMovieSection">();
	}
	static class UATMovieSceneMovieSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneMovieSection>();
	}
};
static_assert(alignof(UATMovieSceneMovieSection) == 0x000008, "Wrong alignment on UATMovieSceneMovieSection");
static_assert(sizeof(UATMovieSceneMovieSection) == 0x0000E0, "Wrong size on UATMovieSceneMovieSection");

// Class ATSpecialTrack.ATMovieSceneNearClipPropertyTrack
// 0x0000 (0x0080 - 0x0080)
class UATMovieSceneNearClipPropertyTrack final : public UMovieScenePropertyTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneNearClipPropertyTrack">();
	}
	static class UATMovieSceneNearClipPropertyTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneNearClipPropertyTrack>();
	}
};
static_assert(alignof(UATMovieSceneNearClipPropertyTrack) == 0x000008, "Wrong alignment on UATMovieSceneNearClipPropertyTrack");
static_assert(sizeof(UATMovieSceneNearClipPropertyTrack) == 0x000080, "Wrong size on UATMovieSceneNearClipPropertyTrack");

// Class ATSpecialTrack.ATMovieSceneNextPreviewSection
// 0x0040 (0x0120 - 0x00E0)
class UATMovieSceneNextPreviewSection final : public UMovieSceneSection
{
public:
	uint8                                         bTitle : 1;                                        // 0x00E0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FATMovieSceneNextPreviewTitleData      TitleData;                                         // 0x00E8(0x0010)(Edit, NativeAccessSpecifierPrivate)
	uint8                                         bDetail : 1;                                       // 0x00F8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FATMovieSceneNextPreviewDetailData     DetailData;                                        // 0x0100(0x0020)(Edit, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneNextPreviewSection">();
	}
	static class UATMovieSceneNextPreviewSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneNextPreviewSection>();
	}
};
static_assert(alignof(UATMovieSceneNextPreviewSection) == 0x000008, "Wrong alignment on UATMovieSceneNextPreviewSection");
static_assert(sizeof(UATMovieSceneNextPreviewSection) == 0x000120, "Wrong size on UATMovieSceneNextPreviewSection");
static_assert(offsetof(UATMovieSceneNextPreviewSection, TitleData) == 0x0000E8, "Member 'UATMovieSceneNextPreviewSection::TitleData' has a wrong offset!");
static_assert(offsetof(UATMovieSceneNextPreviewSection, DetailData) == 0x000100, "Member 'UATMovieSceneNextPreviewSection::DetailData' has a wrong offset!");

// Class ATSpecialTrack.ATMovieSceneNextPreviewTrack
// 0x0000 (0x0080 - 0x0080)
class UATMovieSceneNextPreviewTrack final : public UMovieScenePropertyTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneNextPreviewTrack">();
	}
	static class UATMovieSceneNextPreviewTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneNextPreviewTrack>();
	}
};
static_assert(alignof(UATMovieSceneNextPreviewTrack) == 0x000008, "Wrong alignment on UATMovieSceneNextPreviewTrack");
static_assert(sizeof(UATMovieSceneNextPreviewTrack) == 0x000080, "Wrong size on UATMovieSceneNextPreviewTrack");

// Class ATSpecialTrack.ATMovieSceneQuestMainLogoPropertyTrack
// 0x0000 (0x0080 - 0x0080)
class UATMovieSceneQuestMainLogoPropertyTrack final : public UMovieScenePropertyTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneQuestMainLogoPropertyTrack">();
	}
	static class UATMovieSceneQuestMainLogoPropertyTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneQuestMainLogoPropertyTrack>();
	}
};
static_assert(alignof(UATMovieSceneQuestMainLogoPropertyTrack) == 0x000008, "Wrong alignment on UATMovieSceneQuestMainLogoPropertyTrack");
static_assert(sizeof(UATMovieSceneQuestMainLogoPropertyTrack) == 0x000080, "Wrong size on UATMovieSceneQuestMainLogoPropertyTrack");

// Class ATSpecialTrack.ATMovieSceneQuestMainLogoSection
// 0x0000 (0x00E0 - 0x00E0)
class UATMovieSceneQuestMainLogoSection final : public UMovieSceneSection
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneQuestMainLogoSection">();
	}
	static class UATMovieSceneQuestMainLogoSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneQuestMainLogoSection>();
	}
};
static_assert(alignof(UATMovieSceneQuestMainLogoSection) == 0x000008, "Wrong alignment on UATMovieSceneQuestMainLogoSection");
static_assert(sizeof(UATMovieSceneQuestMainLogoSection) == 0x0000E0, "Wrong size on UATMovieSceneQuestMainLogoSection");

// Class ATSpecialTrack.ATMovieSceneRimLightPropertyTrack
// 0x0008 (0x0088 - 0x0080)
class UATMovieSceneRimLightPropertyTrack final : public UMovieScenePropertyTrack
{
public:
	class UMaterialParameterCollection*           MPC;                                               // 0x0080(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneRimLightPropertyTrack">();
	}
	static class UATMovieSceneRimLightPropertyTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneRimLightPropertyTrack>();
	}
};
static_assert(alignof(UATMovieSceneRimLightPropertyTrack) == 0x000008, "Wrong alignment on UATMovieSceneRimLightPropertyTrack");
static_assert(sizeof(UATMovieSceneRimLightPropertyTrack) == 0x000088, "Wrong size on UATMovieSceneRimLightPropertyTrack");
static_assert(offsetof(UATMovieSceneRimLightPropertyTrack, MPC) == 0x000080, "Member 'UATMovieSceneRimLightPropertyTrack::MPC' has a wrong offset!");

// Class ATSpecialTrack.ATMovieSceneSoundPropertyTrack
// 0x0000 (0x0080 - 0x0080)
class UATMovieSceneSoundPropertyTrack final : public UMovieScenePropertyTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneSoundPropertyTrack">();
	}
	static class UATMovieSceneSoundPropertyTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneSoundPropertyTrack>();
	}
};
static_assert(alignof(UATMovieSceneSoundPropertyTrack) == 0x000008, "Wrong alignment on UATMovieSceneSoundPropertyTrack");
static_assert(sizeof(UATMovieSceneSoundPropertyTrack) == 0x000080, "Wrong size on UATMovieSceneSoundPropertyTrack");

// Class ATSpecialTrack.ATMovieSceneSoundSection
// 0x0030 (0x0110 - 0x00E0)
class UATMovieSceneSoundSection final : public UMovieSceneSection
{
public:
	class FName                                   SectionName;                                       // 0x00E0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFUNC_TYPE                                    FuncCallStart;                                     // 0x00E8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFUNC_TYPE                                    FuncCallEnd;                                       // 0x00E9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Volume;                                            // 0x00EC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SeReqNum;                                          // 0x00F0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoundSeOptionData                     SeOption;                                          // 0x00F4(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FSoundBgmOptionData                    BgmOption;                                         // 0x0100(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FSoundVoiceOptionData                  VoiceOption;                                       // 0x0108(0x0002)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_10A[0x6];                                      // 0x010A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneSoundSection">();
	}
	static class UATMovieSceneSoundSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneSoundSection>();
	}
};
static_assert(alignof(UATMovieSceneSoundSection) == 0x000008, "Wrong alignment on UATMovieSceneSoundSection");
static_assert(sizeof(UATMovieSceneSoundSection) == 0x000110, "Wrong size on UATMovieSceneSoundSection");
static_assert(offsetof(UATMovieSceneSoundSection, SectionName) == 0x0000E0, "Member 'UATMovieSceneSoundSection::SectionName' has a wrong offset!");
static_assert(offsetof(UATMovieSceneSoundSection, FuncCallStart) == 0x0000E8, "Member 'UATMovieSceneSoundSection::FuncCallStart' has a wrong offset!");
static_assert(offsetof(UATMovieSceneSoundSection, FuncCallEnd) == 0x0000E9, "Member 'UATMovieSceneSoundSection::FuncCallEnd' has a wrong offset!");
static_assert(offsetof(UATMovieSceneSoundSection, Volume) == 0x0000EC, "Member 'UATMovieSceneSoundSection::Volume' has a wrong offset!");
static_assert(offsetof(UATMovieSceneSoundSection, SeReqNum) == 0x0000F0, "Member 'UATMovieSceneSoundSection::SeReqNum' has a wrong offset!");
static_assert(offsetof(UATMovieSceneSoundSection, SeOption) == 0x0000F4, "Member 'UATMovieSceneSoundSection::SeOption' has a wrong offset!");
static_assert(offsetof(UATMovieSceneSoundSection, BgmOption) == 0x000100, "Member 'UATMovieSceneSoundSection::BgmOption' has a wrong offset!");
static_assert(offsetof(UATMovieSceneSoundSection, VoiceOption) == 0x000108, "Member 'UATMovieSceneSoundSection::VoiceOption' has a wrong offset!");

// Class ATSpecialTrack.ATMovieSceneSubtitlePropertyTrack
// 0x0000 (0x0080 - 0x0080)
class UATMovieSceneSubtitlePropertyTrack final : public UMovieScenePropertyTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneSubtitlePropertyTrack">();
	}
	static class UATMovieSceneSubtitlePropertyTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneSubtitlePropertyTrack>();
	}
};
static_assert(alignof(UATMovieSceneSubtitlePropertyTrack) == 0x000008, "Wrong alignment on UATMovieSceneSubtitlePropertyTrack");
static_assert(sizeof(UATMovieSceneSubtitlePropertyTrack) == 0x000080, "Wrong size on UATMovieSceneSubtitlePropertyTrack");

// Class ATSpecialTrack.ATMovieSceneSubtitleSection
// 0x0028 (0x0108 - 0x00E0)
class UATMovieSceneSubtitleSection final : public UMovieSceneSection
{
public:
	bool                                          bEnableSubtitle;                                   // 0x00E0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SubTitleID;                                        // 0x00E8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bContinue;                                         // 0x00F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CharacterNumber;                                   // 0x00F4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bEnableLipSync;                                    // 0x00F8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BlendSpaceID;                                      // 0x00FC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bOnlyVoice;                                        // 0x0100(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bEnableTargetCh;                                   // 0x0101(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_102[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TargetCh;                                          // 0x0104(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneSubtitleSection">();
	}
	static class UATMovieSceneSubtitleSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneSubtitleSection>();
	}
};
static_assert(alignof(UATMovieSceneSubtitleSection) == 0x000008, "Wrong alignment on UATMovieSceneSubtitleSection");
static_assert(sizeof(UATMovieSceneSubtitleSection) == 0x000108, "Wrong size on UATMovieSceneSubtitleSection");
static_assert(offsetof(UATMovieSceneSubtitleSection, bEnableSubtitle) == 0x0000E0, "Member 'UATMovieSceneSubtitleSection::bEnableSubtitle' has a wrong offset!");
static_assert(offsetof(UATMovieSceneSubtitleSection, SubTitleID) == 0x0000E8, "Member 'UATMovieSceneSubtitleSection::SubTitleID' has a wrong offset!");
static_assert(offsetof(UATMovieSceneSubtitleSection, bContinue) == 0x0000F0, "Member 'UATMovieSceneSubtitleSection::bContinue' has a wrong offset!");
static_assert(offsetof(UATMovieSceneSubtitleSection, CharacterNumber) == 0x0000F4, "Member 'UATMovieSceneSubtitleSection::CharacterNumber' has a wrong offset!");
static_assert(offsetof(UATMovieSceneSubtitleSection, bEnableLipSync) == 0x0000F8, "Member 'UATMovieSceneSubtitleSection::bEnableLipSync' has a wrong offset!");
static_assert(offsetof(UATMovieSceneSubtitleSection, BlendSpaceID) == 0x0000FC, "Member 'UATMovieSceneSubtitleSection::BlendSpaceID' has a wrong offset!");
static_assert(offsetof(UATMovieSceneSubtitleSection, bOnlyVoice) == 0x000100, "Member 'UATMovieSceneSubtitleSection::bOnlyVoice' has a wrong offset!");
static_assert(offsetof(UATMovieSceneSubtitleSection, bEnableTargetCh) == 0x000101, "Member 'UATMovieSceneSubtitleSection::bEnableTargetCh' has a wrong offset!");
static_assert(offsetof(UATMovieSceneSubtitleSection, TargetCh) == 0x000104, "Member 'UATMovieSceneSubtitleSection::TargetCh' has a wrong offset!");

// Class ATSpecialTrack.ATMovieSceneTelopSection
// 0x0050 (0x0130 - 0x00E0)
class UATMovieSceneTelopSection final : public UMovieSceneSection
{
public:
	struct FTelopInfo                             TelopInfo;                                         // 0x00E0(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FTelopInfo                             TelopInfo2;                                        // 0x0108(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneTelopSection">();
	}
	static class UATMovieSceneTelopSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneTelopSection>();
	}
};
static_assert(alignof(UATMovieSceneTelopSection) == 0x000008, "Wrong alignment on UATMovieSceneTelopSection");
static_assert(sizeof(UATMovieSceneTelopSection) == 0x000130, "Wrong size on UATMovieSceneTelopSection");
static_assert(offsetof(UATMovieSceneTelopSection, TelopInfo) == 0x0000E0, "Member 'UATMovieSceneTelopSection::TelopInfo' has a wrong offset!");
static_assert(offsetof(UATMovieSceneTelopSection, TelopInfo2) == 0x000108, "Member 'UATMovieSceneTelopSection::TelopInfo2' has a wrong offset!");

// Class ATSpecialTrack.ATMovieSceneTelopExSection
// 0x0058 (0x0138 - 0x00E0)
class UATMovieSceneTelopExSection final : public UMovieSceneSection
{
public:
	struct FTelopInfo                             TelopInfo;                                         // 0x00E0(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FTelopInfo                             TelopInfo2;                                        // 0x0108(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	float                                         TelopScale;                                        // 0x0130(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneTelopExSection">();
	}
	static class UATMovieSceneTelopExSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneTelopExSection>();
	}
};
static_assert(alignof(UATMovieSceneTelopExSection) == 0x000008, "Wrong alignment on UATMovieSceneTelopExSection");
static_assert(sizeof(UATMovieSceneTelopExSection) == 0x000138, "Wrong size on UATMovieSceneTelopExSection");
static_assert(offsetof(UATMovieSceneTelopExSection, TelopInfo) == 0x0000E0, "Member 'UATMovieSceneTelopExSection::TelopInfo' has a wrong offset!");
static_assert(offsetof(UATMovieSceneTelopExSection, TelopInfo2) == 0x000108, "Member 'UATMovieSceneTelopExSection::TelopInfo2' has a wrong offset!");
static_assert(offsetof(UATMovieSceneTelopExSection, TelopScale) == 0x000130, "Member 'UATMovieSceneTelopExSection::TelopScale' has a wrong offset!");

// Class ATSpecialTrack.ATMovieSceneTelopTrack
// 0x0000 (0x0080 - 0x0080)
class UATMovieSceneTelopTrack final : public UMovieScenePropertyTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneTelopTrack">();
	}
	static class UATMovieSceneTelopTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneTelopTrack>();
	}
};
static_assert(alignof(UATMovieSceneTelopTrack) == 0x000008, "Wrong alignment on UATMovieSceneTelopTrack");
static_assert(sizeof(UATMovieSceneTelopTrack) == 0x000080, "Wrong size on UATMovieSceneTelopTrack");

// Class ATSpecialTrack.ATMovieSceneTelopExTrack
// 0x0000 (0x0080 - 0x0080)
class UATMovieSceneTelopExTrack final : public UMovieScenePropertyTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneTelopExTrack">();
	}
	static class UATMovieSceneTelopExTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneTelopExTrack>();
	}
};
static_assert(alignof(UATMovieSceneTelopExTrack) == 0x000008, "Wrong alignment on UATMovieSceneTelopExTrack");
static_assert(sizeof(UATMovieSceneTelopExTrack) == 0x000080, "Wrong size on UATMovieSceneTelopExTrack");

// Class ATSpecialTrack.ATMovieSceneThankYouPropertyTrack
// 0x0000 (0x0080 - 0x0080)
class UATMovieSceneThankYouPropertyTrack final : public UMovieScenePropertyTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneThankYouPropertyTrack">();
	}
	static class UATMovieSceneThankYouPropertyTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneThankYouPropertyTrack>();
	}
};
static_assert(alignof(UATMovieSceneThankYouPropertyTrack) == 0x000008, "Wrong alignment on UATMovieSceneThankYouPropertyTrack");
static_assert(sizeof(UATMovieSceneThankYouPropertyTrack) == 0x000080, "Wrong size on UATMovieSceneThankYouPropertyTrack");

// Class ATSpecialTrack.ATMovieSceneThankYouSection
// 0x0000 (0x00E0 - 0x00E0)
class UATMovieSceneThankYouSection final : public UMovieSceneSection
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ATMovieSceneThankYouSection">();
	}
	static class UATMovieSceneThankYouSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UATMovieSceneThankYouSection>();
	}
};
static_assert(alignof(UATMovieSceneThankYouSection) == 0x000008, "Wrong alignment on UATMovieSceneThankYouSection");
static_assert(sizeof(UATMovieSceneThankYouSection) == 0x0000E0, "Wrong size on UATMovieSceneThankYouSection");

}

