#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Build_TowerE_Test

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Build_TowerE_Test.BP_Build_TowerE_Test_C
// 0x0048 (0x0380 - 0x0338)
class ABP_Build_TowerE_Test_C final : public AActor
{
public:
	class UStaticMeshComponent*                   S_Build_TowerPillarPartC_Test02;                   // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Build_TowerPillarPartC_Test01;                   // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Build_TowerExtraA_test;                          // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Build_TowerGenBase_Test;                         // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Build_TowerPillarPartD_Test;                     // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Build_TowerPillarPartC_Test;                     // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Build_TowerPillarPartE_Test;                     // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Build_TowerGenE_Test;                            // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Build_TowerE_Test_C">();
	}
	static class ABP_Build_TowerE_Test_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Build_TowerE_Test_C>();
	}
};
static_assert(alignof(ABP_Build_TowerE_Test_C) == 0x000008, "Wrong alignment on ABP_Build_TowerE_Test_C");
static_assert(sizeof(ABP_Build_TowerE_Test_C) == 0x000380, "Wrong size on ABP_Build_TowerE_Test_C");
static_assert(offsetof(ABP_Build_TowerE_Test_C, S_Build_TowerPillarPartC_Test02) == 0x000338, "Member 'ABP_Build_TowerE_Test_C::S_Build_TowerPillarPartC_Test02' has a wrong offset!");
static_assert(offsetof(ABP_Build_TowerE_Test_C, S_Build_TowerPillarPartC_Test01) == 0x000340, "Member 'ABP_Build_TowerE_Test_C::S_Build_TowerPillarPartC_Test01' has a wrong offset!");
static_assert(offsetof(ABP_Build_TowerE_Test_C, S_Build_TowerExtraA_test) == 0x000348, "Member 'ABP_Build_TowerE_Test_C::S_Build_TowerExtraA_test' has a wrong offset!");
static_assert(offsetof(ABP_Build_TowerE_Test_C, S_Build_TowerGenBase_Test) == 0x000350, "Member 'ABP_Build_TowerE_Test_C::S_Build_TowerGenBase_Test' has a wrong offset!");
static_assert(offsetof(ABP_Build_TowerE_Test_C, S_Build_TowerPillarPartD_Test) == 0x000358, "Member 'ABP_Build_TowerE_Test_C::S_Build_TowerPillarPartD_Test' has a wrong offset!");
static_assert(offsetof(ABP_Build_TowerE_Test_C, S_Build_TowerPillarPartC_Test) == 0x000360, "Member 'ABP_Build_TowerE_Test_C::S_Build_TowerPillarPartC_Test' has a wrong offset!");
static_assert(offsetof(ABP_Build_TowerE_Test_C, S_Build_TowerPillarPartE_Test) == 0x000368, "Member 'ABP_Build_TowerE_Test_C::S_Build_TowerPillarPartE_Test' has a wrong offset!");
static_assert(offsetof(ABP_Build_TowerE_Test_C, S_Build_TowerGenE_Test) == 0x000370, "Member 'ABP_Build_TowerE_Test_C::S_Build_TowerGenE_Test' has a wrong offset!");
static_assert(offsetof(ABP_Build_TowerE_Test_C, DefaultSceneRoot) == 0x000378, "Member 'ABP_Build_TowerE_Test_C::DefaultSceneRoot' has a wrong offset!");

}

