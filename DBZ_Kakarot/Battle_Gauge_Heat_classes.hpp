#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Battle_Gauge_Heat

#include "Basic.hpp"

#include "AT_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Battle_Gauge_Heat.Battle_Gauge_Heat_C
// 0x0078 (0x04E8 - 0x0470)
class UBattle_Gauge_Heat_C final : public UAT_UIBattleHudGaugePlayerHeatUp
{
public:
	class UWidgetAnimation*                       Gauge_Charge;                                      // 0x0470(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Loop_Full;                                         // 0x0478(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Gauge_Heat;                                        // 0x0480(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           All_Nut;                                           // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvalidationBox*                       All_Nut_InvalidationBox;                           // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Heat_frame00;                                  // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Heat_frame01;                                  // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Ins_Gauge_Heat;                                    // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Ins_Heat_Eff00_00;                                 // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Ins_Heat_Eff00_01;                                 // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Ins_Heat_Eff02;                                    // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Ins_Heat_Gauge_Eff03;                              // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Ins_Xef_Fire00_04;                                 // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Ins_Xef_Fire00_05;                                 // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UXef_Gauge_Eff_C*                       Xef_Gauge_Eff;                                     // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Battle_Gauge_Heat_C">();
	}
	static class UBattle_Gauge_Heat_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattle_Gauge_Heat_C>();
	}
};
static_assert(alignof(UBattle_Gauge_Heat_C) == 0x000008, "Wrong alignment on UBattle_Gauge_Heat_C");
static_assert(sizeof(UBattle_Gauge_Heat_C) == 0x0004E8, "Wrong size on UBattle_Gauge_Heat_C");
static_assert(offsetof(UBattle_Gauge_Heat_C, Gauge_Charge) == 0x000470, "Member 'UBattle_Gauge_Heat_C::Gauge_Charge' has a wrong offset!");
static_assert(offsetof(UBattle_Gauge_Heat_C, Loop_Full) == 0x000478, "Member 'UBattle_Gauge_Heat_C::Loop_Full' has a wrong offset!");
static_assert(offsetof(UBattle_Gauge_Heat_C, Gauge_Heat) == 0x000480, "Member 'UBattle_Gauge_Heat_C::Gauge_Heat' has a wrong offset!");
static_assert(offsetof(UBattle_Gauge_Heat_C, All_Nut) == 0x000488, "Member 'UBattle_Gauge_Heat_C::All_Nut' has a wrong offset!");
static_assert(offsetof(UBattle_Gauge_Heat_C, All_Nut_InvalidationBox) == 0x000490, "Member 'UBattle_Gauge_Heat_C::All_Nut_InvalidationBox' has a wrong offset!");
static_assert(offsetof(UBattle_Gauge_Heat_C, Img_Heat_frame00) == 0x000498, "Member 'UBattle_Gauge_Heat_C::Img_Heat_frame00' has a wrong offset!");
static_assert(offsetof(UBattle_Gauge_Heat_C, Img_Heat_frame01) == 0x0004A0, "Member 'UBattle_Gauge_Heat_C::Img_Heat_frame01' has a wrong offset!");
static_assert(offsetof(UBattle_Gauge_Heat_C, Ins_Gauge_Heat) == 0x0004A8, "Member 'UBattle_Gauge_Heat_C::Ins_Gauge_Heat' has a wrong offset!");
static_assert(offsetof(UBattle_Gauge_Heat_C, Ins_Heat_Eff00_00) == 0x0004B0, "Member 'UBattle_Gauge_Heat_C::Ins_Heat_Eff00_00' has a wrong offset!");
static_assert(offsetof(UBattle_Gauge_Heat_C, Ins_Heat_Eff00_01) == 0x0004B8, "Member 'UBattle_Gauge_Heat_C::Ins_Heat_Eff00_01' has a wrong offset!");
static_assert(offsetof(UBattle_Gauge_Heat_C, Ins_Heat_Eff02) == 0x0004C0, "Member 'UBattle_Gauge_Heat_C::Ins_Heat_Eff02' has a wrong offset!");
static_assert(offsetof(UBattle_Gauge_Heat_C, Ins_Heat_Gauge_Eff03) == 0x0004C8, "Member 'UBattle_Gauge_Heat_C::Ins_Heat_Gauge_Eff03' has a wrong offset!");
static_assert(offsetof(UBattle_Gauge_Heat_C, Ins_Xef_Fire00_04) == 0x0004D0, "Member 'UBattle_Gauge_Heat_C::Ins_Xef_Fire00_04' has a wrong offset!");
static_assert(offsetof(UBattle_Gauge_Heat_C, Ins_Xef_Fire00_05) == 0x0004D8, "Member 'UBattle_Gauge_Heat_C::Ins_Xef_Fire00_05' has a wrong offset!");
static_assert(offsetof(UBattle_Gauge_Heat_C, Xef_Gauge_Eff) == 0x0004E0, "Member 'UBattle_Gauge_Heat_C::Xef_Gauge_Eff' has a wrong offset!");

}

