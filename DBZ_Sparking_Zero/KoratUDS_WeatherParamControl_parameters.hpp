#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KoratUDS_WeatherParamControl

#include "Basic.hpp"

#include "KoratUDS_WeatherParamControl_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.Get2DDynamicCloudsNative
// 0x00C0 (0x00C0 - 0x0000)
struct KoratUDS_WeatherParamControlActor_Get2DDynamicCloudsNative final
{
public:
	struct FUltraDynamicSkyParam_2D_DynamicClouds ReturnValue;                                       // 0x0000(0x00C0)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_Get2DDynamicCloudsNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_Get2DDynamicCloudsNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_Get2DDynamicCloudsNative) == 0x0000C0, "Wrong size on KoratUDS_WeatherParamControlActor_Get2DDynamicCloudsNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_Get2DDynamicCloudsNative, ReturnValue) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_Get2DDynamicCloudsNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.GetBasicControlsNative
// 0x0020 (0x0020 - 0x0000)
struct KoratUDS_WeatherParamControlActor_GetBasicControlsNative final
{
public:
	struct FUltraDynamicSkyParam_BasicControls    ReturnValue;                                       // 0x0000(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_GetBasicControlsNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_GetBasicControlsNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_GetBasicControlsNative) == 0x000020, "Wrong size on KoratUDS_WeatherParamControlActor_GetBasicControlsNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_GetBasicControlsNative, ReturnValue) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_GetBasicControlsNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.GetCloud_WispsNative
// 0x0008 (0x0008 - 0x0000)
struct KoratUDS_WeatherParamControlActor_GetCloud_WispsNative final
{
public:
	struct FUltraDynamicSkyParam_CloudWisps       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_GetCloud_WispsNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_GetCloud_WispsNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_GetCloud_WispsNative) == 0x000008, "Wrong size on KoratUDS_WeatherParamControlActor_GetCloud_WispsNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_GetCloud_WispsNative, ReturnValue) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_GetCloud_WispsNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.GetCloudVortexNative
// 0x0048 (0x0048 - 0x0000)
struct KoratUDS_WeatherParamControlActor_GetCloudVortexNative final
{
public:
	struct FUltraDynamicSkyParam_CloudVortex      ReturnValue;                                       // 0x0000(0x0048)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_GetCloudVortexNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_GetCloudVortexNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_GetCloudVortexNative) == 0x000048, "Wrong size on KoratUDS_WeatherParamControlActor_GetCloudVortexNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_GetCloudVortexNative, ReturnValue) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_GetCloudVortexNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.GetCustomCloudShadowNative
// 0x0048 (0x0048 - 0x0000)
struct KoratUDS_WeatherParamControlActor_GetCustomCloudShadowNative final
{
public:
	struct FUltraDynamicSkyParam_CustomCloudShadow ReturnValue;                                       // 0x0000(0x0048)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_GetCustomCloudShadowNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_GetCustomCloudShadowNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_GetCustomCloudShadowNative) == 0x000048, "Wrong size on KoratUDS_WeatherParamControlActor_GetCustomCloudShadowNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_GetCustomCloudShadowNative, ReturnValue) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_GetCustomCloudShadowNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.GetCustomVolumetricCloudsParameterNative
// 0x0080 (0x0080 - 0x0000)
struct KoratUDS_WeatherParamControlActor_GetCustomVolumetricCloudsParameterNative final
{
public:
	struct FUltraDynamicSkyParam_CustomVolumetricCloudsParameter ReturnValue;                                       // 0x0000(0x0080)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_GetCustomVolumetricCloudsParameterNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_GetCustomVolumetricCloudsParameterNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_GetCustomVolumetricCloudsParameterNative) == 0x000080, "Wrong size on KoratUDS_WeatherParamControlActor_GetCustomVolumetricCloudsParameterNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_GetCustomVolumetricCloudsParameterNative, ReturnValue) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_GetCustomVolumetricCloudsParameterNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.GetDustNative
// 0x0018 (0x0018 - 0x0000)
struct KoratUDS_WeatherParamControlActor_GetDustNative final
{
public:
	struct FUltraDynamicSkyParam_Dust             ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_GetDustNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_GetDustNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_GetDustNative) == 0x000018, "Wrong size on KoratUDS_WeatherParamControlActor_GetDustNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_GetDustNative, ReturnValue) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_GetDustNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.GetFogColorNative
// 0x0070 (0x0070 - 0x0000)
struct KoratUDS_WeatherParamControlActor_GetFogColorNative final
{
public:
	struct FUltraDynamicSkyParam_FogColor         ReturnValue;                                       // 0x0000(0x0070)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_GetFogColorNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_GetFogColorNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_GetFogColorNative) == 0x000070, "Wrong size on KoratUDS_WeatherParamControlActor_GetFogColorNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_GetFogColorNative, ReturnValue) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_GetFogColorNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.GetFogDensityNative
// 0x0058 (0x0058 - 0x0000)
struct KoratUDS_WeatherParamControlActor_GetFogDensityNative final
{
public:
	struct FUltraDynamicSkyParam_FogDensity       ReturnValue;                                       // 0x0000(0x0058)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_GetFogDensityNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_GetFogDensityNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_GetFogDensityNative) == 0x000058, "Wrong size on KoratUDS_WeatherParamControlActor_GetFogDensityNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_GetFogDensityNative, ReturnValue) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_GetFogDensityNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.GetLightShaftsNative
// 0x0050 (0x0050 - 0x0000)
struct KoratUDS_WeatherParamControlActor_GetLightShaftsNative final
{
public:
	struct FUltraDynamicSkyParam_LightShafts      ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_GetLightShaftsNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_GetLightShaftsNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_GetLightShaftsNative) == 0x000050, "Wrong size on KoratUDS_WeatherParamControlActor_GetLightShaftsNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_GetLightShaftsNative, ReturnValue) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_GetLightShaftsNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.GetMap000_CloudNative
// 0x0088 (0x0088 - 0x0000)
struct KoratUDS_WeatherParamControlActor_GetMap000_CloudNative final
{
public:
	struct FUltraDynamicSkyParam_Map000_Cloud     ReturnValue;                                       // 0x0000(0x0088)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_GetMap000_CloudNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_GetMap000_CloudNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_GetMap000_CloudNative) == 0x000088, "Wrong size on KoratUDS_WeatherParamControlActor_GetMap000_CloudNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_GetMap000_CloudNative, ReturnValue) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_GetMap000_CloudNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.GetMap000_SkyNative
// 0x0008 (0x0008 - 0x0000)
struct KoratUDS_WeatherParamControlActor_GetMap000_SkyNative final
{
public:
	struct FUltraDynamicSkyParam_Map000_Sky       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_GetMap000_SkyNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_GetMap000_SkyNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_GetMap000_SkyNative) == 0x000008, "Wrong size on KoratUDS_WeatherParamControlActor_GetMap000_SkyNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_GetMap000_SkyNative, ReturnValue) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_GetMap000_SkyNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.GetParamFromUDS
// 0x0620 (0x0620 - 0x0000)
struct KoratUDS_WeatherParamControlActor_GetParamFromUDS final
{
public:
	struct FUltraDynamicSkyParamNative            ReturnValue;                                       // 0x0000(0x0620)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_GetParamFromUDS) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_GetParamFromUDS");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_GetParamFromUDS) == 0x000620, "Wrong size on KoratUDS_WeatherParamControlActor_GetParamFromUDS");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_GetParamFromUDS, ReturnValue) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_GetParamFromUDS::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.GetRateFromCurve
// 0x0018 (0x0018 - 0x0000)
struct KoratUDS_WeatherParamControlActor_GetRateFromCurve final
{
public:
	double                                        InRate;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UCurveFloat*                      InCurveFloat;                                      // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_GetRateFromCurve) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_GetRateFromCurve");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_GetRateFromCurve) == 0x000018, "Wrong size on KoratUDS_WeatherParamControlActor_GetRateFromCurve");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_GetRateFromCurve, InRate) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_GetRateFromCurve::InRate' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_GetRateFromCurve, InCurveFloat) == 0x000008, "Member 'KoratUDS_WeatherParamControlActor_GetRateFromCurve::InCurveFloat' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_GetRateFromCurve, ReturnValue) == 0x000010, "Member 'KoratUDS_WeatherParamControlActor_GetRateFromCurve::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.GetSimplifiedColorNative
// 0x00C8 (0x00C8 - 0x0000)
struct KoratUDS_WeatherParamControlActor_GetSimplifiedColorNative final
{
public:
	struct FUltraDynamicSkyParam_SimplifiedColor  ReturnValue;                                       // 0x0000(0x00C8)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_GetSimplifiedColorNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_GetSimplifiedColorNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_GetSimplifiedColorNative) == 0x0000C8, "Wrong size on KoratUDS_WeatherParamControlActor_GetSimplifiedColorNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_GetSimplifiedColorNative, ReturnValue) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_GetSimplifiedColorNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.GetSkyLightNative
// 0x0008 (0x0008 - 0x0000)
struct KoratUDS_WeatherParamControlActor_GetSkyLightNative final
{
public:
	struct FUltraDynamicSkyParam_SkyLight         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_GetSkyLightNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_GetSkyLightNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_GetSkyLightNative) == 0x000008, "Wrong size on KoratUDS_WeatherParamControlActor_GetSkyLightNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_GetSkyLightNative, ReturnValue) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_GetSkyLightNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.GetSunNative
// 0x0020 (0x0020 - 0x0000)
struct KoratUDS_WeatherParamControlActor_GetSunNative final
{
public:
	struct FUltraDynamicSkyParam_Sun              ReturnValue;                                       // 0x0000(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_GetSunNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_GetSunNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_GetSunNative) == 0x000020, "Wrong size on KoratUDS_WeatherParamControlActor_GetSunNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_GetSunNative, ReturnValue) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_GetSunNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.GetVolumetricCloudsNative
// 0x0178 (0x0178 - 0x0000)
struct KoratUDS_WeatherParamControlActor_GetVolumetricCloudsNative final
{
public:
	struct FUltraDynamicSkyParam_VolumetricClouds ReturnValue;                                       // 0x0000(0x0178)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_GetVolumetricCloudsNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_GetVolumetricCloudsNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_GetVolumetricCloudsNative) == 0x000178, "Wrong size on KoratUDS_WeatherParamControlActor_GetVolumetricCloudsNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_GetVolumetricCloudsNative, ReturnValue) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_GetVolumetricCloudsNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.LoadParamFormUDS
// 0x0001 (0x0001 - 0x0000)
struct KoratUDS_WeatherParamControlActor_LoadParamFormUDS final
{
public:
	EKoratUltraDynamicSkyNative                   InType;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_LoadParamFormUDS) == 0x000001, "Wrong alignment on KoratUDS_WeatherParamControlActor_LoadParamFormUDS");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_LoadParamFormUDS) == 0x000001, "Wrong size on KoratUDS_WeatherParamControlActor_LoadParamFormUDS");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_LoadParamFormUDS, InType) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_LoadParamFormUDS::InType' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.Rate2DDynamicCloudsNative
// 0x0308 (0x0308 - 0x0000)
struct KoratUDS_WeatherParamControlActor_Rate2DDynamicCloudsNative final
{
public:
	struct FUltraDynamicSkyParam_2D_DynamicClouds InStart;                                           // 0x0000(0x00C0)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_2D_DynamicClouds InEnd;                                             // 0x00C0(0x00C0)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_2D_DynamicClouds_Curve InCurve;                                           // 0x0180(0x00C0)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	double                                        InRate;                                            // 0x0240(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_2D_DynamicClouds ReturnValue;                                       // 0x0248(0x00C0)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_Rate2DDynamicCloudsNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_Rate2DDynamicCloudsNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_Rate2DDynamicCloudsNative) == 0x000308, "Wrong size on KoratUDS_WeatherParamControlActor_Rate2DDynamicCloudsNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_Rate2DDynamicCloudsNative, InStart) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_Rate2DDynamicCloudsNative::InStart' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_Rate2DDynamicCloudsNative, InEnd) == 0x0000C0, "Member 'KoratUDS_WeatherParamControlActor_Rate2DDynamicCloudsNative::InEnd' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_Rate2DDynamicCloudsNative, InCurve) == 0x000180, "Member 'KoratUDS_WeatherParamControlActor_Rate2DDynamicCloudsNative::InCurve' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_Rate2DDynamicCloudsNative, InRate) == 0x000240, "Member 'KoratUDS_WeatherParamControlActor_Rate2DDynamicCloudsNative::InRate' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_Rate2DDynamicCloudsNative, ReturnValue) == 0x000248, "Member 'KoratUDS_WeatherParamControlActor_Rate2DDynamicCloudsNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.RateBasicControlsNative
// 0x0088 (0x0088 - 0x0000)
struct KoratUDS_WeatherParamControlActor_RateBasicControlsNative final
{
public:
	struct FUltraDynamicSkyParam_BasicControls    InStart;                                           // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_BasicControls    InEnd;                                             // 0x0020(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_BasicControls_Curve InCurve;                                           // 0x0040(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	double                                        InRate;                                            // 0x0060(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_BasicControls    ReturnValue;                                       // 0x0068(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_RateBasicControlsNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_RateBasicControlsNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_RateBasicControlsNative) == 0x000088, "Wrong size on KoratUDS_WeatherParamControlActor_RateBasicControlsNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateBasicControlsNative, InStart) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_RateBasicControlsNative::InStart' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateBasicControlsNative, InEnd) == 0x000020, "Member 'KoratUDS_WeatherParamControlActor_RateBasicControlsNative::InEnd' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateBasicControlsNative, InCurve) == 0x000040, "Member 'KoratUDS_WeatherParamControlActor_RateBasicControlsNative::InCurve' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateBasicControlsNative, InRate) == 0x000060, "Member 'KoratUDS_WeatherParamControlActor_RateBasicControlsNative::InRate' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateBasicControlsNative, ReturnValue) == 0x000068, "Member 'KoratUDS_WeatherParamControlActor_RateBasicControlsNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.RateBoolNative
// 0x0018 (0x0018 - 0x0000)
struct KoratUDS_WeatherParamControlActor_RateBoolNative final
{
public:
	bool                                          InbStart;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InbEnd;                                            // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        InRate;                                            // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_RateBoolNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_RateBoolNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_RateBoolNative) == 0x000018, "Wrong size on KoratUDS_WeatherParamControlActor_RateBoolNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateBoolNative, InbStart) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_RateBoolNative::InbStart' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateBoolNative, InbEnd) == 0x000001, "Member 'KoratUDS_WeatherParamControlActor_RateBoolNative::InbEnd' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateBoolNative, InRate) == 0x000008, "Member 'KoratUDS_WeatherParamControlActor_RateBoolNative::InRate' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateBoolNative, ReturnValue) == 0x000010, "Member 'KoratUDS_WeatherParamControlActor_RateBoolNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.RateCloud_WispsNative
// 0x0028 (0x0028 - 0x0000)
struct KoratUDS_WeatherParamControlActor_RateCloud_WispsNative final
{
public:
	struct FUltraDynamicSkyParam_CloudWisps       InStart;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_CloudWisps       InEnd;                                             // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_CloudWisps_Curve InCurve;                                           // 0x0010(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	double                                        InRate;                                            // 0x0018(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_CloudWisps       ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_RateCloud_WispsNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_RateCloud_WispsNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_RateCloud_WispsNative) == 0x000028, "Wrong size on KoratUDS_WeatherParamControlActor_RateCloud_WispsNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateCloud_WispsNative, InStart) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_RateCloud_WispsNative::InStart' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateCloud_WispsNative, InEnd) == 0x000008, "Member 'KoratUDS_WeatherParamControlActor_RateCloud_WispsNative::InEnd' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateCloud_WispsNative, InCurve) == 0x000010, "Member 'KoratUDS_WeatherParamControlActor_RateCloud_WispsNative::InCurve' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateCloud_WispsNative, InRate) == 0x000018, "Member 'KoratUDS_WeatherParamControlActor_RateCloud_WispsNative::InRate' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateCloud_WispsNative, ReturnValue) == 0x000020, "Member 'KoratUDS_WeatherParamControlActor_RateCloud_WispsNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.RateCloudVortexNative
// 0x0118 (0x0118 - 0x0000)
struct KoratUDS_WeatherParamControlActor_RateCloudVortexNative final
{
public:
	struct FUltraDynamicSkyParam_CloudVortex      InStart;                                           // 0x0000(0x0048)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_CloudVortex      InEnd;                                             // 0x0048(0x0048)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_CloudVortex_Curve InCurve;                                           // 0x0090(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	double                                        InRate;                                            // 0x00C8(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_CloudVortex      ReturnValue;                                       // 0x00D0(0x0048)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_RateCloudVortexNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_RateCloudVortexNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_RateCloudVortexNative) == 0x000118, "Wrong size on KoratUDS_WeatherParamControlActor_RateCloudVortexNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateCloudVortexNative, InStart) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_RateCloudVortexNative::InStart' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateCloudVortexNative, InEnd) == 0x000048, "Member 'KoratUDS_WeatherParamControlActor_RateCloudVortexNative::InEnd' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateCloudVortexNative, InCurve) == 0x000090, "Member 'KoratUDS_WeatherParamControlActor_RateCloudVortexNative::InCurve' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateCloudVortexNative, InRate) == 0x0000C8, "Member 'KoratUDS_WeatherParamControlActor_RateCloudVortexNative::InRate' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateCloudVortexNative, ReturnValue) == 0x0000D0, "Member 'KoratUDS_WeatherParamControlActor_RateCloudVortexNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.RateColorNative
// 0x0040 (0x0040 - 0x0000)
struct KoratUDS_WeatherParamControlActor_RateColorNative final
{
public:
	struct FLinearColor                           InStart;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           InEnd;                                             // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        InRate;                                            // 0x0020(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UCurveFloat*                      InCurveFloat;                                      // 0x0028(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ReturnValue;                                       // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_RateColorNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_RateColorNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_RateColorNative) == 0x000040, "Wrong size on KoratUDS_WeatherParamControlActor_RateColorNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateColorNative, InStart) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_RateColorNative::InStart' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateColorNative, InEnd) == 0x000010, "Member 'KoratUDS_WeatherParamControlActor_RateColorNative::InEnd' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateColorNative, InRate) == 0x000020, "Member 'KoratUDS_WeatherParamControlActor_RateColorNative::InRate' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateColorNative, InCurveFloat) == 0x000028, "Member 'KoratUDS_WeatherParamControlActor_RateColorNative::InCurveFloat' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateColorNative, ReturnValue) == 0x000030, "Member 'KoratUDS_WeatherParamControlActor_RateColorNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.RateCustomCloudShadowNative
// 0x0128 (0x0128 - 0x0000)
struct KoratUDS_WeatherParamControlActor_RateCustomCloudShadowNative final
{
public:
	struct FUltraDynamicSkyParam_CustomCloudShadow InStart;                                           // 0x0000(0x0048)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_CustomCloudShadow InEnd;                                             // 0x0048(0x0048)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_CustomCloudShadow_Curve InCurve;                                           // 0x0090(0x0048)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	double                                        InRate;                                            // 0x00D8(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_CustomCloudShadow ReturnValue;                                       // 0x00E0(0x0048)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_RateCustomCloudShadowNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_RateCustomCloudShadowNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_RateCustomCloudShadowNative) == 0x000128, "Wrong size on KoratUDS_WeatherParamControlActor_RateCustomCloudShadowNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateCustomCloudShadowNative, InStart) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_RateCustomCloudShadowNative::InStart' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateCustomCloudShadowNative, InEnd) == 0x000048, "Member 'KoratUDS_WeatherParamControlActor_RateCustomCloudShadowNative::InEnd' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateCustomCloudShadowNative, InCurve) == 0x000090, "Member 'KoratUDS_WeatherParamControlActor_RateCustomCloudShadowNative::InCurve' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateCustomCloudShadowNative, InRate) == 0x0000D8, "Member 'KoratUDS_WeatherParamControlActor_RateCustomCloudShadowNative::InRate' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateCustomCloudShadowNative, ReturnValue) == 0x0000E0, "Member 'KoratUDS_WeatherParamControlActor_RateCustomCloudShadowNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.RateCustomVolumetricCloudsParameterNative
// 0x01D8 (0x01D8 - 0x0000)
struct KoratUDS_WeatherParamControlActor_RateCustomVolumetricCloudsParameterNative final
{
public:
	struct FUltraDynamicSkyParam_CustomVolumetricCloudsParameter InStart;                                           // 0x0000(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_CustomVolumetricCloudsParameter InEnd;                                             // 0x0080(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_CustomVolumetricCloudsParameter_Curve InCurve;                                           // 0x0100(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	double                                        InRate;                                            // 0x0150(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_CustomVolumetricCloudsParameter ReturnValue;                                       // 0x0158(0x0080)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_RateCustomVolumetricCloudsParameterNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_RateCustomVolumetricCloudsParameterNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_RateCustomVolumetricCloudsParameterNative) == 0x0001D8, "Wrong size on KoratUDS_WeatherParamControlActor_RateCustomVolumetricCloudsParameterNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateCustomVolumetricCloudsParameterNative, InStart) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_RateCustomVolumetricCloudsParameterNative::InStart' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateCustomVolumetricCloudsParameterNative, InEnd) == 0x000080, "Member 'KoratUDS_WeatherParamControlActor_RateCustomVolumetricCloudsParameterNative::InEnd' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateCustomVolumetricCloudsParameterNative, InCurve) == 0x000100, "Member 'KoratUDS_WeatherParamControlActor_RateCustomVolumetricCloudsParameterNative::InCurve' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateCustomVolumetricCloudsParameterNative, InRate) == 0x000150, "Member 'KoratUDS_WeatherParamControlActor_RateCustomVolumetricCloudsParameterNative::InRate' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateCustomVolumetricCloudsParameterNative, ReturnValue) == 0x000158, "Member 'KoratUDS_WeatherParamControlActor_RateCustomVolumetricCloudsParameterNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.RateDustNative
// 0x0060 (0x0060 - 0x0000)
struct KoratUDS_WeatherParamControlActor_RateDustNative final
{
public:
	struct FUltraDynamicSkyParam_Dust             InStart;                                           // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_Dust             InEnd;                                             // 0x0018(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_Dust_Curve       InCurve;                                           // 0x0030(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	double                                        InRate;                                            // 0x0040(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_Dust             ReturnValue;                                       // 0x0048(0x0018)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_RateDustNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_RateDustNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_RateDustNative) == 0x000060, "Wrong size on KoratUDS_WeatherParamControlActor_RateDustNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateDustNative, InStart) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_RateDustNative::InStart' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateDustNative, InEnd) == 0x000018, "Member 'KoratUDS_WeatherParamControlActor_RateDustNative::InEnd' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateDustNative, InCurve) == 0x000030, "Member 'KoratUDS_WeatherParamControlActor_RateDustNative::InCurve' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateDustNative, InRate) == 0x000040, "Member 'KoratUDS_WeatherParamControlActor_RateDustNative::InRate' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateDustNative, ReturnValue) == 0x000048, "Member 'KoratUDS_WeatherParamControlActor_RateDustNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.RateFloatNative
// 0x0028 (0x0028 - 0x0000)
struct KoratUDS_WeatherParamControlActor_RateFloatNative final
{
public:
	double                                        InStart;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        InEnd;                                             // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        InRate;                                            // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UCurveFloat*                      InCurveFloat;                                      // 0x0018(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_RateFloatNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_RateFloatNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_RateFloatNative) == 0x000028, "Wrong size on KoratUDS_WeatherParamControlActor_RateFloatNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateFloatNative, InStart) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_RateFloatNative::InStart' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateFloatNative, InEnd) == 0x000008, "Member 'KoratUDS_WeatherParamControlActor_RateFloatNative::InEnd' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateFloatNative, InRate) == 0x000010, "Member 'KoratUDS_WeatherParamControlActor_RateFloatNative::InRate' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateFloatNative, InCurveFloat) == 0x000018, "Member 'KoratUDS_WeatherParamControlActor_RateFloatNative::InCurveFloat' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateFloatNative, ReturnValue) == 0x000020, "Member 'KoratUDS_WeatherParamControlActor_RateFloatNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.RateFogColorNative
// 0x01A0 (0x01A0 - 0x0000)
struct KoratUDS_WeatherParamControlActor_RateFogColorNative final
{
public:
	struct FUltraDynamicSkyParam_FogColor         InStart;                                           // 0x0000(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_FogColor         InEnd;                                             // 0x0070(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_FogColor_Curve   InCurve;                                           // 0x00E0(0x0048)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	double                                        InRate;                                            // 0x0128(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_FogColor         ReturnValue;                                       // 0x0130(0x0070)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_RateFogColorNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_RateFogColorNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_RateFogColorNative) == 0x0001A0, "Wrong size on KoratUDS_WeatherParamControlActor_RateFogColorNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateFogColorNative, InStart) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_RateFogColorNative::InStart' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateFogColorNative, InEnd) == 0x000070, "Member 'KoratUDS_WeatherParamControlActor_RateFogColorNative::InEnd' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateFogColorNative, InCurve) == 0x0000E0, "Member 'KoratUDS_WeatherParamControlActor_RateFogColorNative::InCurve' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateFogColorNative, InRate) == 0x000128, "Member 'KoratUDS_WeatherParamControlActor_RateFogColorNative::InRate' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateFogColorNative, ReturnValue) == 0x000130, "Member 'KoratUDS_WeatherParamControlActor_RateFogColorNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.RateFogDensityNative
// 0x0168 (0x0168 - 0x0000)
struct KoratUDS_WeatherParamControlActor_RateFogDensityNative final
{
public:
	struct FUltraDynamicSkyParam_FogDensity       InStart;                                           // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_FogDensity       InEnd;                                             // 0x0058(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_FogDensity_Curve InCurve;                                           // 0x00B0(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	double                                        InRate;                                            // 0x0108(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_FogDensity       ReturnValue;                                       // 0x0110(0x0058)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_RateFogDensityNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_RateFogDensityNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_RateFogDensityNative) == 0x000168, "Wrong size on KoratUDS_WeatherParamControlActor_RateFogDensityNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateFogDensityNative, InStart) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_RateFogDensityNative::InStart' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateFogDensityNative, InEnd) == 0x000058, "Member 'KoratUDS_WeatherParamControlActor_RateFogDensityNative::InEnd' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateFogDensityNative, InCurve) == 0x0000B0, "Member 'KoratUDS_WeatherParamControlActor_RateFogDensityNative::InCurve' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateFogDensityNative, InRate) == 0x000108, "Member 'KoratUDS_WeatherParamControlActor_RateFogDensityNative::InRate' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateFogDensityNative, ReturnValue) == 0x000110, "Member 'KoratUDS_WeatherParamControlActor_RateFogDensityNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.RateLightShaftsNative
// 0x0128 (0x0128 - 0x0000)
struct KoratUDS_WeatherParamControlActor_RateLightShaftsNative final
{
public:
	struct FUltraDynamicSkyParam_LightShafts      InStart;                                           // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_LightShafts      InEnd;                                             // 0x0050(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_LightShafts_Curve InCuve;                                            // 0x00A0(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	double                                        InRate;                                            // 0x00D0(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_LightShafts      ReturnValue;                                       // 0x00D8(0x0050)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_RateLightShaftsNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_RateLightShaftsNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_RateLightShaftsNative) == 0x000128, "Wrong size on KoratUDS_WeatherParamControlActor_RateLightShaftsNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateLightShaftsNative, InStart) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_RateLightShaftsNative::InStart' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateLightShaftsNative, InEnd) == 0x000050, "Member 'KoratUDS_WeatherParamControlActor_RateLightShaftsNative::InEnd' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateLightShaftsNative, InCuve) == 0x0000A0, "Member 'KoratUDS_WeatherParamControlActor_RateLightShaftsNative::InCuve' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateLightShaftsNative, InRate) == 0x0000D0, "Member 'KoratUDS_WeatherParamControlActor_RateLightShaftsNative::InRate' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateLightShaftsNative, ReturnValue) == 0x0000D8, "Member 'KoratUDS_WeatherParamControlActor_RateLightShaftsNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.RateMap000_CloudNative
// 0x0228 (0x0228 - 0x0000)
struct KoratUDS_WeatherParamControlActor_RateMap000_CloudNative final
{
public:
	struct FUltraDynamicSkyParam_Map000_Cloud     InStart;                                           // 0x0000(0x0088)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_Map000_Cloud     InEnd;                                             // 0x0088(0x0088)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_Map000_Cloud_Curve InCurve;                                           // 0x0110(0x0088)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	double                                        InRate;                                            // 0x0198(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_Map000_Cloud     ReturnValue;                                       // 0x01A0(0x0088)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_RateMap000_CloudNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_RateMap000_CloudNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_RateMap000_CloudNative) == 0x000228, "Wrong size on KoratUDS_WeatherParamControlActor_RateMap000_CloudNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateMap000_CloudNative, InStart) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_RateMap000_CloudNative::InStart' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateMap000_CloudNative, InEnd) == 0x000088, "Member 'KoratUDS_WeatherParamControlActor_RateMap000_CloudNative::InEnd' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateMap000_CloudNative, InCurve) == 0x000110, "Member 'KoratUDS_WeatherParamControlActor_RateMap000_CloudNative::InCurve' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateMap000_CloudNative, InRate) == 0x000198, "Member 'KoratUDS_WeatherParamControlActor_RateMap000_CloudNative::InRate' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateMap000_CloudNative, ReturnValue) == 0x0001A0, "Member 'KoratUDS_WeatherParamControlActor_RateMap000_CloudNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.RateMap000_SkyNative
// 0x0028 (0x0028 - 0x0000)
struct KoratUDS_WeatherParamControlActor_RateMap000_SkyNative final
{
public:
	struct FUltraDynamicSkyParam_Map000_Sky       InStart;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_Map000_Sky       InEnd;                                             // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_Map000_Sky_Curve InCurve;                                           // 0x0010(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	double                                        InRate;                                            // 0x0018(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_Map000_Sky       ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_RateMap000_SkyNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_RateMap000_SkyNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_RateMap000_SkyNative) == 0x000028, "Wrong size on KoratUDS_WeatherParamControlActor_RateMap000_SkyNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateMap000_SkyNative, InStart) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_RateMap000_SkyNative::InStart' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateMap000_SkyNative, InEnd) == 0x000008, "Member 'KoratUDS_WeatherParamControlActor_RateMap000_SkyNative::InEnd' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateMap000_SkyNative, InCurve) == 0x000010, "Member 'KoratUDS_WeatherParamControlActor_RateMap000_SkyNative::InCurve' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateMap000_SkyNative, InRate) == 0x000018, "Member 'KoratUDS_WeatherParamControlActor_RateMap000_SkyNative::InRate' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateMap000_SkyNative, ReturnValue) == 0x000020, "Member 'KoratUDS_WeatherParamControlActor_RateMap000_SkyNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.RateParamNative
// 0x1768 (0x1768 - 0x0000)
struct KoratUDS_WeatherParamControlActor_RateParamNative final
{
public:
	struct FUltraDynamicSkyParamNative            InStartParam;                                      // 0x0000(0x0620)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParamNative            InEndParam;                                        // 0x0620(0x0620)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyCurveParamNative       InCurve;                                           // 0x0C40(0x0500)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	double                                        InRate;                                            // 0x1140(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParamNative            ReturnValue;                                       // 0x1148(0x0620)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_RateParamNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_RateParamNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_RateParamNative) == 0x001768, "Wrong size on KoratUDS_WeatherParamControlActor_RateParamNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateParamNative, InStartParam) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_RateParamNative::InStartParam' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateParamNative, InEndParam) == 0x000620, "Member 'KoratUDS_WeatherParamControlActor_RateParamNative::InEndParam' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateParamNative, InCurve) == 0x000C40, "Member 'KoratUDS_WeatherParamControlActor_RateParamNative::InCurve' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateParamNative, InRate) == 0x001140, "Member 'KoratUDS_WeatherParamControlActor_RateParamNative::InRate' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateParamNative, ReturnValue) == 0x001148, "Member 'KoratUDS_WeatherParamControlActor_RateParamNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.RateSimplifiedColorNative
// 0x02C8 (0x02C8 - 0x0000)
struct KoratUDS_WeatherParamControlActor_RateSimplifiedColorNative final
{
public:
	struct FUltraDynamicSkyParam_SimplifiedColor  InStart;                                           // 0x0000(0x00C8)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_SimplifiedColor  InEnd;                                             // 0x00C8(0x00C8)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_SimplifiedColor_Curve InCurve;                                           // 0x0190(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	double                                        InRate;                                            // 0x01F8(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_SimplifiedColor  ReturnValue;                                       // 0x0200(0x00C8)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_RateSimplifiedColorNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_RateSimplifiedColorNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_RateSimplifiedColorNative) == 0x0002C8, "Wrong size on KoratUDS_WeatherParamControlActor_RateSimplifiedColorNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateSimplifiedColorNative, InStart) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_RateSimplifiedColorNative::InStart' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateSimplifiedColorNative, InEnd) == 0x0000C8, "Member 'KoratUDS_WeatherParamControlActor_RateSimplifiedColorNative::InEnd' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateSimplifiedColorNative, InCurve) == 0x000190, "Member 'KoratUDS_WeatherParamControlActor_RateSimplifiedColorNative::InCurve' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateSimplifiedColorNative, InRate) == 0x0001F8, "Member 'KoratUDS_WeatherParamControlActor_RateSimplifiedColorNative::InRate' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateSimplifiedColorNative, ReturnValue) == 0x000200, "Member 'KoratUDS_WeatherParamControlActor_RateSimplifiedColorNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.RateSkyLightNative
// 0x0028 (0x0028 - 0x0000)
struct KoratUDS_WeatherParamControlActor_RateSkyLightNative final
{
public:
	struct FUltraDynamicSkyParam_SkyLight         InStart;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_SkyLight         InEnd;                                             // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_SkyLight_Curve   InCurve;                                           // 0x0010(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	double                                        InRate;                                            // 0x0018(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_SkyLight         ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_RateSkyLightNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_RateSkyLightNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_RateSkyLightNative) == 0x000028, "Wrong size on KoratUDS_WeatherParamControlActor_RateSkyLightNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateSkyLightNative, InStart) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_RateSkyLightNative::InStart' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateSkyLightNative, InEnd) == 0x000008, "Member 'KoratUDS_WeatherParamControlActor_RateSkyLightNative::InEnd' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateSkyLightNative, InCurve) == 0x000010, "Member 'KoratUDS_WeatherParamControlActor_RateSkyLightNative::InCurve' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateSkyLightNative, InRate) == 0x000018, "Member 'KoratUDS_WeatherParamControlActor_RateSkyLightNative::InRate' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateSkyLightNative, ReturnValue) == 0x000020, "Member 'KoratUDS_WeatherParamControlActor_RateSkyLightNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.RateSunNative
// 0x0080 (0x0080 - 0x0000)
struct KoratUDS_WeatherParamControlActor_RateSunNative final
{
public:
	struct FUltraDynamicSkyParam_Sun              InStart;                                           // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_Sun              InEnd;                                             // 0x0020(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_Sun_Curve        InCurve;                                           // 0x0040(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	double                                        InRate;                                            // 0x0058(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_Sun              ReturnValue;                                       // 0x0060(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_RateSunNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_RateSunNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_RateSunNative) == 0x000080, "Wrong size on KoratUDS_WeatherParamControlActor_RateSunNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateSunNative, InStart) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_RateSunNative::InStart' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateSunNative, InEnd) == 0x000020, "Member 'KoratUDS_WeatherParamControlActor_RateSunNative::InEnd' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateSunNative, InCurve) == 0x000040, "Member 'KoratUDS_WeatherParamControlActor_RateSunNative::InCurve' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateSunNative, InRate) == 0x000058, "Member 'KoratUDS_WeatherParamControlActor_RateSunNative::InRate' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateSunNative, ReturnValue) == 0x000060, "Member 'KoratUDS_WeatherParamControlActor_RateSunNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.RateVector2DNative
// 0x0040 (0x0040 - 0x0000)
struct KoratUDS_WeatherParamControlActor_RateVector2DNative final
{
public:
	struct FVector2D                              InStart;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              InEnd;                                             // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        InRate;                                            // 0x0020(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UCurveFloat*                      InCurveFloat;                                      // 0x0028(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              ReturnValue;                                       // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_RateVector2DNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_RateVector2DNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_RateVector2DNative) == 0x000040, "Wrong size on KoratUDS_WeatherParamControlActor_RateVector2DNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateVector2DNative, InStart) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_RateVector2DNative::InStart' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateVector2DNative, InEnd) == 0x000010, "Member 'KoratUDS_WeatherParamControlActor_RateVector2DNative::InEnd' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateVector2DNative, InRate) == 0x000020, "Member 'KoratUDS_WeatherParamControlActor_RateVector2DNative::InRate' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateVector2DNative, InCurveFloat) == 0x000028, "Member 'KoratUDS_WeatherParamControlActor_RateVector2DNative::InCurveFloat' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateVector2DNative, ReturnValue) == 0x000030, "Member 'KoratUDS_WeatherParamControlActor_RateVector2DNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.RateVolumetricCloudsNative
// 0x05C0 (0x05C0 - 0x0000)
struct KoratUDS_WeatherParamControlActor_RateVolumetricCloudsNative final
{
public:
	struct FUltraDynamicSkyParam_VolumetricClouds InStart;                                           // 0x0000(0x0178)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_VolumetricClouds InEnd;                                             // 0x0178(0x0178)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_VolumetricClouds_Curve InCurve;                                           // 0x02F0(0x0150)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	double                                        InRate;                                            // 0x0440(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUltraDynamicSkyParam_VolumetricClouds ReturnValue;                                       // 0x0448(0x0178)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_RateVolumetricCloudsNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_RateVolumetricCloudsNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_RateVolumetricCloudsNative) == 0x0005C0, "Wrong size on KoratUDS_WeatherParamControlActor_RateVolumetricCloudsNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateVolumetricCloudsNative, InStart) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_RateVolumetricCloudsNative::InStart' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateVolumetricCloudsNative, InEnd) == 0x000178, "Member 'KoratUDS_WeatherParamControlActor_RateVolumetricCloudsNative::InEnd' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateVolumetricCloudsNative, InCurve) == 0x0002F0, "Member 'KoratUDS_WeatherParamControlActor_RateVolumetricCloudsNative::InCurve' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateVolumetricCloudsNative, InRate) == 0x000440, "Member 'KoratUDS_WeatherParamControlActor_RateVolumetricCloudsNative::InRate' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_RateVolumetricCloudsNative, ReturnValue) == 0x000448, "Member 'KoratUDS_WeatherParamControlActor_RateVolumetricCloudsNative::ReturnValue' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.Set2DDynamicCloudsNative
// 0x00C0 (0x00C0 - 0x0000)
struct KoratUDS_WeatherParamControlActor_Set2DDynamicCloudsNative final
{
public:
	struct FUltraDynamicSkyParam_2D_DynamicClouds InParam;                                           // 0x0000(0x00C0)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_Set2DDynamicCloudsNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_Set2DDynamicCloudsNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_Set2DDynamicCloudsNative) == 0x0000C0, "Wrong size on KoratUDS_WeatherParamControlActor_Set2DDynamicCloudsNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_Set2DDynamicCloudsNative, InParam) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_Set2DDynamicCloudsNative::InParam' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.SetBasicControlsNative
// 0x0020 (0x0020 - 0x0000)
struct KoratUDS_WeatherParamControlActor_SetBasicControlsNative final
{
public:
	struct FUltraDynamicSkyParam_BasicControls    InParam;                                           // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_SetBasicControlsNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_SetBasicControlsNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_SetBasicControlsNative) == 0x000020, "Wrong size on KoratUDS_WeatherParamControlActor_SetBasicControlsNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_SetBasicControlsNative, InParam) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_SetBasicControlsNative::InParam' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.SetCloud_WispsNative
// 0x0008 (0x0008 - 0x0000)
struct KoratUDS_WeatherParamControlActor_SetCloud_WispsNative final
{
public:
	struct FUltraDynamicSkyParam_CloudWisps       InParam;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_SetCloud_WispsNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_SetCloud_WispsNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_SetCloud_WispsNative) == 0x000008, "Wrong size on KoratUDS_WeatherParamControlActor_SetCloud_WispsNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_SetCloud_WispsNative, InParam) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_SetCloud_WispsNative::InParam' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.SetCloudVortexNative
// 0x0048 (0x0048 - 0x0000)
struct KoratUDS_WeatherParamControlActor_SetCloudVortexNative final
{
public:
	struct FUltraDynamicSkyParam_CloudVortex      InParam;                                           // 0x0000(0x0048)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_SetCloudVortexNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_SetCloudVortexNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_SetCloudVortexNative) == 0x000048, "Wrong size on KoratUDS_WeatherParamControlActor_SetCloudVortexNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_SetCloudVortexNative, InParam) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_SetCloudVortexNative::InParam' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.SetCustomCloudShadowNative
// 0x0048 (0x0048 - 0x0000)
struct KoratUDS_WeatherParamControlActor_SetCustomCloudShadowNative final
{
public:
	struct FUltraDynamicSkyParam_CustomCloudShadow InParam;                                           // 0x0000(0x0048)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_SetCustomCloudShadowNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_SetCustomCloudShadowNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_SetCustomCloudShadowNative) == 0x000048, "Wrong size on KoratUDS_WeatherParamControlActor_SetCustomCloudShadowNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_SetCustomCloudShadowNative, InParam) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_SetCustomCloudShadowNative::InParam' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.SetCustomVolumetricCloudsParameterNative
// 0x0080 (0x0080 - 0x0000)
struct KoratUDS_WeatherParamControlActor_SetCustomVolumetricCloudsParameterNative final
{
public:
	struct FUltraDynamicSkyParam_CustomVolumetricCloudsParameter InParam;                                           // 0x0000(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_SetCustomVolumetricCloudsParameterNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_SetCustomVolumetricCloudsParameterNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_SetCustomVolumetricCloudsParameterNative) == 0x000080, "Wrong size on KoratUDS_WeatherParamControlActor_SetCustomVolumetricCloudsParameterNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_SetCustomVolumetricCloudsParameterNative, InParam) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_SetCustomVolumetricCloudsParameterNative::InParam' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.SetDustNative
// 0x0018 (0x0018 - 0x0000)
struct KoratUDS_WeatherParamControlActor_SetDustNative final
{
public:
	struct FUltraDynamicSkyParam_Dust             InParam;                                           // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_SetDustNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_SetDustNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_SetDustNative) == 0x000018, "Wrong size on KoratUDS_WeatherParamControlActor_SetDustNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_SetDustNative, InParam) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_SetDustNative::InParam' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.SetFogColorNative
// 0x0070 (0x0070 - 0x0000)
struct KoratUDS_WeatherParamControlActor_SetFogColorNative final
{
public:
	struct FUltraDynamicSkyParam_FogColor         InParam;                                           // 0x0000(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_SetFogColorNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_SetFogColorNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_SetFogColorNative) == 0x000070, "Wrong size on KoratUDS_WeatherParamControlActor_SetFogColorNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_SetFogColorNative, InParam) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_SetFogColorNative::InParam' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.SetFogDensityNative
// 0x0058 (0x0058 - 0x0000)
struct KoratUDS_WeatherParamControlActor_SetFogDensityNative final
{
public:
	struct FUltraDynamicSkyParam_FogDensity       InParam;                                           // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_SetFogDensityNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_SetFogDensityNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_SetFogDensityNative) == 0x000058, "Wrong size on KoratUDS_WeatherParamControlActor_SetFogDensityNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_SetFogDensityNative, InParam) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_SetFogDensityNative::InParam' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.SetLightShaftsNative
// 0x0050 (0x0050 - 0x0000)
struct KoratUDS_WeatherParamControlActor_SetLightShaftsNative final
{
public:
	struct FUltraDynamicSkyParam_LightShafts      InParam;                                           // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_SetLightShaftsNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_SetLightShaftsNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_SetLightShaftsNative) == 0x000050, "Wrong size on KoratUDS_WeatherParamControlActor_SetLightShaftsNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_SetLightShaftsNative, InParam) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_SetLightShaftsNative::InParam' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.SetMap000_CloudNative
// 0x0088 (0x0088 - 0x0000)
struct KoratUDS_WeatherParamControlActor_SetMap000_CloudNative final
{
public:
	struct FUltraDynamicSkyParam_Map000_Cloud     InParam;                                           // 0x0000(0x0088)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_SetMap000_CloudNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_SetMap000_CloudNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_SetMap000_CloudNative) == 0x000088, "Wrong size on KoratUDS_WeatherParamControlActor_SetMap000_CloudNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_SetMap000_CloudNative, InParam) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_SetMap000_CloudNative::InParam' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.SetMap000_SkyNative
// 0x0008 (0x0008 - 0x0000)
struct KoratUDS_WeatherParamControlActor_SetMap000_SkyNative final
{
public:
	struct FUltraDynamicSkyParam_Map000_Sky       InParam;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_SetMap000_SkyNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_SetMap000_SkyNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_SetMap000_SkyNative) == 0x000008, "Wrong size on KoratUDS_WeatherParamControlActor_SetMap000_SkyNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_SetMap000_SkyNative, InParam) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_SetMap000_SkyNative::InParam' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.SetParam_UltraDynamicSkyParamEdit
// 0x0620 (0x0620 - 0x0000)
struct KoratUDS_WeatherParamControlActor_SetParam_UltraDynamicSkyParamEdit final
{
public:
	struct FUltraDynamicSkyParamNative            InParam;                                           // 0x0000(0x0620)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_SetParam_UltraDynamicSkyParamEdit) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_SetParam_UltraDynamicSkyParamEdit");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_SetParam_UltraDynamicSkyParamEdit) == 0x000620, "Wrong size on KoratUDS_WeatherParamControlActor_SetParam_UltraDynamicSkyParamEdit");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_SetParam_UltraDynamicSkyParamEdit, InParam) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_SetParam_UltraDynamicSkyParamEdit::InParam' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.SetParamUDS
// 0x0620 (0x0620 - 0x0000)
struct KoratUDS_WeatherParamControlActor_SetParamUDS final
{
public:
	struct FUltraDynamicSkyParamNative            InParam;                                           // 0x0000(0x0620)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_SetParamUDS) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_SetParamUDS");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_SetParamUDS) == 0x000620, "Wrong size on KoratUDS_WeatherParamControlActor_SetParamUDS");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_SetParamUDS, InParam) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_SetParamUDS::InParam' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.SetSimplifiedColorNative
// 0x00C8 (0x00C8 - 0x0000)
struct KoratUDS_WeatherParamControlActor_SetSimplifiedColorNative final
{
public:
	struct FUltraDynamicSkyParam_SimplifiedColor  InParam;                                           // 0x0000(0x00C8)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_SetSimplifiedColorNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_SetSimplifiedColorNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_SetSimplifiedColorNative) == 0x0000C8, "Wrong size on KoratUDS_WeatherParamControlActor_SetSimplifiedColorNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_SetSimplifiedColorNative, InParam) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_SetSimplifiedColorNative::InParam' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.SetSkyLightNative
// 0x0008 (0x0008 - 0x0000)
struct KoratUDS_WeatherParamControlActor_SetSkyLightNative final
{
public:
	struct FUltraDynamicSkyParam_SkyLight         InParam;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_SetSkyLightNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_SetSkyLightNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_SetSkyLightNative) == 0x000008, "Wrong size on KoratUDS_WeatherParamControlActor_SetSkyLightNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_SetSkyLightNative, InParam) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_SetSkyLightNative::InParam' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.SetSunNative
// 0x0020 (0x0020 - 0x0000)
struct KoratUDS_WeatherParamControlActor_SetSunNative final
{
public:
	struct FUltraDynamicSkyParam_Sun              InParam;                                           // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_SetSunNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_SetSunNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_SetSunNative) == 0x000020, "Wrong size on KoratUDS_WeatherParamControlActor_SetSunNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_SetSunNative, InParam) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_SetSunNative::InParam' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.SetupCurrentParamAndParamByArrayNative
// 0x0008 (0x0008 - 0x0000)
struct KoratUDS_WeatherParamControlActor_SetupCurrentParamAndParamByArrayNative final
{
public:
	int32                                         EndArrayIndex;                                     // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InInterpArrayIndex;                                // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_SetupCurrentParamAndParamByArrayNative) == 0x000004, "Wrong alignment on KoratUDS_WeatherParamControlActor_SetupCurrentParamAndParamByArrayNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_SetupCurrentParamAndParamByArrayNative) == 0x000008, "Wrong size on KoratUDS_WeatherParamControlActor_SetupCurrentParamAndParamByArrayNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_SetupCurrentParamAndParamByArrayNative, EndArrayIndex) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_SetupCurrentParamAndParamByArrayNative::EndArrayIndex' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_SetupCurrentParamAndParamByArrayNative, InInterpArrayIndex) == 0x000004, "Member 'KoratUDS_WeatherParamControlActor_SetupCurrentParamAndParamByArrayNative::InInterpArrayIndex' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.SetupCurrentParamByArrayNative
// 0x0010 (0x0010 - 0x0000)
struct KoratUDS_WeatherParamControlActor_SetupCurrentParamByArrayNative final
{
public:
	int32                                         StartArrayIndex;                                   // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EndArrayIndex;                                     // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InInterpArrayIndex;                                // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InbResetRate;                                      // 0x000C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_SetupCurrentParamByArrayNative) == 0x000004, "Wrong alignment on KoratUDS_WeatherParamControlActor_SetupCurrentParamByArrayNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_SetupCurrentParamByArrayNative) == 0x000010, "Wrong size on KoratUDS_WeatherParamControlActor_SetupCurrentParamByArrayNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_SetupCurrentParamByArrayNative, StartArrayIndex) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_SetupCurrentParamByArrayNative::StartArrayIndex' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_SetupCurrentParamByArrayNative, EndArrayIndex) == 0x000004, "Member 'KoratUDS_WeatherParamControlActor_SetupCurrentParamByArrayNative::EndArrayIndex' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_SetupCurrentParamByArrayNative, InInterpArrayIndex) == 0x000008, "Member 'KoratUDS_WeatherParamControlActor_SetupCurrentParamByArrayNative::InInterpArrayIndex' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_SetupCurrentParamByArrayNative, InbResetRate) == 0x00000C, "Member 'KoratUDS_WeatherParamControlActor_SetupCurrentParamByArrayNative::InbResetRate' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.SetupParamNative
// 0x000C (0x000C - 0x0000)
struct KoratUDS_WeatherParamControlActor_SetupParamNative final
{
public:
	EKoratUltraDynamicSkyNative                   InStart;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EKoratUltraDynamicSkyNative                   InEnd;                                             // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InterpTableIndex;                                  // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInResetRate;                                      // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_SetupParamNative) == 0x000004, "Wrong alignment on KoratUDS_WeatherParamControlActor_SetupParamNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_SetupParamNative) == 0x00000C, "Wrong size on KoratUDS_WeatherParamControlActor_SetupParamNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_SetupParamNative, InStart) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_SetupParamNative::InStart' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_SetupParamNative, InEnd) == 0x000001, "Member 'KoratUDS_WeatherParamControlActor_SetupParamNative::InEnd' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_SetupParamNative, InterpTableIndex) == 0x000004, "Member 'KoratUDS_WeatherParamControlActor_SetupParamNative::InterpTableIndex' has a wrong offset!");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_SetupParamNative, bInResetRate) == 0x000008, "Member 'KoratUDS_WeatherParamControlActor_SetupParamNative::bInResetRate' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.SetVolumetricCloudsNative
// 0x0178 (0x0178 - 0x0000)
struct KoratUDS_WeatherParamControlActor_SetVolumetricCloudsNative final
{
public:
	struct FUltraDynamicSkyParam_VolumetricClouds InParam;                                           // 0x0000(0x0178)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_SetVolumetricCloudsNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_SetVolumetricCloudsNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_SetVolumetricCloudsNative) == 0x000178, "Wrong size on KoratUDS_WeatherParamControlActor_SetVolumetricCloudsNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_SetVolumetricCloudsNative, InParam) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_SetVolumetricCloudsNative::InParam' has a wrong offset!");

// Function KoratUDS_WeatherParamControl.KoratUDS_WeatherParamControlActor.UpdateNative
// 0x0008 (0x0008 - 0x0000)
struct KoratUDS_WeatherParamControlActor_UpdateNative final
{
public:
	double                                        InRate;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoratUDS_WeatherParamControlActor_UpdateNative) == 0x000008, "Wrong alignment on KoratUDS_WeatherParamControlActor_UpdateNative");
static_assert(sizeof(KoratUDS_WeatherParamControlActor_UpdateNative) == 0x000008, "Wrong size on KoratUDS_WeatherParamControlActor_UpdateNative");
static_assert(offsetof(KoratUDS_WeatherParamControlActor_UpdateNative, InRate) == 0x000000, "Member 'KoratUDS_WeatherParamControlActor_UpdateNative::InRate' has a wrong offset!");

}

