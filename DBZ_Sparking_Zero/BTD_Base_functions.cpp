#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTD_Base

#include "Basic.hpp"

#include "BTD_Base_classes.hpp"
#include "BTD_Base_parameters.hpp"


namespace SDK
{

// Function BTD_Base.BTD_Base_C.AddLog
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InOwnerActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           InLog                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           InSuffixLog                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    InSendLog                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTD_Base_C::AddLog(class AActor* InOwnerActor, const class FString& InLog, const class FString& InSuffixLog, bool InSendLog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTD_Base_C", "AddLog");

	Params::BTD_Base_C_AddLog Parms{};

	Parms.InOwnerActor = InOwnerActor;
	Parms.InLog = std::move(InLog);
	Parms.InSuffixLog = std::move(InSuffixLog);
	Parms.InSendLog = InSendLog;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTD_Base.BTD_Base_C.Get Log Prefix Name
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InOwnerActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           OutName                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBTD_Base_C::Get_Log_Prefix_Name(class AActor* InOwnerActor, class FString* OutName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTD_Base_C", "Get Log Prefix Name");

	Params::BTD_Base_C_Get_Log_Prefix_Name Parms{};

	Parms.InOwnerActor = InOwnerActor;

	UObject::ProcessEvent(Func, &Parms);

	if (OutName != nullptr)
		*OutName = std::move(Parms.OutName);
}


// Function BTD_Base.BTD_Base_C.GetConditionNodeName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           InOwnerActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           OutConditionNodeName                                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBTD_Base_C::GetConditionNodeName(class AActor* InOwnerActor, class FString* OutConditionNodeName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTD_Base_C", "GetConditionNodeName");

	Params::BTD_Base_C_GetConditionNodeName Parms{};

	Parms.InOwnerActor = InOwnerActor;

	UObject::ProcessEvent(Func, &Parms);

	if (OutConditionNodeName != nullptr)
		*OutConditionNodeName = std::move(Parms.OutConditionNodeName);
}


// Function BTD_Base.BTD_Base_C.GetRandom
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USSRandom*                        OutRandom                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBTD_Base_C::GetRandom(class USSRandom** OutRandom)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTD_Base_C", "GetRandom");

	Params::BTD_Base_C_GetRandom Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutRandom != nullptr)
		*OutRandom = Parms.OutRandom;
}


// Function BTD_Base.BTD_Base_C.Is Condition Checked
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           InOwnerActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// ESSAiNodeConditionResultType            OutChked                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTD_Base_C::Is_Condition_Checked(class AActor* InOwnerActor, ESSAiNodeConditionResultType* OutChked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTD_Base_C", "Is Condition Checked");

	Params::BTD_Base_C_Is_Condition_Checked Parms{};

	Parms.InOwnerActor = InOwnerActor;

	UObject::ProcessEvent(Func, &Parms);

	if (OutChked != nullptr)
		*OutChked = Parms.OutChked;
}


// Function BTD_Base.BTD_Base_C.PerformConditionCheck
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OwnerActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBTD_Base_C::PerformConditionCheck(class AActor* OwnerActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTD_Base_C", "PerformConditionCheck");

	Params::BTD_Base_C_PerformConditionCheck Parms{};

	Parms.OwnerActor = OwnerActor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BTD_Base.BTD_Base_C.PublicPerformConditionCheck
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InOwnerActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBTD_Base_C::PublicPerformConditionCheck(class AActor* InOwnerActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTD_Base_C", "PublicPerformConditionCheck");

	Params::BTD_Base_C_PublicPerformConditionCheck Parms{};

	Parms.InOwnerActor = InOwnerActor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BTD_Base.BTD_Base_C.SetupWork
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InOwnerActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBTD_Base_C::SetupWork(class AActor* InOwnerActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTD_Base_C", "SetupWork");

	Params::BTD_Base_C_SetupWork Parms{};

	Parms.InOwnerActor = InOwnerActor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BTD_Base.BTD_Base_C.SetupWorkMini
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InOwnerActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBTD_Base_C::SetupWorkMini(class AActor* InOwnerActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTD_Base_C", "SetupWorkMini");

	Params::BTD_Base_C_SetupWorkMini Parms{};

	Parms.InOwnerActor = InOwnerActor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

