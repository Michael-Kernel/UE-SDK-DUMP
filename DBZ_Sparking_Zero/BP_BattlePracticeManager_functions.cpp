#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattlePracticeManager

#include "Basic.hpp"

#include "BP_BattlePracticeManager_classes.hpp"
#include "BP_BattlePracticeManager_parameters.hpp"


namespace SDK
{

// Function BP_BattlePracticeManager.BP_BattlePracticeManager_C.Debug Command
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   InDebugCommand                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_BattlePracticeManager_C::Debug_Command(TArray<class FString>& InDebugCommand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePracticeManager_C", "Debug Command");

	Params::BP_BattlePracticeManager_C_Debug_Command Parms{};

	Parms.InDebugCommand = std::move(InDebugCommand);

	UObject::ProcessEvent(Func, &Parms);

	InDebugCommand = std::move(Parms.InDebugCommand);
}


// Function BP_BattlePracticeManager.BP_BattlePracticeManager_C.DebugPlayModel
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           InCommandOpt                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_BattlePracticeManager_C::DebugPlayModel(const class FString& InCommandOpt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePracticeManager_C", "DebugPlayModel");

	Params::BP_BattlePracticeManager_C_DebugPlayModel Parms{};

	Parms.InCommandOpt = std::move(InCommandOpt);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattlePracticeManager.BP_BattlePracticeManager_C.DebugSetupMenu
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           InCommandOpt                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_BattlePracticeManager_C::DebugSetupMenu(const class FString& InCommandOpt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePracticeManager_C", "DebugSetupMenu");

	Params::BP_BattlePracticeManager_C_DebugSetupMenu Parms{};

	Parms.InCommandOpt = std::move(InCommandOpt);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattlePracticeManager.BP_BattlePracticeManager_C.DebugStartPlayer
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BattlePracticeManager_C::DebugStartPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePracticeManager_C", "DebugStartPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattlePracticeManager.BP_BattlePracticeManager_C.DebugStartReset
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           InCommandOpt                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_BattlePracticeManager_C::DebugStartReset(const class FString& InCommandOpt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePracticeManager_C", "DebugStartReset");

	Params::BP_BattlePracticeManager_C_DebugStartReset Parms{};

	Parms.InCommandOpt = std::move(InCommandOpt);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattlePracticeManager.BP_BattlePracticeManager_C.ExecuteUbergraph_BP_BattlePracticeManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BattlePracticeManager_C::ExecuteUbergraph_BP_BattlePracticeManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePracticeManager_C", "ExecuteUbergraph_BP_BattlePracticeManager");

	Params::BP_BattlePracticeManager_C_ExecuteUbergraph_BP_BattlePracticeManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattlePracticeManager.BP_BattlePracticeManager_C.OnDebugCommand
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class FString>                   InDebugCommand                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_BattlePracticeManager_C::OnDebugCommand(const TArray<class FString>& InDebugCommand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePracticeManager_C", "OnDebugCommand");

	Params::BP_BattlePracticeManager_C_OnDebugCommand Parms{};

	Parms.InDebugCommand = std::move(InDebugCommand);

	UObject::ProcessEvent(Func, &Parms);
}

}

