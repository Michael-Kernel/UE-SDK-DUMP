#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterLocomotionSubIdleMove

#include "Basic.hpp"

#include "ECharacterLocomotionEventType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SS_structs.hpp"
#include "FLocomotionAxisRotationParameter_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_CharacterLocomotionSubIdleMove.BP_CharacterLocomotionSubIdleMove_C.GetFreeCameraLookAtRotation
// 0x0078 (0x0078 - 0x0000)
struct BP_CharacterLocomotionSubIdleMove_C_GetFreeCameraLookAtRotation final
{
public:
	struct FRotator                               Rotation;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASSNotifyActionCameraTargetActor*       CallFunc_GetFreeCameraTargetActor_ReturnValue;     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterLocomotionSubIdleMove_C_GetFreeCameraLookAtRotation) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubIdleMove_C_GetFreeCameraLookAtRotation");
static_assert(sizeof(BP_CharacterLocomotionSubIdleMove_C_GetFreeCameraLookAtRotation) == 0x000078, "Wrong size on BP_CharacterLocomotionSubIdleMove_C_GetFreeCameraLookAtRotation");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_GetFreeCameraLookAtRotation, Rotation) == 0x000000, "Member 'BP_CharacterLocomotionSubIdleMove_C_GetFreeCameraLookAtRotation::Rotation' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_GetFreeCameraLookAtRotation, CallFunc_GetSSCharacter_SSCharacter) == 0x000018, "Member 'BP_CharacterLocomotionSubIdleMove_C_GetFreeCameraLookAtRotation::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_GetFreeCameraLookAtRotation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_CharacterLocomotionSubIdleMove_C_GetFreeCameraLookAtRotation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_GetFreeCameraLookAtRotation, CallFunc_GetFreeCameraTargetActor_ReturnValue) == 0x000038, "Member 'BP_CharacterLocomotionSubIdleMove_C_GetFreeCameraLookAtRotation::CallFunc_GetFreeCameraTargetActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_GetFreeCameraLookAtRotation, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000040, "Member 'BP_CharacterLocomotionSubIdleMove_C_GetFreeCameraLookAtRotation::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_GetFreeCameraLookAtRotation, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_CharacterLocomotionSubIdleMove_C_GetFreeCameraLookAtRotation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_GetFreeCameraLookAtRotation, CallFunc_FindLookAtRotation_ReturnValue) == 0x000060, "Member 'BP_CharacterLocomotionSubIdleMove_C_GetFreeCameraLookAtRotation::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubIdleMove.BP_CharacterLocomotionSubIdleMove_C.IsCantFlyKidanOnCharacter
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterLocomotionSubIdleMove_C_IsCantFlyKidanOnCharacter final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCantFlyKidanOnCharacter_ReturnValue;    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubIdleMove_C_IsCantFlyKidanOnCharacter) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubIdleMove_C_IsCantFlyKidanOnCharacter");
static_assert(sizeof(BP_CharacterLocomotionSubIdleMove_C_IsCantFlyKidanOnCharacter) == 0x000018, "Wrong size on BP_CharacterLocomotionSubIdleMove_C_IsCantFlyKidanOnCharacter");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_IsCantFlyKidanOnCharacter, bEnable) == 0x000000, "Member 'BP_CharacterLocomotionSubIdleMove_C_IsCantFlyKidanOnCharacter::bEnable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_IsCantFlyKidanOnCharacter, CallFunc_GetSSCharacter_SSCharacter) == 0x000008, "Member 'BP_CharacterLocomotionSubIdleMove_C_IsCantFlyKidanOnCharacter::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_IsCantFlyKidanOnCharacter, CallFunc_IsCantFlyKidanOnCharacter_ReturnValue) == 0x000010, "Member 'BP_CharacterLocomotionSubIdleMove_C_IsCantFlyKidanOnCharacter::CallFunc_IsCantFlyKidanOnCharacter_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubIdleMove.BP_CharacterLocomotionSubIdleMove_C.Update
// 0x0330 (0x0330 - 0x0000)
struct BP_CharacterLocomotionSubIdleMove_C_Update final
{
public:
	class UBP_CharacterLocomotionComponent_C*     InLocomotionComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ECharacterLocomotionEventType                 InEventType;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        InDeltaSeconds;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratLocomotionState                         LocomotionSub;                                     // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<struct FKoratActionDataList>             IdleActions;                                       // 0x0020(0x0050)(Edit, BlueprintVisible)
	double                                        NowDistance;                                       // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCantFlyKidanOnCharacter_bEnable;        // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 Temp_byte_Variable;                                // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_2; // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCanFly_ReturnValue;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_3; // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_1;             // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCanFly_ReturnValue_1;                   // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BB[0x5];                                       // 0x00BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_4; // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_5; // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D3[0x5];                                       // 0x00D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_6; // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_7; // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsThereAirWallInverticalMoveDirection_ReturnValue; // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_2;             // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EKoratPlayableAnimType                        CallFunc_GetPlayableAnimType_ReturnValue;          // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTurning_ReturnValue;                    // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_3;             // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAutoLandingNoMotionHeight_ReturnValue; // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMovementFloorDistance_OutFloorDistance; // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMovementFloorDistance_ReturnValue;     // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_8; // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHitFloor_IsHitFloor;                    // 0x012B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x012E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12F[0x1];                                      // 0x012F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_9; // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_10; // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 CallFunc_GetMovementMode_MovementMode;             // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_11; // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnableMovementInput_IsEnable;           // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_Select_Default;                             // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_153[0x5];                                      // 0x0153(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_12; // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_162[0x6];                                      // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_13; // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EKoratJumpState                               CallFunc_GetJumpStatus_JumpStatus;                 // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 CallFunc_GetMovementMode_MovementMode_1;           // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnableMovementInput_IsEnable_1;         // 0x0173(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_14; // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPawn_Pawn;                             // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_4;             // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCanFly_ReturnValue_2;                   // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19A[0x6];                                      // 0x019A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_5;             // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAutoLandingFallScale_ReturnValue;      // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BB[0x5];                                      // 0x01BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_UpdateTimer_OutSeconds;                   // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckStrutJump_ChangeJump;                // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CA[0x6];                                      // 0x01CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_15; // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPawn_Pawn_1;                           // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCantFlyKidanOnCharacter_bEnable_1;      // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F5[0x3];                                      // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<struct FKoratActionDataList>             K2Node_MakeVariable_MakeVariableOutput;            // 0x01F8(0x0050)()
	bool                                          CallFunc_IsCantFlyKidanOnCharacter_bEnable_2;      // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_6;             // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsNoMoveKidanFire_ReturnValue;         // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x025A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x025B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x025D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25E[0x2];                                      // 0x025E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_16; // 0x0260(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EKoratJumpState                               CallFunc_GetJumpStatus_JumpStatus_1;               // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 CallFunc_GetMovementMode_MovementMode_2;           // 0x026A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26B[0x5];                                      // 0x026B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_17; // 0x0270(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetTargetDistance_Length;                 // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_18; // 0x0280(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateRunningAction_OutIsChangeAction;    // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateRotationIdleMove_OutIsTurnEnd;      // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28A[0x6];                                      // 0x028A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_19; // 0x0290(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_20; // 0x0298(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_21; // 0x02A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_22; // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratBranch                                  CallFunc_IsDragonDashStartRequestOnBattleAssist_OutResult; // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x02B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B3[0x5];                                      // 0x02B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_23; // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_24; // 0x02C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckDragonDash_ChangeDragonDash;         // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_25; // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckStunReaction_IsStartStunReaction;    // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x02DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckNumbReaction_IsStartNumbReaction;    // 0x02DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_7;             // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAutoLandingNoMotionHeight_ReturnValue_1; // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMovementFloorDistance_OutFloorDistance_1; // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMovementFloorDistance_ReturnValue_1;   // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_3;          // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x02F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x02F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Update_NewParam;                          // 0x02F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 CallFunc_GetMovementMode_MovementMode_3;           // 0x02F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x02F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2;  // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast;         // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddMovementInput_ScaleValue_ImplicitCast; // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast_1;       // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_1;       // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubIdleMove_C_Update) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubIdleMove_C_Update");
static_assert(sizeof(BP_CharacterLocomotionSubIdleMove_C_Update) == 0x000330, "Wrong size on BP_CharacterLocomotionSubIdleMove_C_Update");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, InLocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::InLocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, InEventType) == 0x000008, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::InEventType' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, InDeltaSeconds) == 0x000010, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, NewParam) == 0x000018, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::NewParam' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, LocomotionSub) == 0x000019, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::LocomotionSub' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, IdleActions) == 0x000020, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::IdleActions' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, NowDistance) == 0x000070, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::NowDistance' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000078, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_IsCantFlyKidanOnCharacter_bEnable) == 0x000080, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_IsCantFlyKidanOnCharacter_bEnable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, Temp_byte_Variable) == 0x000081, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000088, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetSSCharacter_SSCharacter) == 0x000090, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_2) == 0x000098, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_IsCanFly_ReturnValue) == 0x0000A0, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_IsCanFly_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_3) == 0x0000A8, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetSSCharacter_SSCharacter_1) == 0x0000B0, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetSSCharacter_SSCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_IsCanFly_ReturnValue_1) == 0x0000B8, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_IsCanFly_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000B9, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_Not_PreBool_ReturnValue) == 0x0000BA, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_4) == 0x0000C0, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_5) == 0x0000C8, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000D0, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000D1, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_BooleanAND_ReturnValue) == 0x0000D2, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_6) == 0x0000D8, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_6' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000E0, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_BooleanAND_ReturnValue_1) == 0x0000E1, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_7) == 0x0000E8, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_7' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_IsThereAirWallInverticalMoveDirection_ReturnValue) == 0x0000F0, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_IsThereAirWallInverticalMoveDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetSSCharacter_SSCharacter_2) == 0x0000F8, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetSSCharacter_SSCharacter_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetPlayableAnimType_ReturnValue) == 0x000100, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetPlayableAnimType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_IsTurning_ReturnValue) == 0x000101, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_IsTurning_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000102, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_Not_PreBool_ReturnValue_2) == 0x000103, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetSSCharacter_SSCharacter_3) == 0x000108, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetSSCharacter_SSCharacter_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_BooleanAND_ReturnValue_2) == 0x000110, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetAutoLandingNoMotionHeight_ReturnValue) == 0x000114, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetAutoLandingNoMotionHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetMovementFloorDistance_OutFloorDistance) == 0x000118, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetMovementFloorDistance_OutFloorDistance' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetMovementFloorDistance_ReturnValue) == 0x00011C, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetMovementFloorDistance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_8) == 0x000120, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_8' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000128, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_BooleanAND_ReturnValue_3) == 0x000129, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_Not_PreBool_ReturnValue_3) == 0x00012A, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_IsHitFloor_IsHitFloor) == 0x00012B, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_IsHitFloor_IsHitFloor' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x00012C, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, Temp_bool_Variable) == 0x00012D, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_BooleanOR_ReturnValue) == 0x00012E, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_9) == 0x000130, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_9' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_10) == 0x000138, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_10' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetMovementMode_MovementMode) == 0x000140, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetMovementMode_MovementMode' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_11) == 0x000148, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_11' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_BooleanAND_ReturnValue_4) == 0x000150, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_IsEnableMovementInput_IsEnable) == 0x000151, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_IsEnableMovementInput_IsEnable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, K2Node_Select_Default) == 0x000152, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_12) == 0x000158, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_12' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000160, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_BooleanAND_ReturnValue_5) == 0x000161, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_13) == 0x000168, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_13' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetJumpStatus_JumpStatus) == 0x000170, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetJumpStatus_JumpStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetMovementMode_MovementMode_1) == 0x000171, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetMovementMode_MovementMode_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000172, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_IsEnableMovementInput_IsEnable_1) == 0x000173, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_IsEnableMovementInput_IsEnable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_14) == 0x000178, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_14' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_MakeLiteralByte_ReturnValue) == 0x000180, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetPawn_Pawn) == 0x000188, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetPawn_Pawn' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetSSCharacter_SSCharacter_4) == 0x000190, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetSSCharacter_SSCharacter_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000198, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_IsCanFly_ReturnValue_2) == 0x000199, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_IsCanFly_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetSSCharacter_SSCharacter_5) == 0x0001A0, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetSSCharacter_SSCharacter_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetAutoLandingFallScale_ReturnValue) == 0x0001A8, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetAutoLandingFallScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001B0, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x0001B8, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0001B9, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x0001BA, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_UpdateTimer_OutSeconds) == 0x0001C0, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_UpdateTimer_OutSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_CheckStrutJump_ChangeJump) == 0x0001C8, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_CheckStrutJump_ChangeJump' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x0001C9, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_15) == 0x0001D0, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_15' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001D8, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0001E0, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetPawn_Pawn_1) == 0x0001E8, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetPawn_Pawn_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetFloatValue_ReturnValue) == 0x0001F0, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_IsCantFlyKidanOnCharacter_bEnable_1) == 0x0001F4, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_IsCantFlyKidanOnCharacter_bEnable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, K2Node_MakeVariable_MakeVariableOutput) == 0x0001F8, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_IsCantFlyKidanOnCharacter_bEnable_2) == 0x000248, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_IsCantFlyKidanOnCharacter_bEnable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetSSCharacter_SSCharacter_6) == 0x000250, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetSSCharacter_SSCharacter_6' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetIsNoMoveKidanFire_ReturnValue) == 0x000258, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetIsNoMoveKidanFire_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_BooleanOR_ReturnValue_1) == 0x000259, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_Not_PreBool_ReturnValue_4) == 0x00025A, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_BooleanAND_ReturnValue_6) == 0x00025B, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x00025C, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x00025D, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_16) == 0x000260, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_16' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetJumpStatus_JumpStatus_1) == 0x000268, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetJumpStatus_JumpStatus_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x000269, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetMovementMode_MovementMode_2) == 0x00026A, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetMovementMode_MovementMode_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_17) == 0x000270, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_17' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetTargetDistance_Length) == 0x000278, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetTargetDistance_Length' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_18) == 0x000280, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_18' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_UpdateRunningAction_OutIsChangeAction) == 0x000288, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_UpdateRunningAction_OutIsChangeAction' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_UpdateRotationIdleMove_OutIsTurnEnd) == 0x000289, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_UpdateRotationIdleMove_OutIsTurnEnd' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_19) == 0x000290, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_19' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_20) == 0x000298, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_20' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_21) == 0x0002A0, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_21' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_22) == 0x0002A8, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_22' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_Set_Contains_ReturnValue) == 0x0002B0, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_IsDragonDashStartRequestOnBattleAssist_OutResult) == 0x0002B1, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_IsDragonDashStartRequestOnBattleAssist_OutResult' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, K2Node_SwitchEnum_CmpSuccess) == 0x0002B2, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_23) == 0x0002B8, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_23' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_24) == 0x0002C0, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_24' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_CheckDragonDash_ChangeDragonDash) == 0x0002C8, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_CheckDragonDash_ChangeDragonDash' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_25) == 0x0002D0, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_25' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x0002D8, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_CheckStunReaction_IsStartStunReaction) == 0x0002D9, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_CheckStunReaction_IsStartStunReaction' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x0002DA, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_CheckNumbReaction_IsStartNumbReaction) == 0x0002DB, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_CheckNumbReaction_IsStartNumbReaction' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetSSCharacter_SSCharacter_7) == 0x0002E0, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetSSCharacter_SSCharacter_7' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetAutoLandingNoMotionHeight_ReturnValue_1) == 0x0002E8, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetAutoLandingNoMotionHeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetMovementFloorDistance_OutFloorDistance_1) == 0x0002EC, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetMovementFloorDistance_OutFloorDistance_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetMovementFloorDistance_ReturnValue_1) == 0x0002F0, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetMovementFloorDistance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_Less_DoubleDouble_ReturnValue_3) == 0x0002F1, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_Less_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_BooleanAND_ReturnValue_7) == 0x0002F2, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, K2Node_SwitchEnum_CmpSuccess_1) == 0x0002F3, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_Not_PreBool_ReturnValue_5) == 0x0002F4, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_Update_NewParam) == 0x0002F5, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_Update_NewParam' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetMovementMode_MovementMode_3) == 0x0002F6, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetMovementMode_MovementMode_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x0002F7, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2) == 0x0002F8, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_Less_DoubleDouble_B_ImplicitCast) == 0x000300, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_Less_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000308, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000310, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_AddMovementInput_ScaleValue_ImplicitCast) == 0x000318, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_AddMovementInput_ScaleValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x00031C, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_Less_DoubleDouble_B_ImplicitCast_1) == 0x000320, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_Less_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_Update, CallFunc_Less_DoubleDouble_A_ImplicitCast_1) == 0x000328, "Member 'BP_CharacterLocomotionSubIdleMove_C_Update::CallFunc_Less_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function BP_CharacterLocomotionSubIdleMove.BP_CharacterLocomotionSubIdleMove_C.UpdateGiantCharaIdleMove
// 0x0080 (0x0080 - 0x0000)
struct BP_CharacterLocomotionSubIdleMove_C_UpdateGiantCharaIdleMove final
{
public:
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSet<struct FKoratActionDataList>             K2Node_MakeSet_Set;                                // 0x0008(0x0050)(ConstParm)
	struct FKoratActionDataList                   CallFunc_GetCurrentAction_OutAction;               // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_1;             // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetTargetCharacter_ReturnValue;           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubIdleMove_C_UpdateGiantCharaIdleMove) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubIdleMove_C_UpdateGiantCharaIdleMove");
static_assert(sizeof(BP_CharacterLocomotionSubIdleMove_C_UpdateGiantCharaIdleMove) == 0x000080, "Wrong size on BP_CharacterLocomotionSubIdleMove_C_UpdateGiantCharaIdleMove");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateGiantCharaIdleMove, CallFunc_GetSSCharacter_SSCharacter) == 0x000000, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateGiantCharaIdleMove::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateGiantCharaIdleMove, K2Node_MakeSet_Set) == 0x000008, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateGiantCharaIdleMove::K2Node_MakeSet_Set' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateGiantCharaIdleMove, CallFunc_GetCurrentAction_OutAction) == 0x000058, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateGiantCharaIdleMove::CallFunc_GetCurrentAction_OutAction' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateGiantCharaIdleMove, CallFunc_GetSSCharacter_SSCharacter_1) == 0x000060, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateGiantCharaIdleMove::CallFunc_GetSSCharacter_SSCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateGiantCharaIdleMove, CallFunc_Set_Contains_ReturnValue) == 0x000068, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateGiantCharaIdleMove::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateGiantCharaIdleMove, CallFunc_GetTargetCharacter_ReturnValue) == 0x000070, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateGiantCharaIdleMove::CallFunc_GetTargetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateGiantCharaIdleMove, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateGiantCharaIdleMove::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubIdleMove.BP_CharacterLocomotionSubIdleMove_C.UpdateRotationIdleMove
// 0x0370 (0x0370 - 0x0000)
struct BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove final
{
public:
	double                                        InDeltaSeconds;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OutIsTurnEnd;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               TurnRotation;                                      // 0x0010(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsInterpConstant;                                  // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetCharacter_Character;                   // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFarCanFlyOnCharacter_ReturnValue;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_CalculationLookatLotationIdleMove_OutLocation; // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalculationLookatLotationIdleMove_ReturnValue; // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_1;             // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_2;             // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetWalkFlying_ReturnValue;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetWalkFlying_ReturnValue_1;              // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFarLowAltitudeFlightOnCharacter_ReturnValue; // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFarLowAltitudeFlightOnCharacter_ReturnValue_1; // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F[0x1];                                       // 0x007F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_3;             // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_4;             // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCanEverLookTarget_ReturnValue;       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsStoneMoveKidan_ReturnValue;          // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCantFlyKidanOnCharacter_ReturnValue;    // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_2; // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetRotation_Rotation;                     // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInLimitRangeLocomotionRotation_IsInLimitRange; // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_3; // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetRotation_Rotation_1;                   // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ACharacter*                             CallFunc_GetCharacter_Character_1;                 // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_3;                      // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_3;                     // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_3;                       // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_4; // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_4;                      // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_4;                     // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_4;                       // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_CalculationLookatRotationStoneThrow_OutLocation; // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalculationLookatRotationStoneThrow_ReturnValue; // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_5; // 0x0200(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFLocomotionAxisRotationParameter      K2Node_MakeStruct_FLocomotionAxisRotationParameter; // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_5;                      // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_5;                     // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_5;                       // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableMovementInput_IsEnable;           // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_6; // 0x0248(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_7; // 0x0250(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_8; // 0x0258(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_9; // 0x0260(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsRotateAutoIdle_OutIsRotateLanded;    // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_10; // 0x0270(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFLocomotionAxisRotationParameter      K2Node_MakeStruct_FLocomotionAxisRotationParameter_1; // 0x0278(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_11; // 0x0288(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_12; // 0x0290(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_13; // 0x02A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_14; // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsRotateLanded_OutIsRotateLanded;      // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_15; // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsInAir_IsInAir;                       // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x3];                                      // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFLocomotionAxisRotationParameter      K2Node_Select_Default;                             // 0x02C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_16; // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_17; // 0x02E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_18; // 0x02E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_19; // 0x02F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFLocomotionAxisRotationParameter      K2Node_MakeStruct_FLocomotionAxisRotationParameter_2; // 0x02F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Locomotion_Rotation_XYZ_IsSuccessfully; // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetUseCharacterRotationPitch_UsePitch;    // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30A[0x6];                                      // 0x030A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_20; // 0x0310(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_21; // 0x0318(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Vector2DVector2D_ReturnValue;    // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_322[0x6];                                      // 0x0322(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_22; // 0x0328(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetUseCharacterRotationPitch_UsePitch_1;  // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_23; // 0x0338(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_342[0x6];                                      // 0x0342(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_24; // 0x0348(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Update_Turn_OutIsTurnEnd;                 // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Vector2DVector2D_ReturnValue_1;  // 0x0351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0352(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_353[0x5];                                      // 0x0353(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast_1;                     // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_InterpSpeed_2_43220AFF479C2883AB518286A461E86A_ImplicitCast; // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_InterpSpeed_2_43220AFF479C2883AB518286A461E86A_ImplicitCast_1; // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove");
static_assert(sizeof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove) == 0x000370, "Wrong size on BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, InDeltaSeconds) == 0x000000, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, OutIsTurnEnd) == 0x000008, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::OutIsTurnEnd' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, TurnRotation) == 0x000010, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::TurnRotation' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, IsInterpConstant) == 0x000028, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::IsInterpConstant' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetSSCharacter_SSCharacter) == 0x000030, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetCharacter_Character) == 0x000038, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetCharacter_Character' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_IsFarCanFlyOnCharacter_ReturnValue) == 0x000040, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_IsFarCanFlyOnCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_CalculationLookatLotationIdleMove_OutLocation) == 0x000048, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_CalculationLookatLotationIdleMove_OutLocation' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_CalculationLookatLotationIdleMove_ReturnValue) == 0x000060, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_CalculationLookatLotationIdleMove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetSSCharacter_SSCharacter_1) == 0x000068, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetSSCharacter_SSCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetSSCharacter_SSCharacter_2) == 0x000070, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetSSCharacter_SSCharacter_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetWalkFlying_ReturnValue) == 0x000078, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetWalkFlying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetWalkFlying_ReturnValue_1) == 0x000079, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetWalkFlying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_IsFarLowAltitudeFlightOnCharacter_ReturnValue) == 0x00007A, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_IsFarLowAltitudeFlightOnCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_IsFarLowAltitudeFlightOnCharacter_ReturnValue_1) == 0x00007B, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_IsFarLowAltitudeFlightOnCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_BooleanOR_ReturnValue) == 0x00007C, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_BooleanOR_ReturnValue_1) == 0x00007D, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, Temp_bool_Variable) == 0x00007E, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetSSCharacter_SSCharacter_3) == 0x000080, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetSSCharacter_SSCharacter_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetSSCharacter_SSCharacter_4) == 0x000088, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetSSCharacter_SSCharacter_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_CheckCanEverLookTarget_ReturnValue) == 0x000090, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_CheckCanEverLookTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetIsStoneMoveKidan_ReturnValue) == 0x000091, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetIsStoneMoveKidan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_IsCantFlyKidanOnCharacter_ReturnValue) == 0x000092, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_IsCantFlyKidanOnCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_BooleanAND_ReturnValue) == 0x000093, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_BreakRotator_Roll) == 0x000094, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_BreakRotator_Pitch) == 0x000098, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_BreakRotator_Yaw) == 0x00009C, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_MakeRotator_ReturnValue) == 0x0000A0, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x0000B8, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x0000C0, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetLocomotionComponent_LocomotionComponent_2) == 0x0000C8, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetLocomotionComponent_LocomotionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetRotation_Rotation) == 0x0000D0, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetRotation_Rotation' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_IsInLimitRangeLocomotionRotation_IsInLimitRange) == 0x0000E8, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_IsInLimitRangeLocomotionRotation_IsInLimitRange' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_BreakRotator_Roll_1) == 0x0000EC, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_BreakRotator_Pitch_1) == 0x0000F0, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_BreakRotator_Yaw_1) == 0x0000F4, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetLocomotionComponent_LocomotionComponent_3) == 0x0000F8, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetLocomotionComponent_LocomotionComponent_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_BreakRotator_Roll_2) == 0x000100, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_BreakRotator_Pitch_2) == 0x000104, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_BreakRotator_Yaw_2) == 0x000108, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_MakeRotator_ReturnValue_1) == 0x000110, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetRotation_Rotation_1) == 0x000128, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetRotation_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetCharacter_Character_1) == 0x000140, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetCharacter_Character_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_BreakRotator_Roll_3) == 0x000148, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_BreakRotator_Roll_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_BreakRotator_Pitch_3) == 0x00014C, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_BreakRotator_Pitch_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_BreakRotator_Yaw_3) == 0x000150, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_BreakRotator_Yaw_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetLocomotionComponent_LocomotionComponent_4) == 0x000158, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetLocomotionComponent_LocomotionComponent_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_MakeRotator_ReturnValue_2) == 0x000160, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000178, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetForwardVector_ReturnValue) == 0x000190, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_BreakRotator_Roll_4) == 0x0001A8, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_BreakRotator_Roll_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_BreakRotator_Pitch_4) == 0x0001AC, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_BreakRotator_Pitch_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_BreakRotator_Yaw_4) == 0x0001B0, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_BreakRotator_Yaw_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_CalculationLookatRotationStoneThrow_OutLocation) == 0x0001B8, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_CalculationLookatRotationStoneThrow_OutLocation' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_CalculationLookatRotationStoneThrow_ReturnValue) == 0x0001D0, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_CalculationLookatRotationStoneThrow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_Abs_ReturnValue) == 0x0001D8, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0001E0, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x0001E8, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_Abs_ReturnValue_1) == 0x0001F0, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0001F8, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetLocomotionComponent_LocomotionComponent_5) == 0x000200, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetLocomotionComponent_LocomotionComponent_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, K2Node_MakeStruct_FLocomotionAxisRotationParameter) == 0x000208, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::K2Node_MakeStruct_FLocomotionAxisRotationParameter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_BreakRotator_Roll_5) == 0x000218, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_BreakRotator_Roll_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_BreakRotator_Pitch_5) == 0x00021C, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_BreakRotator_Pitch_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_BreakRotator_Yaw_5) == 0x000220, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_BreakRotator_Yaw_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_MakeRotator_ReturnValue_3) == 0x000228, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_IsEnableMovementInput_IsEnable) == 0x000240, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_IsEnableMovementInput_IsEnable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetLocomotionComponent_LocomotionComponent_6) == 0x000248, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetLocomotionComponent_LocomotionComponent_6' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetLocomotionComponent_LocomotionComponent_7) == 0x000250, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetLocomotionComponent_LocomotionComponent_7' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetLocomotionComponent_LocomotionComponent_8) == 0x000258, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetLocomotionComponent_LocomotionComponent_8' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetLocomotionComponent_LocomotionComponent_9) == 0x000260, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetLocomotionComponent_LocomotionComponent_9' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetIsRotateAutoIdle_OutIsRotateLanded) == 0x000268, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetIsRotateAutoIdle_OutIsRotateLanded' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetLocomotionComponent_LocomotionComponent_10) == 0x000270, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetLocomotionComponent_LocomotionComponent_10' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, K2Node_MakeStruct_FLocomotionAxisRotationParameter_1) == 0x000278, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::K2Node_MakeStruct_FLocomotionAxisRotationParameter_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetLocomotionComponent_LocomotionComponent_11) == 0x000288, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetLocomotionComponent_LocomotionComponent_11' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetLocomotionComponent_LocomotionComponent_12) == 0x000290, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetLocomotionComponent_LocomotionComponent_12' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000298, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetLocomotionComponent_LocomotionComponent_13) == 0x0002A0, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetLocomotionComponent_LocomotionComponent_13' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetLocomotionComponent_LocomotionComponent_14) == 0x0002A8, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetLocomotionComponent_LocomotionComponent_14' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetIsRotateLanded_OutIsRotateLanded) == 0x0002B0, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetIsRotateLanded_OutIsRotateLanded' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetLocomotionComponent_LocomotionComponent_15) == 0x0002B8, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetLocomotionComponent_LocomotionComponent_15' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetIsInAir_IsInAir) == 0x0002C0, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetIsInAir_IsInAir' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, K2Node_Select_Default) == 0x0002C4, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetLocomotionComponent_LocomotionComponent_16) == 0x0002D8, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetLocomotionComponent_LocomotionComponent_16' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetLocomotionComponent_LocomotionComponent_17) == 0x0002E0, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetLocomotionComponent_LocomotionComponent_17' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetLocomotionComponent_LocomotionComponent_18) == 0x0002E8, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetLocomotionComponent_LocomotionComponent_18' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetLocomotionComponent_LocomotionComponent_19) == 0x0002F0, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetLocomotionComponent_LocomotionComponent_19' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, K2Node_MakeStruct_FLocomotionAxisRotationParameter_2) == 0x0002F8, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::K2Node_MakeStruct_FLocomotionAxisRotationParameter_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_Set_Locomotion_Rotation_XYZ_IsSuccessfully) == 0x000308, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_Set_Locomotion_Rotation_XYZ_IsSuccessfully' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetUseCharacterRotationPitch_UsePitch) == 0x000309, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetUseCharacterRotationPitch_UsePitch' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetLocomotionComponent_LocomotionComponent_20) == 0x000310, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetLocomotionComponent_LocomotionComponent_20' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetLocomotionComponent_LocomotionComponent_21) == 0x000318, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetLocomotionComponent_LocomotionComponent_21' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000320, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_NotEqual_Vector2DVector2D_ReturnValue) == 0x000321, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_NotEqual_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetLocomotionComponent_LocomotionComponent_22) == 0x000328, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetLocomotionComponent_LocomotionComponent_22' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetUseCharacterRotationPitch_UsePitch_1) == 0x000330, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetUseCharacterRotationPitch_UsePitch_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetLocomotionComponent_LocomotionComponent_23) == 0x000338, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetLocomotionComponent_LocomotionComponent_23' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x000340, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_BooleanAND_ReturnValue_1) == 0x000341, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_GetLocomotionComponent_LocomotionComponent_24) == 0x000348, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_GetLocomotionComponent_LocomotionComponent_24' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_Update_Turn_OutIsTurnEnd) == 0x000350, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_Update_Turn_OutIsTurnEnd' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_NotEqual_Vector2DVector2D_ReturnValue_1) == 0x000351, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_NotEqual_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_BooleanOR_ReturnValue_2) == 0x000352, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_Abs_A_ImplicitCast) == 0x000358, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, CallFunc_Abs_A_ImplicitCast_1) == 0x000360, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::CallFunc_Abs_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, K2Node_MakeStruct_InterpSpeed_2_43220AFF479C2883AB518286A461E86A_ImplicitCast) == 0x000368, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::K2Node_MakeStruct_InterpSpeed_2_43220AFF479C2883AB518286A461E86A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove, K2Node_MakeStruct_InterpSpeed_2_43220AFF479C2883AB518286A461E86A_ImplicitCast_1) == 0x00036C, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateRotationIdleMove::K2Node_MakeStruct_InterpSpeed_2_43220AFF479C2883AB518286A461E86A_ImplicitCast_1' has a wrong offset!");

// Function BP_CharacterLocomotionSubIdleMove.BP_CharacterLocomotionSubIdleMove_C.UpdateTimer
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterLocomotionSubIdleMove_C_UpdateTimer final
{
public:
	double                                        InDeltaSeconds;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OutSeconds;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubIdleMove_C_UpdateTimer) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubIdleMove_C_UpdateTimer");
static_assert(sizeof(BP_CharacterLocomotionSubIdleMove_C_UpdateTimer) == 0x000018, "Wrong size on BP_CharacterLocomotionSubIdleMove_C_UpdateTimer");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateTimer, InDeltaSeconds) == 0x000000, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateTimer::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateTimer, OutSeconds) == 0x000008, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateTimer::OutSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubIdleMove_C_UpdateTimer, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_CharacterLocomotionSubIdleMove_C_UpdateTimer::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

}

