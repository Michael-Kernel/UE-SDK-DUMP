#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ST_SleeveCorrection

#include "Basic.hpp"


namespace SDK
{

// UserDefinedStruct ST_SleeveCorrection.ST_SleeveCorrection
// 0x0070 (0x0070 - 0x0000)
struct FST_SleeveCorrection final
{
public:
	double                                        SleeveBackMax_Y_13_B93648744791BF028C91AA9C6A0423D4; // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SleeveUpMax_X_14_BA2EE7EC4BA357C144234B8980AEC5A9; // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SleeveFrontMax_Y_15_BA454D8747CDAB6125F6278FBF65C299; // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SleeveUpMax_Z_16_5BD540D6462066875CFFF0A80BCD93DB; // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SleeveBackMax_X_17_186F80064BB8C5DE2505D4AE9908A68A; // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SleeveFrontMax_X_22_C0A2CFB046F5122771CB5196BA06C90A; // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SleeveDownMax_X_19_3BE90B9F44B918C49137488310C1E3CD; // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SleeveDownMax_Z_20_93A66DE045FA81B910D35CABFC070BAE; // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SleeveBackMax_Z_24_630D10F6497B885585CF7182101B2579; // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SleeveFrontMax_Z_26_A99597154F4FB31696D158B29B867315; // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        JIGGLE_ROOT_Z_LIMIT_35_EA6C9A1145E0D2978E7C76B53CF02828; // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        JIGGLE_ROOT_BackY_LIMIT_31_A5716EC14C08E1F15836BF8EEDE9762B; // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        JIGGLE_ROOT_FrontY_LIMIT_33_95E0F9EE4AA414D8C2EDCBA00321E479; // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        JIGGLE_ROOT_DownY_LIMIT_38_A83266464240C97907AD4DB628484635; // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FST_SleeveCorrection) == 0x000008, "Wrong alignment on FST_SleeveCorrection");
static_assert(sizeof(FST_SleeveCorrection) == 0x000070, "Wrong size on FST_SleeveCorrection");
static_assert(offsetof(FST_SleeveCorrection, SleeveBackMax_Y_13_B93648744791BF028C91AA9C6A0423D4) == 0x000000, "Member 'FST_SleeveCorrection::SleeveBackMax_Y_13_B93648744791BF028C91AA9C6A0423D4' has a wrong offset!");
static_assert(offsetof(FST_SleeveCorrection, SleeveUpMax_X_14_BA2EE7EC4BA357C144234B8980AEC5A9) == 0x000008, "Member 'FST_SleeveCorrection::SleeveUpMax_X_14_BA2EE7EC4BA357C144234B8980AEC5A9' has a wrong offset!");
static_assert(offsetof(FST_SleeveCorrection, SleeveFrontMax_Y_15_BA454D8747CDAB6125F6278FBF65C299) == 0x000010, "Member 'FST_SleeveCorrection::SleeveFrontMax_Y_15_BA454D8747CDAB6125F6278FBF65C299' has a wrong offset!");
static_assert(offsetof(FST_SleeveCorrection, SleeveUpMax_Z_16_5BD540D6462066875CFFF0A80BCD93DB) == 0x000018, "Member 'FST_SleeveCorrection::SleeveUpMax_Z_16_5BD540D6462066875CFFF0A80BCD93DB' has a wrong offset!");
static_assert(offsetof(FST_SleeveCorrection, SleeveBackMax_X_17_186F80064BB8C5DE2505D4AE9908A68A) == 0x000020, "Member 'FST_SleeveCorrection::SleeveBackMax_X_17_186F80064BB8C5DE2505D4AE9908A68A' has a wrong offset!");
static_assert(offsetof(FST_SleeveCorrection, SleeveFrontMax_X_22_C0A2CFB046F5122771CB5196BA06C90A) == 0x000028, "Member 'FST_SleeveCorrection::SleeveFrontMax_X_22_C0A2CFB046F5122771CB5196BA06C90A' has a wrong offset!");
static_assert(offsetof(FST_SleeveCorrection, SleeveDownMax_X_19_3BE90B9F44B918C49137488310C1E3CD) == 0x000030, "Member 'FST_SleeveCorrection::SleeveDownMax_X_19_3BE90B9F44B918C49137488310C1E3CD' has a wrong offset!");
static_assert(offsetof(FST_SleeveCorrection, SleeveDownMax_Z_20_93A66DE045FA81B910D35CABFC070BAE) == 0x000038, "Member 'FST_SleeveCorrection::SleeveDownMax_Z_20_93A66DE045FA81B910D35CABFC070BAE' has a wrong offset!");
static_assert(offsetof(FST_SleeveCorrection, SleeveBackMax_Z_24_630D10F6497B885585CF7182101B2579) == 0x000040, "Member 'FST_SleeveCorrection::SleeveBackMax_Z_24_630D10F6497B885585CF7182101B2579' has a wrong offset!");
static_assert(offsetof(FST_SleeveCorrection, SleeveFrontMax_Z_26_A99597154F4FB31696D158B29B867315) == 0x000048, "Member 'FST_SleeveCorrection::SleeveFrontMax_Z_26_A99597154F4FB31696D158B29B867315' has a wrong offset!");
static_assert(offsetof(FST_SleeveCorrection, JIGGLE_ROOT_Z_LIMIT_35_EA6C9A1145E0D2978E7C76B53CF02828) == 0x000050, "Member 'FST_SleeveCorrection::JIGGLE_ROOT_Z_LIMIT_35_EA6C9A1145E0D2978E7C76B53CF02828' has a wrong offset!");
static_assert(offsetof(FST_SleeveCorrection, JIGGLE_ROOT_BackY_LIMIT_31_A5716EC14C08E1F15836BF8EEDE9762B) == 0x000058, "Member 'FST_SleeveCorrection::JIGGLE_ROOT_BackY_LIMIT_31_A5716EC14C08E1F15836BF8EEDE9762B' has a wrong offset!");
static_assert(offsetof(FST_SleeveCorrection, JIGGLE_ROOT_FrontY_LIMIT_33_95E0F9EE4AA414D8C2EDCBA00321E479) == 0x000060, "Member 'FST_SleeveCorrection::JIGGLE_ROOT_FrontY_LIMIT_33_95E0F9EE4AA414D8C2EDCBA00321E479' has a wrong offset!");
static_assert(offsetof(FST_SleeveCorrection, JIGGLE_ROOT_DownY_LIMIT_38_A83266464240C97907AD4DB628484635) == 0x000068, "Member 'FST_SleeveCorrection::JIGGLE_ROOT_DownY_LIMIT_38_A83266464240C97907AD4DB628484635' has a wrong offset!");

}

