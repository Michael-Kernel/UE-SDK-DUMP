#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FL_CharacterSwingingObject

#include "Basic.hpp"

#include "SS_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function FL_CharacterSwingingObject.FL_CharacterSwingingObject_C.BFL_GetLocomotionComponent
// 0x0040 (0x0040 - 0x0000)
struct FL_CharacterSwingingObject_C_BFL_GetLocomotionComponent final
{
public:
	class UObject*                                Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        ActorComponent;                                    // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterBase_C>  K2Node_DynamicCast_AsBPI_Character_Base;           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_GetLocomotionComponent_ActorComponent;    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_CharacterSwingingObject_C_BFL_GetLocomotionComponent) == 0x000008, "Wrong alignment on FL_CharacterSwingingObject_C_BFL_GetLocomotionComponent");
static_assert(sizeof(FL_CharacterSwingingObject_C_BFL_GetLocomotionComponent) == 0x000040, "Wrong size on FL_CharacterSwingingObject_C_BFL_GetLocomotionComponent");
static_assert(offsetof(FL_CharacterSwingingObject_C_BFL_GetLocomotionComponent, Target) == 0x000000, "Member 'FL_CharacterSwingingObject_C_BFL_GetLocomotionComponent::Target' has a wrong offset!");
static_assert(offsetof(FL_CharacterSwingingObject_C_BFL_GetLocomotionComponent, __WorldContext) == 0x000008, "Member 'FL_CharacterSwingingObject_C_BFL_GetLocomotionComponent::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_CharacterSwingingObject_C_BFL_GetLocomotionComponent, ActorComponent) == 0x000010, "Member 'FL_CharacterSwingingObject_C_BFL_GetLocomotionComponent::ActorComponent' has a wrong offset!");
static_assert(offsetof(FL_CharacterSwingingObject_C_BFL_GetLocomotionComponent, K2Node_DynamicCast_AsBPI_Character_Base) == 0x000018, "Member 'FL_CharacterSwingingObject_C_BFL_GetLocomotionComponent::K2Node_DynamicCast_AsBPI_Character_Base' has a wrong offset!");
static_assert(offsetof(FL_CharacterSwingingObject_C_BFL_GetLocomotionComponent, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'FL_CharacterSwingingObject_C_BFL_GetLocomotionComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FL_CharacterSwingingObject_C_BFL_GetLocomotionComponent, CallFunc_GetLocomotionComponent_ActorComponent) == 0x000030, "Member 'FL_CharacterSwingingObject_C_BFL_GetLocomotionComponent::CallFunc_GetLocomotionComponent_ActorComponent' has a wrong offset!");
static_assert(offsetof(FL_CharacterSwingingObject_C_BFL_GetLocomotionComponent, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'FL_CharacterSwingingObject_C_BFL_GetLocomotionComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function FL_CharacterSwingingObject.FL_CharacterSwingingObject_C.BFL_GetLocomotionParameterVelocity
// 0x0058 (0x0058 - 0x0000)
struct FL_CharacterSwingingObject_C_BFL_GetLocomotionParameterVelocity final
{
public:
	class UObject*                                Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterBase_C>  K2Node_DynamicCast_AsBPI_Character_Base;           // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_GetLocomotionComponent_ActorComponent;    // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UKoratCharacterLocomotionComponent*     K2Node_DynamicCast_AsKorat_Character_Locomotion_Component; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_CharacterSwingingObject_C_BFL_GetLocomotionParameterVelocity) == 0x000008, "Wrong alignment on FL_CharacterSwingingObject_C_BFL_GetLocomotionParameterVelocity");
static_assert(sizeof(FL_CharacterSwingingObject_C_BFL_GetLocomotionParameterVelocity) == 0x000058, "Wrong size on FL_CharacterSwingingObject_C_BFL_GetLocomotionParameterVelocity");
static_assert(offsetof(FL_CharacterSwingingObject_C_BFL_GetLocomotionParameterVelocity, Target) == 0x000000, "Member 'FL_CharacterSwingingObject_C_BFL_GetLocomotionParameterVelocity::Target' has a wrong offset!");
static_assert(offsetof(FL_CharacterSwingingObject_C_BFL_GetLocomotionParameterVelocity, __WorldContext) == 0x000008, "Member 'FL_CharacterSwingingObject_C_BFL_GetLocomotionParameterVelocity::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_CharacterSwingingObject_C_BFL_GetLocomotionParameterVelocity, Velocity) == 0x000010, "Member 'FL_CharacterSwingingObject_C_BFL_GetLocomotionParameterVelocity::Velocity' has a wrong offset!");
static_assert(offsetof(FL_CharacterSwingingObject_C_BFL_GetLocomotionParameterVelocity, K2Node_DynamicCast_AsBPI_Character_Base) == 0x000028, "Member 'FL_CharacterSwingingObject_C_BFL_GetLocomotionParameterVelocity::K2Node_DynamicCast_AsBPI_Character_Base' has a wrong offset!");
static_assert(offsetof(FL_CharacterSwingingObject_C_BFL_GetLocomotionParameterVelocity, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'FL_CharacterSwingingObject_C_BFL_GetLocomotionParameterVelocity::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FL_CharacterSwingingObject_C_BFL_GetLocomotionParameterVelocity, CallFunc_GetLocomotionComponent_ActorComponent) == 0x000040, "Member 'FL_CharacterSwingingObject_C_BFL_GetLocomotionParameterVelocity::CallFunc_GetLocomotionComponent_ActorComponent' has a wrong offset!");
static_assert(offsetof(FL_CharacterSwingingObject_C_BFL_GetLocomotionParameterVelocity, K2Node_DynamicCast_AsKorat_Character_Locomotion_Component) == 0x000048, "Member 'FL_CharacterSwingingObject_C_BFL_GetLocomotionParameterVelocity::K2Node_DynamicCast_AsKorat_Character_Locomotion_Component' has a wrong offset!");
static_assert(offsetof(FL_CharacterSwingingObject_C_BFL_GetLocomotionParameterVelocity, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'FL_CharacterSwingingObject_C_BFL_GetLocomotionParameterVelocity::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function FL_CharacterSwingingObject.FL_CharacterSwingingObject_C.BFL_SetSOSpeeds
// 0x00E8 (0x00E8 - 0x0000)
struct FL_CharacterSwingingObject_C_BFL_SetSOSpeeds final
{
public:
	struct FVector                                AnimInstanceVelocity;                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratKawaiiPhysicsParameters          KoratKawaiiPhysicsParameters;                      // 0x0018(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKoratSOSpeeds                         KoratSOSpeeds;                                     // 0x0050(0x0020)(Parm, OutParm, NoDestructor)
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue;              // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratSOSpeeds                         K2Node_MakeStruct_KoratSOSpeeds;                   // 0x00B8(0x0020)(NoDestructor)
	float                                         K2Node_MakeStruct_SpeedX_ImplicitCast;             // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_SpeedY_ImplicitCast;             // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_SpeedZ_ImplicitCast;             // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_WindWeightZ_ImplicitCast;        // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_CharacterSwingingObject_C_BFL_SetSOSpeeds) == 0x000008, "Wrong alignment on FL_CharacterSwingingObject_C_BFL_SetSOSpeeds");
static_assert(sizeof(FL_CharacterSwingingObject_C_BFL_SetSOSpeeds) == 0x0000E8, "Wrong size on FL_CharacterSwingingObject_C_BFL_SetSOSpeeds");
static_assert(offsetof(FL_CharacterSwingingObject_C_BFL_SetSOSpeeds, AnimInstanceVelocity) == 0x000000, "Member 'FL_CharacterSwingingObject_C_BFL_SetSOSpeeds::AnimInstanceVelocity' has a wrong offset!");
static_assert(offsetof(FL_CharacterSwingingObject_C_BFL_SetSOSpeeds, KoratKawaiiPhysicsParameters) == 0x000018, "Member 'FL_CharacterSwingingObject_C_BFL_SetSOSpeeds::KoratKawaiiPhysicsParameters' has a wrong offset!");
static_assert(offsetof(FL_CharacterSwingingObject_C_BFL_SetSOSpeeds, __WorldContext) == 0x000048, "Member 'FL_CharacterSwingingObject_C_BFL_SetSOSpeeds::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_CharacterSwingingObject_C_BFL_SetSOSpeeds, KoratSOSpeeds) == 0x000050, "Member 'FL_CharacterSwingingObject_C_BFL_SetSOSpeeds::KoratSOSpeeds' has a wrong offset!");
static_assert(offsetof(FL_CharacterSwingingObject_C_BFL_SetSOSpeeds, CallFunc_ClampVectorSize_ReturnValue) == 0x000070, "Member 'FL_CharacterSwingingObject_C_BFL_SetSOSpeeds::CallFunc_ClampVectorSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_CharacterSwingingObject_C_BFL_SetSOSpeeds, CallFunc_BreakVector_X) == 0x000088, "Member 'FL_CharacterSwingingObject_C_BFL_SetSOSpeeds::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(FL_CharacterSwingingObject_C_BFL_SetSOSpeeds, CallFunc_BreakVector_Y) == 0x000090, "Member 'FL_CharacterSwingingObject_C_BFL_SetSOSpeeds::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(FL_CharacterSwingingObject_C_BFL_SetSOSpeeds, CallFunc_BreakVector_Z) == 0x000098, "Member 'FL_CharacterSwingingObject_C_BFL_SetSOSpeeds::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(FL_CharacterSwingingObject_C_BFL_SetSOSpeeds, CallFunc_BreakVector_X_1) == 0x0000A0, "Member 'FL_CharacterSwingingObject_C_BFL_SetSOSpeeds::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(FL_CharacterSwingingObject_C_BFL_SetSOSpeeds, CallFunc_BreakVector_Y_1) == 0x0000A8, "Member 'FL_CharacterSwingingObject_C_BFL_SetSOSpeeds::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(FL_CharacterSwingingObject_C_BFL_SetSOSpeeds, CallFunc_BreakVector_Z_1) == 0x0000B0, "Member 'FL_CharacterSwingingObject_C_BFL_SetSOSpeeds::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(FL_CharacterSwingingObject_C_BFL_SetSOSpeeds, K2Node_MakeStruct_KoratSOSpeeds) == 0x0000B8, "Member 'FL_CharacterSwingingObject_C_BFL_SetSOSpeeds::K2Node_MakeStruct_KoratSOSpeeds' has a wrong offset!");
static_assert(offsetof(FL_CharacterSwingingObject_C_BFL_SetSOSpeeds, K2Node_MakeStruct_SpeedX_ImplicitCast) == 0x0000D8, "Member 'FL_CharacterSwingingObject_C_BFL_SetSOSpeeds::K2Node_MakeStruct_SpeedX_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FL_CharacterSwingingObject_C_BFL_SetSOSpeeds, K2Node_MakeStruct_SpeedY_ImplicitCast) == 0x0000DC, "Member 'FL_CharacterSwingingObject_C_BFL_SetSOSpeeds::K2Node_MakeStruct_SpeedY_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FL_CharacterSwingingObject_C_BFL_SetSOSpeeds, K2Node_MakeStruct_SpeedZ_ImplicitCast) == 0x0000E0, "Member 'FL_CharacterSwingingObject_C_BFL_SetSOSpeeds::K2Node_MakeStruct_SpeedZ_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FL_CharacterSwingingObject_C_BFL_SetSOSpeeds, K2Node_MakeStruct_WindWeightZ_ImplicitCast) == 0x0000E4, "Member 'FL_CharacterSwingingObject_C_BFL_SetSOSpeeds::K2Node_MakeStruct_WindWeightZ_ImplicitCast' has a wrong offset!");

}

