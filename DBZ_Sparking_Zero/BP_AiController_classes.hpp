#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AiController

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SS_structs.hpp"
#include "SS_classes.hpp"
#include "EBattleKey_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AiController.BP_AiController_C
// 0x00A0 (0x0838 - 0x0798)
class ABP_AiController_C final : public ASSBattleAIController
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0798(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USSAiLearningComponent*                 SSAiLearning;                                      // 0x07A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USSAiPersonalityComponent*              SSAiPersonality;                                   // 0x07A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AiBTDecoratorUtilityComponent_C*    BP_AiBTDecoratorUtilityComponent;                  // 0x07B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AiPerceptionComponent_C*            BP_AiPerceptionComponent;                          // 0x07B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USSAiPadGenerationComponent*            SSAiPadGeneration;                                 // 0x07C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        LocomotionComponent;                               // 0x07C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         DebugCommandList;                                  // 0x07D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FString, bool>                     DebugActiveCommandMap;                             // 0x07E0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bDebugDrawTargetDistance;                          // 0x0830(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BP_AiController_AutoGenFunc(bool InEnable);
	void ConvertOldFlow(EKoratBattleKey NewType, EBattleKey* OldType, bool* bOldFlow);
	void Debug_Command(TArray<class FString>& InDebugCommand);
	void Debug_Draw();
	void DebugChangeLv(const class FString& InCommandOpt);
	void DebugChangeType(const class FString& InCommandOpt);
	void DebugCharacterStatusMax();
	void DebugCharacterStatusMin();
	void DebugDispInfo();
	void DebugDrawPathSetting();
	void DebugDrawTargetDistance();
	void DebugDrawTargetDistanceOnOff(const class FString& InCommandOpt);
	void DebugResetCoolDown();
	void DebugRoutineOrder(const class FString& InCommandOpt);
	void DebugSearchOnOff(const class FString& InCommandOpt);
	void ExecuteInputProcess();
	void ExecuteUbergraph_BP_AiController(int32 EntryPoint);
	void FinalizeBehaviorTree();
	void GetMovementRotation(const struct FVector2D& InMoveVector, struct FRotator* OutMoveRotator);
	void InitializeBehaviorTree();
	void OnAiCommand(const TArray<class FString>& InDebugCommand);
	void ReceiveTick(float DeltaSeconds);
	void Set_Locomotion_Component();
	void UpdateSpecificBehaviorTree();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AiController_C">();
	}
	static class ABP_AiController_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AiController_C>();
	}
};
static_assert(alignof(ABP_AiController_C) == 0x000008, "Wrong alignment on ABP_AiController_C");
static_assert(sizeof(ABP_AiController_C) == 0x000838, "Wrong size on ABP_AiController_C");
static_assert(offsetof(ABP_AiController_C, UberGraphFrame) == 0x000798, "Member 'ABP_AiController_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AiController_C, SSAiLearning) == 0x0007A0, "Member 'ABP_AiController_C::SSAiLearning' has a wrong offset!");
static_assert(offsetof(ABP_AiController_C, SSAiPersonality) == 0x0007A8, "Member 'ABP_AiController_C::SSAiPersonality' has a wrong offset!");
static_assert(offsetof(ABP_AiController_C, BP_AiBTDecoratorUtilityComponent) == 0x0007B0, "Member 'ABP_AiController_C::BP_AiBTDecoratorUtilityComponent' has a wrong offset!");
static_assert(offsetof(ABP_AiController_C, BP_AiPerceptionComponent) == 0x0007B8, "Member 'ABP_AiController_C::BP_AiPerceptionComponent' has a wrong offset!");
static_assert(offsetof(ABP_AiController_C, SSAiPadGeneration) == 0x0007C0, "Member 'ABP_AiController_C::SSAiPadGeneration' has a wrong offset!");
static_assert(offsetof(ABP_AiController_C, LocomotionComponent) == 0x0007C8, "Member 'ABP_AiController_C::LocomotionComponent' has a wrong offset!");
static_assert(offsetof(ABP_AiController_C, DebugCommandList) == 0x0007D0, "Member 'ABP_AiController_C::DebugCommandList' has a wrong offset!");
static_assert(offsetof(ABP_AiController_C, DebugActiveCommandMap) == 0x0007E0, "Member 'ABP_AiController_C::DebugActiveCommandMap' has a wrong offset!");
static_assert(offsetof(ABP_AiController_C, bDebugDrawTargetDistance) == 0x000830, "Member 'ABP_AiController_C::bDebugDrawTargetDistance' has a wrong offset!");

}

