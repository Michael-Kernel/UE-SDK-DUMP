#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterLocomotionSubMoveStandUp

#include "Basic.hpp"

#include "BP_CharacterLocomotionSubMoveStandUp_classes.hpp"
#include "BP_CharacterLocomotionSubMoveStandUp_parameters.hpp"


namespace SDK
{

// Function BP_CharacterLocomotionSubMoveStandUp.BP_CharacterLocomotionSubMoveStandUp_C.CalculateActionDirection
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterLocomotionSubMoveStandUp_C::CalculateActionDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubMoveStandUp_C", "CalculateActionDirection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterLocomotionSubMoveStandUp.BP_CharacterLocomotionSubMoveStandUp_C.CalculateInputDirection
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterLocomotionSubMoveStandUp_C::CalculateInputDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubMoveStandUp_C", "CalculateInputDirection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterLocomotionSubMoveStandUp.BP_CharacterLocomotionSubMoveStandUp_C.CalculateMoveVector
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterLocomotionSubMoveStandUp_C::CalculateMoveVector()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubMoveStandUp_C", "CalculateMoveVector");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterLocomotionSubMoveStandUp.BP_CharacterLocomotionSubMoveStandUp_C.Check
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_CharacterLocomotionComponent_C*InLocomotionComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    CanStart                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubMoveStandUp_C::Check(class UBP_CharacterLocomotionComponent_C* InLocomotionComponent, bool* CanStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubMoveStandUp_C", "Check");

	Params::BP_CharacterLocomotionSubMoveStandUp_C_Check Parms{};

	Parms.InLocomotionComponent = InLocomotionComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (CanStart != nullptr)
		*CanStart = Parms.CanStart;
}


// Function BP_CharacterLocomotionSubMoveStandUp.BP_CharacterLocomotionSubMoveStandUp_C.CheckInput
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsOK                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubMoveStandUp_C::CheckInput(bool* IsOK)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubMoveStandUp_C", "CheckInput");

	Params::BP_CharacterLocomotionSubMoveStandUp_C_CheckInput Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsOK != nullptr)
		*IsOK = Parms.IsOK;
}


// Function BP_CharacterLocomotionSubMoveStandUp.BP_CharacterLocomotionSubMoveStandUp_C.ClearStatus
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterLocomotionSubMoveStandUp_C::ClearStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubMoveStandUp_C", "ClearStatus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterLocomotionSubMoveStandUp.BP_CharacterLocomotionSubMoveStandUp_C.GetBlowInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_CharacterLocomotionSubMoveStandUp_C::GetBlowInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubMoveStandUp_C", "GetBlowInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterLocomotionSubMoveStandUp.BP_CharacterLocomotionSubMoveStandUp_C.GetLocomotionDetailStatus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratCharacterLocomotionDetailStatus   LocomotionDetailStatus                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubMoveStandUp_C::GetLocomotionDetailStatus(EKoratCharacterLocomotionDetailStatus* LocomotionDetailStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubMoveStandUp_C", "GetLocomotionDetailStatus");

	Params::BP_CharacterLocomotionSubMoveStandUp_C_GetLocomotionDetailStatus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LocomotionDetailStatus != nullptr)
		*LocomotionDetailStatus = Parms.LocomotionDetailStatus;
}


// Function BP_CharacterLocomotionSubMoveStandUp.BP_CharacterLocomotionSubMoveStandUp_C.GetMovementParameter
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ECharacterMoveStandUpState              InActionStatus                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ____                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ____B_                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  _____                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Zerobni_n7U                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ___                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubMoveStandUp_C::GetMovementParameter(ECharacterMoveStandUpState InActionStatus, double* ____, double* ____B_, double* _____, double* Zerobni_n7U, double* ___)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubMoveStandUp_C", "GetMovementParameter");

	Params::BP_CharacterLocomotionSubMoveStandUp_C_GetMovementParameter Parms{};

	Parms.InActionStatus = InActionStatus;

	UObject::ProcessEvent(Func, &Parms);

	if (____ != nullptr)
		*____ = Parms.____;

	if (____B_ != nullptr)
		*____B_ = Parms.____B_;

	if (_____ != nullptr)
		*_____ = Parms._____;

	if (Zerobni_n7U != nullptr)
		*Zerobni_n7U = Parms.Zerobni_n7U;

	if (___ != nullptr)
		*___ = Parms.___;
}


// Function BP_CharacterLocomotionSubMoveStandUp.BP_CharacterLocomotionSubMoveStandUp_C.GetParameter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UCurveFloat*                      _______                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FKoratMoveStandUpMovementParameter_______IN                                              (Parm, OutParm, NoDestructor)
// struct FKoratMoveStandUpMovementParameter_______OT                                              (Parm, OutParm, NoDestructor)

void UBP_CharacterLocomotionSubMoveStandUp_C::GetParameter(class UCurveFloat** _______, struct FKoratMoveStandUpMovementParameter* _______IN, struct FKoratMoveStandUpMovementParameter* _______OT)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubMoveStandUp_C", "GetParameter");

	Params::BP_CharacterLocomotionSubMoveStandUp_C_GetParameter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (_______ != nullptr)
		*_______ = Parms._______;

	if (_______IN != nullptr)
		*_______IN = std::move(Parms._______IN);

	if (_______OT != nullptr)
		*_______OT = std::move(Parms._______OT);
}


// Function BP_CharacterLocomotionSubMoveStandUp.BP_CharacterLocomotionSubMoveStandUp_C.GetRunningAction
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratActionDataList             RunningAction                                          (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubMoveStandUp_C::GetRunningAction(struct FKoratActionDataList* RunningAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubMoveStandUp_C", "GetRunningAction");

	Params::BP_CharacterLocomotionSubMoveStandUp_C_GetRunningAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RunningAction != nullptr)
		*RunningAction = std::move(Parms.RunningAction);
}


// Function BP_CharacterLocomotionSubMoveStandUp.BP_CharacterLocomotionSubMoveStandUp_C.GetRunningSection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             RunningSection                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubMoveStandUp_C::GetRunningSection(class FName* RunningSection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubMoveStandUp_C", "GetRunningSection");

	Params::BP_CharacterLocomotionSubMoveStandUp_C_GetRunningSection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RunningSection != nullptr)
		*RunningSection = Parms.RunningSection;
}


// Function BP_CharacterLocomotionSubMoveStandUp.BP_CharacterLocomotionSubMoveStandUp_C.IsEnableAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnable                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubMoveStandUp_C::IsEnableAction(bool* IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubMoveStandUp_C", "IsEnableAction");

	Params::BP_CharacterLocomotionSubMoveStandUp_C_IsEnableAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnable != nullptr)
		*IsEnable = Parms.IsEnable;
}


// Function BP_CharacterLocomotionSubMoveStandUp.BP_CharacterLocomotionSubMoveStandUp_C.SetMoveInputVector
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterLocomotionSubMoveStandUp_C::SetMoveInputVector()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubMoveStandUp_C", "SetMoveInputVector");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterLocomotionSubMoveStandUp.BP_CharacterLocomotionSubMoveStandUp_C.SetMovementParameter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECharacterMoveStandUpState              InActionStatus                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubMoveStandUp_C::SetMovementParameter(ECharacterMoveStandUpState InActionStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubMoveStandUp_C", "SetMovementParameter");

	Params::BP_CharacterLocomotionSubMoveStandUp_C_SetMovementParameter Parms{};

	Parms.InActionStatus = InActionStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterLocomotionSubMoveStandUp.BP_CharacterLocomotionSubMoveStandUp_C.SetStatus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECharacterMoveStandUpState              InActionStatus                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EKoratCharacterActionFinishReason       InActionFinishReason                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubMoveStandUp_C::SetStatus(ECharacterMoveStandUpState InActionStatus, EKoratCharacterActionFinishReason InActionFinishReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubMoveStandUp_C", "SetStatus");

	Params::BP_CharacterLocomotionSubMoveStandUp_C_SetStatus Parms{};

	Parms.InActionStatus = InActionStatus;
	Parms.InActionFinishReason = InActionFinishReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterLocomotionSubMoveStandUp.BP_CharacterLocomotionSubMoveStandUp_C.SetUpAction
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterLocomotionSubMoveStandUp_C::SetUpAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubMoveStandUp_C", "SetUpAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterLocomotionSubMoveStandUp.BP_CharacterLocomotionSubMoveStandUp_C.SetUpMove
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterLocomotionSubMoveStandUp_C::SetUpMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubMoveStandUp_C", "SetUpMove");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterLocomotionSubMoveStandUp.BP_CharacterLocomotionSubMoveStandUp_C.SetUpMovement Parameter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECharacterMoveStandUpState              InActionStatus                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubMoveStandUp_C::SetUpMovement_Parameter(ECharacterMoveStandUpState InActionStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubMoveStandUp_C", "SetUpMovement Parameter");

	Params::BP_CharacterLocomotionSubMoveStandUp_C_SetUpMovement_Parameter Parms{};

	Parms.InActionStatus = InActionStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterLocomotionSubMoveStandUp.BP_CharacterLocomotionSubMoveStandUp_C.SetUpTurn
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_CharacterLocomotionSubMoveStandUp_C::SetUpTurn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubMoveStandUp_C", "SetUpTurn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterLocomotionSubMoveStandUp.BP_CharacterLocomotionSubMoveStandUp_C.Start
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_CharacterLocomotionComponent_C*InLocomotionComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    InInSkip                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubMoveStandUp_C::Start(class UBP_CharacterLocomotionComponent_C* InLocomotionComponent, bool InInSkip, bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubMoveStandUp_C", "Start");

	Params::BP_CharacterLocomotionSubMoveStandUp_C_Start Parms{};

	Parms.InLocomotionComponent = InLocomotionComponent;
	Parms.InInSkip = InInSkip;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BP_CharacterLocomotionSubMoveStandUp.BP_CharacterLocomotionSubMoveStandUp_C.StateIN
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterLocomotionSubMoveStandUp_C::StateIN()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubMoveStandUp_C", "StateIN");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterLocomotionSubMoveStandUp.BP_CharacterLocomotionSubMoveStandUp_C.StateINOnSetAnimTime
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterLocomotionSubMoveStandUp_C::StateINOnSetAnimTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubMoveStandUp_C", "StateINOnSetAnimTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterLocomotionSubMoveStandUp.BP_CharacterLocomotionSubMoveStandUp_C.StateINStop
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterLocomotionSubMoveStandUp_C::StateINStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubMoveStandUp_C", "StateINStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterLocomotionSubMoveStandUp.BP_CharacterLocomotionSubMoveStandUp_C.StateINUpdate
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterLocomotionSubMoveStandUp_C::StateINUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubMoveStandUp_C", "StateINUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterLocomotionSubMoveStandUp.BP_CharacterLocomotionSubMoveStandUp_C.StateOT
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterLocomotionSubMoveStandUp_C::StateOT()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubMoveStandUp_C", "StateOT");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterLocomotionSubMoveStandUp.BP_CharacterLocomotionSubMoveStandUp_C.StateOTOnSetAnimTime
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterLocomotionSubMoveStandUp_C::StateOTOnSetAnimTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubMoveStandUp_C", "StateOTOnSetAnimTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterLocomotionSubMoveStandUp.BP_CharacterLocomotionSubMoveStandUp_C.StateOTStop
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterLocomotionSubMoveStandUp_C::StateOTStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubMoveStandUp_C", "StateOTStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterLocomotionSubMoveStandUp.BP_CharacterLocomotionSubMoveStandUp_C.StateOTUpdate
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterLocomotionSubMoveStandUp_C::StateOTUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubMoveStandUp_C", "StateOTUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterLocomotionSubMoveStandUp.BP_CharacterLocomotionSubMoveStandUp_C.Update
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_CharacterLocomotionComponent_C*InLocomotionComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// ECharacterLocomotionEventType           InEventType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InDeltaSeconds                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubMoveStandUp_C::Update(class UBP_CharacterLocomotionComponent_C* InLocomotionComponent, ECharacterLocomotionEventType InEventType, double InDeltaSeconds, bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubMoveStandUp_C", "Update");

	Params::BP_CharacterLocomotionSubMoveStandUp_C_Update Parms{};

	Parms.InLocomotionComponent = InLocomotionComponent;
	Parms.InEventType = InEventType;
	Parms.InDeltaSeconds = InDeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BP_CharacterLocomotionSubMoveStandUp.BP_CharacterLocomotionSubMoveStandUp_C.UpdateAlways
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InDeltaSeconds                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubMoveStandUp_C::UpdateAlways(double InDeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubMoveStandUp_C", "UpdateAlways");

	Params::BP_CharacterLocomotionSubMoveStandUp_C_UpdateAlways Parms{};

	Parms.InDeltaSeconds = InDeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterLocomotionSubMoveStandUp.BP_CharacterLocomotionSubMoveStandUp_C.UpdateMove
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InDeltaSeconds                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECharacterMoveStandUpState              NextActionStatus                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubMoveStandUp_C::UpdateMove(double InDeltaSeconds, ECharacterMoveStandUpState* NextActionStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubMoveStandUp_C", "UpdateMove");

	Params::BP_CharacterLocomotionSubMoveStandUp_C_UpdateMove Parms{};

	Parms.InDeltaSeconds = InDeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (NextActionStatus != nullptr)
		*NextActionStatus = Parms.NextActionStatus;
}


// Function BP_CharacterLocomotionSubMoveStandUp.BP_CharacterLocomotionSubMoveStandUp_C.UpdateTurn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InDeltaSeconds                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubMoveStandUp_C::UpdateTurn(double InDeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubMoveStandUp_C", "UpdateTurn");

	Params::BP_CharacterLocomotionSubMoveStandUp_C_UpdateTurn Parms{};

	Parms.InDeltaSeconds = InDeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}

}

