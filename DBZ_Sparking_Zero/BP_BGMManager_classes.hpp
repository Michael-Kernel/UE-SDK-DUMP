#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BGMManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SS_structs.hpp"
#include "SS_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BGMManager.BP_BGMManager_C
// 0x0028 (0x0330 - 0x0308)
class ABP_BGMManager_C final : public ASSBGMManager
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FKoratBGMDataList                      SparkingBGMData;                                   // 0x0310(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayBGM_C*                          BattleBGM;                                         // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_PlaySparkingBGM_2P_C*               SparkingBGM2P;                                     // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_PlaySparkingBGM_1P_C*               SparkingBGM1P;                                     // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ChangeBattleBGM(const struct FKoratBGMDataList& InBGMDataList);
	void ExecuteUbergraph_BP_BGMManager(int32 EntryPoint);
	void On_Play_Sparking_BGM(int32 InPlayerNumber);
	void On_Stop_Sparking_BGM();
	void ReceiveBeginPlay();
	void ResetBGMManager();
	void TerminateBattleBGM();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BGMManager_C">();
	}
	static class ABP_BGMManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BGMManager_C>();
	}
};
static_assert(alignof(ABP_BGMManager_C) == 0x000008, "Wrong alignment on ABP_BGMManager_C");
static_assert(sizeof(ABP_BGMManager_C) == 0x000330, "Wrong size on ABP_BGMManager_C");
static_assert(offsetof(ABP_BGMManager_C, UberGraphFrame) == 0x000308, "Member 'ABP_BGMManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BGMManager_C, SparkingBGMData) == 0x000310, "Member 'ABP_BGMManager_C::SparkingBGMData' has a wrong offset!");
static_assert(offsetof(ABP_BGMManager_C, BattleBGM) == 0x000318, "Member 'ABP_BGMManager_C::BattleBGM' has a wrong offset!");
static_assert(offsetof(ABP_BGMManager_C, SparkingBGM2P) == 0x000320, "Member 'ABP_BGMManager_C::SparkingBGM2P' has a wrong offset!");
static_assert(offsetof(ABP_BGMManager_C, SparkingBGM1P) == 0x000328, "Member 'ABP_BGMManager_C::SparkingBGM1P' has a wrong offset!");

}

