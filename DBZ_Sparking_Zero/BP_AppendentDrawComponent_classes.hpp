#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AppendentDrawComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "SS_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AppendentDrawComponent.BP_AppendentDrawComponent_C
// 0x0240 (0x02E0 - 0x00A0)
class UBP_AppendentDrawComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_Character_C*                        BPCharacter;                                       // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaSeconds;                                      // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UKoratCharacterSubActionStateAnimInstance* KoratCharacterSubActionStateAnimInstance;          // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UABP_Sub_Action_C*                      ABPSubAction;                                      // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        ElapsedTimeOfDebugDraw;                            // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         DebugCommandList;                                  // 0x00D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FString, bool>                     DebugCommandMap;                                   // 0x00E0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                PreLocation;                                       // 0x0130(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SetKnockBack;                                      // 0x0148(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ActorLocation;                                     // 0x0150(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FrontVector;                                       // 0x0168(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SideVector;                                        // 0x0180(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                UpVector;                                          // 0x0198(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PitchRotateVector;                                 // 0x01B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                YawRotateVector;                                   // 0x01C8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        BlowLocations;                                     // 0x01E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<double>                                BlowDrawDurations;                                 // 0x01F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector>                        BlowHitLocations;                                  // 0x0200(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<double>                                BlowHitTimes;                                      // 0x0210(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<double>                                BlowHitDrawDurations;                              // 0x0220(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                PreWaistLocation;                                  // 0x0230(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_CharacterTimePlot_C*               CharacterTimePlotWidget;                           // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_DebugPlayVoice_C*                  DebugPlayVoiceWidget;                              // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         StartPlayerControllerID;                           // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      PlayerController;                                  // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FKoratLipsMouthInfo                    LipsMouthInfo;                                     // 0x0268(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class FName                                   WidthSeriesId;                                     // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   HeightSeriesId;                                    // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PositionSeriesId;                                  // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LogVolumeSeriesId;                                 // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   VariableASeriesId;                                 // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   VariableBSeriesId;                                 // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Variable;                                          // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Variable2;                                         // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LogVolume;                                         // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddDrawBlowParam(const struct FVector& InLocation, int32 InDrawType, double InHitTime, double InDrawDuration);
	void ExecuteUbergraph_BP_AppendentDrawComponent(int32 EntryPoint);
	void GetPlayerCharacterNumber(int32* OutPlayerNumber);
	void InitializeDrawActorLocation();
	void InitializeDrawLipsCharts();
	void InitializeDrawPlayMontage();
	void KoratCharacterDebugCommandDraw();
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds_0);
	void SetCommandEnable(const class FString& InDebugCommand, bool InEnable);
	void SetKnockBackDrawParam(const struct FVector& ActorLocation_0, const struct FVector& FrontVector_0, const struct FVector& SideVector_0, const struct FVector& UpVector_0, const struct FVector& PitchRotateVector_0, const struct FVector& YawRotateVector_0);
	void SwitchKoratCharacterDebug(TArray<class FString>& InDebugCommand);
	void UpdateDrawActorLocation();
	void UpdateDrawBlow();
	void UpdateDrawKnockBack();
	void UpdateDrawLipsCharts();
	void UpdateDrawMovement();
	void UpdateDrawPlayMontage();
	void UpdateDrawRunningAction();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AppendentDrawComponent_C">();
	}
	static class UBP_AppendentDrawComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AppendentDrawComponent_C>();
	}
};
static_assert(alignof(UBP_AppendentDrawComponent_C) == 0x000008, "Wrong alignment on UBP_AppendentDrawComponent_C");
static_assert(sizeof(UBP_AppendentDrawComponent_C) == 0x0002E0, "Wrong size on UBP_AppendentDrawComponent_C");
static_assert(offsetof(UBP_AppendentDrawComponent_C, UberGraphFrame) == 0x0000A0, "Member 'UBP_AppendentDrawComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, BPCharacter) == 0x0000A8, "Member 'UBP_AppendentDrawComponent_C::BPCharacter' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, DeltaSeconds) == 0x0000B0, "Member 'UBP_AppendentDrawComponent_C::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, KoratCharacterSubActionStateAnimInstance) == 0x0000B8, "Member 'UBP_AppendentDrawComponent_C::KoratCharacterSubActionStateAnimInstance' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, ABPSubAction) == 0x0000C0, "Member 'UBP_AppendentDrawComponent_C::ABPSubAction' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, ElapsedTimeOfDebugDraw) == 0x0000C8, "Member 'UBP_AppendentDrawComponent_C::ElapsedTimeOfDebugDraw' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, DebugCommandList) == 0x0000D0, "Member 'UBP_AppendentDrawComponent_C::DebugCommandList' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, DebugCommandMap) == 0x0000E0, "Member 'UBP_AppendentDrawComponent_C::DebugCommandMap' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, PreLocation) == 0x000130, "Member 'UBP_AppendentDrawComponent_C::PreLocation' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, SetKnockBack) == 0x000148, "Member 'UBP_AppendentDrawComponent_C::SetKnockBack' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, ActorLocation) == 0x000150, "Member 'UBP_AppendentDrawComponent_C::ActorLocation' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, FrontVector) == 0x000168, "Member 'UBP_AppendentDrawComponent_C::FrontVector' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, SideVector) == 0x000180, "Member 'UBP_AppendentDrawComponent_C::SideVector' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, UpVector) == 0x000198, "Member 'UBP_AppendentDrawComponent_C::UpVector' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, PitchRotateVector) == 0x0001B0, "Member 'UBP_AppendentDrawComponent_C::PitchRotateVector' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, YawRotateVector) == 0x0001C8, "Member 'UBP_AppendentDrawComponent_C::YawRotateVector' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, BlowLocations) == 0x0001E0, "Member 'UBP_AppendentDrawComponent_C::BlowLocations' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, BlowDrawDurations) == 0x0001F0, "Member 'UBP_AppendentDrawComponent_C::BlowDrawDurations' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, BlowHitLocations) == 0x000200, "Member 'UBP_AppendentDrawComponent_C::BlowHitLocations' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, BlowHitTimes) == 0x000210, "Member 'UBP_AppendentDrawComponent_C::BlowHitTimes' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, BlowHitDrawDurations) == 0x000220, "Member 'UBP_AppendentDrawComponent_C::BlowHitDrawDurations' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, PreWaistLocation) == 0x000230, "Member 'UBP_AppendentDrawComponent_C::PreWaistLocation' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, CharacterTimePlotWidget) == 0x000248, "Member 'UBP_AppendentDrawComponent_C::CharacterTimePlotWidget' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, DebugPlayVoiceWidget) == 0x000250, "Member 'UBP_AppendentDrawComponent_C::DebugPlayVoiceWidget' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, StartPlayerControllerID) == 0x000258, "Member 'UBP_AppendentDrawComponent_C::StartPlayerControllerID' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, PlayerController) == 0x000260, "Member 'UBP_AppendentDrawComponent_C::PlayerController' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, LipsMouthInfo) == 0x000268, "Member 'UBP_AppendentDrawComponent_C::LipsMouthInfo' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, WidthSeriesId) == 0x000298, "Member 'UBP_AppendentDrawComponent_C::WidthSeriesId' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, HeightSeriesId) == 0x0002A0, "Member 'UBP_AppendentDrawComponent_C::HeightSeriesId' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, PositionSeriesId) == 0x0002A8, "Member 'UBP_AppendentDrawComponent_C::PositionSeriesId' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, LogVolumeSeriesId) == 0x0002B0, "Member 'UBP_AppendentDrawComponent_C::LogVolumeSeriesId' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, VariableASeriesId) == 0x0002B8, "Member 'UBP_AppendentDrawComponent_C::VariableASeriesId' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, VariableBSeriesId) == 0x0002C0, "Member 'UBP_AppendentDrawComponent_C::VariableBSeriesId' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, Variable) == 0x0002C8, "Member 'UBP_AppendentDrawComponent_C::Variable' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, Variable2) == 0x0002D0, "Member 'UBP_AppendentDrawComponent_C::Variable2' has a wrong offset!");
static_assert(offsetof(UBP_AppendentDrawComponent_C, LogVolume) == 0x0002D8, "Member 'UBP_AppendentDrawComponent_C::LogVolume' has a wrong offset!");

}

