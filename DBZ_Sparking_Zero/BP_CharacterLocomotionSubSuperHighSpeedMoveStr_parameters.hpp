#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterLocomotionSubSuperHighSpeedMoveStr

#include "Basic.hpp"

#include "ECharacterLocomotionEventType_structs.hpp"
#include "ECharacterLocomotionSubTemplateState_structs.hpp"
#include "SS_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.CalculateDragonDashRotation
// 0x0138 (0x0138 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation final
{
public:
	struct FRotator                               DragonDashRotation;                                // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               DashRotation;                                      // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_1;       // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDragonDashRotationPitchRange_PitchMin; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDragonDashRotationPitchRange_PitchMax; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetDragonDashRotation_Rotation;           // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_Vector2DVector2D_ReturnValue;  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_Value_ImplicitCast;                // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation) == 0x000138, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation, DragonDashRotation) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation::DragonDashRotation' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation, DashRotation) == 0x000018, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation::DashRotation' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000030, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation, CallFunc_Conv_VectorToRotator_ReturnValue_1) == 0x000048, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation::CallFunc_Conv_VectorToRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000060, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation, CallFunc_GetDragonDashRotationPitchRange_PitchMin) == 0x000068, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation::CallFunc_GetDragonDashRotationPitchRange_PitchMin' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation, CallFunc_GetDragonDashRotationPitchRange_PitchMax) == 0x000070, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation::CallFunc_GetDragonDashRotationPitchRange_PitchMax' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation, CallFunc_BreakRotator_Roll) == 0x000078, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation, CallFunc_BreakRotator_Pitch) == 0x00007C, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation, CallFunc_BreakRotator_Yaw) == 0x000080, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000088, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation, CallFunc_FClamp_ReturnValue) == 0x000090, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation, CallFunc_GetDragonDashRotation_Rotation) == 0x000098, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation::CallFunc_GetDragonDashRotation_Rotation' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation, CallFunc_MakeRotator_ReturnValue) == 0x0000B0, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation, CallFunc_BreakRotator_Roll_1) == 0x0000C8, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation, CallFunc_BreakRotator_Pitch_1) == 0x0000CC, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation, CallFunc_BreakRotator_Yaw_1) == 0x0000D0, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation, CallFunc_BreakRotator_Roll_2) == 0x0000D4, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation, CallFunc_BreakRotator_Pitch_2) == 0x0000D8, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation, CallFunc_BreakRotator_Yaw_2) == 0x0000DC, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation, CallFunc_BreakVector_X) == 0x0000E0, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation, CallFunc_BreakVector_Y) == 0x0000E8, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation, CallFunc_BreakVector_Z) == 0x0000F0, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation, CallFunc_MakeRotator_ReturnValue_1) == 0x0000F8, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation, CallFunc_MakeVector2D_ReturnValue) == 0x000110, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation, CallFunc_EqualEqual_Vector2DVector2D_ReturnValue) == 0x000120, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation::CallFunc_EqualEqual_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation, CallFunc_FClamp_Value_ImplicitCast) == 0x000128, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation::CallFunc_FClamp_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000130, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CalculateDragonDashRotation::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.Check
// 0x0090 (0x0090 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check final
{
public:
	class UBP_CharacterLocomotionComponent_C*     InLocomotionComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CanStart;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSparkingModeState_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckSPCosumable_IsOK;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEnable_IsEnable;                     // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckInput_IsOK;                          // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetParameter________;                     // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetParameter_________________;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_____;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_______;                      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_________;                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_________________IN__LP____;  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_________________LP__OT____;  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetParameter__________________1;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetParameter________________;             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetParameter___________________;          // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter___________________OT____________; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetParameter__________________2;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetParameter_________________1;           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetParameter____________________1;        // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check) == 0x000090, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check, InLocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check::InLocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check, CanStart) == 0x000008, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check::CanStart' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check, CallFunc_GetSSCharacter_SSCharacter) == 0x000010, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check, CallFunc_IsSparkingModeState_ReturnValue) == 0x000018, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check::CallFunc_IsSparkingModeState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check, CallFunc_CheckSPCosumable_IsOK) == 0x000019, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check::CallFunc_CheckSPCosumable_IsOK' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check, CallFunc_CheckEnable_IsEnable) == 0x00001A, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check::CallFunc_CheckEnable_IsEnable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check, CallFunc_CheckInput_IsOK) == 0x00001B, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check::CallFunc_CheckInput_IsOK' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check, CallFunc_GetParameter________) == 0x00001C, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check::CallFunc_GetParameter________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check, CallFunc_GetParameter_________________) == 0x000020, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check::CallFunc_GetParameter_________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check, CallFunc_GetParameter_____) == 0x000028, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check::CallFunc_GetParameter_____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check, CallFunc_GetParameter_______) == 0x000030, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check::CallFunc_GetParameter_______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check, CallFunc_GetParameter_________) == 0x000038, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check::CallFunc_GetParameter_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check, CallFunc_GetParameter_________________IN__LP____) == 0x000040, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check::CallFunc_GetParameter_________________IN__LP____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check, CallFunc_GetParameter_________________LP__OT____) == 0x000048, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check::CallFunc_GetParameter_________________LP__OT____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check, CallFunc_GetParameter__________________1) == 0x000050, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check::CallFunc_GetParameter__________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check, CallFunc_GetParameter________________) == 0x000058, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check::CallFunc_GetParameter________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check, CallFunc_GetParameter___________________) == 0x000060, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check::CallFunc_GetParameter___________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check, CallFunc_GetParameter___________________OT____________) == 0x000068, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check::CallFunc_GetParameter___________________OT____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check, CallFunc_GetParameter__________________2) == 0x000070, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check::CallFunc_GetParameter__________________2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check, CallFunc_GetParameter_________________1) == 0x000078, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check::CallFunc_GetParameter_________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check, CallFunc_GetParameter____________________1) == 0x000080, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check::CallFunc_GetParameter____________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000088, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Check::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.CheckEnable
// 0x0070 (0x0070 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable final
{
public:
	bool                                          IsEnable;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetParameter________;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetParameter_________________;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_____;                        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_______;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_________;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_________________IN__LP____;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_________________LP__OT____;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetParameter__________________1;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetParameter________________;             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetParameter___________________;          // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter___________________OT____________; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetParameter__________________2;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetParameter_________________1;           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetParameter____________________1;        // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable) == 0x000070, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable, IsEnable) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable::IsEnable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable, CallFunc_GetParameter________) == 0x000001, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable::CallFunc_GetParameter________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable, CallFunc_GetParameter_________________) == 0x000008, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable::CallFunc_GetParameter_________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable, CallFunc_GetParameter_____) == 0x000010, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable::CallFunc_GetParameter_____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable, CallFunc_GetParameter_______) == 0x000018, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable::CallFunc_GetParameter_______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable, CallFunc_GetParameter_________) == 0x000020, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable::CallFunc_GetParameter_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable, CallFunc_GetParameter_________________IN__LP____) == 0x000028, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable::CallFunc_GetParameter_________________IN__LP____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable, CallFunc_GetParameter_________________LP__OT____) == 0x000030, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable::CallFunc_GetParameter_________________LP__OT____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable, CallFunc_GetParameter__________________1) == 0x000038, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable::CallFunc_GetParameter__________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable, CallFunc_GetParameter________________) == 0x000040, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable::CallFunc_GetParameter________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable, CallFunc_GetParameter___________________) == 0x000048, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable::CallFunc_GetParameter___________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable, CallFunc_GetParameter___________________OT____________) == 0x000050, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable::CallFunc_GetParameter___________________OT____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable, CallFunc_GetParameter__________________2) == 0x000058, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable::CallFunc_GetParameter__________________2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable, CallFunc_GetParameter_________________1) == 0x000060, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable::CallFunc_GetParameter_________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable, CallFunc_GetParameter____________________1) == 0x000068, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckEnable::CallFunc_GetParameter____________________1' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.CheckInput
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckInput final
{
public:
	bool                                          IsOK;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckInput) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckInput");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckInput) == 0x000018, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckInput");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckInput, IsOK) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckInput::IsOK' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckInput, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000008, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckInput::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckInput, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckInput::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.CheckRestart
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckRestart final
{
public:
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckInput_IsOK;                          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckRestart) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckRestart");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckRestart) == 0x000018, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckRestart");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckRestart, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckRestart::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckRestart, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000008, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckRestart::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckRestart, CallFunc_CheckInput_IsOK) == 0x000010, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckRestart::CallFunc_CheckInput_IsOK' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.CheckSPCosumable
// 0x0080 (0x0080 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable final
{
public:
	bool                                          IsOK;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetParameter________;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetParameter_________________;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_____;                        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_______;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_________;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_________________IN__LP____;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_________________LP__OT____;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetParameter__________________1;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetParameter________________;             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetParameter___________________;          // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter___________________OT____________; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetParameter__________________2;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetParameter_________________1;           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetParameter____________________1;        // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckSPCosumable_ReturnValue;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CheckSPCosumable_InSpCost_ImplicitCast;   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable) == 0x000080, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable, IsOK) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable::IsOK' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable, CallFunc_GetParameter________) == 0x000001, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable::CallFunc_GetParameter________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable, CallFunc_GetParameter_________________) == 0x000008, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable::CallFunc_GetParameter_________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable, CallFunc_GetParameter_____) == 0x000010, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable::CallFunc_GetParameter_____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable, CallFunc_GetParameter_______) == 0x000018, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable::CallFunc_GetParameter_______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable, CallFunc_GetParameter_________) == 0x000020, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable::CallFunc_GetParameter_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable, CallFunc_GetParameter_________________IN__LP____) == 0x000028, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable::CallFunc_GetParameter_________________IN__LP____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable, CallFunc_GetParameter_________________LP__OT____) == 0x000030, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable::CallFunc_GetParameter_________________LP__OT____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable, CallFunc_GetParameter__________________1) == 0x000038, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable::CallFunc_GetParameter__________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable, CallFunc_GetParameter________________) == 0x000040, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable::CallFunc_GetParameter________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable, CallFunc_GetParameter___________________) == 0x000048, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable::CallFunc_GetParameter___________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable, CallFunc_GetParameter___________________OT____________) == 0x000050, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable::CallFunc_GetParameter___________________OT____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable, CallFunc_GetParameter__________________2) == 0x000058, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable::CallFunc_GetParameter__________________2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable, CallFunc_GetParameter_________________1) == 0x000060, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable::CallFunc_GetParameter_________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable, CallFunc_GetParameter____________________1) == 0x000068, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable::CallFunc_GetParameter____________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable, CallFunc_GetSSCharacter_SSCharacter) == 0x000070, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable, CallFunc_CheckSPCosumable_ReturnValue) == 0x000078, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable::CallFunc_CheckSPCosumable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable, CallFunc_CheckSPCosumable_InSpCost_ImplicitCast) == 0x00007C, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_CheckSPCosumable::CallFunc_CheckSPCosumable_InSpCost_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.ConsumeSPIN
// 0x0080 (0x0080 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN final
{
public:
	bool                                          CallFunc_GetParameter________;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetParameter_________________;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_____;                        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_______;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_________;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_________________IN__LP____;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_________________LP__OT____;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetParameter__________________1;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetParameter________________;             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetParameter___________________;          // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter___________________OT____________; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetParameter__________________2;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetParameter_________________1;           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetParameter____________________1;        // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ConsumeSP_InSpCost_ImplicitCast;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN) == 0x000080, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN, CallFunc_GetParameter________) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN::CallFunc_GetParameter________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN, CallFunc_GetParameter_________________) == 0x000008, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN::CallFunc_GetParameter_________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN, CallFunc_GetParameter_____) == 0x000010, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN::CallFunc_GetParameter_____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN, CallFunc_GetParameter_______) == 0x000018, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN::CallFunc_GetParameter_______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN, CallFunc_GetParameter_________) == 0x000020, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN::CallFunc_GetParameter_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN, CallFunc_GetParameter_________________IN__LP____) == 0x000028, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN::CallFunc_GetParameter_________________IN__LP____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN, CallFunc_GetParameter_________________LP__OT____) == 0x000030, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN::CallFunc_GetParameter_________________LP__OT____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN, CallFunc_GetParameter__________________1) == 0x000038, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN::CallFunc_GetParameter__________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN, CallFunc_GetParameter________________) == 0x000040, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN::CallFunc_GetParameter________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN, CallFunc_GetParameter___________________) == 0x000048, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN::CallFunc_GetParameter___________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN, CallFunc_GetParameter___________________OT____________) == 0x000050, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN::CallFunc_GetParameter___________________OT____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN, CallFunc_GetParameter__________________2) == 0x000058, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN::CallFunc_GetParameter__________________2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN, CallFunc_GetParameter_________________1) == 0x000060, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN::CallFunc_GetParameter_________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN, CallFunc_GetParameter____________________1) == 0x000068, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN::CallFunc_GetParameter____________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN, CallFunc_GetSSCharacter_SSCharacter) == 0x000070, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN, CallFunc_ConsumeSP_InSpCost_ImplicitCast) == 0x000078, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_ConsumeSPIN::CallFunc_ConsumeSP_InSpCost_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.GetLocomotionDetailStatus
// 0x0007 (0x0007 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetLocomotionDetailStatus final
{
public:
	EKoratCharacterLocomotionDetailStatus         LocomotionDetailStatus;                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratHighSpeedMoveState                      Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetLocomotionDetailStatus) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetLocomotionDetailStatus");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetLocomotionDetailStatus) == 0x000007, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetLocomotionDetailStatus");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetLocomotionDetailStatus, LocomotionDetailStatus) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetLocomotionDetailStatus::LocomotionDetailStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetLocomotionDetailStatus, Temp_byte_Variable) == 0x000001, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetLocomotionDetailStatus::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetLocomotionDetailStatus, Temp_byte_Variable_1) == 0x000002, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetLocomotionDetailStatus::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetLocomotionDetailStatus, Temp_byte_Variable_2) == 0x000003, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetLocomotionDetailStatus::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetLocomotionDetailStatus, Temp_byte_Variable_3) == 0x000004, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetLocomotionDetailStatus::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetLocomotionDetailStatus, Temp_byte_Variable_4) == 0x000005, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetLocomotionDetailStatus::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetLocomotionDetailStatus, K2Node_Select_Default) == 0x000006, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetLocomotionDetailStatus::K2Node_Select_Default' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.GetParameter
// 0x00E0 (0x00E0 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter final
{
public:
	bool                                          ______K;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ________________;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ____;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ____B_;                                            // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Z__N____;                                          // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ____B__INK_LPxw__;                                 // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ____B__LPK_OTxw__;                                 // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        __Bn____________;                                  // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               __Bn___________;                                   // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               __Bn_Kn___________;                                // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        B_Bn____________Y_OTw_K_nB______;                  // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        B_Bn____________;                                  // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               B_Bn___________;                                   // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               B_Bn_Kn___________;                                // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetParameterInternal________;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetParameterInternal_________________;    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameterInternal_____;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameterInternal_______;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameterInternal_________;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameterInternal_________________IN__LP____; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameterInternal_________________LP__OT____; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetParameterInternal__________________1;  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetParameterInternal________________;     // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetParameterInternal___________________;  // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameterInternal___________________OT____________; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetParameterInternal__________________2;  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetParameterInternal_________________1;   // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetParameterInternal____________________1; // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter) == 0x0000E0, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter, ______K) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter::______K' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter, ________________) == 0x000008, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter::________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter, ____) == 0x000010, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter::____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter, ____B_) == 0x000018, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter::____B_' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter, Z__N____) == 0x000020, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter::Z__N____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter, ____B__INK_LPxw__) == 0x000028, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter::____B__INK_LPxw__' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter, ____B__LPK_OTxw__) == 0x000030, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter::____B__LPK_OTxw__' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter, __Bn____________) == 0x000038, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter::__Bn____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter, __Bn___________) == 0x000040, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter::__Bn___________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter, __Bn_Kn___________) == 0x000048, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter::__Bn_Kn___________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter, B_Bn____________Y_OTw_K_nB______) == 0x000050, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter::B_Bn____________Y_OTw_K_nB______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter, B_Bn____________) == 0x000058, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter::B_Bn____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter, B_Bn___________) == 0x000060, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter::B_Bn___________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter, B_Bn_Kn___________) == 0x000068, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter::B_Bn_Kn___________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter, CallFunc_GetParameterInternal________) == 0x000070, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter::CallFunc_GetParameterInternal________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter, CallFunc_GetParameterInternal_________________) == 0x000078, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter::CallFunc_GetParameterInternal_________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter, CallFunc_GetParameterInternal_____) == 0x000080, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter::CallFunc_GetParameterInternal_____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter, CallFunc_GetParameterInternal_______) == 0x000088, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter::CallFunc_GetParameterInternal_______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter, CallFunc_GetParameterInternal_________) == 0x000090, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter::CallFunc_GetParameterInternal_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter, CallFunc_GetParameterInternal_________________IN__LP____) == 0x000098, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter::CallFunc_GetParameterInternal_________________IN__LP____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter, CallFunc_GetParameterInternal_________________LP__OT____) == 0x0000A0, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter::CallFunc_GetParameterInternal_________________LP__OT____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter, CallFunc_GetParameterInternal__________________1) == 0x0000A8, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter::CallFunc_GetParameterInternal__________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter, CallFunc_GetParameterInternal________________) == 0x0000B0, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter::CallFunc_GetParameterInternal________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter, CallFunc_GetParameterInternal___________________) == 0x0000B8, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter::CallFunc_GetParameterInternal___________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter, CallFunc_GetParameterInternal___________________OT____________) == 0x0000C0, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter::CallFunc_GetParameterInternal___________________OT____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter, CallFunc_GetParameterInternal__________________2) == 0x0000C8, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter::CallFunc_GetParameterInternal__________________2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter, CallFunc_GetParameterInternal_________________1) == 0x0000D0, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter::CallFunc_GetParameterInternal_________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter, CallFunc_GetParameterInternal____________________1) == 0x0000D8, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameter::CallFunc_GetParameterInternal____________________1' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.GetParameterInternal
// 0x0300 (0x0300 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal final
{
public:
	bool                                          ______K;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ________________;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ____;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ____B_;                                            // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Z__N____;                                          // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ____B__INK_LPxw__;                                 // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ____B__LPK_OTxw__;                                 // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        __Bn____________;                                  // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               __Bn___________;                                   // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               __Bn_Kn___________;                                // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        B_Bn____________Y_OTw_K_nB______;                  // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        B_Bn____________;                                  // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               B_Bn___________;                                   // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               B_Bn_Kn___________;                                // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_1;             // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCanSuperHighSpeedMove_ReturnValue;      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratCharacterDataMovementParameter   CallFunc_GetMovementParameter_OutMovementParameter; // 0x0088(0x0240)(NoDestructor)
	double                                        K2Node_FunctionResult__________________ImplicitCast; // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult______ImplicitCast;           // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult________ImplicitCast;         // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult__________ImplicitCast;       // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_________________IN__LP_____ImplicitCast; // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_________________LP__OT_____ImplicitCast; // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult___________________OT_____________ImplicitCast; // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal) == 0x000300, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal, ______K) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal::______K' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal, ________________) == 0x000008, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal::________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal, ____) == 0x000010, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal::____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal, ____B_) == 0x000018, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal::____B_' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal, Z__N____) == 0x000020, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal::Z__N____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal, ____B__INK_LPxw__) == 0x000028, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal::____B__INK_LPxw__' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal, ____B__LPK_OTxw__) == 0x000030, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal::____B__LPK_OTxw__' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal, __Bn____________) == 0x000038, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal::__Bn____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal, __Bn___________) == 0x000040, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal::__Bn___________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal, __Bn_Kn___________) == 0x000048, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal::__Bn_Kn___________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal, B_Bn____________Y_OTw_K_nB______) == 0x000050, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal::B_Bn____________Y_OTw_K_nB______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal, B_Bn____________) == 0x000058, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal::B_Bn____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal, B_Bn___________) == 0x000060, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal::B_Bn___________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal, B_Bn_Kn___________) == 0x000068, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal::B_Bn_Kn___________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal, CallFunc_GetSSCharacter_SSCharacter) == 0x000070, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal, CallFunc_GetSSCharacter_SSCharacter_1) == 0x000078, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal::CallFunc_GetSSCharacter_SSCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal, CallFunc_IsCanSuperHighSpeedMove_ReturnValue) == 0x000080, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal::CallFunc_IsCanSuperHighSpeedMove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal, CallFunc_GetMovementParameter_OutMovementParameter) == 0x000088, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal::CallFunc_GetMovementParameter_OutMovementParameter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal, K2Node_FunctionResult__________________ImplicitCast) == 0x0002C8, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal::K2Node_FunctionResult__________________ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal, K2Node_FunctionResult______ImplicitCast) == 0x0002D0, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal::K2Node_FunctionResult______ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal, K2Node_FunctionResult________ImplicitCast) == 0x0002D8, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal::K2Node_FunctionResult________ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal, K2Node_FunctionResult__________ImplicitCast) == 0x0002E0, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal::K2Node_FunctionResult__________ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal, K2Node_FunctionResult_________________IN__LP_____ImplicitCast) == 0x0002E8, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal::K2Node_FunctionResult_________________IN__LP_____ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal, K2Node_FunctionResult_________________LP__OT_____ImplicitCast) == 0x0002F0, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal::K2Node_FunctionResult_________________LP__OT_____ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal, K2Node_FunctionResult___________________OT_____________ImplicitCast) == 0x0002F8, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetParameterInternal::K2Node_FunctionResult___________________OT_____________ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.GetRunningAction
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetRunningAction final
{
public:
	struct FKoratActionDataList                   RunningAction;                                     // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetRunningAction) == 0x000004, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetRunningAction");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetRunningAction) == 0x000008, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetRunningAction");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetRunningAction, RunningAction) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetRunningAction::RunningAction' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.GetRunningSection
// 0x0034 (0x0034 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetRunningSection final
{
public:
	class FName                                   RunningSection;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratHighSpeedMoveState                      Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetRunningSection) == 0x000004, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetRunningSection");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetRunningSection) == 0x000034, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetRunningSection");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetRunningSection, RunningSection) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetRunningSection::RunningSection' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetRunningSection, Temp_byte_Variable) == 0x000008, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetRunningSection::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetRunningSection, Temp_name_Variable) == 0x00000C, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetRunningSection::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetRunningSection, Temp_name_Variable_1) == 0x000014, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetRunningSection::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetRunningSection, Temp_name_Variable_2) == 0x00001C, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetRunningSection::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetRunningSection, Temp_name_Variable_3) == 0x000024, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetRunningSection::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetRunningSection, K2Node_Select_Default) == 0x00002C, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetRunningSection::K2Node_Select_Default' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.GetSuperHighSpeedMoveStrForecast
// 0x0098 (0x0098 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetSuperHighSpeedMoveStrForecast final
{
public:
	bool                                          IsDetermined;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        RemainingTime;                                     // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetSuperHighSpeedMoveStrForecast) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetSuperHighSpeedMoveStrForecast");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetSuperHighSpeedMoveStrForecast) == 0x000098, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetSuperHighSpeedMoveStrForecast");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetSuperHighSpeedMoveStrForecast, IsDetermined) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetSuperHighSpeedMoveStrForecast::IsDetermined' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetSuperHighSpeedMoveStrForecast, Location) == 0x000008, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetSuperHighSpeedMoveStrForecast::Location' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetSuperHighSpeedMoveStrForecast, Rotation) == 0x000020, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetSuperHighSpeedMoveStrForecast::Rotation' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetSuperHighSpeedMoveStrForecast, RemainingTime) == 0x000038, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetSuperHighSpeedMoveStrForecast::RemainingTime' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetSuperHighSpeedMoveStrForecast, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetSuperHighSpeedMoveStrForecast::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetSuperHighSpeedMoveStrForecast, CallFunc_BreakTransform_Location) == 0x000048, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetSuperHighSpeedMoveStrForecast::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetSuperHighSpeedMoveStrForecast, CallFunc_BreakTransform_Rotation) == 0x000060, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetSuperHighSpeedMoveStrForecast::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetSuperHighSpeedMoveStrForecast, CallFunc_BreakTransform_Scale) == 0x000078, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetSuperHighSpeedMoveStrForecast::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetSuperHighSpeedMoveStrForecast, CallFunc_FMax_ReturnValue) == 0x000090, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_GetSuperHighSpeedMoveStrForecast::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.IsEnableAction
// 0x0002 (0x0002 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_IsEnableAction final
{
public:
	bool                                          IsEnable;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_IsEnableAction) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_IsEnableAction");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_IsEnableAction) == 0x000002, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_IsEnableAction");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_IsEnableAction, IsEnable) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_IsEnableAction::IsEnable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_IsEnableAction, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_IsEnableAction::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.IsUpdateSpeed
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_IsUpdateSpeed final
{
public:
	bool                                          IsUpdate;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_IsUpdateSpeed) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_IsUpdateSpeed");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_IsUpdateSpeed) == 0x000001, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_IsUpdateSpeed");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_IsUpdateSpeed, IsUpdate) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_IsUpdateSpeed::IsUpdate' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.LocomotionRestart
// 0x0028 (0x0028 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_LocomotionRestart final
{
public:
	bool                                          bExec;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_CanStart;                           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Start_NewParam;                           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_LocomotionRestart) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_LocomotionRestart");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_LocomotionRestart) == 0x000028, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_LocomotionRestart");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_LocomotionRestart, bExec) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_LocomotionRestart::bExec' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_LocomotionRestart, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000008, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_LocomotionRestart::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_LocomotionRestart, CallFunc_Check_CanStart) == 0x000010, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_LocomotionRestart::CallFunc_Check_CanStart' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_LocomotionRestart, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000018, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_LocomotionRestart::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_LocomotionRestart, CallFunc_Start_NewParam) == 0x000020, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_LocomotionRestart::CallFunc_Start_NewParam' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.PlayOmenToAppear
// 0x0078 (0x0078 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear final
{
public:
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetParameter________;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetParameter_________________;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_____;                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_______;                      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_________;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_________________IN__LP____;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_________________LP__OT____;  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetParameter__________________1;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetParameter________________;             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetParameter___________________;          // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter___________________OT____________; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetParameter__________________2;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetParameter_________________1;           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetParameter____________________1;        // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear) == 0x000078, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear, CallFunc_GetSSCharacter_SSCharacter) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear, CallFunc_GetParameter________) == 0x000008, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear::CallFunc_GetParameter________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear, CallFunc_GetParameter_________________) == 0x000010, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear::CallFunc_GetParameter_________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear, CallFunc_GetParameter_____) == 0x000018, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear::CallFunc_GetParameter_____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear, CallFunc_GetParameter_______) == 0x000020, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear::CallFunc_GetParameter_______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear, CallFunc_GetParameter_________) == 0x000028, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear::CallFunc_GetParameter_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear, CallFunc_GetParameter_________________IN__LP____) == 0x000030, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear::CallFunc_GetParameter_________________IN__LP____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear, CallFunc_GetParameter_________________LP__OT____) == 0x000038, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear::CallFunc_GetParameter_________________LP__OT____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear, CallFunc_GetParameter__________________1) == 0x000040, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear::CallFunc_GetParameter__________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear, CallFunc_GetParameter________________) == 0x000048, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear::CallFunc_GetParameter________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear, CallFunc_GetParameter___________________) == 0x000050, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear::CallFunc_GetParameter___________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear, CallFunc_GetParameter___________________OT____________) == 0x000058, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear::CallFunc_GetParameter___________________OT____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear, CallFunc_GetParameter__________________2) == 0x000060, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear::CallFunc_GetParameter__________________2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear, CallFunc_GetParameter_________________1) == 0x000068, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear::CallFunc_GetParameter_________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear, CallFunc_GetParameter____________________1) == 0x000070, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_PlayOmenToAppear::CallFunc_GetParameter____________________1' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.Return to Dragon Dash
// 0x00C8 (0x00C8 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash final
{
public:
	struct FRotator                               DragonDashRotation;                                // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LocomotionRestart_bExec;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetParameter________;                     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetParameter_________________;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_____;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_______;                      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_________;                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_________________IN__LP____;  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_________________LP__OT____;  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetParameter__________________1;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetParameter________________;             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetParameter___________________;          // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter___________________OT____________; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetParameter__________________2;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetParameter_________________1;           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetParameter____________________1;        // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_CalculateDragonDashRotation_DragonDashRotation; // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_1;             // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterInvincibleStatus               CallFunc_GetInvincible_ReturnValue;                // 0x00B8(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash) == 0x0000C8, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash, DragonDashRotation) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash::DragonDashRotation' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash, CallFunc_LocomotionRestart_bExec) == 0x000018, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash::CallFunc_LocomotionRestart_bExec' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash, CallFunc_GetParameter________) == 0x000019, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash::CallFunc_GetParameter________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash, CallFunc_GetParameter_________________) == 0x000020, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash::CallFunc_GetParameter_________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash, CallFunc_GetParameter_____) == 0x000028, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash::CallFunc_GetParameter_____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash, CallFunc_GetParameter_______) == 0x000030, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash::CallFunc_GetParameter_______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash, CallFunc_GetParameter_________) == 0x000038, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash::CallFunc_GetParameter_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash, CallFunc_GetParameter_________________IN__LP____) == 0x000040, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash::CallFunc_GetParameter_________________IN__LP____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash, CallFunc_GetParameter_________________LP__OT____) == 0x000048, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash::CallFunc_GetParameter_________________LP__OT____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash, CallFunc_GetParameter__________________1) == 0x000050, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash::CallFunc_GetParameter__________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash, CallFunc_GetParameter________________) == 0x000058, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash::CallFunc_GetParameter________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash, CallFunc_GetParameter___________________) == 0x000060, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash::CallFunc_GetParameter___________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash, CallFunc_GetParameter___________________OT____________) == 0x000068, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash::CallFunc_GetParameter___________________OT____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash, CallFunc_GetParameter__________________2) == 0x000070, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash::CallFunc_GetParameter__________________2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash, CallFunc_GetParameter_________________1) == 0x000078, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash::CallFunc_GetParameter_________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash, CallFunc_GetParameter____________________1) == 0x000080, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash::CallFunc_GetParameter____________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash, CallFunc_GetSSCharacter_SSCharacter) == 0x000088, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash, CallFunc_CalculateDragonDashRotation_DragonDashRotation) == 0x000090, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash::CallFunc_CalculateDragonDashRotation_DragonDashRotation' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x0000A8, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash, CallFunc_GetSSCharacter_SSCharacter_1) == 0x0000B0, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash::CallFunc_GetSSCharacter_SSCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash, CallFunc_GetInvincible_ReturnValue) == 0x0000B8, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash::CallFunc_GetInvincible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B9, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x0000C0, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Return_to_Dragon_Dash::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.SetMovementParameter
// 0x0020 (0x0020 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetMovementParameter final
{
public:
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement;   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_1; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxAcceleration_ImplicitCast;   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_BrakingDecelerationFlying_ImplicitCast; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetMovementParameter) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetMovementParameter");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetMovementParameter) == 0x000020, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetMovementParameter");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetMovementParameter, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetMovementParameter::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetMovementParameter, CallFunc_GetCharacterMovement_CharacterMovement) == 0x000008, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetMovementParameter::CallFunc_GetCharacterMovement_CharacterMovement' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetMovementParameter, CallFunc_GetCharacterMovement_CharacterMovement_1) == 0x000010, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetMovementParameter::CallFunc_GetCharacterMovement_CharacterMovement_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetMovementParameter, K2Node_VariableSet_MaxAcceleration_ImplicitCast) == 0x000018, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetMovementParameter::K2Node_VariableSet_MaxAcceleration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetMovementParameter, K2Node_VariableSet_BrakingDecelerationFlying_ImplicitCast) == 0x00001C, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetMovementParameter::K2Node_VariableSet_BrakingDecelerationFlying_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.SetStatus
// 0x0028 (0x0028 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetStatus final
{
public:
	EKoratHighSpeedMoveState                      InActionStatus;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterActionFinishReason             InActionFinishReason;                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_2; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateRunningAction_OutIsChangeAction;    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetStatus) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetStatus");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetStatus) == 0x000028, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetStatus");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetStatus, InActionStatus) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetStatus::InActionStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetStatus, InActionFinishReason) == 0x000001, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetStatus::InActionFinishReason' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetStatus, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetStatus::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetStatus, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000008, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetStatus::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetStatus, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000010, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetStatus::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetStatus, CallFunc_GetLocomotionComponent_LocomotionComponent_2) == 0x000018, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetStatus::CallFunc_GetLocomotionComponent_LocomotionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetStatus, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000020, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetStatus::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetStatus, CallFunc_UpdateRunningAction_OutIsChangeAction) == 0x000021, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetStatus::CallFunc_UpdateRunningAction_OutIsChangeAction' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.SetUpAction
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpAction final
{
public:
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpAction) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpAction");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpAction) == 0x000008, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpAction");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpAction, CallFunc_GetSSCharacter_SSCharacter) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpAction::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.SetUpMove
// 0x0450 (0x0450 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove final
{
public:
	class APawn*                                  CallFunc_GetPawn_Pawn;                             // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           K2Node_DynamicCast_AsSSCharacter;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetTargetPawn_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetMoveLookatRotation_LookAtRotation;     // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_BreakVector_X;                            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPawn_Pawn_1;                           // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetParameter________;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetParameter_________________;            // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_____;                        // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_______;                      // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_________;                    // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_________________IN__LP____;  // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_________________LP__OT____;  // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetParameter__________________1;          // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetParameter________________;             // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetParameter___________________;          // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter___________________OT____________; // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetParameter__________________2;          // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetParameter_________________1;           // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetParameter____________________1;        // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPawn_Pawn_2;                           // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0240(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x02D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E8[0x8];                                      // 0x02E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x02F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0350(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMyLocation_ReturnValue;                // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_1;                      // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalculateSHSMMove_OutTargetPosition;      // 0x03A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalculateSHSMMove_OutTargetVector;        // 0x03B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalculateSHSMMove_OutNextVector;          // 0x03D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_2; // 0x03E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue_1;      // 0x03F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0420(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_Vector2DToVector_Z_ImplicitCast;     // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_Vector2DToVector_Z_ImplicitCast_1;   // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateSHSMMove_InLength_ImplicitCast;  // 0x0440(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove) == 0x000010, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove) == 0x000450, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_GetPawn_Pawn) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_GetPawn_Pawn' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, K2Node_DynamicCast_AsSSCharacter) == 0x000008, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::K2Node_DynamicCast_AsSSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_VSize_ReturnValue) == 0x000018, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_GetTargetPawn_ReturnValue) == 0x000040, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_GetTargetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000050, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000068, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_Normal_ReturnValue) == 0x000080, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000098, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x0000A0, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_GetMoveLookatRotation_LookAtRotation) == 0x0000B8, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_GetMoveLookatRotation_LookAtRotation' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_BreakVector_X) == 0x0000D0, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_BreakVector_Y) == 0x0000D8, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_BreakVector_Z) == 0x0000E0, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0000E8, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_MakeVector_ReturnValue) == 0x000100, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_BreakTransform_Location) == 0x000118, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_BreakTransform_Rotation) == 0x000130, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_BreakTransform_Scale) == 0x000148, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_GetPawn_Pawn_1) == 0x000160, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_GetPawn_Pawn_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_GetParameter________) == 0x000168, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_GetParameter________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_GetParameter_________________) == 0x000170, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_GetParameter_________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_GetParameter_____) == 0x000178, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_GetParameter_____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_GetParameter_______) == 0x000180, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_GetParameter_______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_GetParameter_________) == 0x000188, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_GetParameter_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_GetParameter_________________IN__LP____) == 0x000190, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_GetParameter_________________IN__LP____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_GetParameter_________________LP__OT____) == 0x000198, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_GetParameter_________________LP__OT____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_GetParameter__________________1) == 0x0001A0, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_GetParameter__________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_GetParameter________________) == 0x0001A8, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_GetParameter________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_GetParameter___________________) == 0x0001B0, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_GetParameter___________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_GetParameter___________________OT____________) == 0x0001B8, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_GetParameter___________________OT____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_GetParameter__________________2) == 0x0001C0, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_GetParameter__________________2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_GetParameter_________________1) == 0x0001C8, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_GetParameter_________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_GetParameter____________________1) == 0x0001D0, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_GetParameter____________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_GetPawn_Pawn_2) == 0x0001D8, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_GetPawn_Pawn_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_MakeTransform_ReturnValue) == 0x0001E0, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_GetTransform_ReturnValue) == 0x000240, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_BreakTransform_Location_1) == 0x0002A0, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_BreakTransform_Rotation_1) == 0x0002B8, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_BreakTransform_Scale_1) == 0x0002D0, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_MakeTransform_ReturnValue_1) == 0x0002F0, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000350, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_GetMyLocation_ReturnValue) == 0x000358, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_GetMyLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000370, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000378, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000390, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_VSize_ReturnValue_1) == 0x000398, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_CalculateSHSMMove_OutTargetPosition) == 0x0003A0, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_CalculateSHSMMove_OutTargetPosition' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_CalculateSHSMMove_OutTargetVector) == 0x0003B8, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_CalculateSHSMMove_OutTargetVector' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_CalculateSHSMMove_OutNextVector) == 0x0003D0, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_CalculateSHSMMove_OutNextVector' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_GetLocomotionComponent_LocomotionComponent_2) == 0x0003E8, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_GetLocomotionComponent_LocomotionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_Conv_Vector2DToVector_ReturnValue_1) == 0x0003F0, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_Conv_Vector2DToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_BreakVector_X_1) == 0x000408, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_BreakVector_Y_1) == 0x000410, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_BreakVector_Z_1) == 0x000418, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_MakeVector_ReturnValue_1) == 0x000420, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_Conv_Vector2DToVector_Z_ImplicitCast) == 0x000438, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_Conv_Vector2DToVector_Z_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_Conv_Vector2DToVector_Z_ImplicitCast_1) == 0x00043C, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_Conv_Vector2DToVector_Z_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove, CallFunc_CalculateSHSMMove_InLength_ImplicitCast) == 0x000440, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMove::CallFunc_CalculateSHSMMove_InLength_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.SetUpMovement Parameter
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMovement_Parameter final
{
public:
	ECharacterLocomotionSubTemplateState          InShortDashStatus;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMovement_Parameter) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMovement_Parameter");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMovement_Parameter) == 0x000001, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMovement_Parameter");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMovement_Parameter, InShortDashStatus) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_SetUpMovement_Parameter::InShortDashStatus' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.Start
// 0x0020 (0x0020 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Start final
{
public:
	class UBP_CharacterLocomotionComponent_C*     InLocomotionComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          InInSkip;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Start) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Start");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Start) == 0x000020, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Start");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Start, InLocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Start::InLocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Start, InInSkip) == 0x000008, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Start::InInSkip' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Start, NewParam) == 0x000009, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Start::NewParam' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Start, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000010, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Start::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Start, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000018, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Start::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.StateIN
// 0x0002 (0x0002 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateIN final
{
public:
	ECharacterLocomotionEventType                 CallFunc_GetUpdateEventType_EventType;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateIN) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateIN");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateIN) == 0x000002, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateIN");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateIN, CallFunc_GetUpdateEventType_EventType) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateIN::CallFunc_GetUpdateEventType_EventType' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateIN, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateIN::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.StateINUpdate
// 0x0098 (0x0098 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate final
{
public:
	bool                                          CallFunc_GetParameter________;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetParameter_________________;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_____;                        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_______;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_________;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_________________IN__LP____;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_________________LP__OT____;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetParameter__________________1;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetParameter________________;             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetParameter___________________;          // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter___________________OT____________; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetParameter__________________2;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetParameter_________________1;           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetParameter____________________1;        // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetUpdateDeltaSeconds_DeltaSeconds;       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratHighSpeedMoveState                      CallFunc_UpdateMove_NextActionStatus;              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateMove_IsChangeAction;                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate) == 0x000098, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate, CallFunc_GetParameter________) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate::CallFunc_GetParameter________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate, CallFunc_GetParameter_________________) == 0x000008, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate::CallFunc_GetParameter_________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate, CallFunc_GetParameter_____) == 0x000010, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate::CallFunc_GetParameter_____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate, CallFunc_GetParameter_______) == 0x000018, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate::CallFunc_GetParameter_______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate, CallFunc_GetParameter_________) == 0x000020, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate::CallFunc_GetParameter_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate, CallFunc_GetParameter_________________IN__LP____) == 0x000028, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate::CallFunc_GetParameter_________________IN__LP____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate, CallFunc_GetParameter_________________LP__OT____) == 0x000030, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate::CallFunc_GetParameter_________________LP__OT____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate, CallFunc_GetParameter__________________1) == 0x000038, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate::CallFunc_GetParameter__________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate, CallFunc_GetParameter________________) == 0x000040, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate::CallFunc_GetParameter________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate, CallFunc_GetParameter___________________) == 0x000048, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate::CallFunc_GetParameter___________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate, CallFunc_GetParameter___________________OT____________) == 0x000050, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate::CallFunc_GetParameter___________________OT____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate, CallFunc_GetParameter__________________2) == 0x000058, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate::CallFunc_GetParameter__________________2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate, CallFunc_GetParameter_________________1) == 0x000060, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate::CallFunc_GetParameter_________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate, CallFunc_GetParameter____________________1) == 0x000068, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate::CallFunc_GetParameter____________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate, CallFunc_GetSSCharacter_SSCharacter) == 0x000070, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000078, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000080, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate, CallFunc_GetUpdateDeltaSeconds_DeltaSeconds) == 0x000088, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate::CallFunc_GetUpdateDeltaSeconds_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate, CallFunc_UpdateMove_NextActionStatus) == 0x000090, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate::CallFunc_UpdateMove_NextActionStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate, CallFunc_UpdateMove_IsChangeAction) == 0x000091, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateINUpdate::CallFunc_UpdateMove_IsChangeAction' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.StateLP
// 0x0002 (0x0002 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLP final
{
public:
	ECharacterLocomotionEventType                 CallFunc_GetUpdateEventType_EventType;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLP) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLP");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLP) == 0x000002, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLP");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLP, CallFunc_GetUpdateEventType_EventType) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLP::CallFunc_GetUpdateEventType_EventType' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLP, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.StateLPUpdate
// 0x00B8 (0x00B8 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate final
{
public:
	struct FRotator                               CallFunc_CalculateDragonDashRotation_DragonDashRotation; // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetParameter________;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetParameter_________________;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_____;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_______;                      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_________;                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_________________IN__LP____;  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_________________LP__OT____;  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetParameter__________________1;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetParameter________________;             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetParameter___________________;          // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter___________________OT____________; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetParameter__________________2;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetParameter_________________1;           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetParameter____________________1;        // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Rotation_IsSuccessfully;              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetUpdateDeltaSeconds_DeltaSeconds;       // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratHighSpeedMoveState                      CallFunc_UpdateMove_NextActionStatus;              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateMove_IsChangeAction;                // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate) == 0x0000B8, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate, CallFunc_CalculateDragonDashRotation_DragonDashRotation) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate::CallFunc_CalculateDragonDashRotation_DragonDashRotation' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate, CallFunc_GetParameter________) == 0x000018, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate::CallFunc_GetParameter________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate, CallFunc_GetParameter_________________) == 0x000020, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate::CallFunc_GetParameter_________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate, CallFunc_GetParameter_____) == 0x000028, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate::CallFunc_GetParameter_____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate, CallFunc_GetParameter_______) == 0x000030, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate::CallFunc_GetParameter_______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate, CallFunc_GetParameter_________) == 0x000038, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate::CallFunc_GetParameter_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate, CallFunc_GetParameter_________________IN__LP____) == 0x000040, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate::CallFunc_GetParameter_________________IN__LP____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate, CallFunc_GetParameter_________________LP__OT____) == 0x000048, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate::CallFunc_GetParameter_________________LP__OT____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate, CallFunc_GetParameter__________________1) == 0x000050, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate::CallFunc_GetParameter__________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate, CallFunc_GetParameter________________) == 0x000058, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate::CallFunc_GetParameter________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate, CallFunc_GetParameter___________________) == 0x000060, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate::CallFunc_GetParameter___________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate, CallFunc_GetParameter___________________OT____________) == 0x000068, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate::CallFunc_GetParameter___________________OT____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate, CallFunc_GetParameter__________________2) == 0x000070, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate::CallFunc_GetParameter__________________2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate, CallFunc_GetParameter_________________1) == 0x000078, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate::CallFunc_GetParameter_________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate, CallFunc_GetParameter____________________1) == 0x000080, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate::CallFunc_GetParameter____________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate, CallFunc_Set_Rotation_IsSuccessfully) == 0x000088, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate::CallFunc_Set_Rotation_IsSuccessfully' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000090, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate, CallFunc_GetSSCharacter_SSCharacter) == 0x000098, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate, CallFunc_GetUpdateDeltaSeconds_DeltaSeconds) == 0x0000A8, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate::CallFunc_GetUpdateDeltaSeconds_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate, CallFunc_UpdateMove_NextActionStatus) == 0x0000B0, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate::CallFunc_UpdateMove_NextActionStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate, CallFunc_UpdateMove_IsChangeAction) == 0x0000B1, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateLPUpdate::CallFunc_UpdateMove_IsChangeAction' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.StateOT
// 0x0002 (0x0002 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOT final
{
public:
	ECharacterLocomotionEventType                 CallFunc_GetUpdateEventType_EventType;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOT) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOT");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOT) == 0x000002, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOT");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOT, CallFunc_GetUpdateEventType_EventType) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOT::CallFunc_GetUpdateEventType_EventType' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOT, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOT::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.StateOTOnSetAnimTime
// 0x0028 (0x0028 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOTOnSetAnimTime final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_2; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOTOnSetAnimTime) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOTOnSetAnimTime");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOTOnSetAnimTime) == 0x000028, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOTOnSetAnimTime");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOTOnSetAnimTime, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOTOnSetAnimTime::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOTOnSetAnimTime, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000008, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOTOnSetAnimTime::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOTOnSetAnimTime, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000010, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOTOnSetAnimTime::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOTOnSetAnimTime, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000011, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOTOnSetAnimTime::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOTOnSetAnimTime, CallFunc_GetLocomotionComponent_LocomotionComponent_2) == 0x000018, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOTOnSetAnimTime::CallFunc_GetLocomotionComponent_LocomotionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOTOnSetAnimTime, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOTOnSetAnimTime::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOTOnSetAnimTime, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOTOnSetAnimTime::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.StateOTUpdate
// 0x0010 (0x0010 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOTUpdate final
{
public:
	double                                        CallFunc_GetUpdateDeltaSeconds_DeltaSeconds;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratHighSpeedMoveState                      CallFunc_UpdateMove_NextActionStatus;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateMove_IsChangeAction;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOTUpdate) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOTUpdate");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOTUpdate) == 0x000010, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOTUpdate");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOTUpdate, CallFunc_GetUpdateDeltaSeconds_DeltaSeconds) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOTUpdate::CallFunc_GetUpdateDeltaSeconds_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOTUpdate, CallFunc_UpdateMove_NextActionStatus) == 0x000008, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOTUpdate::CallFunc_UpdateMove_NextActionStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOTUpdate, CallFunc_UpdateMove_IsChangeAction) == 0x000009, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_StateOTUpdate::CallFunc_UpdateMove_IsChangeAction' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.Update
// 0x0030 (0x0030 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Update final
{
public:
	class UBP_CharacterLocomotionComponent_C*     InLocomotionComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ECharacterLocomotionEventType                 InEventType;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        InDeltaSeconds;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetUpdateDeltaSeconds_DeltaSeconds;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Update) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Update");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Update) == 0x000030, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Update");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Update, InLocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Update::InLocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Update, InEventType) == 0x000008, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Update::InEventType' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Update, InDeltaSeconds) == 0x000010, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Update::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Update, NewParam) == 0x000018, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Update::NewParam' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Update, CallFunc_GetUpdateDeltaSeconds_DeltaSeconds) == 0x000020, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Update::CallFunc_GetUpdateDeltaSeconds_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Update, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000028, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Update::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Update, K2Node_SwitchEnum_CmpSuccess) == 0x000029, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Update::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Update, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00002A, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_Update::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.UpdateAlways
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateAlways final
{
public:
	double                                        InDeltaSeconds;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Update_Sub_State_Timer_OutSubStateTimer;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateAlways) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateAlways");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateAlways) == 0x000018, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateAlways");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateAlways, InDeltaSeconds) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateAlways::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateAlways, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000008, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateAlways::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateAlways, CallFunc_Update_Sub_State_Timer_OutSubStateTimer) == 0x000010, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateAlways::CallFunc_Update_Sub_State_Timer_OutSubStateTimer' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.UpdateMove
// 0x0240 (0x0240 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove final
{
public:
	double                                        InDeltaSeconds;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratHighSpeedMoveState                      NextActionStatus;                                  // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsChangeAction;                                    // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsChanged;                                         // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_CalculateDragonDashRotation_DragonDashRotation; // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Rotation_IsSuccessfully;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPawn_Pawn;                             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPawn_Pawn_1;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0058(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_1;     // 0x0148(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_1;        // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_232[0x6];                                      // 0x0232(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove) == 0x000240, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove, InDeltaSeconds) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove, NextActionStatus) == 0x000008, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove::NextActionStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove, IsChangeAction) == 0x000009, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove::IsChangeAction' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove, IsChanged) == 0x00000A, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove::IsChanged' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove, CallFunc_CalculateDragonDashRotation_DragonDashRotation) == 0x000018, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove::CallFunc_CalculateDragonDashRotation_DragonDashRotation' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove, CallFunc_Set_Rotation_IsSuccessfully) == 0x000030, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove::CallFunc_Set_Rotation_IsSuccessfully' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000038, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000040, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000041, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove, CallFunc_GetPawn_Pawn) == 0x000048, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove::CallFunc_GetPawn_Pawn' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove, CallFunc_GetPawn_Pawn_1) == 0x000050, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove::CallFunc_GetPawn_Pawn_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000058, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000140, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove, CallFunc_K2_SetActorLocation_SweepHitResult_1) == 0x000148, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove::CallFunc_K2_SetActorLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove, CallFunc_K2_SetActorLocation_ReturnValue_1) == 0x000230, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove::CallFunc_K2_SetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000231, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000238, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateMove::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMoveStr.BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C.UpdateOmenToAppear
// 0x0098 (0x0098 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear final
{
public:
	double                                        InDeltaSeconds;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetParameter________;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetParameter_________________;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_____;                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_______;                      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_________;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_________________IN__LP____;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter_________________LP__OT____;  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetParameter__________________1;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetParameter________________;             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetParameter___________________;          // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetParameter___________________OT____________; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetParameter__________________2;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetParameter_________________1;           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetParameter____________________1;        // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear) == 0x000098, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear, InDeltaSeconds) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear, CallFunc_GetParameter________) == 0x000008, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear::CallFunc_GetParameter________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear, CallFunc_GetParameter_________________) == 0x000010, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear::CallFunc_GetParameter_________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear, CallFunc_GetParameter_____) == 0x000018, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear::CallFunc_GetParameter_____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear, CallFunc_GetParameter_______) == 0x000020, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear::CallFunc_GetParameter_______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear, CallFunc_GetParameter_________) == 0x000028, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear::CallFunc_GetParameter_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear, CallFunc_GetParameter_________________IN__LP____) == 0x000030, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear::CallFunc_GetParameter_________________IN__LP____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear, CallFunc_GetParameter_________________LP__OT____) == 0x000038, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear::CallFunc_GetParameter_________________LP__OT____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear, CallFunc_GetParameter__________________1) == 0x000040, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear::CallFunc_GetParameter__________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear, CallFunc_GetParameter________________) == 0x000048, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear::CallFunc_GetParameter________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear, CallFunc_GetParameter___________________) == 0x000050, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear::CallFunc_GetParameter___________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear, CallFunc_GetParameter___________________OT____________) == 0x000058, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear::CallFunc_GetParameter___________________OT____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear, CallFunc_GetParameter__________________2) == 0x000060, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear::CallFunc_GetParameter__________________2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear, CallFunc_GetParameter_________________1) == 0x000068, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear::CallFunc_GetParameter_________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear, CallFunc_GetParameter____________________1) == 0x000070, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear::CallFunc_GetParameter____________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000078, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000080, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000088, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000090, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMoveStr_C_UpdateOmenToAppear::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");

}

