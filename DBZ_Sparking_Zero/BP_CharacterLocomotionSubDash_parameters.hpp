#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterLocomotionSubDash

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_CharacterLocomotionSubDash.BP_CharacterLocomotionSubDash_C.AddDashVector
// 0x0048 (0x0048 - 0x0000)
struct BP_CharacterLocomotionSubDash_C_AddDashVector final
{
public:
	double                                        InDeltaSeconds;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPawn_Pawn;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast;    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDash_C_AddDashVector) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDash_C_AddDashVector");
static_assert(sizeof(BP_CharacterLocomotionSubDash_C_AddDashVector) == 0x000048, "Wrong size on BP_CharacterLocomotionSubDash_C_AddDashVector");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_AddDashVector, InDeltaSeconds) == 0x000000, "Member 'BP_CharacterLocomotionSubDash_C_AddDashVector::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_AddDashVector, CallFunc_GetPawn_Pawn) == 0x000008, "Member 'BP_CharacterLocomotionSubDash_C_AddDashVector::CallFunc_GetPawn_Pawn' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_AddDashVector, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000010, "Member 'BP_CharacterLocomotionSubDash_C_AddDashVector::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_AddDashVector, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_CharacterLocomotionSubDash_C_AddDashVector::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_AddDashVector, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_CharacterLocomotionSubDash_C_AddDashVector::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_AddDashVector, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000031, "Member 'BP_CharacterLocomotionSubDash_C_AddDashVector::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_AddDashVector, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast) == 0x000038, "Member 'BP_CharacterLocomotionSubDash_C_AddDashVector::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_AddDashVector, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000040, "Member 'BP_CharacterLocomotionSubDash_C_AddDashVector::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubDash.BP_CharacterLocomotionSubDash_C.ClearVelocityDashAtStart
// 0x0010 (0x0010 - 0x0000)
struct BP_CharacterLocomotionSubDash_C_ClearVelocityDashAtStart final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement;   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDash_C_ClearVelocityDashAtStart) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDash_C_ClearVelocityDashAtStart");
static_assert(sizeof(BP_CharacterLocomotionSubDash_C_ClearVelocityDashAtStart) == 0x000010, "Wrong size on BP_CharacterLocomotionSubDash_C_ClearVelocityDashAtStart");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_ClearVelocityDashAtStart, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubDash_C_ClearVelocityDashAtStart::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_ClearVelocityDashAtStart, CallFunc_GetCharacterMovement_CharacterMovement) == 0x000008, "Member 'BP_CharacterLocomotionSubDash_C_ClearVelocityDashAtStart::CallFunc_GetCharacterMovement_CharacterMovement' has a wrong offset!");

// Function BP_CharacterLocomotionSubDash.BP_CharacterLocomotionSubDash_C.GetDashInputVector
// 0x00B8 (0x00B8 - 0x0000)
struct BP_CharacterLocomotionSubDash_C_GetDashInputVector final
{
public:
	struct FVector                                InInputVector;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OutInputVector;                                    // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OutIsInputNeutral;                                 // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                InputXYZ;                                          // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInputNeutral;                                    // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_Vector2DVector2D_ReturnValue;  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDash_C_GetDashInputVector) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDash_C_GetDashInputVector");
static_assert(sizeof(BP_CharacterLocomotionSubDash_C_GetDashInputVector) == 0x0000B8, "Wrong size on BP_CharacterLocomotionSubDash_C_GetDashInputVector");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_GetDashInputVector, InInputVector) == 0x000000, "Member 'BP_CharacterLocomotionSubDash_C_GetDashInputVector::InInputVector' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_GetDashInputVector, OutInputVector) == 0x000018, "Member 'BP_CharacterLocomotionSubDash_C_GetDashInputVector::OutInputVector' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_GetDashInputVector, OutIsInputNeutral) == 0x000030, "Member 'BP_CharacterLocomotionSubDash_C_GetDashInputVector::OutIsInputNeutral' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_GetDashInputVector, InputXYZ) == 0x000038, "Member 'BP_CharacterLocomotionSubDash_C_GetDashInputVector::InputXYZ' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_GetDashInputVector, IsInputNeutral) == 0x000050, "Member 'BP_CharacterLocomotionSubDash_C_GetDashInputVector::IsInputNeutral' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_GetDashInputVector, CallFunc_BreakVector_X) == 0x000058, "Member 'BP_CharacterLocomotionSubDash_C_GetDashInputVector::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_GetDashInputVector, CallFunc_BreakVector_Y) == 0x000060, "Member 'BP_CharacterLocomotionSubDash_C_GetDashInputVector::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_GetDashInputVector, CallFunc_BreakVector_Z) == 0x000068, "Member 'BP_CharacterLocomotionSubDash_C_GetDashInputVector::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_GetDashInputVector, CallFunc_MakeVector_ReturnValue) == 0x000070, "Member 'BP_CharacterLocomotionSubDash_C_GetDashInputVector::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_GetDashInputVector, CallFunc_BreakVector_X_1) == 0x000088, "Member 'BP_CharacterLocomotionSubDash_C_GetDashInputVector::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_GetDashInputVector, CallFunc_BreakVector_Y_1) == 0x000090, "Member 'BP_CharacterLocomotionSubDash_C_GetDashInputVector::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_GetDashInputVector, CallFunc_BreakVector_Z_1) == 0x000098, "Member 'BP_CharacterLocomotionSubDash_C_GetDashInputVector::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_GetDashInputVector, CallFunc_MakeVector2D_ReturnValue) == 0x0000A0, "Member 'BP_CharacterLocomotionSubDash_C_GetDashInputVector::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_GetDashInputVector, CallFunc_EqualEqual_Vector2DVector2D_ReturnValue) == 0x0000B0, "Member 'BP_CharacterLocomotionSubDash_C_GetDashInputVector::CallFunc_EqualEqual_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubDash.BP_CharacterLocomotionSubDash_C.GetDashVectorAndRotation
// 0x00F0 (0x00F0 - 0x0000)
struct BP_CharacterLocomotionSubDash_C_GetDashVectorAndRotation final
{
public:
	struct FVector                                InInputVector;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InIsOnlyYawRotation;                               // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                OutVector;                                         // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               OutRotation;                                       // 0x0038(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetOnlyYawRotation_ReturnValue;           // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_1;       // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterLocomotionSubDash_C_GetDashVectorAndRotation) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDash_C_GetDashVectorAndRotation");
static_assert(sizeof(BP_CharacterLocomotionSubDash_C_GetDashVectorAndRotation) == 0x0000F0, "Wrong size on BP_CharacterLocomotionSubDash_C_GetDashVectorAndRotation");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_GetDashVectorAndRotation, InInputVector) == 0x000000, "Member 'BP_CharacterLocomotionSubDash_C_GetDashVectorAndRotation::InInputVector' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_GetDashVectorAndRotation, InIsOnlyYawRotation) == 0x000018, "Member 'BP_CharacterLocomotionSubDash_C_GetDashVectorAndRotation::InIsOnlyYawRotation' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_GetDashVectorAndRotation, OutVector) == 0x000020, "Member 'BP_CharacterLocomotionSubDash_C_GetDashVectorAndRotation::OutVector' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_GetDashVectorAndRotation, OutRotation) == 0x000038, "Member 'BP_CharacterLocomotionSubDash_C_GetDashVectorAndRotation::OutRotation' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_GetDashVectorAndRotation, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000050, "Member 'BP_CharacterLocomotionSubDash_C_GetDashVectorAndRotation::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_GetDashVectorAndRotation, CallFunc_Normal_ReturnValue) == 0x000058, "Member 'BP_CharacterLocomotionSubDash_C_GetDashVectorAndRotation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_GetDashVectorAndRotation, CallFunc_GetOnlyYawRotation_ReturnValue) == 0x000070, "Member 'BP_CharacterLocomotionSubDash_C_GetDashVectorAndRotation::CallFunc_GetOnlyYawRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_GetDashVectorAndRotation, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000088, "Member 'BP_CharacterLocomotionSubDash_C_GetDashVectorAndRotation::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_GetDashVectorAndRotation, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000090, "Member 'BP_CharacterLocomotionSubDash_C_GetDashVectorAndRotation::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_GetDashVectorAndRotation, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x0000A8, "Member 'BP_CharacterLocomotionSubDash_C_GetDashVectorAndRotation::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_GetDashVectorAndRotation, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x0000C0, "Member 'BP_CharacterLocomotionSubDash_C_GetDashVectorAndRotation::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_GetDashVectorAndRotation, CallFunc_Conv_VectorToRotator_ReturnValue_1) == 0x0000D8, "Member 'BP_CharacterLocomotionSubDash_C_GetDashVectorAndRotation::CallFunc_Conv_VectorToRotator_ReturnValue_1' has a wrong offset!");

// Function BP_CharacterLocomotionSubDash.BP_CharacterLocomotionSubDash_C.RotateDash
// 0x00A0 (0x00A0 - 0x0000)
struct BP_CharacterLocomotionSubDash_C_RotateDash final
{
public:
	bool                                          InIsIgnoreRoll;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InIsIgnorePitch;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InIsIgnoreYaw;                                     // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_2;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_2;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Rotation_IsSuccessfully;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Option_0_ImplicitCast;               // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Option_0_ImplicitCast_1;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Option_0_ImplicitCast_2;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDash_C_RotateDash) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDash_C_RotateDash");
static_assert(sizeof(BP_CharacterLocomotionSubDash_C_RotateDash) == 0x0000A0, "Wrong size on BP_CharacterLocomotionSubDash_C_RotateDash");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_RotateDash, InIsIgnoreRoll) == 0x000000, "Member 'BP_CharacterLocomotionSubDash_C_RotateDash::InIsIgnoreRoll' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_RotateDash, InIsIgnorePitch) == 0x000001, "Member 'BP_CharacterLocomotionSubDash_C_RotateDash::InIsIgnorePitch' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_RotateDash, InIsIgnoreYaw) == 0x000002, "Member 'BP_CharacterLocomotionSubDash_C_RotateDash::InIsIgnoreYaw' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_RotateDash, Temp_bool_Variable) == 0x000003, "Member 'BP_CharacterLocomotionSubDash_C_RotateDash::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_RotateDash, Temp_real_Variable) == 0x000008, "Member 'BP_CharacterLocomotionSubDash_C_RotateDash::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_RotateDash, Temp_bool_Variable_1) == 0x000010, "Member 'BP_CharacterLocomotionSubDash_C_RotateDash::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_RotateDash, Temp_real_Variable_1) == 0x000018, "Member 'BP_CharacterLocomotionSubDash_C_RotateDash::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_RotateDash, Temp_bool_Variable_2) == 0x000020, "Member 'BP_CharacterLocomotionSubDash_C_RotateDash::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_RotateDash, Temp_real_Variable_2) == 0x000028, "Member 'BP_CharacterLocomotionSubDash_C_RotateDash::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_RotateDash, CallFunc_BreakRotator_Roll) == 0x000030, "Member 'BP_CharacterLocomotionSubDash_C_RotateDash::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_RotateDash, CallFunc_BreakRotator_Pitch) == 0x000034, "Member 'BP_CharacterLocomotionSubDash_C_RotateDash::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_RotateDash, CallFunc_BreakRotator_Yaw) == 0x000038, "Member 'BP_CharacterLocomotionSubDash_C_RotateDash::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_RotateDash, K2Node_Select_Default) == 0x000040, "Member 'BP_CharacterLocomotionSubDash_C_RotateDash::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_RotateDash, K2Node_Select_Default_1) == 0x000048, "Member 'BP_CharacterLocomotionSubDash_C_RotateDash::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_RotateDash, K2Node_Select_Default_2) == 0x000050, "Member 'BP_CharacterLocomotionSubDash_C_RotateDash::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_RotateDash, CallFunc_MakeRotator_ReturnValue) == 0x000058, "Member 'BP_CharacterLocomotionSubDash_C_RotateDash::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_RotateDash, CallFunc_Set_Rotation_IsSuccessfully) == 0x000070, "Member 'BP_CharacterLocomotionSubDash_C_RotateDash::CallFunc_Set_Rotation_IsSuccessfully' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_RotateDash, K2Node_Select_Option_0_ImplicitCast) == 0x000078, "Member 'BP_CharacterLocomotionSubDash_C_RotateDash::K2Node_Select_Option_0_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_RotateDash, K2Node_Select_Option_0_ImplicitCast_1) == 0x000080, "Member 'BP_CharacterLocomotionSubDash_C_RotateDash::K2Node_Select_Option_0_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_RotateDash, K2Node_Select_Option_0_ImplicitCast_2) == 0x000088, "Member 'BP_CharacterLocomotionSubDash_C_RotateDash::K2Node_Select_Option_0_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_RotateDash, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000090, "Member 'BP_CharacterLocomotionSubDash_C_RotateDash::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_RotateDash, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000094, "Member 'BP_CharacterLocomotionSubDash_C_RotateDash::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_RotateDash, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000098, "Member 'BP_CharacterLocomotionSubDash_C_RotateDash::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubDash.BP_CharacterLocomotionSubDash_C.SetUpDashStateMovementParameter
// 0x0028 (0x0028 - 0x0000)
struct BP_CharacterLocomotionSubDash_C_SetUpDashStateMovementParameter final
{
public:
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement;   // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_1; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_2; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_3; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_4; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDash_C_SetUpDashStateMovementParameter) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDash_C_SetUpDashStateMovementParameter");
static_assert(sizeof(BP_CharacterLocomotionSubDash_C_SetUpDashStateMovementParameter) == 0x000028, "Wrong size on BP_CharacterLocomotionSubDash_C_SetUpDashStateMovementParameter");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_SetUpDashStateMovementParameter, CallFunc_GetCharacterMovement_CharacterMovement) == 0x000000, "Member 'BP_CharacterLocomotionSubDash_C_SetUpDashStateMovementParameter::CallFunc_GetCharacterMovement_CharacterMovement' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_SetUpDashStateMovementParameter, CallFunc_GetCharacterMovement_CharacterMovement_1) == 0x000008, "Member 'BP_CharacterLocomotionSubDash_C_SetUpDashStateMovementParameter::CallFunc_GetCharacterMovement_CharacterMovement_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_SetUpDashStateMovementParameter, CallFunc_GetCharacterMovement_CharacterMovement_2) == 0x000010, "Member 'BP_CharacterLocomotionSubDash_C_SetUpDashStateMovementParameter::CallFunc_GetCharacterMovement_CharacterMovement_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_SetUpDashStateMovementParameter, CallFunc_GetCharacterMovement_CharacterMovement_3) == 0x000018, "Member 'BP_CharacterLocomotionSubDash_C_SetUpDashStateMovementParameter::CallFunc_GetCharacterMovement_CharacterMovement_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDash_C_SetUpDashStateMovementParameter, CallFunc_GetCharacterMovement_CharacterMovement_4) == 0x000020, "Member 'BP_CharacterLocomotionSubDash_C_SetUpDashStateMovementParameter::CallFunc_GetCharacterMovement_CharacterMovement_4' has a wrong offset!");

}

