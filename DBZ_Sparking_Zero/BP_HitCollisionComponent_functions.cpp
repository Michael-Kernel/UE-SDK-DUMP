#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HitCollisionComponent

#include "Basic.hpp"

#include "BP_HitCollisionComponent_classes.hpp"
#include "BP_HitCollisionComponent_parameters.hpp"


namespace SDK
{

// Function BP_HitCollisionComponent.BP_HitCollisionComponent_C.AddHitAttackCollisionData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AttackCollision_C*            InHitAttackCollision                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// struct FKoratGaveDamageParameter        InGaveDamageParam                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_HitCollisionComponent_C::AddHitAttackCollisionData(const class ABP_AttackCollision_C*& InHitAttackCollision, const struct FKoratGaveDamageParameter& InGaveDamageParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HitCollisionComponent_C", "AddHitAttackCollisionData");

	Params::BP_HitCollisionComponent_C_AddHitAttackCollisionData Parms{};

	Parms.InHitAttackCollision = InHitAttackCollision;
	Parms.InGaveDamageParam = std::move(InGaveDamageParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HitCollisionComponent.BP_HitCollisionComponent_C.AddHitData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AttackCollision_C*            InHitAttackCollision                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// struct FKoratGaveDamageParameter        InGaveDamageParam                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_HitCollisionComponent_C::AddHitData(class ABP_AttackCollision_C*& InHitAttackCollision, struct FKoratGaveDamageParameter& InGaveDamageParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HitCollisionComponent_C", "AddHitData");

	Params::BP_HitCollisionComponent_C_AddHitData Parms{};

	Parms.InHitAttackCollision = InHitAttackCollision;
	Parms.InGaveDamageParam = std::move(InGaveDamageParam);

	UObject::ProcessEvent(Func, &Parms);

	InHitAttackCollision = Parms.InHitAttackCollision;
	InGaveDamageParam = std::move(Parms.InGaveDamageParam);
}


// Function BP_HitCollisionComponent.BP_HitCollisionComponent_C.ExecuteUbergraph_BP_HitCollisionComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HitCollisionComponent_C::ExecuteUbergraph_BP_HitCollisionComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HitCollisionComponent_C", "ExecuteUbergraph_BP_HitCollisionComponent");

	Params::BP_HitCollisionComponent_C_ExecuteUbergraph_BP_HitCollisionComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HitCollisionComponent.BP_HitCollisionComponent_C.GetDrawHitPositionTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ASSCharacter*                     InCharacter                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UBP_HitCollisionComponent_C::GetDrawHitPositionTime(class ASSCharacter* InCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HitCollisionComponent_C", "GetDrawHitPositionTime");

	Params::BP_HitCollisionComponent_C_GetDrawHitPositionTime Parms{};

	Parms.InCharacter = InCharacter;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_HitCollisionComponent.BP_HitCollisionComponent_C.OccurOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASSCharacter*                     InOpponentOffsetCharacter                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// class ABP_AttackCollision_C*            InHitAttackCollision                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// struct FKoratActionDataList             InAction                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// EKoratOffsetType                        InOffsetType                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       InOffsetLocation                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKoratReceivedDamageParameter    InReceivedDamageParameter                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_HitCollisionComponent_C::OccurOffset(const class ASSCharacter*& InOpponentOffsetCharacter, const class ABP_AttackCollision_C*& InHitAttackCollision, const struct FKoratActionDataList& InAction, const EKoratOffsetType& InOffsetType, const struct FTransform& InOffsetLocation, const struct FKoratReceivedDamageParameter& InReceivedDamageParameter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HitCollisionComponent_C", "OccurOffset");

	Params::BP_HitCollisionComponent_C_OccurOffset Parms{};

	Parms.InOpponentOffsetCharacter = InOpponentOffsetCharacter;
	Parms.InHitAttackCollision = InHitAttackCollision;
	Parms.InAction = std::move(InAction);
	Parms.InOffsetType = InOffsetType;
	Parms.InOffsetLocation = std::move(InOffsetLocation);
	Parms.InReceivedDamageParameter = std::move(InReceivedDamageParameter);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HitCollisionComponent.BP_HitCollisionComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_HitCollisionComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HitCollisionComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HitCollisionComponent.BP_HitCollisionComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HitCollisionComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HitCollisionComponent_C", "ReceiveTick");

	Params::BP_HitCollisionComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HitCollisionComponent.BP_HitCollisionComponent_C.SetOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASSCharacter*                     InOpponentOffsetCharacter                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// class ABP_AttackCollision_C*            InHitAttackCollision                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// struct FKoratActionDataList             InAction                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// EKoratOffsetType                        InOffsetType                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       InOffsetTransform                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKoratReceivedDamageParameter    InReceivedDamageParameter                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_HitCollisionComponent_C::SetOffset(class ASSCharacter*& InOpponentOffsetCharacter, class ABP_AttackCollision_C*& InHitAttackCollision, struct FKoratActionDataList& InAction, EKoratOffsetType& InOffsetType, struct FTransform& InOffsetTransform, struct FKoratReceivedDamageParameter& InReceivedDamageParameter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HitCollisionComponent_C", "SetOffset");

	Params::BP_HitCollisionComponent_C_SetOffset Parms{};

	Parms.InOpponentOffsetCharacter = InOpponentOffsetCharacter;
	Parms.InHitAttackCollision = InHitAttackCollision;
	Parms.InAction = std::move(InAction);
	Parms.InOffsetType = InOffsetType;
	Parms.InOffsetTransform = std::move(InOffsetTransform);
	Parms.InReceivedDamageParameter = std::move(InReceivedDamageParameter);

	UObject::ProcessEvent(Func, &Parms);

	InOpponentOffsetCharacter = Parms.InOpponentOffsetCharacter;
	InHitAttackCollision = Parms.InHitAttackCollision;
	InAction = std::move(Parms.InAction);
	InOffsetType = Parms.InOffsetType;
	InOffsetTransform = std::move(Parms.InOffsetTransform);
	InReceivedDamageParameter = std::move(Parms.InReceivedDamageParameter);
}


// Function BP_HitCollisionComponent.BP_HitCollisionComponent_C.UpdateHitData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_HitCollisionComponent_C::UpdateHitData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HitCollisionComponent_C", "UpdateHitData");

	UObject::ProcessEvent(Func, nullptr);
}

}

