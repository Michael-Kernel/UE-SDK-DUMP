#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Option_List_Other

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SS_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Option_List_Other.WBP_Option_List_Other_C
// 0x0068 (0x0508 - 0x04A0)
class UWBP_Option_List_Other_C final : public USSOptionListEtcManager
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       SE_Active_In;                                      // 0x04A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ANI_Out_R;                                         // 0x04B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ANI_Out_L;                                         // 0x04B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ANI_IN_R;                                          // 0x04C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ANI_IN_L;                                          // 0x04C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ANI_HIde;                                          // 0x04D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ANI_Wait;                                          // 0x04D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ANI_Show;                                          // 0x04E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_OBJ_Option_List_010_Text2_C*       AnalysisButton;                                    // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OBJ_Option_List_003_C*             EULA;                                              // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OBJ_Option_List_003_C*             PrivacyPolicy;                                     // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OBJ_Option_List_003_C*             RightsNotation;                                    // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void BndEvt__WBP_Option_List_Other_AnalysisButton_K2Node_ComponentBoundEvent_8_OnSSMenuButtonFocusedEvent__DelegateSignature();
	void BndEvt__WBP_Option_List_Other_EULA_K2Node_ComponentBoundEvent_9_OnSSMenuButtonFocusedEvent__DelegateSignature();
	void BndEvt__WBP_Option_List_Other_PrivacyPolicy_K2Node_ComponentBoundEvent_10_OnSSMenuButtonFocusedEvent__DelegateSignature();
	void BndEvt__WBP_Option_List_Other_RightsNotation_K2Node_ComponentBoundEvent_11_OnSSMenuButtonFocusedEvent__DelegateSignature();
	void ExecuteUbergraph_WBP_Option_List_Other(int32 EntryPoint);
	void OnHideStarted();
	void OnShowFinished();
	void OnShowStarted();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Option_List_Other_C">();
	}
	static class UWBP_Option_List_Other_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Option_List_Other_C>();
	}
};
static_assert(alignof(UWBP_Option_List_Other_C) == 0x000008, "Wrong alignment on UWBP_Option_List_Other_C");
static_assert(sizeof(UWBP_Option_List_Other_C) == 0x000508, "Wrong size on UWBP_Option_List_Other_C");
static_assert(offsetof(UWBP_Option_List_Other_C, UberGraphFrame) == 0x0004A0, "Member 'UWBP_Option_List_Other_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Option_List_Other_C, SE_Active_In) == 0x0004A8, "Member 'UWBP_Option_List_Other_C::SE_Active_In' has a wrong offset!");
static_assert(offsetof(UWBP_Option_List_Other_C, ANI_Out_R) == 0x0004B0, "Member 'UWBP_Option_List_Other_C::ANI_Out_R' has a wrong offset!");
static_assert(offsetof(UWBP_Option_List_Other_C, ANI_Out_L) == 0x0004B8, "Member 'UWBP_Option_List_Other_C::ANI_Out_L' has a wrong offset!");
static_assert(offsetof(UWBP_Option_List_Other_C, ANI_IN_R) == 0x0004C0, "Member 'UWBP_Option_List_Other_C::ANI_IN_R' has a wrong offset!");
static_assert(offsetof(UWBP_Option_List_Other_C, ANI_IN_L) == 0x0004C8, "Member 'UWBP_Option_List_Other_C::ANI_IN_L' has a wrong offset!");
static_assert(offsetof(UWBP_Option_List_Other_C, ANI_HIde) == 0x0004D0, "Member 'UWBP_Option_List_Other_C::ANI_HIde' has a wrong offset!");
static_assert(offsetof(UWBP_Option_List_Other_C, ANI_Wait) == 0x0004D8, "Member 'UWBP_Option_List_Other_C::ANI_Wait' has a wrong offset!");
static_assert(offsetof(UWBP_Option_List_Other_C, ANI_Show) == 0x0004E0, "Member 'UWBP_Option_List_Other_C::ANI_Show' has a wrong offset!");
static_assert(offsetof(UWBP_Option_List_Other_C, AnalysisButton) == 0x0004E8, "Member 'UWBP_Option_List_Other_C::AnalysisButton' has a wrong offset!");
static_assert(offsetof(UWBP_Option_List_Other_C, EULA) == 0x0004F0, "Member 'UWBP_Option_List_Other_C::EULA' has a wrong offset!");
static_assert(offsetof(UWBP_Option_List_Other_C, PrivacyPolicy) == 0x0004F8, "Member 'UWBP_Option_List_Other_C::PrivacyPolicy' has a wrong offset!");
static_assert(offsetof(UWBP_Option_List_Other_C, RightsNotation) == 0x000500, "Member 'UWBP_Option_List_Other_C::RightsNotation' has a wrong offset!");

}

