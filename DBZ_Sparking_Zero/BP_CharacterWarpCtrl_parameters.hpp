#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterWarpCtrl

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_CharacterWarpCtrl.BP_CharacterWarpCtrl_C.ExecuteUbergraph_BP_CharacterWarpCtrl
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterWarpCtrl_C_ExecuteUbergraph_BP_CharacterWarpCtrl final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class ASSCharacter*                     K2Node_Event_Target;                               // 0x0010(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterWarpCtrl_C_ExecuteUbergraph_BP_CharacterWarpCtrl) == 0x000008, "Wrong alignment on BP_CharacterWarpCtrl_C_ExecuteUbergraph_BP_CharacterWarpCtrl");
static_assert(sizeof(BP_CharacterWarpCtrl_C_ExecuteUbergraph_BP_CharacterWarpCtrl) == 0x000018, "Wrong size on BP_CharacterWarpCtrl_C_ExecuteUbergraph_BP_CharacterWarpCtrl");
static_assert(offsetof(BP_CharacterWarpCtrl_C_ExecuteUbergraph_BP_CharacterWarpCtrl, EntryPoint) == 0x000000, "Member 'BP_CharacterWarpCtrl_C_ExecuteUbergraph_BP_CharacterWarpCtrl::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CharacterWarpCtrl_C_ExecuteUbergraph_BP_CharacterWarpCtrl, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_CharacterWarpCtrl_C_ExecuteUbergraph_BP_CharacterWarpCtrl::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterWarpCtrl_C_ExecuteUbergraph_BP_CharacterWarpCtrl, K2Node_Event_Target) == 0x000010, "Member 'BP_CharacterWarpCtrl_C_ExecuteUbergraph_BP_CharacterWarpCtrl::K2Node_Event_Target' has a wrong offset!");

// Function BP_CharacterWarpCtrl.BP_CharacterWarpCtrl_C.ReceivePostWarpedCtrl
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterWarpCtrl_C_ReceivePostWarpedCtrl final
{
public:
	const class ASSCharacter*                     Target;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterWarpCtrl_C_ReceivePostWarpedCtrl) == 0x000008, "Wrong alignment on BP_CharacterWarpCtrl_C_ReceivePostWarpedCtrl");
static_assert(sizeof(BP_CharacterWarpCtrl_C_ReceivePostWarpedCtrl) == 0x000008, "Wrong size on BP_CharacterWarpCtrl_C_ReceivePostWarpedCtrl");
static_assert(offsetof(BP_CharacterWarpCtrl_C_ReceivePostWarpedCtrl, Target) == 0x000000, "Member 'BP_CharacterWarpCtrl_C_ReceivePostWarpedCtrl::Target' has a wrong offset!");

// Function BP_CharacterWarpCtrl.BP_CharacterWarpCtrl_C.SetWarpCamera
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterWarpCtrl_C_SetWarpCamera final
{
public:
	class ASSCharacter*                           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           AttendTargetCharacter;                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               NewLocalVar_0;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterWarpCtrl_C_SetWarpCamera) == 0x000008, "Wrong alignment on BP_CharacterWarpCtrl_C_SetWarpCamera");
static_assert(sizeof(BP_CharacterWarpCtrl_C_SetWarpCamera) == 0x000018, "Wrong size on BP_CharacterWarpCtrl_C_SetWarpCamera");
static_assert(offsetof(BP_CharacterWarpCtrl_C_SetWarpCamera, Character) == 0x000000, "Member 'BP_CharacterWarpCtrl_C_SetWarpCamera::Character' has a wrong offset!");
static_assert(offsetof(BP_CharacterWarpCtrl_C_SetWarpCamera, AttendTargetCharacter) == 0x000008, "Member 'BP_CharacterWarpCtrl_C_SetWarpCamera::AttendTargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterWarpCtrl_C_SetWarpCamera, NewLocalVar_0) == 0x000010, "Member 'BP_CharacterWarpCtrl_C_SetWarpCamera::NewLocalVar_0' has a wrong offset!");

}

