#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterLocomotionSubJump

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ECharacterLocomotionEventType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SS_structs.hpp"


namespace SDK::Params
{

// Function BP_CharacterLocomotionSubJump.BP_CharacterLocomotionSubJump_C.Check
// 0x0030 (0x0030 - 0x0000)
struct BP_CharacterLocomotionSubJump_C_Check final
{
public:
	class UBP_CharacterLocomotionComponent_C*     InLocomotionComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CanStart;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 CallFunc_GetMovementMode_MovementMode;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EKoratShortDashState                          CallFunc_GetShortDashStatus_ShortDashStatus;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_CanStart;                           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubJump_C_Check) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubJump_C_Check");
static_assert(sizeof(BP_CharacterLocomotionSubJump_C_Check) == 0x000030, "Wrong size on BP_CharacterLocomotionSubJump_C_Check");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Check, InLocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubJump_C_Check::InLocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Check, CanStart) == 0x000008, "Member 'BP_CharacterLocomotionSubJump_C_Check::CanStart' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Check, CallFunc_GetMovementMode_MovementMode) == 0x000009, "Member 'BP_CharacterLocomotionSubJump_C_Check::CallFunc_GetMovementMode_MovementMode' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Check, CallFunc_MakeLiteralByte_ReturnValue) == 0x00000A, "Member 'BP_CharacterLocomotionSubJump_C_Check::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Check, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000010, "Member 'BP_CharacterLocomotionSubJump_C_Check::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Check, CallFunc_GetShortDashStatus_ShortDashStatus) == 0x000018, "Member 'BP_CharacterLocomotionSubJump_C_Check::CallFunc_GetShortDashStatus_ShortDashStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Check, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'BP_CharacterLocomotionSubJump_C_Check::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Check, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'BP_CharacterLocomotionSubJump_C_Check::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Check, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000020, "Member 'BP_CharacterLocomotionSubJump_C_Check::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Check, CallFunc_Check_CanStart) == 0x000028, "Member 'BP_CharacterLocomotionSubJump_C_Check::CallFunc_Check_CanStart' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Check, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000029, "Member 'BP_CharacterLocomotionSubJump_C_Check::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function BP_CharacterLocomotionSubJump.BP_CharacterLocomotionSubJump_C.CheckAndStart
// 0x0020 (0x0020 - 0x0000)
struct BP_CharacterLocomotionSubJump_C_CheckAndStart final
{
public:
	class UBP_CharacterLocomotionComponent_C*     InLocomotionComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          InInSkip;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStarted;                                         // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsChangeJump;                                      // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_CanStart;                           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Start_NewParam;                           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckAndStart_IsStarted;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubJump_C_CheckAndStart) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubJump_C_CheckAndStart");
static_assert(sizeof(BP_CharacterLocomotionSubJump_C_CheckAndStart) == 0x000020, "Wrong size on BP_CharacterLocomotionSubJump_C_CheckAndStart");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_CheckAndStart, InLocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubJump_C_CheckAndStart::InLocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_CheckAndStart, InInSkip) == 0x000008, "Member 'BP_CharacterLocomotionSubJump_C_CheckAndStart::InInSkip' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_CheckAndStart, IsStarted) == 0x000009, "Member 'BP_CharacterLocomotionSubJump_C_CheckAndStart::IsStarted' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_CheckAndStart, IsChangeJump) == 0x00000A, "Member 'BP_CharacterLocomotionSubJump_C_CheckAndStart::IsChangeJump' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_CheckAndStart, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000010, "Member 'BP_CharacterLocomotionSubJump_C_CheckAndStart::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_CheckAndStart, CallFunc_Check_CanStart) == 0x000018, "Member 'BP_CharacterLocomotionSubJump_C_CheckAndStart::CallFunc_Check_CanStart' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_CheckAndStart, CallFunc_Start_NewParam) == 0x000019, "Member 'BP_CharacterLocomotionSubJump_C_CheckAndStart::CallFunc_Start_NewParam' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_CheckAndStart, CallFunc_CheckAndStart_IsStarted) == 0x00001A, "Member 'BP_CharacterLocomotionSubJump_C_CheckAndStart::CallFunc_CheckAndStart_IsStarted' has a wrong offset!");

// Function BP_CharacterLocomotionSubJump.BP_CharacterLocomotionSubJump_C.LandedJump
// 0x0070 (0x0070 - 0x0000)
struct BP_CharacterLocomotionSubJump_C_LandedJump final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetCharacter_Character;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubJump_C_LandedJump) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubJump_C_LandedJump");
static_assert(sizeof(BP_CharacterLocomotionSubJump_C_LandedJump) == 0x000070, "Wrong size on BP_CharacterLocomotionSubJump_C_LandedJump");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_LandedJump, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubJump_C_LandedJump::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_LandedJump, CallFunc_BreakVector_X) == 0x000008, "Member 'BP_CharacterLocomotionSubJump_C_LandedJump::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_LandedJump, CallFunc_BreakVector_Y) == 0x000010, "Member 'BP_CharacterLocomotionSubJump_C_LandedJump::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_LandedJump, CallFunc_BreakVector_Z) == 0x000018, "Member 'BP_CharacterLocomotionSubJump_C_LandedJump::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_LandedJump, CallFunc_GetCharacter_Character) == 0x000020, "Member 'BP_CharacterLocomotionSubJump_C_LandedJump::CallFunc_GetCharacter_Character' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_LandedJump, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000028, "Member 'BP_CharacterLocomotionSubJump_C_LandedJump::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_LandedJump, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'BP_CharacterLocomotionSubJump_C_LandedJump::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_LandedJump, CallFunc_BreakVector_X_1) == 0x000048, "Member 'BP_CharacterLocomotionSubJump_C_LandedJump::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_LandedJump, CallFunc_BreakVector_Y_1) == 0x000050, "Member 'BP_CharacterLocomotionSubJump_C_LandedJump::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_LandedJump, CallFunc_BreakVector_Z_1) == 0x000058, "Member 'BP_CharacterLocomotionSubJump_C_LandedJump::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_LandedJump, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000060, "Member 'BP_CharacterLocomotionSubJump_C_LandedJump::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_LandedJump, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000068, "Member 'BP_CharacterLocomotionSubJump_C_LandedJump::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubJump.BP_CharacterLocomotionSubJump_C.OnEndJumpFT
// 0x0010 (0x0010 - 0x0000)
struct BP_CharacterLocomotionSubJump_C_OnEndJumpFT final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubJump_C_OnEndJumpFT) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubJump_C_OnEndJumpFT");
static_assert(sizeof(BP_CharacterLocomotionSubJump_C_OnEndJumpFT) == 0x000010, "Wrong size on BP_CharacterLocomotionSubJump_C_OnEndJumpFT");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_OnEndJumpFT, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubJump_C_OnEndJumpFT::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_OnEndJumpFT, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'BP_CharacterLocomotionSubJump_C_OnEndJumpFT::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubJump.BP_CharacterLocomotionSubJump_C.OnEndJumpIN
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterLocomotionSubJump_C_OnEndJumpIN final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubJump_C_OnEndJumpIN) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubJump_C_OnEndJumpIN");
static_assert(sizeof(BP_CharacterLocomotionSubJump_C_OnEndJumpIN) == 0x000001, "Wrong size on BP_CharacterLocomotionSubJump_C_OnEndJumpIN");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_OnEndJumpIN, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'BP_CharacterLocomotionSubJump_C_OnEndJumpIN::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubJump.BP_CharacterLocomotionSubJump_C.OnEndJumpOT
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterLocomotionSubJump_C_OnEndJumpOT final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubJump_C_OnEndJumpOT) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubJump_C_OnEndJumpOT");
static_assert(sizeof(BP_CharacterLocomotionSubJump_C_OnEndJumpOT) == 0x000001, "Wrong size on BP_CharacterLocomotionSubJump_C_OnEndJumpOT");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_OnEndJumpOT, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'BP_CharacterLocomotionSubJump_C_OnEndJumpOT::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubJump.BP_CharacterLocomotionSubJump_C.OnEndJumpUP
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterLocomotionSubJump_C_OnEndJumpUP final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubJump_C_OnEndJumpUP) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubJump_C_OnEndJumpUP");
static_assert(sizeof(BP_CharacterLocomotionSubJump_C_OnEndJumpUP) == 0x000001, "Wrong size on BP_CharacterLocomotionSubJump_C_OnEndJumpUP");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_OnEndJumpUP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'BP_CharacterLocomotionSubJump_C_OnEndJumpUP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubJump.BP_CharacterLocomotionSubJump_C.Set Jump Status
// 0x0050 (0x0050 - 0x0000)
struct BP_CharacterLocomotionSubJump_C_Set_Jump_Status final
{
public:
	EKoratJumpState                               InJumpStatus;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterActionFinishReason             InActionFinishReason;                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetCharacter_Character;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateRunningAction_OutIsChangeAction;    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubJump_C_Set_Jump_Status) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubJump_C_Set_Jump_Status");
static_assert(sizeof(BP_CharacterLocomotionSubJump_C_Set_Jump_Status) == 0x000050, "Wrong size on BP_CharacterLocomotionSubJump_C_Set_Jump_Status");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Set_Jump_Status, InJumpStatus) == 0x000000, "Member 'BP_CharacterLocomotionSubJump_C_Set_Jump_Status::InJumpStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Set_Jump_Status, InActionFinishReason) == 0x000001, "Member 'BP_CharacterLocomotionSubJump_C_Set_Jump_Status::InActionFinishReason' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Set_Jump_Status, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000008, "Member 'BP_CharacterLocomotionSubJump_C_Set_Jump_Status::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Set_Jump_Status, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BP_CharacterLocomotionSubJump_C_Set_Jump_Status::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Set_Jump_Status, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000011, "Member 'BP_CharacterLocomotionSubJump_C_Set_Jump_Status::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Set_Jump_Status, CallFunc_GetCharacter_Character) == 0x000018, "Member 'BP_CharacterLocomotionSubJump_C_Set_Jump_Status::CallFunc_GetCharacter_Character' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Set_Jump_Status, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000020, "Member 'BP_CharacterLocomotionSubJump_C_Set_Jump_Status::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Set_Jump_Status, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'BP_CharacterLocomotionSubJump_C_Set_Jump_Status::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Set_Jump_Status, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000040, "Member 'BP_CharacterLocomotionSubJump_C_Set_Jump_Status::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Set_Jump_Status, CallFunc_UpdateRunningAction_OutIsChangeAction) == 0x000048, "Member 'BP_CharacterLocomotionSubJump_C_Set_Jump_Status::CallFunc_UpdateRunningAction_OutIsChangeAction' has a wrong offset!");

// Function BP_CharacterLocomotionSubJump.BP_CharacterLocomotionSubJump_C.Start
// 0x0148 (0x0148 - 0x0000)
struct BP_CharacterLocomotionSubJump_C_Start final
{
public:
	class UBP_CharacterLocomotionComponent_C*     InLocomotionComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          InInSkip;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_1;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDashJumpZVelocity_ReturnValue;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMovementParameterJumpZVelocity_ReturnValue; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement;   // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_2;             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDashJumpXYVelocity_ReturnValue;        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_2; // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Start_NewParam;                           // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_3; // 0x0108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPawn_Pawn;                             // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_4; // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_JumpZVelocity_ImplicitCast;     // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_JumpZVelocity_ImplicitCast_1;   // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubJump_C_Start) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubJump_C_Start");
static_assert(sizeof(BP_CharacterLocomotionSubJump_C_Start) == 0x000148, "Wrong size on BP_CharacterLocomotionSubJump_C_Start");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Start, InLocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubJump_C_Start::InLocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Start, InInSkip) == 0x000008, "Member 'BP_CharacterLocomotionSubJump_C_Start::InInSkip' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Start, NewParam) == 0x000009, "Member 'BP_CharacterLocomotionSubJump_C_Start::NewParam' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Start, CallFunc_GetSSCharacter_SSCharacter) == 0x000010, "Member 'BP_CharacterLocomotionSubJump_C_Start::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Start, CallFunc_GetSSCharacter_SSCharacter_1) == 0x000018, "Member 'BP_CharacterLocomotionSubJump_C_Start::CallFunc_GetSSCharacter_SSCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Start, CallFunc_GetDashJumpZVelocity_ReturnValue) == 0x000020, "Member 'BP_CharacterLocomotionSubJump_C_Start::CallFunc_GetDashJumpZVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Start, CallFunc_GetMovementParameterJumpZVelocity_ReturnValue) == 0x000024, "Member 'BP_CharacterLocomotionSubJump_C_Start::CallFunc_GetMovementParameterJumpZVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Start, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000028, "Member 'BP_CharacterLocomotionSubJump_C_Start::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Start, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000030, "Member 'BP_CharacterLocomotionSubJump_C_Start::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Start, CallFunc_GetCharacterMovement_CharacterMovement) == 0x000038, "Member 'BP_CharacterLocomotionSubJump_C_Start::CallFunc_GetCharacterMovement_CharacterMovement' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Start, CallFunc_BreakVector_X) == 0x000040, "Member 'BP_CharacterLocomotionSubJump_C_Start::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Start, CallFunc_BreakVector_Y) == 0x000048, "Member 'BP_CharacterLocomotionSubJump_C_Start::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Start, CallFunc_BreakVector_Z) == 0x000050, "Member 'BP_CharacterLocomotionSubJump_C_Start::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Start, CallFunc_GetSSCharacter_SSCharacter_2) == 0x000058, "Member 'BP_CharacterLocomotionSubJump_C_Start::CallFunc_GetSSCharacter_SSCharacter_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Start, CallFunc_MakeVector_ReturnValue) == 0x000060, "Member 'BP_CharacterLocomotionSubJump_C_Start::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Start, CallFunc_GetDashJumpXYVelocity_ReturnValue) == 0x000078, "Member 'BP_CharacterLocomotionSubJump_C_Start::CallFunc_GetDashJumpXYVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Start, CallFunc_Normal_ReturnValue) == 0x000080, "Member 'BP_CharacterLocomotionSubJump_C_Start::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Start, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000098, "Member 'BP_CharacterLocomotionSubJump_C_Start::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Start, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000B0, "Member 'BP_CharacterLocomotionSubJump_C_Start::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Start, CallFunc_BreakVector_X_1) == 0x0000C8, "Member 'BP_CharacterLocomotionSubJump_C_Start::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Start, CallFunc_BreakVector_Y_1) == 0x0000D0, "Member 'BP_CharacterLocomotionSubJump_C_Start::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Start, CallFunc_BreakVector_Z_1) == 0x0000D8, "Member 'BP_CharacterLocomotionSubJump_C_Start::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Start, CallFunc_MakeVector_ReturnValue_1) == 0x0000E0, "Member 'BP_CharacterLocomotionSubJump_C_Start::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Start, CallFunc_GetLocomotionComponent_LocomotionComponent_2) == 0x0000F8, "Member 'BP_CharacterLocomotionSubJump_C_Start::CallFunc_GetLocomotionComponent_LocomotionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Start, CallFunc_Start_NewParam) == 0x000100, "Member 'BP_CharacterLocomotionSubJump_C_Start::CallFunc_Start_NewParam' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Start, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000101, "Member 'BP_CharacterLocomotionSubJump_C_Start::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Start, CallFunc_GetLocomotionComponent_LocomotionComponent_3) == 0x000108, "Member 'BP_CharacterLocomotionSubJump_C_Start::CallFunc_GetLocomotionComponent_LocomotionComponent_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Start, CallFunc_GetPawn_Pawn) == 0x000110, "Member 'BP_CharacterLocomotionSubJump_C_Start::CallFunc_GetPawn_Pawn' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Start, CallFunc_GetLocomotionComponent_LocomotionComponent_4) == 0x000118, "Member 'BP_CharacterLocomotionSubJump_C_Start::CallFunc_GetLocomotionComponent_LocomotionComponent_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Start, CallFunc_GetVelocity_ReturnValue) == 0x000120, "Member 'BP_CharacterLocomotionSubJump_C_Start::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Start, K2Node_VariableSet_JumpZVelocity_ImplicitCast) == 0x000138, "Member 'BP_CharacterLocomotionSubJump_C_Start::K2Node_VariableSet_JumpZVelocity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Start, K2Node_VariableSet_JumpZVelocity_ImplicitCast_1) == 0x000140, "Member 'BP_CharacterLocomotionSubJump_C_Start::K2Node_VariableSet_JumpZVelocity_ImplicitCast_1' has a wrong offset!");

// Function BP_CharacterLocomotionSubJump.BP_CharacterLocomotionSubJump_C.StartJumpUp
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterLocomotionSubJump_C_StartJumpUp final
{
public:
	class ACharacter*                             CallFunc_GetCharacter_Character;                   // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubJump_C_StartJumpUp) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubJump_C_StartJumpUp");
static_assert(sizeof(BP_CharacterLocomotionSubJump_C_StartJumpUp) == 0x000008, "Wrong size on BP_CharacterLocomotionSubJump_C_StartJumpUp");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_StartJumpUp, CallFunc_GetCharacter_Character) == 0x000000, "Member 'BP_CharacterLocomotionSubJump_C_StartJumpUp::CallFunc_GetCharacter_Character' has a wrong offset!");

// Function BP_CharacterLocomotionSubJump.BP_CharacterLocomotionSubJump_C.StopJump
// 0x0020 (0x0020 - 0x0000)
struct BP_CharacterLocomotionSubJump_C_StopJump final
{
public:
	bool                                          InChangeJumpToFly;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetCharacter_Character;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubJump_C_StopJump) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubJump_C_StopJump");
static_assert(sizeof(BP_CharacterLocomotionSubJump_C_StopJump) == 0x000020, "Wrong size on BP_CharacterLocomotionSubJump_C_StopJump");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_StopJump, InChangeJumpToFly) == 0x000000, "Member 'BP_CharacterLocomotionSubJump_C_StopJump::InChangeJumpToFly' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_StopJump, CallFunc_GetCharacter_Character) == 0x000008, "Member 'BP_CharacterLocomotionSubJump_C_StopJump::CallFunc_GetCharacter_Character' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_StopJump, CallFunc_BooleanAND_ReturnValue) == 0x000010, "Member 'BP_CharacterLocomotionSubJump_C_StopJump::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_StopJump, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000018, "Member 'BP_CharacterLocomotionSubJump_C_StopJump::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");

// Function BP_CharacterLocomotionSubJump.BP_CharacterLocomotionSubJump_C.Update
// 0x04B8 (0x04B8 - 0x0000)
struct BP_CharacterLocomotionSubJump_C_Update final
{
public:
	class UBP_CharacterLocomotionComponent_C*     InLocomotionComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ECharacterLocomotionEventType                 InEventType;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        InDeltaSeconds;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 Temp_byte_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_2; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_3; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckDragonDash_ChangeDragonDash;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckStep_ChangeStep;                     // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 CallFunc_GetMovementMode_MovementMode;             // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57[0x1];                                       // 0x0057(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_4; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_5; // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_6; // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_7; // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetCharacter_Character;                   // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_8; // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckDragonDash_ChangeDragonDash_1;       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_9; // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckStep_ChangeStep_1;                   // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_10; // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_11; // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 Temp_byte_Variable_1;                              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_12; // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckShortDash_IsStartShortDash;          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement;   // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_13; // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_1; // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 CallFunc_GetMovementMode_MovementMode_1;           // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFindFloorResult                       CallFunc_K2_FindFloor_FloorResult;                 // 0x0120(0x00F8)(NoDestructor, ContainsInstancedReference)
	bool                                          Temp_bool_Variable_11;                             // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21B[0x1];                                      // 0x021B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0298(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWalkableSlopeOverride                 CallFunc_GetWalkableSlopeOverride_ReturnValue;     // 0x02F0(0x0010)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0302(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_303[0x5];                                      // 0x0303(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPawn_Pawn;                             // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_14; // 0x0310(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckStep_ChangeStep_2;                   // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_15; // 0x0350(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckDragonDash_ChangeDragonDash_2;       // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0362(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_363[0x5];                                      // 0x0363(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPawn_Pawn_1;                           // 0x0368(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue_1;                // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0390(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize2D_ReturnValue;                      // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnableMovementInput_IsEnable;           // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AA[0x6];                                      // 0x03AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_16; // 0x03B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BA[0x6];                                      // 0x03BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_17; // 0x03C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 CallFunc_GetMovementMode_MovementMode_2;           // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1[0x7];                                      // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetCharacter_Character_1;                 // 0x03D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 CallFunc_GetMovementMode_MovementMode_3;           // 0x03E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E2[0x6];                                      // 0x03E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_18; // 0x03E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_19; // 0x03F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 CallFunc_GetMovementMode_MovementMode_4;           // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0401(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0402(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_403[0x5];                                      // 0x0403(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetCharacter_Character_2;                 // 0x0408(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_411[0x7];                                      // 0x0411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_20; // 0x0418(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_421[0x7];                                      // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_21; // 0x0428(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_22; // 0x0438(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_23; // 0x0440(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0449(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44A[0x6];                                      // 0x044A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_24; // 0x0450(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_25; // 0x0458(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_14;                             // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_26; // 0x0468(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_15;                             // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0471(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_472[0x6];                                      // 0x0472(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_27; // 0x0478(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_16;                             // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x0481(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_17;                             // 0x0482(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_483[0x5];                                      // 0x0483(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPawn_Pawn_2;                           // 0x0488(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_18;                             // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_19;                             // 0x0491(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_492[0x6];                                      // 0x0492(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_28; // 0x0498(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_20;                             // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_2;    // 0x04A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A2[0x6];                                      // 0x04A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_29; // 0x04A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x04B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 Temp_byte_Variable_2;                              // 0x04B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x04B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_2;                           // 0x04B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Update_NewParam;                          // 0x04B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x04B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubJump_C_Update) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubJump_C_Update");
static_assert(sizeof(BP_CharacterLocomotionSubJump_C_Update) == 0x0004B8, "Wrong size on BP_CharacterLocomotionSubJump_C_Update");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, InLocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubJump_C_Update::InLocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, InEventType) == 0x000008, "Member 'BP_CharacterLocomotionSubJump_C_Update::InEventType' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, InDeltaSeconds) == 0x000010, "Member 'BP_CharacterLocomotionSubJump_C_Update::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, NewParam) == 0x000018, "Member 'BP_CharacterLocomotionSubJump_C_Update::NewParam' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, Temp_bool_Variable) == 0x000019, "Member 'BP_CharacterLocomotionSubJump_C_Update::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, K2Node_SwitchEnum_CmpSuccess) == 0x00001A, "Member 'BP_CharacterLocomotionSubJump_C_Update::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000020, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000028, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000029, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, Temp_bool_Variable_1) == 0x00002A, "Member 'BP_CharacterLocomotionSubJump_C_Update::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, Temp_bool_Variable_2) == 0x00002B, "Member 'BP_CharacterLocomotionSubJump_C_Update::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, Temp_bool_Variable_3) == 0x00002C, "Member 'BP_CharacterLocomotionSubJump_C_Update::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000030, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, Temp_byte_Variable) == 0x000038, "Member 'BP_CharacterLocomotionSubJump_C_Update::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_2) == 0x000040, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_3) == 0x000048, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_CheckDragonDash_ChangeDragonDash) == 0x000050, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_CheckDragonDash_ChangeDragonDash' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_CheckStep_ChangeStep) == 0x000051, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_CheckStep_ChangeStep' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, Temp_bool_Variable_4) == 0x000052, "Member 'BP_CharacterLocomotionSubJump_C_Update::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetMovementMode_MovementMode) == 0x000053, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetMovementMode_MovementMode' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, Temp_bool_Variable_5) == 0x000054, "Member 'BP_CharacterLocomotionSubJump_C_Update::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, K2Node_SwitchEnum_CmpSuccess_1) == 0x000055, "Member 'BP_CharacterLocomotionSubJump_C_Update::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, Temp_bool_Variable_6) == 0x000056, "Member 'BP_CharacterLocomotionSubJump_C_Update::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_4) == 0x000058, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, Temp_bool_Variable_7) == 0x000060, "Member 'BP_CharacterLocomotionSubJump_C_Update::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_5) == 0x000068, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, Temp_bool_Variable_8) == 0x000070, "Member 'BP_CharacterLocomotionSubJump_C_Update::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, Temp_bool_Variable_9) == 0x000071, "Member 'BP_CharacterLocomotionSubJump_C_Update::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_6) == 0x000078, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_6' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_7) == 0x000080, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_7' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, Temp_bool_Variable_10) == 0x000088, "Member 'BP_CharacterLocomotionSubJump_C_Update::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetCharacter_Character) == 0x000090, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetCharacter_Character' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_8) == 0x000098, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_8' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_CheckDragonDash_ChangeDragonDash_1) == 0x0000A0, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_CheckDragonDash_ChangeDragonDash_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_9) == 0x0000A8, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_9' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_CheckStep_ChangeStep_1) == 0x0000B0, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_CheckStep_ChangeStep_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_10) == 0x0000B8, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_10' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_11) == 0x0000C0, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_11' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, Temp_byte_Variable_1) == 0x0000C8, "Member 'BP_CharacterLocomotionSubJump_C_Update::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000C9, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_12) == 0x0000D0, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_12' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_CheckShortDash_IsStartShortDash) == 0x0000D8, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_CheckShortDash_IsStartShortDash' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetCharacterMovement_CharacterMovement) == 0x0000E0, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetCharacterMovement_CharacterMovement' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_13) == 0x0000E8, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_13' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetCharacterMovement_CharacterMovement_1) == 0x0000F0, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetCharacterMovement_CharacterMovement_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetMovementMode_MovementMode_1) == 0x0000F8, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetMovementMode_MovementMode_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000100, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000118, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_K2_FindFloor_FloorResult) == 0x000120, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_K2_FindFloor_FloorResult' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, Temp_bool_Variable_11) == 0x000218, "Member 'BP_CharacterLocomotionSubJump_C_Update::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_BreakHitResult_bBlockingHit) == 0x000219, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_BreakHitResult_bInitialOverlap) == 0x00021A, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_BreakHitResult_Time) == 0x00021C, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_BreakHitResult_Distance) == 0x000220, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_BreakHitResult_Location) == 0x000228, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_BreakHitResult_ImpactPoint) == 0x000240, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_BreakHitResult_Normal) == 0x000258, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_BreakHitResult_ImpactNormal) == 0x000270, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_BreakHitResult_PhysMat) == 0x000288, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_BreakHitResult_HitActor) == 0x000290, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_BreakHitResult_HitComponent) == 0x000298, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_BreakHitResult_HitBoneName) == 0x0002A0, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_BreakHitResult_BoneName) == 0x0002A8, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_BreakHitResult_HitItem) == 0x0002B0, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_BreakHitResult_ElementIndex) == 0x0002B4, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_BreakHitResult_FaceIndex) == 0x0002B8, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_BreakHitResult_TraceStart) == 0x0002C0, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_BreakHitResult_TraceEnd) == 0x0002D8, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetWalkableSlopeOverride_ReturnValue) == 0x0002F0, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetWalkableSlopeOverride_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_Not_PreBool_ReturnValue) == 0x000300, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_BooleanAND_ReturnValue) == 0x000301, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000302, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetPawn_Pawn) == 0x000308, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetPawn_Pawn' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_14) == 0x000310, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_14' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetVelocity_ReturnValue) == 0x000318, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_CheckStep_ChangeStep_2) == 0x000330, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_CheckStep_ChangeStep_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_BreakVector_X) == 0x000338, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_BreakVector_Y) == 0x000340, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_BreakVector_Z) == 0x000348, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_15) == 0x000350, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_15' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_Abs_ReturnValue) == 0x000358, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_CheckDragonDash_ChangeDragonDash_2) == 0x000360, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_CheckDragonDash_ChangeDragonDash_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000361, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000362, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetPawn_Pawn_1) == 0x000368, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetPawn_Pawn_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetVelocity_ReturnValue_1) == 0x000370, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetVelocity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, Temp_bool_Variable_12) == 0x000388, "Member 'BP_CharacterLocomotionSubJump_C_Update::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000390, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_VSize2D_ReturnValue) == 0x0003A0, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x0003A8, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_IsEnableMovementInput_IsEnable) == 0x0003A9, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_IsEnableMovementInput_IsEnable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_16) == 0x0003B0, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_16' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0003B8, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, Temp_bool_Variable_13) == 0x0003B9, "Member 'BP_CharacterLocomotionSubJump_C_Update::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0003C0, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_17) == 0x0003C8, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_17' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetMovementMode_MovementMode_2) == 0x0003D0, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetMovementMode_MovementMode_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetCharacter_Character_1) == 0x0003D8, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetCharacter_Character_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, K2Node_Select_Default) == 0x0003E0, "Member 'BP_CharacterLocomotionSubJump_C_Update::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetMovementMode_MovementMode_3) == 0x0003E1, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetMovementMode_MovementMode_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_18) == 0x0003E8, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_18' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, K2Node_Select_Default_1) == 0x0003F0, "Member 'BP_CharacterLocomotionSubJump_C_Update::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_19) == 0x0003F8, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_19' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetMovementMode_MovementMode_4) == 0x000400, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetMovementMode_MovementMode_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_BooleanAND_ReturnValue_1) == 0x000401, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000402, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetCharacter_Character_2) == 0x000408, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetCharacter_Character_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_BooleanAND_ReturnValue_2) == 0x000410, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_20) == 0x000418, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_20' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_BooleanAND_ReturnValue_3) == 0x000420, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_21) == 0x000428, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_21' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000430, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_22) == 0x000438, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_22' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_23) == 0x000440, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_23' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000448, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000449, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_24) == 0x000450, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_24' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_25) == 0x000458, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_25' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, Temp_bool_Variable_14) == 0x000460, "Member 'BP_CharacterLocomotionSubJump_C_Update::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_26) == 0x000468, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_26' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, Temp_bool_Variable_15) == 0x000470, "Member 'BP_CharacterLocomotionSubJump_C_Update::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, K2Node_SwitchEnum_CmpSuccess_2) == 0x000471, "Member 'BP_CharacterLocomotionSubJump_C_Update::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_27) == 0x000478, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_27' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, Temp_bool_Variable_16) == 0x000480, "Member 'BP_CharacterLocomotionSubJump_C_Update::Temp_bool_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x000481, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, Temp_bool_Variable_17) == 0x000482, "Member 'BP_CharacterLocomotionSubJump_C_Update::Temp_bool_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetPawn_Pawn_2) == 0x000488, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetPawn_Pawn_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, Temp_bool_Variable_18) == 0x000490, "Member 'BP_CharacterLocomotionSubJump_C_Update::Temp_bool_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, Temp_bool_Variable_19) == 0x000491, "Member 'BP_CharacterLocomotionSubJump_C_Update::Temp_bool_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_28) == 0x000498, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_28' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, Temp_bool_Variable_20) == 0x0004A0, "Member 'BP_CharacterLocomotionSubJump_C_Update::Temp_bool_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_EqualEqual_DoubleDouble_ReturnValue_2) == 0x0004A1, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_EqualEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_29) == 0x0004A8, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_29' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0004B0, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x0004B1, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, Temp_byte_Variable_2) == 0x0004B2, "Member 'BP_CharacterLocomotionSubJump_C_Update::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, K2Node_SwitchEnum_CmpSuccess_3) == 0x0004B3, "Member 'BP_CharacterLocomotionSubJump_C_Update::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, K2Node_Select_Default_2) == 0x0004B4, "Member 'BP_CharacterLocomotionSubJump_C_Update::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, CallFunc_Update_NewParam) == 0x0004B5, "Member 'BP_CharacterLocomotionSubJump_C_Update::CallFunc_Update_NewParam' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_Update, K2Node_SwitchEnum_CmpSuccess_4) == 0x0004B6, "Member 'BP_CharacterLocomotionSubJump_C_Update::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");

// Function BP_CharacterLocomotionSubJump.BP_CharacterLocomotionSubJump_C.UpdateRotationJump
// 0x0068 (0x0068 - 0x0000)
struct BP_CharacterLocomotionSubJump_C_UpdateRotationJump final
{
public:
	struct FRotator                               CallFunc_GetRotation_Rotation;                     // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetUseCharacterRotationPitch_UsePitch;    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Rotation_IsSuccessfully;              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubJump_C_UpdateRotationJump) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubJump_C_UpdateRotationJump");
static_assert(sizeof(BP_CharacterLocomotionSubJump_C_UpdateRotationJump) == 0x000068, "Wrong size on BP_CharacterLocomotionSubJump_C_UpdateRotationJump");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_UpdateRotationJump, CallFunc_GetRotation_Rotation) == 0x000000, "Member 'BP_CharacterLocomotionSubJump_C_UpdateRotationJump::CallFunc_GetRotation_Rotation' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_UpdateRotationJump, CallFunc_GetUseCharacterRotationPitch_UsePitch) == 0x000018, "Member 'BP_CharacterLocomotionSubJump_C_UpdateRotationJump::CallFunc_GetUseCharacterRotationPitch_UsePitch' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_UpdateRotationJump, CallFunc_BreakRotator_Roll) == 0x00001C, "Member 'BP_CharacterLocomotionSubJump_C_UpdateRotationJump::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_UpdateRotationJump, CallFunc_BreakRotator_Pitch) == 0x000020, "Member 'BP_CharacterLocomotionSubJump_C_UpdateRotationJump::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_UpdateRotationJump, CallFunc_BreakRotator_Yaw) == 0x000024, "Member 'BP_CharacterLocomotionSubJump_C_UpdateRotationJump::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_UpdateRotationJump, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000028, "Member 'BP_CharacterLocomotionSubJump_C_UpdateRotationJump::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_UpdateRotationJump, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000030, "Member 'BP_CharacterLocomotionSubJump_C_UpdateRotationJump::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_UpdateRotationJump, CallFunc_BreakRotator_Roll_1) == 0x000038, "Member 'BP_CharacterLocomotionSubJump_C_UpdateRotationJump::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_UpdateRotationJump, CallFunc_BreakRotator_Pitch_1) == 0x00003C, "Member 'BP_CharacterLocomotionSubJump_C_UpdateRotationJump::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_UpdateRotationJump, CallFunc_BreakRotator_Yaw_1) == 0x000040, "Member 'BP_CharacterLocomotionSubJump_C_UpdateRotationJump::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_UpdateRotationJump, CallFunc_MakeRotator_ReturnValue) == 0x000048, "Member 'BP_CharacterLocomotionSubJump_C_UpdateRotationJump::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubJump_C_UpdateRotationJump, CallFunc_Set_Rotation_IsSuccessfully) == 0x000060, "Member 'BP_CharacterLocomotionSubJump_C_UpdateRotationJump::CallFunc_Set_Rotation_IsSuccessfully' has a wrong offset!");

}

