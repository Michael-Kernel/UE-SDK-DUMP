#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterLocomotionSubShortDash

#include "Basic.hpp"

#include "SS_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ECharacterLocomotionEventType_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_CharacterLocomotionSubShortDash.BP_CharacterLocomotionSubShortDash_C.Check
// 0x00D0 (0x00D0 - 0x0000)
struct BP_CharacterLocomotionSubShortDash_C_Check final
{
public:
	class UBP_CharacterLocomotionComponent_C*     InLocomotionComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CanStart;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratActionDataList                   HomingJump;                                        // 0x000C(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CallFunc_GetShortDashParameter____________;        // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter_________;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter______;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter____;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter_OT_________;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter_____;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShortDashParameter______________;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetShortDashParameter________;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter_______1;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckSPCosumable_ReturnValue;             // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetShortDashCoolTime_ReturnValue;         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_1;             // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_2; // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratActionDataList                   CallFunc_________________CurrentAction;            // 0x00A4(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_3; // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_4; // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_CanStart;                           // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x2];                                       // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CheckSPCosumable_InSpCost_ImplicitCast;   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubShortDash_C_Check) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubShortDash_C_Check");
static_assert(sizeof(BP_CharacterLocomotionSubShortDash_C_Check) == 0x0000D0, "Wrong size on BP_CharacterLocomotionSubShortDash_C_Check");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Check, InLocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubShortDash_C_Check::InLocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Check, CanStart) == 0x000008, "Member 'BP_CharacterLocomotionSubShortDash_C_Check::CanStart' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Check, HomingJump) == 0x00000C, "Member 'BP_CharacterLocomotionSubShortDash_C_Check::HomingJump' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Check, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000018, "Member 'BP_CharacterLocomotionSubShortDash_C_Check::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Check, CallFunc_GetSSCharacter_SSCharacter) == 0x000020, "Member 'BP_CharacterLocomotionSubShortDash_C_Check::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Check, CallFunc_GetShortDashParameter____________) == 0x000028, "Member 'BP_CharacterLocomotionSubShortDash_C_Check::CallFunc_GetShortDashParameter____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Check, CallFunc_GetShortDashParameter_________) == 0x000030, "Member 'BP_CharacterLocomotionSubShortDash_C_Check::CallFunc_GetShortDashParameter_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Check, CallFunc_GetShortDashParameter______) == 0x000038, "Member 'BP_CharacterLocomotionSubShortDash_C_Check::CallFunc_GetShortDashParameter______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Check, CallFunc_GetShortDashParameter____) == 0x000040, "Member 'BP_CharacterLocomotionSubShortDash_C_Check::CallFunc_GetShortDashParameter____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Check, CallFunc_GetShortDashParameter_OT_________) == 0x000048, "Member 'BP_CharacterLocomotionSubShortDash_C_Check::CallFunc_GetShortDashParameter_OT_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Check, CallFunc_GetShortDashParameter_____) == 0x000050, "Member 'BP_CharacterLocomotionSubShortDash_C_Check::CallFunc_GetShortDashParameter_____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Check, CallFunc_GetShortDashParameter______________) == 0x000058, "Member 'BP_CharacterLocomotionSubShortDash_C_Check::CallFunc_GetShortDashParameter______________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Check, CallFunc_GetShortDashParameter________) == 0x000060, "Member 'BP_CharacterLocomotionSubShortDash_C_Check::CallFunc_GetShortDashParameter________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Check, CallFunc_GetShortDashParameter_______1) == 0x000068, "Member 'BP_CharacterLocomotionSubShortDash_C_Check::CallFunc_GetShortDashParameter_______1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Check, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000070, "Member 'BP_CharacterLocomotionSubShortDash_C_Check::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Check, CallFunc_CheckSPCosumable_ReturnValue) == 0x000071, "Member 'BP_CharacterLocomotionSubShortDash_C_Check::CallFunc_CheckSPCosumable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Check, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000078, "Member 'BP_CharacterLocomotionSubShortDash_C_Check::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Check, CallFunc_GetShortDashCoolTime_ReturnValue) == 0x000080, "Member 'BP_CharacterLocomotionSubShortDash_C_Check::CallFunc_GetShortDashCoolTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Check, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000084, "Member 'BP_CharacterLocomotionSubShortDash_C_Check::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Check, CallFunc_GetSSCharacter_SSCharacter_1) == 0x000088, "Member 'BP_CharacterLocomotionSubShortDash_C_Check::CallFunc_GetSSCharacter_SSCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Check, CallFunc_GetLocomotionComponent_LocomotionComponent_2) == 0x000090, "Member 'BP_CharacterLocomotionSubShortDash_C_Check::CallFunc_GetLocomotionComponent_LocomotionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Check, K2Node_DynamicCast_AsBP_Character) == 0x000098, "Member 'BP_CharacterLocomotionSubShortDash_C_Check::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Check, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BP_CharacterLocomotionSubShortDash_C_Check::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Check, CallFunc_________________CurrentAction) == 0x0000A4, "Member 'BP_CharacterLocomotionSubShortDash_C_Check::CallFunc_________________CurrentAction' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Check, CallFunc_NotEqual_NameName_ReturnValue) == 0x0000AC, "Member 'BP_CharacterLocomotionSubShortDash_C_Check::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Check, CallFunc_GetLocomotionComponent_LocomotionComponent_3) == 0x0000B0, "Member 'BP_CharacterLocomotionSubShortDash_C_Check::CallFunc_GetLocomotionComponent_LocomotionComponent_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Check, CallFunc_GetLocomotionComponent_LocomotionComponent_4) == 0x0000B8, "Member 'BP_CharacterLocomotionSubShortDash_C_Check::CallFunc_GetLocomotionComponent_LocomotionComponent_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Check, CallFunc_Not_PreBool_ReturnValue) == 0x0000C0, "Member 'BP_CharacterLocomotionSubShortDash_C_Check::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Check, CallFunc_Check_CanStart) == 0x0000C1, "Member 'BP_CharacterLocomotionSubShortDash_C_Check::CallFunc_Check_CanStart' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Check, CallFunc_CheckSPCosumable_InSpCost_ImplicitCast) == 0x0000C4, "Member 'BP_CharacterLocomotionSubShortDash_C_Check::CallFunc_CheckSPCosumable_InSpCost_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Check, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0000C8, "Member 'BP_CharacterLocomotionSubShortDash_C_Check::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubShortDash.BP_CharacterLocomotionSubShortDash_C.CheckAndStart
// 0x0020 (0x0020 - 0x0000)
struct BP_CharacterLocomotionSubShortDash_C_CheckAndStart final
{
public:
	class UBP_CharacterLocomotionComponent_C*     InLocomotionComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          InInSkip;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStarted;                                         // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_CanStart;                           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Start_NewParam;                           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckAndStart_IsStarted;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubShortDash_C_CheckAndStart) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubShortDash_C_CheckAndStart");
static_assert(sizeof(BP_CharacterLocomotionSubShortDash_C_CheckAndStart) == 0x000020, "Wrong size on BP_CharacterLocomotionSubShortDash_C_CheckAndStart");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_CheckAndStart, InLocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubShortDash_C_CheckAndStart::InLocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_CheckAndStart, InInSkip) == 0x000008, "Member 'BP_CharacterLocomotionSubShortDash_C_CheckAndStart::InInSkip' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_CheckAndStart, IsStarted) == 0x000009, "Member 'BP_CharacterLocomotionSubShortDash_C_CheckAndStart::IsStarted' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_CheckAndStart, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000010, "Member 'BP_CharacterLocomotionSubShortDash_C_CheckAndStart::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_CheckAndStart, CallFunc_Check_CanStart) == 0x000018, "Member 'BP_CharacterLocomotionSubShortDash_C_CheckAndStart::CallFunc_Check_CanStart' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_CheckAndStart, CallFunc_Start_NewParam) == 0x000019, "Member 'BP_CharacterLocomotionSubShortDash_C_CheckAndStart::CallFunc_Start_NewParam' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_CheckAndStart, CallFunc_CheckAndStart_IsStarted) == 0x00001A, "Member 'BP_CharacterLocomotionSubShortDash_C_CheckAndStart::CallFunc_CheckAndStart_IsStarted' has a wrong offset!");

// Function BP_CharacterLocomotionSubShortDash.BP_CharacterLocomotionSubShortDash_C.CheckRestartShortDash
// 0x0020 (0x0020 - 0x0000)
struct BP_CharacterLocomotionSubShortDash_C_CheckRestartShortDash final
{
public:
	bool                                          IsStart;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_CanStart;                           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Start_NewParam;                           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubShortDash_C_CheckRestartShortDash) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubShortDash_C_CheckRestartShortDash");
static_assert(sizeof(BP_CharacterLocomotionSubShortDash_C_CheckRestartShortDash) == 0x000020, "Wrong size on BP_CharacterLocomotionSubShortDash_C_CheckRestartShortDash");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_CheckRestartShortDash, IsStart) == 0x000000, "Member 'BP_CharacterLocomotionSubShortDash_C_CheckRestartShortDash::IsStart' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_CheckRestartShortDash, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000008, "Member 'BP_CharacterLocomotionSubShortDash_C_CheckRestartShortDash::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_CheckRestartShortDash, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000010, "Member 'BP_CharacterLocomotionSubShortDash_C_CheckRestartShortDash::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_CheckRestartShortDash, CallFunc_Check_CanStart) == 0x000018, "Member 'BP_CharacterLocomotionSubShortDash_C_CheckRestartShortDash::CallFunc_Check_CanStart' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_CheckRestartShortDash, CallFunc_Start_NewParam) == 0x000019, "Member 'BP_CharacterLocomotionSubShortDash_C_CheckRestartShortDash::CallFunc_Start_NewParam' has a wrong offset!");

// Function BP_CharacterLocomotionSubShortDash.BP_CharacterLocomotionSubShortDash_C.CheckShortDashKeyPressedAction
// 0x0048 (0x0048 - 0x0000)
struct BP_CharacterLocomotionSubShortDash_C_CheckShortDashKeyPressedAction final
{
public:
	bool                                          IsStartAction;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckJump_ChangeJump;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckDashUpDown_ChangeDashUpDown;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_2; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckStep_ChangeStep;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_3; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckDragonDash_ChangeDragonDash;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckRestartShortDash_IsStart;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubShortDash_C_CheckShortDashKeyPressedAction) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubShortDash_C_CheckShortDashKeyPressedAction");
static_assert(sizeof(BP_CharacterLocomotionSubShortDash_C_CheckShortDashKeyPressedAction) == 0x000048, "Wrong size on BP_CharacterLocomotionSubShortDash_C_CheckShortDashKeyPressedAction");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_CheckShortDashKeyPressedAction, IsStartAction) == 0x000000, "Member 'BP_CharacterLocomotionSubShortDash_C_CheckShortDashKeyPressedAction::IsStartAction' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_CheckShortDashKeyPressedAction, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000008, "Member 'BP_CharacterLocomotionSubShortDash_C_CheckShortDashKeyPressedAction::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_CheckShortDashKeyPressedAction, CallFunc_CheckJump_ChangeJump) == 0x000010, "Member 'BP_CharacterLocomotionSubShortDash_C_CheckShortDashKeyPressedAction::CallFunc_CheckJump_ChangeJump' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_CheckShortDashKeyPressedAction, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000018, "Member 'BP_CharacterLocomotionSubShortDash_C_CheckShortDashKeyPressedAction::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_CheckShortDashKeyPressedAction, CallFunc_CheckDashUpDown_ChangeDashUpDown) == 0x000020, "Member 'BP_CharacterLocomotionSubShortDash_C_CheckShortDashKeyPressedAction::CallFunc_CheckDashUpDown_ChangeDashUpDown' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_CheckShortDashKeyPressedAction, CallFunc_GetLocomotionComponent_LocomotionComponent_2) == 0x000028, "Member 'BP_CharacterLocomotionSubShortDash_C_CheckShortDashKeyPressedAction::CallFunc_GetLocomotionComponent_LocomotionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_CheckShortDashKeyPressedAction, CallFunc_CheckStep_ChangeStep) == 0x000030, "Member 'BP_CharacterLocomotionSubShortDash_C_CheckShortDashKeyPressedAction::CallFunc_CheckStep_ChangeStep' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_CheckShortDashKeyPressedAction, CallFunc_GetLocomotionComponent_LocomotionComponent_3) == 0x000038, "Member 'BP_CharacterLocomotionSubShortDash_C_CheckShortDashKeyPressedAction::CallFunc_GetLocomotionComponent_LocomotionComponent_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_CheckShortDashKeyPressedAction, CallFunc_CheckDragonDash_ChangeDragonDash) == 0x000040, "Member 'BP_CharacterLocomotionSubShortDash_C_CheckShortDashKeyPressedAction::CallFunc_CheckDragonDash_ChangeDragonDash' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_CheckShortDashKeyPressedAction, CallFunc_CheckRestartShortDash_IsStart) == 0x000041, "Member 'BP_CharacterLocomotionSubShortDash_C_CheckShortDashKeyPressedAction::CallFunc_CheckRestartShortDash_IsStart' has a wrong offset!");

// Function BP_CharacterLocomotionSubShortDash.BP_CharacterLocomotionSubShortDash_C.ConsumeSPShortDashIN
// 0x0058 (0x0058 - 0x0000)
struct BP_CharacterLocomotionSubShortDash_C_ConsumeSPShortDashIN final
{
public:
	class UCurveFloat*                            CallFunc_GetShortDashParameter____________;        // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter_________;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter______;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter____;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter_OT_________;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter_____;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShortDashParameter______________;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetShortDashParameter________;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter_______1;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ConsumeSP_InSpCost_ImplicitCast;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubShortDash_C_ConsumeSPShortDashIN) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubShortDash_C_ConsumeSPShortDashIN");
static_assert(sizeof(BP_CharacterLocomotionSubShortDash_C_ConsumeSPShortDashIN) == 0x000058, "Wrong size on BP_CharacterLocomotionSubShortDash_C_ConsumeSPShortDashIN");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ConsumeSPShortDashIN, CallFunc_GetShortDashParameter____________) == 0x000000, "Member 'BP_CharacterLocomotionSubShortDash_C_ConsumeSPShortDashIN::CallFunc_GetShortDashParameter____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ConsumeSPShortDashIN, CallFunc_GetShortDashParameter_________) == 0x000008, "Member 'BP_CharacterLocomotionSubShortDash_C_ConsumeSPShortDashIN::CallFunc_GetShortDashParameter_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ConsumeSPShortDashIN, CallFunc_GetShortDashParameter______) == 0x000010, "Member 'BP_CharacterLocomotionSubShortDash_C_ConsumeSPShortDashIN::CallFunc_GetShortDashParameter______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ConsumeSPShortDashIN, CallFunc_GetShortDashParameter____) == 0x000018, "Member 'BP_CharacterLocomotionSubShortDash_C_ConsumeSPShortDashIN::CallFunc_GetShortDashParameter____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ConsumeSPShortDashIN, CallFunc_GetShortDashParameter_OT_________) == 0x000020, "Member 'BP_CharacterLocomotionSubShortDash_C_ConsumeSPShortDashIN::CallFunc_GetShortDashParameter_OT_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ConsumeSPShortDashIN, CallFunc_GetShortDashParameter_____) == 0x000028, "Member 'BP_CharacterLocomotionSubShortDash_C_ConsumeSPShortDashIN::CallFunc_GetShortDashParameter_____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ConsumeSPShortDashIN, CallFunc_GetShortDashParameter______________) == 0x000030, "Member 'BP_CharacterLocomotionSubShortDash_C_ConsumeSPShortDashIN::CallFunc_GetShortDashParameter______________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ConsumeSPShortDashIN, CallFunc_GetShortDashParameter________) == 0x000038, "Member 'BP_CharacterLocomotionSubShortDash_C_ConsumeSPShortDashIN::CallFunc_GetShortDashParameter________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ConsumeSPShortDashIN, CallFunc_GetShortDashParameter_______1) == 0x000040, "Member 'BP_CharacterLocomotionSubShortDash_C_ConsumeSPShortDashIN::CallFunc_GetShortDashParameter_______1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ConsumeSPShortDashIN, CallFunc_GetSSCharacter_SSCharacter) == 0x000048, "Member 'BP_CharacterLocomotionSubShortDash_C_ConsumeSPShortDashIN::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ConsumeSPShortDashIN, CallFunc_ConsumeSP_InSpCost_ImplicitCast) == 0x000050, "Member 'BP_CharacterLocomotionSubShortDash_C_ConsumeSPShortDashIN::CallFunc_ConsumeSP_InSpCost_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubShortDash.BP_CharacterLocomotionSubShortDash_C.GetLocomotionDetailStatus
// 0x0006 (0x0006 - 0x0000)
struct BP_CharacterLocomotionSubShortDash_C_GetLocomotionDetailStatus final
{
public:
	EKoratCharacterLocomotionDetailStatus         LocomotionDetailStatus;                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratShortDashState                          Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubShortDash_C_GetLocomotionDetailStatus) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubShortDash_C_GetLocomotionDetailStatus");
static_assert(sizeof(BP_CharacterLocomotionSubShortDash_C_GetLocomotionDetailStatus) == 0x000006, "Wrong size on BP_CharacterLocomotionSubShortDash_C_GetLocomotionDetailStatus");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_GetLocomotionDetailStatus, LocomotionDetailStatus) == 0x000000, "Member 'BP_CharacterLocomotionSubShortDash_C_GetLocomotionDetailStatus::LocomotionDetailStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_GetLocomotionDetailStatus, Temp_byte_Variable) == 0x000001, "Member 'BP_CharacterLocomotionSubShortDash_C_GetLocomotionDetailStatus::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_GetLocomotionDetailStatus, Temp_byte_Variable_1) == 0x000002, "Member 'BP_CharacterLocomotionSubShortDash_C_GetLocomotionDetailStatus::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_GetLocomotionDetailStatus, Temp_byte_Variable_2) == 0x000003, "Member 'BP_CharacterLocomotionSubShortDash_C_GetLocomotionDetailStatus::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_GetLocomotionDetailStatus, Temp_byte_Variable_3) == 0x000004, "Member 'BP_CharacterLocomotionSubShortDash_C_GetLocomotionDetailStatus::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_GetLocomotionDetailStatus, K2Node_Select_Default) == 0x000005, "Member 'BP_CharacterLocomotionSubShortDash_C_GetLocomotionDetailStatus::K2Node_Select_Default' has a wrong offset!");

// Function BP_CharacterLocomotionSubShortDash.BP_CharacterLocomotionSubShortDash_C.GetRunningAction
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterLocomotionSubShortDash_C_GetRunningAction final
{
public:
	struct FKoratActionDataList                   RunningAction;                                     // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubShortDash_C_GetRunningAction) == 0x000004, "Wrong alignment on BP_CharacterLocomotionSubShortDash_C_GetRunningAction");
static_assert(sizeof(BP_CharacterLocomotionSubShortDash_C_GetRunningAction) == 0x000008, "Wrong size on BP_CharacterLocomotionSubShortDash_C_GetRunningAction");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_GetRunningAction, RunningAction) == 0x000000, "Member 'BP_CharacterLocomotionSubShortDash_C_GetRunningAction::RunningAction' has a wrong offset!");

// Function BP_CharacterLocomotionSubShortDash.BP_CharacterLocomotionSubShortDash_C.GetRunningSection
// 0x000C (0x000C - 0x0000)
struct BP_CharacterLocomotionSubShortDash_C_GetRunningSection final
{
public:
	class FName                                   RunningSection;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubShortDash_C_GetRunningSection) == 0x000004, "Wrong alignment on BP_CharacterLocomotionSubShortDash_C_GetRunningSection");
static_assert(sizeof(BP_CharacterLocomotionSubShortDash_C_GetRunningSection) == 0x00000C, "Wrong size on BP_CharacterLocomotionSubShortDash_C_GetRunningSection");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_GetRunningSection, RunningSection) == 0x000000, "Member 'BP_CharacterLocomotionSubShortDash_C_GetRunningSection::RunningSection' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_GetRunningSection, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'BP_CharacterLocomotionSubShortDash_C_GetRunningSection::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_CharacterLocomotionSubShortDash.BP_CharacterLocomotionSubShortDash_C.GetShortDashParameter
// 0x0088 (0x0088 - 0x0000)
struct BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter final
{
public:
	class UCurveFloat*                            ___________;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        ________;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        _____;                                             // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ___;                                               // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OTxw_Y_LNB_;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __B_;                                              // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Minus_Bk______Y_K;                                 // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Minus_Bn___;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ______0;                                           // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult__________ImplicitCast;       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_______ImplicitCast;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_____ImplicitCast;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_OT__________ImplicitCast;    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult______ImplicitCast;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_________ImplicitCast;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_______ImplicitCast_1;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter");
static_assert(sizeof(BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter) == 0x000088, "Wrong size on BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter, ___________) == 0x000000, "Member 'BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter::___________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter, ________) == 0x000008, "Member 'BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter::________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter, _____) == 0x000010, "Member 'BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter::_____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter, ___) == 0x000018, "Member 'BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter::___' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter, OTxw_Y_LNB_) == 0x000020, "Member 'BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter::OTxw_Y_LNB_' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter, __B_) == 0x000028, "Member 'BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter::__B_' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter, Minus_Bk______Y_K) == 0x000030, "Member 'BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter::Minus_Bk______Y_K' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter, Minus_Bn___) == 0x000038, "Member 'BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter::Minus_Bn___' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter, ______0) == 0x000040, "Member 'BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter::______0' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000048, "Member 'BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter, K2Node_FunctionResult__________ImplicitCast) == 0x000050, "Member 'BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter::K2Node_FunctionResult__________ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter, K2Node_FunctionResult_______ImplicitCast) == 0x000058, "Member 'BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter::K2Node_FunctionResult_______ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter, K2Node_FunctionResult_____ImplicitCast) == 0x000060, "Member 'BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter::K2Node_FunctionResult_____ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter, K2Node_FunctionResult_OT__________ImplicitCast) == 0x000068, "Member 'BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter::K2Node_FunctionResult_OT__________ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter, K2Node_FunctionResult______ImplicitCast) == 0x000070, "Member 'BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter::K2Node_FunctionResult______ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter, K2Node_FunctionResult_________ImplicitCast) == 0x000078, "Member 'BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter::K2Node_FunctionResult_________ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter, K2Node_FunctionResult_______ImplicitCast_1) == 0x000080, "Member 'BP_CharacterLocomotionSubShortDash_C_GetShortDashParameter::K2Node_FunctionResult_______ImplicitCast_1' has a wrong offset!");

// Function BP_CharacterLocomotionSubShortDash.BP_CharacterLocomotionSubShortDash_C.IsEnableAction
// 0x0002 (0x0002 - 0x0000)
struct BP_CharacterLocomotionSubShortDash_C_IsEnableAction final
{
public:
	bool                                          IsEnable;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubShortDash_C_IsEnableAction) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubShortDash_C_IsEnableAction");
static_assert(sizeof(BP_CharacterLocomotionSubShortDash_C_IsEnableAction) == 0x000002, "Wrong size on BP_CharacterLocomotionSubShortDash_C_IsEnableAction");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_IsEnableAction, IsEnable) == 0x000000, "Member 'BP_CharacterLocomotionSubShortDash_C_IsEnableAction::IsEnable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_IsEnableAction, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_CharacterLocomotionSubShortDash_C_IsEnableAction::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_CharacterLocomotionSubShortDash.BP_CharacterLocomotionSubShortDash_C.IsUpdateSpeed
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterLocomotionSubShortDash_C_IsUpdateSpeed final
{
public:
	bool                                          IsUpdate;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubShortDash_C_IsUpdateSpeed) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubShortDash_C_IsUpdateSpeed");
static_assert(sizeof(BP_CharacterLocomotionSubShortDash_C_IsUpdateSpeed) == 0x000001, "Wrong size on BP_CharacterLocomotionSubShortDash_C_IsUpdateSpeed");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_IsUpdateSpeed, IsUpdate) == 0x000000, "Member 'BP_CharacterLocomotionSubShortDash_C_IsUpdateSpeed::IsUpdate' has a wrong offset!");

// Function BP_CharacterLocomotionSubShortDash.BP_CharacterLocomotionSubShortDash_C.SetShortDashCoolTime
// 0x0010 (0x0010 - 0x0000)
struct BP_CharacterLocomotionSubShortDash_C_SetShortDashCoolTime final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubShortDash_C_SetShortDashCoolTime) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubShortDash_C_SetShortDashCoolTime");
static_assert(sizeof(BP_CharacterLocomotionSubShortDash_C_SetShortDashCoolTime) == 0x000010, "Wrong size on BP_CharacterLocomotionSubShortDash_C_SetShortDashCoolTime");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashCoolTime, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashCoolTime::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashCoolTime, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000008, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashCoolTime::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");

// Function BP_CharacterLocomotionSubShortDash.BP_CharacterLocomotionSubShortDash_C.SetShortDashMovementParameter
// 0x0060 (0x0060 - 0x0000)
struct BP_CharacterLocomotionSubShortDash_C_SetShortDashMovementParameter final
{
public:
	class UCurveFloat*                            CallFunc_GetShortDashParameter____________;        // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter_________;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter______;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter____;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter_OT_________;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter_____;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShortDashParameter______________;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetShortDashParameter________;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter_______1;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement;   // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_1; // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxAcceleration_ImplicitCast;   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_BrakingDecelerationFlying_ImplicitCast; // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubShortDash_C_SetShortDashMovementParameter) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubShortDash_C_SetShortDashMovementParameter");
static_assert(sizeof(BP_CharacterLocomotionSubShortDash_C_SetShortDashMovementParameter) == 0x000060, "Wrong size on BP_CharacterLocomotionSubShortDash_C_SetShortDashMovementParameter");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashMovementParameter, CallFunc_GetShortDashParameter____________) == 0x000000, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashMovementParameter::CallFunc_GetShortDashParameter____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashMovementParameter, CallFunc_GetShortDashParameter_________) == 0x000008, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashMovementParameter::CallFunc_GetShortDashParameter_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashMovementParameter, CallFunc_GetShortDashParameter______) == 0x000010, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashMovementParameter::CallFunc_GetShortDashParameter______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashMovementParameter, CallFunc_GetShortDashParameter____) == 0x000018, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashMovementParameter::CallFunc_GetShortDashParameter____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashMovementParameter, CallFunc_GetShortDashParameter_OT_________) == 0x000020, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashMovementParameter::CallFunc_GetShortDashParameter_OT_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashMovementParameter, CallFunc_GetShortDashParameter_____) == 0x000028, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashMovementParameter::CallFunc_GetShortDashParameter_____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashMovementParameter, CallFunc_GetShortDashParameter______________) == 0x000030, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashMovementParameter::CallFunc_GetShortDashParameter______________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashMovementParameter, CallFunc_GetShortDashParameter________) == 0x000038, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashMovementParameter::CallFunc_GetShortDashParameter________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashMovementParameter, CallFunc_GetShortDashParameter_______1) == 0x000040, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashMovementParameter::CallFunc_GetShortDashParameter_______1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashMovementParameter, CallFunc_GetCharacterMovement_CharacterMovement) == 0x000048, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashMovementParameter::CallFunc_GetCharacterMovement_CharacterMovement' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashMovementParameter, CallFunc_GetCharacterMovement_CharacterMovement_1) == 0x000050, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashMovementParameter::CallFunc_GetCharacterMovement_CharacterMovement_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashMovementParameter, K2Node_VariableSet_MaxAcceleration_ImplicitCast) == 0x000058, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashMovementParameter::K2Node_VariableSet_MaxAcceleration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashMovementParameter, K2Node_VariableSet_BrakingDecelerationFlying_ImplicitCast) == 0x00005C, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashMovementParameter::K2Node_VariableSet_BrakingDecelerationFlying_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubShortDash.BP_CharacterLocomotionSubShortDash_C.SetShortDashStatus
// 0x0030 (0x0030 - 0x0000)
struct BP_CharacterLocomotionSubShortDash_C_SetShortDashStatus final
{
public:
	EKoratShortDashState                          InShortDashStatus;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterActionFinishReason             InActionFinishReason;                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_2; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateRunningAction_OutIsChangeAction;    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubShortDash_C_SetShortDashStatus) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubShortDash_C_SetShortDashStatus");
static_assert(sizeof(BP_CharacterLocomotionSubShortDash_C_SetShortDashStatus) == 0x000030, "Wrong size on BP_CharacterLocomotionSubShortDash_C_SetShortDashStatus");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashStatus, InShortDashStatus) == 0x000000, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashStatus::InShortDashStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashStatus, InActionFinishReason) == 0x000001, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashStatus::InActionFinishReason' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashStatus, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashStatus::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashStatus, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000008, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashStatus::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashStatus, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000010, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashStatus::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashStatus, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashStatus::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashStatus, CallFunc_GetLocomotionComponent_LocomotionComponent_2) == 0x000020, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashStatus::CallFunc_GetLocomotionComponent_LocomotionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashStatus, CallFunc_UpdateRunningAction_OutIsChangeAction) == 0x000028, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashStatus::CallFunc_UpdateRunningAction_OutIsChangeAction' has a wrong offset!");

// Function BP_CharacterLocomotionSubShortDash.BP_CharacterLocomotionSubShortDash_C.SetShortDashStopMovement
// 0x0070 (0x0070 - 0x0000)
struct BP_CharacterLocomotionSubShortDash_C_SetShortDashStopMovement final
{
public:
	class UCurveFloat*                            CallFunc_GetShortDashParameter____________;        // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter_________;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter______;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter____;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter_OT_________;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter_____;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShortDashParameter______________;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetShortDashParameter________;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter_______1;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement;   // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_1; // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_2; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_3; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_BrakingDecelerationWalking_ImplicitCast; // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubShortDash_C_SetShortDashStopMovement) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubShortDash_C_SetShortDashStopMovement");
static_assert(sizeof(BP_CharacterLocomotionSubShortDash_C_SetShortDashStopMovement) == 0x000070, "Wrong size on BP_CharacterLocomotionSubShortDash_C_SetShortDashStopMovement");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashStopMovement, CallFunc_GetShortDashParameter____________) == 0x000000, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashStopMovement::CallFunc_GetShortDashParameter____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashStopMovement, CallFunc_GetShortDashParameter_________) == 0x000008, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashStopMovement::CallFunc_GetShortDashParameter_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashStopMovement, CallFunc_GetShortDashParameter______) == 0x000010, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashStopMovement::CallFunc_GetShortDashParameter______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashStopMovement, CallFunc_GetShortDashParameter____) == 0x000018, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashStopMovement::CallFunc_GetShortDashParameter____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashStopMovement, CallFunc_GetShortDashParameter_OT_________) == 0x000020, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashStopMovement::CallFunc_GetShortDashParameter_OT_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashStopMovement, CallFunc_GetShortDashParameter_____) == 0x000028, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashStopMovement::CallFunc_GetShortDashParameter_____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashStopMovement, CallFunc_GetShortDashParameter______________) == 0x000030, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashStopMovement::CallFunc_GetShortDashParameter______________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashStopMovement, CallFunc_GetShortDashParameter________) == 0x000038, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashStopMovement::CallFunc_GetShortDashParameter________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashStopMovement, CallFunc_GetShortDashParameter_______1) == 0x000040, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashStopMovement::CallFunc_GetShortDashParameter_______1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashStopMovement, CallFunc_GetCharacterMovement_CharacterMovement) == 0x000048, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashStopMovement::CallFunc_GetCharacterMovement_CharacterMovement' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashStopMovement, CallFunc_GetCharacterMovement_CharacterMovement_1) == 0x000050, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashStopMovement::CallFunc_GetCharacterMovement_CharacterMovement_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashStopMovement, CallFunc_GetCharacterMovement_CharacterMovement_2) == 0x000058, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashStopMovement::CallFunc_GetCharacterMovement_CharacterMovement_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashStopMovement, CallFunc_GetCharacterMovement_CharacterMovement_3) == 0x000060, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashStopMovement::CallFunc_GetCharacterMovement_CharacterMovement_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetShortDashStopMovement, K2Node_VariableSet_BrakingDecelerationWalking_ImplicitCast) == 0x000068, "Member 'BP_CharacterLocomotionSubShortDash_C_SetShortDashStopMovement::K2Node_VariableSet_BrakingDecelerationWalking_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubShortDash.BP_CharacterLocomotionSubShortDash_C.SetUpShortDash
// 0x0050 (0x0050 - 0x0000)
struct BP_CharacterLocomotionSubShortDash_C_SetUpShortDash final
{
public:
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetShortDashSpeedDownDistance_ReturnValue; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetTargetCharacter_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetShortDashSpeedDownDistance_ReturnValue_1; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateMaxSpeed_IsEnd;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Vector2DVector2D_ReturnValue;    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubShortDash_C_SetUpShortDash) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubShortDash_C_SetUpShortDash");
static_assert(sizeof(BP_CharacterLocomotionSubShortDash_C_SetUpShortDash) == 0x000050, "Wrong size on BP_CharacterLocomotionSubShortDash_C_SetUpShortDash");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetUpShortDash, CallFunc_GetSSCharacter_SSCharacter) == 0x000000, "Member 'BP_CharacterLocomotionSubShortDash_C_SetUpShortDash::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetUpShortDash, CallFunc_GetShortDashSpeedDownDistance_ReturnValue) == 0x000008, "Member 'BP_CharacterLocomotionSubShortDash_C_SetUpShortDash::CallFunc_GetShortDashSpeedDownDistance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetUpShortDash, CallFunc_GetTargetCharacter_ReturnValue) == 0x000010, "Member 'BP_CharacterLocomotionSubShortDash_C_SetUpShortDash::CallFunc_GetTargetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetUpShortDash, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000018, "Member 'BP_CharacterLocomotionSubShortDash_C_SetUpShortDash::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetUpShortDash, CallFunc_GetShortDashSpeedDownDistance_ReturnValue_1) == 0x000020, "Member 'BP_CharacterLocomotionSubShortDash_C_SetUpShortDash::CallFunc_GetShortDashSpeedDownDistance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetUpShortDash, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_CharacterLocomotionSubShortDash_C_SetUpShortDash::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetUpShortDash, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000030, "Member 'BP_CharacterLocomotionSubShortDash_C_SetUpShortDash::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetUpShortDash, CallFunc_UpdateMaxSpeed_IsEnd) == 0x000038, "Member 'BP_CharacterLocomotionSubShortDash_C_SetUpShortDash::CallFunc_UpdateMaxSpeed_IsEnd' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetUpShortDash, CallFunc_NotEqual_Vector2DVector2D_ReturnValue) == 0x000039, "Member 'BP_CharacterLocomotionSubShortDash_C_SetUpShortDash::CallFunc_NotEqual_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetUpShortDash, CallFunc_BooleanOR_ReturnValue) == 0x00003A, "Member 'BP_CharacterLocomotionSubShortDash_C_SetUpShortDash::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetUpShortDash, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000040, "Member 'BP_CharacterLocomotionSubShortDash_C_SetUpShortDash::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetUpShortDash, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000048, "Member 'BP_CharacterLocomotionSubShortDash_C_SetUpShortDash::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubShortDash.BP_CharacterLocomotionSubShortDash_C.SetUpShortDashMovement Parameter
// 0x0010 (0x0010 - 0x0000)
struct BP_CharacterLocomotionSubShortDash_C_SetUpShortDashMovement_Parameter final
{
public:
	EKoratDashUkemiState                          InShortDashStatus;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubShortDash_C_SetUpShortDashMovement_Parameter) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubShortDash_C_SetUpShortDashMovement_Parameter");
static_assert(sizeof(BP_CharacterLocomotionSubShortDash_C_SetUpShortDashMovement_Parameter) == 0x000010, "Wrong size on BP_CharacterLocomotionSubShortDash_C_SetUpShortDashMovement_Parameter");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetUpShortDashMovement_Parameter, InShortDashStatus) == 0x000000, "Member 'BP_CharacterLocomotionSubShortDash_C_SetUpShortDashMovement_Parameter::InShortDashStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_SetUpShortDashMovement_Parameter, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000008, "Member 'BP_CharacterLocomotionSubShortDash_C_SetUpShortDashMovement_Parameter::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");

// Function BP_CharacterLocomotionSubShortDash.BP_CharacterLocomotionSubShortDash_C.ShortDashIdleMove
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterLocomotionSubShortDash_C_ShortDashIdleMove final
{
public:
	ECharacterLocomotionEventType                 CallFunc_GetUpdateEventType_EventType;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetUpdateDeltaSeconds_DeltaSeconds;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterLocomotionEventType                 CallFunc_GetUpdateEventType_EventType_1;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubShortDash_C_ShortDashIdleMove) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubShortDash_C_ShortDashIdleMove");
static_assert(sizeof(BP_CharacterLocomotionSubShortDash_C_ShortDashIdleMove) == 0x000018, "Wrong size on BP_CharacterLocomotionSubShortDash_C_ShortDashIdleMove");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ShortDashIdleMove, CallFunc_GetUpdateEventType_EventType) == 0x000000, "Member 'BP_CharacterLocomotionSubShortDash_C_ShortDashIdleMove::CallFunc_GetUpdateEventType_EventType' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ShortDashIdleMove, CallFunc_GetUpdateDeltaSeconds_DeltaSeconds) == 0x000008, "Member 'BP_CharacterLocomotionSubShortDash_C_ShortDashIdleMove::CallFunc_GetUpdateDeltaSeconds_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ShortDashIdleMove, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'BP_CharacterLocomotionSubShortDash_C_ShortDashIdleMove::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ShortDashIdleMove, CallFunc_GetUpdateEventType_EventType_1) == 0x000011, "Member 'BP_CharacterLocomotionSubShortDash_C_ShortDashIdleMove::CallFunc_GetUpdateEventType_EventType_1' has a wrong offset!");

// Function BP_CharacterLocomotionSubShortDash.BP_CharacterLocomotionSubShortDash_C.ShortDashINOT
// 0x0002 (0x0002 - 0x0000)
struct BP_CharacterLocomotionSubShortDash_C_ShortDashINOT final
{
public:
	ECharacterLocomotionEventType                 CallFunc_GetUpdateEventType_EventType;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubShortDash_C_ShortDashINOT) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubShortDash_C_ShortDashINOT");
static_assert(sizeof(BP_CharacterLocomotionSubShortDash_C_ShortDashINOT) == 0x000002, "Wrong size on BP_CharacterLocomotionSubShortDash_C_ShortDashINOT");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ShortDashINOT, CallFunc_GetUpdateEventType_EventType) == 0x000000, "Member 'BP_CharacterLocomotionSubShortDash_C_ShortDashINOT::CallFunc_GetUpdateEventType_EventType' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ShortDashINOT, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_CharacterLocomotionSubShortDash_C_ShortDashINOT::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_CharacterLocomotionSubShortDash.BP_CharacterLocomotionSubShortDash_C.ShortDashINOTKeyPressed
// 0x0002 (0x0002 - 0x0000)
struct BP_CharacterLocomotionSubShortDash_C_ShortDashINOTKeyPressed final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckShortDashKeyPressedAction_IsStartAction; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubShortDash_C_ShortDashINOTKeyPressed) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubShortDash_C_ShortDashINOTKeyPressed");
static_assert(sizeof(BP_CharacterLocomotionSubShortDash_C_ShortDashINOTKeyPressed) == 0x000002, "Wrong size on BP_CharacterLocomotionSubShortDash_C_ShortDashINOTKeyPressed");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ShortDashINOTKeyPressed, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'BP_CharacterLocomotionSubShortDash_C_ShortDashINOTKeyPressed::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ShortDashINOTKeyPressed, CallFunc_CheckShortDashKeyPressedAction_IsStartAction) == 0x000001, "Member 'BP_CharacterLocomotionSubShortDash_C_ShortDashINOTKeyPressed::CallFunc_CheckShortDashKeyPressedAction_IsStartAction' has a wrong offset!");

// Function BP_CharacterLocomotionSubShortDash.BP_CharacterLocomotionSubShortDash_C.ShortDashINOTStop
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterLocomotionSubShortDash_C_ShortDashINOTStop final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubShortDash_C_ShortDashINOTStop) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubShortDash_C_ShortDashINOTStop");
static_assert(sizeof(BP_CharacterLocomotionSubShortDash_C_ShortDashINOTStop) == 0x000008, "Wrong size on BP_CharacterLocomotionSubShortDash_C_ShortDashINOTStop");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ShortDashINOTStop, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubShortDash_C_ShortDashINOTStop::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");

// Function BP_CharacterLocomotionSubShortDash.BP_CharacterLocomotionSubShortDash_C.ShortDashINOTUpdate
// 0x00A0 (0x00A0 - 0x0000)
struct BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate final
{
public:
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Vector_IsZero_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPawn_Pawn;                             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPendingMovementInputVector_ReturnValue; // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Vector_IsZero_ReturnValue_1;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue_1;               // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPawn_Pawn_1;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetUpdateDeltaSeconds_DeltaSeconds;       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterBase_C>  K2Node_DynamicCast_AsBPI_Character_Base;           // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratShortDashState                          CallFunc_UpdateShortDashMove_NextShortDashStatus;  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AutoSetCharacterMovementModeToIdle_IsSet; // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 CallFunc_AutoSetCharacterMovementModeToIdle_SetMovementMode; // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_97[0x1];                                       // 0x0097(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate");
static_assert(sizeof(BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate) == 0x0000A0, "Wrong size on BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate, CallFunc_MakeRotFromX_ReturnValue) == 0x000000, "Member 'BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate, CallFunc_Vector_IsZero_ReturnValue) == 0x000018, "Member 'BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate::CallFunc_Vector_IsZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate, CallFunc_GetPawn_Pawn) == 0x000020, "Member 'BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate::CallFunc_GetPawn_Pawn' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate, CallFunc_GetPendingMovementInputVector_ReturnValue) == 0x000028, "Member 'BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate::CallFunc_GetPendingMovementInputVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000040, "Member 'BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate, CallFunc_Vector_IsZero_ReturnValue_1) == 0x000048, "Member 'BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate::CallFunc_Vector_IsZero_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate, CallFunc_MakeRotFromX_ReturnValue_1) == 0x000050, "Member 'BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate::CallFunc_MakeRotFromX_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000068, "Member 'BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate, CallFunc_GetPawn_Pawn_1) == 0x000070, "Member 'BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate::CallFunc_GetPawn_Pawn_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate, CallFunc_GetUpdateDeltaSeconds_DeltaSeconds) == 0x000078, "Member 'BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate::CallFunc_GetUpdateDeltaSeconds_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate, K2Node_DynamicCast_AsBPI_Character_Base) == 0x000080, "Member 'BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate::K2Node_DynamicCast_AsBPI_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate, CallFunc_UpdateShortDashMove_NextShortDashStatus) == 0x000091, "Member 'BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate::CallFunc_UpdateShortDashMove_NextShortDashStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate, CallFunc_AutoSetCharacterMovementModeToIdle_IsSet) == 0x000092, "Member 'BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate::CallFunc_AutoSetCharacterMovementModeToIdle_IsSet' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate, CallFunc_AutoSetCharacterMovementModeToIdle_SetMovementMode) == 0x000093, "Member 'BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate::CallFunc_AutoSetCharacterMovementModeToIdle_SetMovementMode' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000094, "Member 'BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate, CallFunc_BooleanAND_ReturnValue) == 0x000095, "Member 'BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000096, "Member 'BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000098, "Member 'BP_CharacterLocomotionSubShortDash_C_ShortDashINOTUpdate::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");

// Function BP_CharacterLocomotionSubShortDash.BP_CharacterLocomotionSubShortDash_C.Start
// 0x0028 (0x0028 - 0x0000)
struct BP_CharacterLocomotionSubShortDash_C_Start final
{
public:
	class UBP_CharacterLocomotionComponent_C*     InLocomotionComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          InInSkip;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterActionFinishReason             Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterActionFinishReason             Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterActionFinishReason             K2Node_Select_Default;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubShortDash_C_Start) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubShortDash_C_Start");
static_assert(sizeof(BP_CharacterLocomotionSubShortDash_C_Start) == 0x000028, "Wrong size on BP_CharacterLocomotionSubShortDash_C_Start");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Start, InLocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubShortDash_C_Start::InLocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Start, InInSkip) == 0x000008, "Member 'BP_CharacterLocomotionSubShortDash_C_Start::InInSkip' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Start, NewParam) == 0x000009, "Member 'BP_CharacterLocomotionSubShortDash_C_Start::NewParam' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Start, Temp_byte_Variable) == 0x00000A, "Member 'BP_CharacterLocomotionSubShortDash_C_Start::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Start, Temp_byte_Variable_1) == 0x00000B, "Member 'BP_CharacterLocomotionSubShortDash_C_Start::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Start, Temp_bool_Variable) == 0x00000C, "Member 'BP_CharacterLocomotionSubShortDash_C_Start::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Start, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000010, "Member 'BP_CharacterLocomotionSubShortDash_C_Start::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Start, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000018, "Member 'BP_CharacterLocomotionSubShortDash_C_Start::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Start, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000020, "Member 'BP_CharacterLocomotionSubShortDash_C_Start::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Start, K2Node_Select_Default) == 0x000021, "Member 'BP_CharacterLocomotionSubShortDash_C_Start::K2Node_Select_Default' has a wrong offset!");

// Function BP_CharacterLocomotionSubShortDash.BP_CharacterLocomotionSubShortDash_C.Update
// 0x0020 (0x0020 - 0x0000)
struct BP_CharacterLocomotionSubShortDash_C_Update final
{
public:
	class UBP_CharacterLocomotionComponent_C*     InLocomotionComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ECharacterLocomotionEventType                 InEventType;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        InDeltaSeconds;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Update_NewParam;                          // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubShortDash_C_Update) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubShortDash_C_Update");
static_assert(sizeof(BP_CharacterLocomotionSubShortDash_C_Update) == 0x000020, "Wrong size on BP_CharacterLocomotionSubShortDash_C_Update");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Update, InLocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubShortDash_C_Update::InLocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Update, InEventType) == 0x000008, "Member 'BP_CharacterLocomotionSubShortDash_C_Update::InEventType' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Update, InDeltaSeconds) == 0x000010, "Member 'BP_CharacterLocomotionSubShortDash_C_Update::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Update, NewParam) == 0x000018, "Member 'BP_CharacterLocomotionSubShortDash_C_Update::NewParam' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Update, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000019, "Member 'BP_CharacterLocomotionSubShortDash_C_Update::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Update, K2Node_SwitchEnum_CmpSuccess) == 0x00001A, "Member 'BP_CharacterLocomotionSubShortDash_C_Update::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_Update, CallFunc_Update_NewParam) == 0x00001B, "Member 'BP_CharacterLocomotionSubShortDash_C_Update::CallFunc_Update_NewParam' has a wrong offset!");

// Function BP_CharacterLocomotionSubShortDash.BP_CharacterLocomotionSubShortDash_C.UpdateIdleMove
// 0x0028 (0x0028 - 0x0000)
struct BP_CharacterLocomotionSubShortDash_C_UpdateIdleMove final
{
public:
	ECharacterLocomotionEventType                 InEventType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        InDeltaSeconds;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionSubIdleMove_C*   CallFunc_GetSubIdleMove_SubIdleMove;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_Update_NewParam;                          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubShortDash_C_UpdateIdleMove) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubShortDash_C_UpdateIdleMove");
static_assert(sizeof(BP_CharacterLocomotionSubShortDash_C_UpdateIdleMove) == 0x000028, "Wrong size on BP_CharacterLocomotionSubShortDash_C_UpdateIdleMove");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateIdleMove, InEventType) == 0x000000, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateIdleMove::InEventType' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateIdleMove, InDeltaSeconds) == 0x000008, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateIdleMove::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateIdleMove, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000010, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateIdleMove::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateIdleMove, CallFunc_GetSubIdleMove_SubIdleMove) == 0x000018, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateIdleMove::CallFunc_GetSubIdleMove_SubIdleMove' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateIdleMove, CallFunc_Update_NewParam) == 0x000020, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateIdleMove::CallFunc_Update_NewParam' has a wrong offset!");

// Function BP_CharacterLocomotionSubShortDash.BP_CharacterLocomotionSubShortDash_C.UpdateMaxSpeed
// 0x00F0 (0x00F0 - 0x0000)
struct BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed final
{
public:
	bool                                          IsEnd;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement;   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_1; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_2; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_3; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            CallFunc_GetShortDashParameter____________;        // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter_________;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter______;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter____;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter_OT_________;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter_____;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShortDashParameter______________;      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetShortDashParameter________;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter_______1;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_4; // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2;  // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_5; // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_VariableSet_MaxWalkSpeed_ImplicitCast;      // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_B_ImplicitCast;                      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_BrakingDecelerationWalking_ImplicitCast; // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxWalkSpeed_ImplicitCast_1;    // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed");
static_assert(sizeof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed) == 0x0000F0, "Wrong size on BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, IsEnd) == 0x000000, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::IsEnd' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, CallFunc_GetCharacterMovement_CharacterMovement) == 0x000008, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::CallFunc_GetCharacterMovement_CharacterMovement' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, CallFunc_GetCharacterMovement_CharacterMovement_1) == 0x000010, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::CallFunc_GetCharacterMovement_CharacterMovement_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, CallFunc_GetCharacterMovement_CharacterMovement_2) == 0x000018, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::CallFunc_GetCharacterMovement_CharacterMovement_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, CallFunc_GetCharacterMovement_CharacterMovement_3) == 0x000020, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::CallFunc_GetCharacterMovement_CharacterMovement_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000028, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, CallFunc_GetTimeRange_MinTime) == 0x000034, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, CallFunc_GetTimeRange_MaxTime) == 0x000038, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, CallFunc_GetShortDashParameter____________) == 0x000040, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::CallFunc_GetShortDashParameter____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, CallFunc_GetShortDashParameter_________) == 0x000048, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::CallFunc_GetShortDashParameter_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, CallFunc_GetShortDashParameter______) == 0x000050, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::CallFunc_GetShortDashParameter______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, CallFunc_GetShortDashParameter____) == 0x000058, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::CallFunc_GetShortDashParameter____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, CallFunc_GetShortDashParameter_OT_________) == 0x000060, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::CallFunc_GetShortDashParameter_OT_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, CallFunc_GetShortDashParameter_____) == 0x000068, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::CallFunc_GetShortDashParameter_____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, CallFunc_GetShortDashParameter______________) == 0x000070, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::CallFunc_GetShortDashParameter______________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, CallFunc_GetShortDashParameter________) == 0x000078, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::CallFunc_GetShortDashParameter________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, CallFunc_GetShortDashParameter_______1) == 0x000080, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::CallFunc_GetShortDashParameter_______1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, CallFunc_FMin_ReturnValue) == 0x000088, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, CallFunc_GetFloatValue_ReturnValue) == 0x000090, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000098, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, CallFunc_GetCharacterMovement_CharacterMovement_4) == 0x0000A8, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::CallFunc_GetCharacterMovement_CharacterMovement_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x0000B0, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2) == 0x0000B1, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, CallFunc_GetCharacterMovement_CharacterMovement_5) == 0x0000B8, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::CallFunc_GetCharacterMovement_CharacterMovement_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, CallFunc_BooleanAND_ReturnValue) == 0x0000C0, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, K2Node_VariableSet_MaxWalkSpeed_ImplicitCast) == 0x0000C4, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::K2Node_VariableSet_MaxWalkSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, CallFunc_FMin_B_ImplicitCast) == 0x0000C8, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::CallFunc_FMin_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast) == 0x0000D0, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, K2Node_VariableSet_BrakingDecelerationWalking_ImplicitCast) == 0x0000D8, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::K2Node_VariableSet_BrakingDecelerationWalking_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x0000DC, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0000E0, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed, K2Node_VariableSet_MaxWalkSpeed_ImplicitCast_1) == 0x0000E8, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateMaxSpeed::K2Node_VariableSet_MaxWalkSpeed_ImplicitCast_1' has a wrong offset!");

// Function BP_CharacterLocomotionSubShortDash.BP_CharacterLocomotionSubShortDash_C.UpdateShortDashMove
// 0x0068 (0x0068 - 0x0000)
struct BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove final
{
public:
	double                                        InDeltaSeconds;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratShortDashState                          NextShortDashStatus;                               // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateMaxSpeed_IsEnd;                     // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CallFunc_GetShortDashParameter____________;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter_________;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter______;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter____;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter_OT_________;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter_____;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShortDashParameter______________;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetShortDashParameter________;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetShortDashParameter_______1;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove");
static_assert(sizeof(BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove) == 0x000068, "Wrong size on BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove, InDeltaSeconds) == 0x000000, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove, NextShortDashStatus) == 0x000008, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove::NextShortDashStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove, CallFunc_UpdateMaxSpeed_IsEnd) == 0x000009, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove::CallFunc_UpdateMaxSpeed_IsEnd' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove, CallFunc_GetShortDashParameter____________) == 0x000018, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove::CallFunc_GetShortDashParameter____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove, CallFunc_GetShortDashParameter_________) == 0x000020, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove::CallFunc_GetShortDashParameter_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove, CallFunc_GetShortDashParameter______) == 0x000028, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove::CallFunc_GetShortDashParameter______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove, CallFunc_GetShortDashParameter____) == 0x000030, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove::CallFunc_GetShortDashParameter____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove, CallFunc_GetShortDashParameter_OT_________) == 0x000038, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove::CallFunc_GetShortDashParameter_OT_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove, CallFunc_GetShortDashParameter_____) == 0x000040, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove::CallFunc_GetShortDashParameter_____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove, CallFunc_GetShortDashParameter______________) == 0x000048, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove::CallFunc_GetShortDashParameter______________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove, CallFunc_GetShortDashParameter________) == 0x000050, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove::CallFunc_GetShortDashParameter________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove, CallFunc_GetShortDashParameter_______1) == 0x000058, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove::CallFunc_GetShortDashParameter_______1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000060, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000061, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000062, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove, CallFunc_BooleanAND_ReturnValue) == 0x000063, "Member 'BP_CharacterLocomotionSubShortDash_C_UpdateShortDashMove::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

