#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AppendentDrawComponent

#include "Basic.hpp"

#include "BP_AppendentDrawComponent_classes.hpp"
#include "BP_AppendentDrawComponent_parameters.hpp"


namespace SDK
{

// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.AddDrawBlowParam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          InLocation                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InDrawType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InHitTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InDrawDuration                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AppendentDrawComponent_C::AddDrawBlowParam(const struct FVector& InLocation, int32 InDrawType, double InHitTime, double InDrawDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AppendentDrawComponent_C", "AddDrawBlowParam");

	Params::BP_AppendentDrawComponent_C_AddDrawBlowParam Parms{};

	Parms.InLocation = std::move(InLocation);
	Parms.InDrawType = InDrawType;
	Parms.InHitTime = InHitTime;
	Parms.InDrawDuration = InDrawDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.ExecuteUbergraph_BP_AppendentDrawComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AppendentDrawComponent_C::ExecuteUbergraph_BP_AppendentDrawComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AppendentDrawComponent_C", "ExecuteUbergraph_BP_AppendentDrawComponent");

	Params::BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.GetPlayerCharacterNumber
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   OutPlayerNumber                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AppendentDrawComponent_C::GetPlayerCharacterNumber(int32* OutPlayerNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AppendentDrawComponent_C", "GetPlayerCharacterNumber");

	Params::BP_AppendentDrawComponent_C_GetPlayerCharacterNumber Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutPlayerNumber != nullptr)
		*OutPlayerNumber = Parms.OutPlayerNumber;
}


// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.InitializeDrawActorLocation
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AppendentDrawComponent_C::InitializeDrawActorLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AppendentDrawComponent_C", "InitializeDrawActorLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.InitializeDrawLipsCharts
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_AppendentDrawComponent_C::InitializeDrawLipsCharts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AppendentDrawComponent_C", "InitializeDrawLipsCharts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.InitializeDrawPlayMontage
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AppendentDrawComponent_C::InitializeDrawPlayMontage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AppendentDrawComponent_C", "InitializeDrawPlayMontage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.KoratCharacterDebugCommandDraw
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AppendentDrawComponent_C::KoratCharacterDebugCommandDraw()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AppendentDrawComponent_C", "KoratCharacterDebugCommandDraw");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_AppendentDrawComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AppendentDrawComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AppendentDrawComponent_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AppendentDrawComponent_C", "ReceiveEndPlay");

	Params::BP_AppendentDrawComponent_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AppendentDrawComponent_C::ReceiveTick(float DeltaSeconds_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AppendentDrawComponent_C", "ReceiveTick");

	Params::BP_AppendentDrawComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds_0 = DeltaSeconds_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.SetCommandEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           InDebugCommand                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    InEnable                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AppendentDrawComponent_C::SetCommandEnable(const class FString& InDebugCommand, bool InEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AppendentDrawComponent_C", "SetCommandEnable");

	Params::BP_AppendentDrawComponent_C_SetCommandEnable Parms{};

	Parms.InDebugCommand = std::move(InDebugCommand);
	Parms.InEnable = InEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.SetKnockBackDrawParam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ActorLocation_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          FrontVector_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          SideVector_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          UpVector_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          PitchRotateVector_0                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          YawRotateVector_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AppendentDrawComponent_C::SetKnockBackDrawParam(const struct FVector& ActorLocation_0, const struct FVector& FrontVector_0, const struct FVector& SideVector_0, const struct FVector& UpVector_0, const struct FVector& PitchRotateVector_0, const struct FVector& YawRotateVector_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AppendentDrawComponent_C", "SetKnockBackDrawParam");

	Params::BP_AppendentDrawComponent_C_SetKnockBackDrawParam Parms{};

	Parms.ActorLocation_0 = std::move(ActorLocation_0);
	Parms.FrontVector_0 = std::move(FrontVector_0);
	Parms.SideVector_0 = std::move(SideVector_0);
	Parms.UpVector_0 = std::move(UpVector_0);
	Parms.PitchRotateVector_0 = std::move(PitchRotateVector_0);
	Parms.YawRotateVector_0 = std::move(YawRotateVector_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.SwitchKoratCharacterDebug
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   InDebugCommand                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_AppendentDrawComponent_C::SwitchKoratCharacterDebug(TArray<class FString>& InDebugCommand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AppendentDrawComponent_C", "SwitchKoratCharacterDebug");

	Params::BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug Parms{};

	Parms.InDebugCommand = std::move(InDebugCommand);

	UObject::ProcessEvent(Func, &Parms);

	InDebugCommand = std::move(Parms.InDebugCommand);
}


// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.UpdateDrawActorLocation
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AppendentDrawComponent_C::UpdateDrawActorLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AppendentDrawComponent_C", "UpdateDrawActorLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.UpdateDrawBlow
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AppendentDrawComponent_C::UpdateDrawBlow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AppendentDrawComponent_C", "UpdateDrawBlow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.UpdateDrawKnockBack
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AppendentDrawComponent_C::UpdateDrawKnockBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AppendentDrawComponent_C", "UpdateDrawKnockBack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.UpdateDrawLipsCharts
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_AppendentDrawComponent_C::UpdateDrawLipsCharts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AppendentDrawComponent_C", "UpdateDrawLipsCharts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.UpdateDrawMovement
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AppendentDrawComponent_C::UpdateDrawMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AppendentDrawComponent_C", "UpdateDrawMovement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.UpdateDrawPlayMontage
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AppendentDrawComponent_C::UpdateDrawPlayMontage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AppendentDrawComponent_C", "UpdateDrawPlayMontage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.UpdateDrawRunningAction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_AppendentDrawComponent_C::UpdateDrawRunningAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AppendentDrawComponent_C", "UpdateDrawRunningAction");

	UObject::ProcessEvent(Func, nullptr);
}

}

