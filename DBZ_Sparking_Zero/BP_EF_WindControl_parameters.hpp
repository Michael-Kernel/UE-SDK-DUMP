#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EF_WindControl

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SS_structs.hpp"


namespace SDK::Params
{

// Function BP_EF_WindControl.BP_EF_WindControl_C.CacheSceneCascades
// 0x0038 (0x0038 - 0x0000)
struct BP_EF_WindControl_C_CacheSceneCascades final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AEmitter*>                       CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AEmitter*                               CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EF_WindControl_C_CacheSceneCascades) == 0x000008, "Wrong alignment on BP_EF_WindControl_C_CacheSceneCascades");
static_assert(sizeof(BP_EF_WindControl_C_CacheSceneCascades) == 0x000038, "Wrong size on BP_EF_WindControl_C_CacheSceneCascades");
static_assert(offsetof(BP_EF_WindControl_C_CacheSceneCascades, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_EF_WindControl_C_CacheSceneCascades::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EF_WindControl_C_CacheSceneCascades, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_EF_WindControl_C_CacheSceneCascades::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EF_WindControl_C_CacheSceneCascades, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_EF_WindControl_C_CacheSceneCascades::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EF_WindControl_C_CacheSceneCascades, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'BP_EF_WindControl_C_CacheSceneCascades::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EF_WindControl_C_CacheSceneCascades, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_EF_WindControl_C_CacheSceneCascades::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EF_WindControl_C_CacheSceneCascades, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EF_WindControl_C_CacheSceneCascades::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EF_WindControl_C_CacheSceneCascades, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_EF_WindControl_C_CacheSceneCascades::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EF_WindControl_C_CacheSceneCascades, CallFunc_Array_Add_ReturnValue) == 0x000034, "Member 'BP_EF_WindControl_C_CacheSceneCascades::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_EF_WindControl.BP_EF_WindControl_C.ExecuteUbergraph_BP_EF_WindControl
// 0x0008 (0x0008 - 0x0000)
struct BP_EF_WindControl_C_ExecuteUbergraph_BP_EF_WindControl final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EF_WindControl_C_ExecuteUbergraph_BP_EF_WindControl) == 0x000004, "Wrong alignment on BP_EF_WindControl_C_ExecuteUbergraph_BP_EF_WindControl");
static_assert(sizeof(BP_EF_WindControl_C_ExecuteUbergraph_BP_EF_WindControl) == 0x000008, "Wrong size on BP_EF_WindControl_C_ExecuteUbergraph_BP_EF_WindControl");
static_assert(offsetof(BP_EF_WindControl_C_ExecuteUbergraph_BP_EF_WindControl, EntryPoint) == 0x000000, "Member 'BP_EF_WindControl_C_ExecuteUbergraph_BP_EF_WindControl::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EF_WindControl_C_ExecuteUbergraph_BP_EF_WindControl, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_EF_WindControl_C_ExecuteUbergraph_BP_EF_WindControl::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function BP_EF_WindControl.BP_EF_WindControl_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_EF_WindControl_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EF_WindControl_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_EF_WindControl_C_ReceiveTick");
static_assert(sizeof(BP_EF_WindControl_C_ReceiveTick) == 0x000004, "Wrong size on BP_EF_WindControl_C_ReceiveTick");
static_assert(offsetof(BP_EF_WindControl_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_EF_WindControl_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_EF_WindControl.BP_EF_WindControl_C.UpdateWind
// 0x00B8 (0x00B8 - 0x0000)
struct BP_EF_WindControl_C_UpdateWind final
{
public:
	class UParticleSystemComponent*               Cascade;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EF_WindControl_C_UpdateWind) == 0x000008, "Wrong alignment on BP_EF_WindControl_C_UpdateWind");
static_assert(sizeof(BP_EF_WindControl_C_UpdateWind) == 0x0000B8, "Wrong size on BP_EF_WindControl_C_UpdateWind");
static_assert(offsetof(BP_EF_WindControl_C_UpdateWind, Cascade) == 0x000000, "Member 'BP_EF_WindControl_C_UpdateWind::Cascade' has a wrong offset!");
static_assert(offsetof(BP_EF_WindControl_C_UpdateWind, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_EF_WindControl_C_UpdateWind::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EF_WindControl_C_UpdateWind, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_EF_WindControl_C_UpdateWind::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EF_WindControl_C_UpdateWind, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_EF_WindControl_C_UpdateWind::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EF_WindControl_C_UpdateWind, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BP_EF_WindControl_C_UpdateWind::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EF_WindControl_C_UpdateWind, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000018, "Member 'BP_EF_WindControl_C_UpdateWind::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EF_WindControl_C_UpdateWind, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000030, "Member 'BP_EF_WindControl_C_UpdateWind::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EF_WindControl_C_UpdateWind, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000048, "Member 'BP_EF_WindControl_C_UpdateWind::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EF_WindControl_C_UpdateWind, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000060, "Member 'BP_EF_WindControl_C_UpdateWind::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EF_WindControl_C_UpdateWind, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_EF_WindControl_C_UpdateWind::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EF_WindControl_C_UpdateWind, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x000080, "Member 'BP_EF_WindControl_C_UpdateWind::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EF_WindControl_C_UpdateWind, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'BP_EF_WindControl_C_UpdateWind::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EF_WindControl_C_UpdateWind, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'BP_EF_WindControl_C_UpdateWind::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EF_WindControl_C_UpdateWind, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x0000A0, "Member 'BP_EF_WindControl_C_UpdateWind::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");

// Function BP_EF_WindControl.BP_EF_WindControl_C.BP_GetParticles
// 0x0010 (0x0010 - 0x0000)
struct BP_EF_WindControl_C_BP_GetParticles final
{
public:
	TArray<class UParticleSystemComponent*>       ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
};
static_assert(alignof(BP_EF_WindControl_C_BP_GetParticles) == 0x000008, "Wrong alignment on BP_EF_WindControl_C_BP_GetParticles");
static_assert(sizeof(BP_EF_WindControl_C_BP_GetParticles) == 0x000010, "Wrong size on BP_EF_WindControl_C_BP_GetParticles");
static_assert(offsetof(BP_EF_WindControl_C_BP_GetParticles, ReturnValue) == 0x000000, "Member 'BP_EF_WindControl_C_BP_GetParticles::ReturnValue' has a wrong offset!");

// Function BP_EF_WindControl.BP_EF_WindControl_C.BP_GetWindVelocity
// 0x0120 (0x0120 - 0x0000)
struct BP_EF_WindControl_C_BP_GetWindVelocity final
{
public:
	struct FKoratEffectWindVelocity               ReturnValue;                                       // 0x0000(0x0048)(Parm, OutParm, ReturnParm, NoDestructor)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratEffectWindVelocity               K2Node_MakeStruct_KoratEffectWindVelocity;         // 0x00D8(0x0048)(NoDestructor)
};
static_assert(alignof(BP_EF_WindControl_C_BP_GetWindVelocity) == 0x000008, "Wrong alignment on BP_EF_WindControl_C_BP_GetWindVelocity");
static_assert(sizeof(BP_EF_WindControl_C_BP_GetWindVelocity) == 0x000120, "Wrong size on BP_EF_WindControl_C_BP_GetWindVelocity");
static_assert(offsetof(BP_EF_WindControl_C_BP_GetWindVelocity, ReturnValue) == 0x000000, "Member 'BP_EF_WindControl_C_BP_GetWindVelocity::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EF_WindControl_C_BP_GetWindVelocity, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000048, "Member 'BP_EF_WindControl_C_BP_GetWindVelocity::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EF_WindControl_C_BP_GetWindVelocity, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000060, "Member 'BP_EF_WindControl_C_BP_GetWindVelocity::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EF_WindControl_C_BP_GetWindVelocity, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000078, "Member 'BP_EF_WindControl_C_BP_GetWindVelocity::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EF_WindControl_C_BP_GetWindVelocity, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000090, "Member 'BP_EF_WindControl_C_BP_GetWindVelocity::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EF_WindControl_C_BP_GetWindVelocity, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x0000A8, "Member 'BP_EF_WindControl_C_BP_GetWindVelocity::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EF_WindControl_C_BP_GetWindVelocity, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x0000C0, "Member 'BP_EF_WindControl_C_BP_GetWindVelocity::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EF_WindControl_C_BP_GetWindVelocity, K2Node_MakeStruct_KoratEffectWindVelocity) == 0x0000D8, "Member 'BP_EF_WindControl_C_BP_GetWindVelocity::K2Node_MakeStruct_KoratEffectWindVelocity' has a wrong offset!");

}

