#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTD_BranchWithAssetProbability

#include "Basic.hpp"

#include "SS_structs.hpp"
#include "BTD_ProbabilityBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTD_BranchWithAssetProbability.BTD_BranchWithAssetProbability_C
// 0x0028 (0x0170 - 0x0148)
class UBTD_BranchWithAssetProbability_C final : public UBTD_ProbabilityBase_C
{
public:
	class FName                                   _Y__n____ID;                                       // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            __1Wf______;                                       // 0x0150(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            __L__b1Wf______;                                   // 0x0158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          __L__b1Wpk_______LFK;                              // 0x0160(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _______BTD_BranchWithAssetProbability_C_0;         // 0x0161(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_162[0x2];                                      // 0x0162(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratAiProbabilityTypeDataList        ______BTD_BranchWithAssetProbability_C;            // 0x0164(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)

public:
	void GetProbability(class AActor* InOwnerActor, bool InSendLog, int32* OutProbability);
	bool PerformConditionCheck(class AActor* OwnerActor);
	bool PublicPerformConditionCheck(class AActor* InOwnerActor);
	void SetupOverriteCoolDownTime(class AActor* InOwnerActor, bool InConditionCheckResult);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTD_BranchWithAssetProbability_C">();
	}
	static class UBTD_BranchWithAssetProbability_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTD_BranchWithAssetProbability_C>();
	}
};
static_assert(alignof(UBTD_BranchWithAssetProbability_C) == 0x000008, "Wrong alignment on UBTD_BranchWithAssetProbability_C");
static_assert(sizeof(UBTD_BranchWithAssetProbability_C) == 0x000170, "Wrong size on UBTD_BranchWithAssetProbability_C");
static_assert(offsetof(UBTD_BranchWithAssetProbability_C, _Y__n____ID) == 0x000148, "Member 'UBTD_BranchWithAssetProbability_C::_Y__n____ID' has a wrong offset!");
static_assert(offsetof(UBTD_BranchWithAssetProbability_C, __1Wf______) == 0x000150, "Member 'UBTD_BranchWithAssetProbability_C::__1Wf______' has a wrong offset!");
static_assert(offsetof(UBTD_BranchWithAssetProbability_C, __L__b1Wf______) == 0x000158, "Member 'UBTD_BranchWithAssetProbability_C::__L__b1Wf______' has a wrong offset!");
static_assert(offsetof(UBTD_BranchWithAssetProbability_C, __L__b1Wpk_______LFK) == 0x000160, "Member 'UBTD_BranchWithAssetProbability_C::__L__b1Wpk_______LFK' has a wrong offset!");
static_assert(offsetof(UBTD_BranchWithAssetProbability_C, _______BTD_BranchWithAssetProbability_C_0) == 0x000161, "Member 'UBTD_BranchWithAssetProbability_C::_______BTD_BranchWithAssetProbability_C_0' has a wrong offset!");
static_assert(offsetof(UBTD_BranchWithAssetProbability_C, ______BTD_BranchWithAssetProbability_C) == 0x000164, "Member 'UBTD_BranchWithAssetProbability_C::______BTD_BranchWithAssetProbability_C' has a wrong offset!");

}

