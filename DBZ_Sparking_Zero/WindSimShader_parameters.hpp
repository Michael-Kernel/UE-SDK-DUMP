#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WindSimShader

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "WindSimShader_structs.hpp"


namespace SDK::Params
{

// Function WindSimShader.WindSimFieldComponent.AddInputData
// 0x0050 (0x0050 - 0x0000)
struct WindSimFieldComponent_AddInputData final
{
public:
	EWindSimFieldMotorType                        Type;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0008(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Vec;                                               // 0x0020(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x0038(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Power;                                             // 0x003C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Impulse;                                           // 0x0040(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Fade_rate;                                         // 0x0044(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(WindSimFieldComponent_AddInputData) == 0x000008, "Wrong alignment on WindSimFieldComponent_AddInputData");
static_assert(sizeof(WindSimFieldComponent_AddInputData) == 0x000050, "Wrong size on WindSimFieldComponent_AddInputData");
static_assert(offsetof(WindSimFieldComponent_AddInputData, Type) == 0x000000, "Member 'WindSimFieldComponent_AddInputData::Type' has a wrong offset!");
static_assert(offsetof(WindSimFieldComponent_AddInputData, Location) == 0x000008, "Member 'WindSimFieldComponent_AddInputData::Location' has a wrong offset!");
static_assert(offsetof(WindSimFieldComponent_AddInputData, Vec) == 0x000020, "Member 'WindSimFieldComponent_AddInputData::Vec' has a wrong offset!");
static_assert(offsetof(WindSimFieldComponent_AddInputData, Radius) == 0x000038, "Member 'WindSimFieldComponent_AddInputData::Radius' has a wrong offset!");
static_assert(offsetof(WindSimFieldComponent_AddInputData, Power) == 0x00003C, "Member 'WindSimFieldComponent_AddInputData::Power' has a wrong offset!");
static_assert(offsetof(WindSimFieldComponent_AddInputData, Impulse) == 0x000040, "Member 'WindSimFieldComponent_AddInputData::Impulse' has a wrong offset!");
static_assert(offsetof(WindSimFieldComponent_AddInputData, Fade_rate) == 0x000044, "Member 'WindSimFieldComponent_AddInputData::Fade_rate' has a wrong offset!");
static_assert(offsetof(WindSimFieldComponent_AddInputData, ReturnValue) == 0x000048, "Member 'WindSimFieldComponent_AddInputData::ReturnValue' has a wrong offset!");

// Function WindSimShader.WindSimFieldComponent.AddInputDataLocal
// 0x0048 (0x0048 - 0x0000)
struct WindSimFieldComponent_AddInputDataLocal final
{
public:
	EWindSimFieldMotorType                        Type;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Pos;                                               // 0x0008(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Vec;                                               // 0x0020(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x0038(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Power;                                             // 0x003C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Fade_rate;                                         // 0x0040(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0044(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(WindSimFieldComponent_AddInputDataLocal) == 0x000008, "Wrong alignment on WindSimFieldComponent_AddInputDataLocal");
static_assert(sizeof(WindSimFieldComponent_AddInputDataLocal) == 0x000048, "Wrong size on WindSimFieldComponent_AddInputDataLocal");
static_assert(offsetof(WindSimFieldComponent_AddInputDataLocal, Type) == 0x000000, "Member 'WindSimFieldComponent_AddInputDataLocal::Type' has a wrong offset!");
static_assert(offsetof(WindSimFieldComponent_AddInputDataLocal, Pos) == 0x000008, "Member 'WindSimFieldComponent_AddInputDataLocal::Pos' has a wrong offset!");
static_assert(offsetof(WindSimFieldComponent_AddInputDataLocal, Vec) == 0x000020, "Member 'WindSimFieldComponent_AddInputDataLocal::Vec' has a wrong offset!");
static_assert(offsetof(WindSimFieldComponent_AddInputDataLocal, Radius) == 0x000038, "Member 'WindSimFieldComponent_AddInputDataLocal::Radius' has a wrong offset!");
static_assert(offsetof(WindSimFieldComponent_AddInputDataLocal, Power) == 0x00003C, "Member 'WindSimFieldComponent_AddInputDataLocal::Power' has a wrong offset!");
static_assert(offsetof(WindSimFieldComponent_AddInputDataLocal, Fade_rate) == 0x000040, "Member 'WindSimFieldComponent_AddInputDataLocal::Fade_rate' has a wrong offset!");
static_assert(offsetof(WindSimFieldComponent_AddInputDataLocal, ReturnValue) == 0x000044, "Member 'WindSimFieldComponent_AddInputDataLocal::ReturnValue' has a wrong offset!");

// Function WindSimShader.WindSimFieldComponent.Move
// 0x0018 (0x0018 - 0x0000)
struct WindSimFieldComponent_Move final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WindSimFieldComponent_Move) == 0x000008, "Wrong alignment on WindSimFieldComponent_Move");
static_assert(sizeof(WindSimFieldComponent_Move) == 0x000018, "Wrong size on WindSimFieldComponent_Move");
static_assert(offsetof(WindSimFieldComponent_Move, TargetLocation) == 0x000000, "Member 'WindSimFieldComponent_Move::TargetLocation' has a wrong offset!");

// Function WindSimShader.WindSimFieldComponent.SetActiveSimulation
// 0x0001 (0x0001 - 0x0000)
struct WindSimFieldComponent_SetActiveSimulation final
{
public:
	bool                                          bInActiveSimulation;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WindSimFieldComponent_SetActiveSimulation) == 0x000001, "Wrong alignment on WindSimFieldComponent_SetActiveSimulation");
static_assert(sizeof(WindSimFieldComponent_SetActiveSimulation) == 0x000001, "Wrong size on WindSimFieldComponent_SetActiveSimulation");
static_assert(offsetof(WindSimFieldComponent_SetActiveSimulation, bInActiveSimulation) == 0x000000, "Member 'WindSimFieldComponent_SetActiveSimulation::bInActiveSimulation' has a wrong offset!");

// Function WindSimShader.WindSimFieldComponent.SetEnable
// 0x0001 (0x0001 - 0x0000)
struct WindSimFieldComponent_SetEnable final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WindSimFieldComponent_SetEnable) == 0x000001, "Wrong alignment on WindSimFieldComponent_SetEnable");
static_assert(sizeof(WindSimFieldComponent_SetEnable) == 0x000001, "Wrong size on WindSimFieldComponent_SetEnable");
static_assert(offsetof(WindSimFieldComponent_SetEnable, bEnable) == 0x000000, "Member 'WindSimFieldComponent_SetEnable::bEnable' has a wrong offset!");

// Function WindSimShader.WindSimFieldComponent.SetOutputType
// 0x0004 (0x0004 - 0x0000)
struct WindSimFieldComponent_SetOutputType final
{
public:
	int32                                         Type;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WindSimFieldComponent_SetOutputType) == 0x000004, "Wrong alignment on WindSimFieldComponent_SetOutputType");
static_assert(sizeof(WindSimFieldComponent_SetOutputType) == 0x000004, "Wrong size on WindSimFieldComponent_SetOutputType");
static_assert(offsetof(WindSimFieldComponent_SetOutputType, Type) == 0x000000, "Member 'WindSimFieldComponent_SetOutputType::Type' has a wrong offset!");

// Function WindSimShader.WindSimFieldComponent.SetPoissonSteps
// 0x0004 (0x0004 - 0x0000)
struct WindSimFieldComponent_SetPoissonSteps final
{
public:
	int32                                         Steps;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WindSimFieldComponent_SetPoissonSteps) == 0x000004, "Wrong alignment on WindSimFieldComponent_SetPoissonSteps");
static_assert(sizeof(WindSimFieldComponent_SetPoissonSteps) == 0x000004, "Wrong size on WindSimFieldComponent_SetPoissonSteps");
static_assert(offsetof(WindSimFieldComponent_SetPoissonSteps, Steps) == 0x000000, "Member 'WindSimFieldComponent_SetPoissonSteps::Steps' has a wrong offset!");

// Function WindSimShader.WindSimFieldComponent.SetShaderType
// 0x0001 (0x0001 - 0x0000)
struct WindSimFieldComponent_SetShaderType final
{
public:
	EWindSimFieldShaderType                       Type;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WindSimFieldComponent_SetShaderType) == 0x000001, "Wrong alignment on WindSimFieldComponent_SetShaderType");
static_assert(sizeof(WindSimFieldComponent_SetShaderType) == 0x000001, "Wrong size on WindSimFieldComponent_SetShaderType");
static_assert(offsetof(WindSimFieldComponent_SetShaderType, Type) == 0x000000, "Member 'WindSimFieldComponent_SetShaderType::Type' has a wrong offset!");

// Function WindSimShader.WindSimFieldComponent.SetTimeScale
// 0x0004 (0x0004 - 0x0000)
struct WindSimFieldComponent_SetTimeScale final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WindSimFieldComponent_SetTimeScale) == 0x000004, "Wrong alignment on WindSimFieldComponent_SetTimeScale");
static_assert(sizeof(WindSimFieldComponent_SetTimeScale) == 0x000004, "Wrong size on WindSimFieldComponent_SetTimeScale");
static_assert(offsetof(WindSimFieldComponent_SetTimeScale, Scale) == 0x000000, "Member 'WindSimFieldComponent_SetTimeScale::Scale' has a wrong offset!");

// Function WindSimShader.WindSimFieldComponent.SetWindViscous
// 0x0004 (0x0004 - 0x0000)
struct WindSimFieldComponent_SetWindViscous final
{
public:
	float                                         Viscous;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WindSimFieldComponent_SetWindViscous) == 0x000004, "Wrong alignment on WindSimFieldComponent_SetWindViscous");
static_assert(sizeof(WindSimFieldComponent_SetWindViscous) == 0x000004, "Wrong size on WindSimFieldComponent_SetWindViscous");
static_assert(offsetof(WindSimFieldComponent_SetWindViscous, Viscous) == 0x000000, "Member 'WindSimFieldComponent_SetWindViscous::Viscous' has a wrong offset!");

// Function WindSimShader.WindSimFieldComponent.GetFieldDimension
// 0x0018 (0x0018 - 0x0000)
struct WindSimFieldComponent_GetFieldDimension final
{
public:
	struct FVector                                Dimension;                                         // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WindSimFieldComponent_GetFieldDimension) == 0x000008, "Wrong alignment on WindSimFieldComponent_GetFieldDimension");
static_assert(sizeof(WindSimFieldComponent_GetFieldDimension) == 0x000018, "Wrong size on WindSimFieldComponent_GetFieldDimension");
static_assert(offsetof(WindSimFieldComponent_GetFieldDimension, Dimension) == 0x000000, "Member 'WindSimFieldComponent_GetFieldDimension::Dimension' has a wrong offset!");

// Function WindSimShader.WindSimFieldComponent.GetPoissonSteps
// 0x0004 (0x0004 - 0x0000)
struct WindSimFieldComponent_GetPoissonSteps final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WindSimFieldComponent_GetPoissonSteps) == 0x000004, "Wrong alignment on WindSimFieldComponent_GetPoissonSteps");
static_assert(sizeof(WindSimFieldComponent_GetPoissonSteps) == 0x000004, "Wrong size on WindSimFieldComponent_GetPoissonSteps");
static_assert(offsetof(WindSimFieldComponent_GetPoissonSteps, ReturnValue) == 0x000000, "Member 'WindSimFieldComponent_GetPoissonSteps::ReturnValue' has a wrong offset!");

// Function WindSimShader.WindSimFieldComponent.GetShaderType
// 0x0001 (0x0001 - 0x0000)
struct WindSimFieldComponent_GetShaderType final
{
public:
	EWindSimFieldShaderType                       ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WindSimFieldComponent_GetShaderType) == 0x000001, "Wrong alignment on WindSimFieldComponent_GetShaderType");
static_assert(sizeof(WindSimFieldComponent_GetShaderType) == 0x000001, "Wrong size on WindSimFieldComponent_GetShaderType");
static_assert(offsetof(WindSimFieldComponent_GetShaderType, ReturnValue) == 0x000000, "Member 'WindSimFieldComponent_GetShaderType::ReturnValue' has a wrong offset!");

// Function WindSimShader.WindSimFieldComponent.GetTimeScale
// 0x0004 (0x0004 - 0x0000)
struct WindSimFieldComponent_GetTimeScale final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WindSimFieldComponent_GetTimeScale) == 0x000004, "Wrong alignment on WindSimFieldComponent_GetTimeScale");
static_assert(sizeof(WindSimFieldComponent_GetTimeScale) == 0x000004, "Wrong size on WindSimFieldComponent_GetTimeScale");
static_assert(offsetof(WindSimFieldComponent_GetTimeScale, ReturnValue) == 0x000000, "Member 'WindSimFieldComponent_GetTimeScale::ReturnValue' has a wrong offset!");

// Function WindSimShader.WindSimFieldComponent.GetWindViscous
// 0x0004 (0x0004 - 0x0000)
struct WindSimFieldComponent_GetWindViscous final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WindSimFieldComponent_GetWindViscous) == 0x000004, "Wrong alignment on WindSimFieldComponent_GetWindViscous");
static_assert(sizeof(WindSimFieldComponent_GetWindViscous) == 0x000004, "Wrong size on WindSimFieldComponent_GetWindViscous");
static_assert(offsetof(WindSimFieldComponent_GetWindViscous, ReturnValue) == 0x000000, "Member 'WindSimFieldComponent_GetWindViscous::ReturnValue' has a wrong offset!");

// Function WindSimShader.WindSimFieldComponent.GetWorldFieldSize
// 0x0018 (0x0018 - 0x0000)
struct WindSimFieldComponent_GetWorldFieldSize final
{
public:
	struct FVector                                Size;                                              // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WindSimFieldComponent_GetWorldFieldSize) == 0x000008, "Wrong alignment on WindSimFieldComponent_GetWorldFieldSize");
static_assert(sizeof(WindSimFieldComponent_GetWorldFieldSize) == 0x000018, "Wrong size on WindSimFieldComponent_GetWorldFieldSize");
static_assert(offsetof(WindSimFieldComponent_GetWorldFieldSize, Size) == 0x000000, "Member 'WindSimFieldComponent_GetWorldFieldSize::Size' has a wrong offset!");

// Function WindSimShader.WindSimFieldComponent.IsActiveSimulation
// 0x0001 (0x0001 - 0x0000)
struct WindSimFieldComponent_IsActiveSimulation final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WindSimFieldComponent_IsActiveSimulation) == 0x000001, "Wrong alignment on WindSimFieldComponent_IsActiveSimulation");
static_assert(sizeof(WindSimFieldComponent_IsActiveSimulation) == 0x000001, "Wrong size on WindSimFieldComponent_IsActiveSimulation");
static_assert(offsetof(WindSimFieldComponent_IsActiveSimulation, ReturnValue) == 0x000000, "Member 'WindSimFieldComponent_IsActiveSimulation::ReturnValue' has a wrong offset!");

// Function WindSimShader.WindSimFieldComponent.IsEnable
// 0x0001 (0x0001 - 0x0000)
struct WindSimFieldComponent_IsEnable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WindSimFieldComponent_IsEnable) == 0x000001, "Wrong alignment on WindSimFieldComponent_IsEnable");
static_assert(sizeof(WindSimFieldComponent_IsEnable) == 0x000001, "Wrong size on WindSimFieldComponent_IsEnable");
static_assert(offsetof(WindSimFieldComponent_IsEnable, ReturnValue) == 0x000000, "Member 'WindSimFieldComponent_IsEnable::ReturnValue' has a wrong offset!");

// Function WindSimShader.WindSimFieldManager.EnableInputWindVelocityDebugDrawLine
// 0x0001 (0x0001 - 0x0000)
struct WindSimFieldManager_EnableInputWindVelocityDebugDrawLine final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WindSimFieldManager_EnableInputWindVelocityDebugDrawLine) == 0x000001, "Wrong alignment on WindSimFieldManager_EnableInputWindVelocityDebugDrawLine");
static_assert(sizeof(WindSimFieldManager_EnableInputWindVelocityDebugDrawLine) == 0x000001, "Wrong size on WindSimFieldManager_EnableInputWindVelocityDebugDrawLine");
static_assert(offsetof(WindSimFieldManager_EnableInputWindVelocityDebugDrawLine, bEnable) == 0x000000, "Member 'WindSimFieldManager_EnableInputWindVelocityDebugDrawLine::bEnable' has a wrong offset!");

// Function WindSimShader.WindSimFieldManager.ShowWindVelocityViewer
// 0x0001 (0x0001 - 0x0000)
struct WindSimFieldManager_ShowWindVelocityViewer final
{
public:
	bool                                          bInShow;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WindSimFieldManager_ShowWindVelocityViewer) == 0x000001, "Wrong alignment on WindSimFieldManager_ShowWindVelocityViewer");
static_assert(sizeof(WindSimFieldManager_ShowWindVelocityViewer) == 0x000001, "Wrong size on WindSimFieldManager_ShowWindVelocityViewer");
static_assert(offsetof(WindSimFieldManager_ShowWindVelocityViewer, bInShow) == 0x000000, "Member 'WindSimFieldManager_ShowWindVelocityViewer::bInShow' has a wrong offset!");

// Function WindSimShader.WindSimFieldManagerComponent.AddInputWindVelocity
// 0x0048 (0x0048 - 0x0000)
struct WindSimFieldManagerComponent_AddInputWindVelocity final
{
public:
	EWindSimFieldMotorType                        InType;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                InLocation;                                        // 0x0008(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                InVector;                                          // 0x0020(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InRadius;                                          // 0x0038(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InPower;                                           // 0x003C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InImpulse;                                         // 0x0040(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0041(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(WindSimFieldManagerComponent_AddInputWindVelocity) == 0x000008, "Wrong alignment on WindSimFieldManagerComponent_AddInputWindVelocity");
static_assert(sizeof(WindSimFieldManagerComponent_AddInputWindVelocity) == 0x000048, "Wrong size on WindSimFieldManagerComponent_AddInputWindVelocity");
static_assert(offsetof(WindSimFieldManagerComponent_AddInputWindVelocity, InType) == 0x000000, "Member 'WindSimFieldManagerComponent_AddInputWindVelocity::InType' has a wrong offset!");
static_assert(offsetof(WindSimFieldManagerComponent_AddInputWindVelocity, InLocation) == 0x000008, "Member 'WindSimFieldManagerComponent_AddInputWindVelocity::InLocation' has a wrong offset!");
static_assert(offsetof(WindSimFieldManagerComponent_AddInputWindVelocity, InVector) == 0x000020, "Member 'WindSimFieldManagerComponent_AddInputWindVelocity::InVector' has a wrong offset!");
static_assert(offsetof(WindSimFieldManagerComponent_AddInputWindVelocity, InRadius) == 0x000038, "Member 'WindSimFieldManagerComponent_AddInputWindVelocity::InRadius' has a wrong offset!");
static_assert(offsetof(WindSimFieldManagerComponent_AddInputWindVelocity, InPower) == 0x00003C, "Member 'WindSimFieldManagerComponent_AddInputWindVelocity::InPower' has a wrong offset!");
static_assert(offsetof(WindSimFieldManagerComponent_AddInputWindVelocity, InImpulse) == 0x000040, "Member 'WindSimFieldManagerComponent_AddInputWindVelocity::InImpulse' has a wrong offset!");
static_assert(offsetof(WindSimFieldManagerComponent_AddInputWindVelocity, ReturnValue) == 0x000041, "Member 'WindSimFieldManagerComponent_AddInputWindVelocity::ReturnValue' has a wrong offset!");

// Function WindSimShader.WindSimFieldManagerComponent.SetupParameterCollectionInstanceForFieldLocaion
// 0x0010 (0x0010 - 0x0000)
struct WindSimFieldManagerComponent_SetupParameterCollectionInstanceForFieldLocaion final
{
public:
	class UMaterialParameterCollection*           Collection;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ParameterName;                                     // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WindSimFieldManagerComponent_SetupParameterCollectionInstanceForFieldLocaion) == 0x000008, "Wrong alignment on WindSimFieldManagerComponent_SetupParameterCollectionInstanceForFieldLocaion");
static_assert(sizeof(WindSimFieldManagerComponent_SetupParameterCollectionInstanceForFieldLocaion) == 0x000010, "Wrong size on WindSimFieldManagerComponent_SetupParameterCollectionInstanceForFieldLocaion");
static_assert(offsetof(WindSimFieldManagerComponent_SetupParameterCollectionInstanceForFieldLocaion, Collection) == 0x000000, "Member 'WindSimFieldManagerComponent_SetupParameterCollectionInstanceForFieldLocaion::Collection' has a wrong offset!");
static_assert(offsetof(WindSimFieldManagerComponent_SetupParameterCollectionInstanceForFieldLocaion, ParameterName) == 0x000008, "Member 'WindSimFieldManagerComponent_SetupParameterCollectionInstanceForFieldLocaion::ParameterName' has a wrong offset!");

// Function WindSimShader.WindSimFieldManagerComponent.SetupParameterCollectionInstanceForPlayerLocaion
// 0x0010 (0x0010 - 0x0000)
struct WindSimFieldManagerComponent_SetupParameterCollectionInstanceForPlayerLocaion final
{
public:
	class UMaterialParameterCollection*           Collection;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ParameterName;                                     // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WindSimFieldManagerComponent_SetupParameterCollectionInstanceForPlayerLocaion) == 0x000008, "Wrong alignment on WindSimFieldManagerComponent_SetupParameterCollectionInstanceForPlayerLocaion");
static_assert(sizeof(WindSimFieldManagerComponent_SetupParameterCollectionInstanceForPlayerLocaion) == 0x000010, "Wrong size on WindSimFieldManagerComponent_SetupParameterCollectionInstanceForPlayerLocaion");
static_assert(offsetof(WindSimFieldManagerComponent_SetupParameterCollectionInstanceForPlayerLocaion, Collection) == 0x000000, "Member 'WindSimFieldManagerComponent_SetupParameterCollectionInstanceForPlayerLocaion::Collection' has a wrong offset!");
static_assert(offsetof(WindSimFieldManagerComponent_SetupParameterCollectionInstanceForPlayerLocaion, ParameterName) == 0x000008, "Member 'WindSimFieldManagerComponent_SetupParameterCollectionInstanceForPlayerLocaion::ParameterName' has a wrong offset!");

// Function WindSimShader.WindSimFieldMotorComponent.AddInputWindVelocity
// 0x0048 (0x0048 - 0x0000)
struct WindSimFieldMotorComponent_AddInputWindVelocity final
{
public:
	EWindSimFieldMotorType                        InType;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                InLocation;                                        // 0x0008(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                InVector;                                          // 0x0020(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InRadius;                                          // 0x0038(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InPower;                                           // 0x003C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InImpulse;                                         // 0x0040(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InDebugDraw;                                       // 0x0041(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0042(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(WindSimFieldMotorComponent_AddInputWindVelocity) == 0x000008, "Wrong alignment on WindSimFieldMotorComponent_AddInputWindVelocity");
static_assert(sizeof(WindSimFieldMotorComponent_AddInputWindVelocity) == 0x000048, "Wrong size on WindSimFieldMotorComponent_AddInputWindVelocity");
static_assert(offsetof(WindSimFieldMotorComponent_AddInputWindVelocity, InType) == 0x000000, "Member 'WindSimFieldMotorComponent_AddInputWindVelocity::InType' has a wrong offset!");
static_assert(offsetof(WindSimFieldMotorComponent_AddInputWindVelocity, InLocation) == 0x000008, "Member 'WindSimFieldMotorComponent_AddInputWindVelocity::InLocation' has a wrong offset!");
static_assert(offsetof(WindSimFieldMotorComponent_AddInputWindVelocity, InVector) == 0x000020, "Member 'WindSimFieldMotorComponent_AddInputWindVelocity::InVector' has a wrong offset!");
static_assert(offsetof(WindSimFieldMotorComponent_AddInputWindVelocity, InRadius) == 0x000038, "Member 'WindSimFieldMotorComponent_AddInputWindVelocity::InRadius' has a wrong offset!");
static_assert(offsetof(WindSimFieldMotorComponent_AddInputWindVelocity, InPower) == 0x00003C, "Member 'WindSimFieldMotorComponent_AddInputWindVelocity::InPower' has a wrong offset!");
static_assert(offsetof(WindSimFieldMotorComponent_AddInputWindVelocity, InImpulse) == 0x000040, "Member 'WindSimFieldMotorComponent_AddInputWindVelocity::InImpulse' has a wrong offset!");
static_assert(offsetof(WindSimFieldMotorComponent_AddInputWindVelocity, InDebugDraw) == 0x000041, "Member 'WindSimFieldMotorComponent_AddInputWindVelocity::InDebugDraw' has a wrong offset!");
static_assert(offsetof(WindSimFieldMotorComponent_AddInputWindVelocity, ReturnValue) == 0x000042, "Member 'WindSimFieldMotorComponent_AddInputWindVelocity::ReturnValue' has a wrong offset!");

// Function WindSimShader.WindSimFieldMotorComponent.SetFadeOut
// 0x0008 (0x0008 - 0x0000)
struct WindSimFieldMotorComponent_SetFadeOut final
{
public:
	float                                         InDelayTime;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InFadeTime;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WindSimFieldMotorComponent_SetFadeOut) == 0x000004, "Wrong alignment on WindSimFieldMotorComponent_SetFadeOut");
static_assert(sizeof(WindSimFieldMotorComponent_SetFadeOut) == 0x000008, "Wrong size on WindSimFieldMotorComponent_SetFadeOut");
static_assert(offsetof(WindSimFieldMotorComponent_SetFadeOut, InDelayTime) == 0x000000, "Member 'WindSimFieldMotorComponent_SetFadeOut::InDelayTime' has a wrong offset!");
static_assert(offsetof(WindSimFieldMotorComponent_SetFadeOut, InFadeTime) == 0x000004, "Member 'WindSimFieldMotorComponent_SetFadeOut::InFadeTime' has a wrong offset!");

}

