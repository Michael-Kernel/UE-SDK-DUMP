#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CriWareAdxLipSync

#include "Basic.hpp"

#include "CriWareAdxLipSync_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function CriWareAdxLipSync.LipsAnalyzerBase.Init
// 0x0008 (0x0008 - 0x0000)
struct LipsAnalyzerBase_Init final
{
public:
	int32                                         MaxInputSamplingRate;                              // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELipsAnalyzerDataReadoutMode                  DataReadoutMode;                                   // 0x0004(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LipsAnalyzerBase_Init) == 0x000004, "Wrong alignment on LipsAnalyzerBase_Init");
static_assert(sizeof(LipsAnalyzerBase_Init) == 0x000008, "Wrong size on LipsAnalyzerBase_Init");
static_assert(offsetof(LipsAnalyzerBase_Init, MaxInputSamplingRate) == 0x000000, "Member 'LipsAnalyzerBase_Init::MaxInputSamplingRate' has a wrong offset!");
static_assert(offsetof(LipsAnalyzerBase_Init, DataReadoutMode) == 0x000004, "Member 'LipsAnalyzerBase_Init::DataReadoutMode' has a wrong offset!");

// Function CriWareAdxLipSync.LipsAnalyzerBase.SetReadoutOffset
// 0x0008 (0x0008 - 0x0000)
struct LipsAnalyzerBase_SetReadoutOffset final
{
public:
	int64                                         OffsetMs;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LipsAnalyzerBase_SetReadoutOffset) == 0x000008, "Wrong alignment on LipsAnalyzerBase_SetReadoutOffset");
static_assert(sizeof(LipsAnalyzerBase_SetReadoutOffset) == 0x000008, "Wrong size on LipsAnalyzerBase_SetReadoutOffset");
static_assert(offsetof(LipsAnalyzerBase_SetReadoutOffset, OffsetMs) == 0x000000, "Member 'LipsAnalyzerBase_SetReadoutOffset::OffsetMs' has a wrong offset!");

// Function CriWareAdxLipSync.LipsAnalyzerBase.SetSamplingRate
// 0x0004 (0x0004 - 0x0000)
struct LipsAnalyzerBase_SetSamplingRate final
{
public:
	int32                                         SamplingRateHz;                                    // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LipsAnalyzerBase_SetSamplingRate) == 0x000004, "Wrong alignment on LipsAnalyzerBase_SetSamplingRate");
static_assert(sizeof(LipsAnalyzerBase_SetSamplingRate) == 0x000004, "Wrong size on LipsAnalyzerBase_SetSamplingRate");
static_assert(offsetof(LipsAnalyzerBase_SetSamplingRate, SamplingRateHz) == 0x000000, "Member 'LipsAnalyzerBase_SetSamplingRate::SamplingRateHz' has a wrong offset!");

// Function CriWareAdxLipSync.LipsAnalyzerBase.SetSilenceThreshold
// 0x0004 (0x0004 - 0x0000)
struct LipsAnalyzerBase_SetSilenceThreshold final
{
public:
	float                                         VolumeDb;                                          // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LipsAnalyzerBase_SetSilenceThreshold) == 0x000004, "Wrong alignment on LipsAnalyzerBase_SetSilenceThreshold");
static_assert(sizeof(LipsAnalyzerBase_SetSilenceThreshold) == 0x000004, "Wrong size on LipsAnalyzerBase_SetSilenceThreshold");
static_assert(offsetof(LipsAnalyzerBase_SetSilenceThreshold, VolumeDb) == 0x000000, "Member 'LipsAnalyzerBase_SetSilenceThreshold::VolumeDb' has a wrong offset!");

// Function CriWareAdxLipSync.LipsAnalyzerBase.GetInfo
// 0x0010 (0x0010 - 0x0000)
struct LipsAnalyzerBase_GetInfo final
{
public:
	struct FCriLipsMouthInfo                      ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(LipsAnalyzerBase_GetInfo) == 0x000004, "Wrong alignment on LipsAnalyzerBase_GetInfo");
static_assert(sizeof(LipsAnalyzerBase_GetInfo) == 0x000010, "Wrong size on LipsAnalyzerBase_GetInfo");
static_assert(offsetof(LipsAnalyzerBase_GetInfo, ReturnValue) == 0x000000, "Member 'LipsAnalyzerBase_GetInfo::ReturnValue' has a wrong offset!");

// Function CriWareAdxLipSync.LipsAnalyzerBase.GetInfoAtSilence
// 0x0010 (0x0010 - 0x0000)
struct LipsAnalyzerBase_GetInfoAtSilence final
{
public:
	struct FCriLipsMouthInfo                      ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(LipsAnalyzerBase_GetInfoAtSilence) == 0x000004, "Wrong alignment on LipsAnalyzerBase_GetInfoAtSilence");
static_assert(sizeof(LipsAnalyzerBase_GetInfoAtSilence) == 0x000010, "Wrong size on LipsAnalyzerBase_GetInfoAtSilence");
static_assert(offsetof(LipsAnalyzerBase_GetInfoAtSilence, ReturnValue) == 0x000000, "Member 'LipsAnalyzerBase_GetInfoAtSilence::ReturnValue' has a wrong offset!");

// Function CriWareAdxLipSync.LipsAnalyzerBase.GetMorphTargetBlendAmountAsJapanese
// 0x0014 (0x0014 - 0x0000)
struct LipsAnalyzerBase_GetMorphTargetBlendAmountAsJapanese final
{
public:
	struct FCriLipsMorphTargetBlendAmountAsJapanese ReturnValue;                                       // 0x0000(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(LipsAnalyzerBase_GetMorphTargetBlendAmountAsJapanese) == 0x000004, "Wrong alignment on LipsAnalyzerBase_GetMorphTargetBlendAmountAsJapanese");
static_assert(sizeof(LipsAnalyzerBase_GetMorphTargetBlendAmountAsJapanese) == 0x000014, "Wrong size on LipsAnalyzerBase_GetMorphTargetBlendAmountAsJapanese");
static_assert(offsetof(LipsAnalyzerBase_GetMorphTargetBlendAmountAsJapanese, ReturnValue) == 0x000000, "Member 'LipsAnalyzerBase_GetMorphTargetBlendAmountAsJapanese::ReturnValue' has a wrong offset!");

// Function CriWareAdxLipSync.LipsAnalyzerBase.GetSilenceThreshold
// 0x0004 (0x0004 - 0x0000)
struct LipsAnalyzerBase_GetSilenceThreshold final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LipsAnalyzerBase_GetSilenceThreshold) == 0x000004, "Wrong alignment on LipsAnalyzerBase_GetSilenceThreshold");
static_assert(sizeof(LipsAnalyzerBase_GetSilenceThreshold) == 0x000004, "Wrong size on LipsAnalyzerBase_GetSilenceThreshold");
static_assert(offsetof(LipsAnalyzerBase_GetSilenceThreshold, ReturnValue) == 0x000000, "Member 'LipsAnalyzerBase_GetSilenceThreshold::ReturnValue' has a wrong offset!");

// Function CriWareAdxLipSync.LipsAnalyzerBase.GetVolume
// 0x0004 (0x0004 - 0x0000)
struct LipsAnalyzerBase_GetVolume final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LipsAnalyzerBase_GetVolume) == 0x000004, "Wrong alignment on LipsAnalyzerBase_GetVolume");
static_assert(sizeof(LipsAnalyzerBase_GetVolume) == 0x000004, "Wrong size on LipsAnalyzerBase_GetVolume");
static_assert(offsetof(LipsAnalyzerBase_GetVolume, ReturnValue) == 0x000000, "Member 'LipsAnalyzerBase_GetVolume::ReturnValue' has a wrong offset!");

// Function CriWareAdxLipSync.LipsAnalyzerBase.IsAtSilence
// 0x0001 (0x0001 - 0x0000)
struct LipsAnalyzerBase_IsAtSilence final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LipsAnalyzerBase_IsAtSilence) == 0x000001, "Wrong alignment on LipsAnalyzerBase_IsAtSilence");
static_assert(sizeof(LipsAnalyzerBase_IsAtSilence) == 0x000001, "Wrong size on LipsAnalyzerBase_IsAtSilence");
static_assert(offsetof(LipsAnalyzerBase_IsAtSilence, ReturnValue) == 0x000000, "Member 'LipsAnalyzerBase_IsAtSilence::ReturnValue' has a wrong offset!");

// Function CriWareAdxLipSync.LipsAtomAnalyzer.Attach
// 0x0008 (0x0008 - 0x0000)
struct LipsAtomAnalyzer_Attach final
{
public:
	class UAtomComponent*                         InAtomComponent;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LipsAtomAnalyzer_Attach) == 0x000008, "Wrong alignment on LipsAtomAnalyzer_Attach");
static_assert(sizeof(LipsAtomAnalyzer_Attach) == 0x000008, "Wrong size on LipsAtomAnalyzer_Attach");
static_assert(offsetof(LipsAtomAnalyzer_Attach, InAtomComponent) == 0x000000, "Member 'LipsAtomAnalyzer_Attach::InAtomComponent' has a wrong offset!");

// Function CriWareAdxLipSync.LipsAtomAnalyzer.IsAttached
// 0x0001 (0x0001 - 0x0000)
struct LipsAtomAnalyzer_IsAttached final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LipsAtomAnalyzer_IsAttached) == 0x000001, "Wrong alignment on LipsAtomAnalyzer_IsAttached");
static_assert(sizeof(LipsAtomAnalyzer_IsAttached) == 0x000001, "Wrong size on LipsAtomAnalyzer_IsAttached");
static_assert(offsetof(LipsAtomAnalyzer_IsAttached, ReturnValue) == 0x000000, "Member 'LipsAtomAnalyzer_IsAttached::ReturnValue' has a wrong offset!");

// Function CriWareAdxLipSync.LipsAtomAnalyzer.GetProcessStatus
// 0x0001 (0x0001 - 0x0000)
struct LipsAtomAnalyzer_GetProcessStatus final
{
public:
	ELipsAtomAnalyzerProcessStatus                ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LipsAtomAnalyzer_GetProcessStatus) == 0x000001, "Wrong alignment on LipsAtomAnalyzer_GetProcessStatus");
static_assert(sizeof(LipsAtomAnalyzer_GetProcessStatus) == 0x000001, "Wrong size on LipsAtomAnalyzer_GetProcessStatus");
static_assert(offsetof(LipsAtomAnalyzer_GetProcessStatus, ReturnValue) == 0x000000, "Member 'LipsAtomAnalyzer_GetProcessStatus::ReturnValue' has a wrong offset!");

// Function CriWareAdxLipSync.LipsAtomAnalyzer.GetReadoutStatus
// 0x0001 (0x0001 - 0x0000)
struct LipsAtomAnalyzer_GetReadoutStatus final
{
public:
	ELipsAtomAnalyzerReadoutStatus                ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LipsAtomAnalyzer_GetReadoutStatus) == 0x000001, "Wrong alignment on LipsAtomAnalyzer_GetReadoutStatus");
static_assert(sizeof(LipsAtomAnalyzer_GetReadoutStatus) == 0x000001, "Wrong size on LipsAtomAnalyzer_GetReadoutStatus");
static_assert(offsetof(LipsAtomAnalyzer_GetReadoutStatus, ReturnValue) == 0x000000, "Member 'LipsAtomAnalyzer_GetReadoutStatus::ReturnValue' has a wrong offset!");

// Function CriWareAdxLipSync.MovieSceneLipSyncAtomSection.SetStartOffset
// 0x0004 (0x0004 - 0x0000)
struct MovieSceneLipSyncAtomSection_SetStartOffset final
{
public:
	struct FFrameNumber                           InStartOffset;                                     // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieSceneLipSyncAtomSection_SetStartOffset) == 0x000004, "Wrong alignment on MovieSceneLipSyncAtomSection_SetStartOffset");
static_assert(sizeof(MovieSceneLipSyncAtomSection_SetStartOffset) == 0x000004, "Wrong size on MovieSceneLipSyncAtomSection_SetStartOffset");
static_assert(offsetof(MovieSceneLipSyncAtomSection_SetStartOffset, InStartOffset) == 0x000000, "Member 'MovieSceneLipSyncAtomSection_SetStartOffset::InStartOffset' has a wrong offset!");

// Function CriWareAdxLipSync.MovieSceneLipSyncAtomSection.GetStartOffset
// 0x0004 (0x0004 - 0x0000)
struct MovieSceneLipSyncAtomSection_GetStartOffset final
{
public:
	struct FFrameNumber                           ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieSceneLipSyncAtomSection_GetStartOffset) == 0x000004, "Wrong alignment on MovieSceneLipSyncAtomSection_GetStartOffset");
static_assert(sizeof(MovieSceneLipSyncAtomSection_GetStartOffset) == 0x000004, "Wrong size on MovieSceneLipSyncAtomSection_GetStartOffset");
static_assert(offsetof(MovieSceneLipSyncAtomSection_GetStartOffset, ReturnValue) == 0x000000, "Member 'MovieSceneLipSyncAtomSection_GetStartOffset::ReturnValue' has a wrong offset!");

}

