#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CharacterTimePlot

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_CharacterTimePlot.WBP_CharacterTimePlot_C.ChangeXAxisValue
// 0x0004 (0x0004 - 0x0000)
struct WBP_CharacterTimePlot_C_ChangeXAxisValue final
{
public:
	float                                         InChangeValue;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharacterTimePlot_C_ChangeXAxisValue) == 0x000004, "Wrong alignment on WBP_CharacterTimePlot_C_ChangeXAxisValue");
static_assert(sizeof(WBP_CharacterTimePlot_C_ChangeXAxisValue) == 0x000004, "Wrong size on WBP_CharacterTimePlot_C_ChangeXAxisValue");
static_assert(offsetof(WBP_CharacterTimePlot_C_ChangeXAxisValue, InChangeValue) == 0x000000, "Member 'WBP_CharacterTimePlot_C_ChangeXAxisValue::InChangeValue' has a wrong offset!");

// Function WBP_CharacterTimePlot.WBP_CharacterTimePlot_C.ExecuteUbergraph_WBP_CharacterTimePlot
// 0x0060 (0x0060 - 0x0000)
struct WBP_CharacterTimePlot_C_ExecuteUbergraph_WBP_CharacterTimePlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float InChangeValue)>          K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0018(0x0040)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_InChangeValue;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharacterTimePlot_C_ExecuteUbergraph_WBP_CharacterTimePlot) == 0x000008, "Wrong alignment on WBP_CharacterTimePlot_C_ExecuteUbergraph_WBP_CharacterTimePlot");
static_assert(sizeof(WBP_CharacterTimePlot_C_ExecuteUbergraph_WBP_CharacterTimePlot) == 0x000060, "Wrong size on WBP_CharacterTimePlot_C_ExecuteUbergraph_WBP_CharacterTimePlot");
static_assert(offsetof(WBP_CharacterTimePlot_C_ExecuteUbergraph_WBP_CharacterTimePlot, EntryPoint) == 0x000000, "Member 'WBP_CharacterTimePlot_C_ExecuteUbergraph_WBP_CharacterTimePlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CharacterTimePlot_C_ExecuteUbergraph_WBP_CharacterTimePlot, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_CharacterTimePlot_C_ExecuteUbergraph_WBP_CharacterTimePlot::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_CharacterTimePlot_C_ExecuteUbergraph_WBP_CharacterTimePlot, K2Node_Event_MyGeometry) == 0x000018, "Member 'WBP_CharacterTimePlot_C_ExecuteUbergraph_WBP_CharacterTimePlot::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_CharacterTimePlot_C_ExecuteUbergraph_WBP_CharacterTimePlot, K2Node_Event_InDeltaTime) == 0x000058, "Member 'WBP_CharacterTimePlot_C_ExecuteUbergraph_WBP_CharacterTimePlot::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_CharacterTimePlot_C_ExecuteUbergraph_WBP_CharacterTimePlot, K2Node_CustomEvent_InChangeValue) == 0x00005C, "Member 'WBP_CharacterTimePlot_C_ExecuteUbergraph_WBP_CharacterTimePlot::K2Node_CustomEvent_InChangeValue' has a wrong offset!");

// Function WBP_CharacterTimePlot.WBP_CharacterTimePlot_C.Tick
// 0x0048 (0x0048 - 0x0000)
struct WBP_CharacterTimePlot_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharacterTimePlot_C_Tick) == 0x000008, "Wrong alignment on WBP_CharacterTimePlot_C_Tick");
static_assert(sizeof(WBP_CharacterTimePlot_C_Tick) == 0x000048, "Wrong size on WBP_CharacterTimePlot_C_Tick");
static_assert(offsetof(WBP_CharacterTimePlot_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_CharacterTimePlot_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_CharacterTimePlot_C_Tick, InDeltaTime) == 0x000040, "Member 'WBP_CharacterTimePlot_C_Tick::InDeltaTime' has a wrong offset!");

}

