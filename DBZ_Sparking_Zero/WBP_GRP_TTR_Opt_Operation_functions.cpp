#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GRP_TTR_Opt_Operation

#include "Basic.hpp"

#include "WBP_GRP_TTR_Opt_Operation_classes.hpp"
#include "WBP_GRP_TTR_Opt_Operation_parameters.hpp"


namespace SDK
{

// Function WBP_GRP_TTR_Opt_Operation.WBP_GRP_TTR_Opt_Operation_C.ExecuteUbergraph_WBP_GRP_TTR_Opt_Operation
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_GRP_TTR_Opt_Operation_C::ExecuteUbergraph_WBP_GRP_TTR_Opt_Operation(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GRP_TTR_Opt_Operation_C", "ExecuteUbergraph_WBP_GRP_TTR_Opt_Operation");

	Params::WBP_GRP_TTR_Opt_Operation_C_ExecuteUbergraph_WBP_GRP_TTR_Opt_Operation Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_GRP_TTR_Opt_Operation.WBP_GRP_TTR_Opt_Operation_C.OnChangeOut0
// (Event, Public, BlueprintEvent)

void UWBP_GRP_TTR_Opt_Operation_C::OnChangeOut0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GRP_TTR_Opt_Operation_C", "OnChangeOut0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_GRP_TTR_Opt_Operation.WBP_GRP_TTR_Opt_Operation_C.OnChangeOut1
// (Event, Public, BlueprintEvent)

void UWBP_GRP_TTR_Opt_Operation_C::OnChangeOut1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GRP_TTR_Opt_Operation_C", "OnChangeOut1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_GRP_TTR_Opt_Operation.WBP_GRP_TTR_Opt_Operation_C.OnChangeSwitch0to1
// (Event, Public, BlueprintEvent)

void UWBP_GRP_TTR_Opt_Operation_C::OnChangeSwitch0to1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GRP_TTR_Opt_Operation_C", "OnChangeSwitch0to1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_GRP_TTR_Opt_Operation.WBP_GRP_TTR_Opt_Operation_C.OnChangeSwitch1
// (Event, Public, BlueprintEvent)

void UWBP_GRP_TTR_Opt_Operation_C::OnChangeSwitch1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GRP_TTR_Opt_Operation_C", "OnChangeSwitch1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_GRP_TTR_Opt_Operation.WBP_GRP_TTR_Opt_Operation_C.OnChangeSwitch1to0
// (Event, Public, BlueprintEvent)

void UWBP_GRP_TTR_Opt_Operation_C::OnChangeSwitch1to0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GRP_TTR_Opt_Operation_C", "OnChangeSwitch1to0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_GRP_TTR_Opt_Operation.WBP_GRP_TTR_Opt_Operation_C.OnHideStarted
// (Event, Public, BlueprintEvent)

void UWBP_GRP_TTR_Opt_Operation_C::OnHideStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GRP_TTR_Opt_Operation_C", "OnHideStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_GRP_TTR_Opt_Operation.WBP_GRP_TTR_Opt_Operation_C.OnShowFinished
// (Event, Public, BlueprintEvent)

void UWBP_GRP_TTR_Opt_Operation_C::OnShowFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GRP_TTR_Opt_Operation_C", "OnShowFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_GRP_TTR_Opt_Operation.WBP_GRP_TTR_Opt_Operation_C.OnShowStarted
// (Event, Public, BlueprintEvent)

void UWBP_GRP_TTR_Opt_Operation_C::OnShowStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GRP_TTR_Opt_Operation_C", "OnShowStarted");

	UObject::ProcessEvent(Func, nullptr);
}

}

