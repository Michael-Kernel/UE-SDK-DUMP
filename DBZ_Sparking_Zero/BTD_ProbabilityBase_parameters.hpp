#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTD_ProbabilityBase

#include "Basic.hpp"

#include "SS_structs.hpp"


namespace SDK::Params
{

// Function BTD_ProbabilityBase.BTD_ProbabilityBase_C.Get Probability Emotional Addition
// 0x0030 (0x0030 - 0x0000)
struct BTD_ProbabilityBase_C_Get_Probability_Emotional_Addition final
{
public:
	class AActor*                                 InOwnerActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         OutProbabilityLvMin;                               // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OutProbabilityLvMax;                               // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ProbabilityMin;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ProbabilityMax;                                    // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AiLevel;                                           // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EmotionParam;                                      // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetupWorkMini_ReturnValue;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetProbabilityEmotionalAdditionCpp_OutProbabilityMin; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetProbabilityEmotionalAdditionCpp_OutProbabilityMax; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_ProbabilityBase_C_Get_Probability_Emotional_Addition) == 0x000008, "Wrong alignment on BTD_ProbabilityBase_C_Get_Probability_Emotional_Addition");
static_assert(sizeof(BTD_ProbabilityBase_C_Get_Probability_Emotional_Addition) == 0x000030, "Wrong size on BTD_ProbabilityBase_C_Get_Probability_Emotional_Addition");
static_assert(offsetof(BTD_ProbabilityBase_C_Get_Probability_Emotional_Addition, InOwnerActor) == 0x000000, "Member 'BTD_ProbabilityBase_C_Get_Probability_Emotional_Addition::InOwnerActor' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_Get_Probability_Emotional_Addition, OutProbabilityLvMin) == 0x000008, "Member 'BTD_ProbabilityBase_C_Get_Probability_Emotional_Addition::OutProbabilityLvMin' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_Get_Probability_Emotional_Addition, OutProbabilityLvMax) == 0x00000C, "Member 'BTD_ProbabilityBase_C_Get_Probability_Emotional_Addition::OutProbabilityLvMax' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_Get_Probability_Emotional_Addition, ProbabilityMin) == 0x000010, "Member 'BTD_ProbabilityBase_C_Get_Probability_Emotional_Addition::ProbabilityMin' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_Get_Probability_Emotional_Addition, ProbabilityMax) == 0x000014, "Member 'BTD_ProbabilityBase_C_Get_Probability_Emotional_Addition::ProbabilityMax' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_Get_Probability_Emotional_Addition, AiLevel) == 0x000018, "Member 'BTD_ProbabilityBase_C_Get_Probability_Emotional_Addition::AiLevel' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_Get_Probability_Emotional_Addition, EmotionParam) == 0x00001C, "Member 'BTD_ProbabilityBase_C_Get_Probability_Emotional_Addition::EmotionParam' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_Get_Probability_Emotional_Addition, CallFunc_SetupWorkMini_ReturnValue) == 0x000020, "Member 'BTD_ProbabilityBase_C_Get_Probability_Emotional_Addition::CallFunc_SetupWorkMini_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_Get_Probability_Emotional_Addition, CallFunc_GetProbabilityEmotionalAdditionCpp_OutProbabilityMin) == 0x000024, "Member 'BTD_ProbabilityBase_C_Get_Probability_Emotional_Addition::CallFunc_GetProbabilityEmotionalAdditionCpp_OutProbabilityMin' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_Get_Probability_Emotional_Addition, CallFunc_GetProbabilityEmotionalAdditionCpp_OutProbabilityMax) == 0x000028, "Member 'BTD_ProbabilityBase_C_Get_Probability_Emotional_Addition::CallFunc_GetProbabilityEmotionalAdditionCpp_OutProbabilityMax' has a wrong offset!");

// Function BTD_ProbabilityBase.BTD_ProbabilityBase_C.GetProbability
// 0x0010 (0x0010 - 0x0000)
struct BTD_ProbabilityBase_C_GetProbability final
{
public:
	class AActor*                                 InOwnerActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          InSendLog;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OutProbability;                                    // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_ProbabilityBase_C_GetProbability) == 0x000008, "Wrong alignment on BTD_ProbabilityBase_C_GetProbability");
static_assert(sizeof(BTD_ProbabilityBase_C_GetProbability) == 0x000010, "Wrong size on BTD_ProbabilityBase_C_GetProbability");
static_assert(offsetof(BTD_ProbabilityBase_C_GetProbability, InOwnerActor) == 0x000000, "Member 'BTD_ProbabilityBase_C_GetProbability::InOwnerActor' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_GetProbability, InSendLog) == 0x000008, "Member 'BTD_ProbabilityBase_C_GetProbability::InSendLog' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_GetProbability, OutProbability) == 0x00000C, "Member 'BTD_ProbabilityBase_C_GetProbability::OutProbability' has a wrong offset!");

// Function BTD_ProbabilityBase.BTD_ProbabilityBase_C.GetProbabilityItemAddition
// 0x0078 (0x0078 - 0x0000)
struct BTD_ProbabilityBase_C_GetProbabilityItemAddition final
{
public:
	class AActor*                                 InOwnerActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         OutProbabilityLvMin;                               // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OutProbabilityLvMax;                               // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSSAiItem                              Item;                                              // 0x0010(0x0018)(Edit, BlueprintVisible, NoDestructor)
	class USSAiDataAsset*                         AiDataAsset;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratGameSingleton*                    CallFunc_GetKoratGameSingleton_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKoratCharacterItemDataList            CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemEquipped_ReturnValue;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSAiItem                              CallFunc_Map_Find_Value;                           // 0x0050(0x0018)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_ProbabilityBase_C_GetProbabilityItemAddition) == 0x000008, "Wrong alignment on BTD_ProbabilityBase_C_GetProbabilityItemAddition");
static_assert(sizeof(BTD_ProbabilityBase_C_GetProbabilityItemAddition) == 0x000078, "Wrong size on BTD_ProbabilityBase_C_GetProbabilityItemAddition");
static_assert(offsetof(BTD_ProbabilityBase_C_GetProbabilityItemAddition, InOwnerActor) == 0x000000, "Member 'BTD_ProbabilityBase_C_GetProbabilityItemAddition::InOwnerActor' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_GetProbabilityItemAddition, OutProbabilityLvMin) == 0x000008, "Member 'BTD_ProbabilityBase_C_GetProbabilityItemAddition::OutProbabilityLvMin' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_GetProbabilityItemAddition, OutProbabilityLvMax) == 0x00000C, "Member 'BTD_ProbabilityBase_C_GetProbabilityItemAddition::OutProbabilityLvMax' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_GetProbabilityItemAddition, Item) == 0x000010, "Member 'BTD_ProbabilityBase_C_GetProbabilityItemAddition::Item' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_GetProbabilityItemAddition, AiDataAsset) == 0x000028, "Member 'BTD_ProbabilityBase_C_GetProbabilityItemAddition::AiDataAsset' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_GetProbabilityItemAddition, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BTD_ProbabilityBase_C_GetProbabilityItemAddition::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_GetProbabilityItemAddition, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'BTD_ProbabilityBase_C_GetProbabilityItemAddition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_GetProbabilityItemAddition, CallFunc_GetKoratGameSingleton_ReturnValue) == 0x000038, "Member 'BTD_ProbabilityBase_C_GetProbabilityItemAddition::CallFunc_GetKoratGameSingleton_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_GetProbabilityItemAddition, CallFunc_Array_Get_Item) == 0x000040, "Member 'BTD_ProbabilityBase_C_GetProbabilityItemAddition::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_GetProbabilityItemAddition, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BTD_ProbabilityBase_C_GetProbabilityItemAddition::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_GetProbabilityItemAddition, CallFunc_IsItemEquipped_ReturnValue) == 0x00004C, "Member 'BTD_ProbabilityBase_C_GetProbabilityItemAddition::CallFunc_IsItemEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_GetProbabilityItemAddition, CallFunc_Map_Find_Value) == 0x000050, "Member 'BTD_ProbabilityBase_C_GetProbabilityItemAddition::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_GetProbabilityItemAddition, CallFunc_Map_Find_ReturnValue) == 0x000068, "Member 'BTD_ProbabilityBase_C_GetProbabilityItemAddition::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_GetProbabilityItemAddition, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'BTD_ProbabilityBase_C_GetProbabilityItemAddition::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_GetProbabilityItemAddition, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BTD_ProbabilityBase_C_GetProbabilityItemAddition::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_GetProbabilityItemAddition, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'BTD_ProbabilityBase_C_GetProbabilityItemAddition::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BTD_ProbabilityBase.BTD_ProbabilityBase_C.PerformConditionCheck
// 0x0048 (0x0048 - 0x0000)
struct BTD_ProbabilityBase_C_PerformConditionCheck final
{
public:
	class AActor*                                 OwnerActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Log;                                               // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 FirstDecoratorName;                                // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FSSAiProbabilityCalculation            ProbabilityCalculation;                            // 0x0030(0x0010)(Edit, BlueprintVisible, NoDestructor)
	int32                                         Probability;                                       // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bResult;                                           // 0x0044(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetupWorkMini_ReturnValue;                // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetProbabilityConditionCheckCpp_ReturnValue; // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_ProbabilityBase_C_PerformConditionCheck) == 0x000008, "Wrong alignment on BTD_ProbabilityBase_C_PerformConditionCheck");
static_assert(sizeof(BTD_ProbabilityBase_C_PerformConditionCheck) == 0x000048, "Wrong size on BTD_ProbabilityBase_C_PerformConditionCheck");
static_assert(offsetof(BTD_ProbabilityBase_C_PerformConditionCheck, OwnerActor) == 0x000000, "Member 'BTD_ProbabilityBase_C_PerformConditionCheck::OwnerActor' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_PerformConditionCheck, ReturnValue) == 0x000008, "Member 'BTD_ProbabilityBase_C_PerformConditionCheck::ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_PerformConditionCheck, Log) == 0x000010, "Member 'BTD_ProbabilityBase_C_PerformConditionCheck::Log' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_PerformConditionCheck, FirstDecoratorName) == 0x000020, "Member 'BTD_ProbabilityBase_C_PerformConditionCheck::FirstDecoratorName' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_PerformConditionCheck, ProbabilityCalculation) == 0x000030, "Member 'BTD_ProbabilityBase_C_PerformConditionCheck::ProbabilityCalculation' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_PerformConditionCheck, Probability) == 0x000040, "Member 'BTD_ProbabilityBase_C_PerformConditionCheck::Probability' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_PerformConditionCheck, bResult) == 0x000044, "Member 'BTD_ProbabilityBase_C_PerformConditionCheck::bResult' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_PerformConditionCheck, CallFunc_SetupWorkMini_ReturnValue) == 0x000045, "Member 'BTD_ProbabilityBase_C_PerformConditionCheck::CallFunc_SetupWorkMini_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_PerformConditionCheck, CallFunc_GetProbabilityConditionCheckCpp_ReturnValue) == 0x000046, "Member 'BTD_ProbabilityBase_C_PerformConditionCheck::CallFunc_GetProbabilityConditionCheckCpp_ReturnValue' has a wrong offset!");

// Function BTD_ProbabilityBase.BTD_ProbabilityBase_C.PublicPerformConditionCheck
// 0x0010 (0x0010 - 0x0000)
struct BTD_ProbabilityBase_C_PublicPerformConditionCheck final
{
public:
	class AActor*                                 InOwnerActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_ProbabilityBase_C_PublicPerformConditionCheck) == 0x000008, "Wrong alignment on BTD_ProbabilityBase_C_PublicPerformConditionCheck");
static_assert(sizeof(BTD_ProbabilityBase_C_PublicPerformConditionCheck) == 0x000010, "Wrong size on BTD_ProbabilityBase_C_PublicPerformConditionCheck");
static_assert(offsetof(BTD_ProbabilityBase_C_PublicPerformConditionCheck, InOwnerActor) == 0x000000, "Member 'BTD_ProbabilityBase_C_PublicPerformConditionCheck::InOwnerActor' has a wrong offset!");
static_assert(offsetof(BTD_ProbabilityBase_C_PublicPerformConditionCheck, ReturnValue) == 0x000008, "Member 'BTD_ProbabilityBase_C_PublicPerformConditionCheck::ReturnValue' has a wrong offset!");

}

