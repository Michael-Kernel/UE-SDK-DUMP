#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AiPerceptionComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SS_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AiPerceptionComponent.BP_AiPerceptionComponent_C
// 0x0018 (0x01E8 - 0x01D0)
class UBP_AiPerceptionComponent_C final : public USSAiPerceptionComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_CharacterMontageComponent_C*        MyselfMontageComponent;                            // 0x01D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterMontageComponent_C*        TargetMontageComponent;                            // 0x01E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void Check_Lightning_Attack();
	void CheckDragonHoming();
	void CheckRushHighSpeedMoveCounter(double InDeltaTime);
	void CheckVanishingAttack();
	void ExecuteUbergraph_BP_AiPerceptionComponent(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void Update_Blackboard();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AiPerceptionComponent_C">();
	}
	static class UBP_AiPerceptionComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AiPerceptionComponent_C>();
	}
};
static_assert(alignof(UBP_AiPerceptionComponent_C) == 0x000008, "Wrong alignment on UBP_AiPerceptionComponent_C");
static_assert(sizeof(UBP_AiPerceptionComponent_C) == 0x0001E8, "Wrong size on UBP_AiPerceptionComponent_C");
static_assert(offsetof(UBP_AiPerceptionComponent_C, UberGraphFrame) == 0x0001D0, "Member 'UBP_AiPerceptionComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_AiPerceptionComponent_C, MyselfMontageComponent) == 0x0001D8, "Member 'UBP_AiPerceptionComponent_C::MyselfMontageComponent' has a wrong offset!");
static_assert(offsetof(UBP_AiPerceptionComponent_C, TargetMontageComponent) == 0x0001E0, "Member 'UBP_AiPerceptionComponent_C::TargetMontageComponent' has a wrong offset!");

}

