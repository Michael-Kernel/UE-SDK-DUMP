#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_ActionCommand

#include "Basic.hpp"

#include "BTT_ActionCommand_classes.hpp"
#include "BTT_ActionCommand_parameters.hpp"


namespace SDK
{

// Function BTT_ActionCommand.BTT_ActionCommand_C.ExecuteUbergraph_BTT_ActionCommand
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_ActionCommand_C::ExecuteUbergraph_BTT_ActionCommand(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_ActionCommand_C", "ExecuteUbergraph_BTT_ActionCommand");

	Params::BTT_ActionCommand_C_ExecuteUbergraph_BTT_ActionCommand Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_ActionCommand.BTT_ActionCommand_C.GetRandom
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USSRandom*                        Random                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBTT_ActionCommand_C::GetRandom(class USSRandom** Random)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_ActionCommand_C", "GetRandom");

	Params::BTT_ActionCommand_C_GetRandom Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Random != nullptr)
		*Random = Parms.Random;
}


// Function BTT_ActionCommand.BTT_ActionCommand_C.InputCommand
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             InCommandId                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    OutSuccess                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_ActionCommand_C::InputCommand(class FName InCommandId, bool* OutSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_ActionCommand_C", "InputCommand");

	Params::BTT_ActionCommand_C_InputCommand Parms{};

	Parms.InCommandId = InCommandId;

	UObject::ProcessEvent(Func, &Parms);

	if (OutSuccess != nullptr)
		*OutSuccess = Parms.OutSuccess;
}


// Function BTT_ActionCommand.BTT_ActionCommand_C.ReceiveExecuteAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBTT_ActionCommand_C::ReceiveExecuteAI(class AAIController* OwnerController_0, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_ActionCommand_C", "ReceiveExecuteAI");

	Params::BTT_ActionCommand_C_ReceiveExecuteAI Parms{};

	Parms.OwnerController_0 = OwnerController_0;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_ActionCommand.BTT_ActionCommand_C.ReceiveTickAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_ActionCommand_C::ReceiveTickAI(class AAIController* OwnerController_0, class APawn* ControlledPawn, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_ActionCommand_C", "ReceiveTickAI");

	Params::BTT_ActionCommand_C_ReceiveTickAI Parms{};

	Parms.OwnerController_0 = OwnerController_0;
	Parms.ControlledPawn = ControlledPawn;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_ActionCommand.BTT_ActionCommand_C.Setup
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAIController*                    InOwnerController                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            InControlled_Pawn                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    OutResult                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_ActionCommand_C::Setup(class AAIController* InOwnerController, class APawn* InControlled_Pawn, bool* OutResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_ActionCommand_C", "Setup");

	Params::BTT_ActionCommand_C_Setup Parms{};

	Parms.InOwnerController = InOwnerController;
	Parms.InControlled_Pawn = InControlled_Pawn;

	UObject::ProcessEvent(Func, &Parms);

	if (OutResult != nullptr)
		*OutResult = Parms.OutResult;
}


// Function BTT_ActionCommand.BTT_ActionCommand_C.UpdateCommand
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USSAiPadGenerationComponent*      InAiPadGenerationComponent                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBTT_ActionCommand_C::UpdateCommand(class USSAiPadGenerationComponent* InAiPadGenerationComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_ActionCommand_C", "UpdateCommand");

	Params::BTT_ActionCommand_C_UpdateCommand Parms{};

	Parms.InAiPadGenerationComponent = InAiPadGenerationComponent;

	UObject::ProcessEvent(Func, &Parms);
}

}

