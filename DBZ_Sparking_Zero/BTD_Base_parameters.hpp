#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTD_Base

#include "Basic.hpp"

#include "SS_structs.hpp"


namespace SDK::Params
{

// Function BTD_Base.BTD_Base_C.AddLog
// 0x00A0 (0x00A0 - 0x0000)
struct BTD_Base_C_AddLog final
{
public:
	class AActor*                                 InOwnerActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 InLog;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 InSuffixLog;                                       // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          InSendLog;                                         // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Log;                                               // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Left_ReturnValue;                         // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSBattleAIController*                  K2Node_DynamicCast_AsSSBattle_AIController;        // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_Base_C_AddLog) == 0x000008, "Wrong alignment on BTD_Base_C_AddLog");
static_assert(sizeof(BTD_Base_C_AddLog) == 0x0000A0, "Wrong size on BTD_Base_C_AddLog");
static_assert(offsetof(BTD_Base_C_AddLog, InOwnerActor) == 0x000000, "Member 'BTD_Base_C_AddLog::InOwnerActor' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_AddLog, InLog) == 0x000008, "Member 'BTD_Base_C_AddLog::InLog' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_AddLog, InSuffixLog) == 0x000018, "Member 'BTD_Base_C_AddLog::InSuffixLog' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_AddLog, InSendLog) == 0x000028, "Member 'BTD_Base_C_AddLog::InSendLog' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_AddLog, Log) == 0x000030, "Member 'BTD_Base_C_AddLog::Log' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_AddLog, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'BTD_Base_C_AddLog::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_AddLog, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000050, "Member 'BTD_Base_C_AddLog::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_AddLog, CallFunc_Left_ReturnValue) == 0x000060, "Member 'BTD_Base_C_AddLog::CallFunc_Left_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_AddLog, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000070, "Member 'BTD_Base_C_AddLog::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_AddLog, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000078, "Member 'BTD_Base_C_AddLog::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_AddLog, CallFunc_IsEmpty_ReturnValue) == 0x000088, "Member 'BTD_Base_C_AddLog::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_AddLog, K2Node_DynamicCast_AsSSBattle_AIController) == 0x000090, "Member 'BTD_Base_C_AddLog::K2Node_DynamicCast_AsSSBattle_AIController' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_AddLog, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'BTD_Base_C_AddLog::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BTD_Base.BTD_Base_C.Get Log Prefix Name
// 0x0110 (0x0110 - 0x0000)
struct BTD_Base_C_Get_Log_Prefix_Name final
{
public:
	class AActor*                                 InOwnerActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 OutName;                                           // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetFlowAbortMode_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSBattleAIController*                  K2Node_DynamicCast_AsSSBattle_AIController;        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSAiBTDecoratorUtilityComponent*       CallFunc_GetDecoratorUtilityComponent_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_AiBTDecoratorUtilityComponent_C*    K2Node_DynamicCast_AsBP_Ai_BTDecorator_Utility_Component; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDecoratorName_ReturnValue;             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetExecutionIndex_ReturnValue;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetTreeName_ReturnValue;                  // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_Base_C_Get_Log_Prefix_Name) == 0x000008, "Wrong alignment on BTD_Base_C_Get_Log_Prefix_Name");
static_assert(sizeof(BTD_Base_C_Get_Log_Prefix_Name) == 0x000110, "Wrong size on BTD_Base_C_Get_Log_Prefix_Name");
static_assert(offsetof(BTD_Base_C_Get_Log_Prefix_Name, InOwnerActor) == 0x000000, "Member 'BTD_Base_C_Get_Log_Prefix_Name::InOwnerActor' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Get_Log_Prefix_Name, OutName) == 0x000008, "Member 'BTD_Base_C_Get_Log_Prefix_Name::OutName' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Get_Log_Prefix_Name, CallFunc_GetFlowAbortMode_ReturnValue) == 0x000018, "Member 'BTD_Base_C_Get_Log_Prefix_Name::CallFunc_GetFlowAbortMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Get_Log_Prefix_Name, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BTD_Base_C_Get_Log_Prefix_Name::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Get_Log_Prefix_Name, K2Node_DynamicCast_AsSSBattle_AIController) == 0x000030, "Member 'BTD_Base_C_Get_Log_Prefix_Name::K2Node_DynamicCast_AsSSBattle_AIController' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Get_Log_Prefix_Name, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BTD_Base_C_Get_Log_Prefix_Name::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Get_Log_Prefix_Name, CallFunc_GetDecoratorUtilityComponent_ReturnValue) == 0x000040, "Member 'BTD_Base_C_Get_Log_Prefix_Name::CallFunc_GetDecoratorUtilityComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Get_Log_Prefix_Name, K2Node_DynamicCast_AsBP_Ai_BTDecorator_Utility_Component) == 0x000048, "Member 'BTD_Base_C_Get_Log_Prefix_Name::K2Node_DynamicCast_AsBP_Ai_BTDecorator_Utility_Component' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Get_Log_Prefix_Name, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BTD_Base_C_Get_Log_Prefix_Name::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Get_Log_Prefix_Name, CallFunc_IsValid_ReturnValue_1) == 0x000051, "Member 'BTD_Base_C_Get_Log_Prefix_Name::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Get_Log_Prefix_Name, CallFunc_GetDecoratorName_ReturnValue) == 0x000058, "Member 'BTD_Base_C_Get_Log_Prefix_Name::CallFunc_GetDecoratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Get_Log_Prefix_Name, CallFunc_GetExecutionIndex_ReturnValue) == 0x000068, "Member 'BTD_Base_C_Get_Log_Prefix_Name::CallFunc_GetExecutionIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Get_Log_Prefix_Name, CallFunc_Conv_IntToString_ReturnValue) == 0x000070, "Member 'BTD_Base_C_Get_Log_Prefix_Name::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Get_Log_Prefix_Name, CallFunc_GetTreeName_ReturnValue) == 0x000080, "Member 'BTD_Base_C_Get_Log_Prefix_Name::CallFunc_GetTreeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Get_Log_Prefix_Name, CallFunc_Concat_StrStr_ReturnValue) == 0x000090, "Member 'BTD_Base_C_Get_Log_Prefix_Name::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Get_Log_Prefix_Name, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000A0, "Member 'BTD_Base_C_Get_Log_Prefix_Name::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Get_Log_Prefix_Name, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000B0, "Member 'BTD_Base_C_Get_Log_Prefix_Name::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Get_Log_Prefix_Name, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000C0, "Member 'BTD_Base_C_Get_Log_Prefix_Name::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Get_Log_Prefix_Name, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000D0, "Member 'BTD_Base_C_Get_Log_Prefix_Name::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Get_Log_Prefix_Name, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000E0, "Member 'BTD_Base_C_Get_Log_Prefix_Name::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Get_Log_Prefix_Name, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0000F0, "Member 'BTD_Base_C_Get_Log_Prefix_Name::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Get_Log_Prefix_Name, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000100, "Member 'BTD_Base_C_Get_Log_Prefix_Name::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");

// Function BTD_Base.BTD_Base_C.GetConditionNodeName
// 0x0090 (0x0090 - 0x0000)
struct BTD_Base_C_GetConditionNodeName final
{
public:
	class AActor*                                 InOwnerActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 OutConditionNodeName;                              // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class ASSBattleAIController*                  K2Node_DynamicCast_AsSSBattle_AIController;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetExecutionIndex_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetTreeName_ReturnValue;                  // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USSAiBTDecoratorUtilityComponent*       CallFunc_GetDecoratorUtilityComponent_ReturnValue; // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_AiBTDecoratorUtilityComponent_C*    K2Node_DynamicCast_AsBP_Ai_BTDecorator_Utility_Component; // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_Base_C_GetConditionNodeName) == 0x000008, "Wrong alignment on BTD_Base_C_GetConditionNodeName");
static_assert(sizeof(BTD_Base_C_GetConditionNodeName) == 0x000090, "Wrong size on BTD_Base_C_GetConditionNodeName");
static_assert(offsetof(BTD_Base_C_GetConditionNodeName, InOwnerActor) == 0x000000, "Member 'BTD_Base_C_GetConditionNodeName::InOwnerActor' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_GetConditionNodeName, OutConditionNodeName) == 0x000008, "Member 'BTD_Base_C_GetConditionNodeName::OutConditionNodeName' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_GetConditionNodeName, K2Node_DynamicCast_AsSSBattle_AIController) == 0x000018, "Member 'BTD_Base_C_GetConditionNodeName::K2Node_DynamicCast_AsSSBattle_AIController' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_GetConditionNodeName, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BTD_Base_C_GetConditionNodeName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_GetConditionNodeName, CallFunc_GetExecutionIndex_ReturnValue) == 0x000024, "Member 'BTD_Base_C_GetConditionNodeName::CallFunc_GetExecutionIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_GetConditionNodeName, CallFunc_GetTreeName_ReturnValue) == 0x000028, "Member 'BTD_Base_C_GetConditionNodeName::CallFunc_GetTreeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_GetConditionNodeName, CallFunc_Conv_IntToString_ReturnValue) == 0x000038, "Member 'BTD_Base_C_GetConditionNodeName::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_GetConditionNodeName, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'BTD_Base_C_GetConditionNodeName::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_GetConditionNodeName, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000058, "Member 'BTD_Base_C_GetConditionNodeName::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_GetConditionNodeName, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000068, "Member 'BTD_Base_C_GetConditionNodeName::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_GetConditionNodeName, CallFunc_GetDecoratorUtilityComponent_ReturnValue) == 0x000078, "Member 'BTD_Base_C_GetConditionNodeName::CallFunc_GetDecoratorUtilityComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_GetConditionNodeName, K2Node_DynamicCast_AsBP_Ai_BTDecorator_Utility_Component) == 0x000080, "Member 'BTD_Base_C_GetConditionNodeName::K2Node_DynamicCast_AsBP_Ai_BTDecorator_Utility_Component' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_GetConditionNodeName, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'BTD_Base_C_GetConditionNodeName::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_GetConditionNodeName, CallFunc_IsValid_ReturnValue) == 0x000089, "Member 'BTD_Base_C_GetConditionNodeName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_GetConditionNodeName, CallFunc_IsValid_ReturnValue_1) == 0x00008A, "Member 'BTD_Base_C_GetConditionNodeName::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_GetConditionNodeName, CallFunc_IsEmpty_ReturnValue) == 0x00008B, "Member 'BTD_Base_C_GetConditionNodeName::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");

// Function BTD_Base.BTD_Base_C.GetRandom
// 0x0010 (0x0010 - 0x0000)
struct BTD_Base_C_GetRandom final
{
public:
	class USSRandom*                              OutRandom;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_Base_C_GetRandom) == 0x000008, "Wrong alignment on BTD_Base_C_GetRandom");
static_assert(sizeof(BTD_Base_C_GetRandom) == 0x000010, "Wrong size on BTD_Base_C_GetRandom");
static_assert(offsetof(BTD_Base_C_GetRandom, OutRandom) == 0x000000, "Member 'BTD_Base_C_GetRandom::OutRandom' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_GetRandom, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BTD_Base_C_GetRandom::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BTD_Base.BTD_Base_C.Is Condition Checked
// 0x00A0 (0x00A0 - 0x0000)
struct BTD_Base_C_Is_Condition_Checked final
{
public:
	class AActor*                                 InOwnerActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESSAiNodeConditionResultType                  OutChked;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 NodeName_0;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	ESSAiNodeConditionResultType                  CallFunc_IsConditionResults_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetExecutionIndex_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetTreeName_ReturnValue;                  // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USSAiBTDecoratorUtilityComponent*       CallFunc_GetDecoratorUtilityComponent_ReturnValue; // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_AiBTDecoratorUtilityComponent_C*    K2Node_DynamicCast_AsBP_Ai_BTDecorator_Utility_Component; // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSBattleAIController*                  K2Node_DynamicCast_AsSSBattle_AIController;        // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_Base_C_Is_Condition_Checked) == 0x000008, "Wrong alignment on BTD_Base_C_Is_Condition_Checked");
static_assert(sizeof(BTD_Base_C_Is_Condition_Checked) == 0x0000A0, "Wrong size on BTD_Base_C_Is_Condition_Checked");
static_assert(offsetof(BTD_Base_C_Is_Condition_Checked, InOwnerActor) == 0x000000, "Member 'BTD_Base_C_Is_Condition_Checked::InOwnerActor' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Is_Condition_Checked, OutChked) == 0x000008, "Member 'BTD_Base_C_Is_Condition_Checked::OutChked' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Is_Condition_Checked, NodeName_0) == 0x000010, "Member 'BTD_Base_C_Is_Condition_Checked::NodeName_0' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Is_Condition_Checked, CallFunc_IsConditionResults_ReturnValue) == 0x000020, "Member 'BTD_Base_C_Is_Condition_Checked::CallFunc_IsConditionResults_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Is_Condition_Checked, CallFunc_GetExecutionIndex_ReturnValue) == 0x000024, "Member 'BTD_Base_C_Is_Condition_Checked::CallFunc_GetExecutionIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Is_Condition_Checked, CallFunc_GetTreeName_ReturnValue) == 0x000028, "Member 'BTD_Base_C_Is_Condition_Checked::CallFunc_GetTreeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Is_Condition_Checked, CallFunc_Conv_IntToString_ReturnValue) == 0x000038, "Member 'BTD_Base_C_Is_Condition_Checked::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Is_Condition_Checked, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'BTD_Base_C_Is_Condition_Checked::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Is_Condition_Checked, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000058, "Member 'BTD_Base_C_Is_Condition_Checked::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Is_Condition_Checked, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000068, "Member 'BTD_Base_C_Is_Condition_Checked::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Is_Condition_Checked, CallFunc_GetDecoratorUtilityComponent_ReturnValue) == 0x000078, "Member 'BTD_Base_C_Is_Condition_Checked::CallFunc_GetDecoratorUtilityComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Is_Condition_Checked, K2Node_DynamicCast_AsBP_Ai_BTDecorator_Utility_Component) == 0x000080, "Member 'BTD_Base_C_Is_Condition_Checked::K2Node_DynamicCast_AsBP_Ai_BTDecorator_Utility_Component' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Is_Condition_Checked, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BTD_Base_C_Is_Condition_Checked::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Is_Condition_Checked, CallFunc_IsValid_ReturnValue) == 0x000089, "Member 'BTD_Base_C_Is_Condition_Checked::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Is_Condition_Checked, K2Node_DynamicCast_AsSSBattle_AIController) == 0x000090, "Member 'BTD_Base_C_Is_Condition_Checked::K2Node_DynamicCast_AsSSBattle_AIController' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Is_Condition_Checked, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'BTD_Base_C_Is_Condition_Checked::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_Is_Condition_Checked, CallFunc_IsValid_ReturnValue_1) == 0x000099, "Member 'BTD_Base_C_Is_Condition_Checked::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BTD_Base.BTD_Base_C.PerformConditionCheck
// 0x0010 (0x0010 - 0x0000)
struct BTD_Base_C_PerformConditionCheck final
{
public:
	class AActor*                                 OwnerActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_Base_C_PerformConditionCheck) == 0x000008, "Wrong alignment on BTD_Base_C_PerformConditionCheck");
static_assert(sizeof(BTD_Base_C_PerformConditionCheck) == 0x000010, "Wrong size on BTD_Base_C_PerformConditionCheck");
static_assert(offsetof(BTD_Base_C_PerformConditionCheck, OwnerActor) == 0x000000, "Member 'BTD_Base_C_PerformConditionCheck::OwnerActor' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_PerformConditionCheck, ReturnValue) == 0x000008, "Member 'BTD_Base_C_PerformConditionCheck::ReturnValue' has a wrong offset!");

// Function BTD_Base.BTD_Base_C.PublicPerformConditionCheck
// 0x0010 (0x0010 - 0x0000)
struct BTD_Base_C_PublicPerformConditionCheck final
{
public:
	class AActor*                                 InOwnerActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_Base_C_PublicPerformConditionCheck) == 0x000008, "Wrong alignment on BTD_Base_C_PublicPerformConditionCheck");
static_assert(sizeof(BTD_Base_C_PublicPerformConditionCheck) == 0x000010, "Wrong size on BTD_Base_C_PublicPerformConditionCheck");
static_assert(offsetof(BTD_Base_C_PublicPerformConditionCheck, InOwnerActor) == 0x000000, "Member 'BTD_Base_C_PublicPerformConditionCheck::InOwnerActor' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_PublicPerformConditionCheck, ReturnValue) == 0x000008, "Member 'BTD_Base_C_PublicPerformConditionCheck::ReturnValue' has a wrong offset!");

// Function BTD_Base.BTD_Base_C.SetupWork
// 0x0088 (0x0088 - 0x0000)
struct BTD_Base_C_SetupWork final
{
public:
	class AActor*                                 InOwnerActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewLocalVar;                                       // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBtdLog_ReturnValue;                     // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USSAiPerceptionComponent*               CallFunc_GetSSPerceptionComponent_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USSAiLearningComponent*                 CallFunc_GetLearningComponent_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USSAiCharacterStatusComponent*          CallFunc_GetAiCharacterStatusComponent_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USSAiPadGenerationComponent*            CallFunc_GetPadGenerationComponent_ReturnValue;    // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USSAiPersonalityComponent*              CallFunc_GetPersonalityComponent_ReturnValue;      // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USSAiBTDecoratorUtilityComponent*       CallFunc_GetDecoratorUtilityComponent_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_AiBTDecoratorUtilityComponent_C*    K2Node_DynamicCast_AsBP_Ai_BTDecorator_Utility_Component; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetTargetCharacter_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSBattleAIController*                  K2Node_DynamicCast_AsSSBattle_AIController;        // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           K2Node_DynamicCast_AsSSCharacter;                  // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_Base_C_SetupWork) == 0x000008, "Wrong alignment on BTD_Base_C_SetupWork");
static_assert(sizeof(BTD_Base_C_SetupWork) == 0x000088, "Wrong size on BTD_Base_C_SetupWork");
static_assert(offsetof(BTD_Base_C_SetupWork, InOwnerActor) == 0x000000, "Member 'BTD_Base_C_SetupWork::InOwnerActor' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_SetupWork, ReturnValue) == 0x000008, "Member 'BTD_Base_C_SetupWork::ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_SetupWork, NewLocalVar) == 0x000009, "Member 'BTD_Base_C_SetupWork::NewLocalVar' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_SetupWork, CallFunc_IsBtdLog_ReturnValue) == 0x00000A, "Member 'BTD_Base_C_SetupWork::CallFunc_IsBtdLog_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_SetupWork, CallFunc_GetSSPerceptionComponent_ReturnValue) == 0x000010, "Member 'BTD_Base_C_SetupWork::CallFunc_GetSSPerceptionComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_SetupWork, CallFunc_GetLearningComponent_ReturnValue) == 0x000018, "Member 'BTD_Base_C_SetupWork::CallFunc_GetLearningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_SetupWork, CallFunc_GetAiCharacterStatusComponent_ReturnValue) == 0x000020, "Member 'BTD_Base_C_SetupWork::CallFunc_GetAiCharacterStatusComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_SetupWork, CallFunc_GetPadGenerationComponent_ReturnValue) == 0x000028, "Member 'BTD_Base_C_SetupWork::CallFunc_GetPadGenerationComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_SetupWork, CallFunc_GetPersonalityComponent_ReturnValue) == 0x000030, "Member 'BTD_Base_C_SetupWork::CallFunc_GetPersonalityComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_SetupWork, CallFunc_GetDecoratorUtilityComponent_ReturnValue) == 0x000038, "Member 'BTD_Base_C_SetupWork::CallFunc_GetDecoratorUtilityComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_SetupWork, K2Node_DynamicCast_AsBP_Ai_BTDecorator_Utility_Component) == 0x000040, "Member 'BTD_Base_C_SetupWork::K2Node_DynamicCast_AsBP_Ai_BTDecorator_Utility_Component' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_SetupWork, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BTD_Base_C_SetupWork::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_SetupWork, CallFunc_GetTargetCharacter_ReturnValue) == 0x000050, "Member 'BTD_Base_C_SetupWork::CallFunc_GetTargetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_SetupWork, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BTD_Base_C_SetupWork::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_SetupWork, K2Node_DynamicCast_AsSSBattle_AIController) == 0x000060, "Member 'BTD_Base_C_SetupWork::K2Node_DynamicCast_AsSSBattle_AIController' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_SetupWork, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BTD_Base_C_SetupWork::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_SetupWork, CallFunc_K2_GetPawn_ReturnValue) == 0x000070, "Member 'BTD_Base_C_SetupWork::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_SetupWork, K2Node_DynamicCast_AsSSCharacter) == 0x000078, "Member 'BTD_Base_C_SetupWork::K2Node_DynamicCast_AsSSCharacter' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_SetupWork, K2Node_DynamicCast_bSuccess_2) == 0x000080, "Member 'BTD_Base_C_SetupWork::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BTD_Base.BTD_Base_C.SetupWorkMini
// 0x0038 (0x0038 - 0x0000)
struct BTD_Base_C_SetupWorkMini final
{
public:
	class AActor*                                 InOwnerActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSAiBTDecoratorUtilityComponent*       CallFunc_GetDecoratorUtilityComponent_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_AiBTDecoratorUtilityComponent_C*    K2Node_DynamicCast_AsBP_Ai_BTDecorator_Utility_Component; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSBattleAIController*                  K2Node_DynamicCast_AsSSBattle_AIController;        // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_Base_C_SetupWorkMini) == 0x000008, "Wrong alignment on BTD_Base_C_SetupWorkMini");
static_assert(sizeof(BTD_Base_C_SetupWorkMini) == 0x000038, "Wrong size on BTD_Base_C_SetupWorkMini");
static_assert(offsetof(BTD_Base_C_SetupWorkMini, InOwnerActor) == 0x000000, "Member 'BTD_Base_C_SetupWorkMini::InOwnerActor' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_SetupWorkMini, ReturnValue) == 0x000008, "Member 'BTD_Base_C_SetupWorkMini::ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_SetupWorkMini, CallFunc_GetDecoratorUtilityComponent_ReturnValue) == 0x000010, "Member 'BTD_Base_C_SetupWorkMini::CallFunc_GetDecoratorUtilityComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_SetupWorkMini, K2Node_DynamicCast_AsBP_Ai_BTDecorator_Utility_Component) == 0x000018, "Member 'BTD_Base_C_SetupWorkMini::K2Node_DynamicCast_AsBP_Ai_BTDecorator_Utility_Component' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_SetupWorkMini, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BTD_Base_C_SetupWorkMini::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_SetupWorkMini, K2Node_DynamicCast_AsSSBattle_AIController) == 0x000028, "Member 'BTD_Base_C_SetupWorkMini::K2Node_DynamicCast_AsSSBattle_AIController' has a wrong offset!");
static_assert(offsetof(BTD_Base_C_SetupWorkMini, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BTD_Base_C_SetupWorkMini::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

}

