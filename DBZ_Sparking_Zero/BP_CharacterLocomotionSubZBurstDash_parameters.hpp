#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterLocomotionSubZBurstDash

#include "Basic.hpp"

#include "ECharacterLocomotionEventType_structs.hpp"
#include "SS_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EAnimStateMachineEventType_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.CalculateVelocity
// 0x0070 (0x0070 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_CalculateVelocity final
{
public:
	double                                        InDeltaSeconds;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InOldLocation;                                     // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetMyLocation_ReturnValue;                // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_CalculateVelocity) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_CalculateVelocity");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_CalculateVelocity) == 0x000070, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_CalculateVelocity");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CalculateVelocity, InDeltaSeconds) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CalculateVelocity::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CalculateVelocity, InOldLocation) == 0x000008, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CalculateVelocity::InOldLocation' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CalculateVelocity, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CalculateVelocity::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CalculateVelocity, CallFunc_GetMyLocation_ReturnValue) == 0x000028, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CalculateVelocity::CallFunc_GetMyLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CalculateVelocity, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000040, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CalculateVelocity::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CalculateVelocity, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000058, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CalculateVelocity::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.CalculateZBurstDashSplineTangent
// 0x00A0 (0x00A0 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_CalculateZBurstDashSplineTangent final
{
public:
	struct FRotator                               InRotation;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Tangent;                                           // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_2; // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_CalculateZBurstDashSplineTangent) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_CalculateZBurstDashSplineTangent");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_CalculateZBurstDashSplineTangent) == 0x0000A0, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_CalculateZBurstDashSplineTangent");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CalculateZBurstDashSplineTangent, InRotation) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CalculateZBurstDashSplineTangent::InRotation' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CalculateZBurstDashSplineTangent, Tangent) == 0x000018, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CalculateZBurstDashSplineTangent::Tangent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CalculateZBurstDashSplineTangent, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000030, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CalculateZBurstDashSplineTangent::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CalculateZBurstDashSplineTangent, CallFunc_SelectFloat_ReturnValue) == 0x000048, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CalculateZBurstDashSplineTangent::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CalculateZBurstDashSplineTangent, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x000050, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CalculateZBurstDashSplineTangent::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CalculateZBurstDashSplineTangent, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000068, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CalculateZBurstDashSplineTangent::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CalculateZBurstDashSplineTangent, CallFunc_GreaterGreater_VectorRotator_ReturnValue_2) == 0x000070, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CalculateZBurstDashSplineTangent::CallFunc_GreaterGreater_VectorRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CalculateZBurstDashSplineTangent, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000088, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CalculateZBurstDashSplineTangent::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.ChangeZBurstDashStatus
// 0x0028 (0x0028 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_ChangeZBurstDashStatus final
{
public:
	EKoratZBurstDashState                         InZBurstDashStatus;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterActionFinishReason             InActionFinishReason;                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetZBurstDashStateMovementParameter_IsUseParameter; // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratCharacterDataDragonDashMovementParameter CallFunc_GetZBurstDashStateMovementParameter_MovementParameter; // 0x0008(0x0020)(NoDestructor)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_ChangeZBurstDashStatus) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_ChangeZBurstDashStatus");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_ChangeZBurstDashStatus) == 0x000028, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_ChangeZBurstDashStatus");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ChangeZBurstDashStatus, InZBurstDashStatus) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ChangeZBurstDashStatus::InZBurstDashStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ChangeZBurstDashStatus, InActionFinishReason) == 0x000001, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ChangeZBurstDashStatus::InActionFinishReason' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ChangeZBurstDashStatus, CallFunc_GetZBurstDashStateMovementParameter_IsUseParameter) == 0x000002, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ChangeZBurstDashStatus::CallFunc_GetZBurstDashStateMovementParameter_IsUseParameter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ChangeZBurstDashStatus, CallFunc_GetZBurstDashStateMovementParameter_MovementParameter) == 0x000008, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ChangeZBurstDashStatus::CallFunc_GetZBurstDashStateMovementParameter_MovementParameter' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.CheckAndStart
// 0x0048 (0x0048 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_CheckAndStart final
{
public:
	class UBP_CharacterLocomotionComponent_C*     InLocomotionComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          InInSkip;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStarted;                                         // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Start_NewParam;                           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_2; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckSPCosumable_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckAndStart_IsStarted;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_CheckAndStart) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_CheckAndStart");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_CheckAndStart) == 0x000048, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_CheckAndStart");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CheckAndStart, InLocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CheckAndStart::InLocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CheckAndStart, InInSkip) == 0x000008, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CheckAndStart::InInSkip' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CheckAndStart, IsStarted) == 0x000009, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CheckAndStart::IsStarted' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CheckAndStart, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000010, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CheckAndStart::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CheckAndStart, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000018, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CheckAndStart::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CheckAndStart, CallFunc_Start_NewParam) == 0x000020, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CheckAndStart::CallFunc_Start_NewParam' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CheckAndStart, CallFunc_GetLocomotionComponent_LocomotionComponent_2) == 0x000028, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CheckAndStart::CallFunc_GetLocomotionComponent_LocomotionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CheckAndStart, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000030, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CheckAndStart::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CheckAndStart, CallFunc_GetSSCharacter_SSCharacter) == 0x000038, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CheckAndStart::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CheckAndStart, CallFunc_CheckSPCosumable_ReturnValue) == 0x000040, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CheckAndStart::CallFunc_CheckSPCosumable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CheckAndStart, CallFunc_CheckAndStart_IsStarted) == 0x000041, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CheckAndStart::CallFunc_CheckAndStart_IsStarted' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.CheckZBurstDashEnd
// 0x00A0 (0x00A0 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd final
{
public:
	double                                        InDeltaSeconds;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InIsCanChase;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEnd;                                             // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsChangeOT;                                        // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RemainLength;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetZBurstDashTargetLocationAndRotation_Location; // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetZBurstDashTargetLocationAndRotation_Rotation; // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetMyLocation_ReturnValue;                // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_ZBurst_Dash_Remain_Length_RemainLength; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsZBurstDashMoveEnd_IsEnd;                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetLockOnMode_OutIsLockOn;                // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd) == 0x0000A0, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd, InDeltaSeconds) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd, InIsCanChase) == 0x000008, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd::InIsCanChase' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd, IsEnd) == 0x000009, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd::IsEnd' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd, IsChangeOT) == 0x00000A, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd::IsChangeOT' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd, RemainLength) == 0x000010, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd::RemainLength' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd, CallFunc_GetZBurstDashTargetLocationAndRotation_Location) == 0x000018, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd::CallFunc_GetZBurstDashTargetLocationAndRotation_Location' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd, CallFunc_GetZBurstDashTargetLocationAndRotation_Rotation) == 0x000030, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd::CallFunc_GetZBurstDashTargetLocationAndRotation_Rotation' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd, CallFunc_GetMyLocation_ReturnValue) == 0x000048, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd::CallFunc_GetMyLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd, CallFunc_Get_ZBurst_Dash_Remain_Length_RemainLength) == 0x000060, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd::CallFunc_Get_ZBurst_Dash_Remain_Length_RemainLength' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000068, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd, CallFunc_VSize_ReturnValue) == 0x000080, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000088, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd, CallFunc_IsZBurstDashMoveEnd_IsEnd) == 0x000089, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd::CallFunc_IsZBurstDashMoveEnd_IsEnd' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd, CallFunc_GetLockOnMode_OutIsLockOn) == 0x00008A, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd::CallFunc_GetLockOnMode_OutIsLockOn' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd, CallFunc_Not_PreBool_ReturnValue) == 0x00008B, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd, CallFunc_SelectFloat_ReturnValue) == 0x000090, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000098, "Member 'BP_CharacterLocomotionSubZBurstDash_C_CheckZBurstDashEnd::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.Get ZBurst Dash Remain Length
// 0x0028 (0x0028 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_Get_ZBurst_Dash_Remain_Length final
{
public:
	double                                        RemainLength;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Remain;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_Get_ZBurst_Dash_Remain_Length) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_Get_ZBurst_Dash_Remain_Length");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_Get_ZBurst_Dash_Remain_Length) == 0x000028, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_Get_ZBurst_Dash_Remain_Length");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Get_ZBurst_Dash_Remain_Length, RemainLength) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Get_ZBurst_Dash_Remain_Length::RemainLength' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Get_ZBurst_Dash_Remain_Length, Remain) == 0x000008, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Get_ZBurst_Dash_Remain_Length::Remain' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Get_ZBurst_Dash_Remain_Length, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Get_ZBurst_Dash_Remain_Length::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Get_ZBurst_Dash_Remain_Length, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000011, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Get_ZBurst_Dash_Remain_Length::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Get_ZBurst_Dash_Remain_Length, CallFunc_GetSplineLength_ReturnValue) == 0x000014, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Get_ZBurst_Dash_Remain_Length::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Get_ZBurst_Dash_Remain_Length, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Get_ZBurst_Dash_Remain_Length::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Get_ZBurst_Dash_Remain_Length, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000020, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Get_ZBurst_Dash_Remain_Length::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.GetInitZBurstDashBaseRotation
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_GetInitZBurstDashBaseRotation final
{
public:
	struct FRotator                               ___;                                               // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_GetInitZBurstDashBaseRotation) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_GetInitZBurstDashBaseRotation");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_GetInitZBurstDashBaseRotation) == 0x000018, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_GetInitZBurstDashBaseRotation");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetInitZBurstDashBaseRotation, ___) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetInitZBurstDashBaseRotation::___' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.GetLocomotionDetailStatus
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_GetLocomotionDetailStatus final
{
public:
	EKoratCharacterLocomotionDetailStatus         LocomotionDetailStatus;                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratZBurstDashState                         Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_5;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_GetLocomotionDetailStatus) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_GetLocomotionDetailStatus");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_GetLocomotionDetailStatus) == 0x000008, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_GetLocomotionDetailStatus");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetLocomotionDetailStatus, LocomotionDetailStatus) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetLocomotionDetailStatus::LocomotionDetailStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetLocomotionDetailStatus, Temp_byte_Variable) == 0x000001, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetLocomotionDetailStatus::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetLocomotionDetailStatus, Temp_byte_Variable_1) == 0x000002, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetLocomotionDetailStatus::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetLocomotionDetailStatus, Temp_byte_Variable_2) == 0x000003, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetLocomotionDetailStatus::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetLocomotionDetailStatus, Temp_byte_Variable_3) == 0x000004, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetLocomotionDetailStatus::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetLocomotionDetailStatus, Temp_byte_Variable_4) == 0x000005, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetLocomotionDetailStatus::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetLocomotionDetailStatus, Temp_byte_Variable_5) == 0x000006, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetLocomotionDetailStatus::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetLocomotionDetailStatus, K2Node_Select_Default) == 0x000007, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetLocomotionDetailStatus::K2Node_Select_Default' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.GetRunningAction
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_GetRunningAction final
{
public:
	struct FKoratActionDataList                   RunningAction;                                     // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_GetRunningAction) == 0x000004, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_GetRunningAction");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_GetRunningAction) == 0x000008, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_GetRunningAction");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetRunningAction, RunningAction) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetRunningAction::RunningAction' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.GetRunningSection
// 0x0044 (0x0044 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_GetRunningSection final
{
public:
	class FName                                   RunningSection;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratZBurstDashState                         Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_GetRunningSection) == 0x000004, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_GetRunningSection");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_GetRunningSection) == 0x000044, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_GetRunningSection");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetRunningSection, RunningSection) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetRunningSection::RunningSection' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetRunningSection, Temp_byte_Variable) == 0x000008, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetRunningSection::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetRunningSection, Temp_name_Variable) == 0x00000C, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetRunningSection::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetRunningSection, Temp_name_Variable_1) == 0x000014, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetRunningSection::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetRunningSection, Temp_name_Variable_2) == 0x00001C, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetRunningSection::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetRunningSection, Temp_name_Variable_3) == 0x000024, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetRunningSection::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetRunningSection, Temp_name_Variable_4) == 0x00002C, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetRunningSection::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetRunningSection, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000034, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetRunningSection::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetRunningSection, K2Node_Select_Default) == 0x000038, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetRunningSection::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetRunningSection, CallFunc_BooleanAND_ReturnValue) == 0x000040, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetRunningSection::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.GetVelocity
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_GetVelocity final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_GetVelocity) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_GetVelocity");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_GetVelocity) == 0x000018, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_GetVelocity");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetVelocity, Velocity) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetVelocity::Velocity' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.GetZBurstDashParameter
// 0x0068 (0x0068 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashParameter final
{
public:
	double                                        _Kn__n__;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        _____0;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TangentScale;                                      // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               _____1;                                            // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               B___;                                              // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        Param___________0;                                 // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __M_____Sw_0;                                      // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OTw____Sw;                                         // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        _____1__b_LNB_;                                    // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashParameter) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashParameter");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashParameter) == 0x000068, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashParameter");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashParameter, _Kn__n__) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashParameter::_Kn__n__' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashParameter, _____0) == 0x000008, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashParameter::_____0' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashParameter, TangentScale) == 0x000010, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashParameter::TangentScale' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashParameter, _____1) == 0x000018, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashParameter::_____1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashParameter, B___) == 0x000030, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashParameter::B___' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashParameter, Param___________0) == 0x000048, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashParameter::Param___________0' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashParameter, __M_____Sw_0) == 0x000050, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashParameter::__M_____Sw_0' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashParameter, OTw____Sw) == 0x000058, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashParameter::OTw____Sw' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashParameter, _____1__b_LNB_) == 0x000060, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashParameter::_____1__b_LNB_' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.GetZBurstDashRoute
// 0x0038 (0x0038 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashRoute final
{
public:
	class APawn*                                  CallFunc_GetPawn_Pawn;                             // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterBase_C>  K2Node_DynamicCast_AsBPI_Character_Base;           // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_AddChildDashRoute_DashRouteActor;         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_CharacterLocomotionDashRoute_C*     K2Node_DynamicCast_AsBP_Character_Locomotion_Dash_Route; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashRoute) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashRoute");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashRoute) == 0x000038, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashRoute");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashRoute, CallFunc_GetPawn_Pawn) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashRoute::CallFunc_GetPawn_Pawn' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashRoute, K2Node_DynamicCast_AsBPI_Character_Base) == 0x000008, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashRoute::K2Node_DynamicCast_AsBPI_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashRoute, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashRoute::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashRoute, CallFunc_AddChildDashRoute_DashRouteActor) == 0x000020, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashRoute::CallFunc_AddChildDashRoute_DashRouteActor' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashRoute, K2Node_DynamicCast_AsBP_Character_Locomotion_Dash_Route) == 0x000028, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashRoute::K2Node_DynamicCast_AsBP_Character_Locomotion_Dash_Route' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashRoute, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashRoute::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.GetZBurstDashStateMovementParameter
// 0x00E8 (0x00E8 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter final
{
public:
	EKoratZBurstDashState                         InZBurstDashStatus;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUseParameter;                                    // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratCharacterDataDragonDashMovementParameter MovementParameter;                                 // 0x0008(0x0020)(Parm, OutParm, NoDestructor)
	struct FKoratCharacterDataDragonDashMovementParameter Temp_struct_Variable;                              // 0x0028(0x0020)(NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratCharacterDataDragonDashMovementParameter Temp_struct_Variable_1;                            // 0x0050(0x0020)(NoDestructor)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKoratCharacterDataDragonDashMovementParameter Temp_struct_Variable_2;                            // 0x0078(0x0020)(NoDestructor)
	EKoratZBurstDashState                         Temp_byte_Variable;                                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratCharacterDataDragonDashMovementParameter K2Node_Select_Default;                             // 0x00A0(0x0020)(NoDestructor)
	struct FKoratCharacterDataDragonDashMovementParameter K2Node_Select_Default_1;                           // 0x00C0(0x0020)(NoDestructor)
	bool                                          K2Node_Select_Default_2;                           // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter) == 0x0000E8, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter, InZBurstDashStatus) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter::InZBurstDashStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter, IsUseParameter) == 0x000001, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter::IsUseParameter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter, MovementParameter) == 0x000008, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter::MovementParameter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter, Temp_struct_Variable) == 0x000028, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000048, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter, Temp_bool_Variable) == 0x000049, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter, Temp_bool_Variable_1) == 0x00004A, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter, Temp_bool_Variable_2) == 0x00004B, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter, Temp_struct_Variable_1) == 0x000050, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000070, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter, Temp_struct_Variable_2) == 0x000078, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter, Temp_byte_Variable) == 0x000098, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter, K2Node_Select_Default) == 0x0000A0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter, K2Node_Select_Default_1) == 0x0000C0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter, K2Node_Select_Default_2) == 0x0000E0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashStateMovementParameter::K2Node_Select_Default_2' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.GetZBurstDashTargetLocationAndRotation
// 0x01A8 (0x01A8 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                TargetLocation;                                    // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetLocation_ReturnValue;            // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTargetLocationGroundDistance_OutIsHit; // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetTargetLocationGroundDistance_OutDistance; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_1;             // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGiantChara_ReturnValue;                 // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_ReturnValue;                         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_NegateVector_ReturnValue;                 // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation) == 0x0001A8, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation, Location) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation::Location' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation, Rotation) == 0x000018, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation::Rotation' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation, TargetLocation) == 0x000030, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation::TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation, CallFunc_GetTargetLocation_ReturnValue) == 0x000048, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation::CallFunc_GetTargetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation, CallFunc_SelectFloat_ReturnValue) == 0x000060, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation, CallFunc_GetSSCharacter_SSCharacter) == 0x000068, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000070, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation, CallFunc_GetTargetLocationGroundDistance_OutIsHit) == 0x000078, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation::CallFunc_GetTargetLocationGroundDistance_OutIsHit' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation, CallFunc_GetTargetLocationGroundDistance_OutDistance) == 0x000080, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation::CallFunc_GetTargetLocationGroundDistance_OutDistance' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000088, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation, CallFunc_GetSSCharacter_SSCharacter_1) == 0x000090, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation::CallFunc_GetSSCharacter_SSCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000098, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation, CallFunc_IsGiantChara_ReturnValue) == 0x0000A0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation::CallFunc_IsGiantChara_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation, CallFunc_FMax_ReturnValue) == 0x0000A8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation, CallFunc_MakeVector_ReturnValue) == 0x0000B0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000C8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation, CallFunc_BreakVector_X) == 0x0000E0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation, CallFunc_BreakVector_Y) == 0x0000E8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation, CallFunc_BreakVector_Z) == 0x0000F0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation, CallFunc_MakeVector_ReturnValue_1) == 0x0000F8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation, CallFunc_Normal_ReturnValue) == 0x000110, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000128, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation, CallFunc_Add_VectorVector_ReturnValue) == 0x000140, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation, CallFunc_NegateVector_ReturnValue) == 0x000158, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation::CallFunc_NegateVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000170, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000188, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0001A0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_GetZBurstDashTargetLocationAndRotation::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.IsCanZBurstDashChase
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_IsCanZBurstDashChase final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_IsCanZBurstDashChase) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_IsCanZBurstDashChase");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_IsCanZBurstDashChase) == 0x000001, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_IsCanZBurstDashChase");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_IsCanZBurstDashChase, ReturnValue) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_IsCanZBurstDashChase::ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.IsEnableAction
// 0x0003 (0x0003 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_IsEnableAction final
{
public:
	bool                                          IsEnable;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_IsEnableAction) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_IsEnableAction");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_IsEnableAction) == 0x000003, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_IsEnableAction");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_IsEnableAction, IsEnable) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_IsEnableAction::IsEnable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_IsEnableAction, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_CharacterLocomotionSubZBurstDash_C_IsEnableAction::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_IsEnableAction, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000002, "Member 'BP_CharacterLocomotionSubZBurstDash_C_IsEnableAction::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.IsZBurstDashMoveEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_IsZBurstDashMoveEnd final
{
public:
	bool                                          IsEnd;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_IsZBurstDashMoveEnd) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_IsZBurstDashMoveEnd");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_IsZBurstDashMoveEnd) == 0x000018, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_IsZBurstDashMoveEnd");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_IsZBurstDashMoveEnd, IsEnd) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_IsZBurstDashMoveEnd::IsEnd' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_IsZBurstDashMoveEnd, CallFunc_GetSplineLength_ReturnValue) == 0x000004, "Member 'BP_CharacterLocomotionSubZBurstDash_C_IsZBurstDashMoveEnd::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_IsZBurstDashMoveEnd, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_CharacterLocomotionSubZBurstDash_C_IsZBurstDashMoveEnd::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_IsZBurstDashMoveEnd, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x000010, "Member 'BP_CharacterLocomotionSubZBurstDash_C_IsZBurstDashMoveEnd::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.OnZBurstDashAnimEvent
// 0x0028 (0x0028 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_OnZBurstDashAnimEvent final
{
public:
	EKoratZBurstDashState                         ZBurstDashState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimStateMachineEventType                    AnimStateMachineEvent;                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_2; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Update_NewParam;                          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_OnZBurstDashAnimEvent) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_OnZBurstDashAnimEvent");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_OnZBurstDashAnimEvent) == 0x000028, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_OnZBurstDashAnimEvent");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_OnZBurstDashAnimEvent, ZBurstDashState) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_OnZBurstDashAnimEvent::ZBurstDashState' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_OnZBurstDashAnimEvent, AnimStateMachineEvent) == 0x000001, "Member 'BP_CharacterLocomotionSubZBurstDash_C_OnZBurstDashAnimEvent::AnimStateMachineEvent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_OnZBurstDashAnimEvent, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000008, "Member 'BP_CharacterLocomotionSubZBurstDash_C_OnZBurstDashAnimEvent::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_OnZBurstDashAnimEvent, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000010, "Member 'BP_CharacterLocomotionSubZBurstDash_C_OnZBurstDashAnimEvent::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_OnZBurstDashAnimEvent, CallFunc_GetLocomotionComponent_LocomotionComponent_2) == 0x000018, "Member 'BP_CharacterLocomotionSubZBurstDash_C_OnZBurstDashAnimEvent::CallFunc_GetLocomotionComponent_LocomotionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_OnZBurstDashAnimEvent, CallFunc_Update_NewParam) == 0x000020, "Member 'BP_CharacterLocomotionSubZBurstDash_C_OnZBurstDashAnimEvent::CallFunc_Update_NewParam' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_OnZBurstDashAnimEvent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000021, "Member 'BP_CharacterLocomotionSubZBurstDash_C_OnZBurstDashAnimEvent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.SetSplineComponent
// 0x0010 (0x0010 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_SetSplineComponent final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_SetSplineComponent) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_SetSplineComponent");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_SetSplineComponent) == 0x000010, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_SetSplineComponent");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetSplineComponent, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetSplineComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetSplineComponent, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000008, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetSplineComponent::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.SetZBurstDashMaxSpeed
// 0x0088 (0x0088 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed final
{
public:
	TArray<EKoratZBurstDashState>                 StatusList;                                        // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<EKoratZBurstDashState>                 K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratZBurstDashState                         CallFunc_Array_Get_Item;                           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetZBurstDashStateMovementParameter_IsUseParameter; // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47[0x1];                                       // 0x0047(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratCharacterDataDragonDashMovementParameter CallFunc_GetZBurstDashStateMovementParameter_MovementParameter; // 0x0048(0x0020)(NoDestructor)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_A_ImplicitCast;                      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_B_ImplicitCast;                      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxSpeedCpp_ImplicitCast;       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed) == 0x000088, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed, StatusList) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed::StatusList' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000030, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000038, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed, CallFunc_Array_Get_Item) == 0x000044, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed, CallFunc_Less_IntInt_ReturnValue) == 0x000045, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed, CallFunc_GetZBurstDashStateMovementParameter_IsUseParameter) == 0x000046, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed::CallFunc_GetZBurstDashStateMovementParameter_IsUseParameter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed, CallFunc_GetZBurstDashStateMovementParameter_MovementParameter) == 0x000048, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed::CallFunc_GetZBurstDashStateMovementParameter_MovementParameter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed, CallFunc_FMax_ReturnValue) == 0x000068, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed, CallFunc_FMax_A_ImplicitCast) == 0x000070, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed::CallFunc_FMax_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed, CallFunc_FMax_B_ImplicitCast) == 0x000078, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed::CallFunc_FMax_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed, K2Node_VariableSet_MaxSpeedCpp_ImplicitCast) == 0x000080, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashMaxSpeed::K2Node_VariableSet_MaxSpeedCpp_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.SetZBurstDashParameter
// 0x03F8 (0x03F8 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter final
{
public:
	struct FVector                                InInputVector;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LookAtRotation;                                    // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetDashVectorAndRotation_OutVector;       // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetDashVectorAndRotation_OutRotation;     // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetZBurstDashTargetLocationAndRotation_Location; // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetZBurstDashTargetLocationAndRotation_Rotation; // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetMyLocation_ReturnValue;                // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMyLocation_ReturnValue_1;              // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMyLocation_ReturnValue_2;              // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetZBurstDashTargetLocationAndRotation_Location_1; // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetZBurstDashTargetLocationAndRotation_Rotation_1; // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_SelectRotator_ReturnValue;                // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_SelectRotator_ReturnValue_1;              // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_BreakVector_X;                            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalculateZBurstDashSplineTangent_Tangent; // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_SelectRotator_ReturnValue_2;              // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23D[0x3];                                      // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalculateZBurstDashSplineTangent_Tangent_1; // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_CalculateZBurstDashSplineTangent_Tangent_2; // 0x02D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_SelectRotator_ReturnValue_3;              // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_BreakVector_X_4;                          // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_3;                      // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_3;                     // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_3;                       // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_325[0x3];                                      // 0x0325(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_CalculateZBurstDashSplineTangent_Tangent_3; // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast_1;             // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C4[0x4];                                      // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_A_ImplicitCast_2;             // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2;   // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast_3;             // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_3;   // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast_1;         // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter) == 0x0003F8, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, InInputVector) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::InInputVector' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, LookAtRotation) == 0x000018, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::LookAtRotation' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_GetDashVectorAndRotation_OutVector) == 0x000030, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_GetDashVectorAndRotation_OutVector' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_GetDashVectorAndRotation_OutRotation) == 0x000048, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_GetDashVectorAndRotation_OutRotation' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_GetZBurstDashTargetLocationAndRotation_Location) == 0x000060, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_GetZBurstDashTargetLocationAndRotation_Location' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_GetZBurstDashTargetLocationAndRotation_Rotation) == 0x000078, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_GetZBurstDashTargetLocationAndRotation_Rotation' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_GetMyLocation_ReturnValue) == 0x000090, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_GetMyLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x0000A8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x0000B0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_GetMyLocation_ReturnValue_1) == 0x0000B8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_GetMyLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_GetMyLocation_ReturnValue_2) == 0x0000D0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_GetMyLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_GetZBurstDashTargetLocationAndRotation_Location_1) == 0x0000E8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_GetZBurstDashTargetLocationAndRotation_Location_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_GetZBurstDashTargetLocationAndRotation_Rotation_1) == 0x000100, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_GetZBurstDashTargetLocationAndRotation_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_SelectRotator_ReturnValue) == 0x000118, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_SelectRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_BreakRotator_Roll) == 0x000130, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_BreakRotator_Pitch) == 0x000134, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_BreakRotator_Yaw) == 0x000138, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000140, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_SelectRotator_ReturnValue_1) == 0x000148, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_SelectRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_BreakVector_X) == 0x000160, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_BreakVector_Y) == 0x000168, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_BreakVector_Z) == 0x000170, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_BreakRotator_Roll_1) == 0x000178, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_BreakRotator_Pitch_1) == 0x00017C, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_BreakRotator_Yaw_1) == 0x000180, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000184, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000188, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_Not_PreBool_ReturnValue) == 0x000190, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_SelectFloat_ReturnValue) == 0x000198, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_BreakVector_X_1) == 0x0001A0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_BreakVector_Y_1) == 0x0001A8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_BreakVector_Z_1) == 0x0001B0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_MakeRotator_ReturnValue) == 0x0001B8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_Abs_ReturnValue) == 0x0001D0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_CalculateZBurstDashSplineTangent_Tangent) == 0x0001D8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_CalculateZBurstDashSplineTangent_Tangent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_Abs_ReturnValue_1) == 0x0001F0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0001F8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_SelectRotator_ReturnValue_2) == 0x000200, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_SelectRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_BreakVector_X_2) == 0x000218, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_BreakVector_Y_2) == 0x000220, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_BreakVector_Z_2) == 0x000228, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_BreakRotator_Roll_2) == 0x000230, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_BreakRotator_Pitch_2) == 0x000234, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_BreakRotator_Yaw_2) == 0x000238, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x00023C, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000240, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_Not_PreBool_ReturnValue_1) == 0x000248, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_SelectFloat_ReturnValue_1) == 0x000250, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_BreakVector_X_3) == 0x000258, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_BreakVector_Y_3) == 0x000260, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_BreakVector_Z_3) == 0x000268, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_MakeRotator_ReturnValue_1) == 0x000270, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000288, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_CalculateZBurstDashSplineTangent_Tangent_1) == 0x000290, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_CalculateZBurstDashSplineTangent_Tangent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_Not_PreBool_ReturnValue_2) == 0x0002A8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_SelectFloat_ReturnValue_2) == 0x0002B0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_MakeRotator_ReturnValue_2) == 0x0002B8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_CalculateZBurstDashSplineTangent_Tangent_2) == 0x0002D0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_CalculateZBurstDashSplineTangent_Tangent_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_SelectRotator_ReturnValue_3) == 0x0002E8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_SelectRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_BreakVector_X_4) == 0x000300, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_BreakVector_Y_4) == 0x000308, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_BreakVector_Z_4) == 0x000310, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_BreakRotator_Roll_3) == 0x000318, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_BreakRotator_Roll_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_BreakRotator_Pitch_3) == 0x00031C, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_BreakRotator_Pitch_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_BreakRotator_Yaw_3) == 0x000320, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_BreakRotator_Yaw_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x000324, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000328, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_Not_PreBool_ReturnValue_3) == 0x000330, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_SelectFloat_ReturnValue_3) == 0x000338, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_MakeRotator_ReturnValue_3) == 0x000340, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_CalculateZBurstDashSplineTangent_Tangent_3) == 0x000358, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_CalculateZBurstDashSplineTangent_Tangent_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_MakeVector_ReturnValue) == 0x000370, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_MakeVector_ReturnValue_1) == 0x000388, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_SelectFloat_A_ImplicitCast) == 0x0003A0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0003A8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_SelectFloat_A_ImplicitCast_1) == 0x0003B0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_SelectFloat_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x0003B8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x0003C0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_SelectFloat_A_ImplicitCast_2) == 0x0003C8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_SelectFloat_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2) == 0x0003D0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0003D8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x0003DC, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_SelectFloat_A_ImplicitCast_3) == 0x0003E0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_SelectFloat_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_3) == 0x0003E8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter, CallFunc_MakeRotator_Pitch_ImplicitCast_1) == 0x0003F0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashParameter::CallFunc_MakeRotator_Pitch_ImplicitCast_1' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.SetZBurstDashRotateRoute
// 0x0148 (0x0148 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashRotateRoute final
{
public:
	struct FRotator                               CallFunc_SelectRotator_ReturnValue;                // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_CalculateZBurstDashSplineTangent_Tangent; // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_SelectRotator_ReturnValue_1;              // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_CalculateZBurstDashSplineTangent_Tangent_1; // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0060(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashRotateRoute) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashRotateRoute");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashRotateRoute) == 0x000148, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashRotateRoute");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashRotateRoute, CallFunc_SelectRotator_ReturnValue) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashRotateRoute::CallFunc_SelectRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashRotateRoute, CallFunc_CalculateZBurstDashSplineTangent_Tangent) == 0x000018, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashRotateRoute::CallFunc_CalculateZBurstDashSplineTangent_Tangent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashRotateRoute, CallFunc_SelectRotator_ReturnValue_1) == 0x000030, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashRotateRoute::CallFunc_SelectRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashRotateRoute, CallFunc_CalculateZBurstDashSplineTangent_Tangent_1) == 0x000048, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashRotateRoute::CallFunc_CalculateZBurstDashSplineTangent_Tangent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashRotateRoute, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000060, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashRotateRoute::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.SetZBurstDashStatus
// 0x0030 (0x0030 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashStatus final
{
public:
	EKoratZBurstDashState                         InZBurstDashStatus;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterActionFinishReason             InActionFinishReason;                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_2; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateRunningAction_OutIsChangeAction;    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashStatus) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashStatus");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashStatus) == 0x000030, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashStatus");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashStatus, InZBurstDashStatus) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashStatus::InZBurstDashStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashStatus, InActionFinishReason) == 0x000001, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashStatus::InActionFinishReason' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashStatus, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000008, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashStatus::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashStatus, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashStatus::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashStatus, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashStatus::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashStatus, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000018, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashStatus::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashStatus, CallFunc_GetLocomotionComponent_LocomotionComponent_2) == 0x000020, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashStatus::CallFunc_GetLocomotionComponent_LocomotionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashStatus, CallFunc_UpdateRunningAction_OutIsChangeAction) == 0x000028, "Member 'BP_CharacterLocomotionSubZBurstDash_C_SetZBurstDashStatus::CallFunc_UpdateRunningAction_OutIsChangeAction' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.Start
// 0x0140 (0x0140 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_Start final
{
public:
	class UBP_CharacterLocomotionComponent_C*     InLocomotionComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          InInSkip;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement;   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPawn_Pawn;                             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPawn_Pawn_1;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPawn_Pawn_2;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPawn_Pawn_3;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterBase_C>  K2Node_DynamicCast_AsBPI_Character_Base;           // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPawn_Pawn_4;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetUseCharacterRotationPitch_UsePitch;    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterBase_C>  K2Node_DynamicCast_AsBPI_Character_Base_1;         // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetUseCharacterRotationPitchDetail_UsePitchLimit; // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetUseCharacterRotationPitchDetail_UsePitchInterp; // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Z____________________________Result;      // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetInputVectorXYZ_OutInputVector;         // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetInputVectorXYZ_OutInputVector_1;       // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_2; // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDashInputVector_OutInputVector;        // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDashInputVector_OutIsInputNeutral;     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_3; // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_4; // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterAction_C> K2Node_DynamicCast_AsBPI_Character_Action;         // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Start_NewParam;                           // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_Start) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_Start");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_Start) == 0x000140, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_Start");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, InLocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::InLocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, InInSkip) == 0x000008, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::InInSkip' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, NewParam) == 0x000009, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::NewParam' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, CallFunc_GetSSCharacter_SSCharacter) == 0x000010, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000018, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, CallFunc_GetCharacterMovement_CharacterMovement) == 0x000020, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::CallFunc_GetCharacterMovement_CharacterMovement' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, CallFunc_GetPawn_Pawn) == 0x000028, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::CallFunc_GetPawn_Pawn' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, CallFunc_GetPawn_Pawn_1) == 0x000030, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::CallFunc_GetPawn_Pawn_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, CallFunc_GetPawn_Pawn_2) == 0x000038, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::CallFunc_GetPawn_Pawn_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, CallFunc_GetPawn_Pawn_3) == 0x000040, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::CallFunc_GetPawn_Pawn_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, K2Node_DynamicCast_AsBPI_Character_Base) == 0x000048, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::K2Node_DynamicCast_AsBPI_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, CallFunc_GetPawn_Pawn_4) == 0x000060, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::CallFunc_GetPawn_Pawn_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, CallFunc_SetUseCharacterRotationPitch_UsePitch) == 0x000068, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::CallFunc_SetUseCharacterRotationPitch_UsePitch' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, K2Node_DynamicCast_AsBPI_Character_Base_1) == 0x000070, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::K2Node_DynamicCast_AsBPI_Character_Base_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, CallFunc_SetUseCharacterRotationPitchDetail_UsePitchLimit) == 0x000081, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::CallFunc_SetUseCharacterRotationPitchDetail_UsePitchLimit' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, CallFunc_SetUseCharacterRotationPitchDetail_UsePitchInterp) == 0x000082, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::CallFunc_SetUseCharacterRotationPitchDetail_UsePitchInterp' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, CallFunc_Z____________________________Result) == 0x000083, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::CallFunc_Z____________________________Result' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, CallFunc_GetInputVectorXYZ_OutInputVector) == 0x000088, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::CallFunc_GetInputVectorXYZ_OutInputVector' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, CallFunc_BreakVector_X) == 0x0000A0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, CallFunc_BreakVector_Y) == 0x0000A8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, CallFunc_BreakVector_Z) == 0x0000B0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, CallFunc_MakeVector_ReturnValue) == 0x0000B8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x0000D0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, CallFunc_GetInputVectorXYZ_OutInputVector_1) == 0x0000D8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::CallFunc_GetInputVectorXYZ_OutInputVector_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, CallFunc_GetLocomotionComponent_LocomotionComponent_2) == 0x0000F0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::CallFunc_GetLocomotionComponent_LocomotionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, CallFunc_GetDashInputVector_OutInputVector) == 0x0000F8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::CallFunc_GetDashInputVector_OutInputVector' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, CallFunc_GetDashInputVector_OutIsInputNeutral) == 0x000110, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::CallFunc_GetDashInputVector_OutIsInputNeutral' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, CallFunc_GetLocomotionComponent_LocomotionComponent_3) == 0x000118, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::CallFunc_GetLocomotionComponent_LocomotionComponent_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, CallFunc_GetLocomotionComponent_LocomotionComponent_4) == 0x000120, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::CallFunc_GetLocomotionComponent_LocomotionComponent_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, K2Node_DynamicCast_AsBPI_Character_Action) == 0x000128, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::K2Node_DynamicCast_AsBPI_Character_Action' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, K2Node_DynamicCast_bSuccess_2) == 0x000138, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Start, CallFunc_Start_NewParam) == 0x000139, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Start::CallFunc_Start_NewParam' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.Update
// 0x0030 (0x0030 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_Update final
{
public:
	class UBP_CharacterLocomotionComponent_C*     InLocomotionComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ECharacterLocomotionEventType                 InEventType;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        InDeltaSeconds;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Update_NewParam;                          // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_Update) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_Update");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_Update) == 0x000030, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_Update");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Update, InLocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Update::InLocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Update, InEventType) == 0x000008, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Update::InEventType' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Update, InDeltaSeconds) == 0x000010, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Update::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Update, NewParam) == 0x000018, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Update::NewParam' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Update, CallFunc_GetSSCharacter_SSCharacter) == 0x000020, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Update::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Update, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Update::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Update, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000029, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Update::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Update, K2Node_SwitchEnum_CmpSuccess_1) == 0x00002A, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Update::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_Update, CallFunc_Update_NewParam) == 0x00002B, "Member 'BP_CharacterLocomotionSubZBurstDash_C_Update::CallFunc_Update_NewParam' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.UpdateZBurstDashMove
// 0x1080 (0x1080 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove final
{
public:
	double                                        InDeltaSeconds;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InIsDashCombatives;                                // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratZBurstDashState                         NextZBurstDashStatus;                              // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CapsuleRadiusHalf;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         IgnoreActors;                                      // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	double                                        MoveDistance;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PreZBurstDashMoveDistance;                         // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocationatDistanceAlongSpline;                     // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<ESituationOfOpponentWhenAttackHit>     OpponentHitSimu;                                   // 0x0050(0x0010)(Edit, BlueprintVisible)
	TArray<EKoratActionAttackType>                AttackType;                                        // 0x0060(0x0010)(Edit, BlueprintVisible)
	bool                                          IsChangeOT;                                        // 0x0070(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TurnAlpha;                                         // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RemainLength;                                      // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               NowSplineRotation;                                 // 0x0088(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsCanChase;                                        // 0x00A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EKoratActionAttackType>                K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPawn_Pawn;                             // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_ZBurst_Dash_Remain_Length_RemainLength; // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindClosestPointOnLine_ReturnValue;       // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleByProfile_OutHit;        // 0x01B8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleByProfile_ReturnValue;   // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_SphereTraceSingleByProfile_OutHit_1;      // 0x02A8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleByProfile_ReturnValue_1; // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0392(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0393(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C[0x4];                                      // 0x039C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x03A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x03B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x03D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x03E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0400(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0408(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0410(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_434[0x4];                                      // 0x0434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0438(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0450(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_469[0x3];                                      // 0x0469(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPawn_Pawn_1;                           // 0x0478(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0480(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetTargetCharacter_ReturnValue;           // 0x0488(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_494[0x4];                                      // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0498(0x0010)(ReferenceParm)
	struct FHitResult                             CallFunc_SphereTraceSingleByProfile_OutHit_2;      // 0x04A8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleByProfile_ReturnValue_2; // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_591[0x3];                                      // 0x0591(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1; // 0x0594(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C[0x4];                                      // 0x059C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x05A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x05C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x05E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_601[0x7];                                      // 0x0601(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetMyLocation_ReturnValue;                // 0x0608(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0630(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x063C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0640(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_644[0x4];                                      // 0x0644(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Ease_ReturnValue;                         // 0x0648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Ease_ReturnValue_1;                       // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0660(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                  CallFunc_GetPawn_Pawn_2;                           // 0x0678(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0680(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0768(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_769[0x7];                                      // 0x0769(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0770(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x0788(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x07A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindClosestPointOnLine_ReturnValue_1;     // 0x07B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_4;      // 0x07D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_1;     // 0x07E8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_1;        // 0x08D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D1[0x7];                                      // 0x08D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_SphereTraceSingleByProfile_OutHit_3;      // 0x08D8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleByProfile_ReturnValue_3; // 0x09C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C1[0x7];                                      // 0x09C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue; // 0x09C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x09E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x09E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E2[0x2];                                      // 0x09E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x09E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x09E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9EC[0x4];                                      // 0x09EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x09F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0A08(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0A20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0A38(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0A50(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0A58(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0A60(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0A68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0A70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0A78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0A7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0A80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A84[0x4];                                      // 0x0A84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0A88(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0AA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0AB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0AD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD1[0x7];                                      // 0x0AD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_2;     // 0x0AD8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_2;        // 0x0BC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC1[0x7];                                      // 0x0BC1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetZBurstDashTargetLocationAndRotation_Location; // 0x0BC8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetZBurstDashTargetLocationAndRotation_Rotation; // 0x0BE0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_1;             // 0x0BF8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_ZBurst_Dash_Remain_Length_RemainLength_1; // 0x0C00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_2;                          // 0x0C08(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_SphereTraceSingleByProfile_OutHit_4;      // 0x0C18(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleByProfile_ReturnValue_4; // 0x0D00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0D01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D02[0x6];                                      // 0x0D02(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_5;      // 0x0D08(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_6;      // 0x0D20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0D38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_1;                      // 0x0D40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0D48(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x0D60(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x0D78(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_3;                     // 0x0D90(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<ESituationOfOpponentWhenAttackHit>     K2Node_MakeArray_Array_3;                          // 0x0DA8(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_3;        // 0x0DB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0DD0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0DE8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_3;     // 0x0E00(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_3;        // 0x0EE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE9[0x7];                                      // 0x0EE9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_7;      // 0x0EF0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0F08(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x0F20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_8;      // 0x0F38(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x0F50(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x0F68(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x0F80(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x0F98(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue_1;            // 0x0FB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB4[0x4];                                      // 0x0FB4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0FB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0FC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC1[0x3];                                      // 0x0FC1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSplineLength_ReturnValue_2;            // 0x0FC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0FC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC9[0x7];                                      // 0x0FC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0FD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_2;             // 0x0FD8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_3;             // 0x0FE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAttackHitAtAttackType_ReturnValue;      // 0x0FE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FE9[0x7];                                      // 0x0FE9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0FF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckZBurstDashEnd_IsEnd;                 // 0x0FF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckZBurstDashEnd_IsChangeOT;            // 0x0FF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCanZBurstDashChase_ReturnValue;         // 0x0FFA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FFB[0x5];                                      // 0x0FFB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x1000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SphereTraceSingleByProfile_Radius_ImplicitCast; // 0x1008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SphereTraceSingleByProfile_Radius_ImplicitCast_1; // 0x100C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Ease_B_ImplicitCast;                      // 0x1010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Ease_B_ImplicitCast_1;                    // 0x1018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_Z_ImplicitCast;                // 0x1020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1;   // 0x1028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_Z_ImplicitCast_1;              // 0x1030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x1038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x1040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Ease_A_ImplicitCast;                      // 0x1048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Ease_A_ImplicitCast_1;                    // 0x1050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x1058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x105C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast; // 0x1060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRotationAtDistanceAlongSpline_Distance_ImplicitCast; // 0x1064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SphereTraceSingleByProfile_Radius_ImplicitCast_2; // 0x1068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_106C[0x4];                                     // 0x106C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x1070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x1078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove) == 0x001080, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, InDeltaSeconds) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, InIsDashCombatives) == 0x000008, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::InIsDashCombatives' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, NextZBurstDashStatus) == 0x000009, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::NextZBurstDashStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CapsuleRadiusHalf) == 0x000010, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CapsuleRadiusHalf' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, IgnoreActors) == 0x000018, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::IgnoreActors' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, MoveDistance) == 0x000028, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::MoveDistance' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, PreZBurstDashMoveDistance) == 0x000030, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::PreZBurstDashMoveDistance' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, LocationatDistanceAlongSpline) == 0x000038, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::LocationatDistanceAlongSpline' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, OpponentHitSimu) == 0x000050, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::OpponentHitSimu' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, AttackType) == 0x000060, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::AttackType' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, IsChangeOT) == 0x000070, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::IsChangeOT' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, TurnAlpha) == 0x000078, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::TurnAlpha' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, RemainLength) == 0x000080, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::RemainLength' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, NowSplineRotation) == 0x000088, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::NowSplineRotation' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, IsCanChase) == 0x0000A0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::IsCanChase' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, K2Node_MakeArray_Array) == 0x0000A8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000B8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Normal_ReturnValue) == 0x0000D0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_GetSplineLength_ReturnValue) == 0x0000E8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000F0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000F8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_GetPawn_Pawn) == 0x000100, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_GetPawn_Pawn' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Get_ZBurst_Dash_Remain_Length_RemainLength) == 0x000108, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Get_ZBurst_Dash_Remain_Length_RemainLength' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000110, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_FindClosestPointOnLine_ReturnValue) == 0x000128, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_FindClosestPointOnLine_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000140, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000158, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Normal_ReturnValue_1) == 0x000170, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000188, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Add_VectorVector_ReturnValue) == 0x0001A0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_SphereTraceSingleByProfile_OutHit) == 0x0001B8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_SphereTraceSingleByProfile_OutHit' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_SphereTraceSingleByProfile_ReturnValue) == 0x0002A0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_SphereTraceSingleByProfile_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_SphereTraceSingleByProfile_OutHit_1) == 0x0002A8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_SphereTraceSingleByProfile_OutHit_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_SphereTraceSingleByProfile_ReturnValue_1) == 0x000390, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_SphereTraceSingleByProfile_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Not_PreBool_ReturnValue) == 0x000391, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_bBlockingHit) == 0x000392, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_bInitialOverlap) == 0x000393, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_Time) == 0x000394, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_Distance) == 0x000398, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_Location) == 0x0003A0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_ImpactPoint) == 0x0003B8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_Normal) == 0x0003D0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_ImpactNormal) == 0x0003E8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_PhysMat) == 0x000400, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_HitActor) == 0x000408, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_HitComponent) == 0x000410, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_HitBoneName) == 0x000418, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_BoneName) == 0x000420, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_HitItem) == 0x000428, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_ElementIndex) == 0x00042C, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_FaceIndex) == 0x000430, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_TraceStart) == 0x000438, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_TraceEnd) == 0x000450, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000468, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakRotator_Roll) == 0x00046C, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakRotator_Pitch) == 0x000470, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakRotator_Yaw) == 0x000474, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_GetPawn_Pawn_1) == 0x000478, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_GetPawn_Pawn_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_GetSSCharacter_SSCharacter) == 0x000480, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_GetTargetCharacter_ReturnValue) == 0x000488, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_GetTargetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000490, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, K2Node_MakeArray_Array_1) == 0x000498, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_SphereTraceSingleByProfile_OutHit_2) == 0x0004A8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_SphereTraceSingleByProfile_OutHit_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_SphereTraceSingleByProfile_ReturnValue_2) == 0x000590, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_SphereTraceSingleByProfile_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1) == 0x000594, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x000598, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_MakeVector_ReturnValue) == 0x0005A0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0005B8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0005C0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_MakeVector_ReturnValue_1) == 0x0005C8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_MakeVector_ReturnValue_2) == 0x0005E0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_SelectFloat_ReturnValue) == 0x0005F8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000600, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_GetMyLocation_ReturnValue) == 0x000608, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_GetMyLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000620, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000628, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000630, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakRotator_Roll_1) == 0x000638, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakRotator_Pitch_1) == 0x00063C, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakRotator_Yaw_1) == 0x000640, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Ease_ReturnValue) == 0x000648, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000650, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Ease_ReturnValue_1) == 0x000658, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Ease_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_MakeRotator_ReturnValue) == 0x000660, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_GetPawn_Pawn_2) == 0x000678, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_GetPawn_Pawn_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000680, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000768, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000770, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x000788, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0007A0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_FindClosestPointOnLine_ReturnValue_1) == 0x0007B8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_FindClosestPointOnLine_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Subtract_VectorVector_ReturnValue_4) == 0x0007D0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Subtract_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_K2_SetActorLocation_SweepHitResult_1) == 0x0007E8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_K2_SetActorLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_K2_SetActorLocation_ReturnValue_1) == 0x0008D0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_K2_SetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_SphereTraceSingleByProfile_OutHit_3) == 0x0008D8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_SphereTraceSingleByProfile_OutHit_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_SphereTraceSingleByProfile_ReturnValue_3) == 0x0009C0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_SphereTraceSingleByProfile_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue) == 0x0009C8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_bBlockingHit_1) == 0x0009E0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x0009E1, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_Time_1) == 0x0009E4, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_Distance_1) == 0x0009E8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_Location_1) == 0x0009F0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000A08, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_Normal_1) == 0x000A20, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000A38, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_PhysMat_1) == 0x000A50, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_HitActor_1) == 0x000A58, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_HitComponent_1) == 0x000A60, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_HitBoneName_1) == 0x000A68, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_BoneName_1) == 0x000A70, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_HitItem_1) == 0x000A78, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_ElementIndex_1) == 0x000A7C, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_FaceIndex_1) == 0x000A80, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_TraceStart_1) == 0x000A88, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BreakHitResult_TraceEnd_1) == 0x000AA0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000AB8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000AD0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_K2_SetActorLocation_SweepHitResult_2) == 0x000AD8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_K2_SetActorLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_K2_SetActorLocation_ReturnValue_2) == 0x000BC0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_K2_SetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_GetZBurstDashTargetLocationAndRotation_Location) == 0x000BC8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_GetZBurstDashTargetLocationAndRotation_Location' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_GetZBurstDashTargetLocationAndRotation_Rotation) == 0x000BE0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_GetZBurstDashTargetLocationAndRotation_Rotation' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_GetSSCharacter_SSCharacter_1) == 0x000BF8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_GetSSCharacter_SSCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Get_ZBurst_Dash_Remain_Length_RemainLength_1) == 0x000C00, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Get_ZBurst_Dash_Remain_Length_RemainLength_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, K2Node_MakeArray_Array_2) == 0x000C08, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_SphereTraceSingleByProfile_OutHit_4) == 0x000C18, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_SphereTraceSingleByProfile_OutHit_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_SphereTraceSingleByProfile_ReturnValue_4) == 0x000D00, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_SphereTraceSingleByProfile_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000D01, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Subtract_VectorVector_ReturnValue_5) == 0x000D08, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Subtract_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Subtract_VectorVector_ReturnValue_6) == 0x000D20, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Subtract_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_VSize_ReturnValue) == 0x000D38, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_VSize_ReturnValue_1) == 0x000D40, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000D48, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x000D60, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Normal_ReturnValue_2) == 0x000D78, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Normal_ReturnValue_3) == 0x000D90, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Normal_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, K2Node_MakeArray_Array_3) == 0x000DA8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Conv_DoubleToVector_ReturnValue_3) == 0x000DB8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Conv_DoubleToVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000DD0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000DE8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_K2_SetActorLocation_SweepHitResult_3) == 0x000E00, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_K2_SetActorLocation_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_K2_SetActorLocation_ReturnValue_3) == 0x000EE8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_K2_SetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Subtract_VectorVector_ReturnValue_7) == 0x000EF0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Subtract_VectorVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_RotateAngleAxis_ReturnValue) == 0x000F08, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x000F20, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Subtract_VectorVector_ReturnValue_8) == 0x000F38, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Subtract_VectorVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Add_VectorVector_ReturnValue_4) == 0x000F50, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x000F68, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x000F80, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Add_VectorVector_ReturnValue_5) == 0x000F98, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_GetSplineLength_ReturnValue_1) == 0x000FB0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_GetSplineLength_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000FB8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000FC0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_GetSplineLength_ReturnValue_2) == 0x000FC4, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_GetSplineLength_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_BooleanAND_ReturnValue) == 0x000FC8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000FD0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_GetSSCharacter_SSCharacter_2) == 0x000FD8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_GetSSCharacter_SSCharacter_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_GetSSCharacter_SSCharacter_3) == 0x000FE0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_GetSSCharacter_SSCharacter_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_IsAttackHitAtAttackType_ReturnValue) == 0x000FE8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_IsAttackHitAtAttackType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000FF0, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_CheckZBurstDashEnd_IsEnd) == 0x000FF8, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_CheckZBurstDashEnd_IsEnd' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_CheckZBurstDashEnd_IsChangeOT) == 0x000FF9, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_CheckZBurstDashEnd_IsChangeOT' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_IsCanZBurstDashChase_ReturnValue) == 0x000FFA, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_IsCanZBurstDashChase_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x001000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_SphereTraceSingleByProfile_Radius_ImplicitCast) == 0x001008, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_SphereTraceSingleByProfile_Radius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_SphereTraceSingleByProfile_Radius_ImplicitCast_1) == 0x00100C, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_SphereTraceSingleByProfile_Radius_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Ease_B_ImplicitCast) == 0x001010, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Ease_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Ease_B_ImplicitCast_1) == 0x001018, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Ease_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_MakeVector_Z_ImplicitCast) == 0x001020, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_MakeVector_Z_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1) == 0x001028, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_MakeVector_Z_ImplicitCast_1) == 0x001030, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_MakeVector_Z_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x001038, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x001040, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Ease_A_ImplicitCast) == 0x001048, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Ease_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Ease_A_ImplicitCast_1) == 0x001050, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Ease_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x001058, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x00105C, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast) == 0x001060, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_GetRotationAtDistanceAlongSpline_Distance_ImplicitCast) == 0x001064, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_GetRotationAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_SphereTraceSingleByProfile_Radius_ImplicitCast_2) == 0x001068, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_SphereTraceSingleByProfile_Radius_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x001070, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x001078, "Member 'BP_CharacterLocomotionSubZBurstDash_C_UpdateZBurstDashMove::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.ZBurst Dash Combatives On End Dash Combatives
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_Combatives_On_End_Dash_Combatives final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_Combatives_On_End_Dash_Combatives) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_Combatives_On_End_Dash_Combatives");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_Combatives_On_End_Dash_Combatives) == 0x000008, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_Combatives_On_End_Dash_Combatives");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_Combatives_On_End_Dash_Combatives, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_Combatives_On_End_Dash_Combatives::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.ZBurst Dash LPStop
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_LPStop final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_LPStop) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_LPStop");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_LPStop) == 0x000008, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_LPStop");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_LPStop, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_LPStop::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.ZBurst Dash OTOn Set Anim Time
// 0x0048 (0x0048 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_OTOn_Set_Anim_Time final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetLockOnMode_OutIsLockOn;                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsZBurstDashMoveEnd_IsEnd;                // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_2; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPawn_Pawn;                             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterBase_C>  K2Node_DynamicCast_AsBPI_Character_Base;           // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AutoSetCharacterMovementModeToIdle_IsSet; // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 CallFunc_AutoSetCharacterMovementModeToIdle_SetMovementMode; // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_OTOn_Set_Anim_Time) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_OTOn_Set_Anim_Time");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_OTOn_Set_Anim_Time) == 0x000048, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_OTOn_Set_Anim_Time");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_OTOn_Set_Anim_Time, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_OTOn_Set_Anim_Time::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_OTOn_Set_Anim_Time, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000008, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_OTOn_Set_Anim_Time::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_OTOn_Set_Anim_Time, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000010, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_OTOn_Set_Anim_Time::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_OTOn_Set_Anim_Time, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000011, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_OTOn_Set_Anim_Time::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_OTOn_Set_Anim_Time, CallFunc_GetLockOnMode_OutIsLockOn) == 0x000012, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_OTOn_Set_Anim_Time::CallFunc_GetLockOnMode_OutIsLockOn' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_OTOn_Set_Anim_Time, CallFunc_IsZBurstDashMoveEnd_IsEnd) == 0x000013, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_OTOn_Set_Anim_Time::CallFunc_IsZBurstDashMoveEnd_IsEnd' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_OTOn_Set_Anim_Time, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_OTOn_Set_Anim_Time::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_OTOn_Set_Anim_Time, CallFunc_GetLocomotionComponent_LocomotionComponent_2) == 0x000018, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_OTOn_Set_Anim_Time::CallFunc_GetLocomotionComponent_LocomotionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_OTOn_Set_Anim_Time, CallFunc_BooleanOR_ReturnValue) == 0x000020, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_OTOn_Set_Anim_Time::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_OTOn_Set_Anim_Time, CallFunc_GetPawn_Pawn) == 0x000028, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_OTOn_Set_Anim_Time::CallFunc_GetPawn_Pawn' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_OTOn_Set_Anim_Time, K2Node_DynamicCast_AsBPI_Character_Base) == 0x000030, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_OTOn_Set_Anim_Time::K2Node_DynamicCast_AsBPI_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_OTOn_Set_Anim_Time, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_OTOn_Set_Anim_Time::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_OTOn_Set_Anim_Time, CallFunc_AutoSetCharacterMovementModeToIdle_IsSet) == 0x000041, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_OTOn_Set_Anim_Time::CallFunc_AutoSetCharacterMovementModeToIdle_IsSet' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_OTOn_Set_Anim_Time, CallFunc_AutoSetCharacterMovementModeToIdle_SetMovementMode) == 0x000042, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurst_Dash_OTOn_Set_Anim_Time::CallFunc_AutoSetCharacterMovementModeToIdle_SetMovementMode' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.ZBurstDash Combatives
// 0x0002 (0x0002 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives final
{
public:
	ECharacterLocomotionEventType                 CallFunc_GetUpdateEventType_EventType;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives) == 0x000002, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives, CallFunc_GetUpdateEventType_EventType) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives::CallFunc_GetUpdateEventType_EventType' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.ZBurstDash Combatives Stop
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Stop final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Stop) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Stop");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Stop) == 0x000008, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Stop");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Stop, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Stop::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.ZBurstDash Combatives Update
// 0x0038 (0x0038 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Update final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_2; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratZBurstDashState                         CallFunc_UpdateZBurstDashMove_NextZBurstDashStatus; // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_3; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Update_Sub_State_Timer_OutSubStateTimer;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Update) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Update");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Update) == 0x000038, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Update");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Update, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Update::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000008, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Update, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Update::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_2) == 0x000018, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Update, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000020, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Update::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Update, CallFunc_UpdateZBurstDashMove_NextZBurstDashStatus) == 0x000021, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Update::CallFunc_UpdateZBurstDashMove_NextZBurstDashStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Update, CallFunc_BooleanAND_ReturnValue) == 0x000022, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Update::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Update, K2Node_SwitchEnum_CmpSuccess) == 0x000023, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Update::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Update, CallFunc_BooleanAND_ReturnValue_1) == 0x000024, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Update::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_3) == 0x000028, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Update, CallFunc_Update_Sub_State_Timer_OutSubStateTimer) == 0x000030, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_Combatives_Update::CallFunc_Update_Sub_State_Timer_OutSubStateTimer' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.ZBurstDash IN
// 0x0002 (0x0002 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_IN final
{
public:
	ECharacterLocomotionEventType                 CallFunc_GetUpdateEventType_EventType;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_IN) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_IN");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_IN) == 0x000002, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_IN");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_IN, CallFunc_GetUpdateEventType_EventType) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_IN::CallFunc_GetUpdateEventType_EventType' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_IN, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_IN::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.ZBurstDash INOn Set Anim Time
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INOn_Set_Anim_Time final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INOn_Set_Anim_Time) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INOn_Set_Anim_Time");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INOn_Set_Anim_Time) == 0x000018, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INOn_Set_Anim_Time");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INOn_Set_Anim_Time, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INOn_Set_Anim_Time::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INOn_Set_Anim_Time, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000008, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INOn_Set_Anim_Time::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INOn_Set_Anim_Time, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000010, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INOn_Set_Anim_Time::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INOn_Set_Anim_Time, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000011, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INOn_Set_Anim_Time::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.ZBurstDash INStop
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INStop final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INStop) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INStop");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INStop) == 0x000008, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INStop");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INStop, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INStop::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.ZBurstDash INUpdate
// 0x0048 (0x0048 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INUpdate final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegreesToRadians_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Rotation_IsSuccessfully;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegreesToRadians_A_ImplicitCast;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_InterpSpeed_ImplicitCast;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INUpdate) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INUpdate");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INUpdate) == 0x000048, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INUpdate");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INUpdate, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INUpdate::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INUpdate, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000008, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INUpdate::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INUpdate, CallFunc_DegreesToRadians_ReturnValue) == 0x000010, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INUpdate::CallFunc_DegreesToRadians_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INUpdate, CallFunc_RInterpTo_ReturnValue) == 0x000018, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INUpdate::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INUpdate, CallFunc_Set_Rotation_IsSuccessfully) == 0x000030, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INUpdate::CallFunc_Set_Rotation_IsSuccessfully' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INUpdate, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x000034, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INUpdate::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INUpdate, CallFunc_DegreesToRadians_A_ImplicitCast) == 0x000038, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INUpdate::CallFunc_DegreesToRadians_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INUpdate, CallFunc_RInterpTo_InterpSpeed_ImplicitCast) == 0x000040, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_INUpdate::CallFunc_RInterpTo_InterpSpeed_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.ZBurstDash LP
// 0x0002 (0x0002 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LP final
{
public:
	ECharacterLocomotionEventType                 CallFunc_GetUpdateEventType_EventType;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LP) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LP");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LP) == 0x000002, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LP");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LP, CallFunc_GetUpdateEventType_EventType) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LP::CallFunc_GetUpdateEventType_EventType' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LP, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.ZBurstDash LPOnAddInputX
// 0x0038 (0x0038 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPOnAddInputX final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPOnAddInputX) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPOnAddInputX");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPOnAddInputX) == 0x000038, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPOnAddInputX");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPOnAddInputX, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPOnAddInputX::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPOnAddInputX, CallFunc_BreakVector_X) == 0x000008, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPOnAddInputX::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPOnAddInputX, CallFunc_BreakVector_Y) == 0x000010, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPOnAddInputX::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPOnAddInputX, CallFunc_BreakVector_Z) == 0x000018, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPOnAddInputX::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPOnAddInputX, CallFunc_MakeVector_ReturnValue) == 0x000020, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPOnAddInputX::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.ZBurstDash LPUpdate
// 0x0030 (0x0030 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPUpdate final
{
public:
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratZBurstDashState                         CallFunc_UpdateZBurstDashMove_NextZBurstDashStatus; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Update_Sub_State_Timer_OutSubStateTimer;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPUpdate) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPUpdate");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPUpdate) == 0x000030, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPUpdate");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPUpdate, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPUpdate::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPUpdate, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000001, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPUpdate::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPUpdate, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPUpdate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPUpdate, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPUpdate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPUpdate, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPUpdate::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPUpdate, CallFunc_UpdateZBurstDashMove_NextZBurstDashStatus) == 0x000010, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPUpdate::CallFunc_UpdateZBurstDashMove_NextZBurstDashStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPUpdate, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000018, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPUpdate::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPUpdate, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPUpdate::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPUpdate, CallFunc_Update_Sub_State_Timer_OutSubStateTimer) == 0x000028, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_LPUpdate::CallFunc_Update_Sub_State_Timer_OutSubStateTimer' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.ZBurstDash OT
// 0x0002 (0x0002 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OT final
{
public:
	ECharacterLocomotionEventType                 CallFunc_GetUpdateEventType_EventType;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OT) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OT");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OT) == 0x000002, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OT");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OT, CallFunc_GetUpdateEventType_EventType) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OT::CallFunc_GetUpdateEventType_EventType' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OT, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OT::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.ZBurstDash OTOn Hit
// 0x0010 (0x0010 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTOn_Hit final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHitFloor_IsHitFloor;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTOn_Hit) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTOn_Hit");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTOn_Hit) == 0x000010, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTOn_Hit");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTOn_Hit, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTOn_Hit::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTOn_Hit, CallFunc_IsHitFloor_IsHitFloor) == 0x000008, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTOn_Hit::CallFunc_IsHitFloor_IsHitFloor' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.ZBurstDash OTStop
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTStop final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTStop) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTStop");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTStop) == 0x000008, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTStop");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTStop, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTStop::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");

// Function BP_CharacterLocomotionSubZBurstDash.BP_CharacterLocomotionSubZBurstDash_C.ZBurstDash OTUpdate
// 0x0060 (0x0060 - 0x0000)
struct BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTUpdate final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegreesToRadians_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EKoratZBurstDashState                         CallFunc_UpdateZBurstDashMove_NextZBurstDashStatus; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Rotation_IsSuccessfully;              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_2; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Update_Sub_State_Timer_OutSubStateTimer;  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_DegreesToRadians_A_ImplicitCast;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_InterpSpeed_ImplicitCast;       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTUpdate) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTUpdate");
static_assert(sizeof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTUpdate) == 0x000060, "Wrong size on BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTUpdate");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTUpdate, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTUpdate::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTUpdate, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000008, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTUpdate::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTUpdate, CallFunc_DegreesToRadians_ReturnValue) == 0x000010, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTUpdate::CallFunc_DegreesToRadians_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTUpdate, CallFunc_RInterpTo_ReturnValue) == 0x000018, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTUpdate::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTUpdate, CallFunc_UpdateZBurstDashMove_NextZBurstDashStatus) == 0x000030, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTUpdate::CallFunc_UpdateZBurstDashMove_NextZBurstDashStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTUpdate, CallFunc_Set_Rotation_IsSuccessfully) == 0x000031, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTUpdate::CallFunc_Set_Rotation_IsSuccessfully' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTUpdate, CallFunc_GetLocomotionComponent_LocomotionComponent_2) == 0x000038, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTUpdate::CallFunc_GetLocomotionComponent_LocomotionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTUpdate, CallFunc_Update_Sub_State_Timer_OutSubStateTimer) == 0x000040, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTUpdate::CallFunc_Update_Sub_State_Timer_OutSubStateTimer' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTUpdate, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x000048, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTUpdate::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTUpdate, CallFunc_DegreesToRadians_A_ImplicitCast) == 0x000050, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTUpdate::CallFunc_DegreesToRadians_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTUpdate, CallFunc_RInterpTo_InterpSpeed_ImplicitCast) == 0x000058, "Member 'BP_CharacterLocomotionSubZBurstDash_C_ZBurstDash_OTUpdate::CallFunc_RInterpTo_InterpSpeed_ImplicitCast' has a wrong offset!");

}

