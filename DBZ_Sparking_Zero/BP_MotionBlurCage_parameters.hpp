#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MotionBlurCage

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_MotionBlurCage.BP_MotionBlurCage_C.ExecuteUbergraph_BP_MotionBlurCage
// 0x0020 (0x0020 - 0x0000)
struct BP_MotionBlurCage_C_ExecuteUbergraph_BP_MotionBlurCage final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_strength;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_fuzz;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MotionBlurCage_C_ExecuteUbergraph_BP_MotionBlurCage) == 0x000008, "Wrong alignment on BP_MotionBlurCage_C_ExecuteUbergraph_BP_MotionBlurCage");
static_assert(sizeof(BP_MotionBlurCage_C_ExecuteUbergraph_BP_MotionBlurCage) == 0x000020, "Wrong size on BP_MotionBlurCage_C_ExecuteUbergraph_BP_MotionBlurCage");
static_assert(offsetof(BP_MotionBlurCage_C_ExecuteUbergraph_BP_MotionBlurCage, EntryPoint) == 0x000000, "Member 'BP_MotionBlurCage_C_ExecuteUbergraph_BP_MotionBlurCage::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MotionBlurCage_C_ExecuteUbergraph_BP_MotionBlurCage, K2Node_CustomEvent_strength) == 0x000008, "Member 'BP_MotionBlurCage_C_ExecuteUbergraph_BP_MotionBlurCage::K2Node_CustomEvent_strength' has a wrong offset!");
static_assert(offsetof(BP_MotionBlurCage_C_ExecuteUbergraph_BP_MotionBlurCage, K2Node_CustomEvent_fuzz) == 0x000010, "Member 'BP_MotionBlurCage_C_ExecuteUbergraph_BP_MotionBlurCage::K2Node_CustomEvent_fuzz' has a wrong offset!");
static_assert(offsetof(BP_MotionBlurCage_C_ExecuteUbergraph_BP_MotionBlurCage, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000018, "Member 'BP_MotionBlurCage_C_ExecuteUbergraph_BP_MotionBlurCage::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MotionBlurCage_C_ExecuteUbergraph_BP_MotionBlurCage, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x00001C, "Member 'BP_MotionBlurCage_C_ExecuteUbergraph_BP_MotionBlurCage::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function BP_MotionBlurCage.BP_MotionBlurCage_C.SetFuzz
// 0x0008 (0x0008 - 0x0000)
struct BP_MotionBlurCage_C_SetFuzz final
{
public:
	double                                        Fuzz_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MotionBlurCage_C_SetFuzz) == 0x000008, "Wrong alignment on BP_MotionBlurCage_C_SetFuzz");
static_assert(sizeof(BP_MotionBlurCage_C_SetFuzz) == 0x000008, "Wrong size on BP_MotionBlurCage_C_SetFuzz");
static_assert(offsetof(BP_MotionBlurCage_C_SetFuzz, Fuzz_0) == 0x000000, "Member 'BP_MotionBlurCage_C_SetFuzz::Fuzz_0' has a wrong offset!");

// Function BP_MotionBlurCage.BP_MotionBlurCage_C.SetStrength
// 0x0008 (0x0008 - 0x0000)
struct BP_MotionBlurCage_C_SetStrength final
{
public:
	double                                        Strength_0;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MotionBlurCage_C_SetStrength) == 0x000008, "Wrong alignment on BP_MotionBlurCage_C_SetStrength");
static_assert(sizeof(BP_MotionBlurCage_C_SetStrength) == 0x000008, "Wrong size on BP_MotionBlurCage_C_SetStrength");
static_assert(offsetof(BP_MotionBlurCage_C_SetStrength, Strength_0) == 0x000000, "Member 'BP_MotionBlurCage_C_SetStrength::Strength_0' has a wrong offset!");

// Function BP_MotionBlurCage.BP_MotionBlurCage_C.UserConstructionScript
// 0x0004 (0x0004 - 0x0000)
struct BP_MotionBlurCage_C_UserConstructionScript final
{
public:
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MotionBlurCage_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_MotionBlurCage_C_UserConstructionScript");
static_assert(sizeof(BP_MotionBlurCage_C_UserConstructionScript) == 0x000004, "Wrong size on BP_MotionBlurCage_C_UserConstructionScript");
static_assert(offsetof(BP_MotionBlurCage_C_UserConstructionScript, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000000, "Member 'BP_MotionBlurCage_C_UserConstructionScript::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");

}

