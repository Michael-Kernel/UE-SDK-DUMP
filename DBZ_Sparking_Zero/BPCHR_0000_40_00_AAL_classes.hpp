#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPCHR_0000_40_00_AAL

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BP_SSCharacterAfterImageCharacter_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPCHR_0000_40_00_AAL.BPCHR_0000_40_00_AAL_C
// 0x0050 (0x0730 - 0x06E0)
class ABPCHR_0000_40_00_AAL_C final : public ABP_SSCharacterAfterImageCharacter_C
{
public:
	class UBPVC_0000_C*                           BPVC_0000;                                         // 0x06E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Gloves;                                            // 0x06E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Boots;                                             // 0x06F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Cloth;                                             // 0x06F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 FACE;                                              // 0x0700(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 HAIR;                                              // 0x0708(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Skin;                                              // 0x0710(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_ToonComponent_C*                    BP_ToonComponent;                                  // 0x0718(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ShellColor;                                        // 0x0720(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPCHR_0000_40_00_AAL_C">();
	}
	static class ABPCHR_0000_40_00_AAL_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABPCHR_0000_40_00_AAL_C>();
	}
};
static_assert(alignof(ABPCHR_0000_40_00_AAL_C) == 0x000010, "Wrong alignment on ABPCHR_0000_40_00_AAL_C");
static_assert(sizeof(ABPCHR_0000_40_00_AAL_C) == 0x000730, "Wrong size on ABPCHR_0000_40_00_AAL_C");
static_assert(offsetof(ABPCHR_0000_40_00_AAL_C, BPVC_0000) == 0x0006E0, "Member 'ABPCHR_0000_40_00_AAL_C::BPVC_0000' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_AAL_C, Gloves) == 0x0006E8, "Member 'ABPCHR_0000_40_00_AAL_C::Gloves' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_AAL_C, Boots) == 0x0006F0, "Member 'ABPCHR_0000_40_00_AAL_C::Boots' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_AAL_C, Cloth) == 0x0006F8, "Member 'ABPCHR_0000_40_00_AAL_C::Cloth' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_AAL_C, FACE) == 0x000700, "Member 'ABPCHR_0000_40_00_AAL_C::FACE' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_AAL_C, HAIR) == 0x000708, "Member 'ABPCHR_0000_40_00_AAL_C::HAIR' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_AAL_C, Skin) == 0x000710, "Member 'ABPCHR_0000_40_00_AAL_C::Skin' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_AAL_C, BP_ToonComponent) == 0x000718, "Member 'ABPCHR_0000_40_00_AAL_C::BP_ToonComponent' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_AAL_C, ShellColor) == 0x000720, "Member 'ABPCHR_0000_40_00_AAL_C::ShellColor' has a wrong offset!");

}

