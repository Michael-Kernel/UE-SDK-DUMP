#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CRBP_FacialRig

#include "Basic.hpp"

#include "CriWareAdxLipSync_structs.hpp"
#include "KoratControlRigExtension_classes.hpp"
#include "RigVM_classes.hpp"
#include "ControlRig_structs.hpp"
#include "SS_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// ControlRigBlueprintGeneratedClass CRBP_FacialRig.CRBP_FacialRig_C
// 0x0148 (0x06B0 - 0x0568)
class UCRBP_FacialRig_C final : public UKoratFacialControlRig
{
public:
	double                                        Disable_lipsync_curve;                             // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        Clench1_Shout1;                                    // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Shout1_Clench1;                                    // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CloseVertical;                                     // 0x0580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OpenVertical;                                      // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Smile1_Smile2;                                     // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Smile2_Smile1;                                     // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Normal_Smile2;                                     // 0x05A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        E_Anger1;                                          // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        E_Calm1;                                           // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        E_CloseBothEyes1;                                  // 0x05B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        E_CloseLeftEye1;                                   // 0x05C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        E_CloseRightEye1;                                  // 0x05C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        E_Sad1;                                            // 0x05D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        E_Surprise1;                                       // 0x05D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCriLipsMouthInfo                      LipMouthInfo;                                      // 0x05E0(0x0010)(Edit, BlueprintVisible, NoDestructor)
	bool                                          IsPlaying;                                         // 0x05F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F1[0x7];                                      // 0x05F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Volume;                                            // 0x05F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaFloat;                                        // 0x0600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_float;                                        // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FaceMeshValue;                                     // 0x0610(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCriLipsMorphTargetBlendAmountAsJapanese LipAMount;                                         // 0x0614(0x0014)(Edit, BlueprintVisible, NoDestructor)
	double                                        LogVolume;                                         // 0x0628(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Disable_lipsync_bool;                              // 0x0630(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_631[0x7];                                      // 0x0631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Sum_control_value;                                 // 0x0638(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Width;                                             // 0x0640(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Previous_force_vertical;                           // 0x0648(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_649[0x7];                                      // 0x0649(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Previous_vertical;                                 // 0x0650(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Default_vertical_alpha;                            // 0x0658(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Volume_vertical_alpha;                             // 0x0660(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Open_vertical_alpha;                               // 0x0668(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Eye_movement_angle;                                // 0x0670(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Eye_movement_length;                               // 0x0678(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Eye_movement_offset_x;                             // 0x0680(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Eye_movement_offset_y;                             // 0x0688(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Eye_movement_radius;                               // 0x0690(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Width_vertical_alpha;                              // 0x0698(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnalyzerStatus;                                    // 0x06A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OldAnalyzerStatus;                                 // 0x06A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMaxOpen;                                         // 0x06A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CRBP_FacialRig_C">();
	}
	static class UCRBP_FacialRig_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCRBP_FacialRig_C>();
	}
};
static_assert(alignof(UCRBP_FacialRig_C) == 0x000008, "Wrong alignment on UCRBP_FacialRig_C");
static_assert(sizeof(UCRBP_FacialRig_C) == 0x0006B0, "Wrong size on UCRBP_FacialRig_C");
static_assert(offsetof(UCRBP_FacialRig_C, Disable_lipsync_curve) == 0x000568, "Member 'UCRBP_FacialRig_C::Disable_lipsync_curve' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, Clench1_Shout1) == 0x000570, "Member 'UCRBP_FacialRig_C::Clench1_Shout1' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, Shout1_Clench1) == 0x000578, "Member 'UCRBP_FacialRig_C::Shout1_Clench1' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, CloseVertical) == 0x000580, "Member 'UCRBP_FacialRig_C::CloseVertical' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, OpenVertical) == 0x000588, "Member 'UCRBP_FacialRig_C::OpenVertical' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, Smile1_Smile2) == 0x000590, "Member 'UCRBP_FacialRig_C::Smile1_Smile2' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, Smile2_Smile1) == 0x000598, "Member 'UCRBP_FacialRig_C::Smile2_Smile1' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, Normal_Smile2) == 0x0005A0, "Member 'UCRBP_FacialRig_C::Normal_Smile2' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, E_Anger1) == 0x0005A8, "Member 'UCRBP_FacialRig_C::E_Anger1' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, E_Calm1) == 0x0005B0, "Member 'UCRBP_FacialRig_C::E_Calm1' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, E_CloseBothEyes1) == 0x0005B8, "Member 'UCRBP_FacialRig_C::E_CloseBothEyes1' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, E_CloseLeftEye1) == 0x0005C0, "Member 'UCRBP_FacialRig_C::E_CloseLeftEye1' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, E_CloseRightEye1) == 0x0005C8, "Member 'UCRBP_FacialRig_C::E_CloseRightEye1' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, E_Sad1) == 0x0005D0, "Member 'UCRBP_FacialRig_C::E_Sad1' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, E_Surprise1) == 0x0005D8, "Member 'UCRBP_FacialRig_C::E_Surprise1' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, LipMouthInfo) == 0x0005E0, "Member 'UCRBP_FacialRig_C::LipMouthInfo' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, IsPlaying) == 0x0005F0, "Member 'UCRBP_FacialRig_C::IsPlaying' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, Volume) == 0x0005F8, "Member 'UCRBP_FacialRig_C::Volume' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, DeltaFloat) == 0x000600, "Member 'UCRBP_FacialRig_C::DeltaFloat' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, Temp_float) == 0x000608, "Member 'UCRBP_FacialRig_C::Temp_float' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, FaceMeshValue) == 0x000610, "Member 'UCRBP_FacialRig_C::FaceMeshValue' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, LipAMount) == 0x000614, "Member 'UCRBP_FacialRig_C::LipAMount' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, LogVolume) == 0x000628, "Member 'UCRBP_FacialRig_C::LogVolume' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, Disable_lipsync_bool) == 0x000630, "Member 'UCRBP_FacialRig_C::Disable_lipsync_bool' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, Sum_control_value) == 0x000638, "Member 'UCRBP_FacialRig_C::Sum_control_value' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, Width) == 0x000640, "Member 'UCRBP_FacialRig_C::Width' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, Previous_force_vertical) == 0x000648, "Member 'UCRBP_FacialRig_C::Previous_force_vertical' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, Previous_vertical) == 0x000650, "Member 'UCRBP_FacialRig_C::Previous_vertical' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, Default_vertical_alpha) == 0x000658, "Member 'UCRBP_FacialRig_C::Default_vertical_alpha' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, Volume_vertical_alpha) == 0x000660, "Member 'UCRBP_FacialRig_C::Volume_vertical_alpha' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, Open_vertical_alpha) == 0x000668, "Member 'UCRBP_FacialRig_C::Open_vertical_alpha' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, Eye_movement_angle) == 0x000670, "Member 'UCRBP_FacialRig_C::Eye_movement_angle' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, Eye_movement_length) == 0x000678, "Member 'UCRBP_FacialRig_C::Eye_movement_length' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, Eye_movement_offset_x) == 0x000680, "Member 'UCRBP_FacialRig_C::Eye_movement_offset_x' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, Eye_movement_offset_y) == 0x000688, "Member 'UCRBP_FacialRig_C::Eye_movement_offset_y' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, Eye_movement_radius) == 0x000690, "Member 'UCRBP_FacialRig_C::Eye_movement_radius' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, Width_vertical_alpha) == 0x000698, "Member 'UCRBP_FacialRig_C::Width_vertical_alpha' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, AnalyzerStatus) == 0x0006A0, "Member 'UCRBP_FacialRig_C::AnalyzerStatus' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, OldAnalyzerStatus) == 0x0006A4, "Member 'UCRBP_FacialRig_C::OldAnalyzerStatus' has a wrong offset!");
static_assert(offsetof(UCRBP_FacialRig_C, IsMaxOpen) == 0x0006A8, "Member 'UCRBP_FacialRig_C::IsMaxOpen' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass CRBP_FacialRig.RigVMMemory_Literal
// 0x0188 (0x01B0 - 0x0028)
class CRBP_FacialRig::URigVMMemory_Literal final : public URigVMMemoryStorage
{
public:
	float                                         RigVMModel___MathFloatMul_5_1_1_1_B__Const;        // 0x0028(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatGreaterEqual_1_B__Const;     // 0x002C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatLessEqual_1_1_B__Const;      // 0x0030(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___VariableNode_14_Value__Const : 1;     // 0x0034(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         BitPad_34_1 : 7;                                   // 0x0034(0x0001)(Fixing Bit-Field Size For New Byte [ Dumper-7 ])
	uint8                                         RigVMModel___VariableNode_14_1_Value__Const : 1;   // 0x0035(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___MathFloatClamp_4_5_Maximum__Const;    // 0x0038(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___SetControlFloat_Control__Const;       // 0x003C(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___RigUnit_GetControlBool_1_1_2_Control__Const; // 0x0044(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___MathVectorSub_1_A__Const;             // 0x0050(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___SetCurveValue_15_Curve__Const;        // 0x0068(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_1_Control__Const; // 0x0070(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___RigUnit_GetControlVector2D_2_Control__Const; // 0x0078(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___SetCurveValue_15_1_1_1_Curve__Const;  // 0x0080(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorMirror_Normal__Const;       // 0x0088(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___SetCurveValue_15_1_1_2_Curve__Const;  // 0x00A0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___RigUnit_GetControlVector2D_2_1_Control__Const; // 0x00A8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___SetCurveValue_15_1_1_1_1_2_1_Curve__Const; // 0x00B0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___If_6_True__Const;                     // 0x00B8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___SetCurveValue_15_1_1_1_1_1_1_Curve__Const; // 0x00BC(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___SetCurveValue_5_Curve__Const;         // 0x00C4(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___RigUnit_GetControlVector2D_Control__Const; // 0x00CC(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___SetCurveValue_6_Curve__Const;         // 0x00D4(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___GetControlFloat_3_Control__Const;     // 0x00DC(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___VariableNode_11_Value__Const;         // 0x00E8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___CollectionChildren_Parent__Const;     // 0x00F0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ERigElementType                               RigVMModel___CollectionChildren_TypeToSearch__Const; // 0x00FC(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___VariableNode_9_Value__Const;          // 0x0100(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___SetCurveValue_Curve__Const;           // 0x0108(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetTransform_1_Item__Const;           // 0x0110(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EBoneGetterSetterMode                         RigVMModel___SetTransform_1_Space__Const;          // 0x011C(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigElementKey                         RigVMModel___ProjectTransformToNewParent_1_NewParent__Const; // 0x0120(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___SetControlOffset_3_Control__Const;    // 0x012C(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0xC];                                      // 0x0134(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___SetControlOffset_3_Offset__Const;     // 0x0140(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_GetTransform_1_Item__Const;   // 0x01A0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass CRBP_FacialRig.RigVMMemory_Literal", true>();
	}
	static class CRBP_FacialRig::URigVMMemory_Literal* GetDefaultObj()
	{
		return GetDefaultObjImpl<CRBP_FacialRig::URigVMMemory_Literal>();
	}
};
static_assert(alignof(CRBP_FacialRig::URigVMMemory_Literal) == 0x000010, "Wrong alignment on CRBP_FacialRig::URigVMMemory_Literal");
static_assert(sizeof(CRBP_FacialRig::URigVMMemory_Literal) == 0x0001B0, "Wrong size on CRBP_FacialRig::URigVMMemory_Literal");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Literal, RigVMModel___MathFloatMul_5_1_1_1_B__Const) == 0x000028, "Member 'CRBP_FacialRig::URigVMMemory_Literal::RigVMModel___MathFloatMul_5_1_1_1_B__Const' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Literal, RigVMModel___MathFloatGreaterEqual_1_B__Const) == 0x00002C, "Member 'CRBP_FacialRig::URigVMMemory_Literal::RigVMModel___MathFloatGreaterEqual_1_B__Const' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Literal, RigVMModel___MathFloatLessEqual_1_1_B__Const) == 0x000030, "Member 'CRBP_FacialRig::URigVMMemory_Literal::RigVMModel___MathFloatLessEqual_1_1_B__Const' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Literal, RigVMModel___MathFloatClamp_4_5_Maximum__Const) == 0x000038, "Member 'CRBP_FacialRig::URigVMMemory_Literal::RigVMModel___MathFloatClamp_4_5_Maximum__Const' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Literal, RigVMModel___SetControlFloat_Control__Const) == 0x00003C, "Member 'CRBP_FacialRig::URigVMMemory_Literal::RigVMModel___SetControlFloat_Control__Const' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Literal, RigVMModel___RigUnit_GetControlBool_1_1_2_Control__Const) == 0x000044, "Member 'CRBP_FacialRig::URigVMMemory_Literal::RigVMModel___RigUnit_GetControlBool_1_1_2_Control__Const' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Literal, RigVMModel___MathVectorSub_1_A__Const) == 0x000050, "Member 'CRBP_FacialRig::URigVMMemory_Literal::RigVMModel___MathVectorSub_1_A__Const' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Literal, RigVMModel___SetCurveValue_15_Curve__Const) == 0x000068, "Member 'CRBP_FacialRig::URigVMMemory_Literal::RigVMModel___SetCurveValue_15_Curve__Const' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Literal, RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_1_Control__Const) == 0x000070, "Member 'CRBP_FacialRig::URigVMMemory_Literal::RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_1_Control__Const' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Literal, RigVMModel___RigUnit_GetControlVector2D_2_Control__Const) == 0x000078, "Member 'CRBP_FacialRig::URigVMMemory_Literal::RigVMModel___RigUnit_GetControlVector2D_2_Control__Const' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Literal, RigVMModel___SetCurveValue_15_1_1_1_Curve__Const) == 0x000080, "Member 'CRBP_FacialRig::URigVMMemory_Literal::RigVMModel___SetCurveValue_15_1_1_1_Curve__Const' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Literal, RigVMModel___MathVectorMirror_Normal__Const) == 0x000088, "Member 'CRBP_FacialRig::URigVMMemory_Literal::RigVMModel___MathVectorMirror_Normal__Const' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Literal, RigVMModel___SetCurveValue_15_1_1_2_Curve__Const) == 0x0000A0, "Member 'CRBP_FacialRig::URigVMMemory_Literal::RigVMModel___SetCurveValue_15_1_1_2_Curve__Const' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Literal, RigVMModel___RigUnit_GetControlVector2D_2_1_Control__Const) == 0x0000A8, "Member 'CRBP_FacialRig::URigVMMemory_Literal::RigVMModel___RigUnit_GetControlVector2D_2_1_Control__Const' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Literal, RigVMModel___SetCurveValue_15_1_1_1_1_2_1_Curve__Const) == 0x0000B0, "Member 'CRBP_FacialRig::URigVMMemory_Literal::RigVMModel___SetCurveValue_15_1_1_1_1_2_1_Curve__Const' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Literal, RigVMModel___If_6_True__Const) == 0x0000B8, "Member 'CRBP_FacialRig::URigVMMemory_Literal::RigVMModel___If_6_True__Const' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Literal, RigVMModel___SetCurveValue_15_1_1_1_1_1_1_Curve__Const) == 0x0000BC, "Member 'CRBP_FacialRig::URigVMMemory_Literal::RigVMModel___SetCurveValue_15_1_1_1_1_1_1_Curve__Const' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Literal, RigVMModel___SetCurveValue_5_Curve__Const) == 0x0000C4, "Member 'CRBP_FacialRig::URigVMMemory_Literal::RigVMModel___SetCurveValue_5_Curve__Const' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Literal, RigVMModel___RigUnit_GetControlVector2D_Control__Const) == 0x0000CC, "Member 'CRBP_FacialRig::URigVMMemory_Literal::RigVMModel___RigUnit_GetControlVector2D_Control__Const' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Literal, RigVMModel___SetCurveValue_6_Curve__Const) == 0x0000D4, "Member 'CRBP_FacialRig::URigVMMemory_Literal::RigVMModel___SetCurveValue_6_Curve__Const' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Literal, RigVMModel___GetControlFloat_3_Control__Const) == 0x0000DC, "Member 'CRBP_FacialRig::URigVMMemory_Literal::RigVMModel___GetControlFloat_3_Control__Const' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Literal, RigVMModel___VariableNode_11_Value__Const) == 0x0000E8, "Member 'CRBP_FacialRig::URigVMMemory_Literal::RigVMModel___VariableNode_11_Value__Const' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Literal, RigVMModel___CollectionChildren_Parent__Const) == 0x0000F0, "Member 'CRBP_FacialRig::URigVMMemory_Literal::RigVMModel___CollectionChildren_Parent__Const' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Literal, RigVMModel___CollectionChildren_TypeToSearch__Const) == 0x0000FC, "Member 'CRBP_FacialRig::URigVMMemory_Literal::RigVMModel___CollectionChildren_TypeToSearch__Const' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Literal, RigVMModel___VariableNode_9_Value__Const) == 0x000100, "Member 'CRBP_FacialRig::URigVMMemory_Literal::RigVMModel___VariableNode_9_Value__Const' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Literal, RigVMModel___SetCurveValue_Curve__Const) == 0x000108, "Member 'CRBP_FacialRig::URigVMMemory_Literal::RigVMModel___SetCurveValue_Curve__Const' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Literal, RigVMModel___SetTransform_1_Item__Const) == 0x000110, "Member 'CRBP_FacialRig::URigVMMemory_Literal::RigVMModel___SetTransform_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Literal, RigVMModel___SetTransform_1_Space__Const) == 0x00011C, "Member 'CRBP_FacialRig::URigVMMemory_Literal::RigVMModel___SetTransform_1_Space__Const' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Literal, RigVMModel___ProjectTransformToNewParent_1_NewParent__Const) == 0x000120, "Member 'CRBP_FacialRig::URigVMMemory_Literal::RigVMModel___ProjectTransformToNewParent_1_NewParent__Const' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Literal, RigVMModel___SetControlOffset_3_Control__Const) == 0x00012C, "Member 'CRBP_FacialRig::URigVMMemory_Literal::RigVMModel___SetControlOffset_3_Control__Const' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Literal, RigVMModel___SetControlOffset_3_Offset__Const) == 0x000140, "Member 'CRBP_FacialRig::URigVMMemory_Literal::RigVMModel___SetControlOffset_3_Offset__Const' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_1_Item__Const) == 0x0001A0, "Member 'CRBP_FacialRig::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_1_Item__Const' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass CRBP_FacialRig.RigVMMemory_Work
// 0x0ED8 (0x0F00 - 0x0028)
class CRBP_FacialRig::URigVMMemory_Work final : public URigVMMemoryStorage
{
public:
	struct FControlRigExecuteContext              ExecuteContext_;                                   // 0x0028(0x0038)(Edit, EditConst, NonTransactional)
	uint8                                         RigVMModel___MathBoolNot_2_Result : 1;             // 0x0060(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___MathFloatAdd_2_3_Result;              // 0x0064(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_2_3_A;                   // 0x0068(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_5_1_1_1_Result;          // 0x006C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___GetDeltaTime_1_1_1_1_Result;          // 0x0070(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatSub_1_Result;                // 0x0074(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatSub_1_A;                     // 0x0078(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_5_1_1_1_1_Result;        // 0x007C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___GetDeltaTime_1_1_1_1_1_Result;        // 0x0080(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatSub_1_1_Result;              // 0x0084(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatSub_1_1_A;                   // 0x0088(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_5_1_1_1_1_1_Result;      // 0x008C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___GetDeltaTime_1_1_1_1_1_1_Result;      // 0x0090(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___MathBoolOr_1_Result : 1;              // 0x0094(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         BitPad_94_1 : 7;                                   // 0x0094(0x0001)(Fixing Bit-Field Size For New Byte [ Dumper-7 ])
	uint8                                         RigVMModel___MathFloatGreaterEqual_1_Result : 1;   // 0x0095(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___MathFloatGreaterEqual_1_A;            // 0x0098(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___MathFloatLessEqual_1_1_Result : 1;    // 0x009C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___MathFloatLessEqual_1_1_A;             // 0x00A0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatSub_2_2_Result;              // 0x00A4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatSub_2_2_A;                   // 0x00A8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_5_1_1_1_2_Result;        // 0x00AC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___GetDeltaTime_1_1_1_1_2_Result;        // 0x00B0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_5_Result;                // 0x00B4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_5_A;                     // 0x00B8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_5_1_1_1_1_2_Result;      // 0x00BC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___GetDeltaTime_1_1_1_1_1_2_Result;      // 0x00C0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatSub_1_1_1_Result;            // 0x00C4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatSub_1_1_1_A;                 // 0x00C8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_5_1_1_1_1_1_1_Result;    // 0x00CC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___GetDeltaTime_1_1_1_1_1_1_1_Result;    // 0x00D0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___RigVMStructNode_0_Result;             // 0x00D4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___RigVMStructNode_0_A;                  // 0x00D8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_5_1_1_1_2_1_Result;      // 0x00DC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___GetDeltaTime_1_1_1_1_2_1_Result;      // 0x00E0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatSub_2_1_2_Result;            // 0x00E4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatSub_2_1_2_A;                 // 0x00E8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_5_1_1_1_1_2_1_Result;    // 0x00EC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___GetDeltaTime_1_1_1_1_1_2_1_Result;    // 0x00F0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_5_1_Result;              // 0x00F4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_5_1_A;                   // 0x00F8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_5_1_1_1_1_1_1_1_Result;  // 0x00FC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___GetDeltaTime_1_1_1_1_1_1_1_1_Result;  // 0x0100(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_4_5_Result;            // 0x0104(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_4_5_Value;             // 0x0108(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_4_1_5_Result;          // 0x010C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_4_1_5_Value;           // 0x0110(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_4_2_1_Result;          // 0x0114(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_4_2_1_Value;           // 0x0118(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___If_7_Result;                          // 0x011C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_7_Condition : 1;                   // 0x0120(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___If_7_True;                            // 0x0124(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___GetControlFloat_5_FloatValue;         // 0x0128(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___GetControlFloat_5_Minimum;            // 0x012C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___GetControlFloat_5_Maximum;            // 0x0130(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___GetControlFloat_5_CachedControlIndex; // 0x0138(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___SetControlFloat_CachedControlIndex;   // 0x0148(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatAdd_3_Result;                // 0x0158(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_6_Result;                // 0x015C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_1_Result;              // 0x0160(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_1_Value;               // 0x0164(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_6_B;                     // 0x0168(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_6_1_1_Result;            // 0x016C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_6_1_1_A;                 // 0x0170(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRemap_3_Result;              // 0x0174(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_Result;                // 0x0178(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___RigUnit_GetControlFloat_36_1_1_1_1_1_1_FloatValue; // 0x017C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___RigUnit_GetControlFloat_36_1_1_1_1_1_1_Minimum; // 0x0180(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___RigUnit_GetControlFloat_36_1_1_1_1_1_1_Maximum; // 0x0184(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetControlFloat_36_1_1_1_1_1_1_CachedControlIndex; // 0x0188(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatAdd_3_1_Result;              // 0x0198(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_6_2_Result;              // 0x019C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_6_2_A;                   // 0x01A0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_6_2_B;                   // 0x01A4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_6_1_Result;              // 0x01A8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_6_1_A;                   // 0x01AC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___RigUnit_GetControlBool_1_1_2_BoolValue : 1; // 0x01B0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetControlBool_1_1_2_CachedControlIndex; // 0x01B8(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___MathVectorUnit_4_Result;              // 0x01C8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatCos_2_1_Result;              // 0x01E0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRad_Result;                  // 0x01E4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRad_Value;                   // 0x01E8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatSin_4_1_1_Result;            // 0x01EC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorUnit_4_Value__IO;           // 0x01F0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorAdd_4_Result;               // 0x0208(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorAdd_Result;                 // 0x0220(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorScale_1_Result;             // 0x0238(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorUnit_1_Result;              // 0x0250(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorSub_1_Result;               // 0x0268(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_1_Vector; // 0x0280(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_1_Minimum; // 0x0290(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_1_Maximum; // 0x02A0(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_1_CachedControlIndex; // 0x02B0(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___MathVectorSub_1_A__IO;                // 0x02C0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___If_9_Result;                          // 0x02D8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___MathFloatLess_3_Result : 1;           // 0x02F0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_2F1[0x3];                                      // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___MathVectorDot_1_Result;               // 0x02F4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorSub_Result;                 // 0x02F8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_Vector; // 0x0310(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_Minimum; // 0x0320(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_Maximum; // 0x0330(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_CachedControlIndex; // 0x0340(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___MathVectorSub_A__IO;                  // 0x0350(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorSub_B__IO;                  // 0x0368(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___If_9_True__IO;                        // 0x0380(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___If_9_1_Result;                        // 0x0398(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___MathFloatGreater_Result : 1;          // 0x03B0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_3B1[0x3];                                      // 0x03B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___MathVectorDot_1_1_Result;             // 0x03B4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorSub_2_Result;               // 0x03B8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_1_Vector; // 0x03D0(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_1_Minimum; // 0x03E0(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_1_Maximum; // 0x03F0(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_1_CachedControlIndex; // 0x0400(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___MathVectorSub_2_A__IO;                // 0x0410(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorAdd_1_Result;               // 0x0428(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorScale_3_Result;             // 0x0440(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathVectorScale_3_Factor;             // 0x0458(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45C[0x4];                                      // 0x045C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___MathVectorAdd_1_B__IO;                // 0x0460(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorAdd_2_Result;               // 0x0478(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorScale_Result;               // 0x0490(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathVectorDot_Result;                 // 0x04A8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AC[0x4];                                      // 0x04AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___MathVectorSub_3_Result;               // 0x04B0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_Vector; // 0x04C8(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_Minimum; // 0x04D8(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_Maximum; // 0x04E8(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_CachedControlIndex; // 0x04F8(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___MathVectorSub_3_A__IO;                // 0x0508(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorSub_3_B__IO;                // 0x0520(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorDot_B__IO;                  // 0x0538(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorAdd_2_B__IO;                // 0x0550(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_8_Result;              // 0x0568(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathVectorLength_Result;              // 0x056C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_8_Maximum;             // 0x0570(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_574[0x4];                                      // 0x0574(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              RigVMModel___RigUnit_GetControlVector2D_2_Vector;  // 0x0578(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RigVMModel___RigUnit_GetControlVector2D_2_Minimum; // 0x0588(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RigVMModel___RigUnit_GetControlVector2D_2_Maximum; // 0x0598(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetControlVector2D_2_CachedControlIndex; // 0x05A8(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___MathVectorAdd_4_B__IO;                // 0x05B8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___SetCurveValue_15_Value;               // 0x05D0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D4[0x4];                                      // 0x05D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_15_CachedCurveIndex;    // 0x05D8(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___SetCurveValue_15_1_1_1_Value;         // 0x05E8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EC[0x4];                                      // 0x05EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_15_1_1_1_CachedCurveIndex; // 0x05F0(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___MathVectorUnit_4_1_Result;            // 0x0600(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorMirror_Result;              // 0x0618(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatCos_2_1_1_Result;            // 0x0630(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRad_1_Result;                // 0x0634(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatRad_1_Value;                 // 0x0638(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatSin_4_1_1_1_Result;          // 0x063C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorMirror_Value__IO;           // 0x0640(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatNegate_1_Result;             // 0x0658(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65C[0x4];                                      // 0x065C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___MathVectorAdd_4_1_Result;             // 0x0660(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorAdd_3_Result;               // 0x0678(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorScale_1_1_Result;           // 0x0690(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorUnit_1_1_Result;            // 0x06A8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorSub_1_1_Result;             // 0x06C0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_1_1_Vector; // 0x06D8(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_1_1_Minimum; // 0x06E8(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_1_1_Maximum; // 0x06F8(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_1_1_CachedControlIndex; // 0x0708(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___MathVectorSub_1_1_A__IO;              // 0x0718(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___If_9_2_Result;                        // 0x0730(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___MathFloatLess_3_1_Result : 1;         // 0x0748(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_749[0x3];                                      // 0x0749(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___MathVectorDot_1_2_Result;             // 0x074C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorSub_4_Result;               // 0x0750(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_2_Vector; // 0x0768(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_2_Minimum; // 0x0778(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_2_Maximum; // 0x0788(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_2_CachedControlIndex; // 0x0798(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___MathVectorSub_4_A__IO;                // 0x07A8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatNegate_Result;               // 0x07C0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatNegate_Value;                // 0x07C4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorSub_4_B__IO;                // 0x07C8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___If_9_2_True__IO;                      // 0x07E0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___If_9_1_1_Result;                      // 0x07F8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___MathFloatGreater_1_Result : 1;        // 0x0810(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_811[0x3];                                      // 0x0811(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___MathVectorDot_1_1_1_Result;           // 0x0814(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorSub_2_1_Result;             // 0x0818(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_1_1_Vector; // 0x0830(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_1_1_Minimum; // 0x0840(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_1_1_Maximum; // 0x0850(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_1_1_CachedControlIndex; // 0x0860(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___MathVectorSub_2_1_A__IO;              // 0x0870(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorAdd_1_1_Result;             // 0x0888(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorScale_3_1_Result;           // 0x08A0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathVectorScale_3_1_Factor;           // 0x08B8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatNegate_2_Result;             // 0x08BC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatNegate_2_Value;              // 0x08C0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C4[0x4];                                      // 0x08C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___MathVectorAdd_1_1_B__IO;              // 0x08C8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorAdd_2_1_Result;             // 0x08E0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorScale_2_Result;             // 0x08F8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathVectorDot_2_Result;               // 0x0910(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_914[0x4];                                      // 0x0914(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___MathVectorSub_3_1_Result;             // 0x0918(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_3_Vector; // 0x0930(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_3_Minimum; // 0x0940(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_3_Maximum; // 0x0950(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_3_CachedControlIndex; // 0x0960(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___MathVectorSub_3_1_A__IO;              // 0x0970(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatNegate_2_1_Result;           // 0x0988(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatNegate_2_1_Value;            // 0x098C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorSub_3_1_B__IO;              // 0x0990(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorDot_2_B__IO;                // 0x09A8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorAdd_2_1_B__IO;              // 0x09C0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_8_1_Result;            // 0x09D8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathVectorLength_1_Result;            // 0x09DC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_8_1_Maximum;           // 0x09E0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E4[0x4];                                      // 0x09E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___MathVectorAdd_4_1_A__IO;              // 0x09E8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RigVMModel___RigUnit_GetControlVector2D_2_1_Vector; // 0x0A00(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RigVMModel___RigUnit_GetControlVector2D_2_1_Minimum; // 0x0A10(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RigVMModel___RigUnit_GetControlVector2D_2_1_Maximum; // 0x0A20(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetControlVector2D_2_1_CachedControlIndex; // 0x0A30(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___MathVectorAdd_4_1_B__IO;              // 0x0A40(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatNegate_1_Value;              // 0x0A58(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5C[0x4];                                      // 0x0A5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_15_1_1_2_CachedCurveIndex; // 0x0A60(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___SetCurveValue_15_1_1_1_1_2_1_Value;   // 0x0A70(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A74[0x4];                                      // 0x0A74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_15_1_1_1_1_2_1_CachedCurveIndex; // 0x0A78(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___If_6_Result;                          // 0x0A88(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___MathFloatEquals_Result : 1;           // 0x0A8C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_A8D[0x3];                                      // 0x0A8D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___GetCurveValue_3_Value;                // 0x0A90(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___GetCurveValue_3_Valid : 1;            // 0x0A94(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_A95[0x3];                                      // 0x0A95(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___GetCurveValue_3_CachedCurveIndex;     // 0x0A98(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_3_CachedCurveIndex;     // 0x0AA8(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___If_6_1_Result;                        // 0x0AB8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___MathFloatEquals_1_Result : 1;         // 0x0ABC(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_ABD[0x3];                                      // 0x0ABD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___GetCurveValue_3_1_Value;              // 0x0AC0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___GetCurveValue_3_1_Valid : 1;          // 0x0AC4(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_AC5[0x3];                                      // 0x0AC5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___GetCurveValue_3_1_CachedCurveIndex;   // 0x0AC8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_4_CachedCurveIndex;     // 0x0AD8(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___If_6_2_Result;                        // 0x0AE8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___MathFloatEquals_2_Result : 1;         // 0x0AEC(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_AED[0x3];                                      // 0x0AED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___GetCurveValue_3_2_Value;              // 0x0AF0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___GetCurveValue_3_2_Valid : 1;          // 0x0AF4(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_AF5[0x3];                                      // 0x0AF5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___GetCurveValue_3_2_CachedCurveIndex;   // 0x0AF8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_4_1_CachedCurveIndex;   // 0x0B08(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___If_6_3_Result;                        // 0x0B18(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___MathFloatEquals_3_Result : 1;         // 0x0B1C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_B1D[0x3];                                      // 0x0B1D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___GetCurveValue_3_3_Value;              // 0x0B20(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___GetCurveValue_3_3_Valid : 1;          // 0x0B24(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_B25[0x3];                                      // 0x0B25(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___GetCurveValue_3_3_CachedCurveIndex;   // 0x0B28(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_4_2_CachedCurveIndex;   // 0x0B38(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___RigUnit_GetControlFloat_15_1_FloatValue; // 0x0B48(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___RigUnit_GetControlFloat_15_1_Minimum; // 0x0B4C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___RigUnit_GetControlFloat_15_1_Maximum; // 0x0B50(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B54[0x4];                                      // 0x0B54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetControlFloat_15_1_CachedControlIndex; // 0x0B58(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_15_1_1_1_1_1_1_CachedCurveIndex; // 0x0B68(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector2D                              RigVMModel___RigUnit_GetControlVector2D_Vector;    // 0x0B78(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RigVMModel___RigUnit_GetControlVector2D_Minimum;   // 0x0B88(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RigVMModel___RigUnit_GetControlVector2D_Maximum;   // 0x0B98(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetControlVector2D_CachedControlIndex; // 0x0BA8(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___SetCurveValue_5_Value;                // 0x0BB8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BBC[0x4];                                      // 0x0BBC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_5_CachedCurveIndex;     // 0x0BC0(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___SetCurveValue_6_Value;                // 0x0BD0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD4[0x4];                                      // 0x0BD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_6_CachedCurveIndex;     // 0x0BD8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_15_2_1_2_CachedCurveIndex; // 0x0BE8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_15_1_1_1_2_1_2_CachedCurveIndex; // 0x0BF8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_15_2_1_1_1_CachedCurveIndex; // 0x0C08(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_15_1_1_1_2_1_1_1_CachedCurveIndex; // 0x0C18(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_5_1_CachedCurveIndex;   // 0x0C28(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_6_1_CachedCurveIndex;   // 0x0C38(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___GetControlFloat_3_FloatValue;         // 0x0C48(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___GetControlFloat_3_Minimum;            // 0x0C4C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___GetControlFloat_3_Maximum;            // 0x0C50(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C54[0x4];                                      // 0x0C54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___GetControlFloat_3_CachedControlIndex; // 0x0C58(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         RigVMModel___MathFloatLess_1_Result : 1;           // 0x0C68(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_C69[0x3];                                      // 0x0C69(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___MathFloatAdd_4_Result;                // 0x0C6C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_3_Result;              // 0x0C70(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___GetControlFloat_2_FloatValue;         // 0x0C74(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___CollectionLoop_Item;                  // 0x0C78(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___GetControlFloat_2_Control;            // 0x0C84(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___GetControlFloat_2_Minimum;            // 0x0C8C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___GetControlFloat_2_Maximum;            // 0x0C90(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C94[0x4];                                      // 0x0C94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___GetControlFloat_2_CachedControlIndex; // 0x0C98(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatAdd_4_B;                     // 0x0CA8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CAC[0x4];                                      // 0x0CAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigElementKeyCollection               RigVMModel___CollectionChildren_Collection;        // 0x0CB0(0x0010)(Edit, EditConst, NonTransactional, HasGetValueTypeHash)
	int32                                         RigVMModel___CollectionLoop_Index;                 // 0x0CC0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         RigVMModel___CollectionLoop_Count;                 // 0x0CC4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___CollectionLoop_Ratio;                 // 0x0CC8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___CollectionLoop_Continue : 1;          // 0x0CCC(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         BitPad_CCC_1 : 7;                                  // 0x0CCC(0x0001)(Fixing Bit-Field Size For New Byte [ Dumper-7 ])
	uint8                                         RigVMModel___MathFloatLessEqual_Result : 1;        // 0x0CCD(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_CCE[0x2];                                      // 0x0CCE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___MathFloatLessEqual_A;                 // 0x0CD0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_Result;              // 0x0CD4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_Result;                // 0x0CD8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_A;                     // 0x0CDC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_B;                     // 0x0CE0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CE4[0x4];                                      // 0x0CE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___SetCurveValue_CachedCurveIndex;       // 0x0CE8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<TArray<struct FKoratFacialInformation>> RigVMModel___KoratRigUnit_SetFicialExpression_FacialInformations; // 0x0CF8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<TArray<struct FKoratExFacialInformation>> RigVMModel___KoratRigUnit_SetFicialExpression_ExFacialInformations; // 0x0D08(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___KoratRigUnit_SetFicialExpression_OpenVertical; // 0x0D18(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___KoratRigUnit_SetFicialExpression_CloseVertical; // 0x0D1C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___KoratRigUnit_SetFicialExpression_DefaultVerticalAlpha; // 0x0D20(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D24[0x4];                                      // 0x0D24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 RigVMModel___KoratRigUnit_SetFicialExpression_ControlValue; // 0x0D28(0x0010)(Edit, EditConst, NonTransactional)
	TArray<float>                                 RigVMModel___KoratRigUnit_SetFicialExpression_EyeCurveValue; // 0x0D38(0x0010)(Edit, EditConst, NonTransactional)
	TArray<float>                                 RigVMModel___KoratRigUnit_SetFicialExpression_OpenCurveValue; // 0x0D48(0x0010)(Edit, EditConst, NonTransactional)
	TArray<float>                                 RigVMModel___KoratRigUnit_SetFicialExpression_CloseCurveValue; // 0x0D58(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___KoratRigUnit_SetFicialExpression_CachedControlIndex; // 0x0D68(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_D78[0x8];                                      // 0x0D78(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___ProjectTransformToNewParent_1_Transform; // 0x0D80(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___ProjectTransformToNewParent_1_CachedChild; // 0x0DE0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___ProjectTransformToNewParent_1_CachedOldParent; // 0x0DF0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___ProjectTransformToNewParent_1_CachedNewParent; // 0x0E00(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___SetTransform_1_CachedIndex;           // 0x0E10(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_1_Transform;     // 0x0E20(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_1_CachedIndex;   // 0x0E80(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___SetControlOffset_3_Offset__IO;        // 0x0E90(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetControlOffset_3_CachedControlIndex; // 0x0EF0(0x0010)(Edit, EditConst, NonTransactional)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass CRBP_FacialRig.RigVMMemory_Work", true>();
	}
	static class CRBP_FacialRig::URigVMMemory_Work* GetDefaultObj()
	{
		return GetDefaultObjImpl<CRBP_FacialRig::URigVMMemory_Work>();
	}
};
static_assert(alignof(CRBP_FacialRig::URigVMMemory_Work) == 0x000010, "Wrong alignment on CRBP_FacialRig::URigVMMemory_Work");
static_assert(sizeof(CRBP_FacialRig::URigVMMemory_Work) == 0x000F00, "Wrong size on CRBP_FacialRig::URigVMMemory_Work");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, ExecuteContext_) == 0x000028, "Member 'CRBP_FacialRig::URigVMMemory_Work::ExecuteContext_' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_2_3_Result) == 0x000064, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_2_3_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_2_3_A) == 0x000068, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_2_3_A' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatMul_5_1_1_1_Result) == 0x00006C, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatMul_5_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___GetDeltaTime_1_1_1_1_Result) == 0x000070, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___GetDeltaTime_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatSub_1_Result) == 0x000074, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatSub_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatSub_1_A) == 0x000078, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatSub_1_A' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatMul_5_1_1_1_1_Result) == 0x00007C, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatMul_5_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___GetDeltaTime_1_1_1_1_1_Result) == 0x000080, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___GetDeltaTime_1_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatSub_1_1_Result) == 0x000084, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatSub_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatSub_1_1_A) == 0x000088, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatSub_1_1_A' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatMul_5_1_1_1_1_1_Result) == 0x00008C, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatMul_5_1_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___GetDeltaTime_1_1_1_1_1_1_Result) == 0x000090, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___GetDeltaTime_1_1_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatGreaterEqual_1_A) == 0x000098, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatGreaterEqual_1_A' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatLessEqual_1_1_A) == 0x0000A0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatLessEqual_1_1_A' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatSub_2_2_Result) == 0x0000A4, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatSub_2_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatSub_2_2_A) == 0x0000A8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatSub_2_2_A' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatMul_5_1_1_1_2_Result) == 0x0000AC, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatMul_5_1_1_1_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___GetDeltaTime_1_1_1_1_2_Result) == 0x0000B0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___GetDeltaTime_1_1_1_1_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_5_Result) == 0x0000B4, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_5_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_5_A) == 0x0000B8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_5_A' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatMul_5_1_1_1_1_2_Result) == 0x0000BC, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatMul_5_1_1_1_1_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___GetDeltaTime_1_1_1_1_1_2_Result) == 0x0000C0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___GetDeltaTime_1_1_1_1_1_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatSub_1_1_1_Result) == 0x0000C4, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatSub_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatSub_1_1_1_A) == 0x0000C8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatSub_1_1_1_A' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatMul_5_1_1_1_1_1_1_Result) == 0x0000CC, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatMul_5_1_1_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___GetDeltaTime_1_1_1_1_1_1_1_Result) == 0x0000D0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___GetDeltaTime_1_1_1_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigVMStructNode_0_Result) == 0x0000D4, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigVMStructNode_0_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigVMStructNode_0_A) == 0x0000D8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigVMStructNode_0_A' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatMul_5_1_1_1_2_1_Result) == 0x0000DC, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatMul_5_1_1_1_2_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___GetDeltaTime_1_1_1_1_2_1_Result) == 0x0000E0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___GetDeltaTime_1_1_1_1_2_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatSub_2_1_2_Result) == 0x0000E4, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatSub_2_1_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatSub_2_1_2_A) == 0x0000E8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatSub_2_1_2_A' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatMul_5_1_1_1_1_2_1_Result) == 0x0000EC, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatMul_5_1_1_1_1_2_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___GetDeltaTime_1_1_1_1_1_2_1_Result) == 0x0000F0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___GetDeltaTime_1_1_1_1_1_2_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_5_1_Result) == 0x0000F4, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_5_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_5_1_A) == 0x0000F8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_5_1_A' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatMul_5_1_1_1_1_1_1_1_Result) == 0x0000FC, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatMul_5_1_1_1_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___GetDeltaTime_1_1_1_1_1_1_1_1_Result) == 0x000100, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___GetDeltaTime_1_1_1_1_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_4_5_Result) == 0x000104, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_4_5_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_4_5_Value) == 0x000108, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_4_5_Value' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_4_1_5_Result) == 0x00010C, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_4_1_5_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_4_1_5_Value) == 0x000110, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_4_1_5_Value' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_4_2_1_Result) == 0x000114, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_4_2_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_4_2_1_Value) == 0x000118, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_4_2_1_Value' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___If_7_Result) == 0x00011C, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___If_7_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___If_7_True) == 0x000124, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___If_7_True' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___GetControlFloat_5_FloatValue) == 0x000128, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___GetControlFloat_5_FloatValue' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___GetControlFloat_5_Minimum) == 0x00012C, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___GetControlFloat_5_Minimum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___GetControlFloat_5_Maximum) == 0x000130, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___GetControlFloat_5_Maximum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___GetControlFloat_5_CachedControlIndex) == 0x000138, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___GetControlFloat_5_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___SetControlFloat_CachedControlIndex) == 0x000148, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___SetControlFloat_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_3_Result) == 0x000158, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_3_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatMul_6_Result) == 0x00015C, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatMul_6_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatRemap_1_Result) == 0x000160, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatRemap_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatRemap_1_Value) == 0x000164, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatRemap_1_Value' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatMul_6_B) == 0x000168, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatMul_6_B' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatMul_6_1_1_Result) == 0x00016C, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatMul_6_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatMul_6_1_1_A) == 0x000170, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatMul_6_1_1_A' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatRemap_3_Result) == 0x000174, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatRemap_3_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_Result) == 0x000178, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlFloat_36_1_1_1_1_1_1_FloatValue) == 0x00017C, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlFloat_36_1_1_1_1_1_1_FloatValue' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlFloat_36_1_1_1_1_1_1_Minimum) == 0x000180, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlFloat_36_1_1_1_1_1_1_Minimum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlFloat_36_1_1_1_1_1_1_Maximum) == 0x000184, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlFloat_36_1_1_1_1_1_1_Maximum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlFloat_36_1_1_1_1_1_1_CachedControlIndex) == 0x000188, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlFloat_36_1_1_1_1_1_1_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_3_1_Result) == 0x000198, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_3_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatMul_6_2_Result) == 0x00019C, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatMul_6_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatMul_6_2_A) == 0x0001A0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatMul_6_2_A' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatMul_6_2_B) == 0x0001A4, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatMul_6_2_B' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatMul_6_1_Result) == 0x0001A8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatMul_6_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatMul_6_1_A) == 0x0001AC, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatMul_6_1_A' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlBool_1_1_2_CachedControlIndex) == 0x0001B8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlBool_1_1_2_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorUnit_4_Result) == 0x0001C8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorUnit_4_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatCos_2_1_Result) == 0x0001E0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatCos_2_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatRad_Result) == 0x0001E4, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatRad_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatRad_Value) == 0x0001E8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatRad_Value' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatSin_4_1_1_Result) == 0x0001EC, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatSin_4_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorUnit_4_Value__IO) == 0x0001F0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorUnit_4_Value__IO' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorAdd_4_Result) == 0x000208, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorAdd_4_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorAdd_Result) == 0x000220, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorAdd_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorScale_1_Result) == 0x000238, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorScale_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorUnit_1_Result) == 0x000250, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorUnit_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorSub_1_Result) == 0x000268, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorSub_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_1_Vector) == 0x000280, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_1_Vector' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_1_Minimum) == 0x000290, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_1_Minimum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_1_Maximum) == 0x0002A0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_1_Maximum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_1_CachedControlIndex) == 0x0002B0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_1_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorSub_1_A__IO) == 0x0002C0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorSub_1_A__IO' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___If_9_Result) == 0x0002D8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___If_9_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorDot_1_Result) == 0x0002F4, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorDot_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorSub_Result) == 0x0002F8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorSub_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_Vector) == 0x000310, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_Vector' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_Minimum) == 0x000320, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_Minimum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_Maximum) == 0x000330, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_Maximum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_CachedControlIndex) == 0x000340, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorSub_A__IO) == 0x000350, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorSub_A__IO' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorSub_B__IO) == 0x000368, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorSub_B__IO' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___If_9_True__IO) == 0x000380, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___If_9_True__IO' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___If_9_1_Result) == 0x000398, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___If_9_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorDot_1_1_Result) == 0x0003B4, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorDot_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorSub_2_Result) == 0x0003B8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorSub_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_1_Vector) == 0x0003D0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_1_Vector' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_1_Minimum) == 0x0003E0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_1_Minimum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_1_Maximum) == 0x0003F0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_1_Maximum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_1_CachedControlIndex) == 0x000400, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_1_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorSub_2_A__IO) == 0x000410, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorSub_2_A__IO' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorAdd_1_Result) == 0x000428, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorAdd_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorScale_3_Result) == 0x000440, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorScale_3_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorScale_3_Factor) == 0x000458, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorScale_3_Factor' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorAdd_1_B__IO) == 0x000460, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorAdd_1_B__IO' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorAdd_2_Result) == 0x000478, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorAdd_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorScale_Result) == 0x000490, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorScale_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorDot_Result) == 0x0004A8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorDot_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorSub_3_Result) == 0x0004B0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorSub_3_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_Vector) == 0x0004C8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_Vector' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_Minimum) == 0x0004D8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_Minimum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_Maximum) == 0x0004E8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_Maximum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_CachedControlIndex) == 0x0004F8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorSub_3_A__IO) == 0x000508, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorSub_3_A__IO' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorSub_3_B__IO) == 0x000520, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorSub_3_B__IO' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorDot_B__IO) == 0x000538, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorDot_B__IO' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorAdd_2_B__IO) == 0x000550, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorAdd_2_B__IO' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_8_Result) == 0x000568, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_8_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorLength_Result) == 0x00056C, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorLength_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_8_Maximum) == 0x000570, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_8_Maximum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_2_Vector) == 0x000578, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_2_Vector' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_2_Minimum) == 0x000588, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_2_Minimum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_2_Maximum) == 0x000598, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_2_Maximum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_2_CachedControlIndex) == 0x0005A8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_2_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorAdd_4_B__IO) == 0x0005B8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorAdd_4_B__IO' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___SetCurveValue_15_Value) == 0x0005D0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___SetCurveValue_15_Value' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___SetCurveValue_15_CachedCurveIndex) == 0x0005D8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___SetCurveValue_15_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___SetCurveValue_15_1_1_1_Value) == 0x0005E8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___SetCurveValue_15_1_1_1_Value' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___SetCurveValue_15_1_1_1_CachedCurveIndex) == 0x0005F0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___SetCurveValue_15_1_1_1_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorUnit_4_1_Result) == 0x000600, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorUnit_4_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorMirror_Result) == 0x000618, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorMirror_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatCos_2_1_1_Result) == 0x000630, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatCos_2_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatRad_1_Result) == 0x000634, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatRad_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatRad_1_Value) == 0x000638, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatRad_1_Value' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatSin_4_1_1_1_Result) == 0x00063C, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatSin_4_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorMirror_Value__IO) == 0x000640, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorMirror_Value__IO' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatNegate_1_Result) == 0x000658, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatNegate_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorAdd_4_1_Result) == 0x000660, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorAdd_4_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorAdd_3_Result) == 0x000678, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorAdd_3_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorScale_1_1_Result) == 0x000690, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorScale_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorUnit_1_1_Result) == 0x0006A8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorUnit_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorSub_1_1_Result) == 0x0006C0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorSub_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_1_1_Vector) == 0x0006D8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_1_1_Vector' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_1_1_Minimum) == 0x0006E8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_1_1_Minimum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_1_1_Maximum) == 0x0006F8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_1_1_Maximum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_1_1_CachedControlIndex) == 0x000708, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_1_1_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorSub_1_1_A__IO) == 0x000718, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorSub_1_1_A__IO' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___If_9_2_Result) == 0x000730, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___If_9_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorDot_1_2_Result) == 0x00074C, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorDot_1_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorSub_4_Result) == 0x000750, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorSub_4_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_2_Vector) == 0x000768, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_2_Vector' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_2_Minimum) == 0x000778, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_2_Minimum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_2_Maximum) == 0x000788, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_2_Maximum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_2_CachedControlIndex) == 0x000798, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_2_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorSub_4_A__IO) == 0x0007A8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorSub_4_A__IO' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatNegate_Result) == 0x0007C0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatNegate_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatNegate_Value) == 0x0007C4, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatNegate_Value' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorSub_4_B__IO) == 0x0007C8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorSub_4_B__IO' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___If_9_2_True__IO) == 0x0007E0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___If_9_2_True__IO' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___If_9_1_1_Result) == 0x0007F8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___If_9_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorDot_1_1_1_Result) == 0x000814, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorDot_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorSub_2_1_Result) == 0x000818, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorSub_2_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_1_1_Vector) == 0x000830, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_1_1_Vector' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_1_1_Minimum) == 0x000840, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_1_1_Minimum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_1_1_Maximum) == 0x000850, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_1_1_Maximum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_1_1_CachedControlIndex) == 0x000860, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_2_1_1_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorSub_2_1_A__IO) == 0x000870, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorSub_2_1_A__IO' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorAdd_1_1_Result) == 0x000888, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorAdd_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorScale_3_1_Result) == 0x0008A0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorScale_3_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorScale_3_1_Factor) == 0x0008B8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorScale_3_1_Factor' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatNegate_2_Result) == 0x0008BC, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatNegate_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatNegate_2_Value) == 0x0008C0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatNegate_2_Value' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorAdd_1_1_B__IO) == 0x0008C8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorAdd_1_1_B__IO' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorAdd_2_1_Result) == 0x0008E0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorAdd_2_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorScale_2_Result) == 0x0008F8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorScale_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorDot_2_Result) == 0x000910, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorDot_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorSub_3_1_Result) == 0x000918, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorSub_3_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_3_Vector) == 0x000930, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_3_Vector' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_3_Minimum) == 0x000940, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_3_Minimum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_3_Maximum) == 0x000950, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_3_Maximum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_3_CachedControlIndex) == 0x000960, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_1_1_1_1_1_3_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorSub_3_1_A__IO) == 0x000970, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorSub_3_1_A__IO' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatNegate_2_1_Result) == 0x000988, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatNegate_2_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatNegate_2_1_Value) == 0x00098C, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatNegate_2_1_Value' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorSub_3_1_B__IO) == 0x000990, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorSub_3_1_B__IO' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorDot_2_B__IO) == 0x0009A8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorDot_2_B__IO' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorAdd_2_1_B__IO) == 0x0009C0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorAdd_2_1_B__IO' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_8_1_Result) == 0x0009D8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_8_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorLength_1_Result) == 0x0009DC, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorLength_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_8_1_Maximum) == 0x0009E0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_8_1_Maximum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorAdd_4_1_A__IO) == 0x0009E8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorAdd_4_1_A__IO' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_2_1_Vector) == 0x000A00, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_2_1_Vector' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_2_1_Minimum) == 0x000A10, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_2_1_Minimum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_2_1_Maximum) == 0x000A20, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_2_1_Maximum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_2_1_CachedControlIndex) == 0x000A30, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_2_1_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathVectorAdd_4_1_B__IO) == 0x000A40, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathVectorAdd_4_1_B__IO' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatNegate_1_Value) == 0x000A58, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatNegate_1_Value' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___SetCurveValue_15_1_1_2_CachedCurveIndex) == 0x000A60, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___SetCurveValue_15_1_1_2_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___SetCurveValue_15_1_1_1_1_2_1_Value) == 0x000A70, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___SetCurveValue_15_1_1_1_1_2_1_Value' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___SetCurveValue_15_1_1_1_1_2_1_CachedCurveIndex) == 0x000A78, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___SetCurveValue_15_1_1_1_1_2_1_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___If_6_Result) == 0x000A88, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___If_6_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___GetCurveValue_3_Value) == 0x000A90, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___GetCurveValue_3_Value' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___GetCurveValue_3_CachedCurveIndex) == 0x000A98, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___GetCurveValue_3_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___SetCurveValue_3_CachedCurveIndex) == 0x000AA8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___SetCurveValue_3_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___If_6_1_Result) == 0x000AB8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___If_6_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___GetCurveValue_3_1_Value) == 0x000AC0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___GetCurveValue_3_1_Value' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___GetCurveValue_3_1_CachedCurveIndex) == 0x000AC8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___GetCurveValue_3_1_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___SetCurveValue_4_CachedCurveIndex) == 0x000AD8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___SetCurveValue_4_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___If_6_2_Result) == 0x000AE8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___If_6_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___GetCurveValue_3_2_Value) == 0x000AF0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___GetCurveValue_3_2_Value' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___GetCurveValue_3_2_CachedCurveIndex) == 0x000AF8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___GetCurveValue_3_2_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___SetCurveValue_4_1_CachedCurveIndex) == 0x000B08, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___SetCurveValue_4_1_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___If_6_3_Result) == 0x000B18, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___If_6_3_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___GetCurveValue_3_3_Value) == 0x000B20, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___GetCurveValue_3_3_Value' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___GetCurveValue_3_3_CachedCurveIndex) == 0x000B28, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___GetCurveValue_3_3_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___SetCurveValue_4_2_CachedCurveIndex) == 0x000B38, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___SetCurveValue_4_2_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlFloat_15_1_FloatValue) == 0x000B48, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlFloat_15_1_FloatValue' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlFloat_15_1_Minimum) == 0x000B4C, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlFloat_15_1_Minimum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlFloat_15_1_Maximum) == 0x000B50, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlFloat_15_1_Maximum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlFloat_15_1_CachedControlIndex) == 0x000B58, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlFloat_15_1_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___SetCurveValue_15_1_1_1_1_1_1_CachedCurveIndex) == 0x000B68, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___SetCurveValue_15_1_1_1_1_1_1_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_Vector) == 0x000B78, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_Vector' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_Minimum) == 0x000B88, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_Minimum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_Maximum) == 0x000B98, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_Maximum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetControlVector2D_CachedControlIndex) == 0x000BA8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetControlVector2D_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___SetCurveValue_5_Value) == 0x000BB8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___SetCurveValue_5_Value' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___SetCurveValue_5_CachedCurveIndex) == 0x000BC0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___SetCurveValue_5_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___SetCurveValue_6_Value) == 0x000BD0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___SetCurveValue_6_Value' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___SetCurveValue_6_CachedCurveIndex) == 0x000BD8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___SetCurveValue_6_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___SetCurveValue_15_2_1_2_CachedCurveIndex) == 0x000BE8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___SetCurveValue_15_2_1_2_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___SetCurveValue_15_1_1_1_2_1_2_CachedCurveIndex) == 0x000BF8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___SetCurveValue_15_1_1_1_2_1_2_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___SetCurveValue_15_2_1_1_1_CachedCurveIndex) == 0x000C08, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___SetCurveValue_15_2_1_1_1_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___SetCurveValue_15_1_1_1_2_1_1_1_CachedCurveIndex) == 0x000C18, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___SetCurveValue_15_1_1_1_2_1_1_1_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___SetCurveValue_5_1_CachedCurveIndex) == 0x000C28, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___SetCurveValue_5_1_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___SetCurveValue_6_1_CachedCurveIndex) == 0x000C38, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___SetCurveValue_6_1_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___GetControlFloat_3_FloatValue) == 0x000C48, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___GetControlFloat_3_FloatValue' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___GetControlFloat_3_Minimum) == 0x000C4C, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___GetControlFloat_3_Minimum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___GetControlFloat_3_Maximum) == 0x000C50, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___GetControlFloat_3_Maximum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___GetControlFloat_3_CachedControlIndex) == 0x000C58, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___GetControlFloat_3_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_4_Result) == 0x000C6C, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_4_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_3_Result) == 0x000C70, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_3_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___GetControlFloat_2_FloatValue) == 0x000C74, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___GetControlFloat_2_FloatValue' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___CollectionLoop_Item) == 0x000C78, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___CollectionLoop_Item' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___GetControlFloat_2_Control) == 0x000C84, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___GetControlFloat_2_Control' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___GetControlFloat_2_Minimum) == 0x000C8C, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___GetControlFloat_2_Minimum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___GetControlFloat_2_Maximum) == 0x000C90, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___GetControlFloat_2_Maximum' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___GetControlFloat_2_CachedControlIndex) == 0x000C98, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___GetControlFloat_2_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_4_B) == 0x000CA8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_4_B' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___CollectionChildren_Collection) == 0x000CB0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___CollectionChildren_Collection' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___CollectionLoop_Index) == 0x000CC0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___CollectionLoop_Index' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___CollectionLoop_Count) == 0x000CC4, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___CollectionLoop_Count' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___CollectionLoop_Ratio) == 0x000CC8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___CollectionLoop_Ratio' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatLessEqual_A) == 0x000CD0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatLessEqual_A' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_2_Result) == 0x000CD4, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatMul_3_Result) == 0x000CD8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatMul_3_Result' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatMul_3_A) == 0x000CDC, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatMul_3_A' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___MathFloatMul_3_B) == 0x000CE0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___MathFloatMul_3_B' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___SetCurveValue_CachedCurveIndex) == 0x000CE8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___SetCurveValue_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___KoratRigUnit_SetFicialExpression_FacialInformations) == 0x000CF8, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___KoratRigUnit_SetFicialExpression_FacialInformations' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___KoratRigUnit_SetFicialExpression_ExFacialInformations) == 0x000D08, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___KoratRigUnit_SetFicialExpression_ExFacialInformations' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___KoratRigUnit_SetFicialExpression_OpenVertical) == 0x000D18, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___KoratRigUnit_SetFicialExpression_OpenVertical' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___KoratRigUnit_SetFicialExpression_CloseVertical) == 0x000D1C, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___KoratRigUnit_SetFicialExpression_CloseVertical' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___KoratRigUnit_SetFicialExpression_DefaultVerticalAlpha) == 0x000D20, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___KoratRigUnit_SetFicialExpression_DefaultVerticalAlpha' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___KoratRigUnit_SetFicialExpression_ControlValue) == 0x000D28, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___KoratRigUnit_SetFicialExpression_ControlValue' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___KoratRigUnit_SetFicialExpression_EyeCurveValue) == 0x000D38, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___KoratRigUnit_SetFicialExpression_EyeCurveValue' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___KoratRigUnit_SetFicialExpression_OpenCurveValue) == 0x000D48, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___KoratRigUnit_SetFicialExpression_OpenCurveValue' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___KoratRigUnit_SetFicialExpression_CloseCurveValue) == 0x000D58, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___KoratRigUnit_SetFicialExpression_CloseCurveValue' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___KoratRigUnit_SetFicialExpression_CachedControlIndex) == 0x000D68, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___KoratRigUnit_SetFicialExpression_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___ProjectTransformToNewParent_1_Transform) == 0x000D80, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___ProjectTransformToNewParent_1_Transform' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___ProjectTransformToNewParent_1_CachedChild) == 0x000DE0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___ProjectTransformToNewParent_1_CachedChild' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___ProjectTransformToNewParent_1_CachedOldParent) == 0x000DF0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___ProjectTransformToNewParent_1_CachedOldParent' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___ProjectTransformToNewParent_1_CachedNewParent) == 0x000E00, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___ProjectTransformToNewParent_1_CachedNewParent' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___SetTransform_1_CachedIndex) == 0x000E10, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___SetTransform_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_Transform) == 0x000E20, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_Transform' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_CachedIndex) == 0x000E80, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___SetControlOffset_3_Offset__IO) == 0x000E90, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___SetControlOffset_3_Offset__IO' has a wrong offset!");
static_assert(offsetof(CRBP_FacialRig::URigVMMemory_Work, RigVMModel___SetControlOffset_3_CachedControlIndex) == 0x000EF0, "Member 'CRBP_FacialRig::URigVMMemory_Work::RigVMModel___SetControlOffset_3_CachedControlIndex' has a wrong offset!");

}

