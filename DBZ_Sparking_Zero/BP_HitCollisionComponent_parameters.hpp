#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HitCollisionComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SS_structs.hpp"


namespace SDK::Params
{

// Function BP_HitCollisionComponent.BP_HitCollisionComponent_C.AddHitAttackCollisionData
// 0x0B60 (0x0B60 - 0x0000)
struct BP_HitCollisionComponent_C_AddHitAttackCollisionData final
{
public:
	const class ABP_AttackCollision_C*            InHitAttackCollision;                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratGaveDamageParameter              InGaveDamageParam;                                 // 0x0010(0x0B50)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_HitCollisionComponent_C_AddHitAttackCollisionData) == 0x000010, "Wrong alignment on BP_HitCollisionComponent_C_AddHitAttackCollisionData");
static_assert(sizeof(BP_HitCollisionComponent_C_AddHitAttackCollisionData) == 0x000B60, "Wrong size on BP_HitCollisionComponent_C_AddHitAttackCollisionData");
static_assert(offsetof(BP_HitCollisionComponent_C_AddHitAttackCollisionData, InHitAttackCollision) == 0x000000, "Member 'BP_HitCollisionComponent_C_AddHitAttackCollisionData::InHitAttackCollision' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_AddHitAttackCollisionData, InGaveDamageParam) == 0x000010, "Member 'BP_HitCollisionComponent_C_AddHitAttackCollisionData::InGaveDamageParam' has a wrong offset!");

// Function BP_HitCollisionComponent.BP_HitCollisionComponent_C.AddHitData
// 0x0B70 (0x0B70 - 0x0000)
struct BP_HitCollisionComponent_C_AddHitData final
{
public:
	class ABP_AttackCollision_C*                  InHitAttackCollision;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratGaveDamageParameter              InGaveDamageParam;                                 // 0x0010(0x0B50)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0B60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0B64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HitCollisionComponent_C_AddHitData) == 0x000010, "Wrong alignment on BP_HitCollisionComponent_C_AddHitData");
static_assert(sizeof(BP_HitCollisionComponent_C_AddHitData) == 0x000B70, "Wrong size on BP_HitCollisionComponent_C_AddHitData");
static_assert(offsetof(BP_HitCollisionComponent_C_AddHitData, InHitAttackCollision) == 0x000000, "Member 'BP_HitCollisionComponent_C_AddHitData::InHitAttackCollision' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_AddHitData, InGaveDamageParam) == 0x000010, "Member 'BP_HitCollisionComponent_C_AddHitData::InGaveDamageParam' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_AddHitData, CallFunc_Array_Add_ReturnValue) == 0x000B60, "Member 'BP_HitCollisionComponent_C_AddHitData::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_AddHitData, CallFunc_Array_Add_ReturnValue_1) == 0x000B64, "Member 'BP_HitCollisionComponent_C_AddHitData::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_HitCollisionComponent.BP_HitCollisionComponent_C.ExecuteUbergraph_BP_HitCollisionComponent
// 0x16C0 (0x16C0 - 0x0000)
struct BP_HitCollisionComponent_C_ExecuteUbergraph_BP_HitCollisionComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class ASSCharacter*                     K2Node_Event_InOpponentOffsetCharacter;            // 0x0008(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class ABP_AttackCollision_C*            K2Node_Event_InHitAttackCollision;                 // 0x0010(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKoratActionDataList                   K2Node_Event_InAction;                             // 0x0018(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	EKoratOffsetType                              K2Node_Event_InOffsetType;                         // 0x0020(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0xF];                                       // 0x0021(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_Event_InOffsetLocation;                     // 0x0030(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratReceivedDamageParameter          K2Node_Event_InReceivedDamageParameter;            // 0x0090(0x0AC0)(ConstParm)
	const class ABP_AttackCollision_C*            K2Node_Event_InHitAttackCollision_1;               // 0x0B50(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B58[0x8];                                      // 0x0B58(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratGaveDamageParameter              K2Node_Event_InGaveDamageParam;                    // 0x0B60(0x0B50)(ConstParm)
	class ASSBattleLevelScriptActor*              CallFunc_GetSSBattleLevelScriptActor_ReturnValue;  // 0x16B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x16B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HitCollisionComponent_C_ExecuteUbergraph_BP_HitCollisionComponent) == 0x000010, "Wrong alignment on BP_HitCollisionComponent_C_ExecuteUbergraph_BP_HitCollisionComponent");
static_assert(sizeof(BP_HitCollisionComponent_C_ExecuteUbergraph_BP_HitCollisionComponent) == 0x0016C0, "Wrong size on BP_HitCollisionComponent_C_ExecuteUbergraph_BP_HitCollisionComponent");
static_assert(offsetof(BP_HitCollisionComponent_C_ExecuteUbergraph_BP_HitCollisionComponent, EntryPoint) == 0x000000, "Member 'BP_HitCollisionComponent_C_ExecuteUbergraph_BP_HitCollisionComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_ExecuteUbergraph_BP_HitCollisionComponent, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_HitCollisionComponent_C_ExecuteUbergraph_BP_HitCollisionComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_ExecuteUbergraph_BP_HitCollisionComponent, K2Node_Event_InOpponentOffsetCharacter) == 0x000008, "Member 'BP_HitCollisionComponent_C_ExecuteUbergraph_BP_HitCollisionComponent::K2Node_Event_InOpponentOffsetCharacter' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_ExecuteUbergraph_BP_HitCollisionComponent, K2Node_Event_InHitAttackCollision) == 0x000010, "Member 'BP_HitCollisionComponent_C_ExecuteUbergraph_BP_HitCollisionComponent::K2Node_Event_InHitAttackCollision' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_ExecuteUbergraph_BP_HitCollisionComponent, K2Node_Event_InAction) == 0x000018, "Member 'BP_HitCollisionComponent_C_ExecuteUbergraph_BP_HitCollisionComponent::K2Node_Event_InAction' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_ExecuteUbergraph_BP_HitCollisionComponent, K2Node_Event_InOffsetType) == 0x000020, "Member 'BP_HitCollisionComponent_C_ExecuteUbergraph_BP_HitCollisionComponent::K2Node_Event_InOffsetType' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_ExecuteUbergraph_BP_HitCollisionComponent, K2Node_Event_InOffsetLocation) == 0x000030, "Member 'BP_HitCollisionComponent_C_ExecuteUbergraph_BP_HitCollisionComponent::K2Node_Event_InOffsetLocation' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_ExecuteUbergraph_BP_HitCollisionComponent, K2Node_Event_InReceivedDamageParameter) == 0x000090, "Member 'BP_HitCollisionComponent_C_ExecuteUbergraph_BP_HitCollisionComponent::K2Node_Event_InReceivedDamageParameter' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_ExecuteUbergraph_BP_HitCollisionComponent, K2Node_Event_InHitAttackCollision_1) == 0x000B50, "Member 'BP_HitCollisionComponent_C_ExecuteUbergraph_BP_HitCollisionComponent::K2Node_Event_InHitAttackCollision_1' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_ExecuteUbergraph_BP_HitCollisionComponent, K2Node_Event_InGaveDamageParam) == 0x000B60, "Member 'BP_HitCollisionComponent_C_ExecuteUbergraph_BP_HitCollisionComponent::K2Node_Event_InGaveDamageParam' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_ExecuteUbergraph_BP_HitCollisionComponent, CallFunc_GetSSBattleLevelScriptActor_ReturnValue) == 0x0016B0, "Member 'BP_HitCollisionComponent_C_ExecuteUbergraph_BP_HitCollisionComponent::CallFunc_GetSSBattleLevelScriptActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_ExecuteUbergraph_BP_HitCollisionComponent, CallFunc_IsValid_ReturnValue) == 0x0016B8, "Member 'BP_HitCollisionComponent_C_ExecuteUbergraph_BP_HitCollisionComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_HitCollisionComponent.BP_HitCollisionComponent_C.GetDrawHitPositionTime
// 0x0038 (0x0038 - 0x0000)
struct BP_HitCollisionComponent_C_GetDrawHitPositionTime final
{
public:
	class ASSCharacter*                           InCharacter;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDrawHitPosition_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDrawHitPositionTime_ReturnValue;       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           K2Node_DynamicCast_AsSSCharacter;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDrawHitPosition_ReturnValue_1;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDrawHitPositionTime_ReturnValue_1;     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_ReturnValue_ImplicitCast_1;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HitCollisionComponent_C_GetDrawHitPositionTime) == 0x000008, "Wrong alignment on BP_HitCollisionComponent_C_GetDrawHitPositionTime");
static_assert(sizeof(BP_HitCollisionComponent_C_GetDrawHitPositionTime) == 0x000038, "Wrong size on BP_HitCollisionComponent_C_GetDrawHitPositionTime");
static_assert(offsetof(BP_HitCollisionComponent_C_GetDrawHitPositionTime, InCharacter) == 0x000000, "Member 'BP_HitCollisionComponent_C_GetDrawHitPositionTime::InCharacter' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_GetDrawHitPositionTime, ReturnValue) == 0x000008, "Member 'BP_HitCollisionComponent_C_GetDrawHitPositionTime::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_GetDrawHitPositionTime, CallFunc_IsDrawHitPosition_ReturnValue) == 0x000010, "Member 'BP_HitCollisionComponent_C_GetDrawHitPositionTime::CallFunc_IsDrawHitPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_GetDrawHitPositionTime, CallFunc_GetDrawHitPositionTime_ReturnValue) == 0x000014, "Member 'BP_HitCollisionComponent_C_GetDrawHitPositionTime::CallFunc_GetDrawHitPositionTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_GetDrawHitPositionTime, K2Node_DynamicCast_AsSSCharacter) == 0x000018, "Member 'BP_HitCollisionComponent_C_GetDrawHitPositionTime::K2Node_DynamicCast_AsSSCharacter' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_GetDrawHitPositionTime, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_HitCollisionComponent_C_GetDrawHitPositionTime::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_GetDrawHitPositionTime, CallFunc_IsDrawHitPosition_ReturnValue_1) == 0x000021, "Member 'BP_HitCollisionComponent_C_GetDrawHitPositionTime::CallFunc_IsDrawHitPosition_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_GetDrawHitPositionTime, CallFunc_GetDrawHitPositionTime_ReturnValue_1) == 0x000024, "Member 'BP_HitCollisionComponent_C_GetDrawHitPositionTime::CallFunc_GetDrawHitPositionTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_GetDrawHitPositionTime, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000028, "Member 'BP_HitCollisionComponent_C_GetDrawHitPositionTime::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_GetDrawHitPositionTime, K2Node_FunctionResult_ReturnValue_ImplicitCast_1) == 0x000030, "Member 'BP_HitCollisionComponent_C_GetDrawHitPositionTime::K2Node_FunctionResult_ReturnValue_ImplicitCast_1' has a wrong offset!");

// Function BP_HitCollisionComponent.BP_HitCollisionComponent_C.OccurOffset
// 0x0B40 (0x0B40 - 0x0000)
struct BP_HitCollisionComponent_C_OccurOffset final
{
public:
	const class ASSCharacter*                     InOpponentOffsetCharacter;                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	const class ABP_AttackCollision_C*            InHitAttackCollision;                              // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	struct FKoratActionDataList                   InAction;                                          // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	EKoratOffsetType                              InOffsetType;                                      // 0x0018(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             InOffsetLocation;                                  // 0x0020(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratReceivedDamageParameter          InReceivedDamageParameter;                         // 0x0080(0x0AC0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_HitCollisionComponent_C_OccurOffset) == 0x000010, "Wrong alignment on BP_HitCollisionComponent_C_OccurOffset");
static_assert(sizeof(BP_HitCollisionComponent_C_OccurOffset) == 0x000B40, "Wrong size on BP_HitCollisionComponent_C_OccurOffset");
static_assert(offsetof(BP_HitCollisionComponent_C_OccurOffset, InOpponentOffsetCharacter) == 0x000000, "Member 'BP_HitCollisionComponent_C_OccurOffset::InOpponentOffsetCharacter' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_OccurOffset, InHitAttackCollision) == 0x000008, "Member 'BP_HitCollisionComponent_C_OccurOffset::InHitAttackCollision' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_OccurOffset, InAction) == 0x000010, "Member 'BP_HitCollisionComponent_C_OccurOffset::InAction' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_OccurOffset, InOffsetType) == 0x000018, "Member 'BP_HitCollisionComponent_C_OccurOffset::InOffsetType' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_OccurOffset, InOffsetLocation) == 0x000020, "Member 'BP_HitCollisionComponent_C_OccurOffset::InOffsetLocation' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_OccurOffset, InReceivedDamageParameter) == 0x000080, "Member 'BP_HitCollisionComponent_C_OccurOffset::InReceivedDamageParameter' has a wrong offset!");

// Function BP_HitCollisionComponent.BP_HitCollisionComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_HitCollisionComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HitCollisionComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_HitCollisionComponent_C_ReceiveTick");
static_assert(sizeof(BP_HitCollisionComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_HitCollisionComponent_C_ReceiveTick");
static_assert(offsetof(BP_HitCollisionComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_HitCollisionComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_HitCollisionComponent.BP_HitCollisionComponent_C.SetOffset
// 0x0B40 (0x0B40 - 0x0000)
struct BP_HitCollisionComponent_C_SetOffset final
{
public:
	class ASSCharacter*                           InOpponentOffsetCharacter;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class ABP_AttackCollision_C*                  InHitAttackCollision;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	struct FKoratActionDataList                   InAction;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	EKoratOffsetType                              InOffsetType;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             InOffsetTransform;                                 // 0x0020(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratReceivedDamageParameter          InReceivedDamageParameter;                         // 0x0080(0x0AC0)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_HitCollisionComponent_C_SetOffset) == 0x000010, "Wrong alignment on BP_HitCollisionComponent_C_SetOffset");
static_assert(sizeof(BP_HitCollisionComponent_C_SetOffset) == 0x000B40, "Wrong size on BP_HitCollisionComponent_C_SetOffset");
static_assert(offsetof(BP_HitCollisionComponent_C_SetOffset, InOpponentOffsetCharacter) == 0x000000, "Member 'BP_HitCollisionComponent_C_SetOffset::InOpponentOffsetCharacter' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_SetOffset, InHitAttackCollision) == 0x000008, "Member 'BP_HitCollisionComponent_C_SetOffset::InHitAttackCollision' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_SetOffset, InAction) == 0x000010, "Member 'BP_HitCollisionComponent_C_SetOffset::InAction' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_SetOffset, InOffsetType) == 0x000018, "Member 'BP_HitCollisionComponent_C_SetOffset::InOffsetType' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_SetOffset, InOffsetTransform) == 0x000020, "Member 'BP_HitCollisionComponent_C_SetOffset::InOffsetTransform' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_SetOffset, InReceivedDamageParameter) == 0x000080, "Member 'BP_HitCollisionComponent_C_SetOffset::InReceivedDamageParameter' has a wrong offset!");

// Function BP_HitCollisionComponent.BP_HitCollisionComponent_C.UpdateHitData
// 0x0BE0 (0x0BE0 - 0x0000)
struct BP_HitCollisionComponent_C_UpdateHitData final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           K2Node_DynamicCast_AsSSCharacter;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetTargetPawn_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AttackCollision_C*                  CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AttackCollision_C*                  CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKoratGaveDamageParameter              CallFunc_Array_Get_Item_2;                         // 0x0060(0x0B50)()
	bool                                          CallFunc_GaveDamageAtStrcut_ReturnValue;           // 0x0BB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BB1[0x3];                                      // 0x0BB1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0BB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           K2Node_DynamicCast_AsSSCharacter_1;                // 0x0BB8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0BC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0BC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC2[0x6];                                      // 0x0BC2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetDrawHitPositionTime_ReturnValue;       // 0x0BC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0BD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD1[0x3];                                      // 0x0BD1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0BD4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0BD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD9[0x3];                                      // 0x0BD9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0BDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HitCollisionComponent_C_UpdateHitData) == 0x000010, "Wrong alignment on BP_HitCollisionComponent_C_UpdateHitData");
static_assert(sizeof(BP_HitCollisionComponent_C_UpdateHitData) == 0x000BE0, "Wrong size on BP_HitCollisionComponent_C_UpdateHitData");
static_assert(offsetof(BP_HitCollisionComponent_C_UpdateHitData, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_HitCollisionComponent_C_UpdateHitData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_UpdateHitData, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_HitCollisionComponent_C_UpdateHitData::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_UpdateHitData, K2Node_DynamicCast_AsSSCharacter) == 0x000010, "Member 'BP_HitCollisionComponent_C_UpdateHitData::K2Node_DynamicCast_AsSSCharacter' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_UpdateHitData, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_HitCollisionComponent_C_UpdateHitData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_UpdateHitData, CallFunc_GetTargetPawn_ReturnValue) == 0x000020, "Member 'BP_HitCollisionComponent_C_UpdateHitData::CallFunc_GetTargetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_UpdateHitData, K2Node_DynamicCast_AsBP_Character) == 0x000028, "Member 'BP_HitCollisionComponent_C_UpdateHitData::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_UpdateHitData, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_HitCollisionComponent_C_UpdateHitData::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_UpdateHitData, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_HitCollisionComponent_C_UpdateHitData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_UpdateHitData, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_HitCollisionComponent_C_UpdateHitData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_UpdateHitData, CallFunc_GetOwner_ReturnValue_1) == 0x000040, "Member 'BP_HitCollisionComponent_C_UpdateHitData::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_UpdateHitData, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BP_HitCollisionComponent_C_UpdateHitData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_UpdateHitData, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_HitCollisionComponent_C_UpdateHitData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_UpdateHitData, Temp_int_Array_Index_Variable_1) == 0x000050, "Member 'BP_HitCollisionComponent_C_UpdateHitData::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_UpdateHitData, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'BP_HitCollisionComponent_C_UpdateHitData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_UpdateHitData, CallFunc_Array_Get_Item_2) == 0x000060, "Member 'BP_HitCollisionComponent_C_UpdateHitData::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_UpdateHitData, CallFunc_GaveDamageAtStrcut_ReturnValue) == 0x000BB0, "Member 'BP_HitCollisionComponent_C_UpdateHitData::CallFunc_GaveDamageAtStrcut_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_UpdateHitData, CallFunc_Array_Length_ReturnValue_1) == 0x000BB4, "Member 'BP_HitCollisionComponent_C_UpdateHitData::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_UpdateHitData, K2Node_DynamicCast_AsSSCharacter_1) == 0x000BB8, "Member 'BP_HitCollisionComponent_C_UpdateHitData::K2Node_DynamicCast_AsSSCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_UpdateHitData, K2Node_DynamicCast_bSuccess_2) == 0x000BC0, "Member 'BP_HitCollisionComponent_C_UpdateHitData::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_UpdateHitData, CallFunc_Less_IntInt_ReturnValue) == 0x000BC1, "Member 'BP_HitCollisionComponent_C_UpdateHitData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_UpdateHitData, CallFunc_GetDrawHitPositionTime_ReturnValue) == 0x000BC8, "Member 'BP_HitCollisionComponent_C_UpdateHitData::CallFunc_GetDrawHitPositionTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_UpdateHitData, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000BD0, "Member 'BP_HitCollisionComponent_C_UpdateHitData::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_UpdateHitData, Temp_int_Loop_Counter_Variable_1) == 0x000BD4, "Member 'BP_HitCollisionComponent_C_UpdateHitData::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_UpdateHitData, CallFunc_Less_IntInt_ReturnValue_1) == 0x000BD8, "Member 'BP_HitCollisionComponent_C_UpdateHitData::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HitCollisionComponent_C_UpdateHitData, CallFunc_Add_IntInt_ReturnValue_1) == 0x000BDC, "Member 'BP_HitCollisionComponent_C_UpdateHitData::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

}

