#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterLocomotionSubHighSpeedMove

#include "Basic.hpp"

#include "ECharacterLocomotionEventType_structs.hpp"
#include "SS_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_CharacterLocomotionSubHighSpeedMove.BP_CharacterLocomotionSubHighSpeedMove_C.Check
// 0x0020 (0x0020 - 0x0000)
struct BP_CharacterLocomotionSubHighSpeedMove_C_Check final
{
public:
	class UBP_CharacterLocomotionComponent_C*     InLocomotionComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CanStart;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckSPCosumable_IsOK;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEnable_IsEnable;                     // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckInput_IsOK;                          // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSparkingModeState_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubHighSpeedMove_C_Check) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubHighSpeedMove_C_Check");
static_assert(sizeof(BP_CharacterLocomotionSubHighSpeedMove_C_Check) == 0x000020, "Wrong size on BP_CharacterLocomotionSubHighSpeedMove_C_Check");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_Check, InLocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_Check::InLocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_Check, CanStart) == 0x000008, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_Check::CanStart' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_Check, CallFunc_CheckSPCosumable_IsOK) == 0x000009, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_Check::CallFunc_CheckSPCosumable_IsOK' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_Check, CallFunc_CheckEnable_IsEnable) == 0x00000A, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_Check::CallFunc_CheckEnable_IsEnable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_Check, CallFunc_CheckInput_IsOK) == 0x00000B, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_Check::CallFunc_CheckInput_IsOK' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_Check, CallFunc_GetSSCharacter_SSCharacter) == 0x000010, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_Check::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_Check, CallFunc_IsSparkingModeState_ReturnValue) == 0x000018, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_Check::CallFunc_IsSparkingModeState_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubHighSpeedMove.BP_CharacterLocomotionSubHighSpeedMove_C.CheckEnable
// 0x0088 (0x0088 - 0x0000)
struct BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable final
{
public:
	bool                                          IsEnable;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHighSpeedMoveParameter________;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetHighSpeedMoveParameter_________________; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter_________________IN__LP____; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter_________________LP__OT____; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CallFunc_GetHighSpeedMoveParameter________IN;      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CallFunc_GetHighSpeedMoveParameter________LP;      // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CallFunc_GetHighSpeedMoveParameter________OT;      // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter_________;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter______;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter____;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetHighSpeedMoveParameter__________________1; // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameter________________; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameter___________________; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter___________________OT____________; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetHighSpeedMoveParameter__________________2; // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameter_________________1; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameter____________________1; // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable");
static_assert(sizeof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable) == 0x000088, "Wrong size on BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable, IsEnable) == 0x000000, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable::IsEnable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable, CallFunc_GetHighSpeedMoveParameter________) == 0x000001, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable::CallFunc_GetHighSpeedMoveParameter________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable, CallFunc_GetHighSpeedMoveParameter_________________) == 0x000008, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable::CallFunc_GetHighSpeedMoveParameter_________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable, CallFunc_GetHighSpeedMoveParameter_________________IN__LP____) == 0x000010, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable::CallFunc_GetHighSpeedMoveParameter_________________IN__LP____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable, CallFunc_GetHighSpeedMoveParameter_________________LP__OT____) == 0x000018, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable::CallFunc_GetHighSpeedMoveParameter_________________LP__OT____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable, CallFunc_GetHighSpeedMoveParameter________IN) == 0x000020, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable::CallFunc_GetHighSpeedMoveParameter________IN' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable, CallFunc_GetHighSpeedMoveParameter________LP) == 0x000028, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable::CallFunc_GetHighSpeedMoveParameter________LP' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable, CallFunc_GetHighSpeedMoveParameter________OT) == 0x000030, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable::CallFunc_GetHighSpeedMoveParameter________OT' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable, CallFunc_GetHighSpeedMoveParameter_________) == 0x000038, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable::CallFunc_GetHighSpeedMoveParameter_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable, CallFunc_GetHighSpeedMoveParameter______) == 0x000040, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable::CallFunc_GetHighSpeedMoveParameter______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable, CallFunc_GetHighSpeedMoveParameter____) == 0x000048, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable::CallFunc_GetHighSpeedMoveParameter____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable, CallFunc_GetHighSpeedMoveParameter__________________1) == 0x000050, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable::CallFunc_GetHighSpeedMoveParameter__________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable, CallFunc_GetHighSpeedMoveParameter________________) == 0x000058, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable::CallFunc_GetHighSpeedMoveParameter________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable, CallFunc_GetHighSpeedMoveParameter___________________) == 0x000060, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable::CallFunc_GetHighSpeedMoveParameter___________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable, CallFunc_GetHighSpeedMoveParameter___________________OT____________) == 0x000068, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable::CallFunc_GetHighSpeedMoveParameter___________________OT____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable, CallFunc_GetHighSpeedMoveParameter__________________2) == 0x000070, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable::CallFunc_GetHighSpeedMoveParameter__________________2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable, CallFunc_GetHighSpeedMoveParameter_________________1) == 0x000078, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable::CallFunc_GetHighSpeedMoveParameter_________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable, CallFunc_GetHighSpeedMoveParameter____________________1) == 0x000080, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckEnable::CallFunc_GetHighSpeedMoveParameter____________________1' has a wrong offset!");

// Function BP_CharacterLocomotionSubHighSpeedMove.BP_CharacterLocomotionSubHighSpeedMove_C.CheckInput
// 0x0058 (0x0058 - 0x0000)
struct BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput final
{
public:
	bool                                          IsOK;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISSBattleController>   K2Node_DynamicCast_AsSSBattle_Controller;          // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInputKeyJustPressedBattleKey_ReturnValue; // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInputKeyJustPressedBattleKey_ReturnValue_1; // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInputKeyJustPressedBattleKey_ReturnValue_2; // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInputKeyJustPressedBattleKey_ReturnValue_3; // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInputKeyJustPressedBattleKey_ReturnValue_4; // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_2; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Vector2DVector2D_ReturnValue;    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput");
static_assert(sizeof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput) == 0x000058, "Wrong size on BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput, IsOK) == 0x000000, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput::IsOK' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput, CallFunc_GetSSCharacter_SSCharacter) == 0x000008, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput, CallFunc_GetController_ReturnValue) == 0x000010, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput, K2Node_DynamicCast_AsSSBattle_Controller) == 0x000018, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput::K2Node_DynamicCast_AsSSBattle_Controller' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000030, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput, CallFunc_WasInputKeyJustPressedBattleKey_ReturnValue) == 0x000038, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput::CallFunc_WasInputKeyJustPressedBattleKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000039, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput, CallFunc_WasInputKeyJustPressedBattleKey_ReturnValue_1) == 0x00003A, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput::CallFunc_WasInputKeyJustPressedBattleKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput, CallFunc_WasInputKeyJustPressedBattleKey_ReturnValue_2) == 0x00003B, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput::CallFunc_WasInputKeyJustPressedBattleKey_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput, CallFunc_WasInputKeyJustPressedBattleKey_ReturnValue_3) == 0x00003C, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput::CallFunc_WasInputKeyJustPressedBattleKey_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput, CallFunc_WasInputKeyJustPressedBattleKey_ReturnValue_4) == 0x00003D, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput::CallFunc_WasInputKeyJustPressedBattleKey_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000040, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput, CallFunc_GetLocomotionComponent_LocomotionComponent_2) == 0x000048, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput::CallFunc_GetLocomotionComponent_LocomotionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput, CallFunc_NotEqual_Vector2DVector2D_ReturnValue) == 0x000050, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput::CallFunc_NotEqual_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000051, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput, CallFunc_BooleanOR_ReturnValue) == 0x000052, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckInput::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubHighSpeedMove.BP_CharacterLocomotionSubHighSpeedMove_C.CheckSPCosumable
// 0x0098 (0x0098 - 0x0000)
struct BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable final
{
public:
	bool                                          IsOK;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHighSpeedMoveParameter________;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetHighSpeedMoveParameter_________________; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter_________________IN__LP____; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter_________________LP__OT____; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CallFunc_GetHighSpeedMoveParameter________IN;      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CallFunc_GetHighSpeedMoveParameter________LP;      // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CallFunc_GetHighSpeedMoveParameter________OT;      // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter_________;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter______;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter____;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetHighSpeedMoveParameter__________________1; // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameter________________; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameter___________________; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter___________________OT____________; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetHighSpeedMoveParameter__________________2; // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameter_________________1; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameter____________________1; // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckSPCosumable_ReturnValue;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CheckSPCosumable_InSpCost_ImplicitCast;   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable");
static_assert(sizeof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable) == 0x000098, "Wrong size on BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable, IsOK) == 0x000000, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable::IsOK' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable, CallFunc_GetHighSpeedMoveParameter________) == 0x000001, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable::CallFunc_GetHighSpeedMoveParameter________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable, CallFunc_GetHighSpeedMoveParameter_________________) == 0x000008, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable::CallFunc_GetHighSpeedMoveParameter_________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable, CallFunc_GetHighSpeedMoveParameter_________________IN__LP____) == 0x000010, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable::CallFunc_GetHighSpeedMoveParameter_________________IN__LP____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable, CallFunc_GetHighSpeedMoveParameter_________________LP__OT____) == 0x000018, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable::CallFunc_GetHighSpeedMoveParameter_________________LP__OT____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable, CallFunc_GetHighSpeedMoveParameter________IN) == 0x000020, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable::CallFunc_GetHighSpeedMoveParameter________IN' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable, CallFunc_GetHighSpeedMoveParameter________LP) == 0x000028, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable::CallFunc_GetHighSpeedMoveParameter________LP' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable, CallFunc_GetHighSpeedMoveParameter________OT) == 0x000030, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable::CallFunc_GetHighSpeedMoveParameter________OT' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable, CallFunc_GetHighSpeedMoveParameter_________) == 0x000038, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable::CallFunc_GetHighSpeedMoveParameter_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable, CallFunc_GetHighSpeedMoveParameter______) == 0x000040, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable::CallFunc_GetHighSpeedMoveParameter______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable, CallFunc_GetHighSpeedMoveParameter____) == 0x000048, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable::CallFunc_GetHighSpeedMoveParameter____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable, CallFunc_GetHighSpeedMoveParameter__________________1) == 0x000050, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable::CallFunc_GetHighSpeedMoveParameter__________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable, CallFunc_GetHighSpeedMoveParameter________________) == 0x000058, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable::CallFunc_GetHighSpeedMoveParameter________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable, CallFunc_GetHighSpeedMoveParameter___________________) == 0x000060, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable::CallFunc_GetHighSpeedMoveParameter___________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable, CallFunc_GetHighSpeedMoveParameter___________________OT____________) == 0x000068, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable::CallFunc_GetHighSpeedMoveParameter___________________OT____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable, CallFunc_GetHighSpeedMoveParameter__________________2) == 0x000070, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable::CallFunc_GetHighSpeedMoveParameter__________________2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable, CallFunc_GetHighSpeedMoveParameter_________________1) == 0x000078, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable::CallFunc_GetHighSpeedMoveParameter_________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable, CallFunc_GetHighSpeedMoveParameter____________________1) == 0x000080, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable::CallFunc_GetHighSpeedMoveParameter____________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable, CallFunc_GetSSCharacter_SSCharacter) == 0x000088, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable, CallFunc_CheckSPCosumable_ReturnValue) == 0x000090, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable::CallFunc_CheckSPCosumable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable, CallFunc_CheckSPCosumable_InSpCost_ImplicitCast) == 0x000094, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_CheckSPCosumable::CallFunc_CheckSPCosumable_InSpCost_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubHighSpeedMove.BP_CharacterLocomotionSubHighSpeedMove_C.ConsumeSPHighSpeedMoveIN
// 0x0098 (0x0098 - 0x0000)
struct BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN final
{
public:
	bool                                          CallFunc_GetHighSpeedMoveParameter________;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetHighSpeedMoveParameter_________________; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter_________________IN__LP____; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter_________________LP__OT____; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CallFunc_GetHighSpeedMoveParameter________IN;      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CallFunc_GetHighSpeedMoveParameter________LP;      // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CallFunc_GetHighSpeedMoveParameter________OT;      // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter_________;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter______;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter____;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetHighSpeedMoveParameter__________________1; // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameter________________; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameter___________________; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter___________________OT____________; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetHighSpeedMoveParameter__________________2; // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameter_________________1; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameter____________________1; // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ConsumeSP_InSpCost_ImplicitCast;          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN");
static_assert(sizeof(BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN) == 0x000098, "Wrong size on BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN, CallFunc_GetHighSpeedMoveParameter________) == 0x000000, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN::CallFunc_GetHighSpeedMoveParameter________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN, CallFunc_GetHighSpeedMoveParameter_________________) == 0x000008, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN::CallFunc_GetHighSpeedMoveParameter_________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN, CallFunc_GetHighSpeedMoveParameter_________________IN__LP____) == 0x000010, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN::CallFunc_GetHighSpeedMoveParameter_________________IN__LP____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN, CallFunc_GetHighSpeedMoveParameter_________________LP__OT____) == 0x000018, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN::CallFunc_GetHighSpeedMoveParameter_________________LP__OT____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN, CallFunc_GetHighSpeedMoveParameter________IN) == 0x000020, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN::CallFunc_GetHighSpeedMoveParameter________IN' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN, CallFunc_GetHighSpeedMoveParameter________LP) == 0x000028, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN::CallFunc_GetHighSpeedMoveParameter________LP' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN, CallFunc_GetHighSpeedMoveParameter________OT) == 0x000030, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN::CallFunc_GetHighSpeedMoveParameter________OT' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN, CallFunc_GetHighSpeedMoveParameter_________) == 0x000038, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN::CallFunc_GetHighSpeedMoveParameter_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN, CallFunc_GetHighSpeedMoveParameter______) == 0x000040, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN::CallFunc_GetHighSpeedMoveParameter______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN, CallFunc_GetHighSpeedMoveParameter____) == 0x000048, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN::CallFunc_GetHighSpeedMoveParameter____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN, CallFunc_GetHighSpeedMoveParameter__________________1) == 0x000050, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN::CallFunc_GetHighSpeedMoveParameter__________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN, CallFunc_GetHighSpeedMoveParameter________________) == 0x000058, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN::CallFunc_GetHighSpeedMoveParameter________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN, CallFunc_GetHighSpeedMoveParameter___________________) == 0x000060, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN::CallFunc_GetHighSpeedMoveParameter___________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN, CallFunc_GetHighSpeedMoveParameter___________________OT____________) == 0x000068, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN::CallFunc_GetHighSpeedMoveParameter___________________OT____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN, CallFunc_GetHighSpeedMoveParameter__________________2) == 0x000070, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN::CallFunc_GetHighSpeedMoveParameter__________________2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN, CallFunc_GetHighSpeedMoveParameter_________________1) == 0x000078, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN::CallFunc_GetHighSpeedMoveParameter_________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN, CallFunc_GetHighSpeedMoveParameter____________________1) == 0x000080, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN::CallFunc_GetHighSpeedMoveParameter____________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN, CallFunc_GetSSCharacter_SSCharacter) == 0x000088, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN, CallFunc_ConsumeSP_InSpCost_ImplicitCast) == 0x000090, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_ConsumeSPHighSpeedMoveIN::CallFunc_ConsumeSP_InSpCost_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubHighSpeedMove.BP_CharacterLocomotionSubHighSpeedMove_C.GetHighSpeedMoveForecast
// 0x0080 (0x0080 - 0x0000)
struct BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveForecast final
{
public:
	bool                                          IsDetermined;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        RemainingTime;                                     // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratHighSpeedMoveState                      Temp_byte_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetRotation_Rotation;                     // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetMyLocation_ReturnValue;                // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveForecast) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveForecast");
static_assert(sizeof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveForecast) == 0x000080, "Wrong size on BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveForecast");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveForecast, IsDetermined) == 0x000000, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveForecast::IsDetermined' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveForecast, Location) == 0x000008, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveForecast::Location' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveForecast, Rotation) == 0x000020, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveForecast::Rotation' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveForecast, RemainingTime) == 0x000038, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveForecast::RemainingTime' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveForecast, Temp_byte_Variable) == 0x000040, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveForecast::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveForecast, Temp_bool_Variable) == 0x000041, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveForecast::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveForecast, Temp_bool_Variable_1) == 0x000042, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveForecast::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveForecast, Temp_bool_Variable_2) == 0x000043, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveForecast::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveForecast, Temp_bool_Variable_3) == 0x000044, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveForecast::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveForecast, CallFunc_GetRotation_Rotation) == 0x000048, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveForecast::CallFunc_GetRotation_Rotation' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveForecast, CallFunc_GetMyLocation_ReturnValue) == 0x000060, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveForecast::CallFunc_GetMyLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveForecast, K2Node_Select_Default) == 0x000078, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveForecast::K2Node_Select_Default' has a wrong offset!");

// Function BP_CharacterLocomotionSubHighSpeedMove.BP_CharacterLocomotionSubHighSpeedMove_C.GetHighSpeedMoveParameter
// 0x0110 (0x0110 - 0x0000)
struct BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter final
{
public:
	bool                                          ______K;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ________________;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ____B__INK_LPxw__;                                 // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ____B__LPK_OTxw__;                                 // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            _______IN;                                         // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            _______LP;                                         // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            _______OT;                                         // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        ________;                                          // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        _____;                                             // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ___;                                               // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        __Bn____________;                                  // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               __Bn___________;                                   // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               __Bn_Kn___________;                                // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        B_Bn____________Y_OTw_K_nB______;                  // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        B_Bn____________;                                  // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               B_Bn___________;                                   // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               B_Bn_Kn___________;                                // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHighSpeedMoveParameterInternal________; // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetHighSpeedMoveParameterInternal_________________; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameterInternal_________________IN__LP____; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameterInternal_________________LP__OT____; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CallFunc_GetHighSpeedMoveParameterInternal________IN; // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CallFunc_GetHighSpeedMoveParameterInternal________LP; // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CallFunc_GetHighSpeedMoveParameterInternal________OT; // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameterInternal_________; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameterInternal______;  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameterInternal____;    // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetHighSpeedMoveParameterInternal__________________1; // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameterInternal________________; // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameterInternal___________________; // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameterInternal___________________OT____________; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetHighSpeedMoveParameterInternal__________________2; // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameterInternal_________________1; // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameterInternal____________________1; // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter");
static_assert(sizeof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter) == 0x000110, "Wrong size on BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, ______K) == 0x000000, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::______K' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, ________________) == 0x000008, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, ____B__INK_LPxw__) == 0x000010, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::____B__INK_LPxw__' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, ____B__LPK_OTxw__) == 0x000018, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::____B__LPK_OTxw__' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, _______IN) == 0x000020, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::_______IN' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, _______LP) == 0x000028, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::_______LP' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, _______OT) == 0x000030, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::_______OT' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, ________) == 0x000038, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, _____) == 0x000040, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::_____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, ___) == 0x000048, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::___' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, __Bn____________) == 0x000050, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::__Bn____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, __Bn___________) == 0x000058, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::__Bn___________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, __Bn_Kn___________) == 0x000060, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::__Bn_Kn___________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, B_Bn____________Y_OTw_K_nB______) == 0x000068, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::B_Bn____________Y_OTw_K_nB______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, B_Bn____________) == 0x000070, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::B_Bn____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, B_Bn___________) == 0x000078, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::B_Bn___________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, B_Bn_Kn___________) == 0x000080, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::B_Bn_Kn___________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, CallFunc_GetHighSpeedMoveParameterInternal________) == 0x000088, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::CallFunc_GetHighSpeedMoveParameterInternal________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, CallFunc_GetHighSpeedMoveParameterInternal_________________) == 0x000090, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::CallFunc_GetHighSpeedMoveParameterInternal_________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, CallFunc_GetHighSpeedMoveParameterInternal_________________IN__LP____) == 0x000098, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::CallFunc_GetHighSpeedMoveParameterInternal_________________IN__LP____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, CallFunc_GetHighSpeedMoveParameterInternal_________________LP__OT____) == 0x0000A0, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::CallFunc_GetHighSpeedMoveParameterInternal_________________LP__OT____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, CallFunc_GetHighSpeedMoveParameterInternal________IN) == 0x0000A8, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::CallFunc_GetHighSpeedMoveParameterInternal________IN' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, CallFunc_GetHighSpeedMoveParameterInternal________LP) == 0x0000B0, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::CallFunc_GetHighSpeedMoveParameterInternal________LP' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, CallFunc_GetHighSpeedMoveParameterInternal________OT) == 0x0000B8, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::CallFunc_GetHighSpeedMoveParameterInternal________OT' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, CallFunc_GetHighSpeedMoveParameterInternal_________) == 0x0000C0, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::CallFunc_GetHighSpeedMoveParameterInternal_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, CallFunc_GetHighSpeedMoveParameterInternal______) == 0x0000C8, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::CallFunc_GetHighSpeedMoveParameterInternal______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, CallFunc_GetHighSpeedMoveParameterInternal____) == 0x0000D0, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::CallFunc_GetHighSpeedMoveParameterInternal____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, CallFunc_GetHighSpeedMoveParameterInternal__________________1) == 0x0000D8, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::CallFunc_GetHighSpeedMoveParameterInternal__________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, CallFunc_GetHighSpeedMoveParameterInternal________________) == 0x0000E0, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::CallFunc_GetHighSpeedMoveParameterInternal________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, CallFunc_GetHighSpeedMoveParameterInternal___________________) == 0x0000E8, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::CallFunc_GetHighSpeedMoveParameterInternal___________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, CallFunc_GetHighSpeedMoveParameterInternal___________________OT____________) == 0x0000F0, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::CallFunc_GetHighSpeedMoveParameterInternal___________________OT____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, CallFunc_GetHighSpeedMoveParameterInternal__________________2) == 0x0000F8, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::CallFunc_GetHighSpeedMoveParameterInternal__________________2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, CallFunc_GetHighSpeedMoveParameterInternal_________________1) == 0x000100, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::CallFunc_GetHighSpeedMoveParameterInternal_________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter, CallFunc_GetHighSpeedMoveParameterInternal____________________1) == 0x000108, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameter::CallFunc_GetHighSpeedMoveParameterInternal____________________1' has a wrong offset!");

// Function BP_CharacterLocomotionSubHighSpeedMove.BP_CharacterLocomotionSubHighSpeedMove_C.GetHighSpeedMoveParameterInternal
// 0x0318 (0x0318 - 0x0000)
struct BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal final
{
public:
	bool                                          ______K;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ________________;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ____B__INK_LPxw__;                                 // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ____B__LPK_OTxw__;                                 // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            _______IN;                                         // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            _______LP;                                         // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            _______OT;                                         // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        ________;                                          // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        _____;                                             // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ___;                                               // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        __Bn____________;                                  // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               __Bn___________;                                   // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               __Bn_Kn___________;                                // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        B_Bn____________Y_OTw_K_nB______;                  // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        B_Bn____________;                                  // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               B_Bn___________;                                   // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               B_Bn_Kn___________;                                // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_1;             // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCanHighSpeedMove_ReturnValue;           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratCharacterDataMovementParameter   CallFunc_GetMovementParameter_OutMovementParameter; // 0x00A0(0x0240)(NoDestructor)
	double                                        K2Node_FunctionResult__________________ImplicitCast; // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_________________IN__LP_____ImplicitCast; // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_________________LP__OT_____ImplicitCast; // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult__________ImplicitCast;       // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_______ImplicitCast;          // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_____ImplicitCast;            // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult___________________OT_____________ImplicitCast; // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal");
static_assert(sizeof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal) == 0x000318, "Wrong size on BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal, ______K) == 0x000000, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal::______K' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal, ________________) == 0x000008, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal::________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal, ____B__INK_LPxw__) == 0x000010, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal::____B__INK_LPxw__' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal, ____B__LPK_OTxw__) == 0x000018, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal::____B__LPK_OTxw__' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal, _______IN) == 0x000020, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal::_______IN' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal, _______LP) == 0x000028, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal::_______LP' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal, _______OT) == 0x000030, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal::_______OT' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal, ________) == 0x000038, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal::________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal, _____) == 0x000040, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal::_____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal, ___) == 0x000048, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal::___' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal, __Bn____________) == 0x000050, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal::__Bn____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal, __Bn___________) == 0x000058, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal::__Bn___________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal, __Bn_Kn___________) == 0x000060, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal::__Bn_Kn___________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal, B_Bn____________Y_OTw_K_nB______) == 0x000068, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal::B_Bn____________Y_OTw_K_nB______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal, B_Bn____________) == 0x000070, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal::B_Bn____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal, B_Bn___________) == 0x000078, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal::B_Bn___________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal, B_Bn_Kn___________) == 0x000080, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal::B_Bn_Kn___________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal, CallFunc_GetSSCharacter_SSCharacter) == 0x000088, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal, CallFunc_GetSSCharacter_SSCharacter_1) == 0x000090, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal::CallFunc_GetSSCharacter_SSCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal, CallFunc_IsCanHighSpeedMove_ReturnValue) == 0x000098, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal::CallFunc_IsCanHighSpeedMove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal, CallFunc_GetMovementParameter_OutMovementParameter) == 0x0000A0, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal::CallFunc_GetMovementParameter_OutMovementParameter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal, K2Node_FunctionResult__________________ImplicitCast) == 0x0002E0, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal::K2Node_FunctionResult__________________ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal, K2Node_FunctionResult_________________IN__LP_____ImplicitCast) == 0x0002E8, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal::K2Node_FunctionResult_________________IN__LP_____ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal, K2Node_FunctionResult_________________LP__OT_____ImplicitCast) == 0x0002F0, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal::K2Node_FunctionResult_________________LP__OT_____ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal, K2Node_FunctionResult__________ImplicitCast) == 0x0002F8, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal::K2Node_FunctionResult__________ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal, K2Node_FunctionResult_______ImplicitCast) == 0x000300, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal::K2Node_FunctionResult_______ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal, K2Node_FunctionResult_____ImplicitCast) == 0x000308, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal::K2Node_FunctionResult_____ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal, K2Node_FunctionResult___________________OT_____________ImplicitCast) == 0x000310, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetHighSpeedMoveParameterInternal::K2Node_FunctionResult___________________OT_____________ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubHighSpeedMove.BP_CharacterLocomotionSubHighSpeedMove_C.GetLocomotionDetailStatus
// 0x0007 (0x0007 - 0x0000)
struct BP_CharacterLocomotionSubHighSpeedMove_C_GetLocomotionDetailStatus final
{
public:
	EKoratCharacterLocomotionDetailStatus         LocomotionDetailStatus;                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratHighSpeedMoveState                      Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubHighSpeedMove_C_GetLocomotionDetailStatus) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubHighSpeedMove_C_GetLocomotionDetailStatus");
static_assert(sizeof(BP_CharacterLocomotionSubHighSpeedMove_C_GetLocomotionDetailStatus) == 0x000007, "Wrong size on BP_CharacterLocomotionSubHighSpeedMove_C_GetLocomotionDetailStatus");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetLocomotionDetailStatus, LocomotionDetailStatus) == 0x000000, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetLocomotionDetailStatus::LocomotionDetailStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetLocomotionDetailStatus, Temp_byte_Variable) == 0x000001, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetLocomotionDetailStatus::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetLocomotionDetailStatus, Temp_byte_Variable_1) == 0x000002, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetLocomotionDetailStatus::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetLocomotionDetailStatus, Temp_byte_Variable_2) == 0x000003, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetLocomotionDetailStatus::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetLocomotionDetailStatus, Temp_byte_Variable_3) == 0x000004, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetLocomotionDetailStatus::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetLocomotionDetailStatus, Temp_byte_Variable_4) == 0x000005, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetLocomotionDetailStatus::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetLocomotionDetailStatus, K2Node_Select_Default) == 0x000006, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetLocomotionDetailStatus::K2Node_Select_Default' has a wrong offset!");

// Function BP_CharacterLocomotionSubHighSpeedMove.BP_CharacterLocomotionSubHighSpeedMove_C.GetRunningAction
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterLocomotionSubHighSpeedMove_C_GetRunningAction final
{
public:
	struct FKoratActionDataList                   RunningAction;                                     // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubHighSpeedMove_C_GetRunningAction) == 0x000004, "Wrong alignment on BP_CharacterLocomotionSubHighSpeedMove_C_GetRunningAction");
static_assert(sizeof(BP_CharacterLocomotionSubHighSpeedMove_C_GetRunningAction) == 0x000008, "Wrong size on BP_CharacterLocomotionSubHighSpeedMove_C_GetRunningAction");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetRunningAction, RunningAction) == 0x000000, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetRunningAction::RunningAction' has a wrong offset!");

// Function BP_CharacterLocomotionSubHighSpeedMove.BP_CharacterLocomotionSubHighSpeedMove_C.GetRunningSection
// 0x0034 (0x0034 - 0x0000)
struct BP_CharacterLocomotionSubHighSpeedMove_C_GetRunningSection final
{
public:
	class FName                                   RunningSection;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratHighSpeedMoveState                      Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubHighSpeedMove_C_GetRunningSection) == 0x000004, "Wrong alignment on BP_CharacterLocomotionSubHighSpeedMove_C_GetRunningSection");
static_assert(sizeof(BP_CharacterLocomotionSubHighSpeedMove_C_GetRunningSection) == 0x000034, "Wrong size on BP_CharacterLocomotionSubHighSpeedMove_C_GetRunningSection");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetRunningSection, RunningSection) == 0x000000, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetRunningSection::RunningSection' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetRunningSection, Temp_byte_Variable) == 0x000008, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetRunningSection::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetRunningSection, Temp_name_Variable) == 0x00000C, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetRunningSection::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetRunningSection, Temp_name_Variable_1) == 0x000014, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetRunningSection::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetRunningSection, Temp_name_Variable_2) == 0x00001C, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetRunningSection::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetRunningSection, Temp_name_Variable_3) == 0x000024, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetRunningSection::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetRunningSection, K2Node_Select_Default) == 0x00002C, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetRunningSection::K2Node_Select_Default' has a wrong offset!");

// Function BP_CharacterLocomotionSubHighSpeedMove.BP_CharacterLocomotionSubHighSpeedMove_C.GetShortDashParameter
// 0x00D8 (0x00D8 - 0x0000)
struct BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter final
{
public:
	class UCurveFloat*                            ___________;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        ________;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        _____;                                             // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ___;                                               // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OTxw_Y_LNB_;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __B_;                                              // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Minus_Bk______Y_K;                                 // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Minus_Bn___;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ______0;                                           // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratHighSpeedMoveState                      Temp_byte_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHighSpeedMoveParameterInternal________; // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetHighSpeedMoveParameterInternal_________________; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameterInternal_________________IN__LP____; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameterInternal_________________LP__OT____; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CallFunc_GetHighSpeedMoveParameterInternal________IN; // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CallFunc_GetHighSpeedMoveParameterInternal________LP; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CallFunc_GetHighSpeedMoveParameterInternal________OT; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameterInternal_________; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameterInternal______;  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameterInternal____;    // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetHighSpeedMoveParameterInternal__________________1; // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameterInternal________________; // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameterInternal___________________; // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameterInternal___________________OT____________; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetHighSpeedMoveParameterInternal__________________2; // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameterInternal_________________1; // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameterInternal____________________1; // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            K2Node_Select_Default;                             // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter");
static_assert(sizeof(BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter) == 0x0000D8, "Wrong size on BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter, ___________) == 0x000000, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter::___________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter, ________) == 0x000008, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter::________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter, _____) == 0x000010, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter::_____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter, ___) == 0x000018, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter::___' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter, OTxw_Y_LNB_) == 0x000020, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter::OTxw_Y_LNB_' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter, __B_) == 0x000028, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter::__B_' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter, Minus_Bk______Y_K) == 0x000030, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter::Minus_Bk______Y_K' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter, Minus_Bn___) == 0x000038, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter::Minus_Bn___' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter, ______0) == 0x000040, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter::______0' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter, Temp_byte_Variable) == 0x000048, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter, CallFunc_GetHighSpeedMoveParameterInternal________) == 0x000049, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter::CallFunc_GetHighSpeedMoveParameterInternal________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter, CallFunc_GetHighSpeedMoveParameterInternal_________________) == 0x000050, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter::CallFunc_GetHighSpeedMoveParameterInternal_________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter, CallFunc_GetHighSpeedMoveParameterInternal_________________IN__LP____) == 0x000058, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter::CallFunc_GetHighSpeedMoveParameterInternal_________________IN__LP____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter, CallFunc_GetHighSpeedMoveParameterInternal_________________LP__OT____) == 0x000060, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter::CallFunc_GetHighSpeedMoveParameterInternal_________________LP__OT____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter, CallFunc_GetHighSpeedMoveParameterInternal________IN) == 0x000068, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter::CallFunc_GetHighSpeedMoveParameterInternal________IN' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter, CallFunc_GetHighSpeedMoveParameterInternal________LP) == 0x000070, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter::CallFunc_GetHighSpeedMoveParameterInternal________LP' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter, CallFunc_GetHighSpeedMoveParameterInternal________OT) == 0x000078, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter::CallFunc_GetHighSpeedMoveParameterInternal________OT' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter, CallFunc_GetHighSpeedMoveParameterInternal_________) == 0x000080, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter::CallFunc_GetHighSpeedMoveParameterInternal_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter, CallFunc_GetHighSpeedMoveParameterInternal______) == 0x000088, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter::CallFunc_GetHighSpeedMoveParameterInternal______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter, CallFunc_GetHighSpeedMoveParameterInternal____) == 0x000090, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter::CallFunc_GetHighSpeedMoveParameterInternal____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter, CallFunc_GetHighSpeedMoveParameterInternal__________________1) == 0x000098, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter::CallFunc_GetHighSpeedMoveParameterInternal__________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter, CallFunc_GetHighSpeedMoveParameterInternal________________) == 0x0000A0, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter::CallFunc_GetHighSpeedMoveParameterInternal________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter, CallFunc_GetHighSpeedMoveParameterInternal___________________) == 0x0000A8, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter::CallFunc_GetHighSpeedMoveParameterInternal___________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter, CallFunc_GetHighSpeedMoveParameterInternal___________________OT____________) == 0x0000B0, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter::CallFunc_GetHighSpeedMoveParameterInternal___________________OT____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter, CallFunc_GetHighSpeedMoveParameterInternal__________________2) == 0x0000B8, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter::CallFunc_GetHighSpeedMoveParameterInternal__________________2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter, CallFunc_GetHighSpeedMoveParameterInternal_________________1) == 0x0000C0, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter::CallFunc_GetHighSpeedMoveParameterInternal_________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter, CallFunc_GetHighSpeedMoveParameterInternal____________________1) == 0x0000C8, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter::CallFunc_GetHighSpeedMoveParameterInternal____________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter, K2Node_Select_Default) == 0x0000D0, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_GetShortDashParameter::K2Node_Select_Default' has a wrong offset!");

// Function BP_CharacterLocomotionSubHighSpeedMove.BP_CharacterLocomotionSubHighSpeedMove_C.HighSpeedMoveIN
// 0x0002 (0x0002 - 0x0000)
struct BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveIN final
{
public:
	ECharacterLocomotionEventType                 CallFunc_GetUpdateEventType_EventType;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveIN) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveIN");
static_assert(sizeof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveIN) == 0x000002, "Wrong size on BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveIN");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveIN, CallFunc_GetUpdateEventType_EventType) == 0x000000, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveIN::CallFunc_GetUpdateEventType_EventType' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveIN, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveIN::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_CharacterLocomotionSubHighSpeedMove.BP_CharacterLocomotionSubHighSpeedMove_C.HighSpeedMoveINUpdate
// 0x00B0 (0x00B0 - 0x0000)
struct BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate final
{
public:
	bool                                          CallFunc_GetHighSpeedMoveParameter________;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetHighSpeedMoveParameter_________________; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter_________________IN__LP____; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter_________________LP__OT____; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CallFunc_GetHighSpeedMoveParameter________IN;      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CallFunc_GetHighSpeedMoveParameter________LP;      // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CallFunc_GetHighSpeedMoveParameter________OT;      // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter_________;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter______;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter____;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetHighSpeedMoveParameter__________________1; // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameter________________; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameter___________________; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter___________________OT____________; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetHighSpeedMoveParameter__________________2; // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameter_________________1; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameter____________________1; // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetUpdateDeltaSeconds_DeltaSeconds;       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratShortDashState                          CallFunc_UpdateShortDashMove_NextShortDashStatus;  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate");
static_assert(sizeof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate) == 0x0000B0, "Wrong size on BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate, CallFunc_GetHighSpeedMoveParameter________) == 0x000000, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate::CallFunc_GetHighSpeedMoveParameter________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate, CallFunc_GetHighSpeedMoveParameter_________________) == 0x000008, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate::CallFunc_GetHighSpeedMoveParameter_________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate, CallFunc_GetHighSpeedMoveParameter_________________IN__LP____) == 0x000010, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate::CallFunc_GetHighSpeedMoveParameter_________________IN__LP____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate, CallFunc_GetHighSpeedMoveParameter_________________LP__OT____) == 0x000018, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate::CallFunc_GetHighSpeedMoveParameter_________________LP__OT____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate, CallFunc_GetHighSpeedMoveParameter________IN) == 0x000020, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate::CallFunc_GetHighSpeedMoveParameter________IN' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate, CallFunc_GetHighSpeedMoveParameter________LP) == 0x000028, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate::CallFunc_GetHighSpeedMoveParameter________LP' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate, CallFunc_GetHighSpeedMoveParameter________OT) == 0x000030, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate::CallFunc_GetHighSpeedMoveParameter________OT' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate, CallFunc_GetHighSpeedMoveParameter_________) == 0x000038, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate::CallFunc_GetHighSpeedMoveParameter_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate, CallFunc_GetHighSpeedMoveParameter______) == 0x000040, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate::CallFunc_GetHighSpeedMoveParameter______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate, CallFunc_GetHighSpeedMoveParameter____) == 0x000048, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate::CallFunc_GetHighSpeedMoveParameter____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate, CallFunc_GetHighSpeedMoveParameter__________________1) == 0x000050, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate::CallFunc_GetHighSpeedMoveParameter__________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate, CallFunc_GetHighSpeedMoveParameter________________) == 0x000058, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate::CallFunc_GetHighSpeedMoveParameter________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate, CallFunc_GetHighSpeedMoveParameter___________________) == 0x000060, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate::CallFunc_GetHighSpeedMoveParameter___________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate, CallFunc_GetHighSpeedMoveParameter___________________OT____________) == 0x000068, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate::CallFunc_GetHighSpeedMoveParameter___________________OT____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate, CallFunc_GetHighSpeedMoveParameter__________________2) == 0x000070, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate::CallFunc_GetHighSpeedMoveParameter__________________2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate, CallFunc_GetHighSpeedMoveParameter_________________1) == 0x000078, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate::CallFunc_GetHighSpeedMoveParameter_________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate, CallFunc_GetHighSpeedMoveParameter____________________1) == 0x000080, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate::CallFunc_GetHighSpeedMoveParameter____________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate, CallFunc_GetSSCharacter_SSCharacter) == 0x000088, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000090, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000098, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate, CallFunc_GetUpdateDeltaSeconds_DeltaSeconds) == 0x0000A0, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate::CallFunc_GetUpdateDeltaSeconds_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate, CallFunc_UpdateShortDashMove_NextShortDashStatus) == 0x0000A8, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveINUpdate::CallFunc_UpdateShortDashMove_NextShortDashStatus' has a wrong offset!");

// Function BP_CharacterLocomotionSubHighSpeedMove.BP_CharacterLocomotionSubHighSpeedMove_C.HighSpeedMoveLP
// 0x0002 (0x0002 - 0x0000)
struct BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLP final
{
public:
	ECharacterLocomotionEventType                 CallFunc_GetUpdateEventType_EventType;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLP) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLP");
static_assert(sizeof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLP) == 0x000002, "Wrong size on BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLP");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLP, CallFunc_GetUpdateEventType_EventType) == 0x000000, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLP::CallFunc_GetUpdateEventType_EventType' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLP, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_CharacterLocomotionSubHighSpeedMove.BP_CharacterLocomotionSubHighSpeedMove_C.HighSpeedMoveLPUpdate
// 0x00B0 (0x00B0 - 0x0000)
struct BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate final
{
public:
	bool                                          CallFunc_GetHighSpeedMoveParameter________;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetHighSpeedMoveParameter_________________; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter_________________IN__LP____; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter_________________LP__OT____; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CallFunc_GetHighSpeedMoveParameter________IN;      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CallFunc_GetHighSpeedMoveParameter________LP;      // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CallFunc_GetHighSpeedMoveParameter________OT;      // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter_________;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter______;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter____;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetHighSpeedMoveParameter__________________1; // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameter________________; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameter___________________; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter___________________OT____________; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetHighSpeedMoveParameter__________________2; // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameter_________________1; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameter____________________1; // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetUpdateDeltaSeconds_DeltaSeconds;       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratShortDashState                          CallFunc_UpdateShortDashMove_NextShortDashStatus;  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate");
static_assert(sizeof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate) == 0x0000B0, "Wrong size on BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate, CallFunc_GetHighSpeedMoveParameter________) == 0x000000, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate::CallFunc_GetHighSpeedMoveParameter________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate, CallFunc_GetHighSpeedMoveParameter_________________) == 0x000008, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate::CallFunc_GetHighSpeedMoveParameter_________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate, CallFunc_GetHighSpeedMoveParameter_________________IN__LP____) == 0x000010, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate::CallFunc_GetHighSpeedMoveParameter_________________IN__LP____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate, CallFunc_GetHighSpeedMoveParameter_________________LP__OT____) == 0x000018, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate::CallFunc_GetHighSpeedMoveParameter_________________LP__OT____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate, CallFunc_GetHighSpeedMoveParameter________IN) == 0x000020, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate::CallFunc_GetHighSpeedMoveParameter________IN' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate, CallFunc_GetHighSpeedMoveParameter________LP) == 0x000028, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate::CallFunc_GetHighSpeedMoveParameter________LP' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate, CallFunc_GetHighSpeedMoveParameter________OT) == 0x000030, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate::CallFunc_GetHighSpeedMoveParameter________OT' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate, CallFunc_GetHighSpeedMoveParameter_________) == 0x000038, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate::CallFunc_GetHighSpeedMoveParameter_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate, CallFunc_GetHighSpeedMoveParameter______) == 0x000040, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate::CallFunc_GetHighSpeedMoveParameter______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate, CallFunc_GetHighSpeedMoveParameter____) == 0x000048, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate::CallFunc_GetHighSpeedMoveParameter____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate, CallFunc_GetHighSpeedMoveParameter__________________1) == 0x000050, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate::CallFunc_GetHighSpeedMoveParameter__________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate, CallFunc_GetHighSpeedMoveParameter________________) == 0x000058, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate::CallFunc_GetHighSpeedMoveParameter________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate, CallFunc_GetHighSpeedMoveParameter___________________) == 0x000060, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate::CallFunc_GetHighSpeedMoveParameter___________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate, CallFunc_GetHighSpeedMoveParameter___________________OT____________) == 0x000068, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate::CallFunc_GetHighSpeedMoveParameter___________________OT____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate, CallFunc_GetHighSpeedMoveParameter__________________2) == 0x000070, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate::CallFunc_GetHighSpeedMoveParameter__________________2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate, CallFunc_GetHighSpeedMoveParameter_________________1) == 0x000078, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate::CallFunc_GetHighSpeedMoveParameter_________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate, CallFunc_GetHighSpeedMoveParameter____________________1) == 0x000080, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate::CallFunc_GetHighSpeedMoveParameter____________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000088, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate, CallFunc_GetSSCharacter_SSCharacter) == 0x000090, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000098, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate, CallFunc_GetUpdateDeltaSeconds_DeltaSeconds) == 0x0000A0, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate::CallFunc_GetUpdateDeltaSeconds_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate, CallFunc_UpdateShortDashMove_NextShortDashStatus) == 0x0000A8, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveLPUpdate::CallFunc_UpdateShortDashMove_NextShortDashStatus' has a wrong offset!");

// Function BP_CharacterLocomotionSubHighSpeedMove.BP_CharacterLocomotionSubHighSpeedMove_C.HighSpeedMoveOT
// 0x0002 (0x0002 - 0x0000)
struct BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveOT final
{
public:
	ECharacterLocomotionEventType                 CallFunc_GetUpdateEventType_EventType;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveOT) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveOT");
static_assert(sizeof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveOT) == 0x000002, "Wrong size on BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveOT");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveOT, CallFunc_GetUpdateEventType_EventType) == 0x000000, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveOT::CallFunc_GetUpdateEventType_EventType' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveOT, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveOT::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_CharacterLocomotionSubHighSpeedMove.BP_CharacterLocomotionSubHighSpeedMove_C.HighSpeedMoveOTUpdate
// 0x0030 (0x0030 - 0x0000)
struct BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveOTUpdate final
{
public:
	class APawn*                                  CallFunc_GetPawn_Pawn;                             // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetUpdateDeltaSeconds_DeltaSeconds;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterBase_C>  K2Node_DynamicCast_AsBPI_Character_Base;           // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratShortDashState                          CallFunc_UpdateShortDashMove_NextShortDashStatus;  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AutoSetCharacterMovementModeToIdle_IsSet; // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 CallFunc_AutoSetCharacterMovementModeToIdle_SetMovementMode; // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveOTUpdate) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveOTUpdate");
static_assert(sizeof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveOTUpdate) == 0x000030, "Wrong size on BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveOTUpdate");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveOTUpdate, CallFunc_GetPawn_Pawn) == 0x000000, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveOTUpdate::CallFunc_GetPawn_Pawn' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveOTUpdate, CallFunc_GetUpdateDeltaSeconds_DeltaSeconds) == 0x000008, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveOTUpdate::CallFunc_GetUpdateDeltaSeconds_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveOTUpdate, K2Node_DynamicCast_AsBPI_Character_Base) == 0x000010, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveOTUpdate::K2Node_DynamicCast_AsBPI_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveOTUpdate, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveOTUpdate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveOTUpdate, CallFunc_UpdateShortDashMove_NextShortDashStatus) == 0x000021, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveOTUpdate::CallFunc_UpdateShortDashMove_NextShortDashStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveOTUpdate, CallFunc_AutoSetCharacterMovementModeToIdle_IsSet) == 0x000022, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveOTUpdate::CallFunc_AutoSetCharacterMovementModeToIdle_IsSet' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveOTUpdate, CallFunc_AutoSetCharacterMovementModeToIdle_SetMovementMode) == 0x000023, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveOTUpdate::CallFunc_AutoSetCharacterMovementModeToIdle_SetMovementMode' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveOTUpdate, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000024, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveOTUpdate::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveOTUpdate, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000028, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_HighSpeedMoveOTUpdate::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");

// Function BP_CharacterLocomotionSubHighSpeedMove.BP_CharacterLocomotionSubHighSpeedMove_C.IsEnableAction
// 0x0002 (0x0002 - 0x0000)
struct BP_CharacterLocomotionSubHighSpeedMove_C_IsEnableAction final
{
public:
	bool                                          IsEnable;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubHighSpeedMove_C_IsEnableAction) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubHighSpeedMove_C_IsEnableAction");
static_assert(sizeof(BP_CharacterLocomotionSubHighSpeedMove_C_IsEnableAction) == 0x000002, "Wrong size on BP_CharacterLocomotionSubHighSpeedMove_C_IsEnableAction");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_IsEnableAction, IsEnable) == 0x000000, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_IsEnableAction::IsEnable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_IsEnableAction, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_IsEnableAction::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_CharacterLocomotionSubHighSpeedMove.BP_CharacterLocomotionSubHighSpeedMove_C.IsUpdateSpeed
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterLocomotionSubHighSpeedMove_C_IsUpdateSpeed final
{
public:
	bool                                          IsUpdate;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubHighSpeedMove_C_IsUpdateSpeed) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubHighSpeedMove_C_IsUpdateSpeed");
static_assert(sizeof(BP_CharacterLocomotionSubHighSpeedMove_C_IsUpdateSpeed) == 0x000001, "Wrong size on BP_CharacterLocomotionSubHighSpeedMove_C_IsUpdateSpeed");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_IsUpdateSpeed, IsUpdate) == 0x000000, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_IsUpdateSpeed::IsUpdate' has a wrong offset!");

// Function BP_CharacterLocomotionSubHighSpeedMove.BP_CharacterLocomotionSubHighSpeedMove_C.PlayOmenToAppear
// 0x0090 (0x0090 - 0x0000)
struct BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear final
{
public:
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHighSpeedMoveParameter________;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetHighSpeedMoveParameter_________________; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter_________________IN__LP____; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter_________________LP__OT____; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CallFunc_GetHighSpeedMoveParameter________IN;      // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CallFunc_GetHighSpeedMoveParameter________LP;      // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CallFunc_GetHighSpeedMoveParameter________OT;      // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter_________;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter______;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter____;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetHighSpeedMoveParameter__________________1; // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameter________________; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameter___________________; // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter___________________OT____________; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetHighSpeedMoveParameter__________________2; // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameter_________________1; // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameter____________________1; // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear");
static_assert(sizeof(BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear) == 0x000090, "Wrong size on BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear, CallFunc_GetSSCharacter_SSCharacter) == 0x000000, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear, CallFunc_GetHighSpeedMoveParameter________) == 0x000008, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear::CallFunc_GetHighSpeedMoveParameter________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear, CallFunc_GetHighSpeedMoveParameter_________________) == 0x000010, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear::CallFunc_GetHighSpeedMoveParameter_________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear, CallFunc_GetHighSpeedMoveParameter_________________IN__LP____) == 0x000018, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear::CallFunc_GetHighSpeedMoveParameter_________________IN__LP____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear, CallFunc_GetHighSpeedMoveParameter_________________LP__OT____) == 0x000020, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear::CallFunc_GetHighSpeedMoveParameter_________________LP__OT____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear, CallFunc_GetHighSpeedMoveParameter________IN) == 0x000028, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear::CallFunc_GetHighSpeedMoveParameter________IN' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear, CallFunc_GetHighSpeedMoveParameter________LP) == 0x000030, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear::CallFunc_GetHighSpeedMoveParameter________LP' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear, CallFunc_GetHighSpeedMoveParameter________OT) == 0x000038, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear::CallFunc_GetHighSpeedMoveParameter________OT' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear, CallFunc_GetHighSpeedMoveParameter_________) == 0x000040, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear::CallFunc_GetHighSpeedMoveParameter_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear, CallFunc_GetHighSpeedMoveParameter______) == 0x000048, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear::CallFunc_GetHighSpeedMoveParameter______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear, CallFunc_GetHighSpeedMoveParameter____) == 0x000050, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear::CallFunc_GetHighSpeedMoveParameter____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear, CallFunc_GetHighSpeedMoveParameter__________________1) == 0x000058, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear::CallFunc_GetHighSpeedMoveParameter__________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear, CallFunc_GetHighSpeedMoveParameter________________) == 0x000060, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear::CallFunc_GetHighSpeedMoveParameter________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear, CallFunc_GetHighSpeedMoveParameter___________________) == 0x000068, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear::CallFunc_GetHighSpeedMoveParameter___________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear, CallFunc_GetHighSpeedMoveParameter___________________OT____________) == 0x000070, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear::CallFunc_GetHighSpeedMoveParameter___________________OT____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear, CallFunc_GetHighSpeedMoveParameter__________________2) == 0x000078, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear::CallFunc_GetHighSpeedMoveParameter__________________2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear, CallFunc_GetHighSpeedMoveParameter_________________1) == 0x000080, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear::CallFunc_GetHighSpeedMoveParameter_________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear, CallFunc_GetHighSpeedMoveParameter____________________1) == 0x000088, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_PlayOmenToAppear::CallFunc_GetHighSpeedMoveParameter____________________1' has a wrong offset!");

// Function BP_CharacterLocomotionSubHighSpeedMove.BP_CharacterLocomotionSubHighSpeedMove_C.SetHighSpeedMoveStatus
// 0x0030 (0x0030 - 0x0000)
struct BP_CharacterLocomotionSubHighSpeedMove_C_SetHighSpeedMoveStatus final
{
public:
	EKoratHighSpeedMoveState                      InHighSpeedMoveStatus;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterActionFinishReason             InActionFinishReason;                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_2; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateRunningAction_OutIsChangeAction;    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubHighSpeedMove_C_SetHighSpeedMoveStatus) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubHighSpeedMove_C_SetHighSpeedMoveStatus");
static_assert(sizeof(BP_CharacterLocomotionSubHighSpeedMove_C_SetHighSpeedMoveStatus) == 0x000030, "Wrong size on BP_CharacterLocomotionSubHighSpeedMove_C_SetHighSpeedMoveStatus");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_SetHighSpeedMoveStatus, InHighSpeedMoveStatus) == 0x000000, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_SetHighSpeedMoveStatus::InHighSpeedMoveStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_SetHighSpeedMoveStatus, InActionFinishReason) == 0x000001, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_SetHighSpeedMoveStatus::InActionFinishReason' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_SetHighSpeedMoveStatus, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_SetHighSpeedMoveStatus::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_SetHighSpeedMoveStatus, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000008, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_SetHighSpeedMoveStatus::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_SetHighSpeedMoveStatus, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000010, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_SetHighSpeedMoveStatus::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_SetHighSpeedMoveStatus, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_SetHighSpeedMoveStatus::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_SetHighSpeedMoveStatus, CallFunc_GetLocomotionComponent_LocomotionComponent_2) == 0x000020, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_SetHighSpeedMoveStatus::CallFunc_GetLocomotionComponent_LocomotionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_SetHighSpeedMoveStatus, CallFunc_UpdateRunningAction_OutIsChangeAction) == 0x000028, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_SetHighSpeedMoveStatus::CallFunc_UpdateRunningAction_OutIsChangeAction' has a wrong offset!");

// Function BP_CharacterLocomotionSubHighSpeedMove.BP_CharacterLocomotionSubHighSpeedMove_C.Start
// 0x0020 (0x0020 - 0x0000)
struct BP_CharacterLocomotionSubHighSpeedMove_C_Start final
{
public:
	class UBP_CharacterLocomotionComponent_C*     InLocomotionComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          InInSkip;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubHighSpeedMove_C_Start) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubHighSpeedMove_C_Start");
static_assert(sizeof(BP_CharacterLocomotionSubHighSpeedMove_C_Start) == 0x000020, "Wrong size on BP_CharacterLocomotionSubHighSpeedMove_C_Start");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_Start, InLocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_Start::InLocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_Start, InInSkip) == 0x000008, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_Start::InInSkip' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_Start, NewParam) == 0x000009, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_Start::NewParam' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_Start, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000010, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_Start::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_Start, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000018, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_Start::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");

// Function BP_CharacterLocomotionSubHighSpeedMove.BP_CharacterLocomotionSubHighSpeedMove_C.Update
// 0x0028 (0x0028 - 0x0000)
struct BP_CharacterLocomotionSubHighSpeedMove_C_Update final
{
public:
	class UBP_CharacterLocomotionComponent_C*     InLocomotionComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ECharacterLocomotionEventType                 InEventType;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        InDeltaSeconds;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetUpdateDeltaSeconds_DeltaSeconds;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubHighSpeedMove_C_Update) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubHighSpeedMove_C_Update");
static_assert(sizeof(BP_CharacterLocomotionSubHighSpeedMove_C_Update) == 0x000028, "Wrong size on BP_CharacterLocomotionSubHighSpeedMove_C_Update");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_Update, InLocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_Update::InLocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_Update, InEventType) == 0x000008, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_Update::InEventType' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_Update, InDeltaSeconds) == 0x000010, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_Update::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_Update, NewParam) == 0x000018, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_Update::NewParam' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_Update, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_Update::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_Update, K2Node_SwitchEnum_CmpSuccess) == 0x00001A, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_Update::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_Update, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00001B, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_Update::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_Update, CallFunc_GetUpdateDeltaSeconds_DeltaSeconds) == 0x000020, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_Update::CallFunc_GetUpdateDeltaSeconds_DeltaSeconds' has a wrong offset!");

// Function BP_CharacterLocomotionSubHighSpeedMove.BP_CharacterLocomotionSubHighSpeedMove_C.UpdateHighSpeedMoveAlways
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterLocomotionSubHighSpeedMove_C_UpdateHighSpeedMoveAlways final
{
public:
	double                                        InDeltaSeconds;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Update_Sub_State_Timer_OutSubStateTimer;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubHighSpeedMove_C_UpdateHighSpeedMoveAlways) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubHighSpeedMove_C_UpdateHighSpeedMoveAlways");
static_assert(sizeof(BP_CharacterLocomotionSubHighSpeedMove_C_UpdateHighSpeedMoveAlways) == 0x000018, "Wrong size on BP_CharacterLocomotionSubHighSpeedMove_C_UpdateHighSpeedMoveAlways");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_UpdateHighSpeedMoveAlways, InDeltaSeconds) == 0x000000, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_UpdateHighSpeedMoveAlways::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_UpdateHighSpeedMoveAlways, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000008, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_UpdateHighSpeedMoveAlways::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_UpdateHighSpeedMoveAlways, CallFunc_Update_Sub_State_Timer_OutSubStateTimer) == 0x000010, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_UpdateHighSpeedMoveAlways::CallFunc_Update_Sub_State_Timer_OutSubStateTimer' has a wrong offset!");

// Function BP_CharacterLocomotionSubHighSpeedMove.BP_CharacterLocomotionSubHighSpeedMove_C.UpdateOmenToAppear
// 0x00B0 (0x00B0 - 0x0000)
struct BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear final
{
public:
	double                                        InDeltaSeconds;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHighSpeedMoveParameter________;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetHighSpeedMoveParameter_________________; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter_________________IN__LP____; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter_________________LP__OT____; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CallFunc_GetHighSpeedMoveParameter________IN;      // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CallFunc_GetHighSpeedMoveParameter________LP;      // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CallFunc_GetHighSpeedMoveParameter________OT;      // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter_________;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter______;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter____;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetHighSpeedMoveParameter__________________1; // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameter________________; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameter___________________; // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHighSpeedMoveParameter___________________OT____________; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        CallFunc_GetHighSpeedMoveParameter__________________2; // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameter_________________1; // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               CallFunc_GetHighSpeedMoveParameter____________________1; // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear");
static_assert(sizeof(BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear) == 0x0000B0, "Wrong size on BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear, InDeltaSeconds) == 0x000000, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear, CallFunc_GetHighSpeedMoveParameter________) == 0x000008, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear::CallFunc_GetHighSpeedMoveParameter________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear, CallFunc_GetHighSpeedMoveParameter_________________) == 0x000010, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear::CallFunc_GetHighSpeedMoveParameter_________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear, CallFunc_GetHighSpeedMoveParameter_________________IN__LP____) == 0x000018, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear::CallFunc_GetHighSpeedMoveParameter_________________IN__LP____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear, CallFunc_GetHighSpeedMoveParameter_________________LP__OT____) == 0x000020, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear::CallFunc_GetHighSpeedMoveParameter_________________LP__OT____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear, CallFunc_GetHighSpeedMoveParameter________IN) == 0x000028, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear::CallFunc_GetHighSpeedMoveParameter________IN' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear, CallFunc_GetHighSpeedMoveParameter________LP) == 0x000030, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear::CallFunc_GetHighSpeedMoveParameter________LP' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear, CallFunc_GetHighSpeedMoveParameter________OT) == 0x000038, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear::CallFunc_GetHighSpeedMoveParameter________OT' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear, CallFunc_GetHighSpeedMoveParameter_________) == 0x000040, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear::CallFunc_GetHighSpeedMoveParameter_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear, CallFunc_GetHighSpeedMoveParameter______) == 0x000048, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear::CallFunc_GetHighSpeedMoveParameter______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear, CallFunc_GetHighSpeedMoveParameter____) == 0x000050, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear::CallFunc_GetHighSpeedMoveParameter____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear, CallFunc_GetHighSpeedMoveParameter__________________1) == 0x000058, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear::CallFunc_GetHighSpeedMoveParameter__________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear, CallFunc_GetHighSpeedMoveParameter________________) == 0x000060, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear::CallFunc_GetHighSpeedMoveParameter________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear, CallFunc_GetHighSpeedMoveParameter___________________) == 0x000068, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear::CallFunc_GetHighSpeedMoveParameter___________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear, CallFunc_GetHighSpeedMoveParameter___________________OT____________) == 0x000070, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear::CallFunc_GetHighSpeedMoveParameter___________________OT____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear, CallFunc_GetHighSpeedMoveParameter__________________2) == 0x000078, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear::CallFunc_GetHighSpeedMoveParameter__________________2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear, CallFunc_GetHighSpeedMoveParameter_________________1) == 0x000080, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear::CallFunc_GetHighSpeedMoveParameter_________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear, CallFunc_GetHighSpeedMoveParameter____________________1) == 0x000088, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear::CallFunc_GetHighSpeedMoveParameter____________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000090, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0000A8, "Member 'BP_CharacterLocomotionSubHighSpeedMove_C_UpdateOmenToAppear::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");

}

