#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CRBP_0000_40_00_ACC00_00

#include "Basic.hpp"

#include "KoratControlRigExtension_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "RigVM_classes.hpp"
#include "ControlRig_structs.hpp"


namespace SDK
{

// ControlRigBlueprintGeneratedClass CRBP_0000_40_00_ACC00_00.CRBP_0000_40_00_ACC00_00_C
// 0x00D8 (0x0640 - 0x0568)
class UCRBP_0000_40_00_ACC00_00_C final : public UKoratControlRig
{
public:
	double                                        ______M____Min;                                    // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        _____n_________M_;                                 // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        _____n__________M_;                                // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ____________Min____M_;                             // 0x0580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ________n__________M_;                             // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ________n________M_;                               // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ____________Min_M_M_;                              // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        _____n_______M_M_;                                 // 0x05A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CLAVICLEROOL_RemapSourceMinX;                      // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CLAVICLEROOL_RemapSourceMaxX;                      // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ________n____MMn__;                                // 0x05B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ________n_____M_M_;                                // 0x05C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ________n__M____M_M_;                              // 0x05C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Starp________Min_Star_M_;                          // 0x05D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Starp____n_______Star_M_;                          // 0x05D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Starp____n__Star_MMn___Star_M_;                    // 0x05E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Starp________Min_M_M_;                             // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Starp____n_______M_M_;                             // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Starp____n__Star_MMn___M_M_;                       // 0x05F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Mp________Min_M_M_;                                // 0x0600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Mp____n_______M_M_;                                // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Mp____n__Star_MMn___M_M_;                          // 0x0610(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Spine03_____;                                      // 0x0618(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Spine02_____;                                      // 0x0620(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Spine01_____;                                      // 0x0628(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __________;                                        // 0x0630(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ___________0;                                      // 0x0638(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CRBP_0000_40_00_ACC00_00_C">();
	}
	static class UCRBP_0000_40_00_ACC00_00_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCRBP_0000_40_00_ACC00_00_C>();
	}
};
static_assert(alignof(UCRBP_0000_40_00_ACC00_00_C) == 0x000008, "Wrong alignment on UCRBP_0000_40_00_ACC00_00_C");
static_assert(sizeof(UCRBP_0000_40_00_ACC00_00_C) == 0x000640, "Wrong size on UCRBP_0000_40_00_ACC00_00_C");
static_assert(offsetof(UCRBP_0000_40_00_ACC00_00_C, ______M____Min) == 0x000568, "Member 'UCRBP_0000_40_00_ACC00_00_C::______M____Min' has a wrong offset!");
static_assert(offsetof(UCRBP_0000_40_00_ACC00_00_C, _____n_________M_) == 0x000570, "Member 'UCRBP_0000_40_00_ACC00_00_C::_____n_________M_' has a wrong offset!");
static_assert(offsetof(UCRBP_0000_40_00_ACC00_00_C, _____n__________M_) == 0x000578, "Member 'UCRBP_0000_40_00_ACC00_00_C::_____n__________M_' has a wrong offset!");
static_assert(offsetof(UCRBP_0000_40_00_ACC00_00_C, ____________Min____M_) == 0x000580, "Member 'UCRBP_0000_40_00_ACC00_00_C::____________Min____M_' has a wrong offset!");
static_assert(offsetof(UCRBP_0000_40_00_ACC00_00_C, ________n__________M_) == 0x000588, "Member 'UCRBP_0000_40_00_ACC00_00_C::________n__________M_' has a wrong offset!");
static_assert(offsetof(UCRBP_0000_40_00_ACC00_00_C, ________n________M_) == 0x000590, "Member 'UCRBP_0000_40_00_ACC00_00_C::________n________M_' has a wrong offset!");
static_assert(offsetof(UCRBP_0000_40_00_ACC00_00_C, ____________Min_M_M_) == 0x000598, "Member 'UCRBP_0000_40_00_ACC00_00_C::____________Min_M_M_' has a wrong offset!");
static_assert(offsetof(UCRBP_0000_40_00_ACC00_00_C, _____n_______M_M_) == 0x0005A0, "Member 'UCRBP_0000_40_00_ACC00_00_C::_____n_______M_M_' has a wrong offset!");
static_assert(offsetof(UCRBP_0000_40_00_ACC00_00_C, CLAVICLEROOL_RemapSourceMinX) == 0x0005A8, "Member 'UCRBP_0000_40_00_ACC00_00_C::CLAVICLEROOL_RemapSourceMinX' has a wrong offset!");
static_assert(offsetof(UCRBP_0000_40_00_ACC00_00_C, CLAVICLEROOL_RemapSourceMaxX) == 0x0005B0, "Member 'UCRBP_0000_40_00_ACC00_00_C::CLAVICLEROOL_RemapSourceMaxX' has a wrong offset!");
static_assert(offsetof(UCRBP_0000_40_00_ACC00_00_C, ________n____MMn__) == 0x0005B8, "Member 'UCRBP_0000_40_00_ACC00_00_C::________n____MMn__' has a wrong offset!");
static_assert(offsetof(UCRBP_0000_40_00_ACC00_00_C, ________n_____M_M_) == 0x0005C0, "Member 'UCRBP_0000_40_00_ACC00_00_C::________n_____M_M_' has a wrong offset!");
static_assert(offsetof(UCRBP_0000_40_00_ACC00_00_C, ________n__M____M_M_) == 0x0005C8, "Member 'UCRBP_0000_40_00_ACC00_00_C::________n__M____M_M_' has a wrong offset!");
static_assert(offsetof(UCRBP_0000_40_00_ACC00_00_C, Starp________Min_Star_M_) == 0x0005D0, "Member 'UCRBP_0000_40_00_ACC00_00_C::Starp________Min_Star_M_' has a wrong offset!");
static_assert(offsetof(UCRBP_0000_40_00_ACC00_00_C, Starp____n_______Star_M_) == 0x0005D8, "Member 'UCRBP_0000_40_00_ACC00_00_C::Starp____n_______Star_M_' has a wrong offset!");
static_assert(offsetof(UCRBP_0000_40_00_ACC00_00_C, Starp____n__Star_MMn___Star_M_) == 0x0005E0, "Member 'UCRBP_0000_40_00_ACC00_00_C::Starp____n__Star_MMn___Star_M_' has a wrong offset!");
static_assert(offsetof(UCRBP_0000_40_00_ACC00_00_C, Starp________Min_M_M_) == 0x0005E8, "Member 'UCRBP_0000_40_00_ACC00_00_C::Starp________Min_M_M_' has a wrong offset!");
static_assert(offsetof(UCRBP_0000_40_00_ACC00_00_C, Starp____n_______M_M_) == 0x0005F0, "Member 'UCRBP_0000_40_00_ACC00_00_C::Starp____n_______M_M_' has a wrong offset!");
static_assert(offsetof(UCRBP_0000_40_00_ACC00_00_C, Starp____n__Star_MMn___M_M_) == 0x0005F8, "Member 'UCRBP_0000_40_00_ACC00_00_C::Starp____n__Star_MMn___M_M_' has a wrong offset!");
static_assert(offsetof(UCRBP_0000_40_00_ACC00_00_C, Mp________Min_M_M_) == 0x000600, "Member 'UCRBP_0000_40_00_ACC00_00_C::Mp________Min_M_M_' has a wrong offset!");
static_assert(offsetof(UCRBP_0000_40_00_ACC00_00_C, Mp____n_______M_M_) == 0x000608, "Member 'UCRBP_0000_40_00_ACC00_00_C::Mp____n_______M_M_' has a wrong offset!");
static_assert(offsetof(UCRBP_0000_40_00_ACC00_00_C, Mp____n__Star_MMn___M_M_) == 0x000610, "Member 'UCRBP_0000_40_00_ACC00_00_C::Mp____n__Star_MMn___M_M_' has a wrong offset!");
static_assert(offsetof(UCRBP_0000_40_00_ACC00_00_C, Spine03_____) == 0x000618, "Member 'UCRBP_0000_40_00_ACC00_00_C::Spine03_____' has a wrong offset!");
static_assert(offsetof(UCRBP_0000_40_00_ACC00_00_C, Spine02_____) == 0x000620, "Member 'UCRBP_0000_40_00_ACC00_00_C::Spine02_____' has a wrong offset!");
static_assert(offsetof(UCRBP_0000_40_00_ACC00_00_C, Spine01_____) == 0x000628, "Member 'UCRBP_0000_40_00_ACC00_00_C::Spine01_____' has a wrong offset!");
static_assert(offsetof(UCRBP_0000_40_00_ACC00_00_C, __________) == 0x000630, "Member 'UCRBP_0000_40_00_ACC00_00_C::__________' has a wrong offset!");
static_assert(offsetof(UCRBP_0000_40_00_ACC00_00_C, ___________0) == 0x000638, "Member 'UCRBP_0000_40_00_ACC00_00_C::___________0' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass CRBP_0000_40_00_ACC00_00.RigVMMemory_Literal
// 0x0138 (0x0160 - 0x0028)
class CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal final : public URigVMMemoryStorage
{
public:
	struct FRigElementKey                         RigVMModel___SetTransform_Item__Const;             // 0x0028(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EBoneGetterSetterMode                         RigVMModel___SetTransform_Space__Const;            // 0x0034(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___SetTransform_bInitial__Const : 1;     // 0x0035(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   RigVMModel___GetControlTransform_Control__Const;   // 0x0038(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___SetTransform_Weight__Const;           // 0x0040(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___SetTransform_bPropagateToChildren__Const : 1; // 0x0044(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigElementKey                         RigVMModel___SetTransform_2_Item__Const;           // 0x0048(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___GetControlTransform_2_Control__Const; // 0x0054(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetTransform_2_1_1_1_Item__Const;     // 0x005C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___SetTransform_2_1_1_1_Value__Const;    // 0x0070(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_1_1_Value__Const; // 0x00D0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	EBoneGetterSetterMode                         RigVMModel___RigUnit_GetTransform_1_1_Space__Const; // 0x00E8(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___MathFloatAdd_2_1_B__Const;            // 0x00EC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetRotation_4_1_1_Item__Const;        // 0x00F0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_Item__Const; // 0x00FC(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathQuaternionSwingTwist_1_1_1_2_TwistAxis__Const; // 0x0108(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMin_2_B__Const;              // 0x0120(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___SetRotation_4_1_1_Weight__Const;      // 0x0124(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetRotation_4_1_1_1_1_3_Item__Const;  // 0x0128(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_4_1_Item__Const; // 0x0134(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_1_4_1_B__Const;          // 0x0140(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetRotation_4_1_1_1_1_3_1_Item__Const; // 0x0144(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_4_1_1_Item__Const; // 0x0150(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_1_4_1_2_B__Const;        // 0x015C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass CRBP_0000_40_00_ACC00_00.RigVMMemory_Literal", true>();
	}
	static class CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal* GetDefaultObj()
	{
		return GetDefaultObjImpl<CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal>();
	}
};
static_assert(alignof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal) == 0x000010, "Wrong alignment on CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal");
static_assert(sizeof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal) == 0x000160, "Wrong size on CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal, RigVMModel___SetTransform_Item__Const) == 0x000028, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal::RigVMModel___SetTransform_Item__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal, RigVMModel___SetTransform_Space__Const) == 0x000034, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal::RigVMModel___SetTransform_Space__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal, RigVMModel___GetControlTransform_Control__Const) == 0x000038, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal::RigVMModel___GetControlTransform_Control__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal, RigVMModel___SetTransform_Weight__Const) == 0x000040, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal::RigVMModel___SetTransform_Weight__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal, RigVMModel___SetTransform_2_Item__Const) == 0x000048, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal::RigVMModel___SetTransform_2_Item__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal, RigVMModel___GetControlTransform_2_Control__Const) == 0x000054, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal::RigVMModel___GetControlTransform_2_Control__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal, RigVMModel___SetTransform_2_1_1_1_Item__Const) == 0x00005C, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal::RigVMModel___SetTransform_2_1_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal, RigVMModel___SetTransform_2_1_1_1_Value__Const) == 0x000070, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal::RigVMModel___SetTransform_2_1_1_1_Value__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal, RigVMModel___MathQuaternionFromRotator_1_1_Value__Const) == 0x0000D0, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal::RigVMModel___MathQuaternionFromRotator_1_1_Value__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_1_1_Space__Const) == 0x0000E8, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_1_1_Space__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal, RigVMModel___MathFloatAdd_2_1_B__Const) == 0x0000EC, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal::RigVMModel___MathFloatAdd_2_1_B__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal, RigVMModel___SetRotation_4_1_1_Item__Const) == 0x0000F0, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal::RigVMModel___SetRotation_4_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_Item__Const) == 0x0000FC, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal, RigVMModel___MathQuaternionSwingTwist_1_1_1_2_TwistAxis__Const) == 0x000108, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal::RigVMModel___MathQuaternionSwingTwist_1_1_1_2_TwistAxis__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal, RigVMModel___MathFloatMin_2_B__Const) == 0x000120, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal::RigVMModel___MathFloatMin_2_B__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal, RigVMModel___SetRotation_4_1_1_Weight__Const) == 0x000124, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal::RigVMModel___SetRotation_4_1_1_Weight__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal, RigVMModel___SetRotation_4_1_1_1_1_3_Item__Const) == 0x000128, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal::RigVMModel___SetRotation_4_1_1_1_1_3_Item__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_4_1_Item__Const) == 0x000134, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_4_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal, RigVMModel___MathFloatAdd_1_4_1_B__Const) == 0x000140, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal::RigVMModel___MathFloatAdd_1_4_1_B__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal, RigVMModel___SetRotation_4_1_1_1_1_3_1_Item__Const) == 0x000144, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal::RigVMModel___SetRotation_4_1_1_1_1_3_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_4_1_1_Item__Const) == 0x000150, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_4_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal, RigVMModel___MathFloatAdd_1_4_1_2_B__Const) == 0x00015C, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Literal::RigVMModel___MathFloatAdd_1_4_1_2_B__Const' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass CRBP_0000_40_00_ACC00_00.RigVMMemory_Work
// 0x0988 (0x09B0 - 0x0028)
class CRBP_0000_40_00_ACC00_00::URigVMMemory_Work final : public URigVMMemoryStorage
{
public:
	struct FControlRigExecuteContext              ExecuteContext_;                                   // 0x0028(0x0038)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetControlTransform_Transform;        // 0x0060(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetControlTransform_Minimum;          // 0x00C0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetControlTransform_Maximum;          // 0x0120(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetControlTransform_CachedControlIndex; // 0x0180(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___SetTransform_CachedIndex;             // 0x0190(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetControlTransform_2_Transform;      // 0x01A0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetControlTransform_2_Minimum;        // 0x0200(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetControlTransform_2_Maximum;        // 0x0260(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetControlTransform_2_CachedControlIndex; // 0x02C0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___SetTransform_2_CachedIndex;           // 0x02D0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_1_1_Result; // 0x02E0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_1_1_Result;   // 0x0300(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_318[0x8];                                      // 0x0318(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_1_1_Transform;   // 0x0320(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_1_1_CachedIndex; // 0x0380(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_1_1_Value;    // 0x0390(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_2_1_Result;              // 0x03B0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_2_1_A;                   // 0x03B4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_1_1_Value__IO; // 0x03B8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___SetTransform_2_1_1_1_Value__IO;       // 0x03D0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetTransform_2_1_1_1_CachedIndex;     // 0x0430(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_Result; // 0x0440(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_Transform; // 0x0460(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_CachedIndex; // 0x04C0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_A; // 0x04D0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_2_3_Result; // 0x04F0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_2_3_Result;   // 0x0510(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_528[0x8];                                      // 0x0528(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_1_1_1_2_Twist; // 0x0530(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_1_1_2_1_Transform;       // 0x0550(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_1_1_2_1_CachedIndex;     // 0x05B0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_1_1_1_2_Input; // 0x05C0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_1_1_1_2_Swing; // 0x05E0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMin_2_Result;                // 0x0600(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMin_2_A;                     // 0x0604(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_2_3_Value__IO; // 0x0608(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_4_1_1_CachedIndex;        // 0x0620(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_3_1_Result; // 0x0630(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_2_Result;   // 0x0650(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_2_Result;     // 0x0670(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_688[0x8];                                      // 0x0688(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_1_1_1_Twist; // 0x0690(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_1_1_Transform;           // 0x06B0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_1_1_CachedIndex;         // 0x0710(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_1_1_1_Input; // 0x0720(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_1_1_1_Swing; // 0x0740(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMin_Result;                  // 0x0760(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMin_A;                       // 0x0764(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_2_Value__IO; // 0x0768(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_4_2_CachedIndex;          // 0x0780(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_2_3_1_1_1_4_1_Result; // 0x0790(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_1_4_1_Result;            // 0x07B0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B4[0x4];                                      // 0x07B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionToRotator_2_3_1_1_1_4_1_Result; // 0x07B8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_4_1_Transform; // 0x07D0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_4_1_CachedIndex; // 0x0830(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_2_3_1_1_1_4_1_Value; // 0x0840(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_1_4_1_A;                 // 0x0860(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_1_4_1_1_1_Result;        // 0x0864(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_1_4_1_1_1_A;             // 0x0868(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_1_4_1_1_Result;          // 0x086C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_1_4_1_1_A;               // 0x0870(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_874[0x4];                                      // 0x0874(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_2_3_1_1_1_4_1_Value__IO; // 0x0878(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_4_1_1_1_1_3_CachedIndex;  // 0x0890(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_2_3_1_1_1_4_1_1_Result; // 0x08A0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_1_4_1_2_Result;          // 0x08C0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C4[0x4];                                      // 0x08C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionToRotator_2_3_1_1_1_4_1_1_Result; // 0x08C8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_4_1_1_Transform; // 0x08E0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_4_1_1_CachedIndex; // 0x0940(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_2_3_1_1_1_4_1_1_Value; // 0x0950(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_1_4_1_2_A;               // 0x0970(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_1_4_1_1_1_1_Result;      // 0x0974(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_1_4_1_1_1_1_A;           // 0x0978(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_1_4_1_1_2_Result;        // 0x097C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_1_4_1_1_2_A;             // 0x0980(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_984[0x4];                                      // 0x0984(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_2_3_1_1_1_4_1_1_Value__IO; // 0x0988(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_4_1_1_1_1_3_1_CachedIndex; // 0x09A0(0x0010)(Edit, EditConst, NonTransactional)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass CRBP_0000_40_00_ACC00_00.RigVMMemory_Work", true>();
	}
	static class CRBP_0000_40_00_ACC00_00::URigVMMemory_Work* GetDefaultObj()
	{
		return GetDefaultObjImpl<CRBP_0000_40_00_ACC00_00::URigVMMemory_Work>();
	}
};
static_assert(alignof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work) == 0x000010, "Wrong alignment on CRBP_0000_40_00_ACC00_00::URigVMMemory_Work");
static_assert(sizeof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work) == 0x0009B0, "Wrong size on CRBP_0000_40_00_ACC00_00::URigVMMemory_Work");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, ExecuteContext_) == 0x000028, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::ExecuteContext_' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___GetControlTransform_Transform) == 0x000060, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___GetControlTransform_Transform' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___GetControlTransform_Minimum) == 0x0000C0, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___GetControlTransform_Minimum' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___GetControlTransform_Maximum) == 0x000120, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___GetControlTransform_Maximum' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___GetControlTransform_CachedControlIndex) == 0x000180, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___GetControlTransform_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___SetTransform_CachedIndex) == 0x000190, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___SetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___GetControlTransform_2_Transform) == 0x0001A0, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___GetControlTransform_2_Transform' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___GetControlTransform_2_Minimum) == 0x000200, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___GetControlTransform_2_Minimum' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___GetControlTransform_2_Maximum) == 0x000260, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___GetControlTransform_2_Maximum' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___GetControlTransform_2_CachedControlIndex) == 0x0002C0, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___GetControlTransform_2_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___SetTransform_2_CachedIndex) == 0x0002D0, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___SetTransform_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_1_1_Result) == 0x0002E0, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_1_1_Result) == 0x000300, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_1_Transform) == 0x000320, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_1_Transform' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_1_CachedIndex) == 0x000380, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_1_1_Value) == 0x000390, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_1_1_Value' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathFloatAdd_2_1_Result) == 0x0003B0, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathFloatAdd_2_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathFloatAdd_2_1_A) == 0x0003B4, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathFloatAdd_2_1_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_1_1_Value__IO) == 0x0003B8, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_1_1_Value__IO' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___SetTransform_2_1_1_1_Value__IO) == 0x0003D0, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___SetTransform_2_1_1_1_Value__IO' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___SetTransform_2_1_1_1_CachedIndex) == 0x000430, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___SetTransform_2_1_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_Result) == 0x000440, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_Transform) == 0x000460, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_Transform' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_CachedIndex) == 0x0004C0, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_A) == 0x0004D0, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_3_Result) == 0x0004F0, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_3_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_2_3_Result) == 0x000510, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_2_3_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_1_1_1_2_Twist) == 0x000530, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_1_1_1_2_Twist' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___GetTransform_1_1_2_1_Transform) == 0x000550, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___GetTransform_1_1_2_1_Transform' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___GetTransform_1_1_2_1_CachedIndex) == 0x0005B0, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___GetTransform_1_1_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_1_1_1_2_Input) == 0x0005C0, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_1_1_1_2_Input' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_1_1_1_2_Swing) == 0x0005E0, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_1_1_1_2_Swing' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathFloatMin_2_Result) == 0x000600, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathFloatMin_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathFloatMin_2_A) == 0x000604, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathFloatMin_2_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_3_Value__IO) == 0x000608, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_3_Value__IO' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___SetRotation_4_1_1_CachedIndex) == 0x000620, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___SetRotation_4_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_3_1_Result) == 0x000630, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_3_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_Result) == 0x000650, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_2_Result) == 0x000670, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_1_1_1_Twist) == 0x000690, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_1_1_1_Twist' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___GetTransform_1_1_Transform) == 0x0006B0, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___GetTransform_1_1_Transform' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___GetTransform_1_1_CachedIndex) == 0x000710, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___GetTransform_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_1_1_1_Input) == 0x000720, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_1_1_1_Input' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_1_1_1_Swing) == 0x000740, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_1_1_1_Swing' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathFloatMin_Result) == 0x000760, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathFloatMin_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathFloatMin_A) == 0x000764, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathFloatMin_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_Value__IO) == 0x000768, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_Value__IO' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___SetRotation_4_2_CachedIndex) == 0x000780, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___SetRotation_4_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_3_1_1_1_4_1_Result) == 0x000790, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_3_1_1_1_4_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathFloatAdd_1_4_1_Result) == 0x0007B0, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathFloatAdd_1_4_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_2_3_1_1_1_4_1_Result) == 0x0007B8, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_2_3_1_1_1_4_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_4_1_Transform) == 0x0007D0, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_4_1_Transform' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_4_1_CachedIndex) == 0x000830, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_4_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_2_3_1_1_1_4_1_Value) == 0x000840, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_2_3_1_1_1_4_1_Value' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathFloatAdd_1_4_1_A) == 0x000860, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathFloatAdd_1_4_1_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathFloatAdd_1_4_1_1_1_Result) == 0x000864, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathFloatAdd_1_4_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathFloatAdd_1_4_1_1_1_A) == 0x000868, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathFloatAdd_1_4_1_1_1_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathFloatAdd_1_4_1_1_Result) == 0x00086C, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathFloatAdd_1_4_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathFloatAdd_1_4_1_1_A) == 0x000870, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathFloatAdd_1_4_1_1_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_3_1_1_1_4_1_Value__IO) == 0x000878, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_3_1_1_1_4_1_Value__IO' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___SetRotation_4_1_1_1_1_3_CachedIndex) == 0x000890, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___SetRotation_4_1_1_1_1_3_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_3_1_1_1_4_1_1_Result) == 0x0008A0, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_3_1_1_1_4_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathFloatAdd_1_4_1_2_Result) == 0x0008C0, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathFloatAdd_1_4_1_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_2_3_1_1_1_4_1_1_Result) == 0x0008C8, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_2_3_1_1_1_4_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_4_1_1_Transform) == 0x0008E0, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_4_1_1_Transform' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_4_1_1_CachedIndex) == 0x000940, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_4_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_2_3_1_1_1_4_1_1_Value) == 0x000950, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_2_3_1_1_1_4_1_1_Value' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathFloatAdd_1_4_1_2_A) == 0x000970, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathFloatAdd_1_4_1_2_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathFloatAdd_1_4_1_1_1_1_Result) == 0x000974, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathFloatAdd_1_4_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathFloatAdd_1_4_1_1_1_1_A) == 0x000978, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathFloatAdd_1_4_1_1_1_1_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathFloatAdd_1_4_1_1_2_Result) == 0x00097C, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathFloatAdd_1_4_1_1_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathFloatAdd_1_4_1_1_2_A) == 0x000980, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathFloatAdd_1_4_1_1_2_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_3_1_1_1_4_1_1_Value__IO) == 0x000988, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_3_1_1_1_4_1_1_Value__IO' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_ACC00_00::URigVMMemory_Work, RigVMModel___SetRotation_4_1_1_1_1_3_1_CachedIndex) == 0x0009A0, "Member 'CRBP_0000_40_00_ACC00_00::URigVMMemory_Work::RigVMModel___SetRotation_4_1_1_1_1_3_1_CachedIndex' has a wrong offset!");

}

