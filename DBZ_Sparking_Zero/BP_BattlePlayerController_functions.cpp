#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattlePlayerController

#include "Basic.hpp"

#include "BP_BattlePlayerController_classes.hpp"
#include "BP_BattlePlayerController_parameters.hpp"


namespace SDK
{

// Function BP_BattlePlayerController.BP_BattlePlayerController_C.AddMovementInputXY
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        InputVector                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         MovementRotation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BattlePlayerController_C::AddMovementInputXY(const struct FVector2D& InputVector, const struct FRotator& MovementRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "AddMovementInputXY");

	Params::BP_BattlePlayerController_C_AddMovementInputXY Parms{};

	Parms.InputVector = std::move(InputVector);
	Parms.MovementRotation = std::move(MovementRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.AddMovementInputZ
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BattlePlayerController_C::AddMovementInputZ(double AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "AddMovementInputZ");

	Params::BP_BattlePlayerController_C_AddMovementInputZ Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.DebugInputPlayer
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BattlePlayerController_C::DebugInputPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "DebugInputPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.ExecuteInputProcess
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BattlePlayerController_C::ExecuteInputProcess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "ExecuteInputProcess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.ExecuteUbergraph_BP_BattlePlayerController
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BattlePlayerController_C::ExecuteUbergraph_BP_BattlePlayerController(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "ExecuteUbergraph_BP_BattlePlayerController");

	Params::BP_BattlePlayerController_C_ExecuteUbergraph_BP_BattlePlayerController Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.GetFreeCameraRotationInputVector
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        InputVector                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BattlePlayerController_C::GetFreeCameraRotationInputVector(bool* IsValid, struct FVector2D* InputVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "GetFreeCameraRotationInputVector");

	Params::BP_BattlePlayerController_C_GetFreeCameraRotationInputVector Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	if (InputVector != nullptr)
		*InputVector = std::move(Parms.InputVector);
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.GetMovementInputVector
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        InputVector                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BattlePlayerController_C::GetMovementInputVector(bool* IsValid, struct FVector2D* InputVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "GetMovementInputVector");

	Params::BP_BattlePlayerController_C_GetMovementInputVector Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	if (InputVector != nullptr)
		*InputVector = std::move(Parms.InputVector);
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.GetMovementInputZ
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  AxisValue                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BattlePlayerController_C::GetMovementInputZ(double* AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "GetMovementInputZ");

	Params::BP_BattlePlayerController_C_GetMovementInputZ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AxisValue != nullptr)
		*AxisValue = Parms.AxisValue;
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.GetMovementRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        InputVector                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         MovementRotation                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BattlePlayerController_C::GetMovementRotation(const struct FVector2D& InputVector, struct FRotator* MovementRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "GetMovementRotation");

	Params::BP_BattlePlayerController_C_GetMovementRotation Parms{};

	Parms.InputVector = std::move(InputVector);

	UObject::ProcessEvent(Func, &Parms);

	if (MovementRotation != nullptr)
		*MovementRotation = std::move(Parms.MovementRotation);
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.InputAction
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BattlePlayerController_C::InputAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "InputAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.InputBlowReaction
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BattlePlayerController_C::InputBlowReaction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "InputBlowReaction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.InputDashUpDown
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BattlePlayerController_C::InputDashUpDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "InputDashUpDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.InputDebug
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BattlePlayerController_C::InputDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "InputDebug");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.InputDragonDash
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BattlePlayerController_C::InputDragonDash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "InputDragonDash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.InputDragonHoming
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BattlePlayerController_C::InputDragonHoming()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "InputDragonHoming");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.InputFreeCameraRotateYawPitch
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BattlePlayerController_C::InputFreeCameraRotateYawPitch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "InputFreeCameraRotateYawPitch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.InputJump
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BattlePlayerController_C::InputJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "InputJump");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.InputMovement
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BattlePlayerController_C::InputMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "InputMovement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.InputMoveXY
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BattlePlayerController_C::InputMoveXY()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "InputMoveXY");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.InputMoveZ
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BattlePlayerController_C::InputMoveZ()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "InputMoveZ");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.InputPlayer
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BattlePlayerController_C::InputPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "InputPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.InputStep
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BattlePlayerController_C::InputStep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "InputStep");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.IsInputBattleKeyDown
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBattleKey                              BattleKey                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDown                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BattlePlayerController_C::IsInputBattleKeyDown(EBattleKey BattleKey, bool* IsDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "IsInputBattleKeyDown");

	Params::BP_BattlePlayerController_C_IsInputBattleKeyDown Parms{};

	Parms.BattleKey = BattleKey;

	UObject::ProcessEvent(Func, &Parms);

	if (IsDown != nullptr)
		*IsDown = Parms.IsDown;
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.IsInputKoratBattleKeyDown
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratBattleKey                         BattleKey                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDown                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BattlePlayerController_C::IsInputKoratBattleKeyDown(EKoratBattleKey BattleKey, bool* IsDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "IsInputKoratBattleKeyDown");

	Params::BP_BattlePlayerController_C_IsInputKoratBattleKeyDown Parms{};

	Parms.BattleKey = BattleKey;

	UObject::ProcessEvent(Func, &Parms);

	if (IsDown != nullptr)
		*IsDown = Parms.IsDown;
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_BattlePlayerController_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.ReceivePossess
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APawn*                            PossessedPawn                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_BattlePlayerController_C::ReceivePossess(class APawn* PossessedPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "ReceivePossess");

	Params::BP_BattlePlayerController_C_ReceivePossess Parms{};

	Parms.PossessedPawn = PossessedPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BattlePlayerController_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "ReceiveTick");

	Params::BP_BattlePlayerController_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.SendInputBattleKeyJustPressed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBattleKey                              BattleKey                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BattlePlayerController_C::SendInputBattleKeyJustPressed(EBattleKey BattleKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "SendInputBattleKeyJustPressed");

	Params::BP_BattlePlayerController_C_SendInputBattleKeyJustPressed Parms{};

	Parms.BattleKey = BattleKey;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.SendInputBattleKeyJustReleased
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBattleKey                              BattleKey                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BattlePlayerController_C::SendInputBattleKeyJustReleased(EBattleKey BattleKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "SendInputBattleKeyJustReleased");

	Params::BP_BattlePlayerController_C_SendInputBattleKeyJustReleased Parms{};

	Parms.BattleKey = BattleKey;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.SendInputKoratBattleKeyDown
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratBattleKey                         BattleKey                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BattlePlayerController_C::SendInputKoratBattleKeyDown(EKoratBattleKey BattleKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "SendInputKoratBattleKeyDown");

	Params::BP_BattlePlayerController_C_SendInputKoratBattleKeyDown Parms{};

	Parms.BattleKey = BattleKey;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.SendInputKoratBattleKeyJustPressed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratBattleKey                         BattleKey                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BattlePlayerController_C::SendInputKoratBattleKeyJustPressed(EKoratBattleKey BattleKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "SendInputKoratBattleKeyJustPressed");

	Params::BP_BattlePlayerController_C_SendInputKoratBattleKeyJustPressed Parms{};

	Parms.BattleKey = BattleKey;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.SendInputKoratBattleKeyJustReleased
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratBattleKey                         BattleKey                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BattlePlayerController_C::SendInputKoratBattleKeyJustReleased(EKoratBattleKey BattleKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "SendInputKoratBattleKeyJustReleased");

	Params::BP_BattlePlayerController_C_SendInputKoratBattleKeyJustReleased Parms{};

	Parms.BattleKey = BattleKey;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.StartKeyInputReplay
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BattlePlayerController_C::StartKeyInputReplay(int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "StartKeyInputReplay");

	Params::BP_BattlePlayerController_C_StartKeyInputReplay Parms{};

	Parms.PlayerIndex = PlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.StartKeyInputSave
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BattlePlayerController_C::StartKeyInputSave(int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "StartKeyInputSave");

	Params::BP_BattlePlayerController_C_StartKeyInputSave Parms{};

	Parms.PlayerIndex = PlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.UpdateHeightAxisValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsUpward                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BattlePlayerController_C::UpdateHeightAxisValue(bool IsUpward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "UpdateHeightAxisValue");

	Params::BP_BattlePlayerController_C_UpdateHeightAxisValue Parms{};

	Parms.IsUpward = IsUpward;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.WasInputBattleKeyJustPressed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBattleKey                              BattleKey                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPressed                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BattlePlayerController_C::WasInputBattleKeyJustPressed(EBattleKey BattleKey, bool* IsPressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "WasInputBattleKeyJustPressed");

	Params::BP_BattlePlayerController_C_WasInputBattleKeyJustPressed Parms{};

	Parms.BattleKey = BattleKey;

	UObject::ProcessEvent(Func, &Parms);

	if (IsPressed != nullptr)
		*IsPressed = Parms.IsPressed;
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.WasInputBattleKeyJustReleased
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBattleKey                              BattleKey                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsReleased                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BattlePlayerController_C::WasInputBattleKeyJustReleased(EBattleKey BattleKey, bool* IsReleased)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "WasInputBattleKeyJustReleased");

	Params::BP_BattlePlayerController_C_WasInputBattleKeyJustReleased Parms{};

	Parms.BattleKey = BattleKey;

	UObject::ProcessEvent(Func, &Parms);

	if (IsReleased != nullptr)
		*IsReleased = Parms.IsReleased;
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.WasInputKoratBattleKeyJustPressed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratBattleKey                         BattleKey                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPressed                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BattlePlayerController_C::WasInputKoratBattleKeyJustPressed(EKoratBattleKey BattleKey, bool* IsPressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "WasInputKoratBattleKeyJustPressed");

	Params::BP_BattlePlayerController_C_WasInputKoratBattleKeyJustPressed Parms{};

	Parms.BattleKey = BattleKey;

	UObject::ProcessEvent(Func, &Parms);

	if (IsPressed != nullptr)
		*IsPressed = Parms.IsPressed;
}


// Function BP_BattlePlayerController.BP_BattlePlayerController_C.WasInputKoratBattleKeyJustReleased
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratBattleKey                         BattleKey                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsReleased                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BattlePlayerController_C::WasInputKoratBattleKeyJustReleased(EKoratBattleKey BattleKey, bool* IsReleased)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattlePlayerController_C", "WasInputKoratBattleKeyJustReleased");

	Params::BP_BattlePlayerController_C_WasInputKoratBattleKeyJustReleased Parms{};

	Parms.BattleKey = BattleKey;

	UObject::ProcessEvent(Func, &Parms);

	if (IsReleased != nullptr)
		*IsReleased = Parms.IsReleased;
}

}

