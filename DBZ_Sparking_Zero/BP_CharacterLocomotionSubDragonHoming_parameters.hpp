#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterLocomotionSubDragonHoming

#include "Basic.hpp"

#include "ECharacterLocomotionEventType_structs.hpp"
#include "SS_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EAnimStateMachineEventType_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.CanHomingChase
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_CanHomingChase final
{
public:
	struct FVector                                CallFunc_GetTargetLocation_ReturnValue;            // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_CanHomingChase) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_CanHomingChase");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_CanHomingChase) == 0x000018, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_CanHomingChase");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CanHomingChase, CallFunc_GetTargetLocation_ReturnValue) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CanHomingChase::CallFunc_GetTargetLocation_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.CanNotHomingChase
// 0x0048 (0x0048 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_CanNotHomingChase final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetMyLocation_ReturnValue;                // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_CanNotHomingChase) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_CanNotHomingChase");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_CanNotHomingChase) == 0x000048, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_CanNotHomingChase");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CanNotHomingChase, ReturnValue) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CanNotHomingChase::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CanNotHomingChase, CallFunc_GetMyLocation_ReturnValue) == 0x000008, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CanNotHomingChase::CallFunc_GetMyLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CanNotHomingChase, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000020, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CanNotHomingChase::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CanNotHomingChase, CallFunc_VSize_ReturnValue) == 0x000038, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CanNotHomingChase::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CanNotHomingChase, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CanNotHomingChase::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.ChangeHomingStatus
// 0x0028 (0x0028 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_ChangeHomingStatus final
{
public:
	EKoratDragonHomingState                       InDragonHomingStatus;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterActionFinishReason             InActionFinishReason;                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHomingStateMovementParameter_IsUseParameter; // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratCharacterDataDragonDashMovementParameter CallFunc_GetHomingStateMovementParameter_MovementParameter; // 0x0008(0x0020)(NoDestructor)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_ChangeHomingStatus) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_ChangeHomingStatus");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_ChangeHomingStatus) == 0x000028, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_ChangeHomingStatus");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_ChangeHomingStatus, InDragonHomingStatus) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_ChangeHomingStatus::InDragonHomingStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_ChangeHomingStatus, InActionFinishReason) == 0x000001, "Member 'BP_CharacterLocomotionSubDragonHoming_C_ChangeHomingStatus::InActionFinishReason' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_ChangeHomingStatus, CallFunc_GetHomingStateMovementParameter_IsUseParameter) == 0x000002, "Member 'BP_CharacterLocomotionSubDragonHoming_C_ChangeHomingStatus::CallFunc_GetHomingStateMovementParameter_IsUseParameter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_ChangeHomingStatus, CallFunc_GetHomingStateMovementParameter_MovementParameter) == 0x000008, "Member 'BP_CharacterLocomotionSubDragonHoming_C_ChangeHomingStatus::CallFunc_GetHomingStateMovementParameter_MovementParameter' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.CheckAndStart
// 0x0020 (0x0020 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_CheckAndStart final
{
public:
	class UBP_CharacterLocomotionComponent_C*     InLocomotionComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          InInSkip;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStarted;                                         // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartCheckSPConsumableHomingIN_IsOK;      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Start_Is_Enable_Homing_IsEnable;          // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Start_NewParam;                           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckAndStart_IsStarted;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_CheckAndStart) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_CheckAndStart");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_CheckAndStart) == 0x000020, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_CheckAndStart");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckAndStart, InLocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckAndStart::InLocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckAndStart, InInSkip) == 0x000008, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckAndStart::InInSkip' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckAndStart, IsStarted) == 0x000009, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckAndStart::IsStarted' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckAndStart, CallFunc_StartCheckSPConsumableHomingIN_IsOK) == 0x00000A, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckAndStart::CallFunc_StartCheckSPConsumableHomingIN_IsOK' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckAndStart, CallFunc_Start_Is_Enable_Homing_IsEnable) == 0x00000B, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckAndStart::CallFunc_Start_Is_Enable_Homing_IsEnable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckAndStart, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000010, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckAndStart::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckAndStart, CallFunc_Start_NewParam) == 0x000018, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckAndStart::CallFunc_Start_NewParam' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckAndStart, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckAndStart::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckAndStart, CallFunc_CheckAndStart_IsStarted) == 0x00001A, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckAndStart::CallFunc_CheckAndStart_IsStarted' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.CheckHomingEnd
// 0x0028 (0x0028 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEnd final
{
public:
	double                                        InDeltaSeconds;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InIsCanChase;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEnd;                                             // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        End0AngleHalfMinus;                                // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        End0AngleHalfPlus;                                 // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckHomingEndSP_IsEnd;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckHomingEndCanChase_IsEnd;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEnd) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEnd");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEnd) == 0x000028, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEnd");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEnd, InDeltaSeconds) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEnd::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEnd, InIsCanChase) == 0x000008, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEnd::InIsCanChase' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEnd, IsEnd) == 0x000009, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEnd::IsEnd' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEnd, End0AngleHalfMinus) == 0x000010, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEnd::End0AngleHalfMinus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEnd, End0AngleHalfPlus) == 0x000018, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEnd::End0AngleHalfPlus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEnd, CallFunc_CheckHomingEndSP_IsEnd) == 0x000020, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEnd::CallFunc_CheckHomingEndSP_IsEnd' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEnd, CallFunc_CheckHomingEndCanChase_IsEnd) == 0x000021, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEnd::CallFunc_CheckHomingEndCanChase_IsEnd' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.CheckHomingEndCanChase
// 0x0050 (0x0050 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase final
{
public:
	bool                                          InIsCanChase;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEnd;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         CallFunc_GetLocomotionDetailStatus_LocomotionDetailStatus; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanNotHomingChase_ReturnValue;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue_1;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase) == 0x000050, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase, InIsCanChase) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase::InIsCanChase' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase, IsEnd) == 0x000001, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase::IsEnd' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000008, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase, CallFunc_GetLocomotionDetailStatus_LocomotionDetailStatus) == 0x000010, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase::CallFunc_GetLocomotionDetailStatus_LocomotionDetailStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase, CallFunc_GetSplineLength_ReturnValue) == 0x000014, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000028, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000029, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00002A, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase, CallFunc_BooleanOR_ReturnValue) == 0x00002B, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase, CallFunc_CanNotHomingChase_ReturnValue) == 0x00002C, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase::CallFunc_CanNotHomingChase_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase, CallFunc_BooleanOR_ReturnValue_1) == 0x00002D, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase, CallFunc_Not_PreBool_ReturnValue) == 0x00002E, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000030, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase, CallFunc_GetSplineLength_ReturnValue_1) == 0x000038, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase::CallFunc_GetSplineLength_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x00003C, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000040, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x000048, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndCanChase::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.CheckHomingEndSP
// 0x0028 (0x0028 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndSP final
{
public:
	bool                                          IsEnd;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckSPCosumable_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndSP) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndSP");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndSP) == 0x000028, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndSP");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndSP, IsEnd) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndSP::IsEnd' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndSP, CallFunc_GetSSCharacter_SSCharacter) == 0x000008, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndSP::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndSP, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000010, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndSP::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndSP, CallFunc_CheckSPCosumable_ReturnValue) == 0x000018, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndSP::CallFunc_CheckSPCosumable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndSP, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndSP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndSP, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00001A, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndSP::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndSP, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndSP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndSP, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000020, "Member 'BP_CharacterLocomotionSubDragonHoming_C_CheckHomingEndSP::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.ConsumeSPHomingIN
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_ConsumeSPHomingIN final
{
public:
	bool                                          IsSuccessfully;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_ConsumeSPHomingIN) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_ConsumeSPHomingIN");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_ConsumeSPHomingIN) == 0x000018, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_ConsumeSPHomingIN");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_ConsumeSPHomingIN, IsSuccessfully) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_ConsumeSPHomingIN::IsSuccessfully' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_ConsumeSPHomingIN, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000008, "Member 'BP_CharacterLocomotionSubDragonHoming_C_ConsumeSPHomingIN::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_ConsumeSPHomingIN, CallFunc_GetSSCharacter_SSCharacter) == 0x000010, "Member 'BP_CharacterLocomotionSubDragonHoming_C_ConsumeSPHomingIN::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.ConsumeSPHomingLP
// 0x0030 (0x0030 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_ConsumeSPHomingLP final
{
public:
	bool                                          IsSuccessfully;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ConsumeSP_InSpCost_ImplicitCast;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_ConsumeSPHomingLP) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_ConsumeSPHomingLP");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_ConsumeSPHomingLP) == 0x000030, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_ConsumeSPHomingLP");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_ConsumeSPHomingLP, IsSuccessfully) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_ConsumeSPHomingLP::IsSuccessfully' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_ConsumeSPHomingLP, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000008, "Member 'BP_CharacterLocomotionSubDragonHoming_C_ConsumeSPHomingLP::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_ConsumeSPHomingLP, CallFunc_GetSSCharacter_SSCharacter) == 0x000010, "Member 'BP_CharacterLocomotionSubDragonHoming_C_ConsumeSPHomingLP::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_ConsumeSPHomingLP, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_CharacterLocomotionSubDragonHoming_C_ConsumeSPHomingLP::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_ConsumeSPHomingLP, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000020, "Member 'BP_CharacterLocomotionSubDragonHoming_C_ConsumeSPHomingLP::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_ConsumeSPHomingLP, CallFunc_ConsumeSP_InSpCost_ImplicitCast) == 0x000028, "Member 'BP_CharacterLocomotionSubDragonHoming_C_ConsumeSPHomingLP::CallFunc_ConsumeSP_InSpCost_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.GetHomingStateMovementParameter
// 0x00E8 (0x00E8 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter final
{
public:
	EKoratDragonHomingState                       InStatus;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUseParameter;                                    // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratCharacterDataDragonDashMovementParameter MovementParameter;                                 // 0x0008(0x0020)(Parm, OutParm, NoDestructor)
	struct FKoratCharacterDataDragonDashMovementParameter Temp_struct_Variable;                              // 0x0028(0x0020)(NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratCharacterDataDragonDashMovementParameter Temp_struct_Variable_1;                            // 0x0050(0x0020)(NoDestructor)
	struct FKoratCharacterDataDragonDashMovementParameter Temp_struct_Variable_2;                            // 0x0070(0x0020)(NoDestructor)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EKoratDragonHomingState                       Temp_byte_Variable;                                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratCharacterDataDragonDashMovementParameter K2Node_Select_Default;                             // 0x00A0(0x0020)(NoDestructor)
	struct FKoratCharacterDataDragonDashMovementParameter K2Node_Select_Default_1;                           // 0x00C0(0x0020)(NoDestructor)
	bool                                          K2Node_Select_Default_2;                           // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter) == 0x0000E8, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter, InStatus) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter::InStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter, IsUseParameter) == 0x000001, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter::IsUseParameter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter, MovementParameter) == 0x000008, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter::MovementParameter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter, Temp_struct_Variable) == 0x000028, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000048, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000049, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter, Temp_bool_Variable) == 0x00004A, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter, CallFunc_BooleanAND_ReturnValue) == 0x00004B, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter, Temp_bool_Variable_1) == 0x00004C, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter, Temp_bool_Variable_2) == 0x00004D, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter, Temp_struct_Variable_1) == 0x000050, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter, Temp_struct_Variable_2) == 0x000070, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000090, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter, Temp_byte_Variable) == 0x000098, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter, K2Node_Select_Default) == 0x0000A0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter, K2Node_Select_Default_1) == 0x0000C0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter, K2Node_Select_Default_2) == 0x0000E0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetHomingStateMovementParameter::K2Node_Select_Default_2' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.GetLocomotionDetailStatus
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_GetLocomotionDetailStatus final
{
public:
	EKoratCharacterLocomotionDetailStatus         LocomotionDetailStatus;                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratDragonHomingState                       Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_5;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_GetLocomotionDetailStatus) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_GetLocomotionDetailStatus");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_GetLocomotionDetailStatus) == 0x000008, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_GetLocomotionDetailStatus");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetLocomotionDetailStatus, LocomotionDetailStatus) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetLocomotionDetailStatus::LocomotionDetailStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetLocomotionDetailStatus, Temp_byte_Variable) == 0x000001, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetLocomotionDetailStatus::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetLocomotionDetailStatus, Temp_byte_Variable_1) == 0x000002, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetLocomotionDetailStatus::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetLocomotionDetailStatus, Temp_byte_Variable_2) == 0x000003, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetLocomotionDetailStatus::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetLocomotionDetailStatus, Temp_byte_Variable_3) == 0x000004, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetLocomotionDetailStatus::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetLocomotionDetailStatus, Temp_byte_Variable_4) == 0x000005, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetLocomotionDetailStatus::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetLocomotionDetailStatus, Temp_byte_Variable_5) == 0x000006, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetLocomotionDetailStatus::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetLocomotionDetailStatus, K2Node_Select_Default) == 0x000007, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetLocomotionDetailStatus::K2Node_Select_Default' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.GetRunningAction
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_GetRunningAction final
{
public:
	struct FKoratActionDataList                   RunningAction;                                     // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_GetRunningAction) == 0x000004, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_GetRunningAction");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_GetRunningAction) == 0x000008, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_GetRunningAction");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetRunningAction, RunningAction) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetRunningAction::RunningAction' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.GetRunningSection
// 0x003C (0x003C - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_GetRunningSection final
{
public:
	class FName                                   RunningSection;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratDragonHomingState                       Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_GetRunningSection) == 0x000004, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_GetRunningSection");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_GetRunningSection) == 0x00003C, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_GetRunningSection");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetRunningSection, RunningSection) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetRunningSection::RunningSection' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetRunningSection, Temp_byte_Variable) == 0x000008, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetRunningSection::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetRunningSection, Temp_name_Variable) == 0x00000C, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetRunningSection::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetRunningSection, Temp_name_Variable_1) == 0x000014, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetRunningSection::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetRunningSection, Temp_name_Variable_2) == 0x00001C, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetRunningSection::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetRunningSection, Temp_name_Variable_3) == 0x000024, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetRunningSection::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetRunningSection, Temp_name_Variable_4) == 0x00002C, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetRunningSection::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_GetRunningSection, K2Node_Select_Default) == 0x000034, "Member 'BP_CharacterLocomotionSubDragonHoming_C_GetRunningSection::K2Node_Select_Default' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.IsCanHomingChase
// 0x0178 (0x0178 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<struct FKoratActionDataList>             CanHomingChaseActions;                             // 0x0008(0x0050)(Edit, BlueprintVisible)
	class UActorComponent*                        TargetActor;                                       // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_14;                             // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_15;                             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_16;                             // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_17;                             // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_18;                             // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_19;                             // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_20;                             // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_21;                             // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_22;                             // 0x0077(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_23;                             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_24;                             // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_25;                             // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_26;                             // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_27;                             // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_28;                             // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_29;                             // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_30;                             // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_31;                             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_32;                             // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_33;                             // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_34;                             // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_35;                             // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_36;                             // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_37;                             // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_38;                             // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_39;                             // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_40;                             // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_41;                             // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_42;                             // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_43;                             // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_44;                             // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_45;                             // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_46;                             // 0x008F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_47;                             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_48;                             // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_49;                             // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_50;                             // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_51;                             // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_52;                             // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_53;                             // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_54;                             // 0x0097(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_55;                             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_56;                             // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_57;                             // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_58;                             // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_59;                             // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_60;                             // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_61;                             // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_62;                             // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_63;                             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_64;                             // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_65;                             // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_66;                             // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_67;                             // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_68;                             // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_69;                             // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_70;                             // 0x00A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_71;                             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_72;                             // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_73;                             // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_74;                             // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_75;                             // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_76;                             // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_77;                             // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_78;                             // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_79;                             // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_80;                             // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_81;                             // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_82;                             // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_83;                             // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_84;                             // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_85;                             // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_86;                             // 0x00B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_87;                             // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_88;                             // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_89;                             // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_90;                             // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_91;                             // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<struct FKoratActionDataList>             K2Node_MakeVariable_MakeVariableOutput;            // 0x00C0(0x0050)()
	TScriptInterface<class IBPI_CharacterLocomotion_C> K2Node_DynamicCast_AsBPI_Character_Locomotion;     // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratActionDataList                   CallFunc_GetRunningAction_OutRunningAction;        // 0x0124(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetRunningAction_OutRunningSection;       // 0x012C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterLocomotion_C> K2Node_DynamicCast_AsBPI_Character_Locomotion_1;   // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         CallFunc_GetLocomotionDetailStatus_OutLocomotionDetailStatus; // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x014B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterBase_C>  K2Node_DynamicCast_AsBPI_Character_Base;           // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_GetLocomotionComponent_ActorComponent;    // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase) == 0x000178, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, ReturnValue) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, CanHomingChaseActions) == 0x000008, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::CanHomingChaseActions' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, TargetActor) == 0x000058, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_byte_Variable) == 0x000060, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable) == 0x000061, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_1) == 0x000062, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_2) == 0x000063, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_3) == 0x000064, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_4) == 0x000065, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_5) == 0x000066, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_6) == 0x000067, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_7) == 0x000068, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_8) == 0x000069, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_9) == 0x00006A, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_10) == 0x00006B, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_11) == 0x00006C, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_12) == 0x00006D, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_13) == 0x00006E, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_14) == 0x00006F, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_15) == 0x000070, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_16) == 0x000071, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_17) == 0x000072, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_18) == 0x000073, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_19) == 0x000074, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_20) == 0x000075, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_21) == 0x000076, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_22) == 0x000077, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_23) == 0x000078, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_24) == 0x000079, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_25) == 0x00007A, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_26) == 0x00007B, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_27) == 0x00007C, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_28) == 0x00007D, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_29) == 0x00007E, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_30) == 0x00007F, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_30' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_31) == 0x000080, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_31' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_32) == 0x000081, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_32' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_33) == 0x000082, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_33' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_34) == 0x000083, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_34' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_35) == 0x000084, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_35' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_36) == 0x000085, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_36' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_37) == 0x000086, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_37' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_38) == 0x000087, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_38' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_39) == 0x000088, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_39' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_40) == 0x000089, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_40' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_41) == 0x00008A, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_41' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_42) == 0x00008B, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_42' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_43) == 0x00008C, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_43' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_44) == 0x00008D, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_44' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_45) == 0x00008E, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_45' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_46) == 0x00008F, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_46' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_47) == 0x000090, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_47' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_48) == 0x000091, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_48' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_49) == 0x000092, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_49' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_50) == 0x000093, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_50' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_51) == 0x000094, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_51' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_52) == 0x000095, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_52' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_53) == 0x000096, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_53' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_54) == 0x000097, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_54' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_55) == 0x000098, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_55' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_56) == 0x000099, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_56' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_57) == 0x00009A, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_57' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_58) == 0x00009B, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_58' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_59) == 0x00009C, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_59' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_60) == 0x00009D, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_60' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_61) == 0x00009E, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_61' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_62) == 0x00009F, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_62' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_63) == 0x0000A0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_63' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_64) == 0x0000A1, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_64' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_65) == 0x0000A2, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_65' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_66) == 0x0000A3, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_66' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_67) == 0x0000A4, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_67' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_68) == 0x0000A5, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_68' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_69) == 0x0000A6, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_69' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_70) == 0x0000A7, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_70' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_71) == 0x0000A8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_71' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_72) == 0x0000A9, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_72' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_73) == 0x0000AA, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_73' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_74) == 0x0000AB, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_74' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_75) == 0x0000AC, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_75' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_76) == 0x0000AD, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_76' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_77) == 0x0000AE, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_77' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_78) == 0x0000AF, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_78' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_79) == 0x0000B0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_79' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_80) == 0x0000B1, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_80' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_81) == 0x0000B2, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_81' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_82) == 0x0000B3, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_82' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_83) == 0x0000B4, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_83' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_84) == 0x0000B5, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_84' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_85) == 0x0000B6, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_85' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_86) == 0x0000B7, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_86' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_87) == 0x0000B8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_87' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_88) == 0x0000B9, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_88' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_89) == 0x0000BA, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_89' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_90) == 0x0000BB, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_90' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, Temp_bool_Variable_91) == 0x0000BC, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::Temp_bool_Variable_91' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, K2Node_MakeVariable_MakeVariableOutput) == 0x0000C0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, K2Node_DynamicCast_AsBPI_Character_Locomotion) == 0x000110, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::K2Node_DynamicCast_AsBPI_Character_Locomotion' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, K2Node_DynamicCast_bSuccess) == 0x000120, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, CallFunc_GetRunningAction_OutRunningAction) == 0x000124, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::CallFunc_GetRunningAction_OutRunningAction' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, CallFunc_GetRunningAction_OutRunningSection) == 0x00012C, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::CallFunc_GetRunningAction_OutRunningSection' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, K2Node_DynamicCast_AsBPI_Character_Locomotion_1) == 0x000138, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::K2Node_DynamicCast_AsBPI_Character_Locomotion_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, K2Node_DynamicCast_bSuccess_1) == 0x000148, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, CallFunc_GetLocomotionDetailStatus_OutLocomotionDetailStatus) == 0x000149, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::CallFunc_GetLocomotionDetailStatus_OutLocomotionDetailStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, K2Node_Select_Default) == 0x00014A, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, CallFunc_Set_Contains_ReturnValue) == 0x00014B, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, CallFunc_GetSSCharacter_SSCharacter) == 0x000150, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, K2Node_DynamicCast_AsBPI_Character_Base) == 0x000158, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::K2Node_DynamicCast_AsBPI_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, K2Node_DynamicCast_bSuccess_2) == 0x000168, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase, CallFunc_GetLocomotionComponent_ActorComponent) == 0x000170, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsCanHomingChase::CallFunc_GetLocomotionComponent_ActorComponent' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.IsEnableAction
// 0x0002 (0x0002 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_IsEnableAction final
{
public:
	bool                                          IsEnable;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_IsEnableAction) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_IsEnableAction");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_IsEnableAction) == 0x000002, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_IsEnableAction");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsEnableAction, IsEnable) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsEnableAction::IsEnable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_IsEnableAction, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_CharacterLocomotionSubDragonHoming_C_IsEnableAction::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.MoveHoming
// 0x09A8 (0x09A8 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_MoveHoming final
{
public:
	bool                                          InIsDashCombatives;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InIsCanChase;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDragonHoming;                                    // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               TargetRotation;                                    // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EKoratCharacterLocomotionDetailStatus         DetailStatus;                                      // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DragonHomingKeepDistance;                          // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DragonHomingDecelerationDistance;                  // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Length;                                            // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_RotateWithQuaternion_Rotator;             // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_3;                      // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_3;                     // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_3;                       // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement;   // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_1; // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetInputVectorXYZ_OutInputVector;         // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetInputVectorXYZ_OutInputVector_1;       // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPawn_Pawn;                             // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetInputVectorXYZ_OutInputVector_2;       // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_292[0x6];                                      // 0x0292(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_1;                      // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_1;       // 0x0308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_4;                      // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_4;                     // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_4;                       // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x032C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32D[0x3];                                      // 0x032D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_3;                     // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_2; // 0x0378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_2;       // 0x0390(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x03A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_5;                      // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_5;                     // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_5;                       // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC[0x4];                                      // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetHomingLocation_ReturnValue;            // 0x03C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x03D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_1;             // 0x03F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_2;             // 0x03F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckHomingTargetIsActionTarget_ReturnValue; // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_401[0x7];                                      // 0x0401(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0408(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_421[0x7];                                      // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0428(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetInputVectorXYZ_OutInputVector_3;       // 0x0440(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_3;             // 0x0470(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0479(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47A[0x6];                                      // 0x047A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0480(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_489[0x7];                                      // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetTargetDistance_Length;                 // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_499[0x7];                                      // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMin_ReturnValue;                         // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue_1;       // 0x04C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x04D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_3;        // 0x04F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0508(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0520(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPawn_Pawn_1;                           // 0x0538(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0540(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_4;             // 0x0558(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_3;       // 0x0560(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0578(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetTargetCharacter_ReturnValue;           // 0x0590(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0598(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_5;             // 0x05B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x05B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x05D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_2;                      // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetTargetCharacter_ReturnValue_1;         // 0x05F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x05F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0610(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         CallFunc_GetLocomotionDetailStatus_LocomotionDetailStatus; // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_629[0x7];                                      // 0x0629(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue_4;                     // 0x0630(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0648(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_649[0x7];                                      // 0x0649(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x0650(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0668(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0669(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x066A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66B[0x5];                                      // 0x066B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue_5;                     // 0x0670(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_689[0x7];                                      // 0x0689(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_4;       // 0x0690(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_3; // 0x06A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x06C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x06D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_6;                     // 0x06F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_711[0x7];                                      // 0x0711(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_6;             // 0x0718(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDragonHomingKeepDistance_ReturnValue;  // 0x0720(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_724[0x4];                                      // 0x0724(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x0728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDragonHomingDecelerationDistance_ReturnValue; // 0x0738(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_73C[0x4];                                      // 0x073C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetInputVectorXYZ_OutInputVector_4;       // 0x0748(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_4;                          // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_2; // 0x0778(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0780(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x0781(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_782[0x6];                                      // 0x0782(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_7;             // 0x0788(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0791(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_792[0x6];                                      // 0x0792(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_8;             // 0x0798(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_3; // 0x07A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetTargetCharacter_ReturnValue_2;         // 0x07A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_3;                      // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_4;                      // 0x07B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Ease_ReturnValue;                         // 0x07C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_4;        // 0x07C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_4;      // 0x07E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_5;        // 0x07F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_5;      // 0x0810(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMyLocation_ReturnValue;                // 0x0828(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMyLocation_ReturnValue_1;              // 0x0840(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0858(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_5;                      // 0x0870(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0878(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0880(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_881[0x7];                                      // 0x0881(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetMyLocation_ReturnValue_2;              // 0x0888(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetLocation_ReturnValue;            // 0x08A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x08B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_6;                      // 0x08D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x08D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x08D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8DA[0x6];                                      // 0x08DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue; // 0x08E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue_2;       // 0x08F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetLocation_ReturnValue_1;          // 0x0910(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMyLocation_ReturnValue_3;              // 0x0928(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_4;      // 0x0940(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMyLocation_ReturnValue_4;              // 0x0958(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_7;                      // 0x0970(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0978(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPawn_Pawn_2;                           // 0x0980(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_InterpSpeed_ImplicitCast;       // 0x0988(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x098C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_DragonHomingKeepDistance_ImplicitCast; // 0x0990(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_DragonHomingDecelerationDistance_ImplicitCast; // 0x0998(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRotationAtDistanceAlongSpline_Distance_ImplicitCast; // 0x09A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_MoveHoming");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming) == 0x0009A8, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_MoveHoming");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, InIsDashCombatives) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::InIsDashCombatives' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, InIsCanChase) == 0x000001, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::InIsCanChase' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, IsDragonHoming) == 0x000002, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::IsDragonHoming' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, TargetRotation) == 0x000008, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::TargetRotation' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, DetailStatus) == 0x000020, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::DetailStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, DragonHomingKeepDistance) == 0x000028, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::DragonHomingKeepDistance' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, DragonHomingDecelerationDistance) == 0x000030, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::DragonHomingDecelerationDistance' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, Length) == 0x000038, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::Length' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BooleanAND_ReturnValue) == 0x000040, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Not_PreBool_ReturnValue) == 0x000041, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000048, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BreakRotator_Roll) == 0x000050, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BreakRotator_Pitch) == 0x000054, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BreakRotator_Yaw) == 0x000058, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_RotateWithQuaternion_Rotator) == 0x000060, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_RotateWithQuaternion_Rotator' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BreakRotator_Roll_1) == 0x000078, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BreakRotator_Pitch_1) == 0x00007C, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BreakRotator_Yaw_1) == 0x000080, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_RInterpTo_ReturnValue) == 0x000088, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BreakRotator_Roll_2) == 0x0000A0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BreakRotator_Pitch_2) == 0x0000A4, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BreakRotator_Yaw_2) == 0x0000A8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_MakeRotator_ReturnValue) == 0x0000B0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BreakRotator_Roll_3) == 0x0000C8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BreakRotator_Roll_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BreakRotator_Pitch_3) == 0x0000CC, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BreakRotator_Pitch_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BreakRotator_Yaw_3) == 0x0000D0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BreakRotator_Yaw_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_MakeRotator_ReturnValue_1) == 0x0000E0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0000F8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000110, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetCharacterMovement_CharacterMovement) == 0x000128, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetCharacterMovement_CharacterMovement' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetCharacterMovement_CharacterMovement_1) == 0x000130, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetCharacterMovement_CharacterMovement_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000138, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000140, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_VSize_ReturnValue) == 0x000158, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetInputVectorXYZ_OutInputVector) == 0x000160, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetInputVectorXYZ_OutInputVector' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000178, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BreakVector_X) == 0x000180, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BreakVector_Y) == 0x000188, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BreakVector_Z) == 0x000190, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_MakeVector_ReturnValue) == 0x000198, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Normal_ReturnValue) == 0x0001B0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetInputVectorXYZ_OutInputVector_1) == 0x0001C8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetInputVectorXYZ_OutInputVector_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BreakVector_X_1) == 0x0001E0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BreakVector_Y_1) == 0x0001E8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BreakVector_Z_1) == 0x0001F0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_MakeVector_ReturnValue_1) == 0x0001F8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Normal_ReturnValue_1) == 0x000210, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000228, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000240, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetPawn_Pawn) == 0x000258, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetPawn_Pawn' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetInputVectorXYZ_OutInputVector_2) == 0x000260, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetInputVectorXYZ_OutInputVector_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BreakVector_X_2) == 0x000278, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BreakVector_Y_2) == 0x000280, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BreakVector_Z_2) == 0x000288, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000290, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, K2Node_SwitchEnum_CmpSuccess) == 0x000291, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_MakeVector_ReturnValue_2) == 0x000298, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_MakeVector_ReturnValue_3) == 0x0002B0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Normal_ReturnValue_2) == 0x0002C8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_VSize_ReturnValue_1) == 0x0002E0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x0002E8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000300, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Conv_VectorToRotator_ReturnValue_1) == 0x000308, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Conv_VectorToRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BreakRotator_Roll_4) == 0x000320, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BreakRotator_Roll_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BreakRotator_Pitch_4) == 0x000324, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BreakRotator_Pitch_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BreakRotator_Yaw_4) == 0x000328, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BreakRotator_Yaw_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x00032C, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_MakeRotator_ReturnValue_2) == 0x000330, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_MakeVector_ReturnValue_4) == 0x000348, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Normal_ReturnValue_3) == 0x000360, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Normal_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GreaterGreater_VectorRotator_ReturnValue_2) == 0x000378, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GreaterGreater_VectorRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Conv_VectorToRotator_ReturnValue_2) == 0x000390, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Conv_VectorToRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetSSCharacter_SSCharacter) == 0x0003A8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BreakRotator_Roll_5) == 0x0003B0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BreakRotator_Roll_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BreakRotator_Pitch_5) == 0x0003B4, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BreakRotator_Pitch_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BreakRotator_Yaw_5) == 0x0003B8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BreakRotator_Yaw_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetHomingLocation_ReturnValue) == 0x0003C0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetHomingLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_MakeRotator_ReturnValue_3) == 0x0003D8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetSSCharacter_SSCharacter_1) == 0x0003F0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetSSCharacter_SSCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetSSCharacter_SSCharacter_2) == 0x0003F8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetSSCharacter_SSCharacter_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_CheckHomingTargetIsActionTarget_ReturnValue) == 0x000400, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_CheckHomingTargetIsActionTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000408, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BooleanOR_ReturnValue) == 0x000420, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_FindLookAtRotation_ReturnValue) == 0x000428, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetInputVectorXYZ_OutInputVector_3) == 0x000440, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetInputVectorXYZ_OutInputVector_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BreakVector_X_3) == 0x000458, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BreakVector_Y_3) == 0x000460, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BreakVector_Z_3) == 0x000468, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetSSCharacter_SSCharacter_3) == 0x000470, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetSSCharacter_SSCharacter_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000478, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000479, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000480, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BooleanOR_ReturnValue_1) == 0x000488, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetTargetDistance_Length) == 0x000490, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetTargetDistance_Length' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BooleanAND_ReturnValue_1) == 0x000498, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_FMin_ReturnValue) == 0x0004A0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0004A8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0004B0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0004B8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Conv_RotatorToVector_ReturnValue_1) == 0x0004C0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Conv_RotatorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x0004D8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Conv_DoubleToVector_ReturnValue_3) == 0x0004F0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Conv_DoubleToVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000508, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000520, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetPawn_Pawn_1) == 0x000538, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetPawn_Pawn_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Add_VectorVector_ReturnValue) == 0x000540, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetSSCharacter_SSCharacter_4) == 0x000558, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetSSCharacter_SSCharacter_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Conv_VectorToRotator_ReturnValue_3) == 0x000560, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Conv_VectorToRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000578, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetTargetCharacter_ReturnValue) == 0x000590, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetTargetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000598, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetSSCharacter_SSCharacter_5) == 0x0005B0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetSSCharacter_SSCharacter_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0005B8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x0005D0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_VSize_ReturnValue_2) == 0x0005E8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_VSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetTargetCharacter_ReturnValue_1) == 0x0005F0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetTargetCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x0005F8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000610, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetLocomotionDetailStatus_LocomotionDetailStatus) == 0x000628, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetLocomotionDetailStatus_LocomotionDetailStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Normal_ReturnValue_4) == 0x000630, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Normal_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000648, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x000650, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000668, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000669, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BooleanOR_ReturnValue_2) == 0x00066A, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Normal_ReturnValue_5) == 0x000670, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Normal_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BooleanOR_ReturnValue_3) == 0x000688, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Conv_VectorToRotator_ReturnValue_4) == 0x000690, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Conv_VectorToRotator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GreaterGreater_VectorRotator_ReturnValue_3) == 0x0006A8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GreaterGreater_VectorRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x0006C0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0006D8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Normal_ReturnValue_6) == 0x0006F0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Normal_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000708, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BooleanAND_ReturnValue_2) == 0x000710, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetSSCharacter_SSCharacter_6) == 0x000718, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetSSCharacter_SSCharacter_6' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetDragonHomingKeepDistance_ReturnValue) == 0x000720, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetDragonHomingKeepDistance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x000728, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000730, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetDragonHomingDecelerationDistance_ReturnValue) == 0x000738, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetDragonHomingDecelerationDistance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_FClamp_ReturnValue) == 0x000740, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetInputVectorXYZ_OutInputVector_4) == 0x000748, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetInputVectorXYZ_OutInputVector_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BreakVector_X_4) == 0x000760, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BreakVector_Y_4) == 0x000768, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BreakVector_Z_4) == 0x000770, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetCharacterMovement_CharacterMovement_2) == 0x000778, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetCharacterMovement_CharacterMovement_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000780, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x000781, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetSSCharacter_SSCharacter_7) == 0x000788, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetSSCharacter_SSCharacter_7' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BooleanOR_ReturnValue_4) == 0x000790, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BooleanAND_ReturnValue_3) == 0x000791, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetSSCharacter_SSCharacter_8) == 0x000798, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetSSCharacter_SSCharacter_8' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetCharacterMovement_CharacterMovement_3) == 0x0007A0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetCharacterMovement_CharacterMovement_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetTargetCharacter_ReturnValue_2) == 0x0007A8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetTargetCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_VSize_ReturnValue_3) == 0x0007B0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_VSize_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_VSize_ReturnValue_4) == 0x0007B8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_VSize_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Ease_ReturnValue) == 0x0007C0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Conv_DoubleToVector_ReturnValue_4) == 0x0007C8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Conv_DoubleToVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Multiply_VectorVector_ReturnValue_4) == 0x0007E0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Multiply_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Conv_DoubleToVector_ReturnValue_5) == 0x0007F8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Conv_DoubleToVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Multiply_VectorVector_ReturnValue_5) == 0x000810, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Multiply_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetMyLocation_ReturnValue) == 0x000828, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetMyLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetMyLocation_ReturnValue_1) == 0x000840, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetMyLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000858, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_VSize_ReturnValue_5) == 0x000870, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_VSize_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000878, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Not_PreBool_ReturnValue_1) == 0x000880, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetMyLocation_ReturnValue_2) == 0x000888, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetMyLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetTargetLocation_ReturnValue) == 0x0008A0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetTargetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x0008B8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_VSize_ReturnValue_6) == 0x0008D0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_VSize_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0008D8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_BooleanAND_ReturnValue_4) == 0x0008D9, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue) == 0x0008E0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Conv_RotatorToVector_ReturnValue_2) == 0x0008F8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Conv_RotatorToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetTargetLocation_ReturnValue_1) == 0x000910, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetTargetLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetMyLocation_ReturnValue_3) == 0x000928, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetMyLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Subtract_VectorVector_ReturnValue_4) == 0x000940, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Subtract_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetMyLocation_ReturnValue_4) == 0x000958, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetMyLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_VSize_ReturnValue_7) == 0x000970, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_VSize_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000978, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetPawn_Pawn_2) == 0x000980, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetPawn_Pawn_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_RInterpTo_InterpSpeed_ImplicitCast) == 0x000988, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_RInterpTo_InterpSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x00098C, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, K2Node_VariableSet_DragonHomingKeepDistance_ImplicitCast) == 0x000990, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::K2Node_VariableSet_DragonHomingKeepDistance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, K2Node_VariableSet_DragonHomingDecelerationDistance_ImplicitCast) == 0x000998, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::K2Node_VariableSet_DragonHomingDecelerationDistance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_MoveHoming, CallFunc_GetRotationAtDistanceAlongSpline_Distance_ImplicitCast) == 0x0009A0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_MoveHoming::CallFunc_GetRotationAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.OnDragonHomingAnimEvent
// 0x0030 (0x0030 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_OnDragonHomingAnimEvent final
{
public:
	EKoratDragonHomingState                       DragonHomingState;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimStateMachineEventType                    AnimStateMachineEvent;                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_2; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Update_NewParam;                          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_OnDragonHomingAnimEvent) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_OnDragonHomingAnimEvent");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_OnDragonHomingAnimEvent) == 0x000030, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_OnDragonHomingAnimEvent");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_OnDragonHomingAnimEvent, DragonHomingState) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_OnDragonHomingAnimEvent::DragonHomingState' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_OnDragonHomingAnimEvent, AnimStateMachineEvent) == 0x000001, "Member 'BP_CharacterLocomotionSubDragonHoming_C_OnDragonHomingAnimEvent::AnimStateMachineEvent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_OnDragonHomingAnimEvent, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000008, "Member 'BP_CharacterLocomotionSubDragonHoming_C_OnDragonHomingAnimEvent::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_OnDragonHomingAnimEvent, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000010, "Member 'BP_CharacterLocomotionSubDragonHoming_C_OnDragonHomingAnimEvent::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_OnDragonHomingAnimEvent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'BP_CharacterLocomotionSubDragonHoming_C_OnDragonHomingAnimEvent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_OnDragonHomingAnimEvent, CallFunc_GetLocomotionComponent_LocomotionComponent_2) == 0x000020, "Member 'BP_CharacterLocomotionSubDragonHoming_C_OnDragonHomingAnimEvent::CallFunc_GetLocomotionComponent_LocomotionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_OnDragonHomingAnimEvent, CallFunc_Update_NewParam) == 0x000028, "Member 'BP_CharacterLocomotionSubDragonHoming_C_OnDragonHomingAnimEvent::CallFunc_Update_NewParam' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.RotateWithQuaternion
// 0x0130 (0x0130 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion final
{
public:
	struct FRotator                               InCurrent;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               InTarget;                                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        InTurnSpeed;                                       // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotator;                                           // 0x0038(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Axis;                                              // 0x0050(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetVector;                                      // 0x0068(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentVector;                                     // 0x0080(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue_1;       // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion) == 0x000130, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion, InCurrent) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion::InCurrent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion, InTarget) == 0x000018, "Member 'BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion::InTarget' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion, InTurnSpeed) == 0x000030, "Member 'BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion::InTurnSpeed' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion, Rotator) == 0x000038, "Member 'BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion::Rotator' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion, Axis) == 0x000050, "Member 'BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion::Axis' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion, TargetVector) == 0x000068, "Member 'BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion::TargetVector' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion, CurrentVector) == 0x000080, "Member 'BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion::CurrentVector' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion, CallFunc_RotateAngleAxis_ReturnValue) == 0x000098, "Member 'BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x0000B0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000C8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion, CallFunc_DegAcos_ReturnValue) == 0x0000D0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion, CallFunc_Cross_VectorVector_ReturnValue) == 0x0000D8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000F0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x0000F8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion, CallFunc_Conv_RotatorToVector_ReturnValue_1) == 0x000110, "Member 'BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion::CallFunc_Conv_RotatorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x000128, "Member 'BP_CharacterLocomotionSubDragonHoming_C_RotateWithQuaternion::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.SetDragonHomingStatus
// 0x0030 (0x0030 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_SetDragonHomingStatus final
{
public:
	EKoratDragonHomingState                       InDragonHomingStatus;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterActionFinishReason             InActionFinishReason;                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_2; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateRunningAction_OutIsChangeAction;    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_SetDragonHomingStatus) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_SetDragonHomingStatus");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_SetDragonHomingStatus) == 0x000030, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_SetDragonHomingStatus");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetDragonHomingStatus, InDragonHomingStatus) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetDragonHomingStatus::InDragonHomingStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetDragonHomingStatus, InActionFinishReason) == 0x000001, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetDragonHomingStatus::InActionFinishReason' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetDragonHomingStatus, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetDragonHomingStatus::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetDragonHomingStatus, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000008, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetDragonHomingStatus::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetDragonHomingStatus, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000010, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetDragonHomingStatus::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetDragonHomingStatus, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetDragonHomingStatus::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetDragonHomingStatus, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000019, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetDragonHomingStatus::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetDragonHomingStatus, CallFunc_GetLocomotionComponent_LocomotionComponent_2) == 0x000020, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetDragonHomingStatus::CallFunc_GetLocomotionComponent_LocomotionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetDragonHomingStatus, CallFunc_BooleanOR_ReturnValue) == 0x000028, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetDragonHomingStatus::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetDragonHomingStatus, CallFunc_UpdateRunningAction_OutIsChangeAction) == 0x000029, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetDragonHomingStatus::CallFunc_UpdateRunningAction_OutIsChangeAction' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.SetHomingLookAtRotation
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_SetHomingLookAtRotation final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingLookAtRotation) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_SetHomingLookAtRotation");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingLookAtRotation) == 0x000008, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_SetHomingLookAtRotation");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingLookAtRotation, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetHomingLookAtRotation::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.SetHomingMaxSpeed
// 0x00B0 (0x00B0 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed final
{
public:
	TArray<EKoratDragonHomingState>               StatusList;                                        // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<double>                                MaxSpeedList;                                      // 0x0010(0x0010)(Edit, BlueprintVisible)
	bool                                          IsUseOTParameter;                                  // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MaxSpeedOT;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxSpeedIN;                                        // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EKoratDragonHomingState>               K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratDragonHomingState                       CallFunc_Array_Get_Item;                           // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHomingStateMovementParameter_IsUseParameter; // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F[0x1];                                       // 0x006F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratCharacterDataDragonDashMovementParameter CallFunc_GetHomingStateMovementParameter_MovementParameter; // 0x0070(0x0020)(NoDestructor)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_A_ImplicitCast;                      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_B_ImplicitCast;                      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxSpeedCpp_ImplicitCast;       // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed) == 0x0000B0, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed, StatusList) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed::StatusList' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed, MaxSpeedList) == 0x000010, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed::MaxSpeedList' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed, IsUseOTParameter) == 0x000020, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed::IsUseOTParameter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed, MaxSpeedOT) == 0x000028, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed::MaxSpeedOT' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed, MaxSpeedIN) == 0x000030, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed::MaxSpeedIN' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed, K2Node_MakeArray_Array) == 0x000038, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000058, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000060, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed, CallFunc_Array_Get_Item) == 0x00006C, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed, CallFunc_Less_IntInt_ReturnValue) == 0x00006D, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed, CallFunc_GetHomingStateMovementParameter_IsUseParameter) == 0x00006E, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed::CallFunc_GetHomingStateMovementParameter_IsUseParameter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed, CallFunc_GetHomingStateMovementParameter_MovementParameter) == 0x000070, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed::CallFunc_GetHomingStateMovementParameter_MovementParameter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed, CallFunc_FMax_ReturnValue) == 0x000090, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed, CallFunc_FMax_A_ImplicitCast) == 0x000098, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed::CallFunc_FMax_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed, CallFunc_FMax_B_ImplicitCast) == 0x0000A0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed::CallFunc_FMax_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed, K2Node_VariableSet_MaxSpeedCpp_ImplicitCast) == 0x0000A8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetHomingMaxSpeed::K2Node_VariableSet_MaxSpeedCpp_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.SetHomingParameter
// 0x0068 (0x0068 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_SetHomingParameter final
{
public:
	struct FVector                                InInputVector;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LookAtRotationOld;                                 // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UBP_CharacterSplineComponent_C*         LocomotionSplineComponentOld;                      // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDashVectorAndRotation_OutVector;       // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetDashVectorAndRotation_OutRotation;     // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingParameter) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_SetHomingParameter");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingParameter) == 0x000068, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_SetHomingParameter");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingParameter, InInputVector) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetHomingParameter::InInputVector' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingParameter, LookAtRotationOld) == 0x000018, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetHomingParameter::LookAtRotationOld' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingParameter, LocomotionSplineComponentOld) == 0x000030, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetHomingParameter::LocomotionSplineComponentOld' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingParameter, CallFunc_GetDashVectorAndRotation_OutVector) == 0x000038, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetHomingParameter::CallFunc_GetDashVectorAndRotation_OutVector' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingParameter, CallFunc_GetDashVectorAndRotation_OutRotation) == 0x000050, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetHomingParameter::CallFunc_GetDashVectorAndRotation_OutRotation' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.SetHomingSplineComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_SetHomingSplineComponent final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingSplineComponent) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_SetHomingSplineComponent");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingSplineComponent) == 0x000008, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_SetHomingSplineComponent");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetHomingSplineComponent, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetHomingSplineComponent::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.SetupHomingMove
// 0x01C0 (0x01C0 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove final
{
public:
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDragonHomingKeepDistanceInputInfluence_ReturnValue; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDragonHomingInputInfluenceAttenuationDistance_ReturnValue; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDragonHomingInputInfluence_ReturnValue; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue; // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_1;             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKoratActionDataList                   CallFunc_GetCurrentAction_OutAction;               // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	EKoratBlastSlotType                           CallFunc_GetBlastSlot_ReturnValue;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_2;             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetHomingLocation_ReturnValue;            // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue_1;       // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMyLocation_ReturnValue;                // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetLocation_ReturnValue;            // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMyLocation_ReturnValue_1;              // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_DragonHomingKeepDistanceInputInfluence_ImplicitCast; // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_ControllableTargetInputInfluenceAttenuationDistance_ImplicitCast; // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_ControllableTargetInputInfluence_ImplicitCast; // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRotationAtDistanceAlongSpline_Distance_ImplicitCast; // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_ControllableTargetInputInfluence_ImplicitCast_1; // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_ControllableTargetInputInfluenceAttenuationDistance_ImplicitCast_1; // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_ControllableTurnTurnSpeed_ImplicitCast; // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_ControllableTurnNeutralTurnSpeed_ImplicitCast; // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_ControllableTargetInputInfluence_ImplicitCast_2; // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_ControllableTargetInputInfluenceAttenuationDistance_ImplicitCast_2; // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_ControllableTurnTurnSpeed_ImplicitCast_1; // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_ControllableTurnNeutralTurnSpeed_ImplicitCast_1; // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_ControllableTargetInputInfluence_ImplicitCast_3; // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_ControllableTargetInputInfluenceAttenuationDistance_ImplicitCast_3; // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_ControllableTurnTurnSpeed_ImplicitCast_2; // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_ControllableTurnNeutralTurnSpeed_ImplicitCast_2; // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove) == 0x0001C0, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, CallFunc_GetSSCharacter_SSCharacter) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, CallFunc_GetDragonHomingKeepDistanceInputInfluence_ReturnValue) == 0x000008, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::CallFunc_GetDragonHomingKeepDistanceInputInfluence_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, CallFunc_GetDragonHomingInputInfluenceAttenuationDistance_ReturnValue) == 0x00000C, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::CallFunc_GetDragonHomingInputInfluenceAttenuationDistance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, CallFunc_GetDragonHomingInputInfluence_ReturnValue) == 0x000010, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::CallFunc_GetDragonHomingInputInfluence_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue) == 0x000018, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, CallFunc_GetSSCharacter_SSCharacter_1) == 0x000030, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::CallFunc_GetSSCharacter_SSCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, CallFunc_GetCurrentAction_OutAction) == 0x000038, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::CallFunc_GetCurrentAction_OutAction' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, CallFunc_GetBlastSlot_ReturnValue) == 0x000040, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::CallFunc_GetBlastSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, K2Node_SwitchEnum_CmpSuccess) == 0x000041, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, CallFunc_GetSSCharacter_SSCharacter_2) == 0x000048, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::CallFunc_GetSSCharacter_SSCharacter_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, CallFunc_GetHomingLocation_ReturnValue) == 0x000050, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::CallFunc_GetHomingLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, CallFunc_ComposeRotators_ReturnValue) == 0x000068, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000080, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, CallFunc_ComposeRotators_ReturnValue_1) == 0x000098, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000B0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, CallFunc_Conv_RotatorToVector_ReturnValue_1) == 0x0000C8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::CallFunc_Conv_RotatorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000E0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, CallFunc_GetMyLocation_ReturnValue) == 0x0000F8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::CallFunc_GetMyLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, CallFunc_GetTargetLocation_ReturnValue) == 0x000110, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::CallFunc_GetTargetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, CallFunc_GetMyLocation_ReturnValue_1) == 0x000128, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::CallFunc_GetMyLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, K2Node_VariableSet_DragonHomingKeepDistanceInputInfluence_ImplicitCast) == 0x000140, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::K2Node_VariableSet_DragonHomingKeepDistanceInputInfluence_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, K2Node_VariableSet_ControllableTargetInputInfluenceAttenuationDistance_ImplicitCast) == 0x000148, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::K2Node_VariableSet_ControllableTargetInputInfluenceAttenuationDistance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, K2Node_VariableSet_ControllableTargetInputInfluence_ImplicitCast) == 0x000150, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::K2Node_VariableSet_ControllableTargetInputInfluence_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, CallFunc_GetRotationAtDistanceAlongSpline_Distance_ImplicitCast) == 0x000158, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::CallFunc_GetRotationAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, K2Node_VariableSet_ControllableTargetInputInfluence_ImplicitCast_1) == 0x000160, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::K2Node_VariableSet_ControllableTargetInputInfluence_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, K2Node_VariableSet_ControllableTargetInputInfluenceAttenuationDistance_ImplicitCast_1) == 0x000168, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::K2Node_VariableSet_ControllableTargetInputInfluenceAttenuationDistance_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, K2Node_VariableSet_ControllableTurnTurnSpeed_ImplicitCast) == 0x000170, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::K2Node_VariableSet_ControllableTurnTurnSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, K2Node_VariableSet_ControllableTurnNeutralTurnSpeed_ImplicitCast) == 0x000178, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::K2Node_VariableSet_ControllableTurnNeutralTurnSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, K2Node_VariableSet_ControllableTargetInputInfluence_ImplicitCast_2) == 0x000180, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::K2Node_VariableSet_ControllableTargetInputInfluence_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, K2Node_VariableSet_ControllableTargetInputInfluenceAttenuationDistance_ImplicitCast_2) == 0x000188, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::K2Node_VariableSet_ControllableTargetInputInfluenceAttenuationDistance_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, K2Node_VariableSet_ControllableTurnTurnSpeed_ImplicitCast_1) == 0x000190, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::K2Node_VariableSet_ControllableTurnTurnSpeed_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, K2Node_VariableSet_ControllableTurnNeutralTurnSpeed_ImplicitCast_1) == 0x000198, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::K2Node_VariableSet_ControllableTurnNeutralTurnSpeed_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, K2Node_VariableSet_ControllableTargetInputInfluence_ImplicitCast_3) == 0x0001A0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::K2Node_VariableSet_ControllableTargetInputInfluence_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, K2Node_VariableSet_ControllableTargetInputInfluenceAttenuationDistance_ImplicitCast_3) == 0x0001A8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::K2Node_VariableSet_ControllableTargetInputInfluenceAttenuationDistance_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, K2Node_VariableSet_ControllableTurnTurnSpeed_ImplicitCast_2) == 0x0001B0, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::K2Node_VariableSet_ControllableTurnTurnSpeed_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove, K2Node_VariableSet_ControllableTurnNeutralTurnSpeed_ImplicitCast_2) == 0x0001B8, "Member 'BP_CharacterLocomotionSubDragonHoming_C_SetupHomingMove::K2Node_VariableSet_ControllableTurnNeutralTurnSpeed_ImplicitCast_2' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.Start
// 0x0060 (0x0060 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_Start final
{
public:
	class UBP_CharacterLocomotionComponent_C*     InLocomotionComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          InInSkip;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ConsumeSPHomingIN_IsSuccessfully;         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_2; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDashInputVector_OutInputVector;        // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDashInputVector_OutIsInputNeutral;     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterAction_C> K2Node_DynamicCast_AsBPI_Character_Action;         // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Start_NewParam;                           // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_Start) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_Start");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_Start) == 0x000060, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_Start");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_Start, InLocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_Start::InLocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_Start, InInSkip) == 0x000008, "Member 'BP_CharacterLocomotionSubDragonHoming_C_Start::InInSkip' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_Start, NewParam) == 0x000009, "Member 'BP_CharacterLocomotionSubDragonHoming_C_Start::NewParam' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_Start, CallFunc_ConsumeSPHomingIN_IsSuccessfully) == 0x00000A, "Member 'BP_CharacterLocomotionSubDragonHoming_C_Start::CallFunc_ConsumeSPHomingIN_IsSuccessfully' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_Start, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000010, "Member 'BP_CharacterLocomotionSubDragonHoming_C_Start::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_Start, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000018, "Member 'BP_CharacterLocomotionSubDragonHoming_C_Start::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_Start, CallFunc_GetLocomotionComponent_LocomotionComponent_2) == 0x000020, "Member 'BP_CharacterLocomotionSubDragonHoming_C_Start::CallFunc_GetLocomotionComponent_LocomotionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_Start, CallFunc_GetDashInputVector_OutInputVector) == 0x000028, "Member 'BP_CharacterLocomotionSubDragonHoming_C_Start::CallFunc_GetDashInputVector_OutInputVector' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_Start, CallFunc_GetDashInputVector_OutIsInputNeutral) == 0x000040, "Member 'BP_CharacterLocomotionSubDragonHoming_C_Start::CallFunc_GetDashInputVector_OutIsInputNeutral' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_Start, K2Node_DynamicCast_AsBPI_Character_Action) == 0x000048, "Member 'BP_CharacterLocomotionSubDragonHoming_C_Start::K2Node_DynamicCast_AsBPI_Character_Action' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_Start, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_CharacterLocomotionSubDragonHoming_C_Start::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_Start, CallFunc_Start_NewParam) == 0x000059, "Member 'BP_CharacterLocomotionSubDragonHoming_C_Start::CallFunc_Start_NewParam' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.Start Is Enable Homing
// 0x0028 (0x0028 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_Start_Is_Enable_Homing final
{
public:
	bool                                          IsEnable;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCanHomingChase_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterAction_C> K2Node_DynamicCast_AsBPI_Character_Action;         // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayablePursuit_IsPlayable;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_Start_Is_Enable_Homing) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_Start_Is_Enable_Homing");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_Start_Is_Enable_Homing) == 0x000028, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_Start_Is_Enable_Homing");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_Start_Is_Enable_Homing, IsEnable) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_Start_Is_Enable_Homing::IsEnable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_Start_Is_Enable_Homing, CallFunc_IsCanHomingChase_ReturnValue) == 0x000001, "Member 'BP_CharacterLocomotionSubDragonHoming_C_Start_Is_Enable_Homing::CallFunc_IsCanHomingChase_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_Start_Is_Enable_Homing, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000008, "Member 'BP_CharacterLocomotionSubDragonHoming_C_Start_Is_Enable_Homing::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_Start_Is_Enable_Homing, K2Node_DynamicCast_AsBPI_Character_Action) == 0x000010, "Member 'BP_CharacterLocomotionSubDragonHoming_C_Start_Is_Enable_Homing::K2Node_DynamicCast_AsBPI_Character_Action' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_Start_Is_Enable_Homing, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_CharacterLocomotionSubDragonHoming_C_Start_Is_Enable_Homing::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_Start_Is_Enable_Homing, CallFunc_IsPlayablePursuit_IsPlayable) == 0x000021, "Member 'BP_CharacterLocomotionSubDragonHoming_C_Start_Is_Enable_Homing::CallFunc_IsPlayablePursuit_IsPlayable' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.StartCheckSPConsumableHomingIN
// 0x0020 (0x0020 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_StartCheckSPConsumableHomingIN final
{
public:
	bool                                          IsOK;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckSPCosumable_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_StartCheckSPConsumableHomingIN) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_StartCheckSPConsumableHomingIN");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_StartCheckSPConsumableHomingIN) == 0x000020, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_StartCheckSPConsumableHomingIN");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_StartCheckSPConsumableHomingIN, IsOK) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_StartCheckSPConsumableHomingIN::IsOK' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_StartCheckSPConsumableHomingIN, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000008, "Member 'BP_CharacterLocomotionSubDragonHoming_C_StartCheckSPConsumableHomingIN::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_StartCheckSPConsumableHomingIN, CallFunc_GetSSCharacter_SSCharacter) == 0x000010, "Member 'BP_CharacterLocomotionSubDragonHoming_C_StartCheckSPConsumableHomingIN::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_StartCheckSPConsumableHomingIN, CallFunc_CheckSPCosumable_ReturnValue) == 0x000018, "Member 'BP_CharacterLocomotionSubDragonHoming_C_StartCheckSPConsumableHomingIN::CallFunc_CheckSPCosumable_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.StartSetup
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_StartSetup final
{
public:
	struct FVector                                InputPin;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_StartSetup) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_StartSetup");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_StartSetup) == 0x000018, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_StartSetup");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_StartSetup, InputPin) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_StartSetup::InputPin' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.StartSetUpMovementRotation
// 0x0060 (0x0060 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_StartSetUpMovementRotation final
{
public:
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement;   // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPawn_Pawn;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPawn_Pawn_1;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPawn_Pawn_2;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPawn_Pawn_3;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPawn_Pawn_4;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterBase_C>  K2Node_DynamicCast_AsBPI_Character_Base;           // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterBase_C>  K2Node_DynamicCast_AsBPI_Character_Base_1;         // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetUseCharacterRotationPitch_UsePitch;    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetUseCharacterRotationPitchDetail_UsePitchLimit; // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetUseCharacterRotationPitchDetail_UsePitchInterp; // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_StartSetUpMovementRotation) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_StartSetUpMovementRotation");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_StartSetUpMovementRotation) == 0x000060, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_StartSetUpMovementRotation");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_StartSetUpMovementRotation, CallFunc_GetCharacterMovement_CharacterMovement) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_StartSetUpMovementRotation::CallFunc_GetCharacterMovement_CharacterMovement' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_StartSetUpMovementRotation, CallFunc_GetPawn_Pawn) == 0x000008, "Member 'BP_CharacterLocomotionSubDragonHoming_C_StartSetUpMovementRotation::CallFunc_GetPawn_Pawn' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_StartSetUpMovementRotation, CallFunc_GetPawn_Pawn_1) == 0x000010, "Member 'BP_CharacterLocomotionSubDragonHoming_C_StartSetUpMovementRotation::CallFunc_GetPawn_Pawn_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_StartSetUpMovementRotation, CallFunc_GetPawn_Pawn_2) == 0x000018, "Member 'BP_CharacterLocomotionSubDragonHoming_C_StartSetUpMovementRotation::CallFunc_GetPawn_Pawn_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_StartSetUpMovementRotation, CallFunc_GetPawn_Pawn_3) == 0x000020, "Member 'BP_CharacterLocomotionSubDragonHoming_C_StartSetUpMovementRotation::CallFunc_GetPawn_Pawn_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_StartSetUpMovementRotation, CallFunc_GetPawn_Pawn_4) == 0x000028, "Member 'BP_CharacterLocomotionSubDragonHoming_C_StartSetUpMovementRotation::CallFunc_GetPawn_Pawn_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_StartSetUpMovementRotation, K2Node_DynamicCast_AsBPI_Character_Base) == 0x000030, "Member 'BP_CharacterLocomotionSubDragonHoming_C_StartSetUpMovementRotation::K2Node_DynamicCast_AsBPI_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_StartSetUpMovementRotation, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_CharacterLocomotionSubDragonHoming_C_StartSetUpMovementRotation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_StartSetUpMovementRotation, K2Node_DynamicCast_AsBPI_Character_Base_1) == 0x000048, "Member 'BP_CharacterLocomotionSubDragonHoming_C_StartSetUpMovementRotation::K2Node_DynamicCast_AsBPI_Character_Base_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_StartSetUpMovementRotation, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_CharacterLocomotionSubDragonHoming_C_StartSetUpMovementRotation::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_StartSetUpMovementRotation, CallFunc_SetUseCharacterRotationPitch_UsePitch) == 0x000059, "Member 'BP_CharacterLocomotionSubDragonHoming_C_StartSetUpMovementRotation::CallFunc_SetUseCharacterRotationPitch_UsePitch' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_StartSetUpMovementRotation, CallFunc_SetUseCharacterRotationPitchDetail_UsePitchLimit) == 0x00005A, "Member 'BP_CharacterLocomotionSubDragonHoming_C_StartSetUpMovementRotation::CallFunc_SetUseCharacterRotationPitchDetail_UsePitchLimit' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_StartSetUpMovementRotation, CallFunc_SetUseCharacterRotationPitchDetail_UsePitchInterp) == 0x00005B, "Member 'BP_CharacterLocomotionSubDragonHoming_C_StartSetUpMovementRotation::CallFunc_SetUseCharacterRotationPitchDetail_UsePitchInterp' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.Update
// 0x0020 (0x0020 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_Update final
{
public:
	class UBP_CharacterLocomotionComponent_C*     InLocomotionComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ECharacterLocomotionEventType                 InEventType;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        InDeltaSeconds;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Update_NewParam;                          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_Update) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_Update");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_Update) == 0x000020, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_Update");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_Update, InLocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_Update::InLocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_Update, InEventType) == 0x000008, "Member 'BP_CharacterLocomotionSubDragonHoming_C_Update::InEventType' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_Update, InDeltaSeconds) == 0x000010, "Member 'BP_CharacterLocomotionSubDragonHoming_C_Update::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_Update, NewParam) == 0x000018, "Member 'BP_CharacterLocomotionSubDragonHoming_C_Update::NewParam' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_Update, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'BP_CharacterLocomotionSubDragonHoming_C_Update::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_Update, CallFunc_Update_NewParam) == 0x00001A, "Member 'BP_CharacterLocomotionSubDragonHoming_C_Update::CallFunc_Update_NewParam' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.UpdateHomingCombatives
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives) == 0x000001, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.UpdateHomingCombatives on End Dash Combatives
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives_on_End_Dash_Combatives final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives_on_End_Dash_Combatives) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives_on_End_Dash_Combatives");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives_on_End_Dash_Combatives) == 0x000008, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives_on_End_Dash_Combatives");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives_on_End_Dash_Combatives, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives_on_End_Dash_Combatives::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.UpdateHomingCombatives Stop
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives_Stop final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives_Stop) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives_Stop");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives_Stop) == 0x000008, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives_Stop");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives_Stop, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives_Stop::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.UpdateHomingCombatives Update
// 0x0020 (0x0020 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives_Update final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EKoratDragonHomingState                       CallFunc_UpdateHomingMove_NextDragonHomingStatus;  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Update_Sub_State_Timer_OutSubStateTimer;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives_Update) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives_Update");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives_Update) == 0x000020, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives_Update");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives_Update, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives_Update::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives_Update, CallFunc_UpdateHomingMove_NextDragonHomingStatus) == 0x000008, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives_Update::CallFunc_UpdateHomingMove_NextDragonHomingStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives_Update, CallFunc_Update_Sub_State_Timer_OutSubStateTimer) == 0x000010, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives_Update::CallFunc_Update_Sub_State_Timer_OutSubStateTimer' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives_Update, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingCombatives_Update::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.UpdateHomingIN
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingIN final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingIN) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingIN");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingIN) == 0x000001, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingIN");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingIN, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingIN::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.UpdateHomingINOn Set Anim Time
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINOn_Set_Anim_Time final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINOn_Set_Anim_Time) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINOn_Set_Anim_Time");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINOn_Set_Anim_Time) == 0x000018, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINOn_Set_Anim_Time");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINOn_Set_Anim_Time, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINOn_Set_Anim_Time::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINOn_Set_Anim_Time, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000008, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINOn_Set_Anim_Time::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINOn_Set_Anim_Time, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000010, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINOn_Set_Anim_Time::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINOn_Set_Anim_Time, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000011, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINOn_Set_Anim_Time::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.UpdateHomingINStop
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINStop final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINStop) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINStop");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINStop) == 0x000008, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINStop");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINStop, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINStop::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.UpdateHomingINUpdate
// 0x0048 (0x0048 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINUpdate final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegreesToRadians_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Rotation_IsSuccessfully;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_DegreesToRadians_A_ImplicitCast;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_InterpSpeed_ImplicitCast;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINUpdate) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINUpdate");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINUpdate) == 0x000048, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINUpdate");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINUpdate, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINUpdate::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINUpdate, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000008, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINUpdate::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINUpdate, CallFunc_DegreesToRadians_ReturnValue) == 0x000010, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINUpdate::CallFunc_DegreesToRadians_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINUpdate, CallFunc_RInterpTo_ReturnValue) == 0x000018, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINUpdate::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINUpdate, CallFunc_Set_Rotation_IsSuccessfully) == 0x000030, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINUpdate::CallFunc_Set_Rotation_IsSuccessfully' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINUpdate, CallFunc_DegreesToRadians_A_ImplicitCast) == 0x000038, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINUpdate::CallFunc_DegreesToRadians_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINUpdate, CallFunc_RInterpTo_InterpSpeed_ImplicitCast) == 0x000040, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINUpdate::CallFunc_RInterpTo_InterpSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINUpdate, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x000044, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingINUpdate::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.UpdateHomingLP
// 0x0002 (0x0002 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLP final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateHomingLPKey_Pressed_IsSuccessfully; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLP) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLP");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLP) == 0x000002, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLP");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLP, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLP, CallFunc_UpdateHomingLPKey_Pressed_IsSuccessfully) == 0x000001, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLP::CallFunc_UpdateHomingLPKey_Pressed_IsSuccessfully' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.UpdateHomingLPKey Pressed
// 0x0058 (0x0058 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPKey_Pressed final
{
public:
	bool                                          IsSuccessfully;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckShortDash_IsStartShortDash;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckDashUpDown_ChangeDashUpDown;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_2; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_3; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckBurstSmash_IsStartSubState;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_4; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPKey_Pressed) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPKey_Pressed");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPKey_Pressed) == 0x000058, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPKey_Pressed");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPKey_Pressed, IsSuccessfully) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPKey_Pressed::IsSuccessfully' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPKey_Pressed, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000008, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPKey_Pressed::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPKey_Pressed, CallFunc_CheckShortDash_IsStartShortDash) == 0x000010, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPKey_Pressed::CallFunc_CheckShortDash_IsStartShortDash' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPKey_Pressed, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000018, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPKey_Pressed::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPKey_Pressed, CallFunc_CheckDashUpDown_ChangeDashUpDown) == 0x000020, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPKey_Pressed::CallFunc_CheckDashUpDown_ChangeDashUpDown' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPKey_Pressed, CallFunc_GetLocomotionComponent_LocomotionComponent_2) == 0x000028, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPKey_Pressed::CallFunc_GetLocomotionComponent_LocomotionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPKey_Pressed, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPKey_Pressed::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPKey_Pressed, CallFunc_GetLocomotionComponent_LocomotionComponent_3) == 0x000038, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPKey_Pressed::CallFunc_GetLocomotionComponent_LocomotionComponent_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPKey_Pressed, CallFunc_CheckBurstSmash_IsStartSubState) == 0x000040, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPKey_Pressed::CallFunc_CheckBurstSmash_IsStartSubState' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPKey_Pressed, CallFunc_GetLocomotionComponent_LocomotionComponent_4) == 0x000048, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPKey_Pressed::CallFunc_GetLocomotionComponent_LocomotionComponent_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPKey_Pressed, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000050, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPKey_Pressed::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.UpdateHomingLPOn Hit
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPOn_Hit final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           K2Node_DynamicCast_AsSSCharacter;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPOn_Hit) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPOn_Hit");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPOn_Hit) == 0x000018, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPOn_Hit");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPOn_Hit, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPOn_Hit::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPOn_Hit, K2Node_DynamicCast_AsSSCharacter) == 0x000008, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPOn_Hit::K2Node_DynamicCast_AsSSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPOn_Hit, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPOn_Hit::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.UpdateHomingLPStop
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPStop final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPStop) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPStop");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPStop) == 0x000008, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPStop");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPStop, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPStop::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.UpdateHomingLPUpdate
// 0x0020 (0x0020 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPUpdate final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EKoratDragonHomingState                       CallFunc_UpdateHomingMove_NextDragonHomingStatus;  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Update_Sub_State_Timer_OutSubStateTimer;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPUpdate) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPUpdate");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPUpdate) == 0x000020, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPUpdate");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPUpdate, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPUpdate::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPUpdate, CallFunc_UpdateHomingMove_NextDragonHomingStatus) == 0x000008, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPUpdate::CallFunc_UpdateHomingMove_NextDragonHomingStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPUpdate, CallFunc_Update_Sub_State_Timer_OutSubStateTimer) == 0x000010, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPUpdate::CallFunc_Update_Sub_State_Timer_OutSubStateTimer' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPUpdate, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingLPUpdate::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.UpdateHomingMove
// 0x0030 (0x0030 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingMove final
{
public:
	double                                        InDeltaSeconds;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InIsDashCombatives;                                // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratDragonHomingState                       NextDragonHomingStatus;                            // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCanChase;                                        // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_1;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetTargetCharacter_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ConsumeSPHomingLP_IsSuccessfully;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCanHomingChase_ReturnValue;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckHomingEnd_IsEnd;                     // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingMove) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingMove");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingMove) == 0x000030, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingMove");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingMove, InDeltaSeconds) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingMove::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingMove, InIsDashCombatives) == 0x000008, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingMove::InIsDashCombatives' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingMove, NextDragonHomingStatus) == 0x000009, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingMove::NextDragonHomingStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingMove, IsCanChase) == 0x00000A, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingMove::IsCanChase' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingMove, CallFunc_GetSSCharacter_SSCharacter) == 0x000010, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingMove::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingMove, CallFunc_GetSSCharacter_SSCharacter_1) == 0x000018, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingMove::CallFunc_GetSSCharacter_SSCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingMove, CallFunc_GetTargetCharacter_ReturnValue) == 0x000020, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingMove::CallFunc_GetTargetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingMove, CallFunc_ConsumeSPHomingLP_IsSuccessfully) == 0x000028, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingMove::CallFunc_ConsumeSPHomingLP_IsSuccessfully' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingMove, CallFunc_IsCanHomingChase_ReturnValue) == 0x000029, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingMove::CallFunc_IsCanHomingChase_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingMove, CallFunc_CheckHomingEnd_IsEnd) == 0x00002A, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingMove::CallFunc_CheckHomingEnd_IsEnd' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.UpdateHomingOT
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOT final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOT) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOT");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOT) == 0x000001, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOT");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOT, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOT::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.UpdateHomingOTKeyPressed
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTKeyPressed final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckDashUpDown_ChangeDashUpDown;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckShortDash_IsStartShortDash;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTKeyPressed) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTKeyPressed");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTKeyPressed) == 0x000018, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTKeyPressed");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTKeyPressed, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTKeyPressed::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTKeyPressed, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000008, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTKeyPressed::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTKeyPressed, CallFunc_CheckDashUpDown_ChangeDashUpDown) == 0x000010, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTKeyPressed::CallFunc_CheckDashUpDown_ChangeDashUpDown' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTKeyPressed, CallFunc_CheckShortDash_IsStartShortDash) == 0x000011, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTKeyPressed::CallFunc_CheckShortDash_IsStartShortDash' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.UpdateHomingOTOn Hit
// 0x0010 (0x0010 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Hit final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHitFloor_IsHitFloor;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Hit) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Hit");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Hit) == 0x000010, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Hit");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Hit, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Hit::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Hit, CallFunc_IsHitFloor_IsHitFloor) == 0x000008, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Hit::CallFunc_IsHitFloor_IsHitFloor' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.UpdateHomingOTOn Set Anim Time
// 0x0040 (0x0040 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Set_Anim_Time final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPawn_Pawn;                             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_2; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterBase_C>  K2Node_DynamicCast_AsBPI_Character_Base;           // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AutoSetCharacterMovementModeToIdle_IsSet; // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 CallFunc_AutoSetCharacterMovementModeToIdle_SetMovementMode; // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Set_Anim_Time) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Set_Anim_Time");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Set_Anim_Time) == 0x000040, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Set_Anim_Time");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Set_Anim_Time, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Set_Anim_Time::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Set_Anim_Time, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000008, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Set_Anim_Time::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Set_Anim_Time, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000010, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Set_Anim_Time::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Set_Anim_Time, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000011, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Set_Anim_Time::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Set_Anim_Time, CallFunc_GetPawn_Pawn) == 0x000018, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Set_Anim_Time::CallFunc_GetPawn_Pawn' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Set_Anim_Time, CallFunc_GetLocomotionComponent_LocomotionComponent_2) == 0x000020, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Set_Anim_Time::CallFunc_GetLocomotionComponent_LocomotionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Set_Anim_Time, K2Node_DynamicCast_AsBPI_Character_Base) == 0x000028, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Set_Anim_Time::K2Node_DynamicCast_AsBPI_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Set_Anim_Time, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Set_Anim_Time::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Set_Anim_Time, CallFunc_AutoSetCharacterMovementModeToIdle_IsSet) == 0x000039, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Set_Anim_Time::CallFunc_AutoSetCharacterMovementModeToIdle_IsSet' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Set_Anim_Time, CallFunc_AutoSetCharacterMovementModeToIdle_SetMovementMode) == 0x00003A, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTOn_Set_Anim_Time::CallFunc_AutoSetCharacterMovementModeToIdle_SetMovementMode' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.UpdateHomingOTStop
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTStop final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTStop) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTStop");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTStop) == 0x000008, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTStop");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTStop, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTStop::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");

// Function BP_CharacterLocomotionSubDragonHoming.BP_CharacterLocomotionSubDragonHoming_C.UpdateHomingOTUpdate
// 0x0080 (0x0080 - 0x0000)
struct BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTUpdate final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_2; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_DegreesToRadians_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Update_Sub_State_Timer_OutSubStateTimer;  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Rotation_IsSuccessfully;              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_DegreesToRadians_A_ImplicitCast;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_InterpSpeed_ImplicitCast;       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTUpdate) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTUpdate");
static_assert(sizeof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTUpdate) == 0x000080, "Wrong size on BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTUpdate");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTUpdate, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTUpdate::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTUpdate, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000008, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTUpdate::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTUpdate, CallFunc_GetLocomotionComponent_LocomotionComponent_2) == 0x000010, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTUpdate::CallFunc_GetLocomotionComponent_LocomotionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTUpdate, CallFunc_BreakRotator_Roll) == 0x000018, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTUpdate::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTUpdate, CallFunc_BreakRotator_Pitch) == 0x00001C, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTUpdate::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTUpdate, CallFunc_BreakRotator_Yaw) == 0x000020, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTUpdate::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTUpdate, CallFunc_MakeRotator_ReturnValue) == 0x000028, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTUpdate::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTUpdate, CallFunc_DegreesToRadians_ReturnValue) == 0x000040, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTUpdate::CallFunc_DegreesToRadians_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTUpdate, CallFunc_Update_Sub_State_Timer_OutSubStateTimer) == 0x000048, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTUpdate::CallFunc_Update_Sub_State_Timer_OutSubStateTimer' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTUpdate, CallFunc_RInterpTo_ReturnValue) == 0x000050, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTUpdate::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTUpdate, CallFunc_Set_Rotation_IsSuccessfully) == 0x000068, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTUpdate::CallFunc_Set_Rotation_IsSuccessfully' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTUpdate, CallFunc_DegreesToRadians_A_ImplicitCast) == 0x000070, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTUpdate::CallFunc_DegreesToRadians_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTUpdate, CallFunc_RInterpTo_InterpSpeed_ImplicitCast) == 0x000078, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTUpdate::CallFunc_RInterpTo_InterpSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTUpdate, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x00007C, "Member 'BP_CharacterLocomotionSubDragonHoming_C_UpdateHomingOTUpdate::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");

}

