#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterLocomotionSubBlowUkemi

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SS_structs.hpp"


namespace SDK::Params
{

// Function BP_CharacterLocomotionSubBlowUkemi.BP_CharacterLocomotionSubBlowUkemi_C.CheckBlowUkemiInput
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterLocomotionSubBlowUkemi_C_CheckBlowUkemiInput final
{
public:
	EKoratBattleKey                               CallFunc_GetUkemiCheckKey_UkemiCheckKey;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubBlowUkemi_C_CheckBlowUkemiInput) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubBlowUkemi_C_CheckBlowUkemiInput");
static_assert(sizeof(BP_CharacterLocomotionSubBlowUkemi_C_CheckBlowUkemiInput) == 0x000018, "Wrong size on BP_CharacterLocomotionSubBlowUkemi_C_CheckBlowUkemiInput");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_CheckBlowUkemiInput, CallFunc_GetUkemiCheckKey_UkemiCheckKey) == 0x000000, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_CheckBlowUkemiInput::CallFunc_GetUkemiCheckKey_UkemiCheckKey' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_CheckBlowUkemiInput, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000008, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_CheckBlowUkemiInput::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_CheckBlowUkemiInput, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_CheckBlowUkemiInput::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubBlowUkemi.BP_CharacterLocomotionSubBlowUkemi_C.CheckBlowUkemiOnHit
// 0x0010 (0x0010 - 0x0000)
struct BP_CharacterLocomotionSubBlowUkemi_C_CheckBlowUkemiOnHit final
{
public:
	bool                                          IsUkemiOK;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUnconscious_IsUnconscious;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubBlowUkemi_C_CheckBlowUkemiOnHit) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubBlowUkemi_C_CheckBlowUkemiOnHit");
static_assert(sizeof(BP_CharacterLocomotionSubBlowUkemi_C_CheckBlowUkemiOnHit) == 0x000010, "Wrong size on BP_CharacterLocomotionSubBlowUkemi_C_CheckBlowUkemiOnHit");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_CheckBlowUkemiOnHit, IsUkemiOK) == 0x000000, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_CheckBlowUkemiOnHit::IsUkemiOK' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_CheckBlowUkemiOnHit, CallFunc_IsUnconscious_IsUnconscious) == 0x000001, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_CheckBlowUkemiOnHit::CallFunc_IsUnconscious_IsUnconscious' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_CheckBlowUkemiOnHit, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_CheckBlowUkemiOnHit::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_CheckBlowUkemiOnHit, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000003, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_CheckBlowUkemiOnHit::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_CheckBlowUkemiOnHit, CallFunc_Less_DoubleDouble_B_ImplicitCast) == 0x000008, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_CheckBlowUkemiOnHit::CallFunc_Less_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubBlowUkemi.BP_CharacterLocomotionSubBlowUkemi_C.InitializeBlowUkemi
// 0x02E0 (0x02E0 - 0x0000)
struct BP_CharacterLocomotionSubBlowUkemi_C_InitializeBlowUkemi final
{
public:
	struct FKoratHitBackMovementData              InHitBackData;                                     // 0x0000(0x02E0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_CharacterLocomotionSubBlowUkemi_C_InitializeBlowUkemi) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubBlowUkemi_C_InitializeBlowUkemi");
static_assert(sizeof(BP_CharacterLocomotionSubBlowUkemi_C_InitializeBlowUkemi) == 0x0002E0, "Wrong size on BP_CharacterLocomotionSubBlowUkemi_C_InitializeBlowUkemi");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_InitializeBlowUkemi, InHitBackData) == 0x000000, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_InitializeBlowUkemi::InHitBackData' has a wrong offset!");

// Function BP_CharacterLocomotionSubBlowUkemi.BP_CharacterLocomotionSubBlowUkemi_C.Set Up Blow Ukemi Stand Up Movement Parameter
// 0x02C0 (0x02C0 - 0x0000)
struct BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter final
{
public:
	EKoratBlowState                               InBlowStatus;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratBlowReactionUkemiStandUpMovementParameter Temp_struct_Variable;                              // 0x0004(0x001C)(NoDestructor)
	struct FKoratBlowReactionUkemiStandUpMovementParameter Temp_struct_Variable_1;                            // 0x0020(0x001C)(NoDestructor)
	struct FKoratBlowReactionUkemiStandUpMovementParameter Temp_struct_Variable_2;                            // 0x003C(0x001C)(NoDestructor)
	struct FKoratBlowReactionUkemiStandUpMovementParameter Temp_struct_Variable_3;                            // 0x0058(0x001C)(NoDestructor)
	struct FKoratBlowReactionUkemiStandUpMovementParameter Temp_struct_Variable_4;                            // 0x0074(0x001C)(NoDestructor)
	struct FKoratBlowReactionUkemiStandUpMovementParameter Temp_struct_Variable_5;                            // 0x0090(0x001C)(NoDestructor)
	struct FKoratBlowReactionUkemiStandUpMovementParameter Temp_struct_Variable_6;                            // 0x00AC(0x001C)(NoDestructor)
	struct FKoratBlowReactionUkemiStandUpMovementParameter Temp_struct_Variable_7;                            // 0x00C8(0x001C)(NoDestructor)
	struct FKoratBlowReactionUkemiStandUpMovementParameter Temp_struct_Variable_8;                            // 0x00E4(0x001C)(NoDestructor)
	struct FKoratBlowReactionUkemiStandUpMovementParameter Temp_struct_Variable_9;                            // 0x0100(0x001C)(NoDestructor)
	struct FKoratBlowReactionUkemiStandUpMovementParameter Temp_struct_Variable_10;                           // 0x011C(0x001C)(NoDestructor)
	struct FKoratBlowReactionUkemiStandUpMovementParameter Temp_struct_Variable_11;                           // 0x0138(0x001C)(NoDestructor)
	struct FKoratBlowReactionUkemiStandUpMovementParameter Temp_struct_Variable_12;                           // 0x0154(0x001C)(NoDestructor)
	struct FKoratBlowReactionUkemiStandUpMovementParameter Temp_struct_Variable_13;                           // 0x0170(0x001C)(NoDestructor)
	struct FKoratBlowReactionUkemiStandUpMovementParameter Temp_struct_Variable_14;                           // 0x018C(0x001C)(NoDestructor)
	struct FKoratBlowReactionUkemiStandUpMovementParameter Temp_struct_Variable_15;                           // 0x01A8(0x001C)(NoDestructor)
	struct FKoratBlowReactionUkemiStandUpMovementParameter Temp_struct_Variable_16;                           // 0x01C4(0x001C)(NoDestructor)
	struct FKoratBlowReactionUkemiStandUpMovementParameter Temp_struct_Variable_17;                           // 0x01E0(0x001C)(NoDestructor)
	struct FKoratBlowReactionUkemiStandUpMovementParameter Temp_struct_Variable_18;                           // 0x01FC(0x001C)(NoDestructor)
	struct FKoratBlowReactionUkemiStandUpMovementParameter Temp_struct_Variable_19;                           // 0x0218(0x001C)(NoDestructor)
	struct FKoratBlowReactionUkemiStandUpMovementParameter Temp_struct_Variable_20;                           // 0x0234(0x001C)(NoDestructor)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement;   // 0x0250(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_1; // 0x0258(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_2; // 0x0260(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_3; // 0x0268(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_4; // 0x0270(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_5; // 0x0278(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_6; // 0x0280(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EKoratBlowState                               Temp_byte_Variable;                                // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_7; // 0x0290(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKoratBlowReactionUkemiStandUpMovementParameter K2Node_Select_Default;                             // 0x0298(0x001C)(NoDestructor)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_MaxAddMoveTime_ImplicitCast;    // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter");
static_assert(sizeof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter) == 0x0002C0, "Wrong size on BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter, InBlowStatus) == 0x000000, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter::InBlowStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter, Temp_struct_Variable) == 0x000004, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter, Temp_struct_Variable_1) == 0x000020, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter, Temp_struct_Variable_2) == 0x00003C, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter, Temp_struct_Variable_3) == 0x000058, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter, Temp_struct_Variable_4) == 0x000074, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter, Temp_struct_Variable_5) == 0x000090, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter, Temp_struct_Variable_6) == 0x0000AC, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter, Temp_struct_Variable_7) == 0x0000C8, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter, Temp_struct_Variable_8) == 0x0000E4, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter, Temp_struct_Variable_9) == 0x000100, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter, Temp_struct_Variable_10) == 0x00011C, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter, Temp_struct_Variable_11) == 0x000138, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter, Temp_struct_Variable_12) == 0x000154, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter::Temp_struct_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter, Temp_struct_Variable_13) == 0x000170, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter::Temp_struct_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter, Temp_struct_Variable_14) == 0x00018C, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter::Temp_struct_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter, Temp_struct_Variable_15) == 0x0001A8, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter::Temp_struct_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter, Temp_struct_Variable_16) == 0x0001C4, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter::Temp_struct_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter, Temp_struct_Variable_17) == 0x0001E0, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter::Temp_struct_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter, Temp_struct_Variable_18) == 0x0001FC, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter::Temp_struct_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter, Temp_struct_Variable_19) == 0x000218, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter::Temp_struct_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter, Temp_struct_Variable_20) == 0x000234, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter::Temp_struct_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter, CallFunc_GetCharacterMovement_CharacterMovement) == 0x000250, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter::CallFunc_GetCharacterMovement_CharacterMovement' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter, CallFunc_GetCharacterMovement_CharacterMovement_1) == 0x000258, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter::CallFunc_GetCharacterMovement_CharacterMovement_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter, CallFunc_GetCharacterMovement_CharacterMovement_2) == 0x000260, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter::CallFunc_GetCharacterMovement_CharacterMovement_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter, CallFunc_GetCharacterMovement_CharacterMovement_3) == 0x000268, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter::CallFunc_GetCharacterMovement_CharacterMovement_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter, CallFunc_GetCharacterMovement_CharacterMovement_4) == 0x000270, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter::CallFunc_GetCharacterMovement_CharacterMovement_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter, CallFunc_GetCharacterMovement_CharacterMovement_5) == 0x000278, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter::CallFunc_GetCharacterMovement_CharacterMovement_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter, CallFunc_GetCharacterMovement_CharacterMovement_6) == 0x000280, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter::CallFunc_GetCharacterMovement_CharacterMovement_6' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter, Temp_byte_Variable) == 0x000288, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter, CallFunc_GetCharacterMovement_CharacterMovement_7) == 0x000290, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter::CallFunc_GetCharacterMovement_CharacterMovement_7' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter, K2Node_Select_Default) == 0x000298, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter, K2Node_VariableSet_MaxAddMoveTime_ImplicitCast) == 0x0002B8, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_Set_Up_Blow_Ukemi_Stand_Up_Movement_Parameter::K2Node_VariableSet_MaxAddMoveTime_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubBlowUkemi.BP_CharacterLocomotionSubBlowUkemi_C.StartBlowUkemi
// 0x0040 (0x0040 - 0x0000)
struct BP_CharacterLocomotionSubBlowUkemi_C_StartBlowUkemi final
{
public:
	EKoratBlowState                               InBlowStatus;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPawn_Pawn;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterBase_C>  K2Node_DynamicCast_AsBPI_Character_Base;           // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetKnockBackVector_KnockBackVector;       // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubBlowUkemi_C_StartBlowUkemi) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubBlowUkemi_C_StartBlowUkemi");
static_assert(sizeof(BP_CharacterLocomotionSubBlowUkemi_C_StartBlowUkemi) == 0x000040, "Wrong size on BP_CharacterLocomotionSubBlowUkemi_C_StartBlowUkemi");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_StartBlowUkemi, InBlowStatus) == 0x000000, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_StartBlowUkemi::InBlowStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_StartBlowUkemi, CallFunc_GetPawn_Pawn) == 0x000008, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_StartBlowUkemi::CallFunc_GetPawn_Pawn' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_StartBlowUkemi, K2Node_DynamicCast_AsBPI_Character_Base) == 0x000010, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_StartBlowUkemi::K2Node_DynamicCast_AsBPI_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_StartBlowUkemi, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_StartBlowUkemi::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_StartBlowUkemi, CallFunc_GetKnockBackVector_KnockBackVector) == 0x000028, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_StartBlowUkemi::CallFunc_GetKnockBackVector_KnockBackVector' has a wrong offset!");

// Function BP_CharacterLocomotionSubBlowUkemi.BP_CharacterLocomotionSubBlowUkemi_C.TurnBlowUkemi
// 0x0050 (0x0050 - 0x0000)
struct BP_CharacterLocomotionSubBlowUkemi_C_TurnBlowUkemi final
{
public:
	struct FVector                                InKnockBackVector;                                 // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_NegateVector_ReturnValue;                 // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Rotation_IsSuccessfully;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubBlowUkemi_C_TurnBlowUkemi) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubBlowUkemi_C_TurnBlowUkemi");
static_assert(sizeof(BP_CharacterLocomotionSubBlowUkemi_C_TurnBlowUkemi) == 0x000050, "Wrong size on BP_CharacterLocomotionSubBlowUkemi_C_TurnBlowUkemi");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_TurnBlowUkemi, InKnockBackVector) == 0x000000, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_TurnBlowUkemi::InKnockBackVector' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_TurnBlowUkemi, CallFunc_NegateVector_ReturnValue) == 0x000018, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_TurnBlowUkemi::CallFunc_NegateVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_TurnBlowUkemi, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000030, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_TurnBlowUkemi::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_TurnBlowUkemi, CallFunc_Set_Rotation_IsSuccessfully) == 0x000048, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_TurnBlowUkemi::CallFunc_Set_Rotation_IsSuccessfully' has a wrong offset!");

// Function BP_CharacterLocomotionSubBlowUkemi.BP_CharacterLocomotionSubBlowUkemi_C.UpdateBlowUkemiInput
// 0x0010 (0x0010 - 0x0000)
struct BP_CharacterLocomotionSubBlowUkemi_C_UpdateBlowUkemiInput final
{
public:
	double                                        InDeltaSeconds;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubBlowUkemi_C_UpdateBlowUkemiInput) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubBlowUkemi_C_UpdateBlowUkemiInput");
static_assert(sizeof(BP_CharacterLocomotionSubBlowUkemi_C_UpdateBlowUkemiInput) == 0x000010, "Wrong size on BP_CharacterLocomotionSubBlowUkemi_C_UpdateBlowUkemiInput");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_UpdateBlowUkemiInput, InDeltaSeconds) == 0x000000, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_UpdateBlowUkemiInput::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_UpdateBlowUkemiInput, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_UpdateBlowUkemiInput::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubBlowUkemi.BP_CharacterLocomotionSubBlowUkemi_C.UpdateBlowUkemiMove
// 0x0020 (0x0020 - 0x0000)
struct BP_CharacterLocomotionSubBlowUkemi_C_UpdateBlowUkemiMove final
{
public:
	double                                        InDeltaSeconds;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPawn_Pawn;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubBlowUkemi_C_UpdateBlowUkemiMove) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubBlowUkemi_C_UpdateBlowUkemiMove");
static_assert(sizeof(BP_CharacterLocomotionSubBlowUkemi_C_UpdateBlowUkemiMove) == 0x000020, "Wrong size on BP_CharacterLocomotionSubBlowUkemi_C_UpdateBlowUkemiMove");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_UpdateBlowUkemiMove, InDeltaSeconds) == 0x000000, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_UpdateBlowUkemiMove::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_UpdateBlowUkemiMove, CallFunc_GetPawn_Pawn) == 0x000008, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_UpdateBlowUkemiMove::CallFunc_GetPawn_Pawn' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_UpdateBlowUkemiMove, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_UpdateBlowUkemiMove::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubBlowUkemi_C_UpdateBlowUkemiMove, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_CharacterLocomotionSubBlowUkemi_C_UpdateBlowUkemiMove::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");

}

