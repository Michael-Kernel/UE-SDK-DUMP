#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Option_List_Brightness

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SS_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Option_List_Brightness.WBP_Option_List_Brightness_C
// 0x0068 (0x0518 - 0x04B0)
class UWBP_Option_List_Brightness_C final : public USSOptionListBrightnessManager
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       SE_Button_Active_In;                               // 0x04B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ANI_Out_R;                                         // 0x04C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ANI_Out_L;                                         // 0x04C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ANI_IN_R;                                          // 0x04D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ANI_IN_L;                                          // 0x04D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ANI_HIde;                                          // 0x04E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ANI_Wait;                                          // 0x04E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ANI_Show;                                          // 0x04F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_OBJ_Option_List_011_Gauge_C*       HDRBlackBtn;                                       // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OBJ_Option_List_011_Gauge_C*       HDRBritnessBtn;                                    // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OBJ_Option_List_010_Text_C*        HDRButton;                                         // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OBJ_Option_List_011_Gauge_C*       HDRContrastBtn;                                    // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void BndEvt__WBP_Option_List_Brightness_HDRButton_K2Node_ComponentBoundEvent_0_OnSSMenuButtonFocusedEvent__DelegateSignature();
	void ExecuteUbergraph_WBP_Option_List_Brightness(int32 EntryPoint);
	void OnHideStarted();
	void OnShowFinished();
	void OnShowStarted();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Option_List_Brightness_C">();
	}
	static class UWBP_Option_List_Brightness_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Option_List_Brightness_C>();
	}
};
static_assert(alignof(UWBP_Option_List_Brightness_C) == 0x000008, "Wrong alignment on UWBP_Option_List_Brightness_C");
static_assert(sizeof(UWBP_Option_List_Brightness_C) == 0x000518, "Wrong size on UWBP_Option_List_Brightness_C");
static_assert(offsetof(UWBP_Option_List_Brightness_C, UberGraphFrame) == 0x0004B0, "Member 'UWBP_Option_List_Brightness_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Option_List_Brightness_C, SE_Button_Active_In) == 0x0004B8, "Member 'UWBP_Option_List_Brightness_C::SE_Button_Active_In' has a wrong offset!");
static_assert(offsetof(UWBP_Option_List_Brightness_C, ANI_Out_R) == 0x0004C0, "Member 'UWBP_Option_List_Brightness_C::ANI_Out_R' has a wrong offset!");
static_assert(offsetof(UWBP_Option_List_Brightness_C, ANI_Out_L) == 0x0004C8, "Member 'UWBP_Option_List_Brightness_C::ANI_Out_L' has a wrong offset!");
static_assert(offsetof(UWBP_Option_List_Brightness_C, ANI_IN_R) == 0x0004D0, "Member 'UWBP_Option_List_Brightness_C::ANI_IN_R' has a wrong offset!");
static_assert(offsetof(UWBP_Option_List_Brightness_C, ANI_IN_L) == 0x0004D8, "Member 'UWBP_Option_List_Brightness_C::ANI_IN_L' has a wrong offset!");
static_assert(offsetof(UWBP_Option_List_Brightness_C, ANI_HIde) == 0x0004E0, "Member 'UWBP_Option_List_Brightness_C::ANI_HIde' has a wrong offset!");
static_assert(offsetof(UWBP_Option_List_Brightness_C, ANI_Wait) == 0x0004E8, "Member 'UWBP_Option_List_Brightness_C::ANI_Wait' has a wrong offset!");
static_assert(offsetof(UWBP_Option_List_Brightness_C, ANI_Show) == 0x0004F0, "Member 'UWBP_Option_List_Brightness_C::ANI_Show' has a wrong offset!");
static_assert(offsetof(UWBP_Option_List_Brightness_C, HDRBlackBtn) == 0x0004F8, "Member 'UWBP_Option_List_Brightness_C::HDRBlackBtn' has a wrong offset!");
static_assert(offsetof(UWBP_Option_List_Brightness_C, HDRBritnessBtn) == 0x000500, "Member 'UWBP_Option_List_Brightness_C::HDRBritnessBtn' has a wrong offset!");
static_assert(offsetof(UWBP_Option_List_Brightness_C, HDRButton) == 0x000508, "Member 'UWBP_Option_List_Brightness_C::HDRButton' has a wrong offset!");
static_assert(offsetof(UWBP_Option_List_Brightness_C, HDRContrastBtn) == 0x000510, "Member 'UWBP_Option_List_Brightness_C::HDRContrastBtn' has a wrong offset!");

}

