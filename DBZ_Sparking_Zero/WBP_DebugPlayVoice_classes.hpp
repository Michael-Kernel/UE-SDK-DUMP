#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_DebugPlayVoice

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SS_structs.hpp"
#include "UMG_classes.hpp"
#include "CriWareRuntime_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_DebugPlayVoice.WBP_DebugPlayVoice_C
// 0x0430 (0x06B0 - 0x0280)
class UWBP_DebugPlayVoice_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCheckBox*                              CheckBox_Change2DCam;                              // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_ChangeFixCam;                             // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_enable_P1;                                // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_enable_P2;                                // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_enableCamera_P1;                          // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_enableCamera_P2;                          // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_enableEventVoice_P1;                      // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_enableEventVoice_P2;                      // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_IsChartDraw;                              // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_IsHeight;                                 // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_IsLogVolume;                              // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_IsPosition;                               // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_IsVariableA;                              // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_IsVariableB;                              // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_IsWidth;                                  // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableTextBox*                       EditableTextBox_1;                                 // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableTextBox*                       EditableTextBox_2;                                 // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableTextBox*                       EditableTextBox_ChartTime;                         // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableTextBox*                       EditableTextBox_SetReadoutOffset;                  // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Play;                                              // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_7;                                       // 0x0328(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_1006;                                    // 0x0330(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FString                                 Character1PVoiceCueID;                             // 0x0338(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 Character2PVoiceCueID;                             // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          IsSetCharacter;                                    // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DebugDraw;                                         // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FText                                   NoText;                                            // 0x0370(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ASSCharacter*                           SSCharacter1P;                                     // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<struct FKoratSequencePlayInfo>         Play_Section;                                      // 0x0390(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FString, class ASSCharacter*>      In_Rebind_Characters;                              // 0x03A0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FKoratSequenceCameraDescription        In_Camera_Params;                                  // 0x03F0(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ASSLevelSequenceActor*                  LevelSequenceActor;                                // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          Custom_Time_Dilation;                              // 0x0498(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_499[0x7];                                      // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratSequenceCameraDescription        In_Camera_Params_0;                                // 0x04A0(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FKoratSequenceCameraDescription        In_Camera_Params_1;                                // 0x0540(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FKoratSequenceCameraDescription        In_Camera_Params_1_0;                              // 0x05E0(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ASSCharacter*                           SSCharacter2P;                                     // 0x0680(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FString                                 Character1PEventVoiceCueID;                        // 0x0688(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 Character2PEventVoiceCueID;                        // 0x0698(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void BndEvt__Test_Play_K2Node_ComponentBoundEvent_5_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__WBP_DebugPlayVoice_CheckBox_Change2DCam_K2Node_ComponentBoundEvent_15_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__WBP_DebugPlayVoice_CheckBox_ChangeFixCam_K2Node_ComponentBoundEvent_14_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__WBP_DebugPlayVoice_CheckBox_enableCamera_P1_K2Node_ComponentBoundEvent_10_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__WBP_DebugPlayVoice_CheckBox_enableCamera_P2_K2Node_ComponentBoundEvent_11_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__WBP_DebugPlayVoice_CheckBox_IsChartDraw_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__WBP_DebugPlayVoice_CheckBox_IsHeight_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__WBP_DebugPlayVoice_CheckBox_IsLogVolume_K2Node_ComponentBoundEvent_4_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__WBP_DebugPlayVoice_CheckBox_IsPosition_K2Node_ComponentBoundEvent_3_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__WBP_DebugPlayVoice_CheckBox_IsVariableA_K2Node_ComponentBoundEvent_6_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__WBP_DebugPlayVoice_CheckBox_IsVariableB_K2Node_ComponentBoundEvent_7_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__WBP_DebugPlayVoice_CheckBox_IsWidth_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__WBP_DebugPlayVoice_EditableTextBox_ChartTime_K2Node_ComponentBoundEvent_8_OnEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__WBP_DebugPlayVoice_EditableTextBox_SetReadoutOffset_K2Node_ComponentBoundEvent_9_OnEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void ExecuteUbergraph_WBP_DebugPlayVoice(int32 EntryPoint);
	class FText GetStatusName_1P();
	class FText GetStatusName_2P();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_DebugPlayVoice_C">();
	}
	static class UWBP_DebugPlayVoice_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_DebugPlayVoice_C>();
	}
};
static_assert(alignof(UWBP_DebugPlayVoice_C) == 0x000010, "Wrong alignment on UWBP_DebugPlayVoice_C");
static_assert(sizeof(UWBP_DebugPlayVoice_C) == 0x0006B0, "Wrong size on UWBP_DebugPlayVoice_C");
static_assert(offsetof(UWBP_DebugPlayVoice_C, UberGraphFrame) == 0x000280, "Member 'UWBP_DebugPlayVoice_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, CheckBox_Change2DCam) == 0x000288, "Member 'UWBP_DebugPlayVoice_C::CheckBox_Change2DCam' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, CheckBox_ChangeFixCam) == 0x000290, "Member 'UWBP_DebugPlayVoice_C::CheckBox_ChangeFixCam' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, CheckBox_enable_P1) == 0x000298, "Member 'UWBP_DebugPlayVoice_C::CheckBox_enable_P1' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, CheckBox_enable_P2) == 0x0002A0, "Member 'UWBP_DebugPlayVoice_C::CheckBox_enable_P2' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, CheckBox_enableCamera_P1) == 0x0002A8, "Member 'UWBP_DebugPlayVoice_C::CheckBox_enableCamera_P1' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, CheckBox_enableCamera_P2) == 0x0002B0, "Member 'UWBP_DebugPlayVoice_C::CheckBox_enableCamera_P2' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, CheckBox_enableEventVoice_P1) == 0x0002B8, "Member 'UWBP_DebugPlayVoice_C::CheckBox_enableEventVoice_P1' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, CheckBox_enableEventVoice_P2) == 0x0002C0, "Member 'UWBP_DebugPlayVoice_C::CheckBox_enableEventVoice_P2' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, CheckBox_IsChartDraw) == 0x0002C8, "Member 'UWBP_DebugPlayVoice_C::CheckBox_IsChartDraw' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, CheckBox_IsHeight) == 0x0002D0, "Member 'UWBP_DebugPlayVoice_C::CheckBox_IsHeight' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, CheckBox_IsLogVolume) == 0x0002D8, "Member 'UWBP_DebugPlayVoice_C::CheckBox_IsLogVolume' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, CheckBox_IsPosition) == 0x0002E0, "Member 'UWBP_DebugPlayVoice_C::CheckBox_IsPosition' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, CheckBox_IsVariableA) == 0x0002E8, "Member 'UWBP_DebugPlayVoice_C::CheckBox_IsVariableA' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, CheckBox_IsVariableB) == 0x0002F0, "Member 'UWBP_DebugPlayVoice_C::CheckBox_IsVariableB' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, CheckBox_IsWidth) == 0x0002F8, "Member 'UWBP_DebugPlayVoice_C::CheckBox_IsWidth' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, EditableTextBox_1) == 0x000300, "Member 'UWBP_DebugPlayVoice_C::EditableTextBox_1' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, EditableTextBox_2) == 0x000308, "Member 'UWBP_DebugPlayVoice_C::EditableTextBox_2' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, EditableTextBox_ChartTime) == 0x000310, "Member 'UWBP_DebugPlayVoice_C::EditableTextBox_ChartTime' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, EditableTextBox_SetReadoutOffset) == 0x000318, "Member 'UWBP_DebugPlayVoice_C::EditableTextBox_SetReadoutOffset' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, Play) == 0x000320, "Member 'UWBP_DebugPlayVoice_C::Play' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, TextBlock_7) == 0x000328, "Member 'UWBP_DebugPlayVoice_C::TextBlock_7' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, TextBlock_1006) == 0x000330, "Member 'UWBP_DebugPlayVoice_C::TextBlock_1006' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, Character1PVoiceCueID) == 0x000338, "Member 'UWBP_DebugPlayVoice_C::Character1PVoiceCueID' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, Character2PVoiceCueID) == 0x000348, "Member 'UWBP_DebugPlayVoice_C::Character2PVoiceCueID' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, IsSetCharacter) == 0x000358, "Member 'UWBP_DebugPlayVoice_C::IsSetCharacter' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, DebugDraw) == 0x000360, "Member 'UWBP_DebugPlayVoice_C::DebugDraw' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, NoText) == 0x000370, "Member 'UWBP_DebugPlayVoice_C::NoText' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, SSCharacter1P) == 0x000388, "Member 'UWBP_DebugPlayVoice_C::SSCharacter1P' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, Play_Section) == 0x000390, "Member 'UWBP_DebugPlayVoice_C::Play_Section' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, In_Rebind_Characters) == 0x0003A0, "Member 'UWBP_DebugPlayVoice_C::In_Rebind_Characters' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, In_Camera_Params) == 0x0003F0, "Member 'UWBP_DebugPlayVoice_C::In_Camera_Params' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, LevelSequenceActor) == 0x000490, "Member 'UWBP_DebugPlayVoice_C::LevelSequenceActor' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, Custom_Time_Dilation) == 0x000498, "Member 'UWBP_DebugPlayVoice_C::Custom_Time_Dilation' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, In_Camera_Params_0) == 0x0004A0, "Member 'UWBP_DebugPlayVoice_C::In_Camera_Params_0' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, In_Camera_Params_1) == 0x000540, "Member 'UWBP_DebugPlayVoice_C::In_Camera_Params_1' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, In_Camera_Params_1_0) == 0x0005E0, "Member 'UWBP_DebugPlayVoice_C::In_Camera_Params_1_0' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, SSCharacter2P) == 0x000680, "Member 'UWBP_DebugPlayVoice_C::SSCharacter2P' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, Character1PEventVoiceCueID) == 0x000688, "Member 'UWBP_DebugPlayVoice_C::Character1PEventVoiceCueID' has a wrong offset!");
static_assert(offsetof(UWBP_DebugPlayVoice_C, Character2PEventVoiceCueID) == 0x000698, "Member 'UWBP_DebugPlayVoice_C::Character2PEventVoiceCueID' has a wrong offset!");

}

