#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterLocomotionSubStunReaction

#include "Basic.hpp"

#include "BP_CharacterLocomotionSubStunReaction_classes.hpp"
#include "BP_CharacterLocomotionSubStunReaction_parameters.hpp"


namespace SDK
{

// Function BP_CharacterLocomotionSubStunReaction.BP_CharacterLocomotionSubStunReaction_C.Check
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_CharacterLocomotionComponent_C*InLocomotionComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    CanStart                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubStunReaction_C::Check(class UBP_CharacterLocomotionComponent_C* InLocomotionComponent, bool* CanStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubStunReaction_C", "Check");

	Params::BP_CharacterLocomotionSubStunReaction_C_Check Parms{};

	Parms.InLocomotionComponent = InLocomotionComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (CanStart != nullptr)
		*CanStart = Parms.CanStart;
}


// Function BP_CharacterLocomotionSubStunReaction.BP_CharacterLocomotionSubStunReaction_C.CheckAndStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_CharacterLocomotionComponent_C*InLocomotionComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    InInSkip                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsStarted                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubStunReaction_C::CheckAndStart(class UBP_CharacterLocomotionComponent_C* InLocomotionComponent, bool InInSkip, bool* IsStarted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubStunReaction_C", "CheckAndStart");

	Params::BP_CharacterLocomotionSubStunReaction_C_CheckAndStart Parms{};

	Parms.InLocomotionComponent = InLocomotionComponent;
	Parms.InInSkip = InInSkip;

	UObject::ProcessEvent(Func, &Parms);

	if (IsStarted != nullptr)
		*IsStarted = Parms.IsStarted;
}


// Function BP_CharacterLocomotionSubStunReaction.BP_CharacterLocomotionSubStunReaction_C.CheckStunReactionEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnd                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubStunReaction_C::CheckStunReactionEnd(bool* IsEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubStunReaction_C", "CheckStunReactionEnd");

	Params::BP_CharacterLocomotionSubStunReaction_C_CheckStunReactionEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnd != nullptr)
		*IsEnd = Parms.IsEnd;
}


// Function BP_CharacterLocomotionSubStunReaction.BP_CharacterLocomotionSubStunReaction_C.CheckToState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_CharacterLocomotionComponent_C*InLocomotionComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// EKoratStunReactionState                 InStartStatus                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CanStart                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubStunReaction_C::CheckToState(class UBP_CharacterLocomotionComponent_C* InLocomotionComponent, EKoratStunReactionState InStartStatus, bool* CanStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubStunReaction_C", "CheckToState");

	Params::BP_CharacterLocomotionSubStunReaction_C_CheckToState Parms{};

	Parms.InLocomotionComponent = InLocomotionComponent;
	Parms.InStartStatus = InStartStatus;

	UObject::ProcessEvent(Func, &Parms);

	if (CanStart != nullptr)
		*CanStart = Parms.CanStart;
}


// Function BP_CharacterLocomotionSubStunReaction.BP_CharacterLocomotionSubStunReaction_C.GetLocomotionDetailStatus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratCharacterLocomotionDetailStatus   LocomotionDetailStatus                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubStunReaction_C::GetLocomotionDetailStatus(EKoratCharacterLocomotionDetailStatus* LocomotionDetailStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubStunReaction_C", "GetLocomotionDetailStatus");

	Params::BP_CharacterLocomotionSubStunReaction_C_GetLocomotionDetailStatus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LocomotionDetailStatus != nullptr)
		*LocomotionDetailStatus = Parms.LocomotionDetailStatus;
}


// Function BP_CharacterLocomotionSubStunReaction.BP_CharacterLocomotionSubStunReaction_C.GetRunningAction
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratActionDataList             RunningAction                                          (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubStunReaction_C::GetRunningAction(struct FKoratActionDataList* RunningAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubStunReaction_C", "GetRunningAction");

	Params::BP_CharacterLocomotionSubStunReaction_C_GetRunningAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RunningAction != nullptr)
		*RunningAction = std::move(Parms.RunningAction);
}


// Function BP_CharacterLocomotionSubStunReaction.BP_CharacterLocomotionSubStunReaction_C.GetRunningSection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             RunningSection                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubStunReaction_C::GetRunningSection(class FName* RunningSection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubStunReaction_C", "GetRunningSection");

	Params::BP_CharacterLocomotionSubStunReaction_C_GetRunningSection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RunningSection != nullptr)
		*RunningSection = Parms.RunningSection;
}


// Function BP_CharacterLocomotionSubStunReaction.BP_CharacterLocomotionSubStunReaction_C.IsEnableAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnable                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubStunReaction_C::IsEnableAction(bool* IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubStunReaction_C", "IsEnableAction");

	Params::BP_CharacterLocomotionSubStunReaction_C_IsEnableAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnable != nullptr)
		*IsEnable = Parms.IsEnable;
}


// Function BP_CharacterLocomotionSubStunReaction.BP_CharacterLocomotionSubStunReaction_C.SetStunReactionStatus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratStunReactionState                 InStunReactionStatus                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EKoratCharacterActionFinishReason       InActionFinishReason                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubStunReaction_C::SetStunReactionStatus(EKoratStunReactionState InStunReactionStatus, EKoratCharacterActionFinishReason InActionFinishReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubStunReaction_C", "SetStunReactionStatus");

	Params::BP_CharacterLocomotionSubStunReaction_C_SetStunReactionStatus Parms{};

	Parms.InStunReactionStatus = InStunReactionStatus;
	Parms.InActionFinishReason = InActionFinishReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterLocomotionSubStunReaction.BP_CharacterLocomotionSubStunReaction_C.Start
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_CharacterLocomotionComponent_C*InLocomotionComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    InInSkip                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubStunReaction_C::Start(class UBP_CharacterLocomotionComponent_C* InLocomotionComponent, bool InInSkip, bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubStunReaction_C", "Start");

	Params::BP_CharacterLocomotionSubStunReaction_C_Start Parms{};

	Parms.InLocomotionComponent = InLocomotionComponent;
	Parms.InInSkip = InInSkip;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BP_CharacterLocomotionSubStunReaction.BP_CharacterLocomotionSubStunReaction_C.StartToState
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_CharacterLocomotionComponent_C*InLocomotionComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// EKoratStunReactionState                 InStartStatus                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InIsFront                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubStunReaction_C::StartToState(class UBP_CharacterLocomotionComponent_C* InLocomotionComponent, EKoratStunReactionState InStartStatus, bool InIsFront)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubStunReaction_C", "StartToState");

	Params::BP_CharacterLocomotionSubStunReaction_C_StartToState Parms{};

	Parms.InLocomotionComponent = InLocomotionComponent;
	Parms.InStartStatus = InStartStatus;
	Parms.InIsFront = InIsFront;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterLocomotionSubStunReaction.BP_CharacterLocomotionSubStunReaction_C.Update
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_CharacterLocomotionComponent_C*InLocomotionComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// ECharacterLocomotionEventType           InEventType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InDeltaSeconds                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubStunReaction_C::Update(class UBP_CharacterLocomotionComponent_C* InLocomotionComponent, ECharacterLocomotionEventType InEventType, double InDeltaSeconds, bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubStunReaction_C", "Update");

	Params::BP_CharacterLocomotionSubStunReaction_C_Update Parms{};

	Parms.InLocomotionComponent = InLocomotionComponent;
	Parms.InEventType = InEventType;
	Parms.InDeltaSeconds = InDeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}

}

