#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterLocomotionSubSuperHighSpeedMove

#include "Basic.hpp"

#include "ECharacterLocomotionEventType_structs.hpp"
#include "SS_structs.hpp"


namespace SDK::Params
{

// Function BP_CharacterLocomotionSubSuperHighSpeedMove.BP_CharacterLocomotionSubSuperHighSpeedMove_C.Check
// 0x0010 (0x0010 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMove_C_Check final
{
public:
	class UBP_CharacterLocomotionComponent_C*     InLocomotionComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CanStart;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_CanStart;                           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_Check) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMove_C_Check");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_Check) == 0x000010, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMove_C_Check");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_Check, InLocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_Check::InLocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_Check, CanStart) == 0x000008, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_Check::CanStart' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_Check, CallFunc_Check_CanStart) == 0x000009, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_Check::CallFunc_Check_CanStart' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMove.BP_CharacterLocomotionSubSuperHighSpeedMove_C.GetHighSpeedMoveParameterInternal
// 0x0318 (0x0318 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal final
{
public:
	bool                                          ______K;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ________________;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ____B__INK_LPxw__;                                 // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ____B__LPK_OTxw__;                                 // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            _______IN;                                         // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            _______LP;                                         // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            _______OT;                                         // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        ________;                                          // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        _____;                                             // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ___;                                               // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        __Bn____________;                                  // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               __Bn___________;                                   // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               __Bn_Kn___________;                                // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        B_Bn____________Y_OTw_K_nB______;                  // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        B_Bn____________;                                  // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               B_Bn___________;                                   // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               B_Bn_Kn___________;                                // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter_1;             // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCanHighSpeedMove_ReturnValue;           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratCharacterDataMovementParameter   CallFunc_GetMovementParameter_OutMovementParameter; // 0x00A0(0x0240)(NoDestructor)
	double                                        K2Node_FunctionResult__________________ImplicitCast; // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_________________IN__LP_____ImplicitCast; // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_________________LP__OT_____ImplicitCast; // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult__________ImplicitCast;       // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_______ImplicitCast;          // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_____ImplicitCast;            // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult___________________OT_____________ImplicitCast; // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal) == 0x000318, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal, ______K) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal::______K' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal, ________________) == 0x000008, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal::________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal, ____B__INK_LPxw__) == 0x000010, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal::____B__INK_LPxw__' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal, ____B__LPK_OTxw__) == 0x000018, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal::____B__LPK_OTxw__' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal, _______IN) == 0x000020, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal::_______IN' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal, _______LP) == 0x000028, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal::_______LP' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal, _______OT) == 0x000030, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal::_______OT' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal, ________) == 0x000038, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal::________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal, _____) == 0x000040, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal::_____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal, ___) == 0x000048, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal::___' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal, __Bn____________) == 0x000050, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal::__Bn____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal, __Bn___________) == 0x000058, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal::__Bn___________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal, __Bn_Kn___________) == 0x000060, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal::__Bn_Kn___________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal, B_Bn____________Y_OTw_K_nB______) == 0x000068, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal::B_Bn____________Y_OTw_K_nB______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal, B_Bn____________) == 0x000070, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal::B_Bn____________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal, B_Bn___________) == 0x000078, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal::B_Bn___________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal, B_Bn_Kn___________) == 0x000080, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal::B_Bn_Kn___________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal, CallFunc_GetSSCharacter_SSCharacter) == 0x000088, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal, CallFunc_GetSSCharacter_SSCharacter_1) == 0x000090, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal::CallFunc_GetSSCharacter_SSCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal, CallFunc_IsCanHighSpeedMove_ReturnValue) == 0x000098, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal::CallFunc_IsCanHighSpeedMove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal, CallFunc_GetMovementParameter_OutMovementParameter) == 0x0000A0, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal::CallFunc_GetMovementParameter_OutMovementParameter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal, K2Node_FunctionResult__________________ImplicitCast) == 0x0002E0, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal::K2Node_FunctionResult__________________ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal, K2Node_FunctionResult_________________IN__LP_____ImplicitCast) == 0x0002E8, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal::K2Node_FunctionResult_________________IN__LP_____ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal, K2Node_FunctionResult_________________LP__OT_____ImplicitCast) == 0x0002F0, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal::K2Node_FunctionResult_________________LP__OT_____ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal, K2Node_FunctionResult__________ImplicitCast) == 0x0002F8, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal::K2Node_FunctionResult__________ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal, K2Node_FunctionResult_______ImplicitCast) == 0x000300, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal::K2Node_FunctionResult_______ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal, K2Node_FunctionResult_____ImplicitCast) == 0x000308, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal::K2Node_FunctionResult_____ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal, K2Node_FunctionResult___________________OT_____________ImplicitCast) == 0x000310, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetHighSpeedMoveParameterInternal::K2Node_FunctionResult___________________OT_____________ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMove.BP_CharacterLocomotionSubSuperHighSpeedMove_C.GetLocomotionDetailStatus
// 0x0007 (0x0007 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetLocomotionDetailStatus final
{
public:
	EKoratCharacterLocomotionDetailStatus         LocomotionDetailStatus;                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratHighSpeedMoveState                      Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetLocomotionDetailStatus) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetLocomotionDetailStatus");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetLocomotionDetailStatus) == 0x000007, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetLocomotionDetailStatus");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetLocomotionDetailStatus, LocomotionDetailStatus) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetLocomotionDetailStatus::LocomotionDetailStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetLocomotionDetailStatus, Temp_byte_Variable) == 0x000001, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetLocomotionDetailStatus::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetLocomotionDetailStatus, Temp_byte_Variable_1) == 0x000002, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetLocomotionDetailStatus::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetLocomotionDetailStatus, Temp_byte_Variable_2) == 0x000003, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetLocomotionDetailStatus::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetLocomotionDetailStatus, Temp_byte_Variable_3) == 0x000004, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetLocomotionDetailStatus::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetLocomotionDetailStatus, Temp_byte_Variable_4) == 0x000005, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetLocomotionDetailStatus::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetLocomotionDetailStatus, K2Node_Select_Default) == 0x000006, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetLocomotionDetailStatus::K2Node_Select_Default' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMove.BP_CharacterLocomotionSubSuperHighSpeedMove_C.GetRunningAction
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetRunningAction final
{
public:
	struct FKoratActionDataList                   RunningAction;                                     // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetRunningAction) == 0x000004, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetRunningAction");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetRunningAction) == 0x000008, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetRunningAction");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetRunningAction, RunningAction) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetRunningAction::RunningAction' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMove.BP_CharacterLocomotionSubSuperHighSpeedMove_C.GetRunningSection
// 0x0010 (0x0010 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetRunningSection final
{
public:
	class FName                                   RunningSection;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetRunningSection_RunningSection;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetRunningSection) == 0x000004, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetRunningSection");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetRunningSection) == 0x000010, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetRunningSection");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetRunningSection, RunningSection) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetRunningSection::RunningSection' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetRunningSection, CallFunc_GetRunningSection_RunningSection) == 0x000008, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_GetRunningSection::CallFunc_GetRunningSection_RunningSection' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMove.BP_CharacterLocomotionSubSuperHighSpeedMove_C.HighSpeedMoveOTUpdate
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMove_C_HighSpeedMoveOTUpdate final
{
public:
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetUpdateDeltaSeconds_DeltaSeconds;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratShortDashState                          CallFunc_UpdateShortDashMove_NextShortDashStatus;  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_HighSpeedMoveOTUpdate) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMove_C_HighSpeedMoveOTUpdate");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_HighSpeedMoveOTUpdate) == 0x000018, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMove_C_HighSpeedMoveOTUpdate");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_HighSpeedMoveOTUpdate, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_HighSpeedMoveOTUpdate::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_HighSpeedMoveOTUpdate, CallFunc_GetUpdateDeltaSeconds_DeltaSeconds) == 0x000008, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_HighSpeedMoveOTUpdate::CallFunc_GetUpdateDeltaSeconds_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_HighSpeedMoveOTUpdate, CallFunc_UpdateShortDashMove_NextShortDashStatus) == 0x000010, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_HighSpeedMoveOTUpdate::CallFunc_UpdateShortDashMove_NextShortDashStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_HighSpeedMoveOTUpdate, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_HighSpeedMoveOTUpdate::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMove.BP_CharacterLocomotionSubSuperHighSpeedMove_C.IsEnableAction
// 0x0002 (0x0002 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMove_C_IsEnableAction final
{
public:
	bool                                          IsEnable;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnableAction_IsEnable;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_IsEnableAction) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMove_C_IsEnableAction");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_IsEnableAction) == 0x000002, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMove_C_IsEnableAction");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_IsEnableAction, IsEnable) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_IsEnableAction::IsEnable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_IsEnableAction, CallFunc_IsEnableAction_IsEnable) == 0x000001, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_IsEnableAction::CallFunc_IsEnableAction_IsEnable' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMove.BP_CharacterLocomotionSubSuperHighSpeedMove_C.Start
// 0x0010 (0x0010 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMove_C_Start final
{
public:
	class UBP_CharacterLocomotionComponent_C*     InLocomotionComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          InInSkip;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Start_NewParam;                           // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_Start) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMove_C_Start");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_Start) == 0x000010, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMove_C_Start");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_Start, InLocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_Start::InLocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_Start, InInSkip) == 0x000008, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_Start::InInSkip' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_Start, NewParam) == 0x000009, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_Start::NewParam' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_Start, CallFunc_Start_NewParam) == 0x00000A, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_Start::CallFunc_Start_NewParam' has a wrong offset!");

// Function BP_CharacterLocomotionSubSuperHighSpeedMove.BP_CharacterLocomotionSubSuperHighSpeedMove_C.Update
// 0x0020 (0x0020 - 0x0000)
struct BP_CharacterLocomotionSubSuperHighSpeedMove_C_Update final
{
public:
	class UBP_CharacterLocomotionComponent_C*     InLocomotionComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ECharacterLocomotionEventType                 InEventType;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        InDeltaSeconds;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Update_NewParam;                          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_Update) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubSuperHighSpeedMove_C_Update");
static_assert(sizeof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_Update) == 0x000020, "Wrong size on BP_CharacterLocomotionSubSuperHighSpeedMove_C_Update");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_Update, InLocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_Update::InLocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_Update, InEventType) == 0x000008, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_Update::InEventType' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_Update, InDeltaSeconds) == 0x000010, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_Update::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_Update, NewParam) == 0x000018, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_Update::NewParam' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubSuperHighSpeedMove_C_Update, CallFunc_Update_NewParam) == 0x000019, "Member 'BP_CharacterLocomotionSubSuperHighSpeedMove_C_Update::CallFunc_Update_NewParam' has a wrong offset!");

}

