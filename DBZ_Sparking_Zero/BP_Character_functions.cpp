#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Character

#include "Basic.hpp"

#include "BP_Character_classes.hpp"
#include "BP_Character_parameters.hpp"


namespace SDK
{

// Function BP_Character.BP_Character_C.Add Debug Draw Blow Param
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          InLocation                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InDrawType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InHitTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InDrawDuration                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::Add_Debug_Draw_Blow_Param(const struct FVector& InLocation, int32 InDrawType, double InHitTime, double InDrawDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "Add Debug Draw Blow Param");

	Params::BP_Character_C_Add_Debug_Draw_Blow_Param Parms{};

	Parms.InLocation = std::move(InLocation);
	Parms.InDrawType = InDrawType;
	Parms.InHitTime = InHitTime;
	Parms.InDrawDuration = InDrawDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.AddCharacterMovementInput
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          WorldDirection                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::AddCharacterMovementInput(const struct FVector& WorldDirection, double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "AddCharacterMovementInput");

	Params::BP_Character_C_AddCharacterMovementInput Parms{};

	Parms.WorldDirection = std::move(WorldDirection);
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.AddChildDashRoute
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DashRouteActor                                         (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::AddChildDashRoute(class AActor** DashRouteActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "AddChildDashRoute");

	Params::BP_Character_C_AddChildDashRoute Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DashRouteActor != nullptr)
		*DashRouteActor = Parms.DashRouteActor;
}


// Function BP_Character.BP_Character_C.AddCurrentActionElapsedTime
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InElapsedTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::AddCurrentActionElapsedTime(double InElapsedTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "AddCurrentActionElapsedTime");

	Params::BP_Character_C_AddCurrentActionElapsedTime Parms{};

	Parms.InElapsedTime = InElapsedTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.AddHitBack
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         InHitBackRotation                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FKoratHitBackMovementData        InHitBackMovementData                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FKoratActionDataList             InAction                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Character_C::AddHitBack(const struct FRotator& InHitBackRotation, const struct FKoratHitBackMovementData& InHitBackMovementData, const struct FKoratActionDataList& InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "AddHitBack");

	Params::BP_Character_C_AddHitBack Parms{};

	Parms.InHitBackRotation = std::move(InHitBackRotation);
	Parms.InHitBackMovementData = std::move(InHitBackMovementData);
	Parms.InAction = std::move(InAction);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.AddHitStop
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratHitStopData                InHitStopData                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// struct FKoratHitEffectAfterHitStop      InHitEffectAfterHitStop                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Character_C::AddHitStop(const struct FKoratHitStopData& InHitStopData, const struct FKoratHitEffectAfterHitStop& InHitEffectAfterHitStop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "AddHitStop");

	Params::BP_Character_C_AddHitStop Parms{};

	Parms.InHitStopData = std::move(InHitStopData);
	Parms.InHitEffectAfterHitStop = std::move(InHitEffectAfterHitStop);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.AnimNotifyInputParam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::AnimNotifyInputParam(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "AnimNotifyInputParam");

	Params::BP_Character_C_AnimNotifyInputParam Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.AutoSetCharacterMovementModeToIdle
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InIsValidSetWalking                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSet                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMovementMode                           SetMovementMode_0                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::AutoSetCharacterMovementModeToIdle(bool InIsValidSetWalking, bool* IsSet, EMovementMode* SetMovementMode_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "AutoSetCharacterMovementModeToIdle");

	Params::BP_Character_C_AutoSetCharacterMovementModeToIdle Parms{};

	Parms.InIsValidSetWalking = InIsValidSetWalking;

	UObject::ProcessEvent(Func, &Parms);

	if (IsSet != nullptr)
		*IsSet = Parms.IsSet;

	if (SetMovementMode_0 != nullptr)
		*SetMovementMode_0 = Parms.SetMovementMode_0;
}


// Function BP_Character.BP_Character_C.BattleKeyHold
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratBattleKey                         InBattleKey                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESSFlowConditionsJudgmentType           OutJudgment                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::BattleKeyHold(EKoratBattleKey InBattleKey, ESSFlowConditionsJudgmentType* OutJudgment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "BattleKeyHold");

	Params::BP_Character_C_BattleKeyHold Parms{};

	Parms.InBattleKey = InBattleKey;

	UObject::ProcessEvent(Func, &Parms);

	if (OutJudgment != nullptr)
		*OutJudgment = Parms.OutJudgment;
}


// Function BP_Character.BP_Character_C.BattleKeyPush
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratBattleKey                         InBattleKey                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESSFlowConditionsJudgmentType           OutJudgment                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::BattleKeyPush(EKoratBattleKey InBattleKey, ESSFlowConditionsJudgmentType* OutJudgment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "BattleKeyPush");

	Params::BP_Character_C_BattleKeyPush Parms{};

	Parms.InBattleKey = InBattleKey;

	UObject::ProcessEvent(Func, &Parms);

	if (OutJudgment != nullptr)
		*OutJudgment = Parms.OutJudgment;
}


// Function BP_Character.BP_Character_C.BattleKeyRelease
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratBattleKey                         InBattleKey                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESSFlowConditionsJudgmentType           OutJudgment                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::BattleKeyRelease(EKoratBattleKey InBattleKey, ESSFlowConditionsJudgmentType* OutJudgment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "BattleKeyRelease");

	Params::BP_Character_C_BattleKeyRelease Parms{};

	Parms.InBattleKey = InBattleKey;

	UObject::ProcessEvent(Func, &Parms);

	if (OutJudgment != nullptr)
		*OutJudgment = Parms.OutJudgment;
}


// Function BP_Character.BP_Character_C.BattleKeyTimeSincePush
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratBattleKey                         InBattleKey                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InTime                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EKoratInequalitySignType                InInequalitySign                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESSFlowConditionsJudgmentType           OutJudgment                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::BattleKeyTimeSincePush(EKoratBattleKey InBattleKey, float InTime, EKoratInequalitySignType InInequalitySign, ESSFlowConditionsJudgmentType* OutJudgment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "BattleKeyTimeSincePush");

	Params::BP_Character_C_BattleKeyTimeSincePush Parms{};

	Parms.InBattleKey = InBattleKey;
	Parms.InTime = InTime;
	Parms.InInequalitySign = InInequalitySign;

	UObject::ProcessEvent(Func, &Parms);

	if (OutJudgment != nullptr)
		*OutJudgment = Parms.OutJudgment;
}


// Function BP_Character.BP_Character_C.BattleKeyTimeSincePushInAction
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratBattleKey                         InBattleKey                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InTime                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EKoratInequalitySignType                InInequalitySign                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESSFlowConditionsJudgmentType           OutJudgment                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::BattleKeyTimeSincePushInAction(EKoratBattleKey InBattleKey, float InTime, EKoratInequalitySignType InInequalitySign, ESSFlowConditionsJudgmentType* OutJudgment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "BattleKeyTimeSincePushInAction");

	Params::BP_Character_C_BattleKeyTimeSincePushInAction Parms{};

	Parms.InBattleKey = InBattleKey;
	Parms.InTime = InTime;
	Parms.InInequalitySign = InInequalitySign;

	UObject::ProcessEvent(Func, &Parms);

	if (OutJudgment != nullptr)
		*OutJudgment = Parms.OutJudgment;
}


// Function BP_Character.BP_Character_C.BattleKeyTimeSincePushInSection
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratBattleKey                         InBattleKey                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InTime                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EKoratInequalitySignType                InInequalitySign                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESSFlowConditionsJudgmentType           OutJudgment                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::BattleKeyTimeSincePushInSection(EKoratBattleKey InBattleKey, float InTime, EKoratInequalitySignType InInequalitySign, ESSFlowConditionsJudgmentType* OutJudgment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "BattleKeyTimeSincePushInSection");

	Params::BP_Character_C_BattleKeyTimeSincePushInSection Parms{};

	Parms.InBattleKey = InBattleKey;
	Parms.InTime = InTime;
	Parms.InInequalitySign = InInequalitySign;

	UObject::ProcessEvent(Func, &Parms);

	if (OutJudgment != nullptr)
		*OutJudgment = Parms.OutJudgment;
}


// Function BP_Character.BP_Character_C.BattleKeyTimeSinceRelease
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratBattleKey                         InBattleKey                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InTime                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EKoratInequalitySignType                InInequalitySign                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESSFlowConditionsJudgmentType           OutJudgment                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::BattleKeyTimeSinceRelease(EKoratBattleKey InBattleKey, float InTime, EKoratInequalitySignType InInequalitySign, ESSFlowConditionsJudgmentType* OutJudgment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "BattleKeyTimeSinceRelease");

	Params::BP_Character_C_BattleKeyTimeSinceRelease Parms{};

	Parms.InBattleKey = InBattleKey;
	Parms.InTime = InTime;
	Parms.InInequalitySign = InInequalitySign;

	UObject::ProcessEvent(Func, &Parms);

	if (OutJudgment != nullptr)
		*OutJudgment = Parms.OutJudgment;
}


// Function BP_Character.BP_Character_C.BattleKeyTimeSinceReleaseInAction
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratBattleKey                         InBattleKey                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InTime                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EKoratInequalitySignType                InInequalitySign                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESSFlowConditionsJudgmentType           OutJudgment                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::BattleKeyTimeSinceReleaseInAction(EKoratBattleKey InBattleKey, float InTime, EKoratInequalitySignType InInequalitySign, ESSFlowConditionsJudgmentType* OutJudgment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "BattleKeyTimeSinceReleaseInAction");

	Params::BP_Character_C_BattleKeyTimeSinceReleaseInAction Parms{};

	Parms.InBattleKey = InBattleKey;
	Parms.InTime = InTime;
	Parms.InInequalitySign = InInequalitySign;

	UObject::ProcessEvent(Func, &Parms);

	if (OutJudgment != nullptr)
		*OutJudgment = Parms.OutJudgment;
}


// Function BP_Character.BP_Character_C.BattleKeyTimeSinceReleaseInSection
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratBattleKey                         InBattleKey                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InTime                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EKoratInequalitySignType                InInequalitySign                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESSFlowConditionsJudgmentType           OutJudgment                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::BattleKeyTimeSinceReleaseInSection(EKoratBattleKey InBattleKey, float InTime, EKoratInequalitySignType InInequalitySign, ESSFlowConditionsJudgmentType* OutJudgment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "BattleKeyTimeSinceReleaseInSection");

	Params::BP_Character_C_BattleKeyTimeSinceReleaseInSection Parms{};

	Parms.InBattleKey = InBattleKey;
	Parms.InTime = InTime;
	Parms.InInequalitySign = InInequalitySign;

	UObject::ProcessEvent(Func, &Parms);

	if (OutJudgment != nullptr)
		*OutJudgment = Parms.OutJudgment;
}


// Function BP_Character.BP_Character_C.BeginRotateToCenter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  TotalDuration                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::BeginRotateToCenter(double TotalDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "BeginRotateToCenter");

	Params::BP_Character_C_BeginRotateToCenter Parms{};

	Parms.TotalDuration = TotalDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.BlowChangeDown
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::BlowChangeDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "BlowChangeDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.CalcKnockBackVector
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  VerticalAngle                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  HorizontalAngle                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  AngleToReduceTilt                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::CalcKnockBackVector(double VerticalAngle, double HorizontalAngle, double AngleToReduceTilt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "CalcKnockBackVector");

	Params::BP_Character_C_CalcKnockBackVector Parms{};

	Parms.VerticalAngle = VerticalAngle;
	Parms.HorizontalAngle = HorizontalAngle;
	Parms.AngleToReduceTilt = AngleToReduceTilt;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.ChangedSectionCharacterActionSequenceActor
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratActionDataList             InAction                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class FName                             InSectionName                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InPlayRatio                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::ChangedSectionCharacterActionSequenceActor(const struct FKoratActionDataList& InAction, const class FName InSectionName, const float InPlayRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "ChangedSectionCharacterActionSequenceActor");

	Params::BP_Character_C_ChangedSectionCharacterActionSequenceActor Parms{};

	Parms.InAction = std::move(InAction);
	Parms.InSectionName = InSectionName;
	Parms.InPlayRatio = InPlayRatio;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.ChangeReaction
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratActionDataList             InAction                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Character_C::ChangeReaction(const struct FKoratActionDataList& InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "ChangeReaction");

	Params::BP_Character_C_ChangeReaction Parms{};

	Parms.InAction = std::move(InAction);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.CheckBlastDemoBranchSpDeriveType
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSSBlastDemoBranchCondition      InCondition                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Character_C::CheckBlastDemoBranchSpDeriveType(const struct FSSBlastDemoBranchCondition& InCondition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "CheckBlastDemoBranchSpDeriveType");

	Params::BP_Character_C_CheckBlastDemoBranchSpDeriveType Parms{};

	Parms.InCondition = std::move(InCondition);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.CheckValidSetWalking
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EMovementMode                           InMovementMode                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InIsValidSetWalking                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::CheckValidSetWalking(EMovementMode InMovementMode, bool InIsValidSetWalking, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "CheckValidSetWalking");

	Params::BP_Character_C_CheckValidSetWalking Parms{};

	Parms.InMovementMode = InMovementMode;
	Parms.InIsValidSetWalking = InIsValidSetWalking;

	UObject::ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function BP_Character.BP_Character_C.ClearCharacterRotationPitch
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InTeleportPhysics                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSuccessfully                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::ClearCharacterRotationPitch(bool InTeleportPhysics, bool* IsSuccessfully)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "ClearCharacterRotationPitch");

	Params::BP_Character_C_ClearCharacterRotationPitch Parms{};

	Parms.InTeleportPhysics = InTeleportPhysics;

	UObject::ProcessEvent(Func, &Parms);

	if (IsSuccessfully != nullptr)
		*IsSuccessfully = Parms.IsSuccessfully;
}


// Function BP_Character.BP_Character_C.DebugDrawText
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCanvas*                          Canvas                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   DPIScale                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::DebugDrawText(class UCanvas* Canvas, class APlayerController* PlayerController, float DPIScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "DebugDrawText");

	Params::BP_Character_C_DebugDrawText Parms{};

	Parms.Canvas = Canvas;
	Parms.PlayerController = PlayerController;
	Parms.DPIScale = DPIScale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.DebugPrint
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::DebugPrint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "DebugPrint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.DisableCharacterPush
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::DisableCharacterPush()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "DisableCharacterPush");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.DisableCollision
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::DisableCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "DisableCollision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.DisableMapHit
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::DisableMapHit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "DisableMapHit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.DrawTransitionActionName
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCanvas*                          InCanvas                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  DPIScale                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::DrawTransitionActionName(class UCanvas* InCanvas, double DPIScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "DrawTransitionActionName");

	Params::BP_Character_C_DrawTransitionActionName Parms{};

	Parms.InCanvas = InCanvas;
	Parms.DPIScale = DPIScale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.EnableCharacterPush
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::EnableCharacterPush()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "EnableCharacterPush");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.EnableCollision
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::EnableCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "EnableCollision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.EnableMapHit
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::EnableMapHit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "EnableMapHit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.EndRotateToCenter
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::EndRotateToCenter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "EndRotateToCenter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.ExecForceFinishVanishing
// (Event, Public, BlueprintEvent)

void ABP_Character_C::ExecForceFinishVanishing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "ExecForceFinishVanishing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.ExecResetHitStop
// (Event, Public, BlueprintEvent)

void ABP_Character_C::ExecResetHitStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "ExecResetHitStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.ExecToonShadingEachCharacter
// (BlueprintEvent)
// Parameters:
// bool                                    bConstruct                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::ExecToonShadingEachCharacter(bool bConstruct)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "ExecToonShadingEachCharacter");

	Params::BP_Character_C_ExecToonShadingEachCharacter Parms{};

	Parms.bConstruct = bConstruct;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.ExecuteUbergraph_BP_Character
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::ExecuteUbergraph_BP_Character(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "ExecuteUbergraph_BP_Character");

	Params::BP_Character_C_ExecuteUbergraph_BP_Character Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.FreeCameraTargetRotate
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        InputVector                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::FreeCameraTargetRotate(const struct FVector2D& InputVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "FreeCameraTargetRotate");

	Params::BP_Character_C_FreeCameraTargetRotate Parms{};

	Parms.InputVector = std::move(InputVector);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.fromBP_DestoryComponent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UActorComponent*                  InDestoryComp                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::FromBP_DestoryComponent(class UActorComponent* InDestoryComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "fromBP_DestoryComponent");

	Params::BP_Character_C_FromBP_DestoryComponent Parms{};

	Parms.InDestoryComp = InDestoryComp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.GetAttackRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           InActor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         OutRotation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Character_C::GetAttackRotation(class AActor* InActor, struct FRotator* OutRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetAttackRotation");

	Params::BP_Character_C_GetAttackRotation Parms{};

	Parms.InActor = InActor;

	UObject::ProcessEvent(Func, &Parms);

	if (OutRotation != nullptr)
		*OutRotation = std::move(Parms.OutRotation);
}


// Function BP_Character.BP_Character_C.GetBlowHitForecast
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OutHitTime                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKoratMapAttributeDataList       OutMapAttribute                                        (Parm, OutParm, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OutHitNormal                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::GetBlowHitForecast(struct FVector* OutLocation, float* OutHitTime, struct FKoratMapAttributeDataList* OutMapAttribute, struct FVector* OutHitNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetBlowHitForecast");

	Params::BP_Character_C_GetBlowHitForecast Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);

	if (OutHitTime != nullptr)
		*OutHitTime = Parms.OutHitTime;

	if (OutMapAttribute != nullptr)
		*OutMapAttribute = std::move(Parms.OutMapAttribute);

	if (OutHitNormal != nullptr)
		*OutHitNormal = std::move(Parms.OutHitNormal);
}


// Function BP_Character.BP_Character_C.GetBPCharacterLocomotionComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_CharacterLocomotionComponent_C*LocomotionComponent                                    (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::GetBPCharacterLocomotionComponent(class UBP_CharacterLocomotionComponent_C** LocomotionComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetBPCharacterLocomotionComponent");

	Params::BP_Character_C_GetBPCharacterLocomotionComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LocomotionComponent != nullptr)
		*LocomotionComponent = Parms.LocomotionComponent;
}


// Function BP_Character.BP_Character_C.GetBPCharacterMontageComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_CharacterMontageComponent_C*  Component                                              (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::GetBPCharacterMontageComponent(class UBP_CharacterMontageComponent_C** Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetBPCharacterMontageComponent");

	Params::BP_Character_C_GetBPCharacterMontageComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Component != nullptr)
		*Component = Parms.Component;
}


// Function BP_Character.BP_Character_C.GetCameraVirtualTargetLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::GetCameraVirtualTargetLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetCameraVirtualTargetLocation");

	Params::BP_Character_C_GetCameraVirtualTargetLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_Character.BP_Character_C.GetCharacterMovementModePrioritizeSaveFromBP
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EMovementMode                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

EMovementMode ABP_Character_C::GetCharacterMovementModePrioritizeSaveFromBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetCharacterMovementModePrioritizeSaveFromBP");

	Params::BP_Character_C_GetCharacterMovementModePrioritizeSaveFromBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.GetCurrentHitBackBlowBrakeParameter
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratBlowReactionBrakeParameter ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor)

struct FKoratBlowReactionBrakeParameter ABP_Character_C::GetCurrentHitBackBlowBrakeParameter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetCurrentHitBackBlowBrakeParameter");

	Params::BP_Character_C_GetCurrentHitBackBlowBrakeParameter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.GetDownValueLimitReactionParameter
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratDamageReactionDataList     OutDamageReactionDataList                              (Parm, OutParm, NoDestructor, HasGetValueTypeHash)
// struct FKoratHitBackMovementData        OutHitBackData                                         (Parm, OutParm)
// struct FKoratHitStopData                OutHitStopData                                         (Parm, OutParm, NoDestructor)

void ABP_Character_C::GetDownValueLimitReactionParameter(struct FKoratDamageReactionDataList* OutDamageReactionDataList, struct FKoratHitBackMovementData* OutHitBackData, struct FKoratHitStopData* OutHitStopData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetDownValueLimitReactionParameter");

	Params::BP_Character_C_GetDownValueLimitReactionParameter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutDamageReactionDataList != nullptr)
		*OutDamageReactionDataList = std::move(Parms.OutDamageReactionDataList);

	if (OutHitBackData != nullptr)
		*OutHitBackData = std::move(Parms.OutHitBackData);

	if (OutHitStopData != nullptr)
		*OutHitStopData = std::move(Parms.OutHitStopData);
}


// Function BP_Character.BP_Character_C.GetGuardClearReaction
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratActionDataList             InActionDataList                                       (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FKoratActionDataList             ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FKoratActionDataList ABP_Character_C::GetGuardClearReaction(const struct FKoratActionDataList& InActionDataList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetGuardClearReaction");

	Params::BP_Character_C_GetGuardClearReaction Parms{};

	Parms.InActionDataList = std::move(InActionDataList);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.GetHighSpeedMovementForecast
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         OutRotator                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   OutRemainingTime                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Character_C::GetHighSpeedMovementForecast(struct FVector* OutLocation, struct FRotator* OutRotator, float* OutRemainingTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetHighSpeedMovementForecast");

	Params::BP_Character_C_GetHighSpeedMovementForecast Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);

	if (OutRotator != nullptr)
		*OutRotator = std::move(Parms.OutRotator);

	if (OutRemainingTime != nullptr)
		*OutRemainingTime = Parms.OutRemainingTime;

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.GetHitBackData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratHitBackMovementData        HitBackData_0                                          (Parm, OutParm)

void ABP_Character_C::GetHitBackData(struct FKoratHitBackMovementData* HitBackData_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetHitBackData");

	Params::BP_Character_C_GetHitBackData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HitBackData_0 != nullptr)
		*HitBackData_0 = std::move(Parms.HitBackData_0);
}


// Function BP_Character.BP_Character_C.GetKnockBackVector
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          KnockBackVector_0                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::GetKnockBackVector(struct FVector* KnockBackVector_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetKnockBackVector");

	Params::BP_Character_C_GetKnockBackVector Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (KnockBackVector_0 != nullptr)
		*KnockBackVector_0 = std::move(Parms.KnockBackVector_0);
}


// Function BP_Character.BP_Character_C.GetKnockDownReactionParameter
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratDamageReactionDataList     OutDamageReactionDataList                              (Parm, OutParm, NoDestructor, HasGetValueTypeHash)
// struct FKoratHitBackMovementData        OutHitBackData                                         (Parm, OutParm)
// struct FKoratHitStopData                OutHitStopData                                         (Parm, OutParm, NoDestructor)

void ABP_Character_C::GetKnockDownReactionParameter(struct FKoratDamageReactionDataList* OutDamageReactionDataList, struct FKoratHitBackMovementData* OutHitBackData, struct FKoratHitStopData* OutHitStopData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetKnockDownReactionParameter");

	Params::BP_Character_C_GetKnockDownReactionParameter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutDamageReactionDataList != nullptr)
		*OutDamageReactionDataList = std::move(Parms.OutDamageReactionDataList);

	if (OutHitBackData != nullptr)
		*OutHitBackData = std::move(Parms.OutHitBackData);

	if (OutHitStopData != nullptr)
		*OutHitStopData = std::move(Parms.OutHitStopData);
}


// Function BP_Character.BP_Character_C.GetLocomotionComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UActorComponent*                  ActorComponent                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::GetLocomotionComponent(class UActorComponent** ActorComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetLocomotionComponent");

	Params::BP_Character_C_GetLocomotionComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ActorComponent != nullptr)
		*ActorComponent = Parms.ActorComponent;
}


// Function BP_Character.BP_Character_C.GetLocomotionSplineComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UActorComponent*                  ActorComponent                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::GetLocomotionSplineComponent(class UActorComponent** ActorComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetLocomotionSplineComponent");

	Params::BP_Character_C_GetLocomotionSplineComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ActorComponent != nullptr)
		*ActorComponent = Parms.ActorComponent;
}


// Function BP_Character.BP_Character_C.GetMontageComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UActorComponent*                  ActorComponent                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::GetMontageComponent(class UActorComponent** ActorComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetMontageComponent");

	Params::BP_Character_C_GetMontageComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ActorComponent != nullptr)
		*ActorComponent = Parms.ActorComponent;
}


// Function BP_Character.BP_Character_C.GetReplaceSubInstance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SubInstanceName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             SubInstanceTagName                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           SubInstanceClass                                       (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::GetReplaceSubInstance(class FName SubInstanceName, class FName* SubInstanceTagName, class UClass** SubInstanceClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetReplaceSubInstance");

	Params::BP_Character_C_GetReplaceSubInstance Parms{};

	Parms.SubInstanceName = SubInstanceName;

	UObject::ProcessEvent(Func, &Parms);

	if (SubInstanceTagName != nullptr)
		*SubInstanceTagName = Parms.SubInstanceTagName;

	if (SubInstanceClass != nullptr)
		*SubInstanceClass = Parms.SubInstanceClass;
}


// Function BP_Character.BP_Character_C.GetRequestAnim
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFRequestAnimData                RequestAnimData                                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABP_Character_C::GetRequestAnim(struct FFRequestAnimData* RequestAnimData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetRequestAnim");

	Params::BP_Character_C_GetRequestAnim Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RequestAnimData != nullptr)
		*RequestAnimData = std::move(Parms.RequestAnimData);
}


// Function BP_Character.BP_Character_C.GetSSCharacter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ASSCharacter*                     SSCharacter_0                                          (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::GetSSCharacter(class ASSCharacter** SSCharacter_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetSSCharacter");

	Params::BP_Character_C_GetSSCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SSCharacter_0 != nullptr)
		*SSCharacter_0 = Parms.SSCharacter_0;
}


// Function BP_Character.BP_Character_C.GetSuperHighSpeedMovementForecast
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         OutRotator                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   OutRemainingTime                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Character_C::GetSuperHighSpeedMovementForecast(struct FVector* OutLocation, struct FRotator* OutRotator, float* OutRemainingTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetSuperHighSpeedMovementForecast");

	Params::BP_Character_C_GetSuperHighSpeedMovementForecast Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);

	if (OutRotator != nullptr)
		*OutRotator = std::move(Parms.OutRotator);

	if (OutRemainingTime != nullptr)
		*OutRemainingTime = Parms.OutRemainingTime;

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.GetUseCharacterRotationPitchDetail
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    UsePitchLimit                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UsePitchInterp                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::GetUseCharacterRotationPitchDetail(bool* UsePitchLimit, bool* UsePitchInterp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetUseCharacterRotationPitchDetail");

	Params::BP_Character_C_GetUseCharacterRotationPitchDetail Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (UsePitchLimit != nullptr)
		*UsePitchLimit = Parms.UsePitchLimit;

	if (UsePitchInterp != nullptr)
		*UsePitchInterp = Parms.UsePitchInterp;
}


// Function BP_Character.BP_Character_C.GetVanishingTeleportForecast
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         OutRotator                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   OutRemainingTime                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Character_C::GetVanishingTeleportForecast(struct FVector* OutLocation, struct FRotator* OutRotator, float* OutRemainingTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetVanishingTeleportForecast");

	Params::BP_Character_C_GetVanishingTeleportForecast Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);

	if (OutRotator != nullptr)
		*OutRotator = std::move(Parms.OutRotator);

	if (OutRemainingTime != nullptr)
		*OutRemainingTime = Parms.OutRemainingTime;

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.GetViewSwitchAnimInstance
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USSCharacterSwitchVisibilityAnimInstance*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class USSCharacterSwitchVisibilityAnimInstance* ABP_Character_C::GetViewSwitchAnimInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetViewSwitchAnimInstance");

	Params::BP_Character_C_GetViewSwitchAnimInstance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.GetVirtualTargetLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::GetVirtualTargetLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetVirtualTargetLocation");

	Params::BP_Character_C_GetVirtualTargetLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_Character.BP_Character_C.GiantCharaBPCollisionPussingOverlapTestFuncImpl
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::GiantCharaBPCollisionPussingOverlapTestFuncImpl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GiantCharaBPCollisionPussingOverlapTestFuncImpl");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.HighSpeedMovementAppear
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USSActionCameraDataAsset*         InActionCamera                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USSActionCameraDataAsset*         InOpponentActionCamera                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::HighSpeedMovementAppear(class USSActionCameraDataAsset* InActionCamera, class USSActionCameraDataAsset* InOpponentActionCamera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "HighSpeedMovementAppear");

	Params::BP_Character_C_HighSpeedMovementAppear Parms{};

	Parms.InActionCamera = InActionCamera;
	Parms.InOpponentActionCamera = InOpponentActionCamera;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.HighSpeedMovementDisappear
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratFreeTimelineType                  TimeLineType                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USSActionCameraDataAsset*         InActionCamera                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USSActionCameraDataAsset*         InOpponentActionCamera                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::HighSpeedMovementDisappear(const EKoratFreeTimelineType TimeLineType, class USSActionCameraDataAsset* InActionCamera, class USSActionCameraDataAsset* InOpponentActionCamera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "HighSpeedMovementDisappear");

	Params::BP_Character_C_HighSpeedMovementDisappear Parms{};

	Parms.TimeLineType = TimeLineType;
	Parms.InActionCamera = InActionCamera;
	Parms.InOpponentActionCamera = InOpponentActionCamera;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.HighSpeedMovementOmenToAppear
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratFreeTimelineType                  TimeLineType                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::HighSpeedMovementOmenToAppear(const EKoratFreeTimelineType TimeLineType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "HighSpeedMovementOmenToAppear");

	Params::BP_Character_C_HighSpeedMovementOmenToAppear Parms{};

	Parms.TimeLineType = TimeLineType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.Input Free Camera
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::Input_Free_Camera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "Input Free Camera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.InputBattleKeyJustPressed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBattleKey                              BattleKey                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::InputBattleKeyJustPressed(EBattleKey BattleKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "InputBattleKeyJustPressed");

	Params::BP_Character_C_InputBattleKeyJustPressed Parms{};

	Parms.BattleKey = BattleKey;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.InputBattleKeyJustReleased
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBattleKey                              BattleKey                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::InputBattleKeyJustReleased(EBattleKey BattleKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "InputBattleKeyJustReleased");

	Params::BP_Character_C_InputBattleKeyJustReleased Parms{};

	Parms.BattleKey = BattleKey;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.InputFreeCamera
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::InputFreeCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "InputFreeCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.InputFreeCameraVector
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        InputVector                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::InputFreeCameraVector(const struct FVector2D& InputVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "InputFreeCameraVector");

	Params::BP_Character_C_InputFreeCameraVector Parms{};

	Parms.InputVector = std::move(InputVector);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.InputKoratBattleKeyDown
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratBattleKey                         BattleKey                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::InputKoratBattleKeyDown(EKoratBattleKey BattleKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "InputKoratBattleKeyDown");

	Params::BP_Character_C_InputKoratBattleKeyDown Parms{};

	Parms.BattleKey = BattleKey;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.InputKoratBattleKeyJustPressed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratBattleKey                         BattleKey                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::InputKoratBattleKeyJustPressed(EKoratBattleKey BattleKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "InputKoratBattleKeyJustPressed");

	Params::BP_Character_C_InputKoratBattleKeyJustPressed Parms{};

	Parms.BattleKey = BattleKey;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.InputKoratBattleKeyJustReleased
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratBattleKey                         BattleKey                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::InputKoratBattleKeyJustReleased(EKoratBattleKey BattleKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "InputKoratBattleKeyJustReleased");

	Params::BP_Character_C_InputKoratBattleKeyJustReleased Parms{};

	Parms.BattleKey = BattleKey;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.InputKoratBattleKeyUp
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratBattleKey                         BattleKey                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::InputKoratBattleKeyUp(EKoratBattleKey BattleKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "InputKoratBattleKeyUp");

	Params::BP_Character_C_InputKoratBattleKeyUp Parms{};

	Parms.BattleKey = BattleKey;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.IsCollisionEnable
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Character_C::IsCollisionEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "IsCollisionEnable");

	Params::BP_Character_C_IsCollisionEnable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.IsInputRestrictedToTargetRevengeSmash
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratBattleKey                         Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  SincePressTime                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Restricted                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::IsInputRestrictedToTargetRevengeSmash(EKoratBattleKey Key, double SincePressTime, bool* Restricted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "IsInputRestrictedToTargetRevengeSmash");

	Params::BP_Character_C_IsInputRestrictedToTargetRevengeSmash Parms{};

	Parms.Key = Key;
	Parms.SincePressTime = SincePressTime;

	UObject::ProcessEvent(Func, &Parms);

	if (Restricted != nullptr)
		*Restricted = Parms.Restricted;
}


// Function BP_Character.BP_Character_C.IsMetBulletBlastHitDemoCondition
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Character_C::IsMetBulletBlastHitDemoCondition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "IsMetBulletBlastHitDemoCondition");

	Params::BP_Character_C_IsMetBulletBlastHitDemoCondition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.IsNeedTurn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsNeedTurn_0                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::IsNeedTurn(bool* IsNeedTurn_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "IsNeedTurn");

	Params::BP_Character_C_IsNeedTurn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsNeedTurn_0 != nullptr)
		*IsNeedTurn_0 = Parms.IsNeedTurn_0;
}


// Function BP_Character.BP_Character_C.IToonShading
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Construction                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_ToonScene_C*                  Scane                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::IToonShading(bool Construction, class ABP_ToonScene_C* Scane)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "IToonShading");

	Params::BP_Character_C_IToonShading Parms{};

	Parms.Construction = Construction;
	Parms.Scane = Scane;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.JumpSectionOfPlayAction
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             InSectionName                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::JumpSectionOfPlayAction(const class FName InSectionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "JumpSectionOfPlayAction");

	Params::BP_Character_C_JumpSectionOfPlayAction Parms{};

	Parms.InSectionName = InSectionName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.LatentEventPreBattleProduction
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USSCharacterLatentHelper*         InLatentHelper                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::LatentEventPreBattleProduction(class USSCharacterLatentHelper* InLatentHelper)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "LatentEventPreBattleProduction");

	Params::BP_Character_C_LatentEventPreBattleProduction Parms{};

	Parms.InLatentHelper = InLatentHelper;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.NotifyPlayMontageLength
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  MontageLength                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::NotifyPlayMontageLength(double MontageLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyPlayMontageLength");

	Params::BP_Character_C_NotifyPlayMontageLength Parms{};

	Parms.MontageLength = MontageLength;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.NotifyStartRevengeCounter
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyStartRevengeCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyStartRevengeCounter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowAerialRush
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowAerialRush()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowAerialRush");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowAscertain
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowAscertain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowAscertain");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowAttackOfDragonDashCounter
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowAttackOfDragonDashCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowAttackOfDragonDashCounter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowBaseReaction
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowBaseReaction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowBaseReaction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowBlast
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratReplaceAnimationDataList   RequestAnimData                                        (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::NotifyTransitionFlowBlast(const struct FKoratReplaceAnimationDataList& RequestAnimData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowBlast");

	Params::BP_Character_C_NotifyTransitionFlowBlast Parms{};

	Parms.RequestAnimData = std::move(RequestAnimData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowBlown
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowBlown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowBlown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowBlownBrakeOfDragonDashCounter
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowBlownBrakeOfDragonDashCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowBlownBrakeOfDragonDashCounter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowCannon
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowCannon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowCannon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowCannonAttack1
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowCannonAttack1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowCannonAttack1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowCannonAttack2
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowCannonAttack2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowCannonAttack2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowCannonAttack3
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowCannonAttack3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowCannonAttack3");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowCannonSmash
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowCannonSmash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowCannonSmash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowCharge
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowCharge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowCharge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowDashBlow
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowDashBlow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowDashBlow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowDashOfDragonDashCounter
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowDashOfDragonDashCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowDashOfDragonDashCounter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowDashRising
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowDashRising()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowDashRising");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowDemo
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowDemo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowDemo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowDragonDash
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowDragonDash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowDragonDash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowDragonHoming
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowDragonHoming()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowDragonHoming");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowFastAvoidance
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowFastAvoidance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowFastAvoidance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowGrandSlash
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowGrandSlash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowGrandSlash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowGuard
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowGuard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowGuard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowGuardClear
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowGuardClear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowGuardClear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowHeavyCrush1
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowHeavyCrush1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowHeavyCrush1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowHeavyCrush2
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowHeavyCrush2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowHeavyCrush2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowHeavyCrush3
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowHeavyCrush3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowHeavyCrush3");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowHeavyFinish
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowHeavyFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowHeavyFinish");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowIdle
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowIdle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowIdle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowKidan
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowKidan()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowKidan");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowLiftStrike
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowLiftStrike()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowLiftStrike");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowLocomotion
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowLocomotion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowLocomotion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowMidAirKick
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowMidAirKick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowMidAirKick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowNoContinuation
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowNoContinuation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowNoContinuation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowParry
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowParry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowParry");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowParrySmash
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowParrySmash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowParrySmash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowPlayAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratActionDataList             InAction                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::NotifyTransitionFlowPlayAction(const struct FKoratActionDataList& InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowPlayAction");

	Params::BP_Character_C_NotifyTransitionFlowPlayAction Parms{};

	Parms.InAction = std::move(InAction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowRevengeCounter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratReplaceAnimationDataList   InReplaceAnim                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::NotifyTransitionFlowRevengeCounter(const struct FKoratReplaceAnimationDataList& InReplaceAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowRevengeCounter");

	Params::BP_Character_C_NotifyTransitionFlowRevengeCounter Parms{};

	Parms.InReplaceAnim = std::move(InReplaceAnim);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowRollingHammer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPreviousUseLeft                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::NotifyTransitionFlowRollingHammer(bool IsPreviousUseLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowRollingHammer");

	Params::BP_Character_C_NotifyTransitionFlowRollingHammer Parms{};

	Parms.IsPreviousUseLeft = IsPreviousUseLeft;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowRollingHurricane1
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsLeft                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::NotifyTransitionFlowRollingHurricane1(bool IsLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowRollingHurricane1");

	Params::BP_Character_C_NotifyTransitionFlowRollingHurricane1 Parms{};

	Parms.IsLeft = IsLeft;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowRollingHurricane2
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowRollingHurricane2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowRollingHurricane2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowRollingPress1
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowRollingPress1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowRollingPress1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowRollingPress2
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowRollingPress2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowRollingPress2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowRush
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RushType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::NotifyTransitionFlowRush(int32 RushType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowRush");

	Params::BP_Character_C_NotifyTransitionFlowRush Parms{};

	Parms.RushType = RushType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowShortDash
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowShortDash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowShortDash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowStepAvoidance
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowStepAvoidance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowStepAvoidance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowStepIn
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowStepIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowStepIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowSuperZCounterCatch
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowSuperZCounterCatch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowSuperZCounterCatch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowSuperZCounterPosture
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowSuperZCounterPosture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowSuperZCounterPosture");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowSuperZCounterShakeOff
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowSuperZCounterShakeOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowSuperZCounterShakeOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowSuperZCounterSmash
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowSuperZCounterSmash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowSuperZCounterSmash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowTeleportationCounter
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowTeleportationCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowTeleportationCounter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowThrow
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowThrow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowThrow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowUltimateBlast
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowUltimateBlast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowUltimateBlast");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowVanishingAssault
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowVanishingAssault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowVanishingAssault");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowVanishingAttack
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratReplaceAnimationDataList   InReplaceAnim                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::NotifyTransitionFlowVanishingAttack(const struct FKoratReplaceAnimationDataList& InReplaceAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowVanishingAttack");

	Params::BP_Character_C_NotifyTransitionFlowVanishingAttack Parms{};

	Parms.InReplaceAnim = std::move(InReplaceAnim);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowWaitMontageEnd
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowWaitMontageEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowWaitMontageEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.NotifyTransitionFlowZCounter
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::NotifyTransitionFlowZCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "NotifyTransitionFlowZCounter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.OnBeginMontageLevelSequence
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratActionDataList             InAction                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::OnBeginMontageLevelSequence(const struct FKoratActionDataList& InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "OnBeginMontageLevelSequence");

	Params::BP_Character_C_OnBeginMontageLevelSequence Parms{};

	Parms.InAction = std::move(InAction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.OnCharacterGaveDamage
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// EKoratCharacterMovementTransition       InMovementTransition                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInHoming                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKoratHitStopData                InHitStopData                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// struct FKoratHitEffectAfterHitStop      InHitEffectAfterHitStop                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// bool                                    bInBlownAttack                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EKoratActionAttackType                  InAttackType                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESituationOfOpponentWhenAttackHit       InOpponentHitSituation                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKoratActionDataList             InAttackAction                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::OnCharacterGaveDamage(EKoratCharacterMovementTransition InMovementTransition, const bool bInHoming, const struct FKoratHitStopData& InHitStopData, const struct FKoratHitEffectAfterHitStop& InHitEffectAfterHitStop, const bool bInBlownAttack, const EKoratActionAttackType InAttackType, const ESituationOfOpponentWhenAttackHit InOpponentHitSituation, const struct FKoratActionDataList& InAttackAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "OnCharacterGaveDamage");

	Params::BP_Character_C_OnCharacterGaveDamage Parms{};

	Parms.InMovementTransition = InMovementTransition;
	Parms.bInHoming = bInHoming;
	Parms.InHitStopData = std::move(InHitStopData);
	Parms.InHitEffectAfterHitStop = std::move(InHitEffectAfterHitStop);
	Parms.bInBlownAttack = bInBlownAttack;
	Parms.InAttackType = InAttackType;
	Parms.InOpponentHitSituation = InOpponentHitSituation;
	Parms.InAttackAction = std::move(InAttackAction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.OnCharacterGaveOffset
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FKoratHitStopData                InHitStopData                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// struct FKoratHitEffectAfterHitStop      InHitEffectAfterHitStop                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// ESituationOfOpponentWhenAttackHit       InOpponentHitSituation                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::OnCharacterGaveOffset(const struct FKoratHitStopData& InHitStopData, const struct FKoratHitEffectAfterHitStop& InHitEffectAfterHitStop, const ESituationOfOpponentWhenAttackHit InOpponentHitSituation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "OnCharacterGaveOffset");

	Params::BP_Character_C_OnCharacterGaveOffset Parms{};

	Parms.InHitStopData = std::move(InHitStopData);
	Parms.InHitEffectAfterHitStop = std::move(InHitEffectAfterHitStop);
	Parms.InOpponentHitSituation = InOpponentHitSituation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.OnCharacterReceivedOffset
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FRotator                         InRotation                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FKoratHitBackMovementData        InHitBackData                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FKoratHitStopData                InHitStopData                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void ABP_Character_C::OnCharacterReceivedOffset(const struct FRotator& InRotation, const struct FKoratHitBackMovementData& InHitBackData, const struct FKoratHitStopData& InHitStopData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "OnCharacterReceivedOffset");

	Params::BP_Character_C_OnCharacterReceivedOffset Parms{};

	Parms.InRotation = std::move(InRotation);
	Parms.InHitBackData = std::move(InHitBackData);
	Parms.InHitStopData = std::move(InHitStopData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.OnCharacterTookDamage
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FKoratActionDataList             InReactionAction                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// EKoratReactionDirection                 InReactionDirection                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKoratAddtiveReactionParameter   InAddtiveReactionParameter                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void ABP_Character_C::OnCharacterTookDamage(const struct FKoratActionDataList& InReactionAction, EKoratReactionDirection InReactionDirection, const struct FKoratAddtiveReactionParameter& InAddtiveReactionParameter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "OnCharacterTookDamage");

	Params::BP_Character_C_OnCharacterTookDamage Parms{};

	Parms.InReactionAction = std::move(InReactionAction);
	Parms.InReactionDirection = InReactionDirection;
	Parms.InAddtiveReactionParameter = std::move(InAddtiveReactionParameter);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.OnCloseTimer
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::OnCloseTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "OnCloseTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.OnEndDemo
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::OnEndDemo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "OnEndDemo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.OnEndMapChange
// (Event, Public, BlueprintEvent)

void ABP_Character_C::OnEndMapChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "OnEndMapChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.OnEndMontageLevelSequence
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratActionDataList             InAction                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// EKoratCharacterActionFinishReason       InActionFinishReason                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::OnEndMontageLevelSequence(const struct FKoratActionDataList& InAction, EKoratCharacterActionFinishReason InActionFinishReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "OnEndMontageLevelSequence");

	Params::BP_Character_C_OnEndMontageLevelSequence Parms{};

	Parms.InAction = std::move(InAction);
	Parms.InActionFinishReason = InActionFinishReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.OnEndRequestAllAnim
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::OnEndRequestAllAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "OnEndRequestAllAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.OnFinishImpact
// (Event, Public, BlueprintEvent)

void ABP_Character_C::OnFinishImpact()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "OnFinishImpact");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.OnHitObjectCollisionOccured
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FKoratActionDataList             InAction                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::OnHitObjectCollisionOccured(const struct FKoratActionDataList& InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "OnHitObjectCollisionOccured");

	Params::BP_Character_C_OnHitObjectCollisionOccured Parms{};

	Parms.InAction = std::move(InAction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.OnHitObjectStopped
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FKoratActionDataList             InAction                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::OnHitObjectStopped(const struct FKoratActionDataList& InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "OnHitObjectStopped");

	Params::BP_Character_C_OnHitObjectStopped Parms{};

	Parms.InAction = std::move(InAction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.OnInputKoratBattleKeyDown
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratBattleKey                         InBattleKey                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::OnInputKoratBattleKeyDown(EKoratBattleKey InBattleKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "OnInputKoratBattleKeyDown");

	Params::BP_Character_C_OnInputKoratBattleKeyDown Parms{};

	Parms.InBattleKey = InBattleKey;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.OnInputKoratBattleKeyJustPressed
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratBattleKey                         InBattleKey                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::OnInputKoratBattleKeyJustPressed(EKoratBattleKey InBattleKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "OnInputKoratBattleKeyJustPressed");

	Params::BP_Character_C_OnInputKoratBattleKeyJustPressed Parms{};

	Parms.InBattleKey = InBattleKey;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.OnInputKoratBattleKeyJustReleased
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratBattleKey                         InBattleKey                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::OnInputKoratBattleKeyJustReleased(EKoratBattleKey InBattleKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "OnInputKoratBattleKeyJustReleased");

	Params::BP_Character_C_OnInputKoratBattleKeyJustReleased Parms{};

	Parms.InBattleKey = InBattleKey;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.OnInputKoratBattleKeyUp
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratBattleKey                         InBattleKey                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::OnInputKoratBattleKeyUp(EKoratBattleKey InBattleKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "OnInputKoratBattleKeyUp");

	Params::BP_Character_C_OnInputKoratBattleKeyUp Parms{};

	Parms.InBattleKey = InBattleKey;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.OnKoratCharacterDebug
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class FString>                   InDebugCommand                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_Character_C::OnKoratCharacterDebug(const TArray<class FString>& InDebugCommand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "OnKoratCharacterDebug");

	Params::BP_Character_C_OnKoratCharacterDebug Parms{};

	Parms.InDebugCommand = std::move(InDebugCommand);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.OnKoratCharacterDebugCommandDraw
// (Event, Public, BlueprintEvent)

void ABP_Character_C::OnKoratCharacterDebugCommandDraw()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "OnKoratCharacterDebugCommandDraw");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.OnLanded
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_Character_C::OnLanded(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "OnLanded");

	Params::BP_Character_C_OnLanded Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.OnPlayAnim
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::OnPlayAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "OnPlayAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.OnReturnToInGameFromDemo
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::OnReturnToInGameFromDemo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "OnReturnToInGameFromDemo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.OnStartImpact
// (Event, Public, BlueprintEvent)

void ABP_Character_C::OnStartImpact()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "OnStartImpact");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.OnStartMapChange
// (Event, Public, BlueprintEvent)
// Parameters:
// EKoratMapChangeType                     InMapChangeType                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EKoratMapChangeStartTiming              InStartTiming                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::OnStartMapChange(const EKoratMapChangeType InMapChangeType, const EKoratMapChangeStartTiming InStartTiming)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "OnStartMapChange");

	Params::BP_Character_C_OnStartMapChange Parms{};

	Parms.InMapChangeType = InMapChangeType;
	Parms.InStartTiming = InStartTiming;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.OnTransitActionByAnimationBlueprint
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratActionDataList             InAction                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::OnTransitActionByAnimationBlueprint(const struct FKoratActionDataList& InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "OnTransitActionByAnimationBlueprint");

	Params::BP_Character_C_OnTransitActionByAnimationBlueprint Parms{};

	Parms.InAction = std::move(InAction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.OnTransitActionByLocomotion
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratActionDataList             InAction                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::OnTransitActionByLocomotion(const struct FKoratActionDataList& InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "OnTransitActionByLocomotion");

	Params::BP_Character_C_OnTransitActionByLocomotion Parms{};

	Parms.InAction = std::move(InAction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.PlayKnockBack
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratHitBackMovementData        InHitBackData                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_Character_C::PlayKnockBack(const struct FKoratHitBackMovementData& InHitBackData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "PlayKnockBack");

	Params::BP_Character_C_PlayKnockBack Parms{};

	Parms.InHitBackData = std::move(InHitBackData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Character_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.ReceiveHit
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              MyComp                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Other                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    bSelfMoved                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_Character_C::ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "ReceiveHit");

	Params::BP_Character_C_ReceiveHit Parms{};

	Parms.MyComp = MyComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.bSelfMoved = bSelfMoved;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.ReceivePossessed
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      NewController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::ReceivePossessed(class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "ReceivePossessed");

	Params::BP_Character_C_ReceivePossessed Parms{};

	Parms.NewController = NewController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::ReceiveTick(float DeltaSeconds_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "ReceiveTick");

	Params::BP_Character_C_ReceiveTick Parms{};

	Parms.DeltaSeconds_0 = DeltaSeconds_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.ReflectRequestReactionDirection
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::ReflectRequestReactionDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "ReflectRequestReactionDirection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.ReleasePlayAction
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::ReleasePlayAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "ReleasePlayAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.RequestJumpSectionOfFlowAction
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratActionDataList             InAction                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class FName                             InSectionName                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::RequestJumpSectionOfFlowAction(const struct FKoratActionDataList& InAction, const class FName InSectionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "RequestJumpSectionOfFlowAction");

	Params::BP_Character_C_RequestJumpSectionOfFlowAction Parms{};

	Parms.InAction = std::move(InAction);
	Parms.InSectionName = InSectionName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.RequestTransitAction
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratActionDataList             InAction                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::RequestTransitAction(const struct FKoratActionDataList& InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "RequestTransitAction");

	Params::BP_Character_C_RequestTransitAction Parms{};

	Parms.InAction = std::move(InAction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.RequestTransitionBlastHitDemo
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::RequestTransitionBlastHitDemo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "RequestTransitionBlastHitDemo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.RequestTransitionOfFlowAction
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratActionDataList             InBeforeAction                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FKoratActionDataList             InAfterAction                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::RequestTransitionOfFlowAction(const struct FKoratActionDataList& InBeforeAction, const struct FKoratActionDataList& InAfterAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "RequestTransitionOfFlowAction");

	Params::BP_Character_C_RequestTransitionOfFlowAction Parms{};

	Parms.InBeforeAction = std::move(InBeforeAction);
	Parms.InAfterAction = std::move(InAfterAction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.ResetCurrentActionElapsedTime
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::ResetCurrentActionElapsedTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "ResetCurrentActionElapsedTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.ResetHitStop
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::ResetHitStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "ResetHitStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.Set Hit Stop
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratHitStopDataList            InHitStopData                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    InResetOnDamage                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InEndHitStopDown                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::Set_Hit_Stop(const struct FKoratHitStopDataList& InHitStopData, bool InResetOnDamage, bool InEndHitStopDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "Set Hit Stop");

	Params::BP_Character_C_Set_Hit_Stop Parms{};

	Parms.InHitStopData = std::move(InHitStopData);
	Parms.InResetOnDamage = InResetOnDamage;
	Parms.InEndHitStopDown = InEndHitStopDown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.SetAttackHitArea
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratDirection                         InAttackHitAreaHorizontal                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EKoratDirection                         InAttackHitAreaVertical                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::SetAttackHitArea(EKoratDirection InAttackHitAreaHorizontal, EKoratDirection InAttackHitAreaVertical)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "SetAttackHitArea");

	Params::BP_Character_C_SetAttackHitArea Parms{};

	Parms.InAttackHitAreaHorizontal = InAttackHitAreaHorizontal;
	Parms.InAttackHitAreaVertical = InAttackHitAreaVertical;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.SetAuraColorEnum
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratCharacterEffectColorSetDataEnum   InNewColor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::SetAuraColorEnum(EKoratCharacterEffectColorSetDataEnum InNewColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "SetAuraColorEnum");

	Params::BP_Character_C_SetAuraColorEnum Parms{};

	Parms.InNewColor = InNewColor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.SetBranchSection
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             InSection                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::SetBranchSection(const class FName& InSection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "SetBranchSection");

	Params::BP_Character_C_SetBranchSection Parms{};

	Parms.InSection = InSection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.SetCharacterMovementMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EMovementMode                           InMovementMode                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::SetCharacterMovementMode(EMovementMode InMovementMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "SetCharacterMovementMode");

	Params::BP_Character_C_SetCharacterMovementMode Parms{};

	Parms.InMovementMode = InMovementMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.SetCharacterRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         InNewRotation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    InTeleportPhysics                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSuccessfully                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::SetCharacterRotation(const struct FRotator& InNewRotation, bool InTeleportPhysics, bool* IsSuccessfully)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "SetCharacterRotation");

	Params::BP_Character_C_SetCharacterRotation Parms{};

	Parms.InNewRotation = std::move(InNewRotation);
	Parms.InTeleportPhysics = InTeleportPhysics;

	UObject::ProcessEvent(Func, &Parms);

	if (IsSuccessfully != nullptr)
		*IsSuccessfully = Parms.IsSuccessfully;
}


// Function BP_Character.BP_Character_C.SetEnableDrawTransitionAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnable                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::SetEnableDrawTransitionAction(bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "SetEnableDrawTransitionAction");

	Params::BP_Character_C_SetEnableDrawTransitionAction Parms{};

	Parms.IsEnable = IsEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.SetHitStopOpponent
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratHitStopData                InHitStopData                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// bool                                    InResetOnDamage                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InEndHitStopDown                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SetHitStop                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::SetHitStopOpponent(const struct FKoratHitStopData& InHitStopData, bool InResetOnDamage, bool InEndHitStopDown, bool* SetHitStop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "SetHitStopOpponent");

	Params::BP_Character_C_SetHitStopOpponent Parms{};

	Parms.InHitStopData = std::move(InHitStopData);
	Parms.InResetOnDamage = InResetOnDamage;
	Parms.InEndHitStopDown = InEndHitStopDown;

	UObject::ProcessEvent(Func, &Parms);

	if (SetHitStop != nullptr)
		*SetHitStop = Parms.SetHitStop;
}


// Function BP_Character.BP_Character_C.SetHitStopOwn
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratHitStopData                InHitStopData                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// bool                                    InResetOnDamage                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InEndHitStopDown                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SetHitStop                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::SetHitStopOwn(const struct FKoratHitStopData& InHitStopData, bool InResetOnDamage, bool InEndHitStopDown, bool* SetHitStop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "SetHitStopOwn");

	Params::BP_Character_C_SetHitStopOwn Parms{};

	Parms.InHitStopData = std::move(InHitStopData);
	Parms.InResetOnDamage = InResetOnDamage;
	Parms.InEndHitStopDown = InEndHitStopDown;

	UObject::ProcessEvent(Func, &Parms);

	if (SetHitStop != nullptr)
		*SetHitStop = Parms.SetHitStop;
}


// Function BP_Character.BP_Character_C.SetKnockBack
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         InRotation                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FKoratHitBackMovementData        InHitBackData                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_Character_C::SetKnockBack(const struct FRotator& InRotation, const struct FKoratHitBackMovementData& InHitBackData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "SetKnockBack");

	Params::BP_Character_C_SetKnockBack Parms{};

	Parms.InRotation = std::move(InRotation);
	Parms.InHitBackData = std::move(InHitBackData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.SetOutlineColorEnum
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratCharacterEffectColorSetDataEnum   InNewColorType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::SetOutlineColorEnum(EKoratCharacterEffectColorSetDataEnum InNewColorType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "SetOutlineColorEnum");

	Params::BP_Character_C_SetOutlineColorEnum Parms{};

	Parms.InNewColorType = InNewColorType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.SetupTickOrderDependsOnPlayerController
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::SetupTickOrderDependsOnPlayerController()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "SetupTickOrderDependsOnPlayerController");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.SetUseCharacterRotationPitch
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InUsePitch                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UsePitch                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::SetUseCharacterRotationPitch(bool InUsePitch, bool* UsePitch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "SetUseCharacterRotationPitch");

	Params::BP_Character_C_SetUseCharacterRotationPitch Parms{};

	Parms.InUsePitch = InUsePitch;

	UObject::ProcessEvent(Func, &Parms);

	if (UsePitch != nullptr)
		*UsePitch = Parms.UsePitch;
}


// Function BP_Character.BP_Character_C.SetUseCharacterRotationPitchDetail
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InUsePitchLimit                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InUsePitchInterp                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UsePitchLimit                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UsePitchInterp                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::SetUseCharacterRotationPitchDetail(bool InUsePitchLimit, bool InUsePitchInterp, bool* UsePitchLimit, bool* UsePitchInterp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "SetUseCharacterRotationPitchDetail");

	Params::BP_Character_C_SetUseCharacterRotationPitchDetail Parms{};

	Parms.InUsePitchLimit = InUsePitchLimit;
	Parms.InUsePitchInterp = InUsePitchInterp;

	UObject::ProcessEvent(Func, &Parms);

	if (UsePitchLimit != nullptr)
		*UsePitchLimit = Parms.UsePitchLimit;

	if (UsePitchInterp != nullptr)
		*UsePitchInterp = Parms.UsePitchInterp;
}


// Function BP_Character.BP_Character_C.SetVanishingHiddenSwitchingTime 
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InDisappearTime                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InAppearTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::SetVanishingHiddenSwitchingTime_(double InDisappearTime, double InAppearTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "SetVanishingHiddenSwitchingTime ");

	Params::BP_Character_C_SetVanishingHiddenSwitchingTime_ Parms{};

	Parms.InDisappearTime = InDisappearTime;
	Parms.InAppearTime = InAppearTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.SetVirtualTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InActor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          InLocation                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InUseBattleTargetPawn                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::SetVirtualTarget(class AActor* InActor, const struct FVector& InLocation, bool InUseBattleTargetPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "SetVirtualTarget");

	Params::BP_Character_C_SetVirtualTarget Parms{};

	Parms.InActor = InActor;
	Parms.InLocation = std::move(InLocation);
	Parms.InUseBattleTargetPawn = InUseBattleTargetPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.StartVanishing
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InDisappearTime                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InAppearTime                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          InAppearPosition                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         InAppearDirection                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FKoratActionDataList             InAppearAction                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    InTraining                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InDramaticWarp                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::StartVanishing(const float InDisappearTime, const float InAppearTime, const struct FVector& InAppearPosition, const struct FRotator& InAppearDirection, const struct FKoratActionDataList& InAppearAction, const bool InTraining, const bool InDramaticWarp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "StartVanishing");

	Params::BP_Character_C_StartVanishing Parms{};

	Parms.InDisappearTime = InDisappearTime;
	Parms.InAppearTime = InAppearTime;
	Parms.InAppearPosition = std::move(InAppearPosition);
	Parms.InAppearDirection = std::move(InAppearDirection);
	Parms.InAppearAction = std::move(InAppearAction);
	Parms.InTraining = InTraining;
	Parms.InDramaticWarp = InDramaticWarp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.StopActionByChangeCharacter
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::StopActionByChangeCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "StopActionByChangeCharacter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.StopAllAction
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::StopAllAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "StopAllAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.StopKnockBack
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::StopKnockBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "StopKnockBack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.StopPlayAction
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::StopPlayAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "StopPlayAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.StopRotateToCenter
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::StopRotateToCenter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "StopRotateToCenter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.SuccessRepelAction
// (Event, Public, BlueprintEvent)

void ABP_Character_C::SuccessRepelAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "SuccessRepelAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TraceNearPhysicalAssetsCollition
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          InStart                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          InEnd                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InRadius                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           InGaveDamageActor                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           InReceivedDamageActor                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           InRotateActor                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       OutHitTransform                                        (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             OutHitBoneName                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<EObjectTypeQuery>                ObjectTypes                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// ETraceTypeQuery                         TraceType                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Character_C::TraceNearPhysicalAssetsCollition(const struct FVector& InStart, const struct FVector& InEnd, const float InRadius, const class AActor* InGaveDamageActor, const class AActor* InReceivedDamageActor, const class AActor* InRotateActor, struct FTransform* OutHitTransform, class FName* OutHitBoneName, const TArray<EObjectTypeQuery>& ObjectTypes, const ETraceTypeQuery TraceType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TraceNearPhysicalAssetsCollition");

	Params::BP_Character_C_TraceNearPhysicalAssetsCollition Parms{};

	Parms.InStart = std::move(InStart);
	Parms.InEnd = std::move(InEnd);
	Parms.InRadius = InRadius;
	Parms.InGaveDamageActor = InGaveDamageActor;
	Parms.InReceivedDamageActor = InReceivedDamageActor;
	Parms.InRotateActor = InRotateActor;
	Parms.ObjectTypes = std::move(ObjectTypes);
	Parms.TraceType = TraceType;

	UObject::ProcessEvent(Func, &Parms);

	if (OutHitTransform != nullptr)
		*OutHitTransform = std::move(Parms.OutHitTransform);

	if (OutHitBoneName != nullptr)
		*OutHitBoneName = Parms.OutHitBoneName;

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.TraceNearPhysicalAssetsCollitionByBox
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          InStart                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          InEnd                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          InHalfSize                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         InOrientation                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           InGaveDamageActor                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           InReceivedDamageActor                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           InRotateActor                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       OutHitTransform                                        (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             OutHitBoneName                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<EObjectTypeQuery>                ObjectTypes                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Character_C::TraceNearPhysicalAssetsCollitionByBox(const struct FVector& InStart, const struct FVector& InEnd, const struct FVector& InHalfSize, const struct FRotator& InOrientation, const class AActor* InGaveDamageActor, const class AActor* InReceivedDamageActor, const class AActor* InRotateActor, struct FTransform* OutHitTransform, class FName* OutHitBoneName, const TArray<EObjectTypeQuery>& ObjectTypes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TraceNearPhysicalAssetsCollitionByBox");

	Params::BP_Character_C_TraceNearPhysicalAssetsCollitionByBox Parms{};

	Parms.InStart = std::move(InStart);
	Parms.InEnd = std::move(InEnd);
	Parms.InHalfSize = std::move(InHalfSize);
	Parms.InOrientation = std::move(InOrientation);
	Parms.InGaveDamageActor = InGaveDamageActor;
	Parms.InReceivedDamageActor = InReceivedDamageActor;
	Parms.InRotateActor = InRotateActor;
	Parms.ObjectTypes = std::move(ObjectTypes);

	UObject::ProcessEvent(Func, &Parms);

	if (OutHitTransform != nullptr)
		*OutHitTransform = std::move(Parms.OutHitTransform);

	if (OutHitBoneName != nullptr)
		*OutHitBoneName = Parms.OutHitBoneName;

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.TransitAction
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratActionDataList             InAction                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_Character_C::TransitAction(const struct FKoratActionDataList& InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitAction");

	Params::BP_Character_C_TransitAction Parms{};

	Parms.InAction = std::move(InAction);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.TransitActionFromSection
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratActionDataList             InAction                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class FName                             InJumpSectionName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_Character_C::TransitActionFromSection(const struct FKoratActionDataList& InAction, class FName InJumpSectionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitActionFromSection");

	Params::BP_Character_C_TransitActionFromSection Parms{};

	Parms.InAction = std::move(InAction);
	Parms.InJumpSectionName = InJumpSectionName;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.TransitionAscertain_254B687548ED1A43B215459291C501AA
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionAscertain_254B687548ED1A43B215459291C501AA()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionAscertain_254B687548ED1A43B215459291C501AA");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionBlast_B0EB4F39407C5C0D6888C494C00D2709
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionBlast_B0EB4F39407C5C0D6888C494C00D2709()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionBlast_B0EB4F39407C5C0D6888C494C00D2709");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionBurstSmash_79B5EE4542D9F939C8B5C48FE58AC647
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionBurstSmash_79B5EE4542D9F939C8B5C48FE58AC647()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionBurstSmash_79B5EE4542D9F939C8B5C48FE58AC647");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionBurstSmashDown_79B5EE4542D9F939C8B5C48FE58AC647
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionBurstSmashDown_79B5EE4542D9F939C8B5C48FE58AC647()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionBurstSmashDown_79B5EE4542D9F939C8B5C48FE58AC647");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionBurstSmashLeft_79B5EE4542D9F939C8B5C48FE58AC647
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionBurstSmashLeft_79B5EE4542D9F939C8B5C48FE58AC647()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionBurstSmashLeft_79B5EE4542D9F939C8B5C48FE58AC647");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionBurstSmashRight_79B5EE4542D9F939C8B5C48FE58AC647
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionBurstSmashRight_79B5EE4542D9F939C8B5C48FE58AC647()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionBurstSmashRight_79B5EE4542D9F939C8B5C48FE58AC647");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionBurstSmashUp_79B5EE4542D9F939C8B5C48FE58AC647
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionBurstSmashUp_79B5EE4542D9F939C8B5C48FE58AC647()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionBurstSmashUp_79B5EE4542D9F939C8B5C48FE58AC647");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionCannonAttack_388B9AE142B072AAF0D80FA5E9BEF139
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionCannonAttack_388B9AE142B072AAF0D80FA5E9BEF139()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionCannonAttack_388B9AE142B072AAF0D80FA5E9BEF139");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionCannonAttack_E842F8FD40E51FAD00DA8CB0CEF5D58D
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionCannonAttack_E842F8FD40E51FAD00DA8CB0CEF5D58D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionCannonAttack_E842F8FD40E51FAD00DA8CB0CEF5D58D");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionCannonAttack_F1BD20AE4B63558A26345B87CA535025
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionCannonAttack_F1BD20AE4B63558A26345B87CA535025()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionCannonAttack_F1BD20AE4B63558A26345B87CA535025");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionCannonSmash_388B9AE142B072AAF0D80FA5E9BEF139
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionCannonSmash_388B9AE142B072AAF0D80FA5E9BEF139()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionCannonSmash_388B9AE142B072AAF0D80FA5E9BEF139");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionCatch_CBCC57694C1B36202F8BE88662BB9DD8
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratReplaceAnimationDataList   OutAnimDataList                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::TransitionCatch_CBCC57694C1B36202F8BE88662BB9DD8(const struct FKoratReplaceAnimationDataList& OutAnimDataList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionCatch_CBCC57694C1B36202F8BE88662BB9DD8");

	Params::BP_Character_C_TransitionCatch_CBCC57694C1B36202F8BE88662BB9DD8 Parms{};

	Parms.OutAnimDataList = std::move(OutAnimDataList);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.TransitionDashAttack_5FE2682B4EC156B63CF1D8876153BA1D
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionDashAttack_5FE2682B4EC156B63CF1D8876153BA1D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionDashAttack_5FE2682B4EC156B63CF1D8876153BA1D");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionDashBlow_2AB11A7941A895F93D4343AB3488B382
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionDashBlow_2AB11A7941A895F93D4343AB3488B382()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionDashBlow_2AB11A7941A895F93D4343AB3488B382");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionDashDragon_B0EB4F39407C5C0D6888C494C00D2709
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionDashDragon_B0EB4F39407C5C0D6888C494C00D2709()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionDashDragon_B0EB4F39407C5C0D6888C494C00D2709");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionDashRising_2AB11A7941A895F93D4343AB3488B382
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionDashRising_2AB11A7941A895F93D4343AB3488B382()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionDashRising_2AB11A7941A895F93D4343AB3488B382");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionDragonDashAttack_9F6A90CA4282CD9B3E105F98DC36DBE2
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionDragonDashAttack_9F6A90CA4282CD9B3E105F98DC36DBE2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionDragonDashAttack_9F6A90CA4282CD9B3E105F98DC36DBE2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionDragonDashAttackDown_9F6A90CA4282CD9B3E105F98DC36DBE2
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionDragonDashAttackDown_9F6A90CA4282CD9B3E105F98DC36DBE2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionDragonDashAttackDown_9F6A90CA4282CD9B3E105F98DC36DBE2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionDragonDashAttackLeft_9F6A90CA4282CD9B3E105F98DC36DBE2
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionDragonDashAttackLeft_9F6A90CA4282CD9B3E105F98DC36DBE2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionDragonDashAttackLeft_9F6A90CA4282CD9B3E105F98DC36DBE2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionDragonDashAttackRight_9F6A90CA4282CD9B3E105F98DC36DBE2
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionDragonDashAttackRight_9F6A90CA4282CD9B3E105F98DC36DBE2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionDragonDashAttackRight_9F6A90CA4282CD9B3E105F98DC36DBE2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionDragonDashAttackUp_9F6A90CA4282CD9B3E105F98DC36DBE2
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionDragonDashAttackUp_9F6A90CA4282CD9B3E105F98DC36DBE2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionDragonDashAttackUp_9F6A90CA4282CD9B3E105F98DC36DBE2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionDragonSmash_79B5EE4542D9F939C8B5C48FE58AC647
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionDragonSmash_79B5EE4542D9F939C8B5C48FE58AC647()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionDragonSmash_79B5EE4542D9F939C8B5C48FE58AC647");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionDragonSmashDown_79B5EE4542D9F939C8B5C48FE58AC647
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionDragonSmashDown_79B5EE4542D9F939C8B5C48FE58AC647()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionDragonSmashDown_79B5EE4542D9F939C8B5C48FE58AC647");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionDragonSmashLeft_79B5EE4542D9F939C8B5C48FE58AC647
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionDragonSmashLeft_79B5EE4542D9F939C8B5C48FE58AC647()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionDragonSmashLeft_79B5EE4542D9F939C8B5C48FE58AC647");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionDragonSmashRight_79B5EE4542D9F939C8B5C48FE58AC647
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionDragonSmashRight_79B5EE4542D9F939C8B5C48FE58AC647()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionDragonSmashRight_79B5EE4542D9F939C8B5C48FE58AC647");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionDragonSmashUp_79B5EE4542D9F939C8B5C48FE58AC647
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionDragonSmashUp_79B5EE4542D9F939C8B5C48FE58AC647()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionDragonSmashUp_79B5EE4542D9F939C8B5C48FE58AC647");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionEnd_3CC26A4F45171230A00C6A9C274FEDD9
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionEnd_3CC26A4F45171230A00C6A9C274FEDD9()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionEnd_3CC26A4F45171230A00C6A9C274FEDD9");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionEnd_E1E814A54A0E3FFEDB2EEF945EC120F9
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionEnd_E1E814A54A0E3FFEDB2EEF945EC120F9()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionEnd_E1E814A54A0E3FFEDB2EEF945EC120F9");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionEnergyBulletRepel_254B687548ED1A43B215459291C501AA
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionEnergyBulletRepel_254B687548ED1A43B215459291C501AA()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionEnergyBulletRepel_254B687548ED1A43B215459291C501AA");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionFastAvoidance_254B687548ED1A43B215459291C501AA
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionFastAvoidance_254B687548ED1A43B215459291C501AA()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionFastAvoidance_254B687548ED1A43B215459291C501AA");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionGuard_6988BB3344CF3DF7A9E3D7AC2DF2AC63
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionGuard_6988BB3344CF3DF7A9E3D7AC2DF2AC63()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionGuard_6988BB3344CF3DF7A9E3D7AC2DF2AC63");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionHeavyCrush_03275ED54B81638A3DF7099A29AE6BD6
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionHeavyCrush_03275ED54B81638A3DF7099A29AE6BD6()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionHeavyCrush_03275ED54B81638A3DF7099A29AE6BD6");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionHeavyCrush_7AC370CA44CD9C44513F8B821231DE7C
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionHeavyCrush_7AC370CA44CD9C44513F8B821231DE7C()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionHeavyCrush_7AC370CA44CD9C44513F8B821231DE7C");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionHeavyCrush_F42B88F7480DF500E48A8DB4206E0C54
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionHeavyCrush_F42B88F7480DF500E48A8DB4206E0C54()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionHeavyCrush_F42B88F7480DF500E48A8DB4206E0C54");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionHomingJump_85F09CE34E7A0A65788E76A9A685A818
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionHomingJump_85F09CE34E7A0A65788E76A9A685A818()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionHomingJump_85F09CE34E7A0A65788E76A9A685A818");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_03275ED54B81638A3DF7099A29AE6BD6
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_03275ED54B81638A3DF7099A29AE6BD6()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_03275ED54B81638A3DF7099A29AE6BD6");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_04D348C841DCE3D0F950179A7C65A51E
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_04D348C841DCE3D0F950179A7C65A51E()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_04D348C841DCE3D0F950179A7C65A51E");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_071FBF3F44013C6A2BFACAAB8CB72D3B
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_071FBF3F44013C6A2BFACAAB8CB72D3B()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_071FBF3F44013C6A2BFACAAB8CB72D3B");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_0F5119A048B79D8214092D8460AFEB2F
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_0F5119A048B79D8214092D8460AFEB2F()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_0F5119A048B79D8214092D8460AFEB2F");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_12E5A0FC4C1598A4759FF2B31C6C36CE
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_12E5A0FC4C1598A4759FF2B31C6C36CE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_12E5A0FC4C1598A4759FF2B31C6C36CE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_1CFA30FF4B42C4256AD1E48D166666CB
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_1CFA30FF4B42C4256AD1E48D166666CB()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_1CFA30FF4B42C4256AD1E48D166666CB");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_254B687548ED1A43B215459291C501AA
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_254B687548ED1A43B215459291C501AA()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_254B687548ED1A43B215459291C501AA");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_2AB11A7941A895F93D4343AB3488B382
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_2AB11A7941A895F93D4343AB3488B382()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_2AB11A7941A895F93D4343AB3488B382");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_303F61EF474A64D4D300D3818BE9C55A
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_303F61EF474A64D4D300D3818BE9C55A()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_303F61EF474A64D4D300D3818BE9C55A");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_333FAF1B48CD20D132E53C8BA9BBA2E2
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_333FAF1B48CD20D132E53C8BA9BBA2E2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_333FAF1B48CD20D132E53C8BA9BBA2E2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_388B9AE142B072AAF0D80FA5E9BEF139
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_388B9AE142B072AAF0D80FA5E9BEF139()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_388B9AE142B072AAF0D80FA5E9BEF139");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_41FAAFD44DDBA982DF12688169A70D88
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_41FAAFD44DDBA982DF12688169A70D88()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_41FAAFD44DDBA982DF12688169A70D88");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_42F3D29645DFB64B0E78C78BDDA70BF0
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_42F3D29645DFB64B0E78C78BDDA70BF0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_42F3D29645DFB64B0E78C78BDDA70BF0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_43D19F5E4047C6794427FAA36432DFC0
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_43D19F5E4047C6794427FAA36432DFC0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_43D19F5E4047C6794427FAA36432DFC0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_48E10D1E437F71053B9AA686CBBFBE0C
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_48E10D1E437F71053B9AA686CBBFBE0C()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_48E10D1E437F71053B9AA686CBBFBE0C");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_48FF52D442A542190BC8B9A65EA7E141
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_48FF52D442A542190BC8B9A65EA7E141()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_48FF52D442A542190BC8B9A65EA7E141");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_495C4AF242B8B7682C886A9E047A6EBA
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_495C4AF242B8B7682C886A9E047A6EBA()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_495C4AF242B8B7682C886A9E047A6EBA");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_4C94A6BD4C6F775AD3A7BC9A4E82EBB0
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_4C94A6BD4C6F775AD3A7BC9A4E82EBB0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_4C94A6BD4C6F775AD3A7BC9A4E82EBB0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_503FD95B4EA5CAC6BE89218EEAA4AAA8
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_503FD95B4EA5CAC6BE89218EEAA4AAA8()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_503FD95B4EA5CAC6BE89218EEAA4AAA8");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_50D4DECE4DCDD7C61369028D47509D51
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_50D4DECE4DCDD7C61369028D47509D51()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_50D4DECE4DCDD7C61369028D47509D51");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_5517D8534FA76330609FEE87A5138F0E
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_5517D8534FA76330609FEE87A5138F0E()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_5517D8534FA76330609FEE87A5138F0E");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_558C133A48D45FF5464878BE624259BB
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_558C133A48D45FF5464878BE624259BB()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_558C133A48D45FF5464878BE624259BB");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_5FE2682B4EC156B63CF1D8876153BA1D
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_5FE2682B4EC156B63CF1D8876153BA1D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_5FE2682B4EC156B63CF1D8876153BA1D");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_60FD665940DDA18CB065239EC38AE090
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_60FD665940DDA18CB065239EC38AE090()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_60FD665940DDA18CB065239EC38AE090");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_663C481D4233D0ED5D7259B0F45D482B
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_663C481D4233D0ED5D7259B0F45D482B()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_663C481D4233D0ED5D7259B0F45D482B");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_6988BB3344CF3DF7A9E3D7AC2DF2AC63
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_6988BB3344CF3DF7A9E3D7AC2DF2AC63()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_6988BB3344CF3DF7A9E3D7AC2DF2AC63");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_6E5157DA4CEAAEC7F5160AB16437F8AC
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_6E5157DA4CEAAEC7F5160AB16437F8AC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_6E5157DA4CEAAEC7F5160AB16437F8AC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_79B5EE4542D9F939C8B5C48FE58AC647
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_79B5EE4542D9F939C8B5C48FE58AC647()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_79B5EE4542D9F939C8B5C48FE58AC647");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_7A0735F84F6E0715A2FE4E94B4F5224F
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_7A0735F84F6E0715A2FE4E94B4F5224F()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_7A0735F84F6E0715A2FE4E94B4F5224F");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_7AC370CA44CD9C44513F8B821231DE7C
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_7AC370CA44CD9C44513F8B821231DE7C()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_7AC370CA44CD9C44513F8B821231DE7C");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_81A64D43466AC942858887B79205688F
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_81A64D43466AC942858887B79205688F()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_81A64D43466AC942858887B79205688F");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_85F09CE34E7A0A65788E76A9A685A818
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_85F09CE34E7A0A65788E76A9A685A818()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_85F09CE34E7A0A65788E76A9A685A818");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_8C46AFEE4CFF99CFCD9247BD2E30A82E
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_8C46AFEE4CFF99CFCD9247BD2E30A82E()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_8C46AFEE4CFF99CFCD9247BD2E30A82E");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_94E8FB094FDEA3B471FC43895F89E13A
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_94E8FB094FDEA3B471FC43895F89E13A()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_94E8FB094FDEA3B471FC43895F89E13A");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_962DFCA04ACD95A24114F7BA68B5B08B
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_962DFCA04ACD95A24114F7BA68B5B08B()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_962DFCA04ACD95A24114F7BA68B5B08B");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_9F6A90CA4282CD9B3E105F98DC36DBE2
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_9F6A90CA4282CD9B3E105F98DC36DBE2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_9F6A90CA4282CD9B3E105F98DC36DBE2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_A21D327B4A1B1E35BE80F696FC215EE9
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_A21D327B4A1B1E35BE80F696FC215EE9()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_A21D327B4A1B1E35BE80F696FC215EE9");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_A8A53AE2431CC23EE304FD82AC664727
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_A8A53AE2431CC23EE304FD82AC664727()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_A8A53AE2431CC23EE304FD82AC664727");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_B0EB4F39407C5C0D6888C494C00D2709
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_B0EB4F39407C5C0D6888C494C00D2709()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_B0EB4F39407C5C0D6888C494C00D2709");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_B47C7C0C45D6159A9255B899C2F3AB28
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_B47C7C0C45D6159A9255B899C2F3AB28()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_B47C7C0C45D6159A9255B899C2F3AB28");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_BFAD0FF4457BEB9914F785920E8BAD92
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_BFAD0FF4457BEB9914F785920E8BAD92()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_BFAD0FF4457BEB9914F785920E8BAD92");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_C46B6CA2445F54C259DAB5882478BD79
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_C46B6CA2445F54C259DAB5882478BD79()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_C46B6CA2445F54C259DAB5882478BD79");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_CBCC57694C1B36202F8BE88662BB9DD8
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratReplaceAnimationDataList   OutAnimDataList                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::TransitionNone_CBCC57694C1B36202F8BE88662BB9DD8(const struct FKoratReplaceAnimationDataList& OutAnimDataList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_CBCC57694C1B36202F8BE88662BB9DD8");

	Params::BP_Character_C_TransitionNone_CBCC57694C1B36202F8BE88662BB9DD8 Parms{};

	Parms.OutAnimDataList = std::move(OutAnimDataList);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.TransitionNone_D3E15A18479B45452774B68ECF576F30
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_D3E15A18479B45452774B68ECF576F30()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_D3E15A18479B45452774B68ECF576F30");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_E2170F9F4032446BE3D679A93194A7FC
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_E2170F9F4032446BE3D679A93194A7FC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_E2170F9F4032446BE3D679A93194A7FC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_E4D793DA4A13B21EECFA0499E73CC831
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_E4D793DA4A13B21EECFA0499E73CC831()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_E4D793DA4A13B21EECFA0499E73CC831");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_E842F8FD40E51FAD00DA8CB0CEF5D58D
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_E842F8FD40E51FAD00DA8CB0CEF5D58D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_E842F8FD40E51FAD00DA8CB0CEF5D58D");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_EB1D5ABE4C9B60566419E2B9492CA683
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_EB1D5ABE4C9B60566419E2B9492CA683()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_EB1D5ABE4C9B60566419E2B9492CA683");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_F0DD079841DD68440795F6ABEA85FD0F
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_F0DD079841DD68440795F6ABEA85FD0F()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_F0DD079841DD68440795F6ABEA85FD0F");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_F1BD20AE4B63558A26345B87CA535025
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_F1BD20AE4B63558A26345B87CA535025()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_F1BD20AE4B63558A26345B87CA535025");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_F42B88F7480DF500E48A8DB4206E0C54
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_F42B88F7480DF500E48A8DB4206E0C54()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_F42B88F7480DF500E48A8DB4206E0C54");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionNone_FF3C7EB54091ABEECA3567B0BB0BE4D5
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionNone_FF3C7EB54091ABEECA3567B0BB0BE4D5()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionNone_FF3C7EB54091ABEECA3567B0BB0BE4D5");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionParry_BFAD0FF4457BEB9914F785920E8BAD92
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionParry_BFAD0FF4457BEB9914F785920E8BAD92()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionParry_BFAD0FF4457BEB9914F785920E8BAD92");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionParrySmash_50D4DECE4DCDD7C61369028D47509D51
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionParrySmash_50D4DECE4DCDD7C61369028D47509D51()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionParrySmash_50D4DECE4DCDD7C61369028D47509D51");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_03275ED54B81638A3DF7099A29AE6BD6
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_03275ED54B81638A3DF7099A29AE6BD6()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_03275ED54B81638A3DF7099A29AE6BD6");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_04D348C841DCE3D0F950179A7C65A51E
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_04D348C841DCE3D0F950179A7C65A51E()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_04D348C841DCE3D0F950179A7C65A51E");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_071FBF3F44013C6A2BFACAAB8CB72D3B
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_071FBF3F44013C6A2BFACAAB8CB72D3B()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_071FBF3F44013C6A2BFACAAB8CB72D3B");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_0F5119A048B79D8214092D8460AFEB2F
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_0F5119A048B79D8214092D8460AFEB2F()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_0F5119A048B79D8214092D8460AFEB2F");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_12E5A0FC4C1598A4759FF2B31C6C36CE
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_12E5A0FC4C1598A4759FF2B31C6C36CE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_12E5A0FC4C1598A4759FF2B31C6C36CE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_1CFA30FF4B42C4256AD1E48D166666CB
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_1CFA30FF4B42C4256AD1E48D166666CB()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_1CFA30FF4B42C4256AD1E48D166666CB");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_254B687548ED1A43B215459291C501AA
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_254B687548ED1A43B215459291C501AA()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_254B687548ED1A43B215459291C501AA");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_2AB11A7941A895F93D4343AB3488B382
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_2AB11A7941A895F93D4343AB3488B382()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_2AB11A7941A895F93D4343AB3488B382");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_303F61EF474A64D4D300D3818BE9C55A
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_303F61EF474A64D4D300D3818BE9C55A()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_303F61EF474A64D4D300D3818BE9C55A");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_333FAF1B48CD20D132E53C8BA9BBA2E2
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_333FAF1B48CD20D132E53C8BA9BBA2E2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_333FAF1B48CD20D132E53C8BA9BBA2E2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_388B9AE142B072AAF0D80FA5E9BEF139
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_388B9AE142B072AAF0D80FA5E9BEF139()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_388B9AE142B072AAF0D80FA5E9BEF139");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_41FAAFD44DDBA982DF12688169A70D88
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_41FAAFD44DDBA982DF12688169A70D88()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_41FAAFD44DDBA982DF12688169A70D88");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_42F3D29645DFB64B0E78C78BDDA70BF0
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_42F3D29645DFB64B0E78C78BDDA70BF0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_42F3D29645DFB64B0E78C78BDDA70BF0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_43D19F5E4047C6794427FAA36432DFC0
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_43D19F5E4047C6794427FAA36432DFC0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_43D19F5E4047C6794427FAA36432DFC0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_48E10D1E437F71053B9AA686CBBFBE0C
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_48E10D1E437F71053B9AA686CBBFBE0C()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_48E10D1E437F71053B9AA686CBBFBE0C");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_48FF52D442A542190BC8B9A65EA7E141
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_48FF52D442A542190BC8B9A65EA7E141()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_48FF52D442A542190BC8B9A65EA7E141");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_495C4AF242B8B7682C886A9E047A6EBA
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_495C4AF242B8B7682C886A9E047A6EBA()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_495C4AF242B8B7682C886A9E047A6EBA");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_4C94A6BD4C6F775AD3A7BC9A4E82EBB0
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_4C94A6BD4C6F775AD3A7BC9A4E82EBB0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_4C94A6BD4C6F775AD3A7BC9A4E82EBB0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_503FD95B4EA5CAC6BE89218EEAA4AAA8
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_503FD95B4EA5CAC6BE89218EEAA4AAA8()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_503FD95B4EA5CAC6BE89218EEAA4AAA8");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_50D4DECE4DCDD7C61369028D47509D51
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_50D4DECE4DCDD7C61369028D47509D51()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_50D4DECE4DCDD7C61369028D47509D51");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_5517D8534FA76330609FEE87A5138F0E
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_5517D8534FA76330609FEE87A5138F0E()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_5517D8534FA76330609FEE87A5138F0E");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_558C133A48D45FF5464878BE624259BB
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_558C133A48D45FF5464878BE624259BB()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_558C133A48D45FF5464878BE624259BB");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_5FE2682B4EC156B63CF1D8876153BA1D
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_5FE2682B4EC156B63CF1D8876153BA1D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_5FE2682B4EC156B63CF1D8876153BA1D");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_60FD665940DDA18CB065239EC38AE090
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_60FD665940DDA18CB065239EC38AE090()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_60FD665940DDA18CB065239EC38AE090");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_663C481D4233D0ED5D7259B0F45D482B
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_663C481D4233D0ED5D7259B0F45D482B()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_663C481D4233D0ED5D7259B0F45D482B");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_6988BB3344CF3DF7A9E3D7AC2DF2AC63
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_6988BB3344CF3DF7A9E3D7AC2DF2AC63()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_6988BB3344CF3DF7A9E3D7AC2DF2AC63");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_6E5157DA4CEAAEC7F5160AB16437F8AC
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_6E5157DA4CEAAEC7F5160AB16437F8AC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_6E5157DA4CEAAEC7F5160AB16437F8AC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_79B5EE4542D9F939C8B5C48FE58AC647
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_79B5EE4542D9F939C8B5C48FE58AC647()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_79B5EE4542D9F939C8B5C48FE58AC647");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_7A0735F84F6E0715A2FE4E94B4F5224F
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_7A0735F84F6E0715A2FE4E94B4F5224F()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_7A0735F84F6E0715A2FE4E94B4F5224F");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_7AC370CA44CD9C44513F8B821231DE7C
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_7AC370CA44CD9C44513F8B821231DE7C()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_7AC370CA44CD9C44513F8B821231DE7C");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_81A64D43466AC942858887B79205688F
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_81A64D43466AC942858887B79205688F()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_81A64D43466AC942858887B79205688F");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_85F09CE34E7A0A65788E76A9A685A818
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_85F09CE34E7A0A65788E76A9A685A818()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_85F09CE34E7A0A65788E76A9A685A818");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_8C46AFEE4CFF99CFCD9247BD2E30A82E
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_8C46AFEE4CFF99CFCD9247BD2E30A82E()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_8C46AFEE4CFF99CFCD9247BD2E30A82E");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_94E8FB094FDEA3B471FC43895F89E13A
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_94E8FB094FDEA3B471FC43895F89E13A()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_94E8FB094FDEA3B471FC43895F89E13A");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_962DFCA04ACD95A24114F7BA68B5B08B
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_962DFCA04ACD95A24114F7BA68B5B08B()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_962DFCA04ACD95A24114F7BA68B5B08B");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_9F6A90CA4282CD9B3E105F98DC36DBE2
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_9F6A90CA4282CD9B3E105F98DC36DBE2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_9F6A90CA4282CD9B3E105F98DC36DBE2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_A21D327B4A1B1E35BE80F696FC215EE9
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_A21D327B4A1B1E35BE80F696FC215EE9()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_A21D327B4A1B1E35BE80F696FC215EE9");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_A8A53AE2431CC23EE304FD82AC664727
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_A8A53AE2431CC23EE304FD82AC664727()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_A8A53AE2431CC23EE304FD82AC664727");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_B0EB4F39407C5C0D6888C494C00D2709
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_B0EB4F39407C5C0D6888C494C00D2709()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_B0EB4F39407C5C0D6888C494C00D2709");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_B47C7C0C45D6159A9255B899C2F3AB28
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_B47C7C0C45D6159A9255B899C2F3AB28()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_B47C7C0C45D6159A9255B899C2F3AB28");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_BFAD0FF4457BEB9914F785920E8BAD92
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_BFAD0FF4457BEB9914F785920E8BAD92()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_BFAD0FF4457BEB9914F785920E8BAD92");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_C46B6CA2445F54C259DAB5882478BD79
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_C46B6CA2445F54C259DAB5882478BD79()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_C46B6CA2445F54C259DAB5882478BD79");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_CBCC57694C1B36202F8BE88662BB9DD8
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_CBCC57694C1B36202F8BE88662BB9DD8()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_CBCC57694C1B36202F8BE88662BB9DD8");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_D3E15A18479B45452774B68ECF576F30
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_D3E15A18479B45452774B68ECF576F30()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_D3E15A18479B45452774B68ECF576F30");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_E2170F9F4032446BE3D679A93194A7FC
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_E2170F9F4032446BE3D679A93194A7FC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_E2170F9F4032446BE3D679A93194A7FC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_E4D793DA4A13B21EECFA0499E73CC831
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_E4D793DA4A13B21EECFA0499E73CC831()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_E4D793DA4A13B21EECFA0499E73CC831");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_E842F8FD40E51FAD00DA8CB0CEF5D58D
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_E842F8FD40E51FAD00DA8CB0CEF5D58D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_E842F8FD40E51FAD00DA8CB0CEF5D58D");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_EB1D5ABE4C9B60566419E2B9492CA683
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_EB1D5ABE4C9B60566419E2B9492CA683()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_EB1D5ABE4C9B60566419E2B9492CA683");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_F0DD079841DD68440795F6ABEA85FD0F
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_F0DD079841DD68440795F6ABEA85FD0F()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_F0DD079841DD68440795F6ABEA85FD0F");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_F1BD20AE4B63558A26345B87CA535025
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_F1BD20AE4B63558A26345B87CA535025()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_F1BD20AE4B63558A26345B87CA535025");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_F42B88F7480DF500E48A8DB4206E0C54
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_F42B88F7480DF500E48A8DB4206E0C54()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_F42B88F7480DF500E48A8DB4206E0C54");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionReaction_FF3C7EB54091ABEECA3567B0BB0BE4D5
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionReaction_FF3C7EB54091ABEECA3567B0BB0BE4D5()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionReaction_FF3C7EB54091ABEECA3567B0BB0BE4D5");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionRollingHurricane_962DFCA04ACD95A24114F7BA68B5B08B
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionRollingHurricane_962DFCA04ACD95A24114F7BA68B5B08B()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionRollingHurricane_962DFCA04ACD95A24114F7BA68B5B08B");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionRollingHurricane_A21D327B4A1B1E35BE80F696FC215EE9
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionRollingHurricane_A21D327B4A1B1E35BE80F696FC215EE9()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionRollingHurricane_A21D327B4A1B1E35BE80F696FC215EE9");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionRollingHurricane_A8A53AE2431CC23EE304FD82AC664727
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionRollingHurricane_A8A53AE2431CC23EE304FD82AC664727()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionRollingHurricane_A8A53AE2431CC23EE304FD82AC664727");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionRollingHurricane_E4D793DA4A13B21EECFA0499E73CC831
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionRollingHurricane_E4D793DA4A13B21EECFA0499E73CC831()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionRollingHurricane_E4D793DA4A13B21EECFA0499E73CC831");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionRollingPress_81A64D43466AC942858887B79205688F
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionRollingPress_81A64D43466AC942858887B79205688F()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionRollingPress_81A64D43466AC942858887B79205688F");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionRollingPress_962DFCA04ACD95A24114F7BA68B5B08B
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionRollingPress_962DFCA04ACD95A24114F7BA68B5B08B()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionRollingPress_962DFCA04ACD95A24114F7BA68B5B08B");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionRollingPress_A21D327B4A1B1E35BE80F696FC215EE9
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionRollingPress_A21D327B4A1B1E35BE80F696FC215EE9()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionRollingPress_A21D327B4A1B1E35BE80F696FC215EE9");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionRush_04D348C841DCE3D0F950179A7C65A51E
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionRush_04D348C841DCE3D0F950179A7C65A51E()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionRush_04D348C841DCE3D0F950179A7C65A51E");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionRush_12E5A0FC4C1598A4759FF2B31C6C36CE
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionRush_12E5A0FC4C1598A4759FF2B31C6C36CE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionRush_12E5A0FC4C1598A4759FF2B31C6C36CE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionRush_1CFA30FF4B42C4256AD1E48D166666CB
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionRush_1CFA30FF4B42C4256AD1E48D166666CB()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionRush_1CFA30FF4B42C4256AD1E48D166666CB");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionRush_2AB11A7941A895F93D4343AB3488B382
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionRush_2AB11A7941A895F93D4343AB3488B382()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionRush_2AB11A7941A895F93D4343AB3488B382");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionRush_333FAF1B48CD20D132E53C8BA9BBA2E2
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionRush_333FAF1B48CD20D132E53C8BA9BBA2E2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionRush_333FAF1B48CD20D132E53C8BA9BBA2E2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionRush_388B9AE142B072AAF0D80FA5E9BEF139
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionRush_388B9AE142B072AAF0D80FA5E9BEF139()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionRush_388B9AE142B072AAF0D80FA5E9BEF139");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionRush_43D19F5E4047C6794427FAA36432DFC0
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionRush_43D19F5E4047C6794427FAA36432DFC0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionRush_43D19F5E4047C6794427FAA36432DFC0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionRush_48FF52D442A542190BC8B9A65EA7E141
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionRush_48FF52D442A542190BC8B9A65EA7E141()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionRush_48FF52D442A542190BC8B9A65EA7E141");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionRush_4C94A6BD4C6F775AD3A7BC9A4E82EBB0
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionRush_4C94A6BD4C6F775AD3A7BC9A4E82EBB0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionRush_4C94A6BD4C6F775AD3A7BC9A4E82EBB0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionRush_558C133A48D45FF5464878BE624259BB
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionRush_558C133A48D45FF5464878BE624259BB()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionRush_558C133A48D45FF5464878BE624259BB");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionRush_60FD665940DDA18CB065239EC38AE090
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionRush_60FD665940DDA18CB065239EC38AE090()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionRush_60FD665940DDA18CB065239EC38AE090");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionRush_7A0735F84F6E0715A2FE4E94B4F5224F
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionRush_7A0735F84F6E0715A2FE4E94B4F5224F()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionRush_7A0735F84F6E0715A2FE4E94B4F5224F");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionRush_962DFCA04ACD95A24114F7BA68B5B08B
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionRush_962DFCA04ACD95A24114F7BA68B5B08B()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionRush_962DFCA04ACD95A24114F7BA68B5B08B");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionRush_A21D327B4A1B1E35BE80F696FC215EE9
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionRush_A21D327B4A1B1E35BE80F696FC215EE9()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionRush_A21D327B4A1B1E35BE80F696FC215EE9");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionRush_B47C7C0C45D6159A9255B899C2F3AB28
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionRush_B47C7C0C45D6159A9255B899C2F3AB28()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionRush_B47C7C0C45D6159A9255B899C2F3AB28");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionRush_C46B6CA2445F54C259DAB5882478BD79
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionRush_C46B6CA2445F54C259DAB5882478BD79()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionRush_C46B6CA2445F54C259DAB5882478BD79");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionRush_E2170F9F4032446BE3D679A93194A7FC
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionRush_E2170F9F4032446BE3D679A93194A7FC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionRush_E2170F9F4032446BE3D679A93194A7FC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionRush_F42B88F7480DF500E48A8DB4206E0C54
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionRush_F42B88F7480DF500E48A8DB4206E0C54()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionRush_F42B88F7480DF500E48A8DB4206E0C54");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionShakeOff_495C4AF242B8B7682C886A9E047A6EBA
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionShakeOff_495C4AF242B8B7682C886A9E047A6EBA()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionShakeOff_495C4AF242B8B7682C886A9E047A6EBA");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionSkill_B0EB4F39407C5C0D6888C494C00D2709
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionSkill_B0EB4F39407C5C0D6888C494C00D2709()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionSkill_B0EB4F39407C5C0D6888C494C00D2709");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionSmash_48E10D1E437F71053B9AA686CBBFBE0C
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionSmash_48E10D1E437F71053B9AA686CBBFBE0C()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionSmash_48E10D1E437F71053B9AA686CBBFBE0C");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionSonicSway_BFAD0FF4457BEB9914F785920E8BAD92
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionSonicSway_BFAD0FF4457BEB9914F785920E8BAD92()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionSonicSway_BFAD0FF4457BEB9914F785920E8BAD92");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionStep_254B687548ED1A43B215459291C501AA
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionStep_254B687548ED1A43B215459291C501AA()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionStep_254B687548ED1A43B215459291C501AA");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionSuperZCounter_254B687548ED1A43B215459291C501AA
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionSuperZCounter_254B687548ED1A43B215459291C501AA()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionSuperZCounter_254B687548ED1A43B215459291C501AA");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionThrow_254B687548ED1A43B215459291C501AA
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionThrow_254B687548ED1A43B215459291C501AA()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionThrow_254B687548ED1A43B215459291C501AA");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.TransitionVanishingAssault_254B687548ED1A43B215459291C501AA
// (BlueprintCallable, BlueprintEvent)

void ABP_Character_C::TransitionVanishingAssault_254B687548ED1A43B215459291C501AA()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "TransitionVanishingAssault_254B687548ED1A43B215459291C501AA");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.UpdateChche
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::UpdateChche()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "UpdateChche");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.UpdateFreeCameraTarget
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        InputVector                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::UpdateFreeCameraTarget(const struct FVector2D& InputVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "UpdateFreeCameraTarget");

	Params::BP_Character_C_UpdateFreeCameraTarget Parms{};

	Parms.InputVector = std::move(InputVector);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.UpdateGiantCharaTargetTransformNearestTargetTestOverride
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInForceSearchNearParts                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::UpdateGiantCharaTargetTransformNearestTargetTestOverride(bool bInForceSearchNearParts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "UpdateGiantCharaTargetTransformNearestTargetTestOverride");

	Params::BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverride Parms{};

	Parms.bInForceSearchNearParts = bInForceSearchNearParts;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InForceSearchNearParts                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl(bool InForceSearchNearParts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl");

	Params::BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl Parms{};

	Parms.InForceSearchNearParts = InForceSearchNearParts;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.UpdateInput
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::UpdateInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "UpdateInput");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.UpdateRotateToCenter
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::UpdateRotateToCenter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "UpdateRotateToCenter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.UpdateVanishingHiddenSwitching
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_C::UpdateVanishingHiddenSwitching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "UpdateVanishingHiddenSwitching");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.VanishingFinish
// (Event, Public, BlueprintEvent)

void ABP_Character_C::VanishingFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "VanishingFinish");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.VanishingPlayEffect
// (Event, Public, BlueprintEvent)

void ABP_Character_C::VanishingPlayEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "VanishingPlayEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.VanishingTransport
// (Event, Public, BlueprintEvent)

void ABP_Character_C::VanishingTransport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "VanishingTransport");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character.BP_Character_C.CalcCorrectionTowardCenterYaw
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          InVector                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          InRotationPosition                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InCorrectionTowardCenter                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  OutYaw                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::CalcCorrectionTowardCenterYaw(const struct FVector& InVector, const struct FVector& InRotationPosition, double InCorrectionTowardCenter, double* OutYaw) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "CalcCorrectionTowardCenterYaw");

	Params::BP_Character_C_CalcCorrectionTowardCenterYaw Parms{};

	Parms.InVector = std::move(InVector);
	Parms.InRotationPosition = std::move(InRotationPosition);
	Parms.InCorrectionTowardCenter = InCorrectionTowardCenter;

	UObject::ProcessEvent(Func, &Parms);

	if (OutYaw != nullptr)
		*OutYaw = Parms.OutYaw;
}


// Function BP_Character.BP_Character_C.CalcHitBackRotation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FRotator                         InHitRotation                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FKoratHitBackMovementData        InHitBackData                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FRotator ABP_Character_C::CalcHitBackRotation(const struct FRotator& InHitRotation, const struct FKoratHitBackMovementData& InHitBackData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "CalcHitBackRotation");

	Params::BP_Character_C_CalcHitBackRotation Parms{};

	Parms.InHitRotation = std::move(InHitRotation);
	Parms.InHitBackData = std::move(InHitBackData);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.DebugDrawHitArea
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// float                                   InHitHeightRate                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          InCharacterUpVector                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          InHitLocation                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::DebugDrawHitArea(float InHitHeightRate, const struct FVector& InCharacterUpVector, const struct FVector& InHitLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "DebugDrawHitArea");

	Params::BP_Character_C_DebugDrawHitArea Parms{};

	Parms.InHitHeightRate = InHitHeightRate;
	Parms.InCharacterUpVector = std::move(InCharacterUpVector);
	Parms.InHitLocation = std::move(InHitLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character.BP_Character_C.DecideDamageReactionByActionCategory
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FKoratDamageReactionDataList     InDamageReactionDataList                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FKoratDamageReactionDataList     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FKoratDamageReactionDataList ABP_Character_C::DecideDamageReactionByActionCategory(const struct FKoratDamageReactionDataList& InDamageReactionDataList) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "DecideDamageReactionByActionCategory");

	Params::BP_Character_C_DecideDamageReactionByActionCategory Parms{};

	Parms.InDamageReactionDataList = std::move(InDamageReactionDataList);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.GetBlastDefaultDemoAction
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EKoratBlastSlotType                     InBlastSlot                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKoratActionDataList             ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FKoratActionDataList ABP_Character_C::GetBlastDefaultDemoAction(EKoratBlastSlotType InBlastSlot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetBlastDefaultDemoAction");

	Params::BP_Character_C_GetBlastDefaultDemoAction Parms{};

	Parms.InBlastSlot = InBlastSlot;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.GetBlastSIAction
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// ESSBlastDemoBranchType                  InBranchType                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EKoratBlastSlotType                     InBlastSlot                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKoratActionDataList             ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FKoratActionDataList ABP_Character_C::GetBlastSIAction(const ESSBlastDemoBranchType InBranchType, const EKoratBlastSlotType InBlastSlot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetBlastSIAction");

	Params::BP_Character_C_GetBlastSIAction Parms{};

	Parms.InBranchType = InBranchType;
	Parms.InBlastSlot = InBlastSlot;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.GetCharacterMovementMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// EMovementMode                           MovementMode                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::GetCharacterMovementMode(EMovementMode* MovementMode) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetCharacterMovementMode");

	Params::BP_Character_C_GetCharacterMovementMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MovementMode != nullptr)
		*MovementMode = Parms.MovementMode;
}


// Function BP_Character.BP_Character_C.GetCharacterRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FRotator                         Rotation                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Character_C::GetCharacterRotation(struct FRotator* Rotation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetCharacterRotation");

	Params::BP_Character_C_GetCharacterRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Rotation != nullptr)
		*Rotation = std::move(Parms.Rotation);
}


// Function BP_Character.BP_Character_C.GetCorrectionTowardCenterDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          InVector                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InCorrectionTowardCenter                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EKoratDirection                         CenterDirection                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::GetCorrectionTowardCenterDirection(const struct FVector& InVector, double InCorrectionTowardCenter, EKoratDirection* CenterDirection) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetCorrectionTowardCenterDirection");

	Params::BP_Character_C_GetCorrectionTowardCenterDirection Parms{};

	Parms.InVector = std::move(InVector);
	Parms.InCorrectionTowardCenter = InCorrectionTowardCenter;

	UObject::ProcessEvent(Func, &Parms);

	if (CenterDirection != nullptr)
		*CenterDirection = Parms.CenterDirection;
}


// Function BP_Character.BP_Character_C.GetCurrentActionElapsedTime
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_Character_C::GetCurrentActionElapsedTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetCurrentActionElapsedTime");

	Params::BP_Character_C_GetCurrentActionElapsedTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.GetDebugDrawHitAreaTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double ABP_Character_C::GetDebugDrawHitAreaTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetDebugDrawHitAreaTime");

	Params::BP_Character_C_GetDebugDrawHitAreaTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.GetFindFloor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FFindFloorResult                 FloorResult                                            (Parm, OutParm, NoDestructor, ContainsInstancedReference)

void ABP_Character_C::GetFindFloor(struct FFindFloorResult* FloorResult) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetFindFloor");

	Params::BP_Character_C_GetFindFloor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FloorResult != nullptr)
		*FloorResult = std::move(Parms.FloorResult);
}


// Function BP_Character.BP_Character_C.GetGiantCharaTargetLocations
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TArray<struct FVector>                  ReturnValue                                            (Parm, OutParm, ReturnParm)

TArray<struct FVector> ABP_Character_C::GetGiantCharaTargetLocations() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetGiantCharaTargetLocations");

	Params::BP_Character_C_GetGiantCharaTargetLocations Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.GetHomingLocationPawn
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class APawn*                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class APawn* ABP_Character_C::GetHomingLocationPawn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetHomingLocationPawn");

	Params::BP_Character_C_GetHomingLocationPawn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.GetKawaiiPhysicsComponent
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UKoratKawaiiPhysicsComponent*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UKoratKawaiiPhysicsComponent* ABP_Character_C::GetKawaiiPhysicsComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetKawaiiPhysicsComponent");

	Params::BP_Character_C_GetKawaiiPhysicsComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.GetRequestTransitAction
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FKoratActionDataList             ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FKoratActionDataList ABP_Character_C::GetRequestTransitAction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetRequestTransitAction");

	Params::BP_Character_C_GetRequestTransitAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.GetRunningActionList
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TArray<struct FKoratActionDataList>     OutActionList                                          (Parm, OutParm)
// EKoratCharacterLocomotionDetailStatus   OutLocomotionDetailStatus                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::GetRunningActionList(TArray<struct FKoratActionDataList>* OutActionList, EKoratCharacterLocomotionDetailStatus* OutLocomotionDetailStatus) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetRunningActionList");

	Params::BP_Character_C_GetRunningActionList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutActionList != nullptr)
		*OutActionList = std::move(Parms.OutActionList);

	if (OutLocomotionDetailStatus != nullptr)
		*OutLocomotionDetailStatus = Parms.OutLocomotionDetailStatus;
}


// Function BP_Character.BP_Character_C.GetUseCharacterRotationPitch
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    UsePitch                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::GetUseCharacterRotationPitch(bool* UsePitch) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetUseCharacterRotationPitch");

	Params::BP_Character_C_GetUseCharacterRotationPitch Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (UsePitch != nullptr)
		*UsePitch = Parms.UsePitch;
}


// Function BP_Character.BP_Character_C.GetViewSwitchFaceMeshVisibilityValue
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ABP_Character_C::GetViewSwitchFaceMeshVisibilityValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "GetViewSwitchFaceMeshVisibilityValue");

	Params::BP_Character_C_GetViewSwitchFaceMeshVisibilityValue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.IsActionStandby
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Character_C::IsActionStandby() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "IsActionStandby");

	Params::BP_Character_C_IsActionStandby Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.IsDebugDrawHitArea
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Character_C::IsDebugDrawHitArea() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "IsDebugDrawHitArea");

	Params::BP_Character_C_IsDebugDrawHitArea Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.IsDisableLipSync
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Character_C::IsDisableLipSync() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "IsDisableLipSync");

	Params::BP_Character_C_IsDisableLipSync Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.IsGuardSuccessByParameter
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FKoratCharacterCombativesParameterInParameter                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    OutIsGuardBreak                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    OutIsAttackBreak                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    OutIsImpossibleGuard                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Character_C::IsGuardSuccessByParameter(const struct FKoratCharacterCombativesParameter& InParameter, bool* OutIsGuardBreak, bool* OutIsAttackBreak, bool* OutIsImpossibleGuard) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "IsGuardSuccessByParameter");

	Params::BP_Character_C_IsGuardSuccessByParameter Parms{};

	Parms.InParameter = std::move(InParameter);

	UObject::ProcessEvent(Func, &Parms);

	if (OutIsGuardBreak != nullptr)
		*OutIsGuardBreak = Parms.OutIsGuardBreak;

	if (OutIsAttackBreak != nullptr)
		*OutIsAttackBreak = Parms.OutIsAttackBreak;

	if (OutIsImpossibleGuard != nullptr)
		*OutIsImpossibleGuard = Parms.OutIsImpossibleGuard;

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.IsUseHitStop
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    IsUseHitStop_0                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::IsUseHitStop(bool* IsUseHitStop_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "IsUseHitStop");

	Params::BP_Character_C_IsUseHitStop Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsUseHitStop_0 != nullptr)
		*IsUseHitStop_0 = Parms.IsUseHitStop_0;
}


// Function BP_Character.BP_Character_C.IsVanishing
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Character_C::IsVanishing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "IsVanishing");

	Params::BP_Character_C_IsVanishing Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.IsWaitRequestTransitAction
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Character_C::IsWaitRequestTransitAction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "IsWaitRequestTransitAction");

	Params::BP_Character_C_IsWaitRequestTransitAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Character.BP_Character_C.SetChartsVariable
// (Event, Public, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// float                                   InValueA                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InValueB                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InLogVolume                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_C::SetChartsVariable(const float InValueA, const float InValueB, const float InLogVolume) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_C", "SetChartsVariable");

	Params::BP_Character_C_SetChartsVariable Parms{};

	Parms.InValueA = InValueA;
	Parms.InValueB = InValueB;
	Parms.InLogVolume = InLogVolume;

	UObject::ProcessEvent(Func, &Parms);
}

}

