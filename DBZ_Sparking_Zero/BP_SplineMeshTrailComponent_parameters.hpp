#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SplineMeshTrailComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_SplineMeshTrailComponent.BP_SplineMeshTrailComponent_C.ChangeHiddenInGame
// 0x0002 (0x0002 - 0x0000)
struct BP_SplineMeshTrailComponent_C_ChangeHiddenInGame final
{
public:
	bool                                          bHiddenInGame_0;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMeshTrailComponent_C_ChangeHiddenInGame) == 0x000001, "Wrong alignment on BP_SplineMeshTrailComponent_C_ChangeHiddenInGame");
static_assert(sizeof(BP_SplineMeshTrailComponent_C_ChangeHiddenInGame) == 0x000002, "Wrong size on BP_SplineMeshTrailComponent_C_ChangeHiddenInGame");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_ChangeHiddenInGame, bHiddenInGame_0) == 0x000000, "Member 'BP_SplineMeshTrailComponent_C_ChangeHiddenInGame::bHiddenInGame_0' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_ChangeHiddenInGame, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_SplineMeshTrailComponent_C_ChangeHiddenInGame::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_SplineMeshTrailComponent.BP_SplineMeshTrailComponent_C.CheckReset
// 0x0060 (0x0060 - 0x0000)
struct BP_SplineMeshTrailComponent_C_CheckReset final
{
public:
	struct FTransform                             CallFunc_GetSocketPos_OutTransform;                // 0x0000(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMeshTrailComponent_C_CheckReset) == 0x000010, "Wrong alignment on BP_SplineMeshTrailComponent_C_CheckReset");
static_assert(sizeof(BP_SplineMeshTrailComponent_C_CheckReset) == 0x000060, "Wrong size on BP_SplineMeshTrailComponent_C_CheckReset");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_CheckReset, CallFunc_GetSocketPos_OutTransform) == 0x000000, "Member 'BP_SplineMeshTrailComponent_C_CheckReset::CallFunc_GetSocketPos_OutTransform' has a wrong offset!");

// Function BP_SplineMeshTrailComponent.BP_SplineMeshTrailComponent_C.EntryTransformArray
// 0x0080 (0x0080 - 0x0000)
struct BP_SplineMeshTrailComponent_C_EntryTransformArray final
{
public:
	struct FTransform                             EntryTransform;                                    // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMeshTrailComponent_C_EntryTransformArray) == 0x000010, "Wrong alignment on BP_SplineMeshTrailComponent_C_EntryTransformArray");
static_assert(sizeof(BP_SplineMeshTrailComponent_C_EntryTransformArray) == 0x000080, "Wrong size on BP_SplineMeshTrailComponent_C_EntryTransformArray");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_EntryTransformArray, EntryTransform) == 0x000000, "Member 'BP_SplineMeshTrailComponent_C_EntryTransformArray::EntryTransform' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_EntryTransformArray, K2Node_MakeArray_Array) == 0x000060, "Member 'BP_SplineMeshTrailComponent_C_EntryTransformArray::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_EntryTransformArray, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_SplineMeshTrailComponent_C_EntryTransformArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_EntryTransformArray, CallFunc_Greater_IntInt_ReturnValue) == 0x000074, "Member 'BP_SplineMeshTrailComponent_C_EntryTransformArray::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SplineMeshTrailComponent.BP_SplineMeshTrailComponent_C.ExecuteUbergraph_BP_SplineMeshTrailComponent
// 0x0020 (0x0020 - 0x0000)
struct BP_SplineMeshTrailComponent_C_ExecuteUbergraph_BP_SplineMeshTrailComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bHiddenInGame)>           K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateTrail_DeltaSeconds_ImplicitCast;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMeshTrailComponent_C_ExecuteUbergraph_BP_SplineMeshTrailComponent) == 0x000008, "Wrong alignment on BP_SplineMeshTrailComponent_C_ExecuteUbergraph_BP_SplineMeshTrailComponent");
static_assert(sizeof(BP_SplineMeshTrailComponent_C_ExecuteUbergraph_BP_SplineMeshTrailComponent) == 0x000020, "Wrong size on BP_SplineMeshTrailComponent_C_ExecuteUbergraph_BP_SplineMeshTrailComponent");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_ExecuteUbergraph_BP_SplineMeshTrailComponent, EntryPoint) == 0x000000, "Member 'BP_SplineMeshTrailComponent_C_ExecuteUbergraph_BP_SplineMeshTrailComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_ExecuteUbergraph_BP_SplineMeshTrailComponent, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_SplineMeshTrailComponent_C_ExecuteUbergraph_BP_SplineMeshTrailComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_ExecuteUbergraph_BP_SplineMeshTrailComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_SplineMeshTrailComponent_C_ExecuteUbergraph_BP_SplineMeshTrailComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_ExecuteUbergraph_BP_SplineMeshTrailComponent, CallFunc_UpdateTrail_DeltaSeconds_ImplicitCast) == 0x000018, "Member 'BP_SplineMeshTrailComponent_C_ExecuteUbergraph_BP_SplineMeshTrailComponent::CallFunc_UpdateTrail_DeltaSeconds_ImplicitCast' has a wrong offset!");

// Function BP_SplineMeshTrailComponent.BP_SplineMeshTrailComponent_C.GetDelayCurrentPos
// 0x00D0 (0x00D0 - 0x0000)
struct BP_SplineMeshTrailComponent_C_GetDelayCurrentPos final
{
public:
	struct FTransform                             OutTransform;                                      // 0x0000(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketPos_OutTransform;                // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMeshTrailComponent_C_GetDelayCurrentPos) == 0x000010, "Wrong alignment on BP_SplineMeshTrailComponent_C_GetDelayCurrentPos");
static_assert(sizeof(BP_SplineMeshTrailComponent_C_GetDelayCurrentPos) == 0x0000D0, "Wrong size on BP_SplineMeshTrailComponent_C_GetDelayCurrentPos");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_GetDelayCurrentPos, OutTransform) == 0x000000, "Member 'BP_SplineMeshTrailComponent_C_GetDelayCurrentPos::OutTransform' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_GetDelayCurrentPos, CallFunc_GetSocketPos_OutTransform) == 0x000060, "Member 'BP_SplineMeshTrailComponent_C_GetDelayCurrentPos::CallFunc_GetSocketPos_OutTransform' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_GetDelayCurrentPos, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'BP_SplineMeshTrailComponent_C_GetDelayCurrentPos::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_GetDelayCurrentPos, CallFunc_Less_IntInt_ReturnValue) == 0x0000C4, "Member 'BP_SplineMeshTrailComponent_C_GetDelayCurrentPos::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SplineMeshTrailComponent.BP_SplineMeshTrailComponent_C.GetDelayPrevPos
// 0x00D0 (0x00D0 - 0x0000)
struct BP_SplineMeshTrailComponent_C_GetDelayPrevPos final
{
public:
	struct FTransform                             OutTransform;                                      // 0x0000(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketPos_OutTransform;                // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMeshTrailComponent_C_GetDelayPrevPos) == 0x000010, "Wrong alignment on BP_SplineMeshTrailComponent_C_GetDelayPrevPos");
static_assert(sizeof(BP_SplineMeshTrailComponent_C_GetDelayPrevPos) == 0x0000D0, "Wrong size on BP_SplineMeshTrailComponent_C_GetDelayPrevPos");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_GetDelayPrevPos, OutTransform) == 0x000000, "Member 'BP_SplineMeshTrailComponent_C_GetDelayPrevPos::OutTransform' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_GetDelayPrevPos, CallFunc_GetSocketPos_OutTransform) == 0x000060, "Member 'BP_SplineMeshTrailComponent_C_GetDelayPrevPos::CallFunc_GetSocketPos_OutTransform' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_GetDelayPrevPos, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'BP_SplineMeshTrailComponent_C_GetDelayPrevPos::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_GetDelayPrevPos, CallFunc_Less_IntInt_ReturnValue) == 0x0000C4, "Member 'BP_SplineMeshTrailComponent_C_GetDelayPrevPos::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_GetDelayPrevPos, CallFunc_Array_LastIndex_ReturnValue) == 0x0000C8, "Member 'BP_SplineMeshTrailComponent_C_GetDelayPrevPos::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");

// Function BP_SplineMeshTrailComponent.BP_SplineMeshTrailComponent_C.GetDirection
// 0x0078 (0x0078 - 0x0000)
struct BP_SplineMeshTrailComponent_C_GetDirection final
{
public:
	struct FVector                                EndPos;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartPos;                                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OutDirection;                                      // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMeshTrailComponent_C_GetDirection) == 0x000008, "Wrong alignment on BP_SplineMeshTrailComponent_C_GetDirection");
static_assert(sizeof(BP_SplineMeshTrailComponent_C_GetDirection) == 0x000078, "Wrong size on BP_SplineMeshTrailComponent_C_GetDirection");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_GetDirection, EndPos) == 0x000000, "Member 'BP_SplineMeshTrailComponent_C_GetDirection::EndPos' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_GetDirection, StartPos) == 0x000018, "Member 'BP_SplineMeshTrailComponent_C_GetDirection::StartPos' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_GetDirection, OutDirection) == 0x000030, "Member 'BP_SplineMeshTrailComponent_C_GetDirection::OutDirection' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_GetDirection, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000048, "Member 'BP_SplineMeshTrailComponent_C_GetDirection::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_GetDirection, CallFunc_Normal_ReturnValue) == 0x000060, "Member 'BP_SplineMeshTrailComponent_C_GetDirection::CallFunc_Normal_ReturnValue' has a wrong offset!");

// Function BP_SplineMeshTrailComponent.BP_SplineMeshTrailComponent_C.GetSocketPos
// 0x0330 (0x0330 - 0x0000)
struct BP_SplineMeshTrailComponent_C_GetSocketPos final
{
public:
	struct FTransform                             OutTransform;                                      // 0x0000(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00E0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_148[0x8];                                      // 0x0148(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_InvertTransform_ReturnValue;              // 0x0150(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterSocketTransform_Exist;        // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0xF];                                      // 0x01B1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetCharacterSocketTransform_ReturnValue;  // 0x01C0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_268[0x8];                                      // 0x0268(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x0270(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x02D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMeshTrailComponent_C_GetSocketPos) == 0x000010, "Wrong alignment on BP_SplineMeshTrailComponent_C_GetSocketPos");
static_assert(sizeof(BP_SplineMeshTrailComponent_C_GetSocketPos) == 0x000330, "Wrong size on BP_SplineMeshTrailComponent_C_GetSocketPos");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_GetSocketPos, OutTransform) == 0x000000, "Member 'BP_SplineMeshTrailComponent_C_GetSocketPos::OutTransform' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_GetSocketPos, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'BP_SplineMeshTrailComponent_C_GetSocketPos::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_GetSocketPos, CallFunc_GetOwner_ReturnValue) == 0x0000C0, "Member 'BP_SplineMeshTrailComponent_C_GetSocketPos::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_GetSocketPos, K2Node_DynamicCast_AsCharacter) == 0x0000C8, "Member 'BP_SplineMeshTrailComponent_C_GetSocketPos::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_GetSocketPos, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'BP_SplineMeshTrailComponent_C_GetSocketPos::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_GetSocketPos, CallFunc_GetOwner_ReturnValue_1) == 0x0000D8, "Member 'BP_SplineMeshTrailComponent_C_GetSocketPos::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_GetSocketPos, CallFunc_GetTransform_ReturnValue) == 0x0000E0, "Member 'BP_SplineMeshTrailComponent_C_GetSocketPos::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_GetSocketPos, CallFunc_Conv_StringToName_ReturnValue) == 0x000140, "Member 'BP_SplineMeshTrailComponent_C_GetSocketPos::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_GetSocketPos, CallFunc_InvertTransform_ReturnValue) == 0x000150, "Member 'BP_SplineMeshTrailComponent_C_GetSocketPos::CallFunc_InvertTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_GetSocketPos, CallFunc_GetCharacterSocketTransform_Exist) == 0x0001B0, "Member 'BP_SplineMeshTrailComponent_C_GetSocketPos::CallFunc_GetCharacterSocketTransform_Exist' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_GetSocketPos, CallFunc_GetCharacterSocketTransform_ReturnValue) == 0x0001C0, "Member 'BP_SplineMeshTrailComponent_C_GetSocketPos::CallFunc_GetCharacterSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_GetSocketPos, CallFunc_BreakTransform_Location) == 0x000220, "Member 'BP_SplineMeshTrailComponent_C_GetSocketPos::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_GetSocketPos, CallFunc_BreakTransform_Rotation) == 0x000238, "Member 'BP_SplineMeshTrailComponent_C_GetSocketPos::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_GetSocketPos, CallFunc_BreakTransform_Scale) == 0x000250, "Member 'BP_SplineMeshTrailComponent_C_GetSocketPos::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_GetSocketPos, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x000270, "Member 'BP_SplineMeshTrailComponent_C_GetSocketPos::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_GetSocketPos, CallFunc_ComposeTransforms_ReturnValue) == 0x0002D0, "Member 'BP_SplineMeshTrailComponent_C_GetSocketPos::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");

// Function BP_SplineMeshTrailComponent.BP_SplineMeshTrailComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_SplineMeshTrailComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMeshTrailComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_SplineMeshTrailComponent_C_ReceiveTick");
static_assert(sizeof(BP_SplineMeshTrailComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_SplineMeshTrailComponent_C_ReceiveTick");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_SplineMeshTrailComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_SplineMeshTrailComponent.BP_SplineMeshTrailComponent_C.SafeFloatDivide
// 0x0028 (0x0028 - 0x0000)
struct BP_SplineMeshTrailComponent_C_SafeFloatDivide final
{
public:
	double                                        InLHS;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InRHS;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OutResult;                                         // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMeshTrailComponent_C_SafeFloatDivide) == 0x000008, "Wrong alignment on BP_SplineMeshTrailComponent_C_SafeFloatDivide");
static_assert(sizeof(BP_SplineMeshTrailComponent_C_SafeFloatDivide) == 0x000028, "Wrong size on BP_SplineMeshTrailComponent_C_SafeFloatDivide");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_SafeFloatDivide, InLHS) == 0x000000, "Member 'BP_SplineMeshTrailComponent_C_SafeFloatDivide::InLHS' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_SafeFloatDivide, InRHS) == 0x000008, "Member 'BP_SplineMeshTrailComponent_C_SafeFloatDivide::InRHS' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_SafeFloatDivide, OutResult) == 0x000010, "Member 'BP_SplineMeshTrailComponent_C_SafeFloatDivide::OutResult' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_SafeFloatDivide, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_SplineMeshTrailComponent_C_SafeFloatDivide::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_SafeFloatDivide, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_SplineMeshTrailComponent_C_SafeFloatDivide::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_SplineMeshTrailComponent.BP_SplineMeshTrailComponent_C.UpdateDelayPosArray
// 0x0280 (0x0280 - 0x0000)
struct BP_SplineMeshTrailComponent_C_UpdateDelayPosArray final
{
public:
	struct FTransform                             NewDelayPos;                                       // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaSecounds;                                     // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EntryTransformCount;                               // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TmpDeltaSeconds;                                   // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TmpDeltaSecondsRateBaseFPS;                        // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             TmpPrevTransform;                                  // 0x0080(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGlobalTimeDilation_ReturnValue;        // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGlobalTimeDilation_ReturnValue_1;      // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeFloatDivide_OutResult;                // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_TLerp_ReturnValue;                        // 0x0140(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0xF];                                      // 0x01B1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetDelayPrevPos_OutTransform;             // 0x01C0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeFloatDivide_OutResult_1;              // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeFloatDivide_InLHS_ImplicitCast;       // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TLerp_Alpha_ImplicitCast;                 // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_A_ImplicitCast_1;             // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray) == 0x000010, "Wrong alignment on BP_SplineMeshTrailComponent_C_UpdateDelayPosArray");
static_assert(sizeof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray) == 0x000280, "Wrong size on BP_SplineMeshTrailComponent_C_UpdateDelayPosArray");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, NewDelayPos) == 0x000000, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::NewDelayPos' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, DeltaSecounds) == 0x000060, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::DeltaSecounds' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, EntryTransformCount) == 0x000068, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::EntryTransformCount' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, TmpDeltaSeconds) == 0x000070, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::TmpDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, TmpDeltaSecondsRateBaseFPS) == 0x000078, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::TmpDeltaSecondsRateBaseFPS' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, TmpPrevTransform) == 0x000080, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::TmpPrevTransform' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, CallFunc_GetGlobalTimeDilation_ReturnValue) == 0x0000E8, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::CallFunc_GetGlobalTimeDilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000F0, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000F8, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0000FC, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, CallFunc_GetGlobalTimeDilation_ReturnValue_1) == 0x000100, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::CallFunc_GetGlobalTimeDilation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, CallFunc_SelectFloat_ReturnValue) == 0x000108, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000110, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, Temp_int_Variable) == 0x000118, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000120, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000128, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000130, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, CallFunc_SafeFloatDivide_OutResult) == 0x000138, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::CallFunc_SafeFloatDivide_OutResult' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, CallFunc_TLerp_ReturnValue) == 0x000140, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::CallFunc_TLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001A0, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, CallFunc_Add_IntInt_ReturnValue) == 0x0001A4, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, CallFunc_GetOwner_ReturnValue) == 0x0001A8, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, CallFunc_IsValid_ReturnValue) == 0x0001B0, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, CallFunc_GetDelayPrevPos_OutTransform) == 0x0001C0, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::CallFunc_GetDelayPrevPos_OutTransform' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, CallFunc_SelectFloat_ReturnValue_1) == 0x000220, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000228, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, CallFunc_SafeFloatDivide_OutResult_1) == 0x000230, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::CallFunc_SafeFloatDivide_OutResult_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000238, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000240, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, CallFunc_FFloor_ReturnValue) == 0x000248, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000250, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000258, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, CallFunc_SelectFloat_A_ImplicitCast) == 0x000260, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, CallFunc_SafeFloatDivide_InLHS_ImplicitCast) == 0x000268, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::CallFunc_SafeFloatDivide_InLHS_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, CallFunc_TLerp_Alpha_ImplicitCast) == 0x000270, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::CallFunc_TLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateDelayPosArray, CallFunc_SelectFloat_A_ImplicitCast_1) == 0x000278, "Member 'BP_SplineMeshTrailComponent_C_UpdateDelayPosArray::CallFunc_SelectFloat_A_ImplicitCast_1' has a wrong offset!");

// Function BP_SplineMeshTrailComponent.BP_SplineMeshTrailComponent_C.UpdateTrail
// 0x04C0 (0x04C0 - 0x0000)
struct BP_SplineMeshTrailComponent_C_UpdateTrail final
{
public:
	double                                        DeltaSeconds;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NowCount;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetDelayPrevPos_OutTransform;             // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketPos_OutTransform;                // 0x00D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue_1;         // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetStartPosition_ReturnValue;             // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetEndPosition_ReturnValue;               // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirection_OutDirection;                // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23D[0x3];                                      // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetDelayCurrentPos_OutTransform;          // 0x0240(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x02D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x0308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x0320(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0338(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0350(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x0368(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x0380(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x03B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x03C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x03E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x03F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0410(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0428(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_1;                      // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0440(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0458(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0470(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x0488(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue_1;      // 0x04A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_FloatToVector_InFloat_ImplicitCast;  // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_FloatToVector_InFloat_ImplicitCast_1; // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMeshTrailComponent_C_UpdateTrail) == 0x000010, "Wrong alignment on BP_SplineMeshTrailComponent_C_UpdateTrail");
static_assert(sizeof(BP_SplineMeshTrailComponent_C_UpdateTrail) == 0x0004C0, "Wrong size on BP_SplineMeshTrailComponent_C_UpdateTrail");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, DeltaSeconds) == 0x000000, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, NowCount) == 0x000008, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::NowCount' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_GetDelayPrevPos_OutTransform) == 0x000010, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_GetDelayPrevPos_OutTransform' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_GetOwner_ReturnValue) == 0x000070, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_BreakTransform_Location) == 0x000078, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_BreakTransform_Rotation) == 0x000090, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_BreakTransform_Scale) == 0x0000A8, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_GetComponentByClass_ReturnValue) == 0x0000C0, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_IsValid_ReturnValue) == 0x0000C8, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_GetSocketPos_OutTransform) == 0x0000D0, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_GetSocketPos_OutTransform' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000130, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_Conv_FloatToVector_ReturnValue_1) == 0x000148, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_Conv_FloatToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_BreakTransform_Location_1) == 0x000160, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_BreakTransform_Rotation_1) == 0x000178, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_BreakTransform_Scale_1) == 0x000190, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, Temp_int_Loop_Counter_Variable) == 0x0001A8, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_GetStartPosition_ReturnValue) == 0x0001B0, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_GetStartPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_Add_IntInt_ReturnValue) == 0x0001C8, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_GetEndPosition_ReturnValue) == 0x0001D0, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_GetEndPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_GetDirection_OutDirection) == 0x0001E8, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_GetDirection_OutDirection' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000200, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_VSize_ReturnValue) == 0x000218, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000220, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_Array_Length_ReturnValue) == 0x000238, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_Less_IntInt_ReturnValue) == 0x00023C, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_GetDelayCurrentPos_OutTransform) == 0x000240, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_GetDelayCurrentPos_OutTransform' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_BreakTransform_Location_2) == 0x0002A0, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_BreakTransform_Rotation_2) == 0x0002B8, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_BreakTransform_Scale_2) == 0x0002D0, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, Temp_int_Array_Index_Variable) == 0x0002E8, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_BreakTransform_Location_3) == 0x0002F0, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_BreakTransform_Rotation_3) == 0x000308, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_BreakTransform_Scale_3) == 0x000320, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_GetForwardVector_ReturnValue) == 0x000338, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000350, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_BreakTransform_Location_4) == 0x000368, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_BreakTransform_Rotation_4) == 0x000380, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_BreakTransform_Scale_4) == 0x000398, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_GetForwardVector_ReturnValue_1) == 0x0003B0, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_MakeVector_ReturnValue) == 0x0003C8, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0003E0, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x0003F8, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000410, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000428, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_VSize_ReturnValue_1) == 0x000438, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000440, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000458, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_MakeVector_ReturnValue_1) == 0x000470, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x000488, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_Conv_VectorToVector2D_ReturnValue_1) == 0x0004A0, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_Conv_VectorToVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_Conv_FloatToVector_InFloat_ImplicitCast) == 0x0004B0, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_Conv_FloatToVector_InFloat_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMeshTrailComponent_C_UpdateTrail, CallFunc_Conv_FloatToVector_InFloat_ImplicitCast_1) == 0x0004B4, "Member 'BP_SplineMeshTrailComponent_C_UpdateTrail::CallFunc_Conv_FloatToVector_InFloat_ImplicitCast_1' has a wrong offset!");

}

