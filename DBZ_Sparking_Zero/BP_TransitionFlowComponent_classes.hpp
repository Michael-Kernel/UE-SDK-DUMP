#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TransitionFlowComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SS_structs.hpp"
#include "BP_TransitionFlowBaseComponent_classes.hpp"
#include "EBattleKey_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TransitionFlowComponent.BP_TransitionFlowComponent_C
// 0x1210 (0x15A8 - 0x0398)
class UBP_TransitionFlowComponent_C final : public UBP_TransitionFlowBaseComponent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_TransitionFlowComponent_C;       // 0x0398(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        DeltaSeconds;                                      // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsConditionNotMet;                                 // 0x03A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9[0x3];                                      // 0x03A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratActionDataList                   OutActionDataList;                                 // 0x03AC(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FKoratActionDataList                   TransitionRushHightSpeedMoveAction;                // 0x03B4(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC[0x4];                                      // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FKoratActionDataList>           EndActionList;                                     // 0x03C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         IsPrecededConditionMet;                            // 0x03D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ConditionIndex;                                    // 0x03D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SetPrecededConditionMet;                           // 0x03D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratCharacterSubActionStateAnimInstance* KoratCharacterSubActionStateAnimInstance_0;        // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	EKoratBattleKey                               Input;                                             // 0x03E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9[0x3];                                      // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratReplaceAnimationDataList         W_Y______;                                         // 0x03EC(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         ____p;                                             // 0x03F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ________BP_TransitionFlowComponent_C;              // 0x03F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         __M_______;                                        // 0x03FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratDamageReactionDataList           __n__;                                             // 0x0400(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FKoratDamageReactionDataList           _______BP_TransitionFlowComponent_C;               // 0x0408(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	EKoratActionCategoryType                      _n_____n____;                                      // 0x0410(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UltimateBlastBranch;                               // 0x0411(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_412[0x2];                                      // 0x0412(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratReplaceAnimationDataList         NextAnimDataList;                                  // 0x0414(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FKoratReplaceAnimationDataList         RequestAnimData;                                   // 0x041C(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_424[0x4];                                      // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        _R_Q_LNB_;                                         // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	int32                                         ________n________;                                 // 0x0430(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ________n____;                                     // 0x0434(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ________n_Qp;                                      // 0x0438(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         __oXM___;                                          // 0x043C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratHitBackMovementData              __________Qt_____;                                 // 0x0440(0x02E0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FKoratHitBackMovementData              __________Qt_b___;                                 // 0x0720(0x02E0)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ASSLevelSequenceActor*                  ________Minusn___________;                         // 0x0A00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        _______n____B_;                                    // 0x0A08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SparkingComboEmoteIndex;                           // 0x0A10(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESSBlastDemoBranchType                        ________BP_TransitionFlowComponent_C_0;            // 0x0A14(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _40111_____________HT____;                         // 0x0A15(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A16[0x2];                                      // 0x0A16(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ____p_0;                                           // 0x0A18(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1C[0x4];                                      // 0x0A1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        _R_Qn6_B_______;                                   // 0x0A20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ____________p;                                     // 0x0A28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ______________n__p;                                // 0x0A2C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ____________p_0;                                   // 0x0A30(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __2______;                                         // 0x0A34(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStartBodyChange;                                 // 0x0A35(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A36[0x2];                                      // 0x0A36(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratReceivedDamageParameter          DamageParameter;                                   // 0x0A38(0x0AC0)(Edit, BlueprintVisible, DisableEditOnInstance)
	EKoratMapChangeType                           MapChangeType;                                     // 0x14F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14F9[0x3];                                     // 0x14F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratActionDataList                   MapChangeAction;                                   // 0x14FC(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTeleportationCounterWait;                        // 0x1504(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratMapChangeStartTiming                    MapChangeStartTiming;                              // 0x1505(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ______e_;                                          // 0x1506(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1507[0x1];                                     // 0x1507(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         __n________p;                                      // 0x1508(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _Mk_W__________L__c_K;                             // 0x150C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _____________;                                     // 0x150D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_150E[0x2];                                     // 0x150E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ________________;                                  // 0x1510(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1514[0x4];                                     // 0x1514(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ___________B_;                                     // 0x1518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCompletedBodyChange;                             // 0x1520(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1521[0x3];                                     // 0x1521(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratActionDataList                   W__B_____;                                         // 0x1524(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                   M_n_______;                                        // 0x152C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ______W____;                                       // 0x1534(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BreakLD;                                           // 0x1538(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1539[0x3];                                     // 0x1539(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BreakLDDelayCount;                                 // 0x153C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ____Bn_____B_;                                     // 0x1540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        _R_Qn6_B_______z_M_;                               // 0x1548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _R_Q__;                                            // 0x1550(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          _R_____z_M;                                        // 0x1551(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          Debug_R_Q______;                                   // 0x1552(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1553[0x1];                                     // 0x1553(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   __________nw______;                                // 0x1554(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         __________n_______;                                // 0x155C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ______________0;                                   // 0x1560(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _____M_______K;                                    // 0x1561(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __________BP_TransitionFlowComponent_C;            // 0x1562(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1563[0x1];                                     // 0x1563(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratActionDataList                   ______B_____;                                      // 0x1564(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_156C[0x4];                                     // 0x156C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ____w___B_;                                        // 0x1570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratActionDataList                   __________BP_TransitionFlowComponent_C_0;          // 0x1578(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         ____oXM__e__p;                                     // 0x1580(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1584[0x4];                                     // 0x1584(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        _Rw___B_;                                          // 0x1588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBlastDashActionTarget;                           // 0x1590(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1591[0x3];                                     // 0x1591(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SelfishnessActionIndex;                            // 0x1594(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelfishnessLeftLastIndex;                          // 0x1598(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelfishnessRightLastIndex;                         // 0x159C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LDSectionPlayed;                                   // 0x15A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsVanishingAssaultPadKey;                          // 0x15A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TurnBlastHTSection;                                // 0x15A2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	struct FKoratDamageReactionDataList DecideDamageReactionByActionCategory(const struct FKoratDamageReactionDataList& InKoratDamageReactionDataList);
	void DestroyAsyncTransitionEndAction();
	void ExecuteUbergraph_BP_TransitionFlowComponent(int32 EntryPoint);
	void GetAnimDataArrayIndex(const struct FKoratReplaceAnimationDataList& InSearchAnimData, TArray<struct FKoratReplaceAnimationDataList>& InAnimDataArray, int32* Index_0);
	void GetMontageComponent_0(class UBP_CharacterMontageComponent_C** MontageComponent);
	void Is_Auto_Guard_on_Battle_Assist(bool* bExec);
	void IsStepInput(bool InPush, bool* Input_0);
	void Locomotion();
	void MapLoadEnd();
	void NotifyTransitionFlowAerialRush();
	void NotifyTransitionFlowAscertain();
	void NotifyTransitionFlowAttackOfDragonDashCounter();
	void NotifyTransitionFlowBaseReaction();
	void NotifyTransitionFlowBlast(const struct FKoratReplaceAnimationDataList& RequestAnimData_0);
	void NotifyTransitionFlowBlown();
	void NotifyTransitionFlowBlownBrakeOfDragonDashCounter();
	void NotifyTransitionFlowCannon();
	void NotifyTransitionFlowCannonAttack1();
	void NotifyTransitionFlowCannonAttack2();
	void NotifyTransitionFlowCannonAttack3();
	void NotifyTransitionFlowCannonSmash();
	void NotifyTransitionFlowCharge();
	void NotifyTransitionFlowDashBlow();
	void NotifyTransitionFlowDashOfDragonDashCounter();
	void NotifyTransitionFlowDashRising();
	void NotifyTransitionFlowDemo();
	void NotifyTransitionFlowDragonDash();
	void NotifyTransitionFlowDragonHoming();
	void NotifyTransitionFlowFastAvoidance();
	void NotifyTransitionFlowGrandSlash();
	void NotifyTransitionFlowGuard();
	void NotifyTransitionFlowGuardClear();
	void NotifyTransitionFlowHeavyCrush1();
	void NotifyTransitionFlowHeavyCrush2();
	void NotifyTransitionFlowHeavyCrush3();
	void NotifyTransitionFlowHeavyFinish();
	void NotifyTransitionFlowIdle();
	void NotifyTransitionFlowKidan();
	void NotifyTransitionFlowLiftStrike();
	void NotifyTransitionFlowLocomotion();
	void NotifyTransitionFlowMidAirKick();
	void NotifyTransitionFlowNoContinuation();
	void NotifyTransitionFlowParry();
	void NotifyTransitionFlowParrySmash();
	void NotifyTransitionFlowPlayAction(const struct FKoratActionDataList& InAction);
	void NotifyTransitionFlowRevengeCounter(const struct FKoratReplaceAnimationDataList& InReplaceAnim);
	void NotifyTransitionFlowRollingHammer(bool IsPreviousUseLeft);
	void NotifyTransitionFlowRollingHurricane1(bool IsLeft);
	void NotifyTransitionFlowRollingHurricane2();
	void NotifyTransitionFlowRollingPress1();
	void NotifyTransitionFlowRollingPress2();
	void NotifyTransitionFlowRush(int32 RushType);
	void NotifyTransitionFlowShortDash();
	void NotifyTransitionFlowStepAvoidance();
	void NotifyTransitionFlowStepIn();
	void NotifyTransitionFlowSuperZCounterCatch();
	void NotifyTransitionFlowSuperZCounterPosture();
	void NotifyTransitionFlowSuperZCounterShakeOff();
	void NotifyTransitionFlowSuperZCounterSmash();
	void NotifyTransitionFlowTeleportationCounter();
	void NotifyTransitionFlowThrow();
	void NotifyTransitionFlowUltimateBlast();
	void NotifyTransitionFlowVanishingAssault();
	void NotifyTransitionFlowVanishingAttack(const struct FKoratReplaceAnimationDataList& InReplaceAnim);
	void NotifyTransitionFlowWaitMontageEnd();
	void NotifyTransitionFlowZCounter();
	void OnEndMapChange();
	void OnStartMapChange(EKoratMapChangeType InMapChangeType, EKoratMapChangeStartTiming InStartTiming);
	void OnTransitAction(const struct FKoratActionDataList& InAction);
	void OnTransitActionByAnimationBlueprint(const struct FKoratActionDataList& InAction);
	void OnTransitActionByLocomotion(const struct FKoratActionDataList& InAction);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds_0);
	void ReflectTransitActionByAnimationBlueprint(const struct FKoratActionDataList& InAction);
	void ReflectTransitActionByLocomotion(const struct FKoratActionDataList& InAction);
	void RequestTransitAction(const struct FKoratActionDataList& InRequestAction);
	void ResetParamTransitAction();
	void SetSnapTransform(class ASSCharacter* InSSCharacter, const struct FTransform& InTransform);
	void SetTargetAction(const struct FKoratReplaceAnimationDataList& InAnimDataList);
	void Sparking_____();
	void Sparking_____________();
	void Sparking__________();
	void Sparking___w_();
	void SPM2SBM();
	void SPM2SBM_2(EKoratBlastSlotType InSlotType);
	double TransitAction(const struct FKoratActionDataList& InAction);
	void TransitionAscertain_036B4C3D414F43A0ED8ECE9F5956060A();
	void TransitionAscertain_254B687548ED1A43B215459291C501AA();
	void TransitionAscertain_262CFF494614790EA4CA02828D3FDB8C();
	void TransitionAscertain_2DABD95042A1D583F27D9ABDBE72B10D();
	void TransitionAscertain_6A3228CD4397FEAEA8BA5EBE9D1350E8();
	void TransitionAscertain_7C677CA741A713250201AE9DDAE4C963();
	void TransitionAscertain_A9A7A9494AC8272C3D4612804B824C99();
	void TransitionAscertain_B82141CF4550D5779F427D8F879AB4BB();
	void TransitionAscertain_CA3E0D1C4F1D0D67B18A858E072570B4();
	void TransitionAscertain_E148BC314BDB6B5EB55049B09BF4F234();
	void TransitionAscertain_FFCE47D24BBFF93CD9B8FE9D66A2181C();
	void TransitionBlast_B0EB4F39407C5C0D6888C494C00D2709();
	void TransitionBurstSmash_79B5EE4542D9F939C8B5C48FE58AC647();
	void TransitionBurstSmashDown_79B5EE4542D9F939C8B5C48FE58AC647();
	void TransitionBurstSmashLeft_79B5EE4542D9F939C8B5C48FE58AC647();
	void TransitionBurstSmashRight_79B5EE4542D9F939C8B5C48FE58AC647();
	void TransitionBurstSmashUp_79B5EE4542D9F939C8B5C48FE58AC647();
	void TransitionCatch_CBCC57694C1B36202F8BE88662BB9DD8(const struct FKoratReplaceAnimationDataList& OutAnimDataList);
	void TransitionDashAttack_5FE2682B4EC156B63CF1D8876153BA1D();
	void TransitionDashBlow_2AB11A7941A895F93D4343AB3488B382();
	void TransitionDashDragon_B0EB4F39407C5C0D6888C494C00D2709();
	void TransitionDashRising_2AB11A7941A895F93D4343AB3488B382();
	void TransitionDragonDashAttack_9F6A90CA4282CD9B3E105F98DC36DBE2();
	void TransitionDragonDashAttackDown_9F6A90CA4282CD9B3E105F98DC36DBE2();
	void TransitionDragonDashAttackLeft_9F6A90CA4282CD9B3E105F98DC36DBE2();
	void TransitionDragonDashAttackRight_9F6A90CA4282CD9B3E105F98DC36DBE2();
	void TransitionDragonDashAttackUp_9F6A90CA4282CD9B3E105F98DC36DBE2();
	void TransitionDragonSmash_79B5EE4542D9F939C8B5C48FE58AC647();
	void TransitionDragonSmashDown_79B5EE4542D9F939C8B5C48FE58AC647();
	void TransitionDragonSmashLeft_79B5EE4542D9F939C8B5C48FE58AC647();
	void TransitionDragonSmashRight_79B5EE4542D9F939C8B5C48FE58AC647();
	void TransitionDragonSmashUp_79B5EE4542D9F939C8B5C48FE58AC647();
	void TransitionEnd_3CC26A4F45171230A00C6A9C274FEDD9();
	void TransitionEnd_E1E814A54A0E3FFEDB2EEF945EC120F9();
	void TransitionEnergyBulletRepel_254B687548ED1A43B215459291C501AA();
	void TransitionFastAvoidance_254B687548ED1A43B215459291C501AA();
	void TransitionGrandSlash_036B4C3D414F43A0ED8ECE9F5956060A();
	void TransitionGrandSlash_262CFF494614790EA4CA02828D3FDB8C();
	void TransitionGrandSlash_2DABD95042A1D583F27D9ABDBE72B10D();
	void TransitionGrandSlash_6A3228CD4397FEAEA8BA5EBE9D1350E8();
	void TransitionGrandSlash_7C677CA741A713250201AE9DDAE4C963();
	void TransitionGrandSlash_A9A7A9494AC8272C3D4612804B824C99();
	void TransitionGrandSlash_B82141CF4550D5779F427D8F879AB4BB();
	void TransitionGrandSlash_CA3E0D1C4F1D0D67B18A858E072570B4();
	void TransitionGrandSlash_E148BC314BDB6B5EB55049B09BF4F234();
	void TransitionGrandSlash_FFCE47D24BBFF93CD9B8FE9D66A2181C();
	void TransitionGuard_6988BB3344CF3DF7A9E3D7AC2DF2AC63();
	void TransitionJudgment_2424346F4E207EB2164A7A99A5BBB584();
	void TransitionJudgment_327E99CA4032AEF31702FB9A56173124();
	void TransitionJudgment_3946C9BE4514B844250044A2C438F8ED();
	void TransitionJudgment_41BB8B8A4D96BEEFB710BDB11D45FE29();
	void TransitionJudgment_437832BA48323A8C06947C80B1A7B1DD();
	void TransitionJudgment_47EE785B45DC5E6F079C8FAD4D6BC753();
	void TransitionJudgment_4F84C17C492FD86A89ED29A5A8B8E230();
	void TransitionJudgment_57528EEE4A7B23B7B1E4489F740AD44C();
	void TransitionJudgment_5D83661E4A7AD225C584E79383EE99B2();
	void TransitionJudgment_5FEAD51346AB1EB4533D1090058B663A();
	void TransitionJudgment_71A9688E4ABBDA63CC0391A3D169BAB0();
	void TransitionJudgment_8046BE444342A9B03339EDA031E25583();
	void TransitionJudgment_A0A3EA224792B89FED3B9DBE43D23555();
	void TransitionJudgment_A0D32BD74BE2F2A8BFA321BCA8C0560C();
	void TransitionJudgment_A67342FC42C6AD84DE24CCB8A8FDDA0D();
	void TransitionJudgment_A8B22C444A0D11C9EA9018B73BBF155A();
	void TransitionJudgment_A8D4202B4D9A00D5F3EE5B86301E12BC();
	void TransitionJudgment_BE2E529947242703801A8090C5570B30();
	void TransitionJudgment_D98AEB064B9AA3EB0123B69CC9F39BEF();
	void TransitionJudgment_E9AE70BF4DA26C6CBC171C8C23CBD52C();
	void TransitionJudgment_ECAEFD3F4DC337140343AEB7DF80E81F();
	void TransitionLiftStrike_036B4C3D414F43A0ED8ECE9F5956060A();
	void TransitionLiftStrike_262CFF494614790EA4CA02828D3FDB8C();
	void TransitionLiftStrike_2DABD95042A1D583F27D9ABDBE72B10D();
	void TransitionLiftStrike_6A3228CD4397FEAEA8BA5EBE9D1350E8();
	void TransitionLiftStrike_7C677CA741A713250201AE9DDAE4C963();
	void TransitionLiftStrike_A9A7A9494AC8272C3D4612804B824C99();
	void TransitionLiftStrike_B82141CF4550D5779F427D8F879AB4BB();
	void TransitionLiftStrike_CA3E0D1C4F1D0D67B18A858E072570B4();
	void TransitionLiftStrike_E148BC314BDB6B5EB55049B09BF4F234();
	void TransitionLiftStrike_FFCE47D24BBFF93CD9B8FE9D66A2181C();
	void TransitionNone_01D718134DEC30973FF3808CF3B6DE7C();
	void TransitionNone_02BF986C4DA8F9CE0DCFAD84348D99CB();
	void TransitionNone_036B4C3D414F43A0ED8ECE9F5956060A(const struct FKoratReplaceAnimationDataList& OutAnimDataList);
	void TransitionNone_04D348C841DCE3D0F950179A7C65A51E();
	void TransitionNone_0F5119A048B79D8214092D8460AFEB2F();
	void TransitionNone_12E5A0FC4C1598A4759FF2B31C6C36CE();
	void TransitionNone_1A1203814297B739D4284989D45EDEFB();
	void TransitionNone_1CFA30FF4B42C4256AD1E48D166666CB();
	void TransitionNone_20968FC94BDA631754EE76907C648D74();
	void TransitionNone_23B6923441425CB7B4B00DA735109F17();
	void TransitionNone_254B687548ED1A43B215459291C501AA();
	void TransitionNone_262CFF494614790EA4CA02828D3FDB8C(const struct FKoratReplaceAnimationDataList& OutAnimDataList);
	void TransitionNone_2AB11A7941A895F93D4343AB3488B382();
	void TransitionNone_2DABD95042A1D583F27D9ABDBE72B10D(const struct FKoratReplaceAnimationDataList& OutAnimDataList);
	void TransitionNone_2E78450440086BFBFEE1CE8AAEB212F4();
	void TransitionNone_333FAF1B48CD20D132E53C8BA9BBA2E2();
	void TransitionNone_42F3D29645DFB64B0E78C78BDDA70BF0();
	void TransitionNone_43D19F5E4047C6794427FAA36432DFC0();
	void TransitionNone_48E10D1E437F71053B9AA686CBBFBE0C();
	void TransitionNone_495C4AF242B8B7682C886A9E047A6EBA();
	void TransitionNone_4C927E72447D866374CDB180EA4598BE();
	void TransitionNone_503FD95B4EA5CAC6BE89218EEAA4AAA8();
	void TransitionNone_558C133A48D45FF5464878BE624259BB();
	void TransitionNone_5BAEFF1C4D377494E63FE480D1F6B245();
	void TransitionNone_5C513274429C0984F52741988DC6EB56();
	void TransitionNone_5FE2682B4EC156B63CF1D8876153BA1D();
	void TransitionNone_60FD665940DDA18CB065239EC38AE090();
	void TransitionNone_6988BB3344CF3DF7A9E3D7AC2DF2AC63();
	void TransitionNone_6A3228CD4397FEAEA8BA5EBE9D1350E8(const struct FKoratReplaceAnimationDataList& OutAnimDataList);
	void TransitionNone_78A1880949C612704ACB33998B1F387A();
	void TransitionNone_79B5EE4542D9F939C8B5C48FE58AC647();
	void TransitionNone_79F5A9F149655F3BCED41386324D589A();
	void TransitionNone_7A0735F84F6E0715A2FE4E94B4F5224F();
	void TransitionNone_7C677CA741A713250201AE9DDAE4C963(const struct FKoratReplaceAnimationDataList& OutAnimDataList);
	void TransitionNone_837B0C9E4C3991FAC65CD4BA66FAB1BC();
	void TransitionNone_8D23B0B44BF021A380420D855502A9E2();
	void TransitionNone_922A34F444D9F9F2B02DE387DD30A0C5();
	void TransitionNone_9F6A90CA4282CD9B3E105F98DC36DBE2();
	void TransitionNone_A9A7A9494AC8272C3D4612804B824C99(const struct FKoratReplaceAnimationDataList& OutAnimDataList);
	void TransitionNone_B0EB4F39407C5C0D6888C494C00D2709();
	void TransitionNone_B47C7C0C45D6159A9255B899C2F3AB28();
	void TransitionNone_B82141CF4550D5779F427D8F879AB4BB(const struct FKoratReplaceAnimationDataList& OutAnimDataList);
	void TransitionNone_C46B6CA2445F54C259DAB5882478BD79();
	void TransitionNone_C996D71B4F9154C3E940DDA497AE596D();
	void TransitionNone_CA3E0D1C4F1D0D67B18A858E072570B4(const struct FKoratReplaceAnimationDataList& OutAnimDataList);
	void TransitionNone_CBCC57694C1B36202F8BE88662BB9DD8(const struct FKoratReplaceAnimationDataList& OutAnimDataList);
	void TransitionNone_D3E15A18479B45452774B68ECF576F30();
	void TransitionNone_D3F477D240EC7C269461A3ADB1251C98();
	void TransitionNone_D44E7B3F452C36A7F9243D90EB8F0D41();
	void TransitionNone_D5930F8E421065FD66DCF59D6248D5C0();
	void TransitionNone_DDF0855346460CCB278406899068F722();
	void TransitionNone_E0757846494D6F28BC70419067759CDA();
	void TransitionNone_E148BC314BDB6B5EB55049B09BF4F234(const struct FKoratReplaceAnimationDataList& OutAnimDataList);
	void TransitionNone_EB1D5ABE4C9B60566419E2B9492CA683();
	void TransitionNone_FF3C7EB54091ABEECA3567B0BB0BE4D5();
	void TransitionNone_FFCE47D24BBFF93CD9B8FE9D66A2181C(const struct FKoratReplaceAnimationDataList& OutAnimDataList);
	void TransitionReaction_01D718134DEC30973FF3808CF3B6DE7C();
	void TransitionReaction_02BF986C4DA8F9CE0DCFAD84348D99CB();
	void TransitionReaction_036B4C3D414F43A0ED8ECE9F5956060A();
	void TransitionReaction_04D348C841DCE3D0F950179A7C65A51E();
	void TransitionReaction_0F5119A048B79D8214092D8460AFEB2F();
	void TransitionReaction_12E5A0FC4C1598A4759FF2B31C6C36CE();
	void TransitionReaction_1A1203814297B739D4284989D45EDEFB();
	void TransitionReaction_1CFA30FF4B42C4256AD1E48D166666CB();
	void TransitionReaction_20968FC94BDA631754EE76907C648D74();
	void TransitionReaction_23B6923441425CB7B4B00DA735109F17();
	void TransitionReaction_254B687548ED1A43B215459291C501AA();
	void TransitionReaction_262CFF494614790EA4CA02828D3FDB8C();
	void TransitionReaction_2AB11A7941A895F93D4343AB3488B382();
	void TransitionReaction_2DABD95042A1D583F27D9ABDBE72B10D();
	void TransitionReaction_2E78450440086BFBFEE1CE8AAEB212F4();
	void TransitionReaction_333FAF1B48CD20D132E53C8BA9BBA2E2();
	void TransitionReaction_42F3D29645DFB64B0E78C78BDDA70BF0();
	void TransitionReaction_43D19F5E4047C6794427FAA36432DFC0();
	void TransitionReaction_48E10D1E437F71053B9AA686CBBFBE0C();
	void TransitionReaction_495C4AF242B8B7682C886A9E047A6EBA();
	void TransitionReaction_4C927E72447D866374CDB180EA4598BE();
	void TransitionReaction_503FD95B4EA5CAC6BE89218EEAA4AAA8();
	void TransitionReaction_558C133A48D45FF5464878BE624259BB();
	void TransitionReaction_5BAEFF1C4D377494E63FE480D1F6B245();
	void TransitionReaction_5C513274429C0984F52741988DC6EB56();
	void TransitionReaction_5FE2682B4EC156B63CF1D8876153BA1D();
	void TransitionReaction_60FD665940DDA18CB065239EC38AE090();
	void TransitionReaction_6988BB3344CF3DF7A9E3D7AC2DF2AC63();
	void TransitionReaction_6A3228CD4397FEAEA8BA5EBE9D1350E8();
	void TransitionReaction_78A1880949C612704ACB33998B1F387A();
	void TransitionReaction_79B5EE4542D9F939C8B5C48FE58AC647();
	void TransitionReaction_79F5A9F149655F3BCED41386324D589A();
	void TransitionReaction_7A0735F84F6E0715A2FE4E94B4F5224F();
	void TransitionReaction_7C677CA741A713250201AE9DDAE4C963();
	void TransitionReaction_837B0C9E4C3991FAC65CD4BA66FAB1BC();
	void TransitionReaction_8D23B0B44BF021A380420D855502A9E2();
	void TransitionReaction_922A34F444D9F9F2B02DE387DD30A0C5();
	void TransitionReaction_9F6A90CA4282CD9B3E105F98DC36DBE2();
	void TransitionReaction_A9A7A9494AC8272C3D4612804B824C99();
	void TransitionReaction_B0EB4F39407C5C0D6888C494C00D2709();
	void TransitionReaction_B47C7C0C45D6159A9255B899C2F3AB28();
	void TransitionReaction_B82141CF4550D5779F427D8F879AB4BB();
	void TransitionReaction_C46B6CA2445F54C259DAB5882478BD79();
	void TransitionReaction_C996D71B4F9154C3E940DDA497AE596D();
	void TransitionReaction_CA3E0D1C4F1D0D67B18A858E072570B4();
	void TransitionReaction_CBCC57694C1B36202F8BE88662BB9DD8();
	void TransitionReaction_D3E15A18479B45452774B68ECF576F30();
	void TransitionReaction_D3F477D240EC7C269461A3ADB1251C98();
	void TransitionReaction_D44E7B3F452C36A7F9243D90EB8F0D41();
	void TransitionReaction_D5930F8E421065FD66DCF59D6248D5C0();
	void TransitionReaction_DDF0855346460CCB278406899068F722();
	void TransitionReaction_E0757846494D6F28BC70419067759CDA();
	void TransitionReaction_E148BC314BDB6B5EB55049B09BF4F234();
	void TransitionReaction_EB1D5ABE4C9B60566419E2B9492CA683();
	void TransitionReaction_FF3C7EB54091ABEECA3567B0BB0BE4D5();
	void TransitionReaction_FFCE47D24BBFF93CD9B8FE9D66A2181C();
	void TransitionRevengeCounter_5BAEFF1C4D377494E63FE480D1F6B245();
	void TransitionRush_01D718134DEC30973FF3808CF3B6DE7C();
	void TransitionRush_036B4C3D414F43A0ED8ECE9F5956060A();
	void TransitionRush_04D348C841DCE3D0F950179A7C65A51E();
	void TransitionRush_12E5A0FC4C1598A4759FF2B31C6C36CE();
	void TransitionRush_1A1203814297B739D4284989D45EDEFB();
	void TransitionRush_1CFA30FF4B42C4256AD1E48D166666CB();
	void TransitionRush_20968FC94BDA631754EE76907C648D74();
	void TransitionRush_23B6923441425CB7B4B00DA735109F17();
	void TransitionRush_262CFF494614790EA4CA02828D3FDB8C();
	void TransitionRush_2AB11A7941A895F93D4343AB3488B382();
	void TransitionRush_2DABD95042A1D583F27D9ABDBE72B10D();
	void TransitionRush_2E78450440086BFBFEE1CE8AAEB212F4();
	void TransitionRush_333FAF1B48CD20D132E53C8BA9BBA2E2();
	void TransitionRush_43D19F5E4047C6794427FAA36432DFC0();
	void TransitionRush_4C927E72447D866374CDB180EA4598BE();
	void TransitionRush_558C133A48D45FF5464878BE624259BB();
	void TransitionRush_5C513274429C0984F52741988DC6EB56();
	void TransitionRush_60FD665940DDA18CB065239EC38AE090();
	void TransitionRush_6A3228CD4397FEAEA8BA5EBE9D1350E8();
	void TransitionRush_78A1880949C612704ACB33998B1F387A();
	void TransitionRush_79F5A9F149655F3BCED41386324D589A();
	void TransitionRush_7A0735F84F6E0715A2FE4E94B4F5224F();
	void TransitionRush_7C677CA741A713250201AE9DDAE4C963();
	void TransitionRush_837B0C9E4C3991FAC65CD4BA66FAB1BC();
	void TransitionRush_922A34F444D9F9F2B02DE387DD30A0C5();
	void TransitionRush_A9A7A9494AC8272C3D4612804B824C99();
	void TransitionRush_B47C7C0C45D6159A9255B899C2F3AB28();
	void TransitionRush_B82141CF4550D5779F427D8F879AB4BB();
	void TransitionRush_C46B6CA2445F54C259DAB5882478BD79();
	void TransitionRush_C996D71B4F9154C3E940DDA497AE596D();
	void TransitionRush_CA3E0D1C4F1D0D67B18A858E072570B4();
	void TransitionRush_D3F477D240EC7C269461A3ADB1251C98();
	void TransitionRush_D44E7B3F452C36A7F9243D90EB8F0D41();
	void TransitionRush_D5930F8E421065FD66DCF59D6248D5C0();
	void TransitionRush_DDF0855346460CCB278406899068F722();
	void TransitionRush_E148BC314BDB6B5EB55049B09BF4F234();
	void TransitionRush_FFCE47D24BBFF93CD9B8FE9D66A2181C();
	void TransitionRushDerivative_036B4C3D414F43A0ED8ECE9F5956060A();
	void TransitionRushDerivative_262CFF494614790EA4CA02828D3FDB8C();
	void TransitionRushDerivative_2DABD95042A1D583F27D9ABDBE72B10D();
	void TransitionRushDerivative_6A3228CD4397FEAEA8BA5EBE9D1350E8();
	void TransitionRushDerivative_7C677CA741A713250201AE9DDAE4C963();
	void TransitionRushDerivative_A9A7A9494AC8272C3D4612804B824C99();
	void TransitionRushDerivative_B82141CF4550D5779F427D8F879AB4BB();
	void TransitionRushDerivative_CA3E0D1C4F1D0D67B18A858E072570B4();
	void TransitionRushDerivative_E148BC314BDB6B5EB55049B09BF4F234();
	void TransitionRushDerivative_FFCE47D24BBFF93CD9B8FE9D66A2181C();
	void TransitionRushHighSpeedMove_036B4C3D414F43A0ED8ECE9F5956060A(const struct FKoratReplaceAnimationDataList& OutAnimDataList);
	void TransitionRushHighSpeedMove_262CFF494614790EA4CA02828D3FDB8C(const struct FKoratReplaceAnimationDataList& OutAnimDataList);
	void TransitionRushHighSpeedMove_2DABD95042A1D583F27D9ABDBE72B10D(const struct FKoratReplaceAnimationDataList& OutAnimDataList);
	void TransitionRushHighSpeedMove_6A3228CD4397FEAEA8BA5EBE9D1350E8(const struct FKoratReplaceAnimationDataList& OutAnimDataList);
	void TransitionRushHighSpeedMove_7C677CA741A713250201AE9DDAE4C963(const struct FKoratReplaceAnimationDataList& OutAnimDataList);
	void TransitionRushHighSpeedMove_A9A7A9494AC8272C3D4612804B824C99(const struct FKoratReplaceAnimationDataList& OutAnimDataList);
	void TransitionRushHighSpeedMove_B82141CF4550D5779F427D8F879AB4BB(const struct FKoratReplaceAnimationDataList& OutAnimDataList);
	void TransitionRushHighSpeedMove_CA3E0D1C4F1D0D67B18A858E072570B4(const struct FKoratReplaceAnimationDataList& OutAnimDataList);
	void TransitionRushHighSpeedMove_E148BC314BDB6B5EB55049B09BF4F234(const struct FKoratReplaceAnimationDataList& OutAnimDataList);
	void TransitionRushHighSpeedMove_FFCE47D24BBFF93CD9B8FE9D66A2181C(const struct FKoratReplaceAnimationDataList& OutAnimDataList);
	void TransitionRushStep_036B4C3D414F43A0ED8ECE9F5956060A(const struct FKoratReplaceAnimationDataList& OutAnimDataList);
	void TransitionRushStep_262CFF494614790EA4CA02828D3FDB8C(const struct FKoratReplaceAnimationDataList& OutAnimDataList);
	void TransitionRushStep_2DABD95042A1D583F27D9ABDBE72B10D(const struct FKoratReplaceAnimationDataList& OutAnimDataList);
	void TransitionRushStep_6A3228CD4397FEAEA8BA5EBE9D1350E8(const struct FKoratReplaceAnimationDataList& OutAnimDataList);
	void TransitionRushStep_7C677CA741A713250201AE9DDAE4C963(const struct FKoratReplaceAnimationDataList& OutAnimDataList);
	void TransitionRushStep_A9A7A9494AC8272C3D4612804B824C99(const struct FKoratReplaceAnimationDataList& OutAnimDataList);
	void TransitionRushStep_B82141CF4550D5779F427D8F879AB4BB(const struct FKoratReplaceAnimationDataList& OutAnimDataList);
	void TransitionRushStep_CA3E0D1C4F1D0D67B18A858E072570B4(const struct FKoratReplaceAnimationDataList& OutAnimDataList);
	void TransitionRushStep_E148BC314BDB6B5EB55049B09BF4F234(const struct FKoratReplaceAnimationDataList& OutAnimDataList);
	void TransitionRushStep_FFCE47D24BBFF93CD9B8FE9D66A2181C(const struct FKoratReplaceAnimationDataList& OutAnimDataList);
	void TransitionShakeOff_495C4AF242B8B7682C886A9E047A6EBA();
	void TransitionSkill_B0EB4F39407C5C0D6888C494C00D2709();
	void TransitionSmash_48E10D1E437F71053B9AA686CBBFBE0C();
	void TransitionSmash_E0757846494D6F28BC70419067759CDA();
	void TransitionStep_254B687548ED1A43B215459291C501AA();
	void TransitionSuperZCounter_036B4C3D414F43A0ED8ECE9F5956060A();
	void TransitionSuperZCounter_254B687548ED1A43B215459291C501AA();
	void TransitionSuperZCounter_262CFF494614790EA4CA02828D3FDB8C();
	void TransitionSuperZCounter_2DABD95042A1D583F27D9ABDBE72B10D();
	void TransitionSuperZCounter_6A3228CD4397FEAEA8BA5EBE9D1350E8();
	void TransitionSuperZCounter_7C677CA741A713250201AE9DDAE4C963();
	void TransitionSuperZCounter_A9A7A9494AC8272C3D4612804B824C99();
	void TransitionSuperZCounter_B82141CF4550D5779F427D8F879AB4BB();
	void TransitionSuperZCounter_CA3E0D1C4F1D0D67B18A858E072570B4();
	void TransitionSuperZCounter_E148BC314BDB6B5EB55049B09BF4F234();
	void TransitionSuperZCounter_FFCE47D24BBFF93CD9B8FE9D66A2181C();
	void TransitionThrow_254B687548ED1A43B215459291C501AA();
	void TransitionVanishingAssault_036B4C3D414F43A0ED8ECE9F5956060A();
	void TransitionVanishingAssault_254B687548ED1A43B215459291C501AA();
	void TransitionVanishingAssault_262CFF494614790EA4CA02828D3FDB8C();
	void TransitionVanishingAssault_2DABD95042A1D583F27D9ABDBE72B10D();
	void TransitionVanishingAssault_6A3228CD4397FEAEA8BA5EBE9D1350E8();
	void TransitionVanishingAssault_7C677CA741A713250201AE9DDAE4C963();
	void TransitionVanishingAssault_A9A7A9494AC8272C3D4612804B824C99();
	void TransitionVanishingAssault_B82141CF4550D5779F427D8F879AB4BB();
	void TransitionVanishingAssault_CA3E0D1C4F1D0D67B18A858E072570B4();
	void TransitionVanishingAssault_E148BC314BDB6B5EB55049B09BF4F234();
	void TransitionVanishingAssault_FFCE47D24BBFF93CD9B8FE9D66A2181C();
	void TransitionZCounter_5BAEFF1C4D377494E63FE480D1F6B245();
	void Z_____();
	void Z_____w_();
	void Z___z_();
	void Z________();
	void Z________h______________kY_K(bool* Result);
	void ____3();
	void _____n_______K(bool* IsEnable);
	bool _____LN____(double B_, EKoratInequalitySignType _I_);
	void ________();
	void ____________4();
	void ______________w_();
	void ___________w_();
	void _________1z_();
	void _________2z_();
	void _________3z_();
	void _____1();
	void ______0();
	void Func________0(TArray<EKoratActionCategoryType>& InArray, bool* IsCategory);
	void ____1();
	void _________1();
	void Func________1();
	void ___l______K_n_w_(bool* W___);
	void ___w__0();
	void ___________B__0();
	void Func___________11();
	void _________K________w_();
	void _________K________0w_();
	void ________w__0();
	void _________5();
	void ___________(const struct FKoratActionDataList& InAction);
	void _____2();
	void ____________3();
	void ___________w__1();
	void ____________2();
	void ___________8();
	void __________w__0();
	void ___________3();
	void ______oXM();
	void ______w__1();
	void ___r___w_();
	void ___w__1();
	void _________w__1();
	void ____________w__0(double InTime);
	void ___________w__0();
	void _____________xnw___();
	void ______Rw_();
	void ______u_w_();
	void Func________4();
	void ___________1();
	void ______w__3();
	void Func___________3();
	void _________w__3();
	void Func___________4();
	void _________w__4();
	void Func___________2();
	void _________w__2();
	void ____w_();
	void __________();
	void __________B__0();
	void Func_________2();
	void _______xnw___();
	void _________w__6();
	void _______w_();
	void Func_________1();
	void __________________t();
	void _________________t();
	void __________Q__t();
	void __________Q___0();
	void __________Q__();
	void _____________0();
	void ____0();
	void ____R();
	void ____R____t_0();
	void ____R___t();
	void ____R___tB__0();
	void ____Rn__tw____kY_K(bool* Result);
	void ____K_n__B_();
	void ____K_n____();
	void _______1z__0();
	void _______2z__0();
	void _________1z__0();
	void _________2z__0();
	void ___________2();
	void Func________6();
	void ______w_();
	void ______w__0();
	void ____();
	void _______M();
	void _________3();
	void ________e4();
	void Func________11(EKoratBattleKey Param_______0);
	void ____w__0();
	bool _____k________h___ki_Y_K();
	void ______1z__0();
	void ______2z__0();
	void ______3z_();
	void __________1z_();
	void __________2z_();
	void __________3z_();
	void Func___________8();
	void _________4();
	void _________Q_();
	void ___________4();
	void ________w_();
	void Func___________5();
	void _________kw__0();
	bool Func___________14(EKoratBattleKey Param_______0);
	bool Func___________15(EKoratBattleKey Param_______0);
	bool Func___________13(EKoratBattleKey Param_______0);
	bool _______k_WfK_n____(EKoratBattleKey Param_______0, double B_, EKoratInequalitySignType _I_);
	void Func___________7();
	void _________w__5(bool InCancel);
	void _________w______K__();
	void Func___________6();
	void _________kw_();
	void Func___________1();
	void ____________1();
	void _______1z_();
	void _______2z_();
	void _________2();
	void ________1z_xnw___();
	void _______________();
	void ___________kY_K(bool* Result);
	void ______________w__0();
	void __________w_();
	void Func________3();
	void _________B_();
	void ____1();
	void ____2();
	void _______________0(EKoratBlastSlotType InSlotType, const struct FKoratBlastSkillTypeDataList& InSkillType);
	void _______________I_I_(EKoratBlastSlotType InSlotType);
	void ________________2__(EKoratBlastSlotType InSlotType);
	void __________________4(EKoratBlastSlotType InSlotType, const struct FKoratBlastSkillTypeDataList& InSkillType);
	void ___________________2__(EKoratBlastSlotType InSlotType);
	void ____________0(EKoratBlastSlotType InSlotType, const struct FKoratBlastSkillTypeDataList& InSkillType);
	void ___________2(EKoratBlastSlotType InSlotType, const struct FKoratBlastSkillTypeDataList& InSkillType);
	void ___________2______(EKoratBlastSlotType InSlotType);
	void __________________3(EKoratBlastSlotType InSlotType);
	void Func_______________0(EKoratBlastSlotType InSlotType, const struct FKoratBlastSkillTypeDataList& InSkillType);
	void ___________________(EKoratBlastSlotType InSlotType);
	void _____________t(EKoratBlastSlotType InSlotType, const struct FKoratBlastSkillTypeDataList& InSkillType);
	void _____________t______(EKoratBlastSlotType InSlotType);
	void ____________t(EKoratBlastSlotType InSlotType, const struct FKoratBlastSkillTypeDataList& InSkillType);
	void ____________t______(EKoratBlastSlotType InSlotType);
	void ____________t_______q___();
	void ____n__________U__K(bool* Result);
	void __________B_();
	void _______xnw____0();
	void _______Bk__();
	void _____________w_(EKoratBlastSlotType InSlotType);
	void _________0(EKoratBlastSlotType InSlotType);
	void ____________w_(EKoratBlastSlotType InSlotType);
	void ____________w__q___(EKoratBlastSlotType InSlotType, bool InIsChangeAct);
	void _________w__0(EKoratBlastSlotType InSlotType, bool InIsKidan);
	void ____w__1();
	void ________1z_();
	void ________2z__0();
	void ________3z_();
	void Func___________9();
	void Func___________10();
	void ___________0();
	void ______________t();
	void _____________t_0();
	void _____________tB_();
	void __________kw_();
	void _____________kY_K(bool* Result);
	void ____n_B________Wf____();
	void Func________7();
	void ___________7();
	void ___________________________kY_K(bool* Result);
	void ________w__1();
	void ______w__6();
	void _________9();
	void ________xnw___();
	void ________w__3();
	void _____B______K(bool* Result);
	void Func________10();
	void ______1z_xnw___();
	void ______An_pw__0();
	void ______Bn_pw__0();
	void ______K__________1z_w_();
	void ______K__Rw_();
	void ______xnq___();
	void _______0w_();
	void _______u_w_();
	void ______w__7();
	void Func_________0();
	void Func________5();
	void ______K________w_();
	void ______xnw___();
	void ______w__4();
	void ______w__5();
	void Func________9();
	void _________10();
	void ________xnw____0();
	void _________W();
	void _________Ww_();
	void ________w__2();
	void ______L();
	void _________6();
	void _______________________kY_K(bool* Result);
	void __________Minus___();
	void ______________();
	void __________________0();
	void _________________();
	void _______________Q__();
	void __________________1();
	void __________________2();
	void _________w_();
	void ____R____t();
	void ____R___t_();
	void ____R___tB_();
	void ___2bM____________w_();
	bool Func_______________2(EKoratCharacterLocomotionDetailStatus InLocomotionDetailStatus);
	void __________1z__0();
	void __________2z__0();
	void _________n__Sa_Qe___(const struct FKoratActionDataList& InAction, struct FKoratActionDataList* OutAction);
	void ___________6();
	void ___________5();
	void ________1z_______();
	void ________1z______();
	void ________2z_();
	void __();
	void _M();
	void I_oXM();
	void I_I_____n_____nz_a___WfD_K(EKoratBlastSlotType InSlotType, bool* IsMet);
	void _______________________();
	void __________________________();
	void ____________________();
	void ____________________________0();
	void ___________________________();
	void ______________________t______0();
	void ______________________t_____();
	void _____________________t______0();
	void _____________________t_____();
	void ____________5(class FName _n_____, int32 Param_________0);
	void _Q_();
	void NineM_s___();
	void __________OT();
	void ____________();
	void _____();
	void S_();
	void S______();
	void ___1();
	void Func_________3();
	void Func_______________1();
	void Func___________0();
	void __w__1();
	void __w__MovingActionK__();
	void __w________K__();
	void __________n__(const struct FKoratActionDataList& InAction, struct FKoratActionDataList* OutAction, EKoratBlastSlotType* OutSlotType);
	void ___();
	void ___w_();
	void __M();
	void __Mw_();
	void _R();
	void _R____t();
	void _R___t();
	void _R___tB_();
	void _R_________W_R_QkY_K(bool* Result);
	void _R_Q();
	void _R_Q___0();
	void _Rw_();
	void ____H_(const struct FKoratActionDataList& InAction, EKoratActionAttackType InAttackType);
	void ____xw__0(const struct FKoratReplaceAnimationDataList& InAction);
	void Func________8(const struct FKoratReplaceAnimationDataList& InAction, bool* IsNewFlow);
	void ____xw_(const struct FKoratReplaceAnimationDataList& Param_______0, int32 _n_______);
	void A___M__();
	void Func________2();
	void __KM_W();
	void __2();
	void __2____1z_();
	void __2____2z_();
	void __2____3z_();
	void __2_____();
	void __oXM();
	void __oXMxw_(bool OXM_____MinusK);
	void __oXM_______();
	void __om_W();
	void __om_Wxw_();
	void __w_();
	void ____2();
	void ______1z_();
	void ______2z_();
	void Z_LdDfD_K(bool* OutResult);
	void ______An_pw_();
	void ______Bn_pw_();
	void _________kY_K(bool* Result);
	bool _KLy_n_____K(const struct FKoratActionDataList& InAction);
	bool _KLy_n_____K__p___(TArray<struct FKoratActionDataList>& InActionList);
	bool _KL________MinusK();
	void ___0();
	void ____oXM();
	void ZMinus___________();
	void ZMinus_________();
	void ZMinus______();
	void _z_____1z_();
	void _z_____2z_();
	void _z_();
	void _zS();
	void _u_();
	void __u___w_();
	void _u_or__u_xw_();
	void _u____n____Be__HK(bool* Result);
	void _u____n____e__H_________M();
	void _u_w_();
	void _Z__________();
	void _Z___________();
	void _UD();
	void _U__();
	void _Z_______Hw_(bool InCancel);
	void _Z______H();
	void _Z_____N______();
	void _Z_____N_____();
	void _Z_____________();
	void Func___________12(const struct FKoratActionDataList& InAction);
	void _________8();
	void ______w__2();
	void _________7();
	void __u__________kMinus_();
	void __Knu_n_Q();
	void __Knu_n_Qw_();
	bool ___Bn________LFK(const struct FKoratActionDataList& InAction);
	void _DSa____Fd__();
	void _DSa______Q();
	void __w__0();
	void W________(const struct FKoratReplaceAnimationDataList& Param_______0, int32 _n_______);
	void W___(const struct FKoratActionDataList& InAction);
	void W____q_(const struct FKoratActionDataList& InAction);
	void W____0();
	void W____q__0();
	void W____q____w__();
	void W_a_T_();
	void __zSn__();
	void _____0();
	void ____w__2();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TransitionFlowComponent_C">();
	}
	static class UBP_TransitionFlowComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_TransitionFlowComponent_C>();
	}
};
static_assert(alignof(UBP_TransitionFlowComponent_C) == 0x000008, "Wrong alignment on UBP_TransitionFlowComponent_C");
static_assert(sizeof(UBP_TransitionFlowComponent_C) == 0x0015A8, "Wrong size on UBP_TransitionFlowComponent_C");
static_assert(offsetof(UBP_TransitionFlowComponent_C, UberGraphFrame_BP_TransitionFlowComponent_C) == 0x000398, "Member 'UBP_TransitionFlowComponent_C::UberGraphFrame_BP_TransitionFlowComponent_C' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, DeltaSeconds) == 0x0003A0, "Member 'UBP_TransitionFlowComponent_C::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, IsConditionNotMet) == 0x0003A8, "Member 'UBP_TransitionFlowComponent_C::IsConditionNotMet' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, OutActionDataList) == 0x0003AC, "Member 'UBP_TransitionFlowComponent_C::OutActionDataList' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, TransitionRushHightSpeedMoveAction) == 0x0003B4, "Member 'UBP_TransitionFlowComponent_C::TransitionRushHightSpeedMoveAction' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, EndActionList) == 0x0003C0, "Member 'UBP_TransitionFlowComponent_C::EndActionList' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, IsPrecededConditionMet) == 0x0003D0, "Member 'UBP_TransitionFlowComponent_C::IsPrecededConditionMet' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, ConditionIndex) == 0x0003D4, "Member 'UBP_TransitionFlowComponent_C::ConditionIndex' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, SetPrecededConditionMet) == 0x0003D8, "Member 'UBP_TransitionFlowComponent_C::SetPrecededConditionMet' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, KoratCharacterSubActionStateAnimInstance_0) == 0x0003E0, "Member 'UBP_TransitionFlowComponent_C::KoratCharacterSubActionStateAnimInstance_0' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, Input) == 0x0003E8, "Member 'UBP_TransitionFlowComponent_C::Input' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, W_Y______) == 0x0003EC, "Member 'UBP_TransitionFlowComponent_C::W_Y______' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, ____p) == 0x0003F4, "Member 'UBP_TransitionFlowComponent_C::____p' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, ________BP_TransitionFlowComponent_C) == 0x0003F8, "Member 'UBP_TransitionFlowComponent_C::________BP_TransitionFlowComponent_C' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, __M_______) == 0x0003FC, "Member 'UBP_TransitionFlowComponent_C::__M_______' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, __n__) == 0x000400, "Member 'UBP_TransitionFlowComponent_C::__n__' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, _______BP_TransitionFlowComponent_C) == 0x000408, "Member 'UBP_TransitionFlowComponent_C::_______BP_TransitionFlowComponent_C' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, _n_____n____) == 0x000410, "Member 'UBP_TransitionFlowComponent_C::_n_____n____' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, UltimateBlastBranch) == 0x000411, "Member 'UBP_TransitionFlowComponent_C::UltimateBlastBranch' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, NextAnimDataList) == 0x000414, "Member 'UBP_TransitionFlowComponent_C::NextAnimDataList' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, RequestAnimData) == 0x00041C, "Member 'UBP_TransitionFlowComponent_C::RequestAnimData' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, _R_Q_LNB_) == 0x000428, "Member 'UBP_TransitionFlowComponent_C::_R_Q_LNB_' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, ________n________) == 0x000430, "Member 'UBP_TransitionFlowComponent_C::________n________' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, ________n____) == 0x000434, "Member 'UBP_TransitionFlowComponent_C::________n____' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, ________n_Qp) == 0x000438, "Member 'UBP_TransitionFlowComponent_C::________n_Qp' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, __oXM___) == 0x00043C, "Member 'UBP_TransitionFlowComponent_C::__oXM___' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, __________Qt_____) == 0x000440, "Member 'UBP_TransitionFlowComponent_C::__________Qt_____' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, __________Qt_b___) == 0x000720, "Member 'UBP_TransitionFlowComponent_C::__________Qt_b___' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, ________Minusn___________) == 0x000A00, "Member 'UBP_TransitionFlowComponent_C::________Minusn___________' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, _______n____B_) == 0x000A08, "Member 'UBP_TransitionFlowComponent_C::_______n____B_' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, SparkingComboEmoteIndex) == 0x000A10, "Member 'UBP_TransitionFlowComponent_C::SparkingComboEmoteIndex' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, ________BP_TransitionFlowComponent_C_0) == 0x000A14, "Member 'UBP_TransitionFlowComponent_C::________BP_TransitionFlowComponent_C_0' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, _40111_____________HT____) == 0x000A15, "Member 'UBP_TransitionFlowComponent_C::_40111_____________HT____' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, ____p_0) == 0x000A18, "Member 'UBP_TransitionFlowComponent_C::____p_0' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, _R_Qn6_B_______) == 0x000A20, "Member 'UBP_TransitionFlowComponent_C::_R_Qn6_B_______' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, ____________p) == 0x000A28, "Member 'UBP_TransitionFlowComponent_C::____________p' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, ______________n__p) == 0x000A2C, "Member 'UBP_TransitionFlowComponent_C::______________n__p' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, ____________p_0) == 0x000A30, "Member 'UBP_TransitionFlowComponent_C::____________p_0' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, __2______) == 0x000A34, "Member 'UBP_TransitionFlowComponent_C::__2______' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, IsStartBodyChange) == 0x000A35, "Member 'UBP_TransitionFlowComponent_C::IsStartBodyChange' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, DamageParameter) == 0x000A38, "Member 'UBP_TransitionFlowComponent_C::DamageParameter' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, MapChangeType) == 0x0014F8, "Member 'UBP_TransitionFlowComponent_C::MapChangeType' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, MapChangeAction) == 0x0014FC, "Member 'UBP_TransitionFlowComponent_C::MapChangeAction' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, IsTeleportationCounterWait) == 0x001504, "Member 'UBP_TransitionFlowComponent_C::IsTeleportationCounterWait' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, MapChangeStartTiming) == 0x001505, "Member 'UBP_TransitionFlowComponent_C::MapChangeStartTiming' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, ______e_) == 0x001506, "Member 'UBP_TransitionFlowComponent_C::______e_' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, __n________p) == 0x001508, "Member 'UBP_TransitionFlowComponent_C::__n________p' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, _Mk_W__________L__c_K) == 0x00150C, "Member 'UBP_TransitionFlowComponent_C::_Mk_W__________L__c_K' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, _____________) == 0x00150D, "Member 'UBP_TransitionFlowComponent_C::_____________' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, ________________) == 0x001510, "Member 'UBP_TransitionFlowComponent_C::________________' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, ___________B_) == 0x001518, "Member 'UBP_TransitionFlowComponent_C::___________B_' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, IsCompletedBodyChange) == 0x001520, "Member 'UBP_TransitionFlowComponent_C::IsCompletedBodyChange' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, W__B_____) == 0x001524, "Member 'UBP_TransitionFlowComponent_C::W__B_____' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, M_n_______) == 0x00152C, "Member 'UBP_TransitionFlowComponent_C::M_n_______' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, ______W____) == 0x001534, "Member 'UBP_TransitionFlowComponent_C::______W____' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, BreakLD) == 0x001538, "Member 'UBP_TransitionFlowComponent_C::BreakLD' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, BreakLDDelayCount) == 0x00153C, "Member 'UBP_TransitionFlowComponent_C::BreakLDDelayCount' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, ____Bn_____B_) == 0x001540, "Member 'UBP_TransitionFlowComponent_C::____Bn_____B_' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, _R_Qn6_B_______z_M_) == 0x001548, "Member 'UBP_TransitionFlowComponent_C::_R_Qn6_B_______z_M_' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, _R_Q__) == 0x001550, "Member 'UBP_TransitionFlowComponent_C::_R_Q__' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, _R_____z_M) == 0x001551, "Member 'UBP_TransitionFlowComponent_C::_R_____z_M' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, Debug_R_Q______) == 0x001552, "Member 'UBP_TransitionFlowComponent_C::Debug_R_Q______' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, __________nw______) == 0x001554, "Member 'UBP_TransitionFlowComponent_C::__________nw______' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, __________n_______) == 0x00155C, "Member 'UBP_TransitionFlowComponent_C::__________n_______' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, ______________0) == 0x001560, "Member 'UBP_TransitionFlowComponent_C::______________0' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, _____M_______K) == 0x001561, "Member 'UBP_TransitionFlowComponent_C::_____M_______K' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, __________BP_TransitionFlowComponent_C) == 0x001562, "Member 'UBP_TransitionFlowComponent_C::__________BP_TransitionFlowComponent_C' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, ______B_____) == 0x001564, "Member 'UBP_TransitionFlowComponent_C::______B_____' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, ____w___B_) == 0x001570, "Member 'UBP_TransitionFlowComponent_C::____w___B_' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, __________BP_TransitionFlowComponent_C_0) == 0x001578, "Member 'UBP_TransitionFlowComponent_C::__________BP_TransitionFlowComponent_C_0' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, ____oXM__e__p) == 0x001580, "Member 'UBP_TransitionFlowComponent_C::____oXM__e__p' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, _Rw___B_) == 0x001588, "Member 'UBP_TransitionFlowComponent_C::_Rw___B_' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, IsBlastDashActionTarget) == 0x001590, "Member 'UBP_TransitionFlowComponent_C::IsBlastDashActionTarget' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, SelfishnessActionIndex) == 0x001594, "Member 'UBP_TransitionFlowComponent_C::SelfishnessActionIndex' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, SelfishnessLeftLastIndex) == 0x001598, "Member 'UBP_TransitionFlowComponent_C::SelfishnessLeftLastIndex' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, SelfishnessRightLastIndex) == 0x00159C, "Member 'UBP_TransitionFlowComponent_C::SelfishnessRightLastIndex' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, LDSectionPlayed) == 0x0015A0, "Member 'UBP_TransitionFlowComponent_C::LDSectionPlayed' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, IsVanishingAssaultPadKey) == 0x0015A1, "Member 'UBP_TransitionFlowComponent_C::IsVanishingAssaultPadKey' has a wrong offset!");
static_assert(offsetof(UBP_TransitionFlowComponent_C, TurnBlastHTSection) == 0x0015A2, "Member 'UBP_TransitionFlowComponent_C::TurnBlastHTSection' has a wrong offset!");

}

