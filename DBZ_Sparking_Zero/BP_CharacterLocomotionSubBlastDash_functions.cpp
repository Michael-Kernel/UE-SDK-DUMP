#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterLocomotionSubBlastDash

#include "Basic.hpp"

#include "BP_CharacterLocomotionSubBlastDash_classes.hpp"
#include "BP_CharacterLocomotionSubBlastDash_parameters.hpp"


namespace SDK
{

// Function BP_CharacterLocomotionSubBlastDash.BP_CharacterLocomotionSubBlastDash_C.CheckAndStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_CharacterLocomotionComponent_C*InLocomotionComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    InInSkip                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsStarted                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubBlastDash_C::CheckAndStart(class UBP_CharacterLocomotionComponent_C* InLocomotionComponent, bool InInSkip, bool* IsStarted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubBlastDash_C", "CheckAndStart");

	Params::BP_CharacterLocomotionSubBlastDash_C_CheckAndStart Parms{};

	Parms.InLocomotionComponent = InLocomotionComponent;
	Parms.InInSkip = InInSkip;

	UObject::ProcessEvent(Func, &Parms);

	if (IsStarted != nullptr)
		*IsStarted = Parms.IsStarted;
}


// Function BP_CharacterLocomotionSubBlastDash.BP_CharacterLocomotionSubBlastDash_C.CheckHomingEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InDeltaSeconds                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InIsCanChase                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsEnd                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubBlastDash_C::CheckHomingEnd(double InDeltaSeconds, bool InIsCanChase, bool* IsEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubBlastDash_C", "CheckHomingEnd");

	Params::BP_CharacterLocomotionSubBlastDash_C_CheckHomingEnd Parms{};

	Parms.InDeltaSeconds = InDeltaSeconds;
	Parms.InIsCanChase = InIsCanChase;

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnd != nullptr)
		*IsEnd = Parms.IsEnd;
}


// Function BP_CharacterLocomotionSubBlastDash.BP_CharacterLocomotionSubBlastDash_C.CheckHomingEndSP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnd                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubBlastDash_C::CheckHomingEndSP(bool* IsEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubBlastDash_C", "CheckHomingEndSP");

	Params::BP_CharacterLocomotionSubBlastDash_C_CheckHomingEndSP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnd != nullptr)
		*IsEnd = Parms.IsEnd;
}


// Function BP_CharacterLocomotionSubBlastDash.BP_CharacterLocomotionSubBlastDash_C.ConsumeSPHomingIN
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSuccessfully                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubBlastDash_C::ConsumeSPHomingIN(bool* IsSuccessfully)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubBlastDash_C", "ConsumeSPHomingIN");

	Params::BP_CharacterLocomotionSubBlastDash_C_ConsumeSPHomingIN Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsSuccessfully != nullptr)
		*IsSuccessfully = Parms.IsSuccessfully;
}


// Function BP_CharacterLocomotionSubBlastDash.BP_CharacterLocomotionSubBlastDash_C.ConsumeSPHomingLP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSuccessfully                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubBlastDash_C::ConsumeSPHomingLP(bool* IsSuccessfully)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubBlastDash_C", "ConsumeSPHomingLP");

	Params::BP_CharacterLocomotionSubBlastDash_C_ConsumeSPHomingLP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsSuccessfully != nullptr)
		*IsSuccessfully = Parms.IsSuccessfully;
}


// Function BP_CharacterLocomotionSubBlastDash.BP_CharacterLocomotionSubBlastDash_C.GetHomingStateMovementParameter
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratDragonHomingState                 InStatus                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsUseParameter                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKoratCharacterDataDragonDashMovementParameterMovementParameter                                      (Parm, OutParm, NoDestructor)

void UBP_CharacterLocomotionSubBlastDash_C::GetHomingStateMovementParameter(EKoratDragonHomingState InStatus, bool* IsUseParameter, struct FKoratCharacterDataDragonDashMovementParameter* MovementParameter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubBlastDash_C", "GetHomingStateMovementParameter");

	Params::BP_CharacterLocomotionSubBlastDash_C_GetHomingStateMovementParameter Parms{};

	Parms.InStatus = InStatus;

	UObject::ProcessEvent(Func, &Parms);

	if (IsUseParameter != nullptr)
		*IsUseParameter = Parms.IsUseParameter;

	if (MovementParameter != nullptr)
		*MovementParameter = std::move(Parms.MovementParameter);
}


// Function BP_CharacterLocomotionSubBlastDash.BP_CharacterLocomotionSubBlastDash_C.GetLocomotionDetailStatus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratCharacterLocomotionDetailStatus   LocomotionDetailStatus                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubBlastDash_C::GetLocomotionDetailStatus(EKoratCharacterLocomotionDetailStatus* LocomotionDetailStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubBlastDash_C", "GetLocomotionDetailStatus");

	Params::BP_CharacterLocomotionSubBlastDash_C_GetLocomotionDetailStatus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LocomotionDetailStatus != nullptr)
		*LocomotionDetailStatus = Parms.LocomotionDetailStatus;
}


// Function BP_CharacterLocomotionSubBlastDash.BP_CharacterLocomotionSubBlastDash_C.GetRunningAction
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratActionDataList             RunningAction                                          (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubBlastDash_C::GetRunningAction(struct FKoratActionDataList* RunningAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubBlastDash_C", "GetRunningAction");

	Params::BP_CharacterLocomotionSubBlastDash_C_GetRunningAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RunningAction != nullptr)
		*RunningAction = std::move(Parms.RunningAction);
}


// Function BP_CharacterLocomotionSubBlastDash.BP_CharacterLocomotionSubBlastDash_C.GetRunningSection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             RunningSection                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubBlastDash_C::GetRunningSection(class FName* RunningSection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubBlastDash_C", "GetRunningSection");

	Params::BP_CharacterLocomotionSubBlastDash_C_GetRunningSection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RunningSection != nullptr)
		*RunningSection = Parms.RunningSection;
}


// Function BP_CharacterLocomotionSubBlastDash.BP_CharacterLocomotionSubBlastDash_C.IsCanHomingChase
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_CharacterLocomotionSubBlastDash_C::IsCanHomingChase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubBlastDash_C", "IsCanHomingChase");

	Params::BP_CharacterLocomotionSubBlastDash_C_IsCanHomingChase Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_CharacterLocomotionSubBlastDash.BP_CharacterLocomotionSubBlastDash_C.IsEnableAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnable                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubBlastDash_C::IsEnableAction(bool* IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubBlastDash_C", "IsEnableAction");

	Params::BP_CharacterLocomotionSubBlastDash_C_IsEnableAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnable != nullptr)
		*IsEnable = Parms.IsEnable;
}


// Function BP_CharacterLocomotionSubBlastDash.BP_CharacterLocomotionSubBlastDash_C.OnStopBlastDash
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterLocomotionSubBlastDash_C::OnStopBlastDash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubBlastDash_C", "OnStopBlastDash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterLocomotionSubBlastDash.BP_CharacterLocomotionSubBlastDash_C.SetBlastSlotType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratBlastSlotType                     InBlastSlotType                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubBlastDash_C::SetBlastSlotType(EKoratBlastSlotType InBlastSlotType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubBlastDash_C", "SetBlastSlotType");

	Params::BP_CharacterLocomotionSubBlastDash_C_SetBlastSlotType Parms{};

	Parms.InBlastSlotType = InBlastSlotType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterLocomotionSubBlastDash.BP_CharacterLocomotionSubBlastDash_C.Start
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_CharacterLocomotionComponent_C*InLocomotionComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    InInSkip                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubBlastDash_C::Start(class UBP_CharacterLocomotionComponent_C* InLocomotionComponent, bool InInSkip, bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubBlastDash_C", "Start");

	Params::BP_CharacterLocomotionSubBlastDash_C_Start Parms{};

	Parms.InLocomotionComponent = InLocomotionComponent;
	Parms.InInSkip = InInSkip;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BP_CharacterLocomotionSubBlastDash.BP_CharacterLocomotionSubBlastDash_C.StartCheckSPConsumableHomingIN
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsOK                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubBlastDash_C::StartCheckSPConsumableHomingIN(bool* IsOK)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubBlastDash_C", "StartCheckSPConsumableHomingIN");

	Params::BP_CharacterLocomotionSubBlastDash_C_StartCheckSPConsumableHomingIN Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsOK != nullptr)
		*IsOK = Parms.IsOK;
}


// Function BP_CharacterLocomotionSubBlastDash.BP_CharacterLocomotionSubBlastDash_C.Update
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_CharacterLocomotionComponent_C*InLocomotionComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// ECharacterLocomotionEventType           InEventType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InDeltaSeconds                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubBlastDash_C::Update(class UBP_CharacterLocomotionComponent_C* InLocomotionComponent, ECharacterLocomotionEventType InEventType, double InDeltaSeconds, bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubBlastDash_C", "Update");

	Params::BP_CharacterLocomotionSubBlastDash_C_Update Parms{};

	Parms.InLocomotionComponent = InLocomotionComponent;
	Parms.InEventType = InEventType;
	Parms.InDeltaSeconds = InDeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BP_CharacterLocomotionSubBlastDash.BP_CharacterLocomotionSubBlastDash_C.UpdateHomingLPKey Pressed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSuccessfully                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubBlastDash_C::UpdateHomingLPKey_Pressed(bool* IsSuccessfully)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubBlastDash_C", "UpdateHomingLPKey Pressed");

	Params::BP_CharacterLocomotionSubBlastDash_C_UpdateHomingLPKey_Pressed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsSuccessfully != nullptr)
		*IsSuccessfully = Parms.IsSuccessfully;
}


// Function BP_CharacterLocomotionSubBlastDash.BP_CharacterLocomotionSubBlastDash_C.UpdateHomingLPOn Hit
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterLocomotionSubBlastDash_C::UpdateHomingLPOn_Hit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubBlastDash_C", "UpdateHomingLPOn Hit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterLocomotionSubBlastDash.BP_CharacterLocomotionSubBlastDash_C.UpdateHomingLPOn Play Dash Combatives
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterLocomotionSubBlastDash_C::UpdateHomingLPOn_Play_Dash_Combatives()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubBlastDash_C", "UpdateHomingLPOn Play Dash Combatives");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterLocomotionSubBlastDash.BP_CharacterLocomotionSubBlastDash_C.UpdateHomingLPStop
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterLocomotionSubBlastDash_C::UpdateHomingLPStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubBlastDash_C", "UpdateHomingLPStop");

	UObject::ProcessEvent(Func, nullptr);
}

}

