#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CrashImpactProcedure

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SS_structs.hpp"
#include "SS_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CrashImpactProcedure.BP_CrashImpactProcedure_C
// 0x0240 (0x0650 - 0x0410)
class ABP_CrashImpactProcedure_C final : public ASSCrashImpactProcedure
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0410(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        GamePositionSetTime;                               // 0x0420(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   OffenseSocket;                                     // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   DefenseSocket;                                     // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IntroStatus;                                       // 0x0438(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43C[0x4];                                      // 0x043C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ECrashImpactAttackDirection, struct FKoratActionDataList> ActionAttack;                                      // 0x0440(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	double                                        NextTime;                                          // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Intro1SetTime;                                     // 0x0498(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Intro2SetTime;                                     // 0x04A0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FinishPositionSetTime;                             // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<ECrashImpactAttackDirection, struct FKoratActionDataList> ActionDamage;                                      // 0x04B0(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TMap<ECrashImpactAttackDirection, struct FKoratActionDataList> ActionGuard;                                       // 0x0500(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TMap<ECrashImpactAttackDirection, class FName> SocketAttack;                                      // 0x0550(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TMap<ECrashImpactAttackDirection, class FName> SocketDamage;                                      // 0x05A0(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TMap<ECrashImpactAttackDirection, class FName> SocketGuard;                                       // 0x05F0(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	double                                        PoseTime;                                          // 0x0640(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CharacterHitStop(class USSBattleImpactCharacterProxy* Character);
	void ExecuteUbergraph_BP_CrashImpactProcedure(int32 EntryPoint);
	void OnBattleImpactBreak();
	void OnBeginBattle();
	void OnBeginConclusion();
	void OnBeginFinish();
	void OnBeginGame();
	void OnBeginIntroduction();
	void OnChangedPhase(const EBattleImpactPhase InPhase);
	void OnChangePhase(EBattleImpactPhase NewParam);
	void OnEnd();
	void OnTickConclusion(float DeltaTime);
	void OnTickGame(float DeltaTime);
	void OnTickIntro(float DeltaTime);
	void PlayAttackAction(class USSBattleImpactCharacterProxy* Character, const ECrashImpactAttackDirection Direction);
	void PlayDamageAction(class USSBattleImpactCharacterProxy* Character, const ECrashImpactAttackDirection Directiont);
	void PlayDefensiveFinishAction(class USSBattleImpactCharacterProxy* Character);
	void PlayGuardAction(class USSBattleImpactCharacterProxy* Character, const ECrashImpactAttackDirection Direction);
	void PlayOffensiveFinishAction(class USSBattleImpactCharacterProxy* Character);
	void ReceiveTick(float DeltaSeconds);
	void _________0();

	void DebugDraw(float InDeltaT) const;
	class FName GetDefenseSocket() const;
	EBattleImpactPhase GetNextPhase(EBattleImpactPhase InCurrentPhase) const;
	class FName GetOffenseSocket() const;
	ECrashImpactAttackDirection PickAction() const;
	int32 PickCameraIndex() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CrashImpactProcedure_C">();
	}
	static class ABP_CrashImpactProcedure_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CrashImpactProcedure_C>();
	}
};
static_assert(alignof(ABP_CrashImpactProcedure_C) == 0x000010, "Wrong alignment on ABP_CrashImpactProcedure_C");
static_assert(sizeof(ABP_CrashImpactProcedure_C) == 0x000650, "Wrong size on ABP_CrashImpactProcedure_C");
static_assert(offsetof(ABP_CrashImpactProcedure_C, UberGraphFrame) == 0x000410, "Member 'ABP_CrashImpactProcedure_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CrashImpactProcedure_C, DefaultSceneRoot) == 0x000418, "Member 'ABP_CrashImpactProcedure_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_CrashImpactProcedure_C, GamePositionSetTime) == 0x000420, "Member 'ABP_CrashImpactProcedure_C::GamePositionSetTime' has a wrong offset!");
static_assert(offsetof(ABP_CrashImpactProcedure_C, OffenseSocket) == 0x000428, "Member 'ABP_CrashImpactProcedure_C::OffenseSocket' has a wrong offset!");
static_assert(offsetof(ABP_CrashImpactProcedure_C, DefenseSocket) == 0x000430, "Member 'ABP_CrashImpactProcedure_C::DefenseSocket' has a wrong offset!");
static_assert(offsetof(ABP_CrashImpactProcedure_C, IntroStatus) == 0x000438, "Member 'ABP_CrashImpactProcedure_C::IntroStatus' has a wrong offset!");
static_assert(offsetof(ABP_CrashImpactProcedure_C, ActionAttack) == 0x000440, "Member 'ABP_CrashImpactProcedure_C::ActionAttack' has a wrong offset!");
static_assert(offsetof(ABP_CrashImpactProcedure_C, NextTime) == 0x000490, "Member 'ABP_CrashImpactProcedure_C::NextTime' has a wrong offset!");
static_assert(offsetof(ABP_CrashImpactProcedure_C, Intro1SetTime) == 0x000498, "Member 'ABP_CrashImpactProcedure_C::Intro1SetTime' has a wrong offset!");
static_assert(offsetof(ABP_CrashImpactProcedure_C, Intro2SetTime) == 0x0004A0, "Member 'ABP_CrashImpactProcedure_C::Intro2SetTime' has a wrong offset!");
static_assert(offsetof(ABP_CrashImpactProcedure_C, FinishPositionSetTime) == 0x0004A8, "Member 'ABP_CrashImpactProcedure_C::FinishPositionSetTime' has a wrong offset!");
static_assert(offsetof(ABP_CrashImpactProcedure_C, ActionDamage) == 0x0004B0, "Member 'ABP_CrashImpactProcedure_C::ActionDamage' has a wrong offset!");
static_assert(offsetof(ABP_CrashImpactProcedure_C, ActionGuard) == 0x000500, "Member 'ABP_CrashImpactProcedure_C::ActionGuard' has a wrong offset!");
static_assert(offsetof(ABP_CrashImpactProcedure_C, SocketAttack) == 0x000550, "Member 'ABP_CrashImpactProcedure_C::SocketAttack' has a wrong offset!");
static_assert(offsetof(ABP_CrashImpactProcedure_C, SocketDamage) == 0x0005A0, "Member 'ABP_CrashImpactProcedure_C::SocketDamage' has a wrong offset!");
static_assert(offsetof(ABP_CrashImpactProcedure_C, SocketGuard) == 0x0005F0, "Member 'ABP_CrashImpactProcedure_C::SocketGuard' has a wrong offset!");
static_assert(offsetof(ABP_CrashImpactProcedure_C, PoseTime) == 0x000640, "Member 'ABP_CrashImpactProcedure_C::PoseTime' has a wrong offset!");

}

