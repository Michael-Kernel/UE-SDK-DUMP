#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ST_SOLimit

#include "Basic.hpp"

#include "ST_SOBaseStrenghtLimit_structs.hpp"


namespace SDK
{

// UserDefinedStruct ST_SOLimit.ST_SOLimit
// 0x0080 (0x0080 - 0x0000)
struct FST_SOLimit final
{
public:
	struct FST_SOBaseStrenghtLimit                StrengthLimitX_37_DFC02CE94AB919D2FA2D0B85F9E983B5; // 0x0000(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_SOBaseStrenghtLimit                StrengthLimitY_38_28173074468B4D0FFF229C9333BD0ED1; // 0x0020(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_SOBaseStrenghtLimit                StrengthLimitZ_39_E90F1C0442BB6034E53E928A9BD3B117; // 0x0040(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinAmpXYOverall_40_A765F66A499A4BBF86B312B8AC34CB04; // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxAmpXYOverall_42_24722D6745E8BAA3B5F28D9F7350811D; // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinFreqOverall_52_E9973FF44408208CD26A06B7E2006EF8; // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxFreqOverall_53_6CC9AD6D45BE80B436F1D188953A52CB; // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FST_SOLimit) == 0x000008, "Wrong alignment on FST_SOLimit");
static_assert(sizeof(FST_SOLimit) == 0x000080, "Wrong size on FST_SOLimit");
static_assert(offsetof(FST_SOLimit, StrengthLimitX_37_DFC02CE94AB919D2FA2D0B85F9E983B5) == 0x000000, "Member 'FST_SOLimit::StrengthLimitX_37_DFC02CE94AB919D2FA2D0B85F9E983B5' has a wrong offset!");
static_assert(offsetof(FST_SOLimit, StrengthLimitY_38_28173074468B4D0FFF229C9333BD0ED1) == 0x000020, "Member 'FST_SOLimit::StrengthLimitY_38_28173074468B4D0FFF229C9333BD0ED1' has a wrong offset!");
static_assert(offsetof(FST_SOLimit, StrengthLimitZ_39_E90F1C0442BB6034E53E928A9BD3B117) == 0x000040, "Member 'FST_SOLimit::StrengthLimitZ_39_E90F1C0442BB6034E53E928A9BD3B117' has a wrong offset!");
static_assert(offsetof(FST_SOLimit, MinAmpXYOverall_40_A765F66A499A4BBF86B312B8AC34CB04) == 0x000060, "Member 'FST_SOLimit::MinAmpXYOverall_40_A765F66A499A4BBF86B312B8AC34CB04' has a wrong offset!");
static_assert(offsetof(FST_SOLimit, MaxAmpXYOverall_42_24722D6745E8BAA3B5F28D9F7350811D) == 0x000068, "Member 'FST_SOLimit::MaxAmpXYOverall_42_24722D6745E8BAA3B5F28D9F7350811D' has a wrong offset!");
static_assert(offsetof(FST_SOLimit, MinFreqOverall_52_E9973FF44408208CD26A06B7E2006EF8) == 0x000070, "Member 'FST_SOLimit::MinFreqOverall_52_E9973FF44408208CD26A06B7E2006EF8' has a wrong offset!");
static_assert(offsetof(FST_SOLimit, MaxFreqOverall_53_6CC9AD6D45BE80B436F1D188953A52CB) == 0x000078, "Member 'FST_SOLimit::MaxFreqOverall_53_6CC9AD6D45BE80B436F1D188953A52CB' has a wrong offset!");

}

