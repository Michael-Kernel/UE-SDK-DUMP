#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Sub_Action

#include "Basic.hpp"

#include "ABP_Sub_Action_structs.hpp"
#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "SS_structs.hpp"
#include "SS_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Sub_Action.ABP_Sub_Action_C
// 0x2D20 (0x30E0 - 0x03C0)
class UABP_Sub_Action_C final : public UKoratCharacterSubActionStateAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_Sub_Action::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x03C8(0x0020)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Tag;                        // 0x03E8(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x03F0(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x03F8(0x0008)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_26;                             // 0x0400(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_44;                    // 0x0448(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_43;                    // 0x0470(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_25;                             // 0x0498(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x04E0(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_9;                    // 0x0528(0x0108)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_24;                             // 0x0630(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_42;                    // 0x0678(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_23;                             // 0x06A0(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_41;                    // 0x06E8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_40;                    // 0x0710(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_39;                    // 0x0738(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_38;                    // 0x0760(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_22;                             // 0x0788(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_37;                    // 0x07D0(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_21;                             // 0x07F8(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_36;                    // 0x0840(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_20;                             // 0x0868(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_35;                    // 0x08B0(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_19;                             // 0x08D8(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x0920(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_18;                             // 0x0968(0x0048)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_10;                      // 0x09B0(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_34;                    // 0x0A78(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_33;                    // 0x0AA0(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_17;                             // 0x0AC8(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_32;                    // 0x0B10(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_16;                             // 0x0B38(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_31;                    // 0x0B80(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_15;                             // 0x0BA8(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_14;                             // 0x0BF0(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_30;                    // 0x0C38(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_29;                    // 0x0C60(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_8;                    // 0x0C88(0x0108)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_9;                       // 0x0D90(0x00C8)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_8;                       // 0x0E58(0x00C8)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_7;                       // 0x0F20(0x00C8)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_6;                       // 0x0FE8(0x00C8)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_5;                       // 0x10B0(0x00C8)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_4;                       // 0x1178(0x00C8)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_3;                       // 0x1240(0x00C8)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_2;                       // 0x1308(0x00C8)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_1;                       // 0x13D0(0x00C8)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x1498(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_7;                    // 0x1560(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_28;                    // 0x1668(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_3;                  // 0x1690(0x00E0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_27;                    // 0x1770(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x1798(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_26;                    // 0x17E0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_25;                    // 0x1808(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_2;                  // 0x1830(0x00E0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_24;                    // 0x1910(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_13;                             // 0x1938(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_23;                    // 0x1980(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_6;                    // 0x19A8(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_22;                    // 0x1AB0(0x0028)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x1AD8(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_12;                             // 0x1B20(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_21;                    // 0x1B68(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_11;                             // 0x1B90(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_20;                    // 0x1BD8(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_10;                             // 0x1C00(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_19;                    // 0x1C48(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_9;                              // 0x1C70(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_18;                    // 0x1CB8(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_8;                              // 0x1CE0(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_17;                    // 0x1D28(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_7;                              // 0x1D50(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_16;                    // 0x1D98(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_6;                              // 0x1DC0(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_15;                    // 0x1E08(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_5;                              // 0x1E30(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_14;                    // 0x1E78(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_4;                              // 0x1EA0(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_13;                    // 0x1EE8(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0x1F10(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_12;                    // 0x1F58(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x1F80(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_11;                    // 0x1FC8(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x1FF0(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_10;                    // 0x2038(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_5;                    // 0x2060(0x0108)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x2168(0x00E0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_9;                     // 0x2248(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x2270(0x00E0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_4;                    // 0x2350(0x0108)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_SubInput;                            // 0x2458(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0x2520(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x2548(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x2590(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x25D8(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x26E0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x2708(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x2730(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x2838(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x2860(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x2968(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x2990(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x29B8(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x29E0(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x2AE8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x2B10(0x0028)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone;                            // 0x2B38(0x00F0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x2C28(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x2C48(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x2C68(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x2D90(0x0128)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x2EB8(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x2ED8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x2EF8(0x0020)()
	class UActorComponent*                        LocomotionComponent;                               // 0x2F18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x2F20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        XYSpeed;                                           // 0x2F28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ZSpeed;                                            // 0x2F30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LastVelocityRot;                                   // 0x2F38(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               CharacterRot;                                      // 0x2F50(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                        DirectionY;                                        // 0x2F68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DirectionZ;                                        // 0x2F70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NearMoveAlpha;                                     // 0x2F78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BattleMoveAlpha;                                   // 0x2F80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ActionBlendAlpha;                                  // 0x2F88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                AnimMontage;                                       // 0x2F90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	EKoratAnimType                                AnimType;                                          // 0x2F98(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F99[0x7];                                     // 0x2F99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 NextSction;                                        // 0x2FA0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 SetSection;                                        // 0x2FB0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class FName>                           AnimSlotList;                                      // 0x2FC0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          DebugDraw;                                         // 0x2FD0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CheckBlendAction;                                  // 0x2FD1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CheckBlendMovingAction;                            // 0x2FD2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CheckBlendReaction;                                // 0x2FD3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD4[0x4];                                     // 0x2FD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           Character;                                         // 0x2FD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentMaxSpeed;                                   // 0x2FE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        KidanAlpha_BattleToDash_;                          // 0x2FE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        XMinusSpeed;                                       // 0x2FF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        YMinusSpeed;                                       // 0x2FF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ZMinusSpeed;                                       // 0x3000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        KidanBlendAlpha_BattleToDash_;                     // 0x3008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            KidanBattleToDashCurve;                            // 0x3010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               TargetDeltaRotator;                                // 0x3018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UObject*                                ReleseSectionAnimMontage;                          // 0x3030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReleseSection;                                     // 0x3038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	double                                        DeltaTimeX;                                        // 0x3048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MovingActionBlendAlpha;                            // 0x3050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NearModeSpeed;                                     // 0x3058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAcc_;                                            // 0x3060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInAir_;                                          // 0x3061(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratReactionDirection                       ReactionDirection;                                 // 0x3062(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3063[0x5];                                     // 0x3063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ReactionDirectionBlendInTime;                      // 0x3068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ReactionDirectionBlendOutTime;                     // 0x3070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BodyPitchAngle;                                    // 0x3078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BodyPitchEnabled;                                  // 0x3080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3081[0x7];                                     // 0x3081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AnimTypeName;                                      // 0x3088(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          ____oXMMinusK;                                     // 0x3098(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3099[0x7];                                     // 0x3099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FKoratActionDataList>           ____oXM_____;                                      // 0x30A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        MaxSpeed;                                          // 0x30B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __________MinusK;                                  // 0x30B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30B9[0x3];                                     // 0x30B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratActionDataList                   _______________;                                   // 0x30BC(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C4[0x4];                                     // 0x30C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LocalVelocity;                                     // 0x30C8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddDebugActionString(const EKoratAnimType InAnimType);
	void AnimGraph(const struct FPoseLink& InPose, struct FPoseLink* AnimGraph_0);
	void AnimNotifyMontageSetNextSection(class UAnimSequenceBase* AnimSequence, const class FString& NextSection, const class FString& SetSection_0);
	void AnimNotifyMontageStop(class UAnimSequenceBase* AnimSequence);
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX_0);
	void DebugPrint();
	void DrawDebugPlayMontage();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Sub_Action_AnimGraphNode_BlendListByBool_4D9A01484BC91232A502BBBB0D8301EB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Sub_Action_AnimGraphNode_BlendListByEnum_CBF8283C425A492BD794AB9AA9BF1F80();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Sub_Action_AnimGraphNode_ModifyBone_02755DD24908BA832FCC2AAACE53355B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Sub_Action_AnimGraphNode_ModifyBone_2FBE79F24ADA8F9B48ADF096D56049DA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Sub_Action_AnimGraphNode_TwoWayBlend_201960014A63D7ADA4263FB7B3EF36CB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Sub_Action_AnimGraphNode_TwoWayBlend_23A2DA4B48E3DC0A2CF0E8BB25FB9D60();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Sub_Action_AnimGraphNode_TwoWayBlend_24A062E147571BFD131BCD80E9CD45EC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Sub_Action_AnimGraphNode_TwoWayBlend_3E74F62E44B76ACE708575BC3CA3B3BC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Sub_Action_AnimGraphNode_TwoWayBlend_57915D1C44A79158898276A0E3D27070();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Sub_Action_AnimGraphNode_TwoWayBlend_9052C3034BBF6FFE91523FA7D99A75B3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Sub_Action_AnimGraphNode_TwoWayBlend_B9DFE53744EFAFBCB3AE2C93AA32D637();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Sub_Action_AnimGraphNode_TwoWayBlend_D7EF156D442C77A1367E6C9B3F8D93A4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Sub_Action_AnimGraphNode_TwoWayBlend_E1698E8A4C609C901A8CACACBD59B995();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Sub_Action_AnimGraphNode_TwoWayBlend_FADB63DD401FD6972D7ACBBBCB4CA4B0();
	void ExecuteUbergraph_ABP_Sub_Action(int32 EntryPoint);
	void GetAnimationParameter();
	void GetDebugActionString(class FString* ActionString);
	void GetSubActionAnimInstance(class UAnimInstance** SubActionAnimInstance);
	void GetSubRequestMontageAnimInstance(class UABP_Sub_RequestMontage_C** SubrequestMontageAnimInstance);
	class FString RecieveCrateDebugActionString();
	void ReflectRequestReactionDirection();
	void SetActionBlendAlpha(double ActionBlendAlpha_0);
	void SetMovingActionBlendAlpha(double MovingActionBlendAlpha_0);
	void SetReactionDirection(EKoratReactionDirection InReactionDirection);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Sub_Action_C">();
	}
	static class UABP_Sub_Action_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Sub_Action_C>();
	}
};
static_assert(alignof(UABP_Sub_Action_C) == 0x000010, "Wrong alignment on UABP_Sub_Action_C");
static_assert(sizeof(UABP_Sub_Action_C) == 0x0030E0, "Wrong size on UABP_Sub_Action_C");
static_assert(offsetof(UABP_Sub_Action_C, UberGraphFrame) == 0x0003C0, "Member 'UABP_Sub_Action_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, __AnimBlueprintMutables) == 0x0003C8, "Member 'UABP_Sub_Action_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimBlueprintExtension_Tag) == 0x0003E8, "Member 'UABP_Sub_Action_C::AnimBlueprintExtension_Tag' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimBlueprintExtension_PropertyAccess) == 0x0003F0, "Member 'UABP_Sub_Action_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimBlueprintExtension_Base) == 0x0003F8, "Member 'UABP_Sub_Action_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_Slot_26) == 0x000400, "Member 'UABP_Sub_Action_C::AnimGraphNode_Slot_26' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_44) == 0x000448, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_44' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_43) == 0x000470, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_43' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_Slot_25) == 0x000498, "Member 'UABP_Sub_Action_C::AnimGraphNode_Slot_25' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_BlendListByBool_3) == 0x0004E0, "Member 'UABP_Sub_Action_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_SaveCachedPose_9) == 0x000528, "Member 'UABP_Sub_Action_C::AnimGraphNode_SaveCachedPose_9' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_Slot_24) == 0x000630, "Member 'UABP_Sub_Action_C::AnimGraphNode_Slot_24' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_42) == 0x000678, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_42' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_Slot_23) == 0x0006A0, "Member 'UABP_Sub_Action_C::AnimGraphNode_Slot_23' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_41) == 0x0006E8, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_41' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_40) == 0x000710, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_40' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_39) == 0x000738, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_39' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_38) == 0x000760, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_38' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_Slot_22) == 0x000788, "Member 'UABP_Sub_Action_C::AnimGraphNode_Slot_22' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_37) == 0x0007D0, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_37' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_Slot_21) == 0x0007F8, "Member 'UABP_Sub_Action_C::AnimGraphNode_Slot_21' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_36) == 0x000840, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_36' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_Slot_20) == 0x000868, "Member 'UABP_Sub_Action_C::AnimGraphNode_Slot_20' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_35) == 0x0008B0, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_35' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_Slot_19) == 0x0008D8, "Member 'UABP_Sub_Action_C::AnimGraphNode_Slot_19' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_BlendListByBool_2) == 0x000920, "Member 'UABP_Sub_Action_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_Slot_18) == 0x000968, "Member 'UABP_Sub_Action_C::AnimGraphNode_Slot_18' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_TwoWayBlend_10) == 0x0009B0, "Member 'UABP_Sub_Action_C::AnimGraphNode_TwoWayBlend_10' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_34) == 0x000A78, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_34' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_33) == 0x000AA0, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_33' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_Slot_17) == 0x000AC8, "Member 'UABP_Sub_Action_C::AnimGraphNode_Slot_17' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_32) == 0x000B10, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_32' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_Slot_16) == 0x000B38, "Member 'UABP_Sub_Action_C::AnimGraphNode_Slot_16' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_31) == 0x000B80, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_31' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_Slot_15) == 0x000BA8, "Member 'UABP_Sub_Action_C::AnimGraphNode_Slot_15' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_Slot_14) == 0x000BF0, "Member 'UABP_Sub_Action_C::AnimGraphNode_Slot_14' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_30) == 0x000C38, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_30' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_29) == 0x000C60, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_29' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_SaveCachedPose_8) == 0x000C88, "Member 'UABP_Sub_Action_C::AnimGraphNode_SaveCachedPose_8' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_TwoWayBlend_9) == 0x000D90, "Member 'UABP_Sub_Action_C::AnimGraphNode_TwoWayBlend_9' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_TwoWayBlend_8) == 0x000E58, "Member 'UABP_Sub_Action_C::AnimGraphNode_TwoWayBlend_8' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_TwoWayBlend_7) == 0x000F20, "Member 'UABP_Sub_Action_C::AnimGraphNode_TwoWayBlend_7' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_TwoWayBlend_6) == 0x000FE8, "Member 'UABP_Sub_Action_C::AnimGraphNode_TwoWayBlend_6' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_TwoWayBlend_5) == 0x0010B0, "Member 'UABP_Sub_Action_C::AnimGraphNode_TwoWayBlend_5' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_TwoWayBlend_4) == 0x001178, "Member 'UABP_Sub_Action_C::AnimGraphNode_TwoWayBlend_4' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_TwoWayBlend_3) == 0x001240, "Member 'UABP_Sub_Action_C::AnimGraphNode_TwoWayBlend_3' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_TwoWayBlend_2) == 0x001308, "Member 'UABP_Sub_Action_C::AnimGraphNode_TwoWayBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_TwoWayBlend_1) == 0x0013D0, "Member 'UABP_Sub_Action_C::AnimGraphNode_TwoWayBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_TwoWayBlend) == 0x001498, "Member 'UABP_Sub_Action_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_SaveCachedPose_7) == 0x001560, "Member 'UABP_Sub_Action_C::AnimGraphNode_SaveCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_28) == 0x001668, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_28' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_LayeredBoneBlend_3) == 0x001690, "Member 'UABP_Sub_Action_C::AnimGraphNode_LayeredBoneBlend_3' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_27) == 0x001770, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_27' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_BlendListByBool_1) == 0x001798, "Member 'UABP_Sub_Action_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_26) == 0x0017E0, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_26' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_25) == 0x001808, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_25' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_LayeredBoneBlend_2) == 0x001830, "Member 'UABP_Sub_Action_C::AnimGraphNode_LayeredBoneBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_24) == 0x001910, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_24' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_Slot_13) == 0x001938, "Member 'UABP_Sub_Action_C::AnimGraphNode_Slot_13' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_23) == 0x001980, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_23' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_SaveCachedPose_6) == 0x0019A8, "Member 'UABP_Sub_Action_C::AnimGraphNode_SaveCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_22) == 0x001AB0, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_22' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_BlendListByEnum) == 0x001AD8, "Member 'UABP_Sub_Action_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_Slot_12) == 0x001B20, "Member 'UABP_Sub_Action_C::AnimGraphNode_Slot_12' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_21) == 0x001B68, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_21' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_Slot_11) == 0x001B90, "Member 'UABP_Sub_Action_C::AnimGraphNode_Slot_11' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_20) == 0x001BD8, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_20' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_Slot_10) == 0x001C00, "Member 'UABP_Sub_Action_C::AnimGraphNode_Slot_10' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_19) == 0x001C48, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_19' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_Slot_9) == 0x001C70, "Member 'UABP_Sub_Action_C::AnimGraphNode_Slot_9' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_18) == 0x001CB8, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_18' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_Slot_8) == 0x001CE0, "Member 'UABP_Sub_Action_C::AnimGraphNode_Slot_8' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_17) == 0x001D28, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_17' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_Slot_7) == 0x001D50, "Member 'UABP_Sub_Action_C::AnimGraphNode_Slot_7' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_16) == 0x001D98, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_16' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_Slot_6) == 0x001DC0, "Member 'UABP_Sub_Action_C::AnimGraphNode_Slot_6' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_15) == 0x001E08, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_15' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_Slot_5) == 0x001E30, "Member 'UABP_Sub_Action_C::AnimGraphNode_Slot_5' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_14) == 0x001E78, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_14' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_Slot_4) == 0x001EA0, "Member 'UABP_Sub_Action_C::AnimGraphNode_Slot_4' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_13) == 0x001EE8, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_13' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_Slot_3) == 0x001F10, "Member 'UABP_Sub_Action_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_12) == 0x001F58, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_12' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_Slot_2) == 0x001F80, "Member 'UABP_Sub_Action_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_11) == 0x001FC8, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_11' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_Slot_1) == 0x001FF0, "Member 'UABP_Sub_Action_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_10) == 0x002038, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_10' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_SaveCachedPose_5) == 0x002060, "Member 'UABP_Sub_Action_C::AnimGraphNode_SaveCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_LayeredBoneBlend_1) == 0x002168, "Member 'UABP_Sub_Action_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_9) == 0x002248, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_9' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_LayeredBoneBlend) == 0x002270, "Member 'UABP_Sub_Action_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_SaveCachedPose_4) == 0x002350, "Member 'UABP_Sub_Action_C::AnimGraphNode_SaveCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_SubInput) == 0x002458, "Member 'UABP_Sub_Action_C::AnimGraphNode_SubInput' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_8) == 0x002520, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_BlendListByBool) == 0x002548, "Member 'UABP_Sub_Action_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_Slot) == 0x002590, "Member 'UABP_Sub_Action_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_SaveCachedPose_3) == 0x0025D8, "Member 'UABP_Sub_Action_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_7) == 0x0026E0, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_6) == 0x002708, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_SaveCachedPose_2) == 0x002730, "Member 'UABP_Sub_Action_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_5) == 0x002838, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_SaveCachedPose_1) == 0x002860, "Member 'UABP_Sub_Action_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_4) == 0x002968, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_3) == 0x002990, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_2) == 0x0029B8, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_SaveCachedPose) == 0x0029E0, "Member 'UABP_Sub_Action_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose_1) == 0x002AE8, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_UseCachedPose) == 0x002B10, "Member 'UABP_Sub_Action_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_CopyBone) == 0x002B38, "Member 'UABP_Sub_Action_C::AnimGraphNode_CopyBone' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_LocalToComponentSpace_1) == 0x002C28, "Member 'UABP_Sub_Action_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x002C48, "Member 'UABP_Sub_Action_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_ModifyBone_1) == 0x002C68, "Member 'UABP_Sub_Action_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_ModifyBone) == 0x002D90, "Member 'UABP_Sub_Action_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_Root) == 0x002EB8, "Member 'UABP_Sub_Action_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_LocalToComponentSpace) == 0x002ED8, "Member 'UABP_Sub_Action_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimGraphNode_ComponentToLocalSpace) == 0x002EF8, "Member 'UABP_Sub_Action_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, LocomotionComponent) == 0x002F18, "Member 'UABP_Sub_Action_C::LocomotionComponent' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, Speed) == 0x002F20, "Member 'UABP_Sub_Action_C::Speed' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, XYSpeed) == 0x002F28, "Member 'UABP_Sub_Action_C::XYSpeed' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, ZSpeed) == 0x002F30, "Member 'UABP_Sub_Action_C::ZSpeed' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, LastVelocityRot) == 0x002F38, "Member 'UABP_Sub_Action_C::LastVelocityRot' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, CharacterRot) == 0x002F50, "Member 'UABP_Sub_Action_C::CharacterRot' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, DirectionY) == 0x002F68, "Member 'UABP_Sub_Action_C::DirectionY' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, DirectionZ) == 0x002F70, "Member 'UABP_Sub_Action_C::DirectionZ' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, NearMoveAlpha) == 0x002F78, "Member 'UABP_Sub_Action_C::NearMoveAlpha' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, BattleMoveAlpha) == 0x002F80, "Member 'UABP_Sub_Action_C::BattleMoveAlpha' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, ActionBlendAlpha) == 0x002F88, "Member 'UABP_Sub_Action_C::ActionBlendAlpha' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimMontage) == 0x002F90, "Member 'UABP_Sub_Action_C::AnimMontage' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimType) == 0x002F98, "Member 'UABP_Sub_Action_C::AnimType' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, NextSction) == 0x002FA0, "Member 'UABP_Sub_Action_C::NextSction' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, SetSection) == 0x002FB0, "Member 'UABP_Sub_Action_C::SetSection' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimSlotList) == 0x002FC0, "Member 'UABP_Sub_Action_C::AnimSlotList' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, DebugDraw) == 0x002FD0, "Member 'UABP_Sub_Action_C::DebugDraw' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, CheckBlendAction) == 0x002FD1, "Member 'UABP_Sub_Action_C::CheckBlendAction' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, CheckBlendMovingAction) == 0x002FD2, "Member 'UABP_Sub_Action_C::CheckBlendMovingAction' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, CheckBlendReaction) == 0x002FD3, "Member 'UABP_Sub_Action_C::CheckBlendReaction' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, Character) == 0x002FD8, "Member 'UABP_Sub_Action_C::Character' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, CurrentMaxSpeed) == 0x002FE0, "Member 'UABP_Sub_Action_C::CurrentMaxSpeed' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, KidanAlpha_BattleToDash_) == 0x002FE8, "Member 'UABP_Sub_Action_C::KidanAlpha_BattleToDash_' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, XMinusSpeed) == 0x002FF0, "Member 'UABP_Sub_Action_C::XMinusSpeed' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, YMinusSpeed) == 0x002FF8, "Member 'UABP_Sub_Action_C::YMinusSpeed' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, ZMinusSpeed) == 0x003000, "Member 'UABP_Sub_Action_C::ZMinusSpeed' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, KidanBlendAlpha_BattleToDash_) == 0x003008, "Member 'UABP_Sub_Action_C::KidanBlendAlpha_BattleToDash_' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, KidanBattleToDashCurve) == 0x003010, "Member 'UABP_Sub_Action_C::KidanBattleToDashCurve' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, TargetDeltaRotator) == 0x003018, "Member 'UABP_Sub_Action_C::TargetDeltaRotator' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, ReleseSectionAnimMontage) == 0x003030, "Member 'UABP_Sub_Action_C::ReleseSectionAnimMontage' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, ReleseSection) == 0x003038, "Member 'UABP_Sub_Action_C::ReleseSection' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, DeltaTimeX) == 0x003048, "Member 'UABP_Sub_Action_C::DeltaTimeX' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, MovingActionBlendAlpha) == 0x003050, "Member 'UABP_Sub_Action_C::MovingActionBlendAlpha' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, NearModeSpeed) == 0x003058, "Member 'UABP_Sub_Action_C::NearModeSpeed' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, IsAcc_) == 0x003060, "Member 'UABP_Sub_Action_C::IsAcc_' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, IsInAir_) == 0x003061, "Member 'UABP_Sub_Action_C::IsInAir_' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, ReactionDirection) == 0x003062, "Member 'UABP_Sub_Action_C::ReactionDirection' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, ReactionDirectionBlendInTime) == 0x003068, "Member 'UABP_Sub_Action_C::ReactionDirectionBlendInTime' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, ReactionDirectionBlendOutTime) == 0x003070, "Member 'UABP_Sub_Action_C::ReactionDirectionBlendOutTime' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, BodyPitchAngle) == 0x003078, "Member 'UABP_Sub_Action_C::BodyPitchAngle' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, BodyPitchEnabled) == 0x003080, "Member 'UABP_Sub_Action_C::BodyPitchEnabled' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, AnimTypeName) == 0x003088, "Member 'UABP_Sub_Action_C::AnimTypeName' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, ____oXMMinusK) == 0x003098, "Member 'UABP_Sub_Action_C::____oXMMinusK' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, ____oXM_____) == 0x0030A0, "Member 'UABP_Sub_Action_C::____oXM_____' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, MaxSpeed) == 0x0030B0, "Member 'UABP_Sub_Action_C::MaxSpeed' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, __________MinusK) == 0x0030B8, "Member 'UABP_Sub_Action_C::__________MinusK' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, _______________) == 0x0030BC, "Member 'UABP_Sub_Action_C::_______________' has a wrong offset!");
static_assert(offsetof(UABP_Sub_Action_C, LocalVelocity) == 0x0030C8, "Member 'UABP_Sub_Action_C::LocalVelocity' has a wrong offset!");

}

