#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PowerImpactGToNProcedure

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SS_structs.hpp"
#include "SS_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PowerImpactGToNProcedure.BP_PowerImpactGToNProcedure_C
// 0x0020 (0x0460 - 0x0440)
class ABP_PowerImpactGToNProcedure_C final : public ASSPowerImpactProcedureGtoN
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0440(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        MoveTime;                                          // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMyPlayerIs1P;                                     // 0x0458(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_PowerImpactGToNProcedure(int32 EntryPoint);
	void OnBattleImpactBreak();
	void OnBeginBattle();
	void OnBeginConclusion();
	void OnBeginFinish();
	void OnBeginGame();
	void OnBeginIntroduction();
	void OnChangedPhase(const EBattleImpactPhase InPhase);
	void OnChangePhase(EBattleImpactPhase NewParam);
	void OnChangePowerImpactRound(int32 InNextRound, ESSPowerImpactLevelSequenceType InSequenceType);
	void OnEnd();
	void OnIntroTimer();
	void OnTickConclusion(float DeltaTime);
	void OnTickGame(float DeltaTime);
	void OnTickIntroduction(float DeltaTime);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);

	void DebugDraw(float InDeltaT) const;
	EBattleImpactPhase GetNextPhase(EBattleImpactPhase InCurrentPhase) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PowerImpactGToNProcedure_C">();
	}
	static class ABP_PowerImpactGToNProcedure_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PowerImpactGToNProcedure_C>();
	}
};
static_assert(alignof(ABP_PowerImpactGToNProcedure_C) == 0x000010, "Wrong alignment on ABP_PowerImpactGToNProcedure_C");
static_assert(sizeof(ABP_PowerImpactGToNProcedure_C) == 0x000460, "Wrong size on ABP_PowerImpactGToNProcedure_C");
static_assert(offsetof(ABP_PowerImpactGToNProcedure_C, UberGraphFrame) == 0x000440, "Member 'ABP_PowerImpactGToNProcedure_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PowerImpactGToNProcedure_C, DefaultSceneRoot) == 0x000448, "Member 'ABP_PowerImpactGToNProcedure_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_PowerImpactGToNProcedure_C, MoveTime) == 0x000450, "Member 'ABP_PowerImpactGToNProcedure_C::MoveTime' has a wrong offset!");
static_assert(offsetof(ABP_PowerImpactGToNProcedure_C, bMyPlayerIs1P) == 0x000458, "Member 'ABP_PowerImpactGToNProcedure_C::bMyPlayerIs1P' has a wrong offset!");

}

