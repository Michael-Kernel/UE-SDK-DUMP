#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterLocomotionSubBurstSmash

#include "Basic.hpp"

#include "BP_CharacterLocomotionSubBurstSmash_classes.hpp"
#include "BP_CharacterLocomotionSubBurstSmash_parameters.hpp"


namespace SDK
{

// Function BP_CharacterLocomotionSubBurstSmash.BP_CharacterLocomotionSubBurstSmash_C.Check
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_CharacterLocomotionComponent_C*InLocomotionComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    CanStart                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubBurstSmash_C::Check(class UBP_CharacterLocomotionComponent_C* InLocomotionComponent, bool* CanStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubBurstSmash_C", "Check");

	Params::BP_CharacterLocomotionSubBurstSmash_C_Check Parms{};

	Parms.InLocomotionComponent = InLocomotionComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (CanStart != nullptr)
		*CanStart = Parms.CanStart;
}


// Function BP_CharacterLocomotionSubBurstSmash.BP_CharacterLocomotionSubBurstSmash_C.CheckAndStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_CharacterLocomotionComponent_C*InLocomotionComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    InInSkip                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsStarted                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubBurstSmash_C::CheckAndStart(class UBP_CharacterLocomotionComponent_C* InLocomotionComponent, bool InInSkip, bool* IsStarted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubBurstSmash_C", "CheckAndStart");

	Params::BP_CharacterLocomotionSubBurstSmash_C_CheckAndStart Parms{};

	Parms.InLocomotionComponent = InLocomotionComponent;
	Parms.InInSkip = InInSkip;

	UObject::ProcessEvent(Func, &Parms);

	if (IsStarted != nullptr)
		*IsStarted = Parms.IsStarted;
}


// Function BP_CharacterLocomotionSubBurstSmash.BP_CharacterLocomotionSubBurstSmash_C.ClearStatus
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterLocomotionSubBurstSmash_C::ClearStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubBurstSmash_C", "ClearStatus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterLocomotionSubBurstSmash.BP_CharacterLocomotionSubBurstSmash_C.GetInitZBurstDashBaseRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FRotator                         ___                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterLocomotionSubBurstSmash_C::GetInitZBurstDashBaseRotation(struct FRotator* ___)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubBurstSmash_C", "GetInitZBurstDashBaseRotation");

	Params::BP_CharacterLocomotionSubBurstSmash_C_GetInitZBurstDashBaseRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (___ != nullptr)
		*___ = std::move(Parms.___);
}


// Function BP_CharacterLocomotionSubBurstSmash.BP_CharacterLocomotionSubBurstSmash_C.GetLocomotionDetailStatus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKoratCharacterLocomotionDetailStatus   LocomotionDetailStatus                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubBurstSmash_C::GetLocomotionDetailStatus(EKoratCharacterLocomotionDetailStatus* LocomotionDetailStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubBurstSmash_C", "GetLocomotionDetailStatus");

	Params::BP_CharacterLocomotionSubBurstSmash_C_GetLocomotionDetailStatus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LocomotionDetailStatus != nullptr)
		*LocomotionDetailStatus = Parms.LocomotionDetailStatus;
}


// Function BP_CharacterLocomotionSubBurstSmash.BP_CharacterLocomotionSubBurstSmash_C.GetRunningAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratActionDataList             RunningAction                                          (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubBurstSmash_C::GetRunningAction(struct FKoratActionDataList* RunningAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubBurstSmash_C", "GetRunningAction");

	Params::BP_CharacterLocomotionSubBurstSmash_C_GetRunningAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RunningAction != nullptr)
		*RunningAction = std::move(Parms.RunningAction);
}


// Function BP_CharacterLocomotionSubBurstSmash.BP_CharacterLocomotionSubBurstSmash_C.GetRunningSection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             RunningSection                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubBurstSmash_C::GetRunningSection(class FName* RunningSection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubBurstSmash_C", "GetRunningSection");

	Params::BP_CharacterLocomotionSubBurstSmash_C_GetRunningSection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RunningSection != nullptr)
		*RunningSection = Parms.RunningSection;
}


// Function BP_CharacterLocomotionSubBurstSmash.BP_CharacterLocomotionSubBurstSmash_C.IsEnableAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnable                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubBurstSmash_C::IsEnableAction(bool* IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubBurstSmash_C", "IsEnableAction");

	Params::BP_CharacterLocomotionSubBurstSmash_C_IsEnableAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnable != nullptr)
		*IsEnable = Parms.IsEnable;
}


// Function BP_CharacterLocomotionSubBurstSmash.BP_CharacterLocomotionSubBurstSmash_C.Start
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_CharacterLocomotionComponent_C*InLocomotionComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    InInSkip                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubBurstSmash_C::Start(class UBP_CharacterLocomotionComponent_C* InLocomotionComponent, bool InInSkip, bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubBurstSmash_C", "Start");

	Params::BP_CharacterLocomotionSubBurstSmash_C_Start Parms{};

	Parms.InLocomotionComponent = InLocomotionComponent;
	Parms.InInSkip = InInSkip;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BP_CharacterLocomotionSubBurstSmash.BP_CharacterLocomotionSubBurstSmash_C.Update
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_CharacterLocomotionComponent_C*InLocomotionComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// ECharacterLocomotionEventType           InEventType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InDeltaSeconds                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubBurstSmash_C::Update(class UBP_CharacterLocomotionComponent_C* InLocomotionComponent, ECharacterLocomotionEventType InEventType, double InDeltaSeconds, bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubBurstSmash_C", "Update");

	Params::BP_CharacterLocomotionSubBurstSmash_C_Update Parms{};

	Parms.InLocomotionComponent = InLocomotionComponent;
	Parms.InEventType = InEventType;
	Parms.InDeltaSeconds = InDeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BP_CharacterLocomotionSubBurstSmash.BP_CharacterLocomotionSubBurstSmash_C.ZBurstDash INUpdate
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterLocomotionSubBurstSmash_C::ZBurstDash_INUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubBurstSmash_C", "ZBurstDash INUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterLocomotionSubBurstSmash.BP_CharacterLocomotionSubBurstSmash_C.ZBurstDash LPUpdate
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterLocomotionSubBurstSmash_C::ZBurstDash_LPUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubBurstSmash_C", "ZBurstDash LPUpdate");

	UObject::ProcessEvent(Func, nullptr);
}

}

