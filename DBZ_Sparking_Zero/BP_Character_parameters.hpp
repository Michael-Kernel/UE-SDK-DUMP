#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Character

#include "Basic.hpp"

#include "SS_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "FRequestAnimData_structs.hpp"
#include "EKoratCharacterEffectColorSetDataEnum_structs.hpp"
#include "EBattleKey_structs.hpp"


namespace SDK::Params
{

// Function BP_Character.BP_Character_C.Add Debug Draw Blow Param
// 0x0030 (0x0030 - 0x0000)
struct BP_Character_C_Add_Debug_Draw_Blow_Param final
{
public:
	struct FVector                                InLocation;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InDrawType;                                        // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        InHitTime;                                         // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InDrawDuration;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_Add_Debug_Draw_Blow_Param) == 0x000008, "Wrong alignment on BP_Character_C_Add_Debug_Draw_Blow_Param");
static_assert(sizeof(BP_Character_C_Add_Debug_Draw_Blow_Param) == 0x000030, "Wrong size on BP_Character_C_Add_Debug_Draw_Blow_Param");
static_assert(offsetof(BP_Character_C_Add_Debug_Draw_Blow_Param, InLocation) == 0x000000, "Member 'BP_Character_C_Add_Debug_Draw_Blow_Param::InLocation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_Add_Debug_Draw_Blow_Param, InDrawType) == 0x000018, "Member 'BP_Character_C_Add_Debug_Draw_Blow_Param::InDrawType' has a wrong offset!");
static_assert(offsetof(BP_Character_C_Add_Debug_Draw_Blow_Param, InHitTime) == 0x000020, "Member 'BP_Character_C_Add_Debug_Draw_Blow_Param::InHitTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_Add_Debug_Draw_Blow_Param, InDrawDuration) == 0x000028, "Member 'BP_Character_C_Add_Debug_Draw_Blow_Param::InDrawDuration' has a wrong offset!");

// Function BP_Character.BP_Character_C.AddCharacterMovementInput
// 0x0020 (0x0020 - 0x0000)
struct BP_Character_C_AddCharacterMovementInput final
{
public:
	struct FVector                                WorldDirection;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Value;                                             // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_AddCharacterMovementInput) == 0x000008, "Wrong alignment on BP_Character_C_AddCharacterMovementInput");
static_assert(sizeof(BP_Character_C_AddCharacterMovementInput) == 0x000020, "Wrong size on BP_Character_C_AddCharacterMovementInput");
static_assert(offsetof(BP_Character_C_AddCharacterMovementInput, WorldDirection) == 0x000000, "Member 'BP_Character_C_AddCharacterMovementInput::WorldDirection' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AddCharacterMovementInput, Value) == 0x000018, "Member 'BP_Character_C_AddCharacterMovementInput::Value' has a wrong offset!");

// Function BP_Character.BP_Character_C.AddChildDashRoute
// 0x0080 (0x0080 - 0x0000)
struct BP_Character_C_AddChildDashRoute final
{
public:
	class AActor*                                 DashRouteActor;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0010(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UChildActorComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_AddChildDashRoute) == 0x000010, "Wrong alignment on BP_Character_C_AddChildDashRoute");
static_assert(sizeof(BP_Character_C_AddChildDashRoute) == 0x000080, "Wrong size on BP_Character_C_AddChildDashRoute");
static_assert(offsetof(BP_Character_C_AddChildDashRoute, DashRouteActor) == 0x000000, "Member 'BP_Character_C_AddChildDashRoute::DashRouteActor' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AddChildDashRoute, Temp_struct_Variable) == 0x000010, "Member 'BP_Character_C_AddChildDashRoute::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AddChildDashRoute, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_Character_C_AddChildDashRoute::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AddChildDashRoute, CallFunc_AddComponent_ReturnValue) == 0x000078, "Member 'BP_Character_C_AddChildDashRoute::CallFunc_AddComponent_ReturnValue' has a wrong offset!");

// Function BP_Character.BP_Character_C.AddCurrentActionElapsedTime
// 0x0010 (0x0010 - 0x0000)
struct BP_Character_C_AddCurrentActionElapsedTime final
{
public:
	double                                        InElapsedTime;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_AddCurrentActionElapsedTime) == 0x000008, "Wrong alignment on BP_Character_C_AddCurrentActionElapsedTime");
static_assert(sizeof(BP_Character_C_AddCurrentActionElapsedTime) == 0x000010, "Wrong size on BP_Character_C_AddCurrentActionElapsedTime");
static_assert(offsetof(BP_Character_C_AddCurrentActionElapsedTime, InElapsedTime) == 0x000000, "Member 'BP_Character_C_AddCurrentActionElapsedTime::InElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AddCurrentActionElapsedTime, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_Character_C_AddCurrentActionElapsedTime::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_Character.BP_Character_C.AddHitBack
// 0x03B8 (0x03B8 - 0x0000)
struct BP_Character_C_AddHitBack final
{
public:
	struct FRotator                               InHitBackRotation;                                 // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FKoratHitBackMovementData              InHitBackMovementData;                             // 0x0018(0x02E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FKoratActionDataList                   InAction;                                          // 0x02F8(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0300(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratCharacterMovementComponent*       MovementComponent;                                 // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TArray<struct FKoratActionDataList>           K2Node_MakeArray_Array;                            // 0x0310(0x0010)(ConstParm, ReferenceParm)
	struct FKoratActionDataList                   CallFunc_GetCurrentAction_OutAction;               // 0x0320(0x0008)(NoDestructor, HasGetValueTypeHash)
	TArray<struct FKoratActionDataList>           K2Node_MakeArray_Array_1;                          // 0x0328(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x033A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x033B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0350(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0368(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UKoratCharacterMovementComponent*       K2Node_DynamicCast_AsKorat_Character_Movement_Component; // 0x0380(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast;     // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_VectorFloat_B_ImplicitCast;      // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxMovementActDeceleration_ImplicitCast; // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_AddHitBack) == 0x000008, "Wrong alignment on BP_Character_C_AddHitBack");
static_assert(sizeof(BP_Character_C_AddHitBack) == 0x0003B8, "Wrong size on BP_Character_C_AddHitBack");
static_assert(offsetof(BP_Character_C_AddHitBack, InHitBackRotation) == 0x000000, "Member 'BP_Character_C_AddHitBack::InHitBackRotation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AddHitBack, InHitBackMovementData) == 0x000018, "Member 'BP_Character_C_AddHitBack::InHitBackMovementData' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AddHitBack, InAction) == 0x0002F8, "Member 'BP_Character_C_AddHitBack::InAction' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AddHitBack, ReturnValue) == 0x000300, "Member 'BP_Character_C_AddHitBack::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AddHitBack, MovementComponent) == 0x000308, "Member 'BP_Character_C_AddHitBack::MovementComponent' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AddHitBack, K2Node_MakeArray_Array) == 0x000310, "Member 'BP_Character_C_AddHitBack::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AddHitBack, CallFunc_GetCurrentAction_OutAction) == 0x000320, "Member 'BP_Character_C_AddHitBack::CallFunc_GetCurrentAction_OutAction' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AddHitBack, K2Node_MakeArray_Array_1) == 0x000328, "Member 'BP_Character_C_AddHitBack::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AddHitBack, CallFunc_Array_Contains_ReturnValue) == 0x000338, "Member 'BP_Character_C_AddHitBack::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AddHitBack, CallFunc_Array_Contains_ReturnValue_1) == 0x000339, "Member 'BP_Character_C_AddHitBack::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AddHitBack, CallFunc_BooleanAND_ReturnValue) == 0x00033A, "Member 'BP_Character_C_AddHitBack::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AddHitBack, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x00033B, "Member 'BP_Character_C_AddHitBack::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AddHitBack, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000340, "Member 'BP_Character_C_AddHitBack::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AddHitBack, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000348, "Member 'BP_Character_C_AddHitBack::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AddHitBack, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000350, "Member 'BP_Character_C_AddHitBack::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AddHitBack, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000368, "Member 'BP_Character_C_AddHitBack::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AddHitBack, K2Node_DynamicCast_AsKorat_Character_Movement_Component) == 0x000380, "Member 'BP_Character_C_AddHitBack::K2Node_DynamicCast_AsKorat_Character_Movement_Component' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AddHitBack, K2Node_DynamicCast_bSuccess) == 0x000388, "Member 'BP_Character_C_AddHitBack::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AddHitBack, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000390, "Member 'BP_Character_C_AddHitBack::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AddHitBack, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast) == 0x000398, "Member 'BP_Character_C_AddHitBack::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AddHitBack, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x0003A0, "Member 'BP_Character_C_AddHitBack::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AddHitBack, CallFunc_Multiply_VectorFloat_B_ImplicitCast) == 0x0003A8, "Member 'BP_Character_C_AddHitBack::CallFunc_Multiply_VectorFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AddHitBack, K2Node_VariableSet_MaxMovementActDeceleration_ImplicitCast) == 0x0003B0, "Member 'BP_Character_C_AddHitBack::K2Node_VariableSet_MaxMovementActDeceleration_ImplicitCast' has a wrong offset!");

// Function BP_Character.BP_Character_C.AddHitStop
// 0x00D0 (0x00D0 - 0x0000)
struct BP_Character_C_AddHitStop final
{
public:
	struct FKoratHitStopData                      InHitStopData;                                     // 0x0000(0x0014)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	uint8                                         Pad_14[0xC];                                       // 0x0014(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratHitEffectAfterHitStop            InHitEffectAfterHitStop;                           // 0x0020(0x00A0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          ReturnValue;                                       // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetHitStopOpponent_SetHitStop;            // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_AddHitStop) == 0x000010, "Wrong alignment on BP_Character_C_AddHitStop");
static_assert(sizeof(BP_Character_C_AddHitStop) == 0x0000D0, "Wrong size on BP_Character_C_AddHitStop");
static_assert(offsetof(BP_Character_C_AddHitStop, InHitStopData) == 0x000000, "Member 'BP_Character_C_AddHitStop::InHitStopData' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AddHitStop, InHitEffectAfterHitStop) == 0x000020, "Member 'BP_Character_C_AddHitStop::InHitEffectAfterHitStop' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AddHitStop, ReturnValue) == 0x0000C0, "Member 'BP_Character_C_AddHitStop::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AddHitStop, CallFunc_IsValid_ReturnValue) == 0x0000C1, "Member 'BP_Character_C_AddHitStop::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AddHitStop, CallFunc_SetHitStopOpponent_SetHitStop) == 0x0000C2, "Member 'BP_Character_C_AddHitStop::CallFunc_SetHitStopOpponent_SetHitStop' has a wrong offset!");

// Function BP_Character.BP_Character_C.AnimNotifyInputParam
// 0x0001 (0x0001 - 0x0000)
struct BP_Character_C_AnimNotifyInputParam final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_AnimNotifyInputParam) == 0x000001, "Wrong alignment on BP_Character_C_AnimNotifyInputParam");
static_assert(sizeof(BP_Character_C_AnimNotifyInputParam) == 0x000001, "Wrong size on BP_Character_C_AnimNotifyInputParam");
static_assert(offsetof(BP_Character_C_AnimNotifyInputParam, Enable) == 0x000000, "Member 'BP_Character_C_AnimNotifyInputParam::Enable' has a wrong offset!");

// Function BP_Character.BP_Character_C.AutoSetCharacterMovementModeToIdle
// 0x0110 (0x0110 - 0x0000)
struct BP_Character_C_AutoSetCharacterMovementModeToIdle final
{
public:
	bool                                          InIsValidSetWalking;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSet;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 SetMovementMode_0;                                 // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 ResultSetMovementMode;                             // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ResultIsSet;                                       // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFindFloorResult                       CallFunc_GetFindFloor_FloorResult;                 // 0x0008(0x00F8)(NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CheckValidSetWalking_IsValid;             // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_Select_Default;                             // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_AutoSetCharacterMovementModeToIdle) == 0x000008, "Wrong alignment on BP_Character_C_AutoSetCharacterMovementModeToIdle");
static_assert(sizeof(BP_Character_C_AutoSetCharacterMovementModeToIdle) == 0x000110, "Wrong size on BP_Character_C_AutoSetCharacterMovementModeToIdle");
static_assert(offsetof(BP_Character_C_AutoSetCharacterMovementModeToIdle, InIsValidSetWalking) == 0x000000, "Member 'BP_Character_C_AutoSetCharacterMovementModeToIdle::InIsValidSetWalking' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AutoSetCharacterMovementModeToIdle, IsSet) == 0x000001, "Member 'BP_Character_C_AutoSetCharacterMovementModeToIdle::IsSet' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AutoSetCharacterMovementModeToIdle, SetMovementMode_0) == 0x000002, "Member 'BP_Character_C_AutoSetCharacterMovementModeToIdle::SetMovementMode_0' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AutoSetCharacterMovementModeToIdle, ResultSetMovementMode) == 0x000003, "Member 'BP_Character_C_AutoSetCharacterMovementModeToIdle::ResultSetMovementMode' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AutoSetCharacterMovementModeToIdle, ResultIsSet) == 0x000004, "Member 'BP_Character_C_AutoSetCharacterMovementModeToIdle::ResultIsSet' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AutoSetCharacterMovementModeToIdle, Temp_byte_Variable) == 0x000005, "Member 'BP_Character_C_AutoSetCharacterMovementModeToIdle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AutoSetCharacterMovementModeToIdle, Temp_byte_Variable_1) == 0x000006, "Member 'BP_Character_C_AutoSetCharacterMovementModeToIdle::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AutoSetCharacterMovementModeToIdle, Temp_bool_Variable) == 0x000007, "Member 'BP_Character_C_AutoSetCharacterMovementModeToIdle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AutoSetCharacterMovementModeToIdle, CallFunc_GetFindFloor_FloorResult) == 0x000008, "Member 'BP_Character_C_AutoSetCharacterMovementModeToIdle::CallFunc_GetFindFloor_FloorResult' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AutoSetCharacterMovementModeToIdle, CallFunc_CheckValidSetWalking_IsValid) == 0x000100, "Member 'BP_Character_C_AutoSetCharacterMovementModeToIdle::CallFunc_CheckValidSetWalking_IsValid' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AutoSetCharacterMovementModeToIdle, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000101, "Member 'BP_Character_C_AutoSetCharacterMovementModeToIdle::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AutoSetCharacterMovementModeToIdle, CallFunc_BooleanAND_ReturnValue) == 0x000102, "Member 'BP_Character_C_AutoSetCharacterMovementModeToIdle::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AutoSetCharacterMovementModeToIdle, K2Node_Select_Default) == 0x000103, "Member 'BP_Character_C_AutoSetCharacterMovementModeToIdle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AutoSetCharacterMovementModeToIdle, K2Node_SwitchEnum_CmpSuccess) == 0x000104, "Member 'BP_Character_C_AutoSetCharacterMovementModeToIdle::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_C_AutoSetCharacterMovementModeToIdle, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000108, "Member 'BP_Character_C_AutoSetCharacterMovementModeToIdle::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_Character.BP_Character_C.BattleKeyHold
// 0x0005 (0x0005 - 0x0000)
struct BP_Character_C_BattleKeyHold final
{
public:
	EKoratBattleKey                               InBattleKey;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESSFlowConditionsJudgmentType                 OutJudgment;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Condition;                                         // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESSFlowConditionsJudgmentType                 CallFunc_BattleKeyHoldImpl_OutJudgment;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_BattleKeyHold) == 0x000001, "Wrong alignment on BP_Character_C_BattleKeyHold");
static_assert(sizeof(BP_Character_C_BattleKeyHold) == 0x000005, "Wrong size on BP_Character_C_BattleKeyHold");
static_assert(offsetof(BP_Character_C_BattleKeyHold, InBattleKey) == 0x000000, "Member 'BP_Character_C_BattleKeyHold::InBattleKey' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyHold, OutJudgment) == 0x000001, "Member 'BP_Character_C_BattleKeyHold::OutJudgment' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyHold, Condition) == 0x000002, "Member 'BP_Character_C_BattleKeyHold::Condition' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyHold, CallFunc_BattleKeyHoldImpl_OutJudgment) == 0x000003, "Member 'BP_Character_C_BattleKeyHold::CallFunc_BattleKeyHoldImpl_OutJudgment' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyHold, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'BP_Character_C_BattleKeyHold::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_Character.BP_Character_C.BattleKeyPush
// 0x0005 (0x0005 - 0x0000)
struct BP_Character_C_BattleKeyPush final
{
public:
	EKoratBattleKey                               InBattleKey;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESSFlowConditionsJudgmentType                 OutJudgment;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Condition;                                         // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESSFlowConditionsJudgmentType                 CallFunc_BattleKeyPushImpl_OutJudgment;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_BattleKeyPush) == 0x000001, "Wrong alignment on BP_Character_C_BattleKeyPush");
static_assert(sizeof(BP_Character_C_BattleKeyPush) == 0x000005, "Wrong size on BP_Character_C_BattleKeyPush");
static_assert(offsetof(BP_Character_C_BattleKeyPush, InBattleKey) == 0x000000, "Member 'BP_Character_C_BattleKeyPush::InBattleKey' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyPush, OutJudgment) == 0x000001, "Member 'BP_Character_C_BattleKeyPush::OutJudgment' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyPush, Condition) == 0x000002, "Member 'BP_Character_C_BattleKeyPush::Condition' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyPush, CallFunc_BattleKeyPushImpl_OutJudgment) == 0x000003, "Member 'BP_Character_C_BattleKeyPush::CallFunc_BattleKeyPushImpl_OutJudgment' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyPush, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'BP_Character_C_BattleKeyPush::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_Character.BP_Character_C.BattleKeyRelease
// 0x0005 (0x0005 - 0x0000)
struct BP_Character_C_BattleKeyRelease final
{
public:
	EKoratBattleKey                               InBattleKey;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESSFlowConditionsJudgmentType                 OutJudgment;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Condition;                                         // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESSFlowConditionsJudgmentType                 CallFunc_BattleKeyReleaseImpl_OutJudgment;         // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_BattleKeyRelease) == 0x000001, "Wrong alignment on BP_Character_C_BattleKeyRelease");
static_assert(sizeof(BP_Character_C_BattleKeyRelease) == 0x000005, "Wrong size on BP_Character_C_BattleKeyRelease");
static_assert(offsetof(BP_Character_C_BattleKeyRelease, InBattleKey) == 0x000000, "Member 'BP_Character_C_BattleKeyRelease::InBattleKey' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyRelease, OutJudgment) == 0x000001, "Member 'BP_Character_C_BattleKeyRelease::OutJudgment' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyRelease, Condition) == 0x000002, "Member 'BP_Character_C_BattleKeyRelease::Condition' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyRelease, CallFunc_BattleKeyReleaseImpl_OutJudgment) == 0x000003, "Member 'BP_Character_C_BattleKeyRelease::CallFunc_BattleKeyReleaseImpl_OutJudgment' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyRelease, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'BP_Character_C_BattleKeyRelease::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_Character.BP_Character_C.BattleKeyTimeSincePush
// 0x0020 (0x0020 - 0x0000)
struct BP_Character_C_BattleKeyTimeSincePush final
{
public:
	EKoratBattleKey                               InBattleKey;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InTime;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratInequalitySignType                      InInequalitySign;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESSFlowConditionsJudgmentType                 OutJudgment;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SincePressedTime;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Condition;                                         // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESSFlowConditionsJudgmentType                 CallFunc_BattleKeyTimeSincePushImpl_OutJudgment;   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_BattleKeyTimeSincePush) == 0x000008, "Wrong alignment on BP_Character_C_BattleKeyTimeSincePush");
static_assert(sizeof(BP_Character_C_BattleKeyTimeSincePush) == 0x000020, "Wrong size on BP_Character_C_BattleKeyTimeSincePush");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSincePush, InBattleKey) == 0x000000, "Member 'BP_Character_C_BattleKeyTimeSincePush::InBattleKey' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSincePush, InTime) == 0x000004, "Member 'BP_Character_C_BattleKeyTimeSincePush::InTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSincePush, InInequalitySign) == 0x000008, "Member 'BP_Character_C_BattleKeyTimeSincePush::InInequalitySign' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSincePush, OutJudgment) == 0x000009, "Member 'BP_Character_C_BattleKeyTimeSincePush::OutJudgment' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSincePush, SincePressedTime) == 0x000010, "Member 'BP_Character_C_BattleKeyTimeSincePush::SincePressedTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSincePush, Condition) == 0x000018, "Member 'BP_Character_C_BattleKeyTimeSincePush::Condition' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSincePush, CallFunc_BattleKeyTimeSincePushImpl_OutJudgment) == 0x000019, "Member 'BP_Character_C_BattleKeyTimeSincePush::CallFunc_BattleKeyTimeSincePushImpl_OutJudgment' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSincePush, K2Node_SwitchEnum_CmpSuccess) == 0x00001A, "Member 'BP_Character_C_BattleKeyTimeSincePush::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_Character.BP_Character_C.BattleKeyTimeSincePushInAction
// 0x0020 (0x0020 - 0x0000)
struct BP_Character_C_BattleKeyTimeSincePushInAction final
{
public:
	EKoratBattleKey                               InBattleKey;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InTime;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratInequalitySignType                      InInequalitySign;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESSFlowConditionsJudgmentType                 OutJudgment;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Condition;                                         // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SincePressedTime;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESSFlowConditionsJudgmentType                 CallFunc_BattleKeyTimeSincePushInActionImpl_OutJudgment; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_BattleKeyTimeSincePushInAction) == 0x000008, "Wrong alignment on BP_Character_C_BattleKeyTimeSincePushInAction");
static_assert(sizeof(BP_Character_C_BattleKeyTimeSincePushInAction) == 0x000020, "Wrong size on BP_Character_C_BattleKeyTimeSincePushInAction");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSincePushInAction, InBattleKey) == 0x000000, "Member 'BP_Character_C_BattleKeyTimeSincePushInAction::InBattleKey' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSincePushInAction, InTime) == 0x000004, "Member 'BP_Character_C_BattleKeyTimeSincePushInAction::InTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSincePushInAction, InInequalitySign) == 0x000008, "Member 'BP_Character_C_BattleKeyTimeSincePushInAction::InInequalitySign' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSincePushInAction, OutJudgment) == 0x000009, "Member 'BP_Character_C_BattleKeyTimeSincePushInAction::OutJudgment' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSincePushInAction, Condition) == 0x00000A, "Member 'BP_Character_C_BattleKeyTimeSincePushInAction::Condition' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSincePushInAction, SincePressedTime) == 0x000010, "Member 'BP_Character_C_BattleKeyTimeSincePushInAction::SincePressedTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSincePushInAction, CallFunc_BattleKeyTimeSincePushInActionImpl_OutJudgment) == 0x000018, "Member 'BP_Character_C_BattleKeyTimeSincePushInAction::CallFunc_BattleKeyTimeSincePushInActionImpl_OutJudgment' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSincePushInAction, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'BP_Character_C_BattleKeyTimeSincePushInAction::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_Character.BP_Character_C.BattleKeyTimeSincePushInSection
// 0x0020 (0x0020 - 0x0000)
struct BP_Character_C_BattleKeyTimeSincePushInSection final
{
public:
	EKoratBattleKey                               InBattleKey;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InTime;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratInequalitySignType                      InInequalitySign;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESSFlowConditionsJudgmentType                 OutJudgment;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Condition;                                         // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SincePressedTime;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESSFlowConditionsJudgmentType                 CallFunc_BattleKeyTimeSincePushInSectionImpl_OutJudgment; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_BattleKeyTimeSincePushInSection) == 0x000008, "Wrong alignment on BP_Character_C_BattleKeyTimeSincePushInSection");
static_assert(sizeof(BP_Character_C_BattleKeyTimeSincePushInSection) == 0x000020, "Wrong size on BP_Character_C_BattleKeyTimeSincePushInSection");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSincePushInSection, InBattleKey) == 0x000000, "Member 'BP_Character_C_BattleKeyTimeSincePushInSection::InBattleKey' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSincePushInSection, InTime) == 0x000004, "Member 'BP_Character_C_BattleKeyTimeSincePushInSection::InTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSincePushInSection, InInequalitySign) == 0x000008, "Member 'BP_Character_C_BattleKeyTimeSincePushInSection::InInequalitySign' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSincePushInSection, OutJudgment) == 0x000009, "Member 'BP_Character_C_BattleKeyTimeSincePushInSection::OutJudgment' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSincePushInSection, Condition) == 0x00000A, "Member 'BP_Character_C_BattleKeyTimeSincePushInSection::Condition' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSincePushInSection, SincePressedTime) == 0x000010, "Member 'BP_Character_C_BattleKeyTimeSincePushInSection::SincePressedTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSincePushInSection, CallFunc_BattleKeyTimeSincePushInSectionImpl_OutJudgment) == 0x000018, "Member 'BP_Character_C_BattleKeyTimeSincePushInSection::CallFunc_BattleKeyTimeSincePushInSectionImpl_OutJudgment' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSincePushInSection, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'BP_Character_C_BattleKeyTimeSincePushInSection::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_Character.BP_Character_C.BattleKeyTimeSinceRelease
// 0x0020 (0x0020 - 0x0000)
struct BP_Character_C_BattleKeyTimeSinceRelease final
{
public:
	EKoratBattleKey                               InBattleKey;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InTime;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratInequalitySignType                      InInequalitySign;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESSFlowConditionsJudgmentType                 OutJudgment;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Condition;                                         // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SinceReleasedTime;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESSFlowConditionsJudgmentType                 CallFunc_BattleKeyTimeSinceReleasedImpl_OutJudgment; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_BattleKeyTimeSinceRelease) == 0x000008, "Wrong alignment on BP_Character_C_BattleKeyTimeSinceRelease");
static_assert(sizeof(BP_Character_C_BattleKeyTimeSinceRelease) == 0x000020, "Wrong size on BP_Character_C_BattleKeyTimeSinceRelease");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSinceRelease, InBattleKey) == 0x000000, "Member 'BP_Character_C_BattleKeyTimeSinceRelease::InBattleKey' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSinceRelease, InTime) == 0x000004, "Member 'BP_Character_C_BattleKeyTimeSinceRelease::InTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSinceRelease, InInequalitySign) == 0x000008, "Member 'BP_Character_C_BattleKeyTimeSinceRelease::InInequalitySign' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSinceRelease, OutJudgment) == 0x000009, "Member 'BP_Character_C_BattleKeyTimeSinceRelease::OutJudgment' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSinceRelease, Condition) == 0x00000A, "Member 'BP_Character_C_BattleKeyTimeSinceRelease::Condition' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSinceRelease, SinceReleasedTime) == 0x000010, "Member 'BP_Character_C_BattleKeyTimeSinceRelease::SinceReleasedTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSinceRelease, CallFunc_BattleKeyTimeSinceReleasedImpl_OutJudgment) == 0x000018, "Member 'BP_Character_C_BattleKeyTimeSinceRelease::CallFunc_BattleKeyTimeSinceReleasedImpl_OutJudgment' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSinceRelease, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'BP_Character_C_BattleKeyTimeSinceRelease::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_Character.BP_Character_C.BattleKeyTimeSinceReleaseInAction
// 0x0020 (0x0020 - 0x0000)
struct BP_Character_C_BattleKeyTimeSinceReleaseInAction final
{
public:
	EKoratBattleKey                               InBattleKey;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InTime;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratInequalitySignType                      InInequalitySign;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESSFlowConditionsJudgmentType                 OutJudgment;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Condition;                                         // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SinceReleasedTime;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESSFlowConditionsJudgmentType                 CallFunc_BattleKeyTimeSinceReleasedInActionImpl_OutJudgment; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_BattleKeyTimeSinceReleaseInAction) == 0x000008, "Wrong alignment on BP_Character_C_BattleKeyTimeSinceReleaseInAction");
static_assert(sizeof(BP_Character_C_BattleKeyTimeSinceReleaseInAction) == 0x000020, "Wrong size on BP_Character_C_BattleKeyTimeSinceReleaseInAction");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSinceReleaseInAction, InBattleKey) == 0x000000, "Member 'BP_Character_C_BattleKeyTimeSinceReleaseInAction::InBattleKey' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSinceReleaseInAction, InTime) == 0x000004, "Member 'BP_Character_C_BattleKeyTimeSinceReleaseInAction::InTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSinceReleaseInAction, InInequalitySign) == 0x000008, "Member 'BP_Character_C_BattleKeyTimeSinceReleaseInAction::InInequalitySign' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSinceReleaseInAction, OutJudgment) == 0x000009, "Member 'BP_Character_C_BattleKeyTimeSinceReleaseInAction::OutJudgment' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSinceReleaseInAction, Condition) == 0x00000A, "Member 'BP_Character_C_BattleKeyTimeSinceReleaseInAction::Condition' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSinceReleaseInAction, SinceReleasedTime) == 0x000010, "Member 'BP_Character_C_BattleKeyTimeSinceReleaseInAction::SinceReleasedTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSinceReleaseInAction, CallFunc_BattleKeyTimeSinceReleasedInActionImpl_OutJudgment) == 0x000018, "Member 'BP_Character_C_BattleKeyTimeSinceReleaseInAction::CallFunc_BattleKeyTimeSinceReleasedInActionImpl_OutJudgment' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSinceReleaseInAction, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'BP_Character_C_BattleKeyTimeSinceReleaseInAction::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_Character.BP_Character_C.BattleKeyTimeSinceReleaseInSection
// 0x0020 (0x0020 - 0x0000)
struct BP_Character_C_BattleKeyTimeSinceReleaseInSection final
{
public:
	EKoratBattleKey                               InBattleKey;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InTime;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratInequalitySignType                      InInequalitySign;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESSFlowConditionsJudgmentType                 OutJudgment;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Condition;                                         // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SinceReleasedTime;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESSFlowConditionsJudgmentType                 CallFunc_BattleKeyTimeSinceReleasedInSectionImpl_OutJudgment; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_BattleKeyTimeSinceReleaseInSection) == 0x000008, "Wrong alignment on BP_Character_C_BattleKeyTimeSinceReleaseInSection");
static_assert(sizeof(BP_Character_C_BattleKeyTimeSinceReleaseInSection) == 0x000020, "Wrong size on BP_Character_C_BattleKeyTimeSinceReleaseInSection");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSinceReleaseInSection, InBattleKey) == 0x000000, "Member 'BP_Character_C_BattleKeyTimeSinceReleaseInSection::InBattleKey' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSinceReleaseInSection, InTime) == 0x000004, "Member 'BP_Character_C_BattleKeyTimeSinceReleaseInSection::InTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSinceReleaseInSection, InInequalitySign) == 0x000008, "Member 'BP_Character_C_BattleKeyTimeSinceReleaseInSection::InInequalitySign' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSinceReleaseInSection, OutJudgment) == 0x000009, "Member 'BP_Character_C_BattleKeyTimeSinceReleaseInSection::OutJudgment' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSinceReleaseInSection, Condition) == 0x00000A, "Member 'BP_Character_C_BattleKeyTimeSinceReleaseInSection::Condition' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSinceReleaseInSection, SinceReleasedTime) == 0x000010, "Member 'BP_Character_C_BattleKeyTimeSinceReleaseInSection::SinceReleasedTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSinceReleaseInSection, CallFunc_BattleKeyTimeSinceReleasedInSectionImpl_OutJudgment) == 0x000018, "Member 'BP_Character_C_BattleKeyTimeSinceReleaseInSection::CallFunc_BattleKeyTimeSinceReleasedInSectionImpl_OutJudgment' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BattleKeyTimeSinceReleaseInSection, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'BP_Character_C_BattleKeyTimeSinceReleaseInSection::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_Character.BP_Character_C.BeginRotateToCenter
// 0x0010 (0x0010 - 0x0000)
struct BP_Character_C_BeginRotateToCenter final
{
public:
	double                                        TotalDuration;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_BeginRotateToCenter) == 0x000008, "Wrong alignment on BP_Character_C_BeginRotateToCenter");
static_assert(sizeof(BP_Character_C_BeginRotateToCenter) == 0x000010, "Wrong size on BP_Character_C_BeginRotateToCenter");
static_assert(offsetof(BP_Character_C_BeginRotateToCenter, TotalDuration) == 0x000000, "Member 'BP_Character_C_BeginRotateToCenter::TotalDuration' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BeginRotateToCenter, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000008, "Member 'BP_Character_C_BeginRotateToCenter::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");

// Function BP_Character.BP_Character_C.BlowChangeDown
// 0x0030 (0x0030 - 0x0000)
struct BP_Character_C_BlowChangeDown final
{
public:
	EKoratLocomotionState                         LocomotionStatus;                                  // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratCharacterMovementComponent*       K2Node_DynamicCast_AsKorat_Character_Movement_Component; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionSubBase_C*       CallFunc_GetLocomotionSub_SubInstance;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionSubBlow_C*       K2Node_DynamicCast_AsBP_Character_Locomotion_Sub_Blow; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_BlowChangeDown) == 0x000008, "Wrong alignment on BP_Character_C_BlowChangeDown");
static_assert(sizeof(BP_Character_C_BlowChangeDown) == 0x000030, "Wrong size on BP_Character_C_BlowChangeDown");
static_assert(offsetof(BP_Character_C_BlowChangeDown, LocomotionStatus) == 0x000000, "Member 'BP_Character_C_BlowChangeDown::LocomotionStatus' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BlowChangeDown, K2Node_DynamicCast_AsKorat_Character_Movement_Component) == 0x000008, "Member 'BP_Character_C_BlowChangeDown::K2Node_DynamicCast_AsKorat_Character_Movement_Component' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BlowChangeDown, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_Character_C_BlowChangeDown::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BlowChangeDown, CallFunc_GetLocomotionSub_SubInstance) == 0x000018, "Member 'BP_Character_C_BlowChangeDown::CallFunc_GetLocomotionSub_SubInstance' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BlowChangeDown, K2Node_DynamicCast_AsBP_Character_Locomotion_Sub_Blow) == 0x000020, "Member 'BP_Character_C_BlowChangeDown::K2Node_DynamicCast_AsBP_Character_Locomotion_Sub_Blow' has a wrong offset!");
static_assert(offsetof(BP_Character_C_BlowChangeDown, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_Character_C_BlowChangeDown::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_Character.BP_Character_C.CalcKnockBackVector
// 0x0250 (0x0250 - 0x0000)
struct BP_Character_C_CalcKnockBackVector final
{
public:
	double                                        VerticalAngle;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HorizontalAngle;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AngleToReduceTilt;                                 // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                YawRotateVector_0;                                 // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PitchRotateVector_0;                               // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                UpVector_0;                                        // 0x0048(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Pitch;                                             // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FRotateVector_0;                                   // 0x0068(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FRotateVector;                                     // 0x0080(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                YawRotateVector;                                   // 0x0098(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PitchRotateVector;                                 // 0x00B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                UpVector;                                          // 0x00C8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SideVector;                                        // 0x00E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetYawPitchFromVector_Yaw;                // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetYawPitchFromVector_Pitch;              // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetYawPitchFromVector_Yaw_1;              // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetYawPitchFromVector_Pitch_1;            // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_2;    // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x019B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_Pitch_ImplicitCast;             // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1;  // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_CalcKnockBackVector) == 0x000008, "Wrong alignment on BP_Character_C_CalcKnockBackVector");
static_assert(sizeof(BP_Character_C_CalcKnockBackVector) == 0x000250, "Wrong size on BP_Character_C_CalcKnockBackVector");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, VerticalAngle) == 0x000000, "Member 'BP_Character_C_CalcKnockBackVector::VerticalAngle' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, HorizontalAngle) == 0x000008, "Member 'BP_Character_C_CalcKnockBackVector::HorizontalAngle' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, AngleToReduceTilt) == 0x000010, "Member 'BP_Character_C_CalcKnockBackVector::AngleToReduceTilt' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, YawRotateVector_0) == 0x000018, "Member 'BP_Character_C_CalcKnockBackVector::YawRotateVector_0' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, PitchRotateVector_0) == 0x000030, "Member 'BP_Character_C_CalcKnockBackVector::PitchRotateVector_0' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, UpVector_0) == 0x000048, "Member 'BP_Character_C_CalcKnockBackVector::UpVector_0' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, Pitch) == 0x000060, "Member 'BP_Character_C_CalcKnockBackVector::Pitch' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, FRotateVector_0) == 0x000068, "Member 'BP_Character_C_CalcKnockBackVector::FRotateVector_0' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, FRotateVector) == 0x000080, "Member 'BP_Character_C_CalcKnockBackVector::FRotateVector' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, YawRotateVector) == 0x000098, "Member 'BP_Character_C_CalcKnockBackVector::YawRotateVector' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, PitchRotateVector) == 0x0000B0, "Member 'BP_Character_C_CalcKnockBackVector::PitchRotateVector' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, UpVector) == 0x0000C8, "Member 'BP_Character_C_CalcKnockBackVector::UpVector' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, SideVector) == 0x0000E0, "Member 'BP_Character_C_CalcKnockBackVector::SideVector' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000F8, "Member 'BP_Character_C_CalcKnockBackVector::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000100, "Member 'BP_Character_C_CalcKnockBackVector::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, CallFunc_GetYawPitchFromVector_Yaw) == 0x000104, "Member 'BP_Character_C_CalcKnockBackVector::CallFunc_GetYawPitchFromVector_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, CallFunc_GetYawPitchFromVector_Pitch) == 0x000108, "Member 'BP_Character_C_CalcKnockBackVector::CallFunc_GetYawPitchFromVector_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, CallFunc_MakeRotator_ReturnValue) == 0x000110, "Member 'BP_Character_C_CalcKnockBackVector::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000128, "Member 'BP_Character_C_CalcKnockBackVector::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, CallFunc_Abs_ReturnValue) == 0x000140, "Member 'BP_Character_C_CalcKnockBackVector::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000148, "Member 'BP_Character_C_CalcKnockBackVector::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, CallFunc_GetYawPitchFromVector_Yaw_1) == 0x00014C, "Member 'BP_Character_C_CalcKnockBackVector::CallFunc_GetYawPitchFromVector_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, CallFunc_GetYawPitchFromVector_Pitch_1) == 0x000150, "Member 'BP_Character_C_CalcKnockBackVector::CallFunc_GetYawPitchFromVector_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000158, "Member 'BP_Character_C_CalcKnockBackVector::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000160, "Member 'BP_Character_C_CalcKnockBackVector::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, CallFunc_BreakVector_X) == 0x000168, "Member 'BP_Character_C_CalcKnockBackVector::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, CallFunc_BreakVector_Y) == 0x000170, "Member 'BP_Character_C_CalcKnockBackVector::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, CallFunc_BreakVector_Z) == 0x000178, "Member 'BP_Character_C_CalcKnockBackVector::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000180, "Member 'BP_Character_C_CalcKnockBackVector::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000198, "Member 'BP_Character_C_CalcKnockBackVector::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x000199, "Member 'BP_Character_C_CalcKnockBackVector::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, CallFunc_EqualEqual_DoubleDouble_ReturnValue_2) == 0x00019A, "Member 'BP_Character_C_CalcKnockBackVector::CallFunc_EqualEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, CallFunc_BooleanAND_ReturnValue) == 0x00019B, "Member 'BP_Character_C_CalcKnockBackVector::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, CallFunc_RotateAngleAxis_ReturnValue) == 0x0001A0, "Member 'BP_Character_C_CalcKnockBackVector::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, CallFunc_Cross_VectorVector_ReturnValue) == 0x0001B8, "Member 'BP_Character_C_CalcKnockBackVector::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, CallFunc_Normal_ReturnValue) == 0x0001D0, "Member 'BP_Character_C_CalcKnockBackVector::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001E8, "Member 'BP_Character_C_CalcKnockBackVector::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x0001F0, "Member 'BP_Character_C_CalcKnockBackVector::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x000208, "Member 'BP_Character_C_CalcKnockBackVector::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, CallFunc_Normal_ReturnValue_1) == 0x000220, "Member 'BP_Character_C_CalcKnockBackVector::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000238, "Member 'BP_Character_C_CalcKnockBackVector::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, K2Node_VariableSet_Pitch_ImplicitCast) == 0x000240, "Member 'BP_Character_C_CalcKnockBackVector::K2Node_VariableSet_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x000248, "Member 'BP_Character_C_CalcKnockBackVector::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcKnockBackVector, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1) == 0x00024C, "Member 'BP_Character_C_CalcKnockBackVector::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1' has a wrong offset!");

// Function BP_Character.BP_Character_C.ChangedSectionCharacterActionSequenceActor
// 0x0014 (0x0014 - 0x0000)
struct BP_Character_C_ChangedSectionCharacterActionSequenceActor final
{
public:
	struct FKoratActionDataList                   InAction;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class FName                                   InSectionName;                                     // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InPlayRatio;                                       // 0x0010(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_ChangedSectionCharacterActionSequenceActor) == 0x000004, "Wrong alignment on BP_Character_C_ChangedSectionCharacterActionSequenceActor");
static_assert(sizeof(BP_Character_C_ChangedSectionCharacterActionSequenceActor) == 0x000014, "Wrong size on BP_Character_C_ChangedSectionCharacterActionSequenceActor");
static_assert(offsetof(BP_Character_C_ChangedSectionCharacterActionSequenceActor, InAction) == 0x000000, "Member 'BP_Character_C_ChangedSectionCharacterActionSequenceActor::InAction' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ChangedSectionCharacterActionSequenceActor, InSectionName) == 0x000008, "Member 'BP_Character_C_ChangedSectionCharacterActionSequenceActor::InSectionName' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ChangedSectionCharacterActionSequenceActor, InPlayRatio) == 0x000010, "Member 'BP_Character_C_ChangedSectionCharacterActionSequenceActor::InPlayRatio' has a wrong offset!");

// Function BP_Character.BP_Character_C.ChangeReaction
// 0x000C (0x000C - 0x0000)
struct BP_Character_C_ChangeReaction final
{
public:
	struct FKoratActionDataList                   InAction;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ChangeReaction_ReturnValue;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_ChangeReaction) == 0x000004, "Wrong alignment on BP_Character_C_ChangeReaction");
static_assert(sizeof(BP_Character_C_ChangeReaction) == 0x00000C, "Wrong size on BP_Character_C_ChangeReaction");
static_assert(offsetof(BP_Character_C_ChangeReaction, InAction) == 0x000000, "Member 'BP_Character_C_ChangeReaction::InAction' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ChangeReaction, ReturnValue) == 0x000008, "Member 'BP_Character_C_ChangeReaction::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ChangeReaction, CallFunc_ChangeReaction_ReturnValue) == 0x000009, "Member 'BP_Character_C_ChangeReaction::CallFunc_ChangeReaction_ReturnValue' has a wrong offset!");

// Function BP_Character.BP_Character_C.CheckBlastDemoBranchSpDeriveType
// 0x00D0 (0x00D0 - 0x0000)
struct BP_Character_C_CheckBlastDemoBranchSpDeriveType final
{
public:
	struct FSSBlastDemoBranchCondition            InCondition;                                       // 0x0000(0x00C8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x00C8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckBlastDemoBranchSpDeriveType_ReturnValue; // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_CheckBlastDemoBranchSpDeriveType) == 0x000008, "Wrong alignment on BP_Character_C_CheckBlastDemoBranchSpDeriveType");
static_assert(sizeof(BP_Character_C_CheckBlastDemoBranchSpDeriveType) == 0x0000D0, "Wrong size on BP_Character_C_CheckBlastDemoBranchSpDeriveType");
static_assert(offsetof(BP_Character_C_CheckBlastDemoBranchSpDeriveType, InCondition) == 0x000000, "Member 'BP_Character_C_CheckBlastDemoBranchSpDeriveType::InCondition' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CheckBlastDemoBranchSpDeriveType, ReturnValue) == 0x0000C8, "Member 'BP_Character_C_CheckBlastDemoBranchSpDeriveType::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CheckBlastDemoBranchSpDeriveType, CallFunc_CheckBlastDemoBranchSpDeriveType_ReturnValue) == 0x0000C9, "Member 'BP_Character_C_CheckBlastDemoBranchSpDeriveType::CallFunc_CheckBlastDemoBranchSpDeriveType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CheckBlastDemoBranchSpDeriveType, K2Node_SwitchEnum_CmpSuccess) == 0x0000CA, "Member 'BP_Character_C_CheckBlastDemoBranchSpDeriveType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_Character.BP_Character_C.CheckValidSetWalking
// 0x0018 (0x0018 - 0x0000)
struct BP_Character_C_CheckValidSetWalking final
{
public:
	EMovementMode                                 InMovementMode;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InIsValidSetWalking;                               // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsKnockDown_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_CheckValidSetWalking) == 0x000008, "Wrong alignment on BP_Character_C_CheckValidSetWalking");
static_assert(sizeof(BP_Character_C_CheckValidSetWalking) == 0x000018, "Wrong size on BP_Character_C_CheckValidSetWalking");
static_assert(offsetof(BP_Character_C_CheckValidSetWalking, InMovementMode) == 0x000000, "Member 'BP_Character_C_CheckValidSetWalking::InMovementMode' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CheckValidSetWalking, InIsValidSetWalking) == 0x000001, "Member 'BP_Character_C_CheckValidSetWalking::InIsValidSetWalking' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CheckValidSetWalking, IsValid) == 0x000002, "Member 'BP_Character_C_CheckValidSetWalking::IsValid' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CheckValidSetWalking, CallFunc_GetSSCharacter_SSCharacter) == 0x000008, "Member 'BP_Character_C_CheckValidSetWalking::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CheckValidSetWalking, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'BP_Character_C_CheckValidSetWalking::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CheckValidSetWalking, CallFunc_IsKnockDown_ReturnValue) == 0x000011, "Member 'BP_Character_C_CheckValidSetWalking::CallFunc_IsKnockDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CheckValidSetWalking, CallFunc_BooleanOR_ReturnValue) == 0x000012, "Member 'BP_Character_C_CheckValidSetWalking::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_Character.BP_Character_C.ClearCharacterRotationPitch
// 0x0050 (0x0050 - 0x0000)
struct BP_Character_C_ClearCharacterRotationPitch final
{
public:
	bool                                          InTeleportPhysics;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSuccessfully;                                    // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetCharacterRotation_Rotation;            // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_ClearCharacterRotationPitch) == 0x000008, "Wrong alignment on BP_Character_C_ClearCharacterRotationPitch");
static_assert(sizeof(BP_Character_C_ClearCharacterRotationPitch) == 0x000050, "Wrong size on BP_Character_C_ClearCharacterRotationPitch");
static_assert(offsetof(BP_Character_C_ClearCharacterRotationPitch, InTeleportPhysics) == 0x000000, "Member 'BP_Character_C_ClearCharacterRotationPitch::InTeleportPhysics' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ClearCharacterRotationPitch, IsSuccessfully) == 0x000001, "Member 'BP_Character_C_ClearCharacterRotationPitch::IsSuccessfully' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ClearCharacterRotationPitch, CallFunc_GetCharacterRotation_Rotation) == 0x000008, "Member 'BP_Character_C_ClearCharacterRotationPitch::CallFunc_GetCharacterRotation_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ClearCharacterRotationPitch, CallFunc_BreakRotator_Roll) == 0x000020, "Member 'BP_Character_C_ClearCharacterRotationPitch::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ClearCharacterRotationPitch, CallFunc_BreakRotator_Pitch) == 0x000024, "Member 'BP_Character_C_ClearCharacterRotationPitch::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ClearCharacterRotationPitch, CallFunc_BreakRotator_Yaw) == 0x000028, "Member 'BP_Character_C_ClearCharacterRotationPitch::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ClearCharacterRotationPitch, CallFunc_MakeRotator_ReturnValue) == 0x000030, "Member 'BP_Character_C_ClearCharacterRotationPitch::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ClearCharacterRotationPitch, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000048, "Member 'BP_Character_C_ClearCharacterRotationPitch::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function BP_Character.BP_Character_C.DebugDrawText
// 0x0018 (0x0018 - 0x0000)
struct BP_Character_C_DebugDrawText final
{
public:
	class UCanvas*                                Canvas;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         DPIScale;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_DebugDrawText) == 0x000008, "Wrong alignment on BP_Character_C_DebugDrawText");
static_assert(sizeof(BP_Character_C_DebugDrawText) == 0x000018, "Wrong size on BP_Character_C_DebugDrawText");
static_assert(offsetof(BP_Character_C_DebugDrawText, Canvas) == 0x000000, "Member 'BP_Character_C_DebugDrawText::Canvas' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawText, PlayerController) == 0x000008, "Member 'BP_Character_C_DebugDrawText::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawText, DPIScale) == 0x000010, "Member 'BP_Character_C_DebugDrawText::DPIScale' has a wrong offset!");

// Function BP_Character.BP_Character_C.DrawTransitionActionName
// 0x04D0 (0x04D0 - 0x0000)
struct BP_Character_C_DrawTransitionActionName final
{
public:
	class UCanvas*                                InCanvas;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        DPIScale;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ScreenSize;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DrawPositionY;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DrawPositionX;                                     // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      PlayerController;                                  // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              DrawPosition;                                      // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 PrintString;                                       // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDownValue_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDownValueLimit_ReturnValue;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSmashLevelGaugeDecrementDelayTime_ReturnValue; // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnableSubActionState_ReturnValue;       // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DB[0x5];                                       // 0x00DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_AnimBase_C>       K2Node_DynamicCast_AsBPI_Anim_Base;                // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetSubActionAnimInstance_SubActionAnimInstance; // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UABP_Sub_Action_C*                      K2Node_DynamicCast_AsABP_Sub_Action;               // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetViewingController_ReturnValue;         // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x01E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_4;                        // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_4;                        // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_5;                        // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_5;                        // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_6;                        // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_6;                        // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0268(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDebugActionString_ActionString;        // 0x0278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterLocomotion_C> K2Node_DynamicCast_AsBPI_Character_Locomotion;     // 0x0298(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratActionDataList                   CallFunc_GetRunningAction_OutRunningAction;        // 0x02AC(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetRunningAction_OutRunningSection;       // 0x02B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         CallFunc_GetLocomotionDetailStatus_OutLocomotionDetailStatus; // 0x02BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BD[0x3];                                      // 0x02BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x02C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D2[0x6];                                      // 0x02D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_1;        // 0x02D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_2;        // 0x02E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x02F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0308(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0318(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0328(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0338(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x0348(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x0358(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x0368(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x0378(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_14;             // 0x0388(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDrawHitArea_ReturnValue;                // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDrawHitArea_ReturnValue_1;              // 0x0399(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A[0x6];                                      // 0x039A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x03A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x03BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x03BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC[0x4];                                      // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_4;               // 0x03C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1[0x7];                                      // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_5;               // 0x03D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9[0x3];                                      // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayerControllerID_ReturnValue;        // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDebugActionString_ActionString_1;      // 0x03F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_15;             // 0x0400(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_16;             // 0x0410(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_17;             // 0x0420(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_18;             // 0x0430(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_19;             // 0x0440(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_20;             // 0x0450(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_21;             // 0x0460(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0470(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_22;             // 0x0480(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0494(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_495[0x3];                                      // 0x0495(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x049C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49D[0x3];                                      // 0x049D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x04A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A5[0x3];                                      // 0x04A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_DoubleToString_InDouble_ImplicitCast; // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_Y_ImplicitCast;              // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_X_ImplicitCast;              // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToString_InDouble_ImplicitCast_1; // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToString_InDouble_ImplicitCast_2; // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_DrawTransitionActionName) == 0x000008, "Wrong alignment on BP_Character_C_DrawTransitionActionName");
static_assert(sizeof(BP_Character_C_DrawTransitionActionName) == 0x0004D0, "Wrong size on BP_Character_C_DrawTransitionActionName");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, InCanvas) == 0x000000, "Member 'BP_Character_C_DrawTransitionActionName::InCanvas' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, DPIScale) == 0x000008, "Member 'BP_Character_C_DrawTransitionActionName::DPIScale' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, ScreenSize) == 0x000010, "Member 'BP_Character_C_DrawTransitionActionName::ScreenSize' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, DrawPositionY) == 0x000020, "Member 'BP_Character_C_DrawTransitionActionName::DrawPositionY' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, DrawPositionX) == 0x000028, "Member 'BP_Character_C_DrawTransitionActionName::DrawPositionX' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, PlayerController) == 0x000030, "Member 'BP_Character_C_DrawTransitionActionName::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, DrawPosition) == 0x000038, "Member 'BP_Character_C_DrawTransitionActionName::DrawPosition' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, PrintString) == 0x000048, "Member 'BP_Character_C_DrawTransitionActionName::PrintString' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'BP_Character_C_DrawTransitionActionName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, Temp_int_Array_Index_Variable) == 0x000060, "Member 'BP_Character_C_DrawTransitionActionName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_GetDownValue_ReturnValue) == 0x000064, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_GetDownValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Conv_IntToString_ReturnValue) == 0x000068, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_GetDownValueLimit_ReturnValue) == 0x000078, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_GetDownValueLimit_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000080, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_BreakVector2D_X) == 0x000090, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_BreakVector2D_Y) == 0x000098, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_MakeVector2D_ReturnValue) == 0x0000B0, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_GetSmashLevelGaugeDecrementDelayTime_ReturnValue) == 0x0000C0, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_GetSmashLevelGaugeDecrementDelayTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Conv_DoubleToString_ReturnValue) == 0x0000C8, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_IsValid_ReturnValue) == 0x0000D8, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_IsValid_ReturnValue_1) == 0x0000D9, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_IsEnableSubActionState_ReturnValue) == 0x0000DA, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_IsEnableSubActionState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_GetAnimInstance_ReturnValue) == 0x0000E0, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, K2Node_DynamicCast_AsBPI_Anim_Base) == 0x0000E8, "Member 'BP_Character_C_DrawTransitionActionName::K2Node_DynamicCast_AsBPI_Anim_Base' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'BP_Character_C_DrawTransitionActionName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_IsValid_ReturnValue_2) == 0x0000F9, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_GetSubActionAnimInstance_SubActionAnimInstance) == 0x000100, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_GetSubActionAnimInstance_SubActionAnimInstance' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, K2Node_DynamicCast_AsABP_Sub_Action) == 0x000108, "Member 'BP_Character_C_DrawTransitionActionName::K2Node_DynamicCast_AsABP_Sub_Action' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, K2Node_DynamicCast_bSuccess_1) == 0x000110, "Member 'BP_Character_C_DrawTransitionActionName::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Concat_StrStr_ReturnValue) == 0x000118, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000128, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000138, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000148, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000158, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000168, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_GetViewingController_ReturnValue) == 0x000178, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_GetViewingController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, K2Node_SwitchEnum_CmpSuccess) == 0x000180, "Member 'BP_Character_C_DrawTransitionActionName::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, K2Node_DynamicCast_AsPlayer_Controller) == 0x000188, "Member 'BP_Character_C_DrawTransitionActionName::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, K2Node_DynamicCast_bSuccess_2) == 0x000190, "Member 'BP_Character_C_DrawTransitionActionName::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_GetViewportSize_ReturnValue) == 0x000198, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_BreakVector2D_X_1) == 0x0001A8, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_BreakVector2D_Y_1) == 0x0001B0, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_FTrunc_ReturnValue) == 0x0001B8, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_BreakVector2D_X_2) == 0x0001C0, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_BreakVector2D_Y_2) == 0x0001C8, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0001D0, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0001D8, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_FTrunc_ReturnValue_1) == 0x0001E0, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0001E4, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_MakeVector2D_ReturnValue_1) == 0x0001E8, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_BreakVector2D_X_3) == 0x0001F8, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_BreakVector2D_Y_3) == 0x000200, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000208, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_BreakVector2D_X_4) == 0x000210, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_BreakVector2D_Y_4) == 0x000218, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000220, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000228, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000230, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_BreakVector2D_X_5) == 0x000238, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_BreakVector2D_Y_5) == 0x000240, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000248, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_BreakVector2D_X_6) == 0x000250, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_BreakVector2D_X_6' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_BreakVector2D_Y_6) == 0x000258, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_BreakVector2D_Y_6' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000260, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000268, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_GetDebugActionString_ActionString) == 0x000278, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_GetDebugActionString_ActionString' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000288, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, K2Node_DynamicCast_AsBPI_Character_Locomotion) == 0x000298, "Member 'BP_Character_C_DrawTransitionActionName::K2Node_DynamicCast_AsBPI_Character_Locomotion' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, K2Node_DynamicCast_bSuccess_3) == 0x0002A8, "Member 'BP_Character_C_DrawTransitionActionName::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_GetRunningAction_OutRunningAction) == 0x0002AC, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_GetRunningAction_OutRunningAction' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_GetRunningAction_OutRunningSection) == 0x0002B4, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_GetRunningAction_OutRunningSection' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_GetLocomotionDetailStatus_OutLocomotionDetailStatus) == 0x0002BC, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_GetLocomotionDetailStatus_OutLocomotionDetailStatus' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0002C0, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_NotEqual_NameName_ReturnValue) == 0x0002D0, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_IsValid_ReturnValue_3) == 0x0002D1, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Conv_DoubleToString_ReturnValue_1) == 0x0002D8, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Conv_DoubleToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Conv_DoubleToString_ReturnValue_2) == 0x0002E8, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Conv_DoubleToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Conv_IntToString_ReturnValue_2) == 0x0002F8, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000308, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_MakeVector2D_ReturnValue_2) == 0x000318, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000328, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000338, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Concat_StrStr_ReturnValue_10) == 0x000348, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Concat_StrStr_ReturnValue_11) == 0x000358, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Concat_StrStr_ReturnValue_12) == 0x000368, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Concat_StrStr_ReturnValue_13) == 0x000378, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Concat_StrStr_ReturnValue_14) == 0x000388, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Concat_StrStr_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_IsDrawHitArea_ReturnValue) == 0x000398, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_IsDrawHitArea_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_IsDrawHitArea_ReturnValue_1) == 0x000399, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_IsDrawHitArea_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0003A0, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_MakeVector2D_ReturnValue_3) == 0x0003A8, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0003B8, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0003B9, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_BooleanOR_ReturnValue) == 0x0003BA, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_BooleanOR_ReturnValue_1) == 0x0003BB, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_MakeVector2D_ReturnValue_4) == 0x0003C0, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_MakeVector2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_BooleanOR_ReturnValue_2) == 0x0003D0, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_MakeVector2D_ReturnValue_5) == 0x0003D8, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_MakeVector2D_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_IsValid_ReturnValue_4) == 0x0003E8, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_GetPlayerControllerID_ReturnValue) == 0x0003EC, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_GetPlayerControllerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_GetDebugActionString_ActionString_1) == 0x0003F0, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_GetDebugActionString_ActionString_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Concat_StrStr_ReturnValue_15) == 0x000400, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Concat_StrStr_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Concat_StrStr_ReturnValue_16) == 0x000410, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Concat_StrStr_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Concat_StrStr_ReturnValue_17) == 0x000420, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Concat_StrStr_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Concat_StrStr_ReturnValue_18) == 0x000430, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Concat_StrStr_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Concat_StrStr_ReturnValue_19) == 0x000440, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Concat_StrStr_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Concat_StrStr_ReturnValue_20) == 0x000450, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Concat_StrStr_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Concat_StrStr_ReturnValue_21) == 0x000460, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Concat_StrStr_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Array_Get_Item) == 0x000470, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Concat_StrStr_ReturnValue_22) == 0x000480, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Concat_StrStr_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Array_Length_ReturnValue) == 0x000490, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Less_IntInt_ReturnValue) == 0x000494, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Len_ReturnValue) == 0x000498, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Greater_IntInt_ReturnValue) == 0x00049C, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Array_Length_ReturnValue_1) == 0x0004A0, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0004A4, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Conv_DoubleToString_InDouble_ImplicitCast) == 0x0004A8, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Conv_DoubleToString_InDouble_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_MakeVector2D_Y_ImplicitCast) == 0x0004B0, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_MakeVector2D_Y_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_MakeVector2D_X_ImplicitCast) == 0x0004B8, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_MakeVector2D_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Conv_DoubleToString_InDouble_ImplicitCast_1) == 0x0004C0, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Conv_DoubleToString_InDouble_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DrawTransitionActionName, CallFunc_Conv_DoubleToString_InDouble_ImplicitCast_2) == 0x0004C8, "Member 'BP_Character_C_DrawTransitionActionName::CallFunc_Conv_DoubleToString_InDouble_ImplicitCast_2' has a wrong offset!");

// Function BP_Character.BP_Character_C.EndRotateToCenter
// 0x00A8 (0x00A8 - 0x0000)
struct BP_Character_C_EndRotateToCenter final
{
public:
	double                                        TargetYaw;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ActorPitch;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetCharacterRotation_IsSuccessfully;      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetYawPitchFromVector_Yaw;                // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetYawPitchFromVector_Pitch;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_ActorPitch_ImplicitCast;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_TargetYaw_ImplicitCast;         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_EndRotateToCenter) == 0x000008, "Wrong alignment on BP_Character_C_EndRotateToCenter");
static_assert(sizeof(BP_Character_C_EndRotateToCenter) == 0x0000A8, "Wrong size on BP_Character_C_EndRotateToCenter");
static_assert(offsetof(BP_Character_C_EndRotateToCenter, TargetYaw) == 0x000000, "Member 'BP_Character_C_EndRotateToCenter::TargetYaw' has a wrong offset!");
static_assert(offsetof(BP_Character_C_EndRotateToCenter, ActorPitch) == 0x000008, "Member 'BP_Character_C_EndRotateToCenter::ActorPitch' has a wrong offset!");
static_assert(offsetof(BP_Character_C_EndRotateToCenter, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000010, "Member 'BP_Character_C_EndRotateToCenter::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_EndRotateToCenter, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BP_Character_C_EndRotateToCenter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_EndRotateToCenter, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000018, "Member 'BP_Character_C_EndRotateToCenter::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_EndRotateToCenter, CallFunc_MakeRotator_ReturnValue) == 0x000030, "Member 'BP_Character_C_EndRotateToCenter::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_EndRotateToCenter, CallFunc_BreakRotator_Roll) == 0x000048, "Member 'BP_Character_C_EndRotateToCenter::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Character_C_EndRotateToCenter, CallFunc_BreakRotator_Pitch) == 0x00004C, "Member 'BP_Character_C_EndRotateToCenter::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Character_C_EndRotateToCenter, CallFunc_BreakRotator_Yaw) == 0x000050, "Member 'BP_Character_C_EndRotateToCenter::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Character_C_EndRotateToCenter, CallFunc_SetCharacterRotation_IsSuccessfully) == 0x000054, "Member 'BP_Character_C_EndRotateToCenter::CallFunc_SetCharacterRotation_IsSuccessfully' has a wrong offset!");
static_assert(offsetof(BP_Character_C_EndRotateToCenter, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'BP_Character_C_EndRotateToCenter::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_EndRotateToCenter, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000070, "Member 'BP_Character_C_EndRotateToCenter::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_EndRotateToCenter, CallFunc_GetYawPitchFromVector_Yaw) == 0x000088, "Member 'BP_Character_C_EndRotateToCenter::CallFunc_GetYawPitchFromVector_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Character_C_EndRotateToCenter, CallFunc_GetYawPitchFromVector_Pitch) == 0x00008C, "Member 'BP_Character_C_EndRotateToCenter::CallFunc_GetYawPitchFromVector_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Character_C_EndRotateToCenter, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000090, "Member 'BP_Character_C_EndRotateToCenter::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_EndRotateToCenter, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000094, "Member 'BP_Character_C_EndRotateToCenter::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_EndRotateToCenter, K2Node_VariableSet_ActorPitch_ImplicitCast) == 0x000098, "Member 'BP_Character_C_EndRotateToCenter::K2Node_VariableSet_ActorPitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_EndRotateToCenter, K2Node_VariableSet_TargetYaw_ImplicitCast) == 0x0000A0, "Member 'BP_Character_C_EndRotateToCenter::K2Node_VariableSet_TargetYaw_ImplicitCast' has a wrong offset!");

// Function BP_Character.BP_Character_C.ExecToonShadingEachCharacter
// 0x0001 (0x0001 - 0x0000)
struct BP_Character_C_ExecToonShadingEachCharacter final
{
public:
	bool                                          bConstruct;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_ExecToonShadingEachCharacter) == 0x000001, "Wrong alignment on BP_Character_C_ExecToonShadingEachCharacter");
static_assert(sizeof(BP_Character_C_ExecToonShadingEachCharacter) == 0x000001, "Wrong size on BP_Character_C_ExecToonShadingEachCharacter");
static_assert(offsetof(BP_Character_C_ExecToonShadingEachCharacter, bConstruct) == 0x000000, "Member 'BP_Character_C_ExecToonShadingEachCharacter::bConstruct' has a wrong offset!");

// Function BP_Character.BP_Character_C.ExecuteUbergraph_BP_Character
// 0x1FF0 (0x1FF0 - 0x0000)
struct BP_Character_C_ExecuteUbergraph_BP_Character final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionRollingHurricane1* CallFunc_AsyncTransitionRollingHurricane1_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionRollingHurricane1* CallFunc_AsyncTransitionRollingHurricane1_ReturnValue_1; // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0070(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0084(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x0094(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionCannonAttack2*     CallFunc_AsyncTransitionCannonAttack2_ReturnValue; // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x00B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x00C4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x00D4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionCannonAttack1*     CallFunc_AsyncTransitionCannonAttack1_ReturnValue; // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_11;           // 0x00F0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_12;           // 0x0104(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_13;           // 0x0114(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionHeavyCrush2*       CallFunc_AsyncTransitionHeavyCrush2_ReturnValue;   // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_14;           // 0x0130(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_15;           // 0x0144(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_16;           // 0x0154(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionHeavyCrush1*       CallFunc_AsyncTransitionHeavyCrush1_ReturnValue;   // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_17;           // 0x0170(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_18;           // 0x0184(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionHeavyCrush3*       CallFunc_AsyncTransitionHeavyCrush3_ReturnValue;   // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_19;           // 0x01A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_20;           // 0x01B4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionCannonSmash*       CallFunc_AsyncTransitionCannonSmash_ReturnValue;   // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_21;           // 0x01D0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_22;           // 0x01E4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionCannonAttack3*     CallFunc_AsyncTransitionCannonAttack3_ReturnValue; // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_23;           // 0x0200(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_24;           // 0x0214(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionRollingHurricane2* CallFunc_AsyncTransitionRollingHurricane2_ReturnValue; // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_25;           // 0x0230(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_26;           // 0x0244(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_27;           // 0x0254(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_28;           // 0x0264(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_29;           // 0x0274(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_30;           // 0x0284(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionAscertain*         CallFunc_AsyncTransitionAscertain_ReturnValue;     // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_31;           // 0x02A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x3];                                      // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_32;           // 0x02B4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_33;           // 0x02C4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionParry*             CallFunc_AsyncTransitionParry_ReturnValue;         // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_34;           // 0x02E0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x3];                                      // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_35;           // 0x02F4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_36;           // 0x0304(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionSuperZCounterSmash* CallFunc_AsyncTransitionSuperZCounterSmash_ReturnValue; // 0x0318(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_37;           // 0x0320(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x3];                                      // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_38;           // 0x0334(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_39;           // 0x0344(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionSuperZCounterShakeOff* CallFunc_AsyncTransitionSuperZCounterShakeOff_ReturnValue; // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_40;           // 0x0360(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x3];                                      // 0x0371(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_41;           // 0x0374(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_42;           // 0x0384(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394[0x4];                                      // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionSuperZCounterCatch* CallFunc_AsyncTransitionSuperZCounterCatch_ReturnValue; // 0x0398(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_43;           // 0x03A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x3];                                      // 0x03B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratReplaceAnimationDataList         K2Node_CustomEvent_OutAnimDataList_1;              // 0x03B4(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FKoratReplaceAnimationDataList& OutAnimDataList)> K2Node_CreateDelegate_OutputDelegate_44;           // 0x03BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKoratReplaceAnimationDataList         K2Node_CustomEvent_OutAnimDataList;                // 0x03CC(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FKoratReplaceAnimationDataList& OutAnimDataList)> K2Node_CreateDelegate_OutputDelegate_45;           // 0x03D4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKoratReplaceAnimationDataList         Temp_struct_Variable;                              // 0x03E4(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionSuperZCounterPosture* CallFunc_AsyncTransitionSuperZCounterPosture_ReturnValue; // 0x03F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F9[0x3];                                      // 0x03F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_46;           // 0x03FC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_47;           // 0x040C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_48;           // 0x041C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42C[0x4];                                      // 0x042C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionDragonDashAttack*  CallFunc_AsyncTransitionDragonDashAttack_ReturnValue; // 0x0430(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_49;           // 0x0438(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449[0x3];                                      // 0x0449(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_50;           // 0x044C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_51;           // 0x045C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C[0x4];                                      // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionDragonDashAttack*  CallFunc_AsyncTransitionDragonDashAttack_ReturnValue_1; // 0x0470(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_52;           // 0x0478(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_489[0x3];                                      // 0x0489(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_53;           // 0x048C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_54;           // 0x049C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AC[0x4];                                      // 0x04AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionDragonDashAttack*  CallFunc_AsyncTransitionDragonDashAttack_ReturnValue_2; // 0x04B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_55;           // 0x04B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C9[0x3];                                      // 0x04C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_56;           // 0x04CC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_57;           // 0x04DC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EC[0x4];                                      // 0x04EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionDragonDashAttack*  CallFunc_AsyncTransitionDragonDashAttack_ReturnValue_3; // 0x04F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_58;           // 0x04F8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_509[0x3];                                      // 0x0509(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_59;           // 0x050C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_60;           // 0x051C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52C[0x4];                                      // 0x052C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionDragonDashAttack*  CallFunc_AsyncTransitionDragonDashAttack_ReturnValue_4; // 0x0530(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_61;           // 0x0538(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_20;                   // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_549[0x3];                                      // 0x0549(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_62;           // 0x054C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_63;           // 0x055C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_64;           // 0x056C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_65;           // 0x057C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_66;           // 0x058C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_67;           // 0x059C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AC[0x4];                                      // 0x05AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionDragonDash*        CallFunc_AsyncTransitionDragonDash_ReturnValue;    // 0x05B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_68;           // 0x05B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_21;                   // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C9[0x3];                                      // 0x05C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_69;           // 0x05CC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_70;           // 0x05DC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_71;           // 0x05EC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_72;           // 0x05FC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60C[0x4];                                      // 0x060C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionDashAttack*        CallFunc_AsyncTransitionDashAttack_ReturnValue;    // 0x0610(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_73;           // 0x0618(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_22;                   // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_629[0x3];                                      // 0x0629(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_74;           // 0x062C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_75;           // 0x063C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64C[0x4];                                      // 0x064C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionShortDash*         CallFunc_AsyncTransitionShortDash_ReturnValue;     // 0x0650(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_76;           // 0x0658(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_23;                   // 0x0668(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_669[0x3];                                      // 0x0669(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_77;           // 0x066C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_78;           // 0x067C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68C[0x4];                                      // 0x068C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionDragonSmash*       CallFunc_AsyncTransitionDragonSmash_ReturnValue;   // 0x0690(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_79;           // 0x0698(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_24;                   // 0x06A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A9[0x3];                                      // 0x06A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_80;           // 0x06AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_81;           // 0x06BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6CC[0x4];                                      // 0x06CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionDragonSmash*       CallFunc_AsyncTransitionDragonSmash_ReturnValue_1; // 0x06D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_82;           // 0x06D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_25;                   // 0x06E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E9[0x3];                                      // 0x06E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_83;           // 0x06EC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_84;           // 0x06FC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70C[0x4];                                      // 0x070C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionDragonSmash*       CallFunc_AsyncTransitionDragonSmash_ReturnValue_2; // 0x0710(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_85;           // 0x0718(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_26;                   // 0x0728(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_729[0x3];                                      // 0x0729(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_86;           // 0x072C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_87;           // 0x073C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74C[0x4];                                      // 0x074C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionDragonSmash*       CallFunc_AsyncTransitionDragonSmash_ReturnValue_3; // 0x0750(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_88;           // 0x0758(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_27;                   // 0x0768(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_769[0x3];                                      // 0x0769(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_89;           // 0x076C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_90;           // 0x077C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78C[0x4];                                      // 0x078C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionDragonSmash*       CallFunc_AsyncTransitionDragonSmash_ReturnValue_4; // 0x0790(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_91;           // 0x0798(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_28;                   // 0x07A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A9[0x3];                                      // 0x07A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_92;           // 0x07AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_93;           // 0x07BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_94;           // 0x07CC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_95;           // 0x07DC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_96;           // 0x07EC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_97;           // 0x07FC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_98;           // 0x080C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_99;           // 0x081C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_100;          // 0x082C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_101;          // 0x083C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_102;          // 0x084C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85C[0x4];                                      // 0x085C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionDragonHoming*      CallFunc_AsyncTransitionDragonHoming_ReturnValue;  // 0x0860(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_103;          // 0x0868(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_29;                   // 0x0878(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_879[0x3];                                      // 0x0879(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_104;          // 0x087C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_105;          // 0x088C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89C[0x4];                                      // 0x089C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionVanishingAssault*  CallFunc_AsyncTransitionVanishingAssault_ReturnValue; // 0x08A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_106;          // 0x08A8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_30;                   // 0x08B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B9[0x7];                                      // 0x08B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionWaitMontageEnd*    CallFunc_AsyncTransitionWaitMontageEnd_ReturnValue; // 0x08C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_107;          // 0x08C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_31;                   // 0x08D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D9[0x3];                                      // 0x08D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_108;          // 0x08DC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_109;          // 0x08EC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_110;          // 0x08FC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_90C[0x4];                                      // 0x090C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionFastAvoidance*     CallFunc_AsyncTransitionFastAvoidance_ReturnValue; // 0x0910(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_111;          // 0x0918(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_32;                   // 0x0928(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_929[0x3];                                      // 0x0929(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_112;          // 0x092C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93C[0x4];                                      // 0x093C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionStepIn*            CallFunc_AsyncTransitionStepIn_ReturnValue;        // 0x0940(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_113;          // 0x0948(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_33;                   // 0x0958(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_959[0x3];                                      // 0x0959(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_114;          // 0x095C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_96C[0x4];                                      // 0x096C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionStepAvoidance*     CallFunc_AsyncTransitionStepAvoidance_ReturnValue; // 0x0970(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_115;          // 0x0978(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_34;                   // 0x0988(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_989[0x3];                                      // 0x0989(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_116;          // 0x098C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_117;          // 0x099C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9AC[0x4];                                      // 0x09AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionRollingPress1*     CallFunc_AsyncTransitionRollingPress1_ReturnValue; // 0x09B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_118;          // 0x09B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_35;                   // 0x09C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C9[0x3];                                      // 0x09C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_119;          // 0x09CC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9DC[0x4];                                      // 0x09DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionRollingPress2*     CallFunc_AsyncTransitionRollingPress2_ReturnValue; // 0x09E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_120;          // 0x09E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_36;                   // 0x09F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9F9[0x3];                                      // 0x09F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_121;          // 0x09FC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A0C[0x4];                                      // 0x0A0C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionParrySmash*        CallFunc_AsyncTransitionParrySmash_ReturnValue;    // 0x0A10(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_122;          // 0x0A18(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_37;                   // 0x0A28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A29[0x3];                                      // 0x0A29(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_123;          // 0x0A2C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3C[0x4];                                      // 0x0A3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionLocomotion*        CallFunc_AsyncTransitionLocomotion_ReturnValue;    // 0x0A40(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_124;          // 0x0A48(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_38;                   // 0x0A58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A59[0x7];                                      // 0x0A59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratCharacterMovementComponent*       K2Node_DynamicCast_AsKorat_Character_Movement_Component; // 0x0A60(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0A68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0A69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0A6A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0A6B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0A6C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A6D[0x3];                                      // 0x0A6D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratActionDataList                   K2Node_Event_InAction_9;                           // 0x0A70(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0A78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A79[0x7];                                      // 0x0A79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionMidAirKick*        CallFunc_AsyncTransitionMidAirKick_ReturnValue;    // 0x0A80(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_39;                   // 0x0A88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A89[0x7];                                      // 0x0A89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetTargetCharacter_ReturnValue;           // 0x0A90(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetTargetCharacter_ReturnValue_1;         // 0x0A98(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetTargetCharacter_ReturnValue_2;         // 0x0AA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0AA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA9[0x7];                                      // 0x0AA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetTargetCharacter_ReturnValue_3;         // 0x0AB0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0AB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AB9[0x7];                                      // 0x0AB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSRootCameraDirector*                  CallFunc_GetRootCameraDirector_ReturnValue;        // 0x0AC0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0AC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC9[0x7];                                      // 0x0AC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSRootCameraDirector*                  CallFunc_GetRootCameraDirector_ReturnValue_1;      // 0x0AD0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSBattleLevelScriptActor*              CallFunc_GetSSBattleLevelScriptActor_ReturnValue;  // 0x0AD8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCutCameraDirector*                   CallFunc_GetMenuCameraDirector_ReturnValue;        // 0x0AE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetTargetCharacter_ReturnValue_4;         // 0x0AE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EKoratMapChangeType                           K2Node_Event_InMapChangeType;                      // 0x0AF0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratMapChangeStartTiming                    K2Node_Event_InStartTiming;                        // 0x0AF1(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInForceSearchNearParts;              // 0x0AF2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AF3[0x1];                                      // 0x0AF3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_125;          // 0x0AF4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bConstruct;                           // 0x0B04(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B05[0x3];                                      // 0x0B05(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratActionDataList                   K2Node_Event_InAction_8;                           // 0x0B08(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_InSectionName_2;                      // 0x0B10(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InPlayRatio;                          // 0x0B18(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_126;          // 0x0B1C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2C[0x4];                                      // 0x0B2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0B30(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKoratActionDataList                   K2Node_Event_InReactionAction;                     // 0x0B38(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	EKoratReactionDirection                       K2Node_Event_InReactionDirection;                  // 0x0B40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratAddtiveReactionParameter         K2Node_Event_InAddtiveReactionParameter;           // 0x0B41(0x0002)(ConstParm, NoDestructor)
	uint8                                         Pad_B43[0x5];                                      // 0x0B43(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_AnimBase_C>       K2Node_DynamicCast_AsBPI_Anim_Base;                // 0x0B48(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0B58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ChangeReaction_ReturnValue;               // 0x0B59(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5A[0x2];                                      // 0x0B5A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratActionDataList                   K2Node_Event_InAction_7;                           // 0x0B5C(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B64[0x4];                                      // 0x0B64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetTimeSeconds_ReturnValue;               // 0x0B68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0B70(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0B88(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0B98(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_127;          // 0x0BA8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0BB8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKoratActionDataList                   K2Node_Event_InAction_6;                           // 0x0BC0(0x0008)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_AnimBase_C>       K2Node_DynamicCast_AsBPI_Anim_Base_1;              // 0x0BC8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0BD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD9[0x7];                                      // 0x0BD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UABP_Sub_RequestMontage_C*              CallFunc_GetSubRequestMontageAnimInstance_SubrequestMontageAnimInstance; // 0x0BE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKoratActionDataList                   K2Node_Event_InAction_5;                           // 0x0BE8(0x0008)(NoDestructor, HasGetValueTypeHash)
	EKoratCharacterActionFinishReason             K2Node_Event_InActionFinishReason;                 // 0x0BF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BF1[0x3];                                      // 0x0BF1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratActionDataList                   K2Node_Event_InAction_4;                           // 0x0BF4(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetActionAlNumId_ReturnValue;             // 0x0BFC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C04[0x4];                                      // 0x0C04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0C08(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0C18(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0C28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0C2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2D[0x3];                                      // 0x0C2D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_128;          // 0x0C30(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetTargetPawn_ReturnValue;                // 0x0C40(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           K2Node_DynamicCast_AsSSCharacter;                  // 0x0C48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0C50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C51[0x7];                                      // 0x0C51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionRollingHammer*     CallFunc_AsyncTransitionRollingHammer_ReturnValue; // 0x0C58(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_40;                   // 0x0C60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C61[0x3];                                      // 0x0C61(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratSequencePlayInfo                 K2Node_MakeStruct_KoratSequencePlayInfo;           // 0x0C64(0x0020)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0C84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_129;          // 0x0C88(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKoratSequencePlayInfo                 K2Node_MakeStruct_KoratSequencePlayInfo_1;         // 0x0C98(0x0020)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0CB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CBC[0x4];                                      // 0x0CBC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetTargetPawn_ReturnValue_1;              // 0x0CC0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           K2Node_DynamicCast_AsSSCharacter_1;                // 0x0CC8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0CD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD1[0x7];                                      // 0x0CD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               K2Node_Event_InActionCamera_1;                     // 0x0CD8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               K2Node_Event_InOpponentActionCamera_1;             // 0x0CE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        K2Node_Event_TimeLineType_1;                       // 0x0CE8(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0CE9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CEA[0x6];                                      // 0x0CEA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSLevelSequenceActor*                  CallFunc_SpawnSequenceActorForFreeTimeline_ReturnValue; // 0x0CF0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EKoratFreeTimelineType                        K2Node_Event_TimeLineType;                         // 0x0CF8(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CF9[0x7];                                      // 0x0CF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               K2Node_Event_InActionCamera;                       // 0x0D00(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               K2Node_Event_InOpponentActionCamera;               // 0x0D08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0D10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D11[0x7];                                      // 0x0D11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSLevelSequenceActor*                  CallFunc_SpawnSequenceActorForFreeTimeline_ReturnValue_1; // 0x0D18(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKoratActionDataList                   K2Node_Event_InAction_3;                           // 0x0D20(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_InSectionName_1;                      // 0x0D28(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratActionDataList                   K2Node_Event_InBeforeAction;                       // 0x0D30(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FKoratActionDataList                   K2Node_Event_InAfterAction;                        // 0x0D38(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0D40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D41[0x3];                                      // 0x0D41(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0D44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0D48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0D4C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4D[0x3];                                      // 0x0D4D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_130;          // 0x0D50(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            CallFunc_GetCollisionResponseToChannel_ReturnValue; // 0x0D60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x0D61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D62[0x6];                                      // 0x0D62(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0D68(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FKoratHitBackMovementData              K2Node_Event_InHitBackData_1;                      // 0x0D80(0x02E0)()
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x1060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   K2Node_Event_InSection;                            // 0x1078(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLockOnCharacter_ReturnValue;            // 0x1080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1081[0x7];                                     // 0x1081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Event_InputVector_1;                        // 0x1088(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_InputVector;                          // 0x1098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_131;          // 0x10A8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_132;          // 0x10B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_Event_InRotation;                           // 0x10C8(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FKoratHitBackMovementData              K2Node_Event_InHitBackData;                        // 0x10E0(0x02E0)(ConstParm)
	struct FKoratHitStopData                      K2Node_Event_InHitStopData_2;                      // 0x13C0(0x0014)(ConstParm, NoDestructor)
	struct FKoratHitStopData                      K2Node_Event_InHitStopData_1;                      // 0x13D4(0x0014)(ConstParm, NoDestructor)
	uint8                                         Pad_13E8[0x8];                                     // 0x13E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratHitEffectAfterHitStop            K2Node_Event_InHitEffectAfterHitStop_1;            // 0x13F0(0x00A0)(ConstParm, NoDestructor)
	ESituationOfOpponentWhenAttackHit             K2Node_Event_InOpponentHitSituation_1;             // 0x1490(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetHitStopOpponent_SetHitStop;            // 0x1491(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetHitStopOwn_SetHitStop;                 // 0x1492(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_41;                   // 0x1493(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratActionDataList                   K2Node_Event_InAction_2;                           // 0x1494(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FKoratActionDataList                   K2Node_Event_InAction_1;                           // 0x149C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A4[0x4];                                     // 0x14A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_InLocation_1;                         // 0x14A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InDrawType;                           // 0x14C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C4[0x4];                                     // 0x14C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_InHitTime;                            // 0x14C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_InDrawDuration;                       // 0x14D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                K2Node_Event_Canvas;                               // 0x14D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_Event_PlayerController;                     // 0x14E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DPIScale;                             // 0x14E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14EC[0x4];                                     // 0x14EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         K2Node_Event_InDebugCommand;                       // 0x14F0(0x0010)(ConstParm, ReferenceParm)
	EKoratBattleKey                               K2Node_Event_InBattleKey_3;                        // 0x1500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratBattleKey                               K2Node_Event_InBattleKey_2;                        // 0x1501(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratBattleKey                               K2Node_Event_InBattleKey_1;                        // 0x1502(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1503[0x1];                                     // 0x1503(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_133;          // 0x1504(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EKoratBattleKey                               K2Node_Event_InBattleKey;                          // 0x1514(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1515[0x3];                                     // 0x1515(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_134;          // 0x1518(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterBase_C>  CallFunc_InputKoratBattleKeyJustPressed_self_CastInput; // 0x1528(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x1538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_153C[0x4];                                     // 0x153C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterBase_C>  CallFunc_InputKoratBattleKeyJustReleased_self_CastInput; // 0x1540(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UKoratAsyncTransitionRollingHammer*     CallFunc_AsyncTransitionRollingHammer_ReturnValue_1; // 0x1550(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_42;                   // 0x1558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1559[0x3];                                     // 0x1559(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_InDisappearTime;                      // 0x155C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InAppearTime;                         // 0x1560(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1564[0x4];                                     // 0x1564(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_InAppearPosition;                     // 0x1568(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_Event_InAppearDirection;                    // 0x1580(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FKoratActionDataList                   K2Node_Event_InAppearAction;                       // 0x1598(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InTraining;                           // 0x15A0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InDramaticWarp;                       // 0x15A1(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A2[0x2];                                     // 0x15A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_InSectionName;                        // 0x15A4(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_Event_InMovementMode;                       // 0x15AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x15AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             CallFunc_GetCollisionEnabled_ReturnValue;          // 0x15AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_4;          // 0x15AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterBase_C>  CallFunc_InputKoratBattleKeyDown_self_CastInput;   // 0x15B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterBase_C>  CallFunc_InputKoratBattleKeyUp_self_CastInput;     // 0x15C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x15D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15D1[0x3];                                     // 0x15D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_135;          // 0x15D4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x15E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15E5[0x3];                                     // 0x15E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_136;          // 0x15E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_MontageLength;                        // 0x15F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterAction_C> K2Node_DynamicCast_AsBPI_Character_Action;         // 0x1600(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x1610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1611[0x7];                                     // 0x1611(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterAction_C> K2Node_DynamicCast_AsBPI_Character_Action_1;       // 0x1618(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x1628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1629[0x7];                                     // 0x1629(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterAction_C> K2Node_DynamicCast_AsBPI_Character_Action_2;       // 0x1630(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x1640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1641[0x7];                                     // 0x1641(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterBase_C>  CallFunc_OnEndRequestAllAnim_self_CastInput;       // 0x1648(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterBase_C>  CallFunc_OnPlayAnim_self_CastInput;                // 0x1658(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterMovementTransition             K2Node_Event_InMovementTransition;                 // 0x1668(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInHoming;                            // 0x1669(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_166A[0x2];                                     // 0x166A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratHitStopData                      K2Node_Event_InHitStopData;                        // 0x166C(0x0014)(ConstParm, NoDestructor)
	struct FKoratHitEffectAfterHitStop            K2Node_Event_InHitEffectAfterHitStop;              // 0x1680(0x00A0)(ConstParm, NoDestructor)
	bool                                          K2Node_Event_bInBlownAttack;                       // 0x1720(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratActionAttackType                        K2Node_Event_InAttackType;                         // 0x1721(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESituationOfOpponentWhenAttackHit             K2Node_Event_InOpponentHitSituation;               // 0x1722(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1723[0x1];                                     // 0x1723(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratActionDataList                   K2Node_Event_InAttackAction;                       // 0x1724(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_172C[0x4];                                     // 0x172C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InActor;                              // 0x1730(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_InLocation;                           // 0x1738(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InUseBattleTargetPawn;                // 0x1750(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetHitStopOwn_SetHitStop_1;               // 0x1751(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_43;                   // 0x1752(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratBattleKey                               K2Node_Event_BattleKey_5;                          // 0x1753(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratBattleKey                               K2Node_Event_BattleKey_4;                          // 0x1754(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1755[0x3];                                     // 0x1755(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterBase_C>  CallFunc_InputKoratBattleKeyJustPressed_self_CastInput_1; // 0x1758(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterBase_C>  CallFunc_InputKoratBattleKeyDown_self_CastInput_1; // 0x1768(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratBattleKey                               K2Node_Event_BattleKey_3;                          // 0x1778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1779[0x3];                                     // 0x1779(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_137;          // 0x177C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_178C[0x4];                                     // 0x178C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterBase_C>  CallFunc_InputKoratBattleKeyJustReleased_self_CastInput_1; // 0x1790(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_138;          // 0x17A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_139;          // 0x17B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSBattleLevelScriptActor*              CallFunc_GetSSBattleLevelScriptActor_ReturnValue_1; // 0x17C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetTargetCharacter_ReturnValue_5;         // 0x17C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKoratActionDataList                   CallFunc_GetCurrentAction_OutAction;               // 0x17D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	EKoratBlastSlotType                           CallFunc_GetBlastSlot_ReturnValue;                 // 0x17D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17D9[0x3];                                     // 0x17D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_140;          // 0x17DC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x17EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UKoratAsyncTransitionCharge*            CallFunc_AsyncTransitionCharge_ReturnValue;        // 0x17F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_44;                   // 0x17F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17F9[0x3];                                     // 0x17F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x17FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue;   // 0x1800(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x1804(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1805[0x3];                                     // 0x1805(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionBaseReaction*      CallFunc_AsyncTransitionBaseReaction_ReturnValue;  // 0x1808(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_45;                   // 0x1810(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1811[0x7];                                     // 0x1811(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x1818(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISSBattleController>   K2Node_DynamicCast_AsSSBattle_Controller;          // 0x1820(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x1830(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1831[0x7];                                     // 0x1831(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x1838(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_2;            // 0x1840(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISSBattleController>   K2Node_DynamicCast_AsSSBattle_Controller_1;        // 0x1848(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x1858(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1859[0x7];                                     // 0x1859(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_AnimBase_C>       K2Node_DynamicCast_AsBPI_Anim_Base_2;              // 0x1860(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x1870(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1871[0x3];                                     // 0x1871(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHitStopRequest_OutHitStopTime;         // 0x1874(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHitStopRequest_OutHitStopDilation;     // 0x1878(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHitStopRequest_OutHitStopDelay;        // 0x187C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHitStopRequest_ReturnValue;            // 0x1880(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x1881(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1882[0x6];                                     // 0x1882(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSLevelSequenceActor*                  CallFunc_SpawnSequenceActorByHitEffectAfterHitStop_ReturnValue; // 0x1888(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_46;                   // 0x1890(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x1891(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1892[0x2];                                     // 0x1892(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_141;          // 0x1894(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18A4[0x4];                                     // 0x18A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x18A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEffectiveTimeDilation_ReturnValue;     // 0x18B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_142;          // 0x18B4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C4[0x4];                                     // 0x18C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x18C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue_1; // 0x18D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x18D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18D5[0x3];                                     // 0x18D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x18D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x18E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x18E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEffectiveTimeDilation_ReturnValue_1;   // 0x18F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18F4[0x4];                                     // 0x18F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x18F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue_2; // 0x1900(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x1904(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1905[0x3];                                     // 0x1905(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x1908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_143;          // 0x1910(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_144;          // 0x1920(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UKoratAsyncTransitionGuardClear*        CallFunc_AsyncTransitionGuardClear_ReturnValue;    // 0x1930(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_47;                   // 0x1938(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1939[0x7];                                     // 0x1939(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x1940(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISSBattleController>   K2Node_DynamicCast_AsSSBattle_Controller_2;        // 0x1948(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x1958(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x1959(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x195A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_195B[0x1];                                     // 0x195B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_145;          // 0x195C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_196C[0x4];                                     // 0x196C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x1970(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue_3; // 0x1978(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x197C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x197D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x197E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_197F[0x1];                                     // 0x197F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_146;          // 0x1980(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_147;          // 0x1990(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_148;          // 0x19A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x19B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x19B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19B2[0x6];                                     // 0x19B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x19B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UKoratAsyncTransitionGuard*             CallFunc_AsyncTransitionGuard_ReturnValue;         // 0x19C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_KnockbackMovementStart_ReturnValue;       // 0x19C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_48;                   // 0x19CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19CD[0x3];                                     // 0x19CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue_4; // 0x19D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x19D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19D5[0x3];                                     // 0x19D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_149;          // 0x19D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_150;          // 0x19E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerStart*>                   CallFunc_GetAllActorsOfClass_OutActors;            // 0x19F8(0x0010)(ReferenceParm)
	class APlayerStart*                           CallFunc_Array_Get_Item;                           // 0x1A08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x1A10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A14[0x4];                                     // 0x1A14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x1A18(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x1A30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x1A31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x1A32(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A33[0x5];                                     // 0x1A33(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_4;      // 0x1A38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        K2Node_CustomEvent_inDestoryComp;                  // 0x1A40(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_RushType;                             // 0x1A48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4C[0x4];                                     // 0x1A4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USSCharacterLatentHelper*               K2Node_Event_InLatentHelper;                       // 0x1A50(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_49;                   // 0x1A58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A59[0x7];                                     // 0x1A59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           K2Node_DynamicCast_AsSSCharacter_2;                // 0x1A60(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x1A68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A69[0x3];                                     // 0x1A69(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_151;          // 0x1A6C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A7C[0x4];                                     // 0x1A7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionKidan*             CallFunc_AsyncTransitionKidan_ReturnValue;         // 0x1A80(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterLocomotion_C> K2Node_DynamicCast_AsBPI_Character_Locomotion;     // 0x1A88(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x1A98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_50;                   // 0x1A99(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9A[0x6];                                     // 0x1A9A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterLocomotion_C> K2Node_DynamicCast_AsBPI_Character_Locomotion_1;   // 0x1AA0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x1AB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AB1[0x3];                                     // 0x1AB1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_152;          // 0x1AB4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKoratReplaceAnimationDataList         K2Node_Event_RequestAnimData;                      // 0x1AC4(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1ACC[0x4];                                     // 0x1ACC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit_1;                                // 0x1AD0(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x1BB8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x1BC0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x1BC8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x1BD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BD1[0x7];                                     // 0x1BD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x1BD8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x1BF0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x1C08(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x1C20(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            K2Node_Event_NewController;                        // 0x1D08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKoratReplaceAnimationDataList         K2Node_Event_InReplaceAnim_1;                      // 0x1D10(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UKoratAsyncTransitionVanishingAttack*   CallFunc_AsyncTransitionVanishingAttack_ReturnValue; // 0x1D18(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_51;                   // 0x1D20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D21[0x3];                                     // 0x1D21(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x1D24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratBattleKey                               K2Node_Event_BattleKey_2;                          // 0x1D28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleKey                                    K2Node_Event_BattleKey_1;                          // 0x1D29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D2A[0x2];                                     // 0x1D2A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratActionDataList                   K2Node_Event_InAction;                             // 0x1D2C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Enable;                               // 0x1D34(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D35[0x3];                                     // 0x1D35(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratReplaceAnimationDataList         K2Node_MakeStruct_KoratReplaceAnimationDataList;   // 0x1D38(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UKoratAsyncTransitionPlayAction*        CallFunc_AsyncTransitionPlayAction_ReturnValue;    // 0x1D40(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EBattleKey                                    K2Node_Event_BattleKey;                            // 0x1D48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_52;                   // 0x1D49(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4A[0x2];                                     // 0x1D4A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratReplaceAnimationDataList         K2Node_Event_InReplaceAnim;                        // 0x1D4C(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_153;          // 0x1D54(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D64[0x4];                                     // 0x1D64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionRevengeCounter*    CallFunc_AsyncTransitionRevengeCounter_ReturnValue; // 0x1D68(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_53;                   // 0x1D70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D71[0x7];                                     // 0x1D71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_WorldDirection;                       // 0x1D78(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Value;                                // 0x1D90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Construction;                         // 0x1D98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D99[0x7];                                     // 0x1D99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ToonScene_C*                        K2Node_Event_Scane;                                // 0x1DA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsLeft;                               // 0x1DA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsPreviousUseLeft;                    // 0x1DA9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DAA[0x2];                                     // 0x1DAA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_154;          // 0x1DAC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x1DBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UKoratAsyncTransitionGrandSlash*        CallFunc_AsyncTransitionGrandSlash_ReturnValue;    // 0x1DC0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_155;          // 0x1DC8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_54;                   // 0x1DD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD9[0x3];                                     // 0x1DD9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_156;          // 0x1DDC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_157;          // 0x1DEC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_158;          // 0x1DFC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E0C[0x4];                                     // 0x1E0C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionLiftStrike*        CallFunc_AsyncTransitionLiftStrike_ReturnValue;    // 0x1E10(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_55;                   // 0x1E18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E19[0x3];                                     // 0x1E19(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_159;          // 0x1E1C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_160;          // 0x1E2C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x1E3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_161;          // 0x1E40(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UKoratAsyncTransitionCannon*            CallFunc_AsyncTransitionCannon_ReturnValue;        // 0x1E50(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_56;                   // 0x1E58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E59[0x3];                                     // 0x1E59(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_162;          // 0x1E5C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_163;          // 0x1E6C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_164;          // 0x1E7C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_165;          // 0x1E8C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_166;          // 0x1E9C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EAC[0x4];                                     // 0x1EAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratAsyncTransitionHeavyFinish*       CallFunc_AsyncTransitionHeavyFinish_ReturnValue;   // 0x1EB0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_57;                   // 0x1EB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EB9[0x3];                                     // 0x1EB9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_167;          // 0x1EBC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_168;          // 0x1ECC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_169;          // 0x1EDC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_170;          // 0x1EEC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_171;          // 0x1EFC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x1F0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x1F0D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x1F0E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_2;     // 0x1F0F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_172;          // 0x1F10(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_3;     // 0x1F20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F21[0x3];                                     // 0x1F21(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_173;          // 0x1F24(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F34[0x4];                                     // 0x1F34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x1F38(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x1F40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F41[0x7];                                     // 0x1F41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Select_Default;                             // 0x1F48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPreBattleProductionAction_bOutIsSpecialFate; // 0x1F50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F51[0x3];                                     // 0x1F51(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratActionDataList                   CallFunc_GetPreBattleProductionAction_ReturnValue; // 0x1F54(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_174;          // 0x1F5C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F6C[0x4];                                     // 0x1F6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x1F70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DrawTransitionActionName_DPIScale_ImplicitCast; // 0x1F78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_StartVanishing_InDisappearTime_ImplicitCast; // 0x1F80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_StartVanishing_InAppearTime_ImplicitCast; // 0x1F88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCustomTimeDilation_InTimeDilation_ImplicitCast; // 0x1F90(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F94[0x4];                                     // 0x1F94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_HitStop_ImplicitCast;           // 0x1F98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_HitTimeDilation_ImplicitCast;   // 0x1FA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_HitStopDelay_ImplicitCast;      // 0x1FA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCustomTimeDilation_InTimeDilation_ImplicitCast_1; // 0x1FB0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FB4[0x4];                                     // 0x1FB4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x1FB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast_1;     // 0x1FC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_KnockbackMovementApply_InKnockbackTime_ImplicitCast; // 0x1FC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_KnockbackMovementApply_InDeltaTime_ImplicitCast; // 0x1FCC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x1FD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_KnockBackDecelerationTime_ImplicitCast; // 0x1FD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_DeltaSeconds_ImplicitCast;      // 0x1FE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_ExecuteUbergraph_BP_Character) == 0x000010, "Wrong alignment on BP_Character_C_ExecuteUbergraph_BP_Character");
static_assert(sizeof(BP_Character_C_ExecuteUbergraph_BP_Character) == 0x001FF0, "Wrong size on BP_Character_C_ExecuteUbergraph_BP_Character");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, EntryPoint) == 0x000000, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionRollingHurricane1_ReturnValue) == 0x000028, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionRollingHurricane1_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_2) == 0x000030, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_3) == 0x000044, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_4) == 0x000054, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionRollingHurricane1_ReturnValue_1) == 0x000068, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionRollingHurricane1_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_5) == 0x000070, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_1) == 0x000080, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_6) == 0x000084, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_7) == 0x000094, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionCannonAttack2_ReturnValue) == 0x0000A8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionCannonAttack2_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_8) == 0x0000B0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_2) == 0x0000C0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_9) == 0x0000C4, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_10) == 0x0000D4, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionCannonAttack1_ReturnValue) == 0x0000E8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionCannonAttack1_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_11) == 0x0000F0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_3) == 0x000100, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_12) == 0x000104, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_13) == 0x000114, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionHeavyCrush2_ReturnValue) == 0x000128, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionHeavyCrush2_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_14) == 0x000130, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_4) == 0x000140, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_15) == 0x000144, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_16) == 0x000154, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionHeavyCrush1_ReturnValue) == 0x000168, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionHeavyCrush1_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_17) == 0x000170, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_5) == 0x000180, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_18) == 0x000184, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionHeavyCrush3_ReturnValue) == 0x000198, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionHeavyCrush3_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_19) == 0x0001A0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_6) == 0x0001B0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_20) == 0x0001B4, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_20' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionCannonSmash_ReturnValue) == 0x0001C8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionCannonSmash_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_21) == 0x0001D0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_21' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_7) == 0x0001E0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_22) == 0x0001E4, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_22' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionCannonAttack3_ReturnValue) == 0x0001F8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionCannonAttack3_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_23) == 0x000200, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_23' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_8) == 0x000210, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_24) == 0x000214, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_24' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionRollingHurricane2_ReturnValue) == 0x000228, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionRollingHurricane2_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_25) == 0x000230, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_25' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_9) == 0x000240, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_26) == 0x000244, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_26' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_27) == 0x000254, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_27' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_28) == 0x000264, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_28' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_29) == 0x000274, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_29' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_30) == 0x000284, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_30' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionAscertain_ReturnValue) == 0x000298, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionAscertain_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_31) == 0x0002A0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_31' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_10) == 0x0002B0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_32) == 0x0002B4, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_32' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_33) == 0x0002C4, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_33' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionParry_ReturnValue) == 0x0002D8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionParry_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_34) == 0x0002E0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_34' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_11) == 0x0002F0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_35) == 0x0002F4, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_35' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_36) == 0x000304, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_36' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionSuperZCounterSmash_ReturnValue) == 0x000318, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionSuperZCounterSmash_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_37) == 0x000320, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_37' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_12) == 0x000330, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_38) == 0x000334, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_38' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_39) == 0x000344, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_39' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionSuperZCounterShakeOff_ReturnValue) == 0x000358, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionSuperZCounterShakeOff_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_40) == 0x000360, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_40' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_13) == 0x000370, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_41) == 0x000374, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_41' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_42) == 0x000384, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_42' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionSuperZCounterCatch_ReturnValue) == 0x000398, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionSuperZCounterCatch_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_43) == 0x0003A0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_43' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_14) == 0x0003B0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CustomEvent_OutAnimDataList_1) == 0x0003B4, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CustomEvent_OutAnimDataList_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_44) == 0x0003BC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_44' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CustomEvent_OutAnimDataList) == 0x0003CC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CustomEvent_OutAnimDataList' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_45) == 0x0003D4, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_45' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, Temp_struct_Variable) == 0x0003E4, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionSuperZCounterPosture_ReturnValue) == 0x0003F0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionSuperZCounterPosture_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_15) == 0x0003F8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_46) == 0x0003FC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_46' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_47) == 0x00040C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_47' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_48) == 0x00041C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_48' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionDragonDashAttack_ReturnValue) == 0x000430, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionDragonDashAttack_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_49) == 0x000438, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_49' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_16) == 0x000448, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_50) == 0x00044C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_50' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_51) == 0x00045C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_51' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionDragonDashAttack_ReturnValue_1) == 0x000470, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionDragonDashAttack_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_52) == 0x000478, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_52' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_17) == 0x000488, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_53) == 0x00048C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_53' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_54) == 0x00049C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_54' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionDragonDashAttack_ReturnValue_2) == 0x0004B0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionDragonDashAttack_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_55) == 0x0004B8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_55' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_18) == 0x0004C8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_56) == 0x0004CC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_56' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_57) == 0x0004DC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_57' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionDragonDashAttack_ReturnValue_3) == 0x0004F0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionDragonDashAttack_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_58) == 0x0004F8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_58' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_19) == 0x000508, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_59) == 0x00050C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_59' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_60) == 0x00051C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_60' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionDragonDashAttack_ReturnValue_4) == 0x000530, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionDragonDashAttack_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_61) == 0x000538, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_61' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_20) == 0x000548, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_62) == 0x00054C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_62' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_63) == 0x00055C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_63' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_64) == 0x00056C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_64' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_65) == 0x00057C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_65' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_66) == 0x00058C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_66' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_67) == 0x00059C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_67' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionDragonDash_ReturnValue) == 0x0005B0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionDragonDash_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_68) == 0x0005B8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_68' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_21) == 0x0005C8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_69) == 0x0005CC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_69' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_70) == 0x0005DC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_70' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_71) == 0x0005EC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_71' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_72) == 0x0005FC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_72' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionDashAttack_ReturnValue) == 0x000610, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionDashAttack_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_73) == 0x000618, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_73' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_22) == 0x000628, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_74) == 0x00062C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_74' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_75) == 0x00063C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_75' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionShortDash_ReturnValue) == 0x000650, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionShortDash_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_76) == 0x000658, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_76' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_23) == 0x000668, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_77) == 0x00066C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_77' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_78) == 0x00067C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_78' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionDragonSmash_ReturnValue) == 0x000690, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionDragonSmash_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_79) == 0x000698, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_79' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_24) == 0x0006A8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_80) == 0x0006AC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_80' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_81) == 0x0006BC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_81' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionDragonSmash_ReturnValue_1) == 0x0006D0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionDragonSmash_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_82) == 0x0006D8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_82' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_25) == 0x0006E8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_83) == 0x0006EC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_83' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_84) == 0x0006FC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_84' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionDragonSmash_ReturnValue_2) == 0x000710, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionDragonSmash_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_85) == 0x000718, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_85' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_26) == 0x000728, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_86) == 0x00072C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_86' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_87) == 0x00073C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_87' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionDragonSmash_ReturnValue_3) == 0x000750, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionDragonSmash_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_88) == 0x000758, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_88' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_27) == 0x000768, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_89) == 0x00076C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_89' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_90) == 0x00077C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_90' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionDragonSmash_ReturnValue_4) == 0x000790, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionDragonSmash_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_91) == 0x000798, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_91' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_28) == 0x0007A8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_92) == 0x0007AC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_92' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_93) == 0x0007BC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_93' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_94) == 0x0007CC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_94' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_95) == 0x0007DC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_95' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_96) == 0x0007EC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_96' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_97) == 0x0007FC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_97' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_98) == 0x00080C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_98' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_99) == 0x00081C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_99' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_100) == 0x00082C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_100' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_101) == 0x00083C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_101' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_102) == 0x00084C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_102' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionDragonHoming_ReturnValue) == 0x000860, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionDragonHoming_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_103) == 0x000868, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_103' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_29) == 0x000878, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_104) == 0x00087C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_104' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_105) == 0x00088C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_105' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionVanishingAssault_ReturnValue) == 0x0008A0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionVanishingAssault_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_106) == 0x0008A8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_106' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_30) == 0x0008B8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionWaitMontageEnd_ReturnValue) == 0x0008C0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionWaitMontageEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_107) == 0x0008C8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_107' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_31) == 0x0008D8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_108) == 0x0008DC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_108' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_109) == 0x0008EC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_109' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_110) == 0x0008FC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_110' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionFastAvoidance_ReturnValue) == 0x000910, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionFastAvoidance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_111) == 0x000918, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_111' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_32) == 0x000928, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_112) == 0x00092C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_112' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionStepIn_ReturnValue) == 0x000940, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionStepIn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_113) == 0x000948, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_113' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_33) == 0x000958, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_114) == 0x00095C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_114' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionStepAvoidance_ReturnValue) == 0x000970, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionStepAvoidance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_115) == 0x000978, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_115' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_34) == 0x000988, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_116) == 0x00098C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_116' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_117) == 0x00099C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_117' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionRollingPress1_ReturnValue) == 0x0009B0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionRollingPress1_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_118) == 0x0009B8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_118' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_35) == 0x0009C8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_119) == 0x0009CC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_119' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionRollingPress2_ReturnValue) == 0x0009E0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionRollingPress2_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_120) == 0x0009E8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_120' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_36) == 0x0009F8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_121) == 0x0009FC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_121' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionParrySmash_ReturnValue) == 0x000A10, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionParrySmash_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_122) == 0x000A18, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_122' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_37) == 0x000A28, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_123) == 0x000A2C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_123' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionLocomotion_ReturnValue) == 0x000A40, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionLocomotion_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_124) == 0x000A48, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_124' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_38) == 0x000A58, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_DynamicCast_AsKorat_Character_Movement_Component) == 0x000A60, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_DynamicCast_AsKorat_Character_Movement_Component' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_DynamicCast_bSuccess) == 0x000A68, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000A69, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000A6A, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000A6B, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_BooleanAND_ReturnValue) == 0x000A6C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InAction_9) == 0x000A70, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InAction_9' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_BooleanAND_ReturnValue_1) == 0x000A78, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionMidAirKick_ReturnValue) == 0x000A80, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionMidAirKick_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_39) == 0x000A88, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetTargetCharacter_ReturnValue) == 0x000A90, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetTargetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetTargetCharacter_ReturnValue_1) == 0x000A98, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetTargetCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetTargetCharacter_ReturnValue_2) == 0x000AA0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetTargetCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000AA8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetTargetCharacter_ReturnValue_3) == 0x000AB0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetTargetCharacter_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000AB8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetRootCameraDirector_ReturnValue) == 0x000AC0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetRootCameraDirector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_BooleanAND_ReturnValue_2) == 0x000AC8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetRootCameraDirector_ReturnValue_1) == 0x000AD0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetRootCameraDirector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetSSBattleLevelScriptActor_ReturnValue) == 0x000AD8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetSSBattleLevelScriptActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetMenuCameraDirector_ReturnValue) == 0x000AE0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetMenuCameraDirector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetTargetCharacter_ReturnValue_4) == 0x000AE8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetTargetCharacter_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InMapChangeType) == 0x000AF0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InMapChangeType' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InStartTiming) == 0x000AF1, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InStartTiming' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_bInForceSearchNearParts) == 0x000AF2, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_bInForceSearchNearParts' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_125) == 0x000AF4, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_125' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_bConstruct) == 0x000B04, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_bConstruct' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InAction_8) == 0x000B08, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InAction_8' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InSectionName_2) == 0x000B10, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InSectionName_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InPlayRatio) == 0x000B18, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InPlayRatio' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_126) == 0x000B1C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_126' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetAnimInstance_ReturnValue) == 0x000B30, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InReactionAction) == 0x000B38, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InReactionAction' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InReactionDirection) == 0x000B40, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InReactionDirection' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InAddtiveReactionParameter) == 0x000B41, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InAddtiveReactionParameter' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_DynamicCast_AsBPI_Anim_Base) == 0x000B48, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_DynamicCast_AsBPI_Anim_Base' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_DynamicCast_bSuccess_1) == 0x000B58, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_ChangeReaction_ReturnValue) == 0x000B59, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_ChangeReaction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InAction_7) == 0x000B5C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InAction_7' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetTimeSeconds_ReturnValue) == 0x000B68, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000B70, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Conv_TextToString_ReturnValue) == 0x000B88, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Concat_StrStr_ReturnValue) == 0x000B98, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_127) == 0x000BA8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_127' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000BB8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InAction_6) == 0x000BC0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InAction_6' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_DynamicCast_AsBPI_Anim_Base_1) == 0x000BC8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_DynamicCast_AsBPI_Anim_Base_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_DynamicCast_bSuccess_2) == 0x000BD8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetSubRequestMontageAnimInstance_SubrequestMontageAnimInstance) == 0x000BE0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetSubRequestMontageAnimInstance_SubrequestMontageAnimInstance' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InAction_5) == 0x000BE8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InAction_5' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InActionFinishReason) == 0x000BF0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InActionFinishReason' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InAction_4) == 0x000BF4, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InAction_4' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetActionAlNumId_ReturnValue) == 0x000BFC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetActionAlNumId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Conv_NameToString_ReturnValue) == 0x000C08, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000C18, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Array_Add_ReturnValue) == 0x000C28, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000C2C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_128) == 0x000C30, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_128' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetTargetPawn_ReturnValue) == 0x000C40, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetTargetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_DynamicCast_AsSSCharacter) == 0x000C48, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_DynamicCast_AsSSCharacter' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_DynamicCast_bSuccess_3) == 0x000C50, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionRollingHammer_ReturnValue) == 0x000C58, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionRollingHammer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_40) == 0x000C60, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_MakeStruct_KoratSequencePlayInfo) == 0x000C64, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_MakeStruct_KoratSequencePlayInfo' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Array_Add_ReturnValue_1) == 0x000C84, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_129) == 0x000C88, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_129' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_MakeStruct_KoratSequencePlayInfo_1) == 0x000C98, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_MakeStruct_KoratSequencePlayInfo_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Array_Add_ReturnValue_2) == 0x000CB8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetTargetPawn_ReturnValue_1) == 0x000CC0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetTargetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_DynamicCast_AsSSCharacter_1) == 0x000CC8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_DynamicCast_AsSSCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_DynamicCast_bSuccess_4) == 0x000CD0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InActionCamera_1) == 0x000CD8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InActionCamera_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InOpponentActionCamera_1) == 0x000CE0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InOpponentActionCamera_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_TimeLineType_1) == 0x000CE8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_TimeLineType_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000CE9, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_SpawnSequenceActorForFreeTimeline_ReturnValue) == 0x000CF0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_SpawnSequenceActorForFreeTimeline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_TimeLineType) == 0x000CF8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_TimeLineType' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InActionCamera) == 0x000D00, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InActionCamera' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InOpponentActionCamera) == 0x000D08, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InOpponentActionCamera' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000D10, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_SpawnSequenceActorForFreeTimeline_ReturnValue_1) == 0x000D18, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_SpawnSequenceActorForFreeTimeline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InAction_3) == 0x000D20, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InAction_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InSectionName_1) == 0x000D28, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InSectionName_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InBeforeAction) == 0x000D30, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InBeforeAction' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InAfterAction) == 0x000D38, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InAfterAction' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000D40, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Subtract_IntInt_ReturnValue) == 0x000D44, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Add_IntInt_ReturnValue) == 0x000D48, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Greater_IntInt_ReturnValue) == 0x000D4C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_130) == 0x000D50, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_130' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetCollisionResponseToChannel_ReturnValue) == 0x000D60, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetCollisionResponseToChannel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x000D61, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000D68, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InHitBackData_1) == 0x000D80, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InHitBackData_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_ComposeRotators_ReturnValue) == 0x001060, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InSection) == 0x001078, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InSection' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsLockOnCharacter_ReturnValue) == 0x001080, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsLockOnCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InputVector_1) == 0x001088, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InputVector_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InputVector) == 0x001098, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InputVector' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_131) == 0x0010A8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_131' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_132) == 0x0010B8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_132' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InRotation) == 0x0010C8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InRotation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InHitBackData) == 0x0010E0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InHitBackData' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InHitStopData_2) == 0x0013C0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InHitStopData_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InHitStopData_1) == 0x0013D4, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InHitStopData_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InHitEffectAfterHitStop_1) == 0x0013F0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InHitEffectAfterHitStop_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InOpponentHitSituation_1) == 0x001490, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InOpponentHitSituation_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_SetHitStopOpponent_SetHitStop) == 0x001491, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_SetHitStopOpponent_SetHitStop' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_SetHitStopOwn_SetHitStop) == 0x001492, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_SetHitStopOwn_SetHitStop' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_41) == 0x001493, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InAction_2) == 0x001494, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InAction_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InAction_1) == 0x00149C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InAction_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InLocation_1) == 0x0014A8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InLocation_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InDrawType) == 0x0014C0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InDrawType' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InHitTime) == 0x0014C8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InHitTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InDrawDuration) == 0x0014D0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InDrawDuration' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_Canvas) == 0x0014D8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_Canvas' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_PlayerController) == 0x0014E0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_PlayerController' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_DPIScale) == 0x0014E8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_DPIScale' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InDebugCommand) == 0x0014F0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InDebugCommand' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InBattleKey_3) == 0x001500, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InBattleKey_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InBattleKey_2) == 0x001501, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InBattleKey_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InBattleKey_1) == 0x001502, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InBattleKey_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_133) == 0x001504, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_133' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InBattleKey) == 0x001514, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InBattleKey' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_134) == 0x001518, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_134' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_InputKoratBattleKeyJustPressed_self_CastInput) == 0x001528, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_InputKoratBattleKeyJustPressed_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, Temp_int_Array_Index_Variable) == 0x001538, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_InputKoratBattleKeyJustReleased_self_CastInput) == 0x001540, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_InputKoratBattleKeyJustReleased_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionRollingHammer_ReturnValue_1) == 0x001550, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionRollingHammer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_42) == 0x001558, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InDisappearTime) == 0x00155C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InDisappearTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InAppearTime) == 0x001560, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InAppearTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InAppearPosition) == 0x001568, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InAppearPosition' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InAppearDirection) == 0x001580, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InAppearDirection' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InAppearAction) == 0x001598, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InAppearAction' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InTraining) == 0x0015A0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InTraining' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InDramaticWarp) == 0x0015A1, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InDramaticWarp' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InSectionName) == 0x0015A4, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InSectionName' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InMovementMode) == 0x0015AC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InMovementMode' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x0015AD, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetCollisionEnabled_ReturnValue) == 0x0015AE, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetCollisionEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_NotEqual_ByteByte_ReturnValue_4) == 0x0015AF, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_NotEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_InputKoratBattleKeyDown_self_CastInput) == 0x0015B0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_InputKoratBattleKeyDown_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_InputKoratBattleKeyUp_self_CastInput) == 0x0015C0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_InputKoratBattleKeyUp_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, Temp_bool_True_if_break_was_hit_Variable) == 0x0015D0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_135) == 0x0015D4, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_135' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Not_PreBool_ReturnValue) == 0x0015E4, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_136) == 0x0015E8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_136' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_MontageLength) == 0x0015F8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_MontageLength' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_DynamicCast_AsBPI_Character_Action) == 0x001600, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_DynamicCast_AsBPI_Character_Action' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_DynamicCast_bSuccess_5) == 0x001610, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_DynamicCast_AsBPI_Character_Action_1) == 0x001618, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_DynamicCast_AsBPI_Character_Action_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_DynamicCast_bSuccess_6) == 0x001628, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_DynamicCast_AsBPI_Character_Action_2) == 0x001630, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_DynamicCast_AsBPI_Character_Action_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_DynamicCast_bSuccess_7) == 0x001640, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_OnEndRequestAllAnim_self_CastInput) == 0x001648, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_OnEndRequestAllAnim_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_OnPlayAnim_self_CastInput) == 0x001658, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_OnPlayAnim_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InMovementTransition) == 0x001668, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InMovementTransition' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_bInHoming) == 0x001669, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_bInHoming' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InHitStopData) == 0x00166C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InHitStopData' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InHitEffectAfterHitStop) == 0x001680, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InHitEffectAfterHitStop' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_bInBlownAttack) == 0x001720, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_bInBlownAttack' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InAttackType) == 0x001721, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InAttackType' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InOpponentHitSituation) == 0x001722, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InOpponentHitSituation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InAttackAction) == 0x001724, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InAttackAction' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InActor) == 0x001730, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InActor' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InLocation) == 0x001738, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InLocation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InUseBattleTargetPawn) == 0x001750, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InUseBattleTargetPawn' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_SetHitStopOwn_SetHitStop_1) == 0x001751, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_SetHitStopOwn_SetHitStop_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_43) == 0x001752, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_BattleKey_5) == 0x001753, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_BattleKey_5' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_BattleKey_4) == 0x001754, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_BattleKey_4' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_InputKoratBattleKeyJustPressed_self_CastInput_1) == 0x001758, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_InputKoratBattleKeyJustPressed_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_InputKoratBattleKeyDown_self_CastInput_1) == 0x001768, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_InputKoratBattleKeyDown_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_BattleKey_3) == 0x001778, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_BattleKey_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_137) == 0x00177C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_137' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_InputKoratBattleKeyJustReleased_self_CastInput_1) == 0x001790, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_InputKoratBattleKeyJustReleased_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_138) == 0x0017A0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_138' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_139) == 0x0017B0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_139' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetSSBattleLevelScriptActor_ReturnValue_1) == 0x0017C0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetSSBattleLevelScriptActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetTargetCharacter_ReturnValue_5) == 0x0017C8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetTargetCharacter_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetCurrentAction_OutAction) == 0x0017D0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetCurrentAction_OutAction' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetBlastSlot_ReturnValue) == 0x0017D8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetBlastSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_140) == 0x0017DC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_140' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, Temp_int_Loop_Counter_Variable) == 0x0017EC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionCharge_ReturnValue) == 0x0017F0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionCharge_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_44) == 0x0017F8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Add_IntInt_ReturnValue_1) == 0x0017FC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetConsoleVariableIntValue_ReturnValue) == 0x001800, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetConsoleVariableIntValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x001804, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionBaseReaction_ReturnValue) == 0x001808, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionBaseReaction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_45) == 0x001810, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_45' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetController_ReturnValue) == 0x001818, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_DynamicCast_AsSSBattle_Controller) == 0x001820, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_DynamicCast_AsSSBattle_Controller' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_DynamicCast_bSuccess_8) == 0x001830, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x001838, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetAnimInstance_ReturnValue_2) == 0x001840, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetAnimInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_DynamicCast_AsSSBattle_Controller_1) == 0x001848, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_DynamicCast_AsSSBattle_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_DynamicCast_bSuccess_9) == 0x001858, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_DynamicCast_AsBPI_Anim_Base_2) == 0x001860, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_DynamicCast_AsBPI_Anim_Base_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_DynamicCast_bSuccess_10) == 0x001870, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetHitStopRequest_OutHitStopTime) == 0x001874, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetHitStopRequest_OutHitStopTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetHitStopRequest_OutHitStopDilation) == 0x001878, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetHitStopRequest_OutHitStopDilation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetHitStopRequest_OutHitStopDelay) == 0x00187C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetHitStopRequest_OutHitStopDelay' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetHitStopRequest_ReturnValue) == 0x001880, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetHitStopRequest_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Not_PreBool_ReturnValue_1) == 0x001881, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_SpawnSequenceActorByHitEffectAfterHitStop_ReturnValue) == 0x001888, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_SpawnSequenceActorByHitEffectAfterHitStop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_46) == 0x001890, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_46' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x001891, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_141) == 0x001894, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_141' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0018A8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetEffectiveTimeDilation_ReturnValue) == 0x0018B0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetEffectiveTimeDilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_142) == 0x0018B4, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_142' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0018C8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetConsoleVariableIntValue_ReturnValue_1) == 0x0018D0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetConsoleVariableIntValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0018D4, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0018D8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0018E0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x0018E8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetEffectiveTimeDilation_ReturnValue_1) == 0x0018F0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetEffectiveTimeDilation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0018F8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetConsoleVariableIntValue_ReturnValue_2) == 0x001900, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetConsoleVariableIntValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x001904, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x001908, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_143) == 0x001910, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_143' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_144) == 0x001920, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_144' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionGuardClear_ReturnValue) == 0x001930, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionGuardClear_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_47) == 0x001938, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_47' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetController_ReturnValue_1) == 0x001940, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_DynamicCast_AsSSBattle_Controller_2) == 0x001948, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_DynamicCast_AsSSBattle_Controller_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_DynamicCast_bSuccess_11) == 0x001958, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x001959, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_BooleanOR_ReturnValue) == 0x00195A, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_145) == 0x00195C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_145' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x001970, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetConsoleVariableIntValue_ReturnValue_3) == 0x001978, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetConsoleVariableIntValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x00197C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x00197D, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x00197E, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_146) == 0x001980, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_146' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_147) == 0x001990, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_147' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_148) == 0x0019A0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_148' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Not_PreBool_ReturnValue_2) == 0x0019B0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_BooleanAND_ReturnValue_3) == 0x0019B1, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0019B8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionGuard_ReturnValue) == 0x0019C0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionGuard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_KnockbackMovementStart_ReturnValue) == 0x0019C8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_KnockbackMovementStart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_48) == 0x0019CC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_48' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetConsoleVariableIntValue_ReturnValue_4) == 0x0019D0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetConsoleVariableIntValue_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x0019D4, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_149) == 0x0019D8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_149' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_150) == 0x0019E8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_150' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetAllActorsOfClass_OutActors) == 0x0019F8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Array_Get_Item) == 0x001A08, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Array_Length_ReturnValue) == 0x001A10, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_K2_GetActorLocation_ReturnValue) == 0x001A18, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Less_IntInt_ReturnValue) == 0x001A30, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_BooleanAND_ReturnValue_4) == 0x001A31, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_EqualEqual_NameName_ReturnValue) == 0x001A32, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Subtract_DoubleDouble_ReturnValue_4) == 0x001A38, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Subtract_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CustomEvent_inDestoryComp) == 0x001A40, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CustomEvent_inDestoryComp' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_RushType) == 0x001A48, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_RushType' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InLatentHelper) == 0x001A50, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InLatentHelper' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_49) == 0x001A58, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_49' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_DynamicCast_AsSSCharacter_2) == 0x001A60, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_DynamicCast_AsSSCharacter_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_DynamicCast_bSuccess_12) == 0x001A68, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_151) == 0x001A6C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_151' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionKidan_ReturnValue) == 0x001A80, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionKidan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_DynamicCast_AsBPI_Character_Locomotion) == 0x001A88, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_DynamicCast_AsBPI_Character_Locomotion' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_DynamicCast_bSuccess_13) == 0x001A98, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_50) == 0x001A99, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_50' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_DynamicCast_AsBPI_Character_Locomotion_1) == 0x001AA0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_DynamicCast_AsBPI_Character_Locomotion_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_DynamicCast_bSuccess_14) == 0x001AB0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_152) == 0x001AB4, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_152' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_RequestAnimData) == 0x001AC4, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_RequestAnimData' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_Hit_1) == 0x001AD0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_Hit_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_MyComp) == 0x001BB8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_Other) == 0x001BC0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_OtherComp) == 0x001BC8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_bSelfMoved) == 0x001BD0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_HitLocation) == 0x001BD8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_HitNormal) == 0x001BF0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_NormalImpulse) == 0x001C08, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_Hit) == 0x001C20, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_NewController) == 0x001D08, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_NewController' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InReplaceAnim_1) == 0x001D10, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InReplaceAnim_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionVanishingAttack_ReturnValue) == 0x001D18, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionVanishingAttack_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_51) == 0x001D20, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_51' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_DeltaSeconds) == 0x001D24, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_BattleKey_2) == 0x001D28, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_BattleKey_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_BattleKey_1) == 0x001D29, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_BattleKey_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InAction) == 0x001D2C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InAction' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_Enable) == 0x001D34, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_Enable' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_MakeStruct_KoratReplaceAnimationDataList) == 0x001D38, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_MakeStruct_KoratReplaceAnimationDataList' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionPlayAction_ReturnValue) == 0x001D40, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionPlayAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_BattleKey) == 0x001D48, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_BattleKey' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_52) == 0x001D49, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_52' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_InReplaceAnim) == 0x001D4C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_InReplaceAnim' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_153) == 0x001D54, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_153' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionRevengeCounter_ReturnValue) == 0x001D68, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionRevengeCounter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_53) == 0x001D70, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_53' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_WorldDirection) == 0x001D78, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_WorldDirection' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_Value) == 0x001D90, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_Value' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_Construction) == 0x001D98, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_Construction' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_Scane) == 0x001DA0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_Scane' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_IsLeft) == 0x001DA8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_IsLeft' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Event_IsPreviousUseLeft) == 0x001DA9, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Event_IsPreviousUseLeft' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_154) == 0x001DAC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_154' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, Temp_int_Variable) == 0x001DBC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionGrandSlash_ReturnValue) == 0x001DC0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionGrandSlash_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_155) == 0x001DC8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_155' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_54) == 0x001DD8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_54' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_156) == 0x001DDC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_156' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_157) == 0x001DEC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_157' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_158) == 0x001DFC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_158' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionLiftStrike_ReturnValue) == 0x001E10, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionLiftStrike_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_55) == 0x001E18, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_55' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_159) == 0x001E1C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_159' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_160) == 0x001E2C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_160' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, Temp_int_Variable_1) == 0x001E3C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_161) == 0x001E40, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_161' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionCannon_ReturnValue) == 0x001E50, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionCannon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_56) == 0x001E58, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_56' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_162) == 0x001E5C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_162' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_163) == 0x001E6C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_163' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_164) == 0x001E7C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_164' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_165) == 0x001E8C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_165' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_166) == 0x001E9C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_166' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_AsyncTransitionHeavyFinish_ReturnValue) == 0x001EB0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_AsyncTransitionHeavyFinish_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_IsValid_ReturnValue_57) == 0x001EB8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_IsValid_ReturnValue_57' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_167) == 0x001EBC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_167' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_168) == 0x001ECC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_168' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_169) == 0x001EDC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_169' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_170) == 0x001EEC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_170' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_171) == 0x001EFC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_171' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x001F0C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x001F0D, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x001F0E, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_LessEqual_DoubleDouble_ReturnValue_2) == 0x001F0F, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_LessEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_172) == 0x001F10, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_172' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_LessEqual_DoubleDouble_ReturnValue_3) == 0x001F20, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_LessEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_173) == 0x001F24, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_173' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x001F38, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, Temp_bool_Variable) == 0x001F40, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_Select_Default) == 0x001F48, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetPreBattleProductionAction_bOutIsSpecialFate) == 0x001F50, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetPreBattleProductionAction_bOutIsSpecialFate' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_GetPreBattleProductionAction_ReturnValue) == 0x001F54, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_GetPreBattleProductionAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_CreateDelegate_OutputDelegate_174) == 0x001F5C, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_CreateDelegate_OutputDelegate_174' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x001F70, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_DrawTransitionActionName_DPIScale_ImplicitCast) == 0x001F78, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_DrawTransitionActionName_DPIScale_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_StartVanishing_InDisappearTime_ImplicitCast) == 0x001F80, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_StartVanishing_InDisappearTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_StartVanishing_InAppearTime_ImplicitCast) == 0x001F88, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_StartVanishing_InAppearTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_SetCustomTimeDilation_InTimeDilation_ImplicitCast) == 0x001F90, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_SetCustomTimeDilation_InTimeDilation_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_VariableSet_HitStop_ImplicitCast) == 0x001F98, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_VariableSet_HitStop_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_VariableSet_HitTimeDilation_ImplicitCast) == 0x001FA0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_VariableSet_HitTimeDilation_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_VariableSet_HitStopDelay_ImplicitCast) == 0x001FA8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_VariableSet_HitStopDelay_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_SetCustomTimeDilation_InTimeDilation_ImplicitCast_1) == 0x001FB0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_SetCustomTimeDilation_InTimeDilation_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x001FB8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Divide_DoubleDouble_B_ImplicitCast_1) == 0x001FC0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Divide_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_KnockbackMovementApply_InKnockbackTime_ImplicitCast) == 0x001FC8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_KnockbackMovementApply_InKnockbackTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_KnockbackMovementApply_InDeltaTime_ImplicitCast) == 0x001FCC, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_KnockbackMovementApply_InDeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x001FD0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_VariableSet_KnockBackDecelerationTime_ImplicitCast) == 0x001FD8, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_VariableSet_KnockBackDecelerationTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ExecuteUbergraph_BP_Character, K2Node_VariableSet_DeltaSeconds_ImplicitCast) == 0x001FE0, "Member 'BP_Character_C_ExecuteUbergraph_BP_Character::K2Node_VariableSet_DeltaSeconds_ImplicitCast' has a wrong offset!");

// Function BP_Character.BP_Character_C.FreeCameraTargetRotate
// 0x0398 (0x0398 - 0x0000)
struct BP_Character_C_FreeCameraTargetRotate final
{
public:
	struct FVector2D                              InputVector;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InputFreeCameraSpeedScale;                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InputFreeCameraReleaseElapsedTime;                 // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InputFreeCameraElapsedTime;                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LocalClampedRotator;                               // 0x0028(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               LocalAddtionalRotator;                             // 0x0040(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetFreeCameraTurnSpeedPitch_ReturnValue;  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFreeCameraTurnSpeedYaw_ReturnValue;    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue;        // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ASSNotifyActionCameraTargetActor*       CallFunc_GetFreeCameraTargetActor_ReturnValue;     // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0140(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSNotifyActionCameraTargetActor*       CallFunc_GetFreeCameraTargetActor_ReturnValue_1;   // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Ease_ReturnValue;                         // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_CalcRotatorTarget_ReturnValue;            // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ClampAngle_ReturnValue;                   // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASSBattleLevelScriptActor*              CallFunc_GetSSBattleLevelScriptActor_ReturnValue;  // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetBattleElapsedTime_ReturnValue;         // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Ease_ReturnValue_1;                       // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASSBattleLevelScriptActor*              CallFunc_GetSSBattleLevelScriptActor_ReturnValue_1; // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBattleElapsedTime_ReturnValue_1;       // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_3;                     // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASSNotifyActionCameraTargetActor*       CallFunc_GetFreeCameraTargetActor_ReturnValue_2;   // 0x0320(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329[0x3];                                      // 0x0329(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_RotatorFloat_B_ImplicitCast;     // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1;   // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ClampAngle_MaxAngleDegrees_ImplicitCast;  // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ClampAngle_MinAngleDegrees_ImplicitCast;  // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ClampAngle_AngleDegrees_ImplicitCast;     // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast_1;         // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1;   // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Value_ImplicitCast;                // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_FreeCameraPitchMax_ImplicitCast; // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384[0x4];                                      // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_Value_ImplicitCast_1;              // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_FreeCameraPitchMin_ImplicitCast; // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_FreeCameraTargetRotate) == 0x000008, "Wrong alignment on BP_Character_C_FreeCameraTargetRotate");
static_assert(sizeof(BP_Character_C_FreeCameraTargetRotate) == 0x000398, "Wrong size on BP_Character_C_FreeCameraTargetRotate");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, InputVector) == 0x000000, "Member 'BP_Character_C_FreeCameraTargetRotate::InputVector' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, InputFreeCameraSpeedScale) == 0x000010, "Member 'BP_Character_C_FreeCameraTargetRotate::InputFreeCameraSpeedScale' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, InputFreeCameraReleaseElapsedTime) == 0x000018, "Member 'BP_Character_C_FreeCameraTargetRotate::InputFreeCameraReleaseElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, InputFreeCameraElapsedTime) == 0x000020, "Member 'BP_Character_C_FreeCameraTargetRotate::InputFreeCameraElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, LocalClampedRotator) == 0x000028, "Member 'BP_Character_C_FreeCameraTargetRotate::LocalClampedRotator' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, LocalAddtionalRotator) == 0x000040, "Member 'BP_Character_C_FreeCameraTargetRotate::LocalAddtionalRotator' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_GetFreeCameraTurnSpeedPitch_ReturnValue) == 0x000058, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_GetFreeCameraTurnSpeedPitch_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_GetFreeCameraTurnSpeedYaw_ReturnValue) == 0x00005C, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_GetFreeCameraTurnSpeedYaw_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_BreakVector2D_X) == 0x000060, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_BreakVector2D_Y) == 0x000068, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_BreakVector2D_X_1) == 0x000078, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_BreakVector2D_Y_1) == 0x000080, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000090, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000098, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000A0, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000A8, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_MakeRotator_ReturnValue) == 0x0000C0, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_MakeVector_ReturnValue) == 0x0000D8, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_Multiply_RotatorFloat_ReturnValue) == 0x0000F0, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_Multiply_RotatorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_GetFreeCameraTargetActor_ReturnValue) == 0x000108, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_GetFreeCameraTargetActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000110, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_Add_VectorVector_ReturnValue) == 0x000128, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000140, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000228, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_GetFreeCameraTargetActor_ReturnValue_1) == 0x000230, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_GetFreeCameraTargetActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000238, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_Ease_ReturnValue) == 0x000250, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_CalcRotatorTarget_ReturnValue) == 0x000258, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_CalcRotatorTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_BreakRotator_Roll) == 0x000270, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_BreakRotator_Pitch) == 0x000274, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_BreakRotator_Yaw) == 0x000278, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_ClampAngle_ReturnValue) == 0x000280, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_ClampAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_GetSSBattleLevelScriptActor_ReturnValue) == 0x000288, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_GetSSBattleLevelScriptActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_MakeRotator_ReturnValue_1) == 0x000290, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_GetBattleElapsedTime_ReturnValue) == 0x0002A8, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_GetBattleElapsedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0002B0, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0002B8, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_Ease_ReturnValue_1) == 0x0002C0, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_Ease_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0002C8, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0002D0, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_FClamp_ReturnValue) == 0x0002D8, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_GetSSBattleLevelScriptActor_ReturnValue_1) == 0x0002E0, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_GetSSBattleLevelScriptActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_GetBattleElapsedTime_ReturnValue_1) == 0x0002E8, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_GetBattleElapsedTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0002F0, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0002F8, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_FClamp_ReturnValue_1) == 0x000300, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000308, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_FClamp_ReturnValue_2) == 0x000310, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_FClamp_ReturnValue_3) == 0x000318, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_GetFreeCameraTargetActor_ReturnValue_2) == 0x000320, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_GetFreeCameraTargetActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_IsValid_ReturnValue) == 0x000328, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_Multiply_RotatorFloat_B_ImplicitCast) == 0x00032C, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_Multiply_RotatorFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000330, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1) == 0x000338, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000340, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000344, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_ClampAngle_MaxAngleDegrees_ImplicitCast) == 0x000348, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_ClampAngle_MaxAngleDegrees_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_ClampAngle_MinAngleDegrees_ImplicitCast) == 0x000350, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_ClampAngle_MinAngleDegrees_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_ClampAngle_AngleDegrees_ImplicitCast) == 0x000358, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_ClampAngle_AngleDegrees_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_MakeRotator_Pitch_ImplicitCast_1) == 0x000360, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_MakeRotator_Pitch_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000368, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1) == 0x000370, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_FClamp_Value_ImplicitCast) == 0x000378, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_FClamp_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, K2Node_VariableSet_FreeCameraPitchMax_ImplicitCast) == 0x000380, "Member 'BP_Character_C_FreeCameraTargetRotate::K2Node_VariableSet_FreeCameraPitchMax_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, CallFunc_FClamp_Value_ImplicitCast_1) == 0x000388, "Member 'BP_Character_C_FreeCameraTargetRotate::CallFunc_FClamp_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_FreeCameraTargetRotate, K2Node_VariableSet_FreeCameraPitchMin_ImplicitCast) == 0x000390, "Member 'BP_Character_C_FreeCameraTargetRotate::K2Node_VariableSet_FreeCameraPitchMin_ImplicitCast' has a wrong offset!");

// Function BP_Character.BP_Character_C.fromBP_DestoryComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_C_FromBP_DestoryComponent final
{
public:
	class UActorComponent*                        InDestoryComp;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_FromBP_DestoryComponent) == 0x000008, "Wrong alignment on BP_Character_C_FromBP_DestoryComponent");
static_assert(sizeof(BP_Character_C_FromBP_DestoryComponent) == 0x000008, "Wrong size on BP_Character_C_FromBP_DestoryComponent");
static_assert(offsetof(BP_Character_C_FromBP_DestoryComponent, InDestoryComp) == 0x000000, "Member 'BP_Character_C_FromBP_DestoryComponent::InDestoryComp' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetAttackRotation
// 0x0078 (0x0078 - 0x0000)
struct BP_Character_C_GetAttackRotation final
{
public:
	class AActor*                                 InActor;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               OutRotation;                                       // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UKoratCharacterMovementComponent*       K2Node_DynamicCast_AsKorat_Character_Movement_Component; // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Character_C_GetAttackRotation) == 0x000008, "Wrong alignment on BP_Character_C_GetAttackRotation");
static_assert(sizeof(BP_Character_C_GetAttackRotation) == 0x000078, "Wrong size on BP_Character_C_GetAttackRotation");
static_assert(offsetof(BP_Character_C_GetAttackRotation, InActor) == 0x000000, "Member 'BP_Character_C_GetAttackRotation::InActor' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetAttackRotation, OutRotation) == 0x000008, "Member 'BP_Character_C_GetAttackRotation::OutRotation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetAttackRotation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000020, "Member 'BP_Character_C_GetAttackRotation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetAttackRotation, K2Node_DynamicCast_AsBP_Character) == 0x000038, "Member 'BP_Character_C_GetAttackRotation::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetAttackRotation, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_Character_C_GetAttackRotation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetAttackRotation, CallFunc_BreakRotator_Roll) == 0x000044, "Member 'BP_Character_C_GetAttackRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetAttackRotation, CallFunc_BreakRotator_Pitch) == 0x000048, "Member 'BP_Character_C_GetAttackRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetAttackRotation, CallFunc_BreakRotator_Yaw) == 0x00004C, "Member 'BP_Character_C_GetAttackRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetAttackRotation, K2Node_DynamicCast_AsKorat_Character_Movement_Component) == 0x000050, "Member 'BP_Character_C_GetAttackRotation::K2Node_DynamicCast_AsKorat_Character_Movement_Component' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetAttackRotation, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_Character_C_GetAttackRotation::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetAttackRotation, CallFunc_MakeRotator_ReturnValue) == 0x000060, "Member 'BP_Character_C_GetAttackRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetBlowHitForecast
// 0x0090 (0x0090 - 0x0000)
struct BP_Character_C_GetBlowHitForecast final
{
public:
	struct FVector                                OutLocation;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutHitTime;                                        // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratMapAttributeDataList             OutMapAttribute;                                   // 0x001C(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                OutHitNormal;                                      // 0x0028(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBlowHitForecast_IsHit;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetBlowHitForecast_Location;              // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetBlowHitForecast_HitTime;               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratMapAttributeDataList             CallFunc_GetBlowHitForecast_MapAttribute;          // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBlowHitForecast_HitNormal;             // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_FunctionResult_OutHitTime_ImplicitCast;     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GetBlowHitForecast) == 0x000008, "Wrong alignment on BP_Character_C_GetBlowHitForecast");
static_assert(sizeof(BP_Character_C_GetBlowHitForecast) == 0x000090, "Wrong size on BP_Character_C_GetBlowHitForecast");
static_assert(offsetof(BP_Character_C_GetBlowHitForecast, OutLocation) == 0x000000, "Member 'BP_Character_C_GetBlowHitForecast::OutLocation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetBlowHitForecast, OutHitTime) == 0x000018, "Member 'BP_Character_C_GetBlowHitForecast::OutHitTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetBlowHitForecast, OutMapAttribute) == 0x00001C, "Member 'BP_Character_C_GetBlowHitForecast::OutMapAttribute' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetBlowHitForecast, OutHitNormal) == 0x000028, "Member 'BP_Character_C_GetBlowHitForecast::OutHitNormal' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetBlowHitForecast, CallFunc_GetBlowHitForecast_IsHit) == 0x000040, "Member 'BP_Character_C_GetBlowHitForecast::CallFunc_GetBlowHitForecast_IsHit' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetBlowHitForecast, CallFunc_GetBlowHitForecast_Location) == 0x000048, "Member 'BP_Character_C_GetBlowHitForecast::CallFunc_GetBlowHitForecast_Location' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetBlowHitForecast, CallFunc_GetBlowHitForecast_HitTime) == 0x000060, "Member 'BP_Character_C_GetBlowHitForecast::CallFunc_GetBlowHitForecast_HitTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetBlowHitForecast, CallFunc_GetBlowHitForecast_MapAttribute) == 0x000068, "Member 'BP_Character_C_GetBlowHitForecast::CallFunc_GetBlowHitForecast_MapAttribute' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetBlowHitForecast, CallFunc_GetBlowHitForecast_HitNormal) == 0x000070, "Member 'BP_Character_C_GetBlowHitForecast::CallFunc_GetBlowHitForecast_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetBlowHitForecast, CallFunc_BooleanAND_ReturnValue) == 0x000088, "Member 'BP_Character_C_GetBlowHitForecast::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetBlowHitForecast, K2Node_FunctionResult_OutHitTime_ImplicitCast) == 0x00008C, "Member 'BP_Character_C_GetBlowHitForecast::K2Node_FunctionResult_OutHitTime_ImplicitCast' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetBPCharacterLocomotionComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_C_GetBPCharacterLocomotionComponent final
{
public:
	class UBP_CharacterLocomotionComponent_C*     LocomotionComponent;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GetBPCharacterLocomotionComponent) == 0x000008, "Wrong alignment on BP_Character_C_GetBPCharacterLocomotionComponent");
static_assert(sizeof(BP_Character_C_GetBPCharacterLocomotionComponent) == 0x000008, "Wrong size on BP_Character_C_GetBPCharacterLocomotionComponent");
static_assert(offsetof(BP_Character_C_GetBPCharacterLocomotionComponent, LocomotionComponent) == 0x000000, "Member 'BP_Character_C_GetBPCharacterLocomotionComponent::LocomotionComponent' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetBPCharacterMontageComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_C_GetBPCharacterMontageComponent final
{
public:
	class UBP_CharacterMontageComponent_C*        Component;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GetBPCharacterMontageComponent) == 0x000008, "Wrong alignment on BP_Character_C_GetBPCharacterMontageComponent");
static_assert(sizeof(BP_Character_C_GetBPCharacterMontageComponent) == 0x000008, "Wrong size on BP_Character_C_GetBPCharacterMontageComponent");
static_assert(offsetof(BP_Character_C_GetBPCharacterMontageComponent, Component) == 0x000000, "Member 'BP_Character_C_GetBPCharacterMontageComponent::Component' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetCameraVirtualTargetLocation
// 0x0080 (0x0080 - 0x0000)
struct BP_Character_C_GetCameraVirtualTargetLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 LocalTargetActor;                                  // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ASSNotifyActionCameraTargetActor*       CallFunc_GetFreeCameraTargetActor_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASSNotifyActionCameraTargetActor*       CallFunc_GetFreeCameraTargetActor_ReturnValue_1;   // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetTargetPawn_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetHomingLocation_ReturnValue;            // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLockOnCharacter_ReturnValue;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GetCameraVirtualTargetLocation) == 0x000008, "Wrong alignment on BP_Character_C_GetCameraVirtualTargetLocation");
static_assert(sizeof(BP_Character_C_GetCameraVirtualTargetLocation) == 0x000080, "Wrong size on BP_Character_C_GetCameraVirtualTargetLocation");
static_assert(offsetof(BP_Character_C_GetCameraVirtualTargetLocation, Location) == 0x000000, "Member 'BP_Character_C_GetCameraVirtualTargetLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCameraVirtualTargetLocation, LocalTargetActor) == 0x000018, "Member 'BP_Character_C_GetCameraVirtualTargetLocation::LocalTargetActor' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCameraVirtualTargetLocation, CallFunc_GetFreeCameraTargetActor_ReturnValue) == 0x000020, "Member 'BP_Character_C_GetCameraVirtualTargetLocation::CallFunc_GetFreeCameraTargetActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCameraVirtualTargetLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'BP_Character_C_GetCameraVirtualTargetLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCameraVirtualTargetLocation, CallFunc_GetFreeCameraTargetActor_ReturnValue_1) == 0x000040, "Member 'BP_Character_C_GetCameraVirtualTargetLocation::CallFunc_GetFreeCameraTargetActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCameraVirtualTargetLocation, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_Character_C_GetCameraVirtualTargetLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCameraVirtualTargetLocation, CallFunc_GetTargetPawn_ReturnValue) == 0x000050, "Member 'BP_Character_C_GetCameraVirtualTargetLocation::CallFunc_GetTargetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCameraVirtualTargetLocation, CallFunc_IsValid_ReturnValue_1) == 0x000058, "Member 'BP_Character_C_GetCameraVirtualTargetLocation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCameraVirtualTargetLocation, CallFunc_GetHomingLocation_ReturnValue) == 0x000060, "Member 'BP_Character_C_GetCameraVirtualTargetLocation::CallFunc_GetHomingLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCameraVirtualTargetLocation, CallFunc_IsLockOnCharacter_ReturnValue) == 0x000078, "Member 'BP_Character_C_GetCameraVirtualTargetLocation::CallFunc_IsLockOnCharacter_ReturnValue' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetCharacterMovementModePrioritizeSaveFromBP
// 0x0001 (0x0001 - 0x0000)
struct BP_Character_C_GetCharacterMovementModePrioritizeSaveFromBP final
{
public:
	EMovementMode                                 ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GetCharacterMovementModePrioritizeSaveFromBP) == 0x000001, "Wrong alignment on BP_Character_C_GetCharacterMovementModePrioritizeSaveFromBP");
static_assert(sizeof(BP_Character_C_GetCharacterMovementModePrioritizeSaveFromBP) == 0x000001, "Wrong size on BP_Character_C_GetCharacterMovementModePrioritizeSaveFromBP");
static_assert(offsetof(BP_Character_C_GetCharacterMovementModePrioritizeSaveFromBP, ReturnValue) == 0x000000, "Member 'BP_Character_C_GetCharacterMovementModePrioritizeSaveFromBP::ReturnValue' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetCurrentHitBackBlowBrakeParameter
// 0x0024 (0x0024 - 0x0000)
struct BP_Character_C_GetCurrentHitBackBlowBrakeParameter final
{
public:
	struct FKoratBlowReactionBrakeParameter       ReturnValue;                                       // 0x0000(0x0024)(Parm, OutParm, ReturnParm, NoDestructor)
};
static_assert(alignof(BP_Character_C_GetCurrentHitBackBlowBrakeParameter) == 0x000004, "Wrong alignment on BP_Character_C_GetCurrentHitBackBlowBrakeParameter");
static_assert(sizeof(BP_Character_C_GetCurrentHitBackBlowBrakeParameter) == 0x000024, "Wrong size on BP_Character_C_GetCurrentHitBackBlowBrakeParameter");
static_assert(offsetof(BP_Character_C_GetCurrentHitBackBlowBrakeParameter, ReturnValue) == 0x000000, "Member 'BP_Character_C_GetCurrentHitBackBlowBrakeParameter::ReturnValue' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetDownValueLimitReactionParameter
// 0x05F8 (0x05F8 - 0x0000)
struct BP_Character_C_GetDownValueLimitReactionParameter final
{
public:
	struct FKoratDamageReactionDataList           OutDamageReactionDataList;                         // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	struct FKoratHitBackMovementData              OutHitBackData;                                    // 0x0008(0x02E0)(Parm, OutParm)
	struct FKoratHitStopData                      OutHitStopData;                                    // 0x02E8(0x0014)(Parm, OutParm, NoDestructor)
	struct FKoratHitStopData                      ______B_______;                                    // 0x02FC(0x0014)(Edit, BlueprintVisible, NoDestructor)
	struct FKoratHitBackMovementData              ______B______;                                     // 0x0310(0x02E0)(Edit, BlueprintVisible)
	struct FKoratDamageReactionDataList           ______B___;                                        // 0x05F0(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GetDownValueLimitReactionParameter) == 0x000008, "Wrong alignment on BP_Character_C_GetDownValueLimitReactionParameter");
static_assert(sizeof(BP_Character_C_GetDownValueLimitReactionParameter) == 0x0005F8, "Wrong size on BP_Character_C_GetDownValueLimitReactionParameter");
static_assert(offsetof(BP_Character_C_GetDownValueLimitReactionParameter, OutDamageReactionDataList) == 0x000000, "Member 'BP_Character_C_GetDownValueLimitReactionParameter::OutDamageReactionDataList' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetDownValueLimitReactionParameter, OutHitBackData) == 0x000008, "Member 'BP_Character_C_GetDownValueLimitReactionParameter::OutHitBackData' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetDownValueLimitReactionParameter, OutHitStopData) == 0x0002E8, "Member 'BP_Character_C_GetDownValueLimitReactionParameter::OutHitStopData' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetDownValueLimitReactionParameter, ______B_______) == 0x0002FC, "Member 'BP_Character_C_GetDownValueLimitReactionParameter::______B_______' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetDownValueLimitReactionParameter, ______B______) == 0x000310, "Member 'BP_Character_C_GetDownValueLimitReactionParameter::______B______' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetDownValueLimitReactionParameter, ______B___) == 0x0005F0, "Member 'BP_Character_C_GetDownValueLimitReactionParameter::______B___' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetGuardClearReaction
// 0x00C8 (0x00C8 - 0x0000)
struct BP_Character_C_GetGuardClearReaction final
{
public:
	struct FKoratActionDataList                   InActionDataList;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FKoratActionDataList                   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	TMap<struct FKoratActionDataList, struct FKoratActionDataList> GuardClearAction;                                  // 0x0010(0x0050)(Edit, BlueprintVisible)
	TMap<struct FKoratActionDataList, struct FKoratActionDataList> K2Node_MakeVariable_MakeVariableOutput;            // 0x0060(0x0050)()
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTransitionFlyingMode_ReturnValue;       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratActionDataList                   CallFunc_Map_Find_Value;                           // 0x00BC(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GetGuardClearReaction) == 0x000008, "Wrong alignment on BP_Character_C_GetGuardClearReaction");
static_assert(sizeof(BP_Character_C_GetGuardClearReaction) == 0x0000C8, "Wrong size on BP_Character_C_GetGuardClearReaction");
static_assert(offsetof(BP_Character_C_GetGuardClearReaction, InActionDataList) == 0x000000, "Member 'BP_Character_C_GetGuardClearReaction::InActionDataList' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGuardClearReaction, ReturnValue) == 0x000008, "Member 'BP_Character_C_GetGuardClearReaction::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGuardClearReaction, GuardClearAction) == 0x000010, "Member 'BP_Character_C_GetGuardClearReaction::GuardClearAction' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGuardClearReaction, K2Node_MakeVariable_MakeVariableOutput) == 0x000060, "Member 'BP_Character_C_GetGuardClearReaction::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGuardClearReaction, CallFunc_GetSSCharacter_SSCharacter) == 0x0000B0, "Member 'BP_Character_C_GetGuardClearReaction::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGuardClearReaction, CallFunc_IsTransitionFlyingMode_ReturnValue) == 0x0000B8, "Member 'BP_Character_C_GetGuardClearReaction::CallFunc_IsTransitionFlyingMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGuardClearReaction, CallFunc_Map_Find_Value) == 0x0000BC, "Member 'BP_Character_C_GetGuardClearReaction::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGuardClearReaction, CallFunc_Map_Find_ReturnValue) == 0x0000C4, "Member 'BP_Character_C_GetGuardClearReaction::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetHighSpeedMovementForecast
// 0x0078 (0x0078 - 0x0000)
struct BP_Character_C_GetHighSpeedMovementForecast final
{
public:
	struct FVector                                OutLocation;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               OutRotator;                                        // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         OutRemainingTime;                                  // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0034(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHighSpeedMoveForecast_IsDetermined;    // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetHighSpeedMoveForecast_Location;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetHighSpeedMoveForecast_Rotation;        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_GetHighSpeedMoveForecast_RemainingTime;   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_OutRemainingTime_ImplicitCast; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GetHighSpeedMovementForecast) == 0x000008, "Wrong alignment on BP_Character_C_GetHighSpeedMovementForecast");
static_assert(sizeof(BP_Character_C_GetHighSpeedMovementForecast) == 0x000078, "Wrong size on BP_Character_C_GetHighSpeedMovementForecast");
static_assert(offsetof(BP_Character_C_GetHighSpeedMovementForecast, OutLocation) == 0x000000, "Member 'BP_Character_C_GetHighSpeedMovementForecast::OutLocation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetHighSpeedMovementForecast, OutRotator) == 0x000018, "Member 'BP_Character_C_GetHighSpeedMovementForecast::OutRotator' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetHighSpeedMovementForecast, OutRemainingTime) == 0x000030, "Member 'BP_Character_C_GetHighSpeedMovementForecast::OutRemainingTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetHighSpeedMovementForecast, ReturnValue) == 0x000034, "Member 'BP_Character_C_GetHighSpeedMovementForecast::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetHighSpeedMovementForecast, CallFunc_GetHighSpeedMoveForecast_IsDetermined) == 0x000035, "Member 'BP_Character_C_GetHighSpeedMovementForecast::CallFunc_GetHighSpeedMoveForecast_IsDetermined' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetHighSpeedMovementForecast, CallFunc_GetHighSpeedMoveForecast_Location) == 0x000038, "Member 'BP_Character_C_GetHighSpeedMovementForecast::CallFunc_GetHighSpeedMoveForecast_Location' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetHighSpeedMovementForecast, CallFunc_GetHighSpeedMoveForecast_Rotation) == 0x000050, "Member 'BP_Character_C_GetHighSpeedMovementForecast::CallFunc_GetHighSpeedMoveForecast_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetHighSpeedMovementForecast, CallFunc_GetHighSpeedMoveForecast_RemainingTime) == 0x000068, "Member 'BP_Character_C_GetHighSpeedMovementForecast::CallFunc_GetHighSpeedMoveForecast_RemainingTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetHighSpeedMovementForecast, K2Node_FunctionResult_OutRemainingTime_ImplicitCast) == 0x000070, "Member 'BP_Character_C_GetHighSpeedMovementForecast::K2Node_FunctionResult_OutRemainingTime_ImplicitCast' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetHitBackData
// 0x02E0 (0x02E0 - 0x0000)
struct BP_Character_C_GetHitBackData final
{
public:
	struct FKoratHitBackMovementData              HitBackData_0;                                     // 0x0000(0x02E0)(Parm, OutParm)
};
static_assert(alignof(BP_Character_C_GetHitBackData) == 0x000008, "Wrong alignment on BP_Character_C_GetHitBackData");
static_assert(sizeof(BP_Character_C_GetHitBackData) == 0x0002E0, "Wrong size on BP_Character_C_GetHitBackData");
static_assert(offsetof(BP_Character_C_GetHitBackData, HitBackData_0) == 0x000000, "Member 'BP_Character_C_GetHitBackData::HitBackData_0' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetKnockBackVector
// 0x0018 (0x0018 - 0x0000)
struct BP_Character_C_GetKnockBackVector final
{
public:
	struct FVector                                KnockBackVector_0;                                 // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GetKnockBackVector) == 0x000008, "Wrong alignment on BP_Character_C_GetKnockBackVector");
static_assert(sizeof(BP_Character_C_GetKnockBackVector) == 0x000018, "Wrong size on BP_Character_C_GetKnockBackVector");
static_assert(offsetof(BP_Character_C_GetKnockBackVector, KnockBackVector_0) == 0x000000, "Member 'BP_Character_C_GetKnockBackVector::KnockBackVector_0' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetKnockDownReactionParameter
// 0x0300 (0x0300 - 0x0000)
struct BP_Character_C_GetKnockDownReactionParameter final
{
public:
	struct FKoratDamageReactionDataList           OutDamageReactionDataList;                         // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	struct FKoratHitBackMovementData              OutHitBackData;                                    // 0x0008(0x02E0)(Parm, OutParm)
	struct FKoratHitStopData                      OutHitStopData;                                    // 0x02E8(0x0014)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(BP_Character_C_GetKnockDownReactionParameter) == 0x000008, "Wrong alignment on BP_Character_C_GetKnockDownReactionParameter");
static_assert(sizeof(BP_Character_C_GetKnockDownReactionParameter) == 0x000300, "Wrong size on BP_Character_C_GetKnockDownReactionParameter");
static_assert(offsetof(BP_Character_C_GetKnockDownReactionParameter, OutDamageReactionDataList) == 0x000000, "Member 'BP_Character_C_GetKnockDownReactionParameter::OutDamageReactionDataList' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetKnockDownReactionParameter, OutHitBackData) == 0x000008, "Member 'BP_Character_C_GetKnockDownReactionParameter::OutHitBackData' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetKnockDownReactionParameter, OutHitStopData) == 0x0002E8, "Member 'BP_Character_C_GetKnockDownReactionParameter::OutHitStopData' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetLocomotionComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_C_GetLocomotionComponent final
{
public:
	class UActorComponent*                        ActorComponent;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GetLocomotionComponent) == 0x000008, "Wrong alignment on BP_Character_C_GetLocomotionComponent");
static_assert(sizeof(BP_Character_C_GetLocomotionComponent) == 0x000008, "Wrong size on BP_Character_C_GetLocomotionComponent");
static_assert(offsetof(BP_Character_C_GetLocomotionComponent, ActorComponent) == 0x000000, "Member 'BP_Character_C_GetLocomotionComponent::ActorComponent' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetLocomotionSplineComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_C_GetLocomotionSplineComponent final
{
public:
	class UActorComponent*                        ActorComponent;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GetLocomotionSplineComponent) == 0x000008, "Wrong alignment on BP_Character_C_GetLocomotionSplineComponent");
static_assert(sizeof(BP_Character_C_GetLocomotionSplineComponent) == 0x000008, "Wrong size on BP_Character_C_GetLocomotionSplineComponent");
static_assert(offsetof(BP_Character_C_GetLocomotionSplineComponent, ActorComponent) == 0x000000, "Member 'BP_Character_C_GetLocomotionSplineComponent::ActorComponent' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetMontageComponent
// 0x0010 (0x0010 - 0x0000)
struct BP_Character_C_GetMontageComponent final
{
public:
	class UActorComponent*                        ActorComponent;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterMontageComponent_C*        CallFunc_GetBPCharacterMontageComponent_Component; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GetMontageComponent) == 0x000008, "Wrong alignment on BP_Character_C_GetMontageComponent");
static_assert(sizeof(BP_Character_C_GetMontageComponent) == 0x000010, "Wrong size on BP_Character_C_GetMontageComponent");
static_assert(offsetof(BP_Character_C_GetMontageComponent, ActorComponent) == 0x000000, "Member 'BP_Character_C_GetMontageComponent::ActorComponent' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetMontageComponent, CallFunc_GetBPCharacterMontageComponent_Component) == 0x000008, "Member 'BP_Character_C_GetMontageComponent::CallFunc_GetBPCharacterMontageComponent_Component' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetReplaceSubInstance
// 0x0028 (0x0028 - 0x0000)
struct BP_Character_C_GetReplaceSubInstance final
{
public:
	class FName                                   SubInstanceName;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SubInstanceTagName;                                // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 SubInstanceClass;                                  // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetAnimationSubInstance_OutTagName;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UAnimInstance>              CallFunc_GetAnimationSubInstance_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GetReplaceSubInstance) == 0x000008, "Wrong alignment on BP_Character_C_GetReplaceSubInstance");
static_assert(sizeof(BP_Character_C_GetReplaceSubInstance) == 0x000028, "Wrong size on BP_Character_C_GetReplaceSubInstance");
static_assert(offsetof(BP_Character_C_GetReplaceSubInstance, SubInstanceName) == 0x000000, "Member 'BP_Character_C_GetReplaceSubInstance::SubInstanceName' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetReplaceSubInstance, SubInstanceTagName) == 0x000008, "Member 'BP_Character_C_GetReplaceSubInstance::SubInstanceTagName' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetReplaceSubInstance, SubInstanceClass) == 0x000010, "Member 'BP_Character_C_GetReplaceSubInstance::SubInstanceClass' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetReplaceSubInstance, CallFunc_GetAnimationSubInstance_OutTagName) == 0x000018, "Member 'BP_Character_C_GetReplaceSubInstance::CallFunc_GetAnimationSubInstance_OutTagName' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetReplaceSubInstance, CallFunc_GetAnimationSubInstance_ReturnValue) == 0x000020, "Member 'BP_Character_C_GetReplaceSubInstance::CallFunc_GetAnimationSubInstance_ReturnValue' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetRequestAnim
// 0x0038 (0x0038 - 0x0000)
struct BP_Character_C_GetRequestAnim final
{
public:
	struct FFRequestAnimData                      RequestAnimData;                                   // 0x0000(0x0038)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GetRequestAnim) == 0x000008, "Wrong alignment on BP_Character_C_GetRequestAnim");
static_assert(sizeof(BP_Character_C_GetRequestAnim) == 0x000038, "Wrong size on BP_Character_C_GetRequestAnim");
static_assert(offsetof(BP_Character_C_GetRequestAnim, RequestAnimData) == 0x000000, "Member 'BP_Character_C_GetRequestAnim::RequestAnimData' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetSSCharacter
// 0x0020 (0x0020 - 0x0000)
struct BP_Character_C_GetSSCharacter final
{
public:
	class ASSCharacter*                           SSCharacter_0;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           K2Node_DynamicCast_AsSSCharacter;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GetSSCharacter) == 0x000008, "Wrong alignment on BP_Character_C_GetSSCharacter");
static_assert(sizeof(BP_Character_C_GetSSCharacter) == 0x000020, "Wrong size on BP_Character_C_GetSSCharacter");
static_assert(offsetof(BP_Character_C_GetSSCharacter, SSCharacter_0) == 0x000000, "Member 'BP_Character_C_GetSSCharacter::SSCharacter_0' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetSSCharacter, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_Character_C_GetSSCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetSSCharacter, K2Node_DynamicCast_AsSSCharacter) == 0x000010, "Member 'BP_Character_C_GetSSCharacter::K2Node_DynamicCast_AsSSCharacter' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetSSCharacter, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Character_C_GetSSCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetSuperHighSpeedMovementForecast
// 0x0078 (0x0078 - 0x0000)
struct BP_Character_C_GetSuperHighSpeedMovementForecast final
{
public:
	struct FVector                                OutLocation;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               OutRotator;                                        // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         OutRemainingTime;                                  // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0034(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSuperHighSpeedMoveStrForecast_IsDetermined; // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSuperHighSpeedMoveStrForecast_Location; // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetSuperHighSpeedMoveStrForecast_Rotation; // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_GetSuperHighSpeedMoveStrForecast_RemainingTime; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_OutRemainingTime_ImplicitCast; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GetSuperHighSpeedMovementForecast) == 0x000008, "Wrong alignment on BP_Character_C_GetSuperHighSpeedMovementForecast");
static_assert(sizeof(BP_Character_C_GetSuperHighSpeedMovementForecast) == 0x000078, "Wrong size on BP_Character_C_GetSuperHighSpeedMovementForecast");
static_assert(offsetof(BP_Character_C_GetSuperHighSpeedMovementForecast, OutLocation) == 0x000000, "Member 'BP_Character_C_GetSuperHighSpeedMovementForecast::OutLocation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetSuperHighSpeedMovementForecast, OutRotator) == 0x000018, "Member 'BP_Character_C_GetSuperHighSpeedMovementForecast::OutRotator' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetSuperHighSpeedMovementForecast, OutRemainingTime) == 0x000030, "Member 'BP_Character_C_GetSuperHighSpeedMovementForecast::OutRemainingTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetSuperHighSpeedMovementForecast, ReturnValue) == 0x000034, "Member 'BP_Character_C_GetSuperHighSpeedMovementForecast::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetSuperHighSpeedMovementForecast, CallFunc_GetSuperHighSpeedMoveStrForecast_IsDetermined) == 0x000035, "Member 'BP_Character_C_GetSuperHighSpeedMovementForecast::CallFunc_GetSuperHighSpeedMoveStrForecast_IsDetermined' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetSuperHighSpeedMovementForecast, CallFunc_GetSuperHighSpeedMoveStrForecast_Location) == 0x000038, "Member 'BP_Character_C_GetSuperHighSpeedMovementForecast::CallFunc_GetSuperHighSpeedMoveStrForecast_Location' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetSuperHighSpeedMovementForecast, CallFunc_GetSuperHighSpeedMoveStrForecast_Rotation) == 0x000050, "Member 'BP_Character_C_GetSuperHighSpeedMovementForecast::CallFunc_GetSuperHighSpeedMoveStrForecast_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetSuperHighSpeedMovementForecast, CallFunc_GetSuperHighSpeedMoveStrForecast_RemainingTime) == 0x000068, "Member 'BP_Character_C_GetSuperHighSpeedMovementForecast::CallFunc_GetSuperHighSpeedMoveStrForecast_RemainingTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetSuperHighSpeedMovementForecast, K2Node_FunctionResult_OutRemainingTime_ImplicitCast) == 0x000070, "Member 'BP_Character_C_GetSuperHighSpeedMovementForecast::K2Node_FunctionResult_OutRemainingTime_ImplicitCast' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetUseCharacterRotationPitchDetail
// 0x0002 (0x0002 - 0x0000)
struct BP_Character_C_GetUseCharacterRotationPitchDetail final
{
public:
	bool                                          UsePitchLimit;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsePitchInterp;                                    // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GetUseCharacterRotationPitchDetail) == 0x000001, "Wrong alignment on BP_Character_C_GetUseCharacterRotationPitchDetail");
static_assert(sizeof(BP_Character_C_GetUseCharacterRotationPitchDetail) == 0x000002, "Wrong size on BP_Character_C_GetUseCharacterRotationPitchDetail");
static_assert(offsetof(BP_Character_C_GetUseCharacterRotationPitchDetail, UsePitchLimit) == 0x000000, "Member 'BP_Character_C_GetUseCharacterRotationPitchDetail::UsePitchLimit' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetUseCharacterRotationPitchDetail, UsePitchInterp) == 0x000001, "Member 'BP_Character_C_GetUseCharacterRotationPitchDetail::UsePitchInterp' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetVanishingTeleportForecast
// 0x00D0 (0x00D0 - 0x0000)
struct BP_Character_C_GetVanishingTeleportForecast final
{
public:
	struct FVector                                OutLocation;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               OutRotator;                                        // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         OutRemainingTime;                                  // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0034(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Determined;                                        // 0x0035(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        PreEffectRemainingTime;                            // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BlankRemainingTime;                                // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISSBattleController>   SSBattleContoller;                                 // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetVanishingMoveIndex_Index;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetVanishingPreEffectRemainingTime_ReturnValue; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVanishingBlankRemainingTime_ReturnValue; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISSBattleController>   K2Node_DynamicCast_AsSSBattle_Controller;          // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVanishingMovePosition_Position;        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetVanishingMovePosition_Rotator;         // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_FunctionResult_OutRemainingTime_ImplicitCast; // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_PreEffectRemainingTime_ImplicitCast; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_BlankRemainingTime_ImplicitCast; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GetVanishingTeleportForecast) == 0x000008, "Wrong alignment on BP_Character_C_GetVanishingTeleportForecast");
static_assert(sizeof(BP_Character_C_GetVanishingTeleportForecast) == 0x0000D0, "Wrong size on BP_Character_C_GetVanishingTeleportForecast");
static_assert(offsetof(BP_Character_C_GetVanishingTeleportForecast, OutLocation) == 0x000000, "Member 'BP_Character_C_GetVanishingTeleportForecast::OutLocation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetVanishingTeleportForecast, OutRotator) == 0x000018, "Member 'BP_Character_C_GetVanishingTeleportForecast::OutRotator' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetVanishingTeleportForecast, OutRemainingTime) == 0x000030, "Member 'BP_Character_C_GetVanishingTeleportForecast::OutRemainingTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetVanishingTeleportForecast, ReturnValue) == 0x000034, "Member 'BP_Character_C_GetVanishingTeleportForecast::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetVanishingTeleportForecast, Determined) == 0x000035, "Member 'BP_Character_C_GetVanishingTeleportForecast::Determined' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetVanishingTeleportForecast, PreEffectRemainingTime) == 0x000038, "Member 'BP_Character_C_GetVanishingTeleportForecast::PreEffectRemainingTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetVanishingTeleportForecast, BlankRemainingTime) == 0x000040, "Member 'BP_Character_C_GetVanishingTeleportForecast::BlankRemainingTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetVanishingTeleportForecast, SSBattleContoller) == 0x000048, "Member 'BP_Character_C_GetVanishingTeleportForecast::SSBattleContoller' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetVanishingTeleportForecast, CallFunc_GetVanishingMoveIndex_Index) == 0x000058, "Member 'BP_Character_C_GetVanishingTeleportForecast::CallFunc_GetVanishingMoveIndex_Index' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetVanishingTeleportForecast, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x00005C, "Member 'BP_Character_C_GetVanishingTeleportForecast::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetVanishingTeleportForecast, CallFunc_GetVanishingPreEffectRemainingTime_ReturnValue) == 0x000060, "Member 'BP_Character_C_GetVanishingTeleportForecast::CallFunc_GetVanishingPreEffectRemainingTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetVanishingTeleportForecast, CallFunc_GetVanishingBlankRemainingTime_ReturnValue) == 0x000064, "Member 'BP_Character_C_GetVanishingTeleportForecast::CallFunc_GetVanishingBlankRemainingTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetVanishingTeleportForecast, CallFunc_GetController_ReturnValue) == 0x000068, "Member 'BP_Character_C_GetVanishingTeleportForecast::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetVanishingTeleportForecast, K2Node_DynamicCast_AsSSBattle_Controller) == 0x000070, "Member 'BP_Character_C_GetVanishingTeleportForecast::K2Node_DynamicCast_AsSSBattle_Controller' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetVanishingTeleportForecast, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BP_Character_C_GetVanishingTeleportForecast::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetVanishingTeleportForecast, CallFunc_GetVanishingMovePosition_Position) == 0x000088, "Member 'BP_Character_C_GetVanishingTeleportForecast::CallFunc_GetVanishingMovePosition_Position' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetVanishingTeleportForecast, CallFunc_GetVanishingMovePosition_Rotator) == 0x0000A0, "Member 'BP_Character_C_GetVanishingTeleportForecast::CallFunc_GetVanishingMovePosition_Rotator' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetVanishingTeleportForecast, K2Node_FunctionResult_OutRemainingTime_ImplicitCast) == 0x0000B8, "Member 'BP_Character_C_GetVanishingTeleportForecast::K2Node_FunctionResult_OutRemainingTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetVanishingTeleportForecast, K2Node_VariableSet_PreEffectRemainingTime_ImplicitCast) == 0x0000C0, "Member 'BP_Character_C_GetVanishingTeleportForecast::K2Node_VariableSet_PreEffectRemainingTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetVanishingTeleportForecast, K2Node_VariableSet_BlankRemainingTime_ImplicitCast) == 0x0000C8, "Member 'BP_Character_C_GetVanishingTeleportForecast::K2Node_VariableSet_BlankRemainingTime_ImplicitCast' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetViewSwitchAnimInstance
// 0x0020 (0x0020 - 0x0000)
struct BP_Character_C_GetViewSwitchAnimInstance final
{
public:
	class USSCharacterSwitchVisibilityAnimInstance* ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetPostProcessInstance_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSCharacterSwitchVisibilityAnimInstance* K2Node_DynamicCast_AsSSCharacter_Switch_Visibility_Anim_Instance; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GetViewSwitchAnimInstance) == 0x000008, "Wrong alignment on BP_Character_C_GetViewSwitchAnimInstance");
static_assert(sizeof(BP_Character_C_GetViewSwitchAnimInstance) == 0x000020, "Wrong size on BP_Character_C_GetViewSwitchAnimInstance");
static_assert(offsetof(BP_Character_C_GetViewSwitchAnimInstance, ReturnValue) == 0x000000, "Member 'BP_Character_C_GetViewSwitchAnimInstance::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetViewSwitchAnimInstance, CallFunc_GetPostProcessInstance_ReturnValue) == 0x000008, "Member 'BP_Character_C_GetViewSwitchAnimInstance::CallFunc_GetPostProcessInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetViewSwitchAnimInstance, K2Node_DynamicCast_AsSSCharacter_Switch_Visibility_Anim_Instance) == 0x000010, "Member 'BP_Character_C_GetViewSwitchAnimInstance::K2Node_DynamicCast_AsSSCharacter_Switch_Visibility_Anim_Instance' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetViewSwitchAnimInstance, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Character_C_GetViewSwitchAnimInstance::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetVirtualTargetLocation
// 0x0038 (0x0038 - 0x0000)
struct BP_Character_C_GetVirtualTargetLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  LocalActionTargetPawn;                             // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetHomingLocation_ReturnValue;            // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GetVirtualTargetLocation) == 0x000008, "Wrong alignment on BP_Character_C_GetVirtualTargetLocation");
static_assert(sizeof(BP_Character_C_GetVirtualTargetLocation) == 0x000038, "Wrong size on BP_Character_C_GetVirtualTargetLocation");
static_assert(offsetof(BP_Character_C_GetVirtualTargetLocation, Location) == 0x000000, "Member 'BP_Character_C_GetVirtualTargetLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetVirtualTargetLocation, LocalActionTargetPawn) == 0x000018, "Member 'BP_Character_C_GetVirtualTargetLocation::LocalActionTargetPawn' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetVirtualTargetLocation, CallFunc_GetHomingLocation_ReturnValue) == 0x000020, "Member 'BP_Character_C_GetVirtualTargetLocation::CallFunc_GetHomingLocation_ReturnValue' has a wrong offset!");

// Function BP_Character.BP_Character_C.GiantCharaBPCollisionPussingOverlapTestFuncImpl
// 0x0338 (0x0338 - 0x0000)
struct BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl final
{
public:
	struct FVector                                Loc_TmpPentMoveSum;                                // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionChannel                             CallFunc_GetCollisionObjectType_ReturnValue;       // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetScaledCapsuleSize_OutRadius;           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleSize_OutHalfHeight;       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ConstParm, ReferenceParm)
	TArray<class UPrimitiveComponent*>            CallFunc_CapsuleOverlapComponentsByChannel_OutComponents; // 0x0090(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleOverlapComponentsByChannel_ReturnValue; // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_IntToVector_ReturnValue;             // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorVector_ReturnValue;          // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_PrimitiveComponentComputePenetration_OutMtdDirection; // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PrimitiveComponentComputePenetration_OutMtdDistance; // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PrimitiveComponentComputePenetration_ReturnValue; // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0130(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x0230(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0334(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl) == 0x000008, "Wrong alignment on BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl");
static_assert(sizeof(BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl) == 0x000338, "Wrong size on BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl");
static_assert(offsetof(BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl, Loc_TmpPentMoveSum) == 0x000000, "Member 'BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl::Loc_TmpPentMoveSum' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl, CallFunc_GetCollisionObjectType_ReturnValue) == 0x00003C, "Member 'BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl::CallFunc_GetCollisionObjectType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000040, "Member 'BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000058, "Member 'BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl, CallFunc_GetScaledCapsuleSize_OutRadius) == 0x000070, "Member 'BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl::CallFunc_GetScaledCapsuleSize_OutRadius' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl, CallFunc_GetScaledCapsuleSize_OutHalfHeight) == 0x000074, "Member 'BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl::CallFunc_GetScaledCapsuleSize_OutHalfHeight' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl, K2Node_MakeArray_Array) == 0x000080, "Member 'BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl, CallFunc_CapsuleOverlapComponentsByChannel_OutComponents) == 0x000090, "Member 'BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl::CallFunc_CapsuleOverlapComponentsByChannel_OutComponents' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl, CallFunc_CapsuleOverlapComponentsByChannel_ReturnValue) == 0x0000A0, "Member 'BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl::CallFunc_CapsuleOverlapComponentsByChannel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl, CallFunc_Array_Length_ReturnValue) == 0x0000A4, "Member 'BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl, CallFunc_Conv_IntToVector_ReturnValue) == 0x0000A8, "Member 'BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl::CallFunc_Conv_IntToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl, CallFunc_Divide_VectorVector_ReturnValue) == 0x0000C8, "Member 'BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl::CallFunc_Divide_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl, CallFunc_PrimitiveComponentComputePenetration_OutMtdDirection) == 0x0000E0, "Member 'BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl::CallFunc_PrimitiveComponentComputePenetration_OutMtdDirection' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl, CallFunc_PrimitiveComponentComputePenetration_OutMtdDistance) == 0x0000F8, "Member 'BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl::CallFunc_PrimitiveComponentComputePenetration_OutMtdDistance' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl, CallFunc_PrimitiveComponentComputePenetration_ReturnValue) == 0x0000FC, "Member 'BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl::CallFunc_PrimitiveComponentComputePenetration_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl, CallFunc_Add_VectorVector_ReturnValue) == 0x000100, "Member 'BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000118, "Member 'BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000130, "Member 'BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000218, "Member 'BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x000230, "Member 'BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000318, "Member 'BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl, CallFunc_Array_Length_ReturnValue_1) == 0x000330, "Member 'BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl, CallFunc_Less_IntInt_ReturnValue) == 0x000334, "Member 'BP_Character_C_GiantCharaBPCollisionPussingOverlapTestFuncImpl::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Character.BP_Character_C.HighSpeedMovementAppear
// 0x0010 (0x0010 - 0x0000)
struct BP_Character_C_HighSpeedMovementAppear final
{
public:
	class USSActionCameraDataAsset*               InActionCamera;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               InOpponentActionCamera;                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_HighSpeedMovementAppear) == 0x000008, "Wrong alignment on BP_Character_C_HighSpeedMovementAppear");
static_assert(sizeof(BP_Character_C_HighSpeedMovementAppear) == 0x000010, "Wrong size on BP_Character_C_HighSpeedMovementAppear");
static_assert(offsetof(BP_Character_C_HighSpeedMovementAppear, InActionCamera) == 0x000000, "Member 'BP_Character_C_HighSpeedMovementAppear::InActionCamera' has a wrong offset!");
static_assert(offsetof(BP_Character_C_HighSpeedMovementAppear, InOpponentActionCamera) == 0x000008, "Member 'BP_Character_C_HighSpeedMovementAppear::InOpponentActionCamera' has a wrong offset!");

// Function BP_Character.BP_Character_C.HighSpeedMovementDisappear
// 0x0018 (0x0018 - 0x0000)
struct BP_Character_C_HighSpeedMovementDisappear final
{
public:
	EKoratFreeTimelineType                        TimeLineType;                                      // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSActionCameraDataAsset*               InActionCamera;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USSActionCameraDataAsset*               InOpponentActionCamera;                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_HighSpeedMovementDisappear) == 0x000008, "Wrong alignment on BP_Character_C_HighSpeedMovementDisappear");
static_assert(sizeof(BP_Character_C_HighSpeedMovementDisappear) == 0x000018, "Wrong size on BP_Character_C_HighSpeedMovementDisappear");
static_assert(offsetof(BP_Character_C_HighSpeedMovementDisappear, TimeLineType) == 0x000000, "Member 'BP_Character_C_HighSpeedMovementDisappear::TimeLineType' has a wrong offset!");
static_assert(offsetof(BP_Character_C_HighSpeedMovementDisappear, InActionCamera) == 0x000008, "Member 'BP_Character_C_HighSpeedMovementDisappear::InActionCamera' has a wrong offset!");
static_assert(offsetof(BP_Character_C_HighSpeedMovementDisappear, InOpponentActionCamera) == 0x000010, "Member 'BP_Character_C_HighSpeedMovementDisappear::InOpponentActionCamera' has a wrong offset!");

// Function BP_Character.BP_Character_C.HighSpeedMovementOmenToAppear
// 0x0001 (0x0001 - 0x0000)
struct BP_Character_C_HighSpeedMovementOmenToAppear final
{
public:
	EKoratFreeTimelineType                        TimeLineType;                                      // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_HighSpeedMovementOmenToAppear) == 0x000001, "Wrong alignment on BP_Character_C_HighSpeedMovementOmenToAppear");
static_assert(sizeof(BP_Character_C_HighSpeedMovementOmenToAppear) == 0x000001, "Wrong size on BP_Character_C_HighSpeedMovementOmenToAppear");
static_assert(offsetof(BP_Character_C_HighSpeedMovementOmenToAppear, TimeLineType) == 0x000000, "Member 'BP_Character_C_HighSpeedMovementOmenToAppear::TimeLineType' has a wrong offset!");

// Function BP_Character.BP_Character_C.Input Free Camera
// 0x0068 (0x0068 - 0x0000)
struct BP_Character_C_Input_Free_Camera final
{
public:
	TScriptInterface<class ISSBattleController>   SSBattleController;                                // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASSBattleLevelScriptActor*              CallFunc_GetSSBattleLevelScriptActor_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBattleElapsedTime_ReturnValue;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetCameraRotateInputKeyVector_ReturnValue; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Vector2DVector2D_ReturnValue;    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISSBattleController>   K2Node_DynamicCast_AsSSBattle_Controller;          // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_InputFreeCameraLastPressTime_ImplicitCast; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_InputFreeCameraLastReleaseTime_ImplicitCast; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_Input_Free_Camera) == 0x000008, "Wrong alignment on BP_Character_C_Input_Free_Camera");
static_assert(sizeof(BP_Character_C_Input_Free_Camera) == 0x000068, "Wrong size on BP_Character_C_Input_Free_Camera");
static_assert(offsetof(BP_Character_C_Input_Free_Camera, SSBattleController) == 0x000000, "Member 'BP_Character_C_Input_Free_Camera::SSBattleController' has a wrong offset!");
static_assert(offsetof(BP_Character_C_Input_Free_Camera, CallFunc_GetSSBattleLevelScriptActor_ReturnValue) == 0x000010, "Member 'BP_Character_C_Input_Free_Camera::CallFunc_GetSSBattleLevelScriptActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_Input_Free_Camera, CallFunc_GetBattleElapsedTime_ReturnValue) == 0x000018, "Member 'BP_Character_C_Input_Free_Camera::CallFunc_GetBattleElapsedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_Input_Free_Camera, CallFunc_GetCameraRotateInputKeyVector_ReturnValue) == 0x000020, "Member 'BP_Character_C_Input_Free_Camera::CallFunc_GetCameraRotateInputKeyVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_Input_Free_Camera, CallFunc_NotEqual_Vector2DVector2D_ReturnValue) == 0x000030, "Member 'BP_Character_C_Input_Free_Camera::CallFunc_NotEqual_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_Input_Free_Camera, CallFunc_GetController_ReturnValue) == 0x000038, "Member 'BP_Character_C_Input_Free_Camera::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_Input_Free_Camera, K2Node_DynamicCast_AsSSBattle_Controller) == 0x000040, "Member 'BP_Character_C_Input_Free_Camera::K2Node_DynamicCast_AsSSBattle_Controller' has a wrong offset!");
static_assert(offsetof(BP_Character_C_Input_Free_Camera, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_Character_C_Input_Free_Camera::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_C_Input_Free_Camera, K2Node_VariableSet_InputFreeCameraLastPressTime_ImplicitCast) == 0x000058, "Member 'BP_Character_C_Input_Free_Camera::K2Node_VariableSet_InputFreeCameraLastPressTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_Input_Free_Camera, K2Node_VariableSet_InputFreeCameraLastReleaseTime_ImplicitCast) == 0x000060, "Member 'BP_Character_C_Input_Free_Camera::K2Node_VariableSet_InputFreeCameraLastReleaseTime_ImplicitCast' has a wrong offset!");

// Function BP_Character.BP_Character_C.InputBattleKeyJustPressed
// 0x0001 (0x0001 - 0x0000)
struct BP_Character_C_InputBattleKeyJustPressed final
{
public:
	EBattleKey                                    BattleKey;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_InputBattleKeyJustPressed) == 0x000001, "Wrong alignment on BP_Character_C_InputBattleKeyJustPressed");
static_assert(sizeof(BP_Character_C_InputBattleKeyJustPressed) == 0x000001, "Wrong size on BP_Character_C_InputBattleKeyJustPressed");
static_assert(offsetof(BP_Character_C_InputBattleKeyJustPressed, BattleKey) == 0x000000, "Member 'BP_Character_C_InputBattleKeyJustPressed::BattleKey' has a wrong offset!");

// Function BP_Character.BP_Character_C.InputBattleKeyJustReleased
// 0x0001 (0x0001 - 0x0000)
struct BP_Character_C_InputBattleKeyJustReleased final
{
public:
	EBattleKey                                    BattleKey;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_InputBattleKeyJustReleased) == 0x000001, "Wrong alignment on BP_Character_C_InputBattleKeyJustReleased");
static_assert(sizeof(BP_Character_C_InputBattleKeyJustReleased) == 0x000001, "Wrong size on BP_Character_C_InputBattleKeyJustReleased");
static_assert(offsetof(BP_Character_C_InputBattleKeyJustReleased, BattleKey) == 0x000000, "Member 'BP_Character_C_InputBattleKeyJustReleased::BattleKey' has a wrong offset!");

// Function BP_Character.BP_Character_C.InputFreeCameraVector
// 0x0010 (0x0010 - 0x0000)
struct BP_Character_C_InputFreeCameraVector final
{
public:
	struct FVector2D                              InputVector;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_InputFreeCameraVector) == 0x000008, "Wrong alignment on BP_Character_C_InputFreeCameraVector");
static_assert(sizeof(BP_Character_C_InputFreeCameraVector) == 0x000010, "Wrong size on BP_Character_C_InputFreeCameraVector");
static_assert(offsetof(BP_Character_C_InputFreeCameraVector, InputVector) == 0x000000, "Member 'BP_Character_C_InputFreeCameraVector::InputVector' has a wrong offset!");

// Function BP_Character.BP_Character_C.InputKoratBattleKeyDown
// 0x0001 (0x0001 - 0x0000)
struct BP_Character_C_InputKoratBattleKeyDown final
{
public:
	EKoratBattleKey                               BattleKey;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_InputKoratBattleKeyDown) == 0x000001, "Wrong alignment on BP_Character_C_InputKoratBattleKeyDown");
static_assert(sizeof(BP_Character_C_InputKoratBattleKeyDown) == 0x000001, "Wrong size on BP_Character_C_InputKoratBattleKeyDown");
static_assert(offsetof(BP_Character_C_InputKoratBattleKeyDown, BattleKey) == 0x000000, "Member 'BP_Character_C_InputKoratBattleKeyDown::BattleKey' has a wrong offset!");

// Function BP_Character.BP_Character_C.InputKoratBattleKeyJustPressed
// 0x0001 (0x0001 - 0x0000)
struct BP_Character_C_InputKoratBattleKeyJustPressed final
{
public:
	EKoratBattleKey                               BattleKey;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_InputKoratBattleKeyJustPressed) == 0x000001, "Wrong alignment on BP_Character_C_InputKoratBattleKeyJustPressed");
static_assert(sizeof(BP_Character_C_InputKoratBattleKeyJustPressed) == 0x000001, "Wrong size on BP_Character_C_InputKoratBattleKeyJustPressed");
static_assert(offsetof(BP_Character_C_InputKoratBattleKeyJustPressed, BattleKey) == 0x000000, "Member 'BP_Character_C_InputKoratBattleKeyJustPressed::BattleKey' has a wrong offset!");

// Function BP_Character.BP_Character_C.InputKoratBattleKeyJustReleased
// 0x0001 (0x0001 - 0x0000)
struct BP_Character_C_InputKoratBattleKeyJustReleased final
{
public:
	EKoratBattleKey                               BattleKey;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_InputKoratBattleKeyJustReleased) == 0x000001, "Wrong alignment on BP_Character_C_InputKoratBattleKeyJustReleased");
static_assert(sizeof(BP_Character_C_InputKoratBattleKeyJustReleased) == 0x000001, "Wrong size on BP_Character_C_InputKoratBattleKeyJustReleased");
static_assert(offsetof(BP_Character_C_InputKoratBattleKeyJustReleased, BattleKey) == 0x000000, "Member 'BP_Character_C_InputKoratBattleKeyJustReleased::BattleKey' has a wrong offset!");

// Function BP_Character.BP_Character_C.InputKoratBattleKeyUp
// 0x0001 (0x0001 - 0x0000)
struct BP_Character_C_InputKoratBattleKeyUp final
{
public:
	EKoratBattleKey                               BattleKey;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_InputKoratBattleKeyUp) == 0x000001, "Wrong alignment on BP_Character_C_InputKoratBattleKeyUp");
static_assert(sizeof(BP_Character_C_InputKoratBattleKeyUp) == 0x000001, "Wrong size on BP_Character_C_InputKoratBattleKeyUp");
static_assert(offsetof(BP_Character_C_InputKoratBattleKeyUp, BattleKey) == 0x000000, "Member 'BP_Character_C_InputKoratBattleKeyUp::BattleKey' has a wrong offset!");

// Function BP_Character.BP_Character_C.IsCollisionEnable
// 0x0002 (0x0002 - 0x0000)
struct BP_Character_C_IsCollisionEnable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_IsCollisionEnable) == 0x000001, "Wrong alignment on BP_Character_C_IsCollisionEnable");
static_assert(sizeof(BP_Character_C_IsCollisionEnable) == 0x000002, "Wrong size on BP_Character_C_IsCollisionEnable");
static_assert(offsetof(BP_Character_C_IsCollisionEnable, ReturnValue) == 0x000000, "Member 'BP_Character_C_IsCollisionEnable::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsCollisionEnable, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000001, "Member 'BP_Character_C_IsCollisionEnable::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Character.BP_Character_C.IsInputRestrictedToTargetRevengeSmash
// 0x0100 (0x0100 - 0x0000)
struct BP_Character_C_IsInputRestrictedToTargetRevengeSmash final
{
public:
	EKoratBattleKey                               Key;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SincePressTime;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Restricted;                                        // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratActionDataList                   Temp_struct_Variable;                              // 0x0014(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FKoratActionDataList                   Temp_struct_Variable_1;                            // 0x001C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FKoratActionDataList                   Temp_struct_Variable_2;                            // 0x0024(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FKoratActionDataList                   Temp_struct_Variable_3;                            // 0x002C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FKoratActionDataList                   Temp_struct_Variable_4;                            // 0x0034(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FKoratActionDataList                   Temp_struct_Variable_5;                            // 0x003C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FKoratActionDataList                   Temp_struct_Variable_6;                            // 0x0044(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ExecNative_ReturnValue;                   // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratActionDataList                   Temp_struct_Variable_7;                            // 0x0050(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratActionDataList                   Temp_struct_Variable_8;                            // 0x0060(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetTargetCharacter_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetAnimationCurrentSection_OutSection;    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterBase_C>  K2Node_DynamicCast_AsBPI_Character_Base;           // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBP_CharacterMontageComponent_C*        CallFunc_GetBPCharacterMontageComponent_Component; // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInputRestrictedToTargetRevengeSmashNative_ReturnValue; // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FKoratActionDataList>           CallFunc_GetCurrentRunningActionList_ReturnValue;  // 0x00C8(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_3;             // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_4;             // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_5;             // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_6;             // 0x00DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_7;             // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_8;             // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x00E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE[0x2];                                       // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_IsInputRestrictedToTargetRevengeSmashNative_SincePressTime_ImplicitCast; // 0x00F0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast; // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash) == 0x000008, "Wrong alignment on BP_Character_C_IsInputRestrictedToTargetRevengeSmash");
static_assert(sizeof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash) == 0x000100, "Wrong size on BP_Character_C_IsInputRestrictedToTargetRevengeSmash");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, Key) == 0x000000, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::Key' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, SincePressTime) == 0x000008, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::SincePressTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, Restricted) == 0x000010, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::Restricted' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, Temp_struct_Variable) == 0x000014, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, Temp_struct_Variable_1) == 0x00001C, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, Temp_struct_Variable_2) == 0x000024, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, Temp_struct_Variable_3) == 0x00002C, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, Temp_struct_Variable_4) == 0x000034, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, Temp_struct_Variable_5) == 0x00003C, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, Temp_struct_Variable_6) == 0x000044, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_ExecNative_ReturnValue) == 0x00004C, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_ExecNative_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, Temp_struct_Variable_7) == 0x000050, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000058, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000059, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00005A, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00005B, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_BooleanOR_ReturnValue) == 0x00005C, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_BooleanOR_ReturnValue_1) == 0x00005D, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, Temp_struct_Variable_8) == 0x000060, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_GetTargetCharacter_ReturnValue) == 0x000068, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_GetTargetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_GetAnimationCurrentSection_OutSection) == 0x000070, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_GetAnimationCurrentSection_OutSection' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, K2Node_DynamicCast_AsBPI_Character_Base) == 0x000078, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::K2Node_DynamicCast_AsBPI_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_Conv_NameToString_ReturnValue) == 0x000090, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_GetBPCharacterMontageComponent_Component) == 0x0000A0, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_GetBPCharacterMontageComponent_Component' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_Conv_StringToName_ReturnValue) == 0x0000A8, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000B0, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0000B1, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_BooleanAND_ReturnValue) == 0x0000B2, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_IsInputRestrictedToTargetRevengeSmashNative_ReturnValue) == 0x0000B3, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_IsInputRestrictedToTargetRevengeSmashNative_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_BooleanOR_ReturnValue_2) == 0x0000B4, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_Not_PreBool_ReturnValue) == 0x0000B5, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000B6, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_IsValid_ReturnValue) == 0x0000B7, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_Conv_StringToName_ReturnValue_1) == 0x0000B8, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x0000C0, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_GetCurrentRunningActionList_ReturnValue) == 0x0000C8, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_GetCurrentRunningActionList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_BooleanOR_ReturnValue_3) == 0x0000D8, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_Array_Contains_ReturnValue) == 0x0000D9, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_Array_Contains_ReturnValue_1) == 0x0000DA, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_Array_Contains_ReturnValue_2) == 0x0000DB, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_Array_Contains_ReturnValue_3) == 0x0000DC, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_Array_Contains_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_Array_Contains_ReturnValue_4) == 0x0000DD, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_Array_Contains_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_Array_Contains_ReturnValue_5) == 0x0000DE, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_Array_Contains_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_Array_Contains_ReturnValue_6) == 0x0000DF, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_Array_Contains_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_Array_Contains_ReturnValue_7) == 0x0000E0, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_Array_Contains_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_Array_Contains_ReturnValue_8) == 0x0000E1, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_Array_Contains_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_IsValid_ReturnValue_1) == 0x0000E2, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_BooleanOR_ReturnValue_4) == 0x0000E3, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_BooleanOR_ReturnValue_5) == 0x0000E4, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_BooleanOR_ReturnValue_6) == 0x0000E5, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_BooleanOR_ReturnValue_7) == 0x0000E6, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_BooleanOR_ReturnValue_8) == 0x0000E7, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_BooleanOR_ReturnValue_9) == 0x0000E8, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_BooleanOR_ReturnValue_10) == 0x0000E9, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_BooleanOR_ReturnValue_11) == 0x0000EA, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_BooleanAND_ReturnValue_1) == 0x0000EB, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_BooleanAND_ReturnValue_2) == 0x0000EC, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_BooleanAND_ReturnValue_3) == 0x0000ED, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_IsInputRestrictedToTargetRevengeSmashNative_SincePressTime_ImplicitCast) == 0x0000F0, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_IsInputRestrictedToTargetRevengeSmashNative_SincePressTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsInputRestrictedToTargetRevengeSmash, CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast) == 0x0000F8, "Member 'BP_Character_C_IsInputRestrictedToTargetRevengeSmash::CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_Character.BP_Character_C.IsMetBulletBlastHitDemoCondition
// 0x0010 (0x0010 - 0x0000)
struct BP_Character_C_IsMetBulletBlastHitDemoCondition final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratActionDataList                   CallFunc_GetCurrentAction_OutAction;               // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	EKoratBlastSlotType                           CallFunc_GetBlastSlot_ReturnValue;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMetBulletBlastHitDemoCondition_ReturnValue; // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc____________________________IsMet;         // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_IsMetBulletBlastHitDemoCondition) == 0x000004, "Wrong alignment on BP_Character_C_IsMetBulletBlastHitDemoCondition");
static_assert(sizeof(BP_Character_C_IsMetBulletBlastHitDemoCondition) == 0x000010, "Wrong size on BP_Character_C_IsMetBulletBlastHitDemoCondition");
static_assert(offsetof(BP_Character_C_IsMetBulletBlastHitDemoCondition, ReturnValue) == 0x000000, "Member 'BP_Character_C_IsMetBulletBlastHitDemoCondition::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsMetBulletBlastHitDemoCondition, CallFunc_GetCurrentAction_OutAction) == 0x000004, "Member 'BP_Character_C_IsMetBulletBlastHitDemoCondition::CallFunc_GetCurrentAction_OutAction' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsMetBulletBlastHitDemoCondition, CallFunc_GetBlastSlot_ReturnValue) == 0x00000C, "Member 'BP_Character_C_IsMetBulletBlastHitDemoCondition::CallFunc_GetBlastSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsMetBulletBlastHitDemoCondition, CallFunc_IsMetBulletBlastHitDemoCondition_ReturnValue) == 0x00000D, "Member 'BP_Character_C_IsMetBulletBlastHitDemoCondition::CallFunc_IsMetBulletBlastHitDemoCondition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsMetBulletBlastHitDemoCondition, CallFunc____________________________IsMet) == 0x00000E, "Member 'BP_Character_C_IsMetBulletBlastHitDemoCondition::CallFunc____________________________IsMet' has a wrong offset!");

// Function BP_Character.BP_Character_C.IsNeedTurn
// 0x0002 (0x0002 - 0x0000)
struct BP_Character_C_IsNeedTurn final
{
public:
	bool                                          IsNeedTurn_0;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNeedTurn_IsNeedTurn;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_IsNeedTurn) == 0x000001, "Wrong alignment on BP_Character_C_IsNeedTurn");
static_assert(sizeof(BP_Character_C_IsNeedTurn) == 0x000002, "Wrong size on BP_Character_C_IsNeedTurn");
static_assert(offsetof(BP_Character_C_IsNeedTurn, IsNeedTurn_0) == 0x000000, "Member 'BP_Character_C_IsNeedTurn::IsNeedTurn_0' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsNeedTurn, CallFunc_IsNeedTurn_IsNeedTurn) == 0x000001, "Member 'BP_Character_C_IsNeedTurn::CallFunc_IsNeedTurn_IsNeedTurn' has a wrong offset!");

// Function BP_Character.BP_Character_C.IToonShading
// 0x0010 (0x0010 - 0x0000)
struct BP_Character_C_IToonShading final
{
public:
	bool                                          Construction;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ToonScene_C*                        Scane;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_IToonShading) == 0x000008, "Wrong alignment on BP_Character_C_IToonShading");
static_assert(sizeof(BP_Character_C_IToonShading) == 0x000010, "Wrong size on BP_Character_C_IToonShading");
static_assert(offsetof(BP_Character_C_IToonShading, Construction) == 0x000000, "Member 'BP_Character_C_IToonShading::Construction' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IToonShading, Scane) == 0x000008, "Member 'BP_Character_C_IToonShading::Scane' has a wrong offset!");

// Function BP_Character.BP_Character_C.JumpSectionOfPlayAction
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_C_JumpSectionOfPlayAction final
{
public:
	class FName                                   InSectionName;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_JumpSectionOfPlayAction) == 0x000004, "Wrong alignment on BP_Character_C_JumpSectionOfPlayAction");
static_assert(sizeof(BP_Character_C_JumpSectionOfPlayAction) == 0x000008, "Wrong size on BP_Character_C_JumpSectionOfPlayAction");
static_assert(offsetof(BP_Character_C_JumpSectionOfPlayAction, InSectionName) == 0x000000, "Member 'BP_Character_C_JumpSectionOfPlayAction::InSectionName' has a wrong offset!");

// Function BP_Character.BP_Character_C.LatentEventPreBattleProduction
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_C_LatentEventPreBattleProduction final
{
public:
	class USSCharacterLatentHelper*               InLatentHelper;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_LatentEventPreBattleProduction) == 0x000008, "Wrong alignment on BP_Character_C_LatentEventPreBattleProduction");
static_assert(sizeof(BP_Character_C_LatentEventPreBattleProduction) == 0x000008, "Wrong size on BP_Character_C_LatentEventPreBattleProduction");
static_assert(offsetof(BP_Character_C_LatentEventPreBattleProduction, InLatentHelper) == 0x000000, "Member 'BP_Character_C_LatentEventPreBattleProduction::InLatentHelper' has a wrong offset!");

// Function BP_Character.BP_Character_C.NotifyPlayMontageLength
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_C_NotifyPlayMontageLength final
{
public:
	double                                        MontageLength;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_NotifyPlayMontageLength) == 0x000008, "Wrong alignment on BP_Character_C_NotifyPlayMontageLength");
static_assert(sizeof(BP_Character_C_NotifyPlayMontageLength) == 0x000008, "Wrong size on BP_Character_C_NotifyPlayMontageLength");
static_assert(offsetof(BP_Character_C_NotifyPlayMontageLength, MontageLength) == 0x000000, "Member 'BP_Character_C_NotifyPlayMontageLength::MontageLength' has a wrong offset!");

// Function BP_Character.BP_Character_C.NotifyTransitionFlowBlast
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_C_NotifyTransitionFlowBlast final
{
public:
	struct FKoratReplaceAnimationDataList         RequestAnimData;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_NotifyTransitionFlowBlast) == 0x000004, "Wrong alignment on BP_Character_C_NotifyTransitionFlowBlast");
static_assert(sizeof(BP_Character_C_NotifyTransitionFlowBlast) == 0x000008, "Wrong size on BP_Character_C_NotifyTransitionFlowBlast");
static_assert(offsetof(BP_Character_C_NotifyTransitionFlowBlast, RequestAnimData) == 0x000000, "Member 'BP_Character_C_NotifyTransitionFlowBlast::RequestAnimData' has a wrong offset!");

// Function BP_Character.BP_Character_C.NotifyTransitionFlowPlayAction
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_C_NotifyTransitionFlowPlayAction final
{
public:
	struct FKoratActionDataList                   InAction;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_NotifyTransitionFlowPlayAction) == 0x000004, "Wrong alignment on BP_Character_C_NotifyTransitionFlowPlayAction");
static_assert(sizeof(BP_Character_C_NotifyTransitionFlowPlayAction) == 0x000008, "Wrong size on BP_Character_C_NotifyTransitionFlowPlayAction");
static_assert(offsetof(BP_Character_C_NotifyTransitionFlowPlayAction, InAction) == 0x000000, "Member 'BP_Character_C_NotifyTransitionFlowPlayAction::InAction' has a wrong offset!");

// Function BP_Character.BP_Character_C.NotifyTransitionFlowRevengeCounter
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_C_NotifyTransitionFlowRevengeCounter final
{
public:
	struct FKoratReplaceAnimationDataList         InReplaceAnim;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_NotifyTransitionFlowRevengeCounter) == 0x000004, "Wrong alignment on BP_Character_C_NotifyTransitionFlowRevengeCounter");
static_assert(sizeof(BP_Character_C_NotifyTransitionFlowRevengeCounter) == 0x000008, "Wrong size on BP_Character_C_NotifyTransitionFlowRevengeCounter");
static_assert(offsetof(BP_Character_C_NotifyTransitionFlowRevengeCounter, InReplaceAnim) == 0x000000, "Member 'BP_Character_C_NotifyTransitionFlowRevengeCounter::InReplaceAnim' has a wrong offset!");

// Function BP_Character.BP_Character_C.NotifyTransitionFlowRollingHammer
// 0x0001 (0x0001 - 0x0000)
struct BP_Character_C_NotifyTransitionFlowRollingHammer final
{
public:
	bool                                          IsPreviousUseLeft;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_NotifyTransitionFlowRollingHammer) == 0x000001, "Wrong alignment on BP_Character_C_NotifyTransitionFlowRollingHammer");
static_assert(sizeof(BP_Character_C_NotifyTransitionFlowRollingHammer) == 0x000001, "Wrong size on BP_Character_C_NotifyTransitionFlowRollingHammer");
static_assert(offsetof(BP_Character_C_NotifyTransitionFlowRollingHammer, IsPreviousUseLeft) == 0x000000, "Member 'BP_Character_C_NotifyTransitionFlowRollingHammer::IsPreviousUseLeft' has a wrong offset!");

// Function BP_Character.BP_Character_C.NotifyTransitionFlowRollingHurricane1
// 0x0001 (0x0001 - 0x0000)
struct BP_Character_C_NotifyTransitionFlowRollingHurricane1 final
{
public:
	bool                                          IsLeft;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_NotifyTransitionFlowRollingHurricane1) == 0x000001, "Wrong alignment on BP_Character_C_NotifyTransitionFlowRollingHurricane1");
static_assert(sizeof(BP_Character_C_NotifyTransitionFlowRollingHurricane1) == 0x000001, "Wrong size on BP_Character_C_NotifyTransitionFlowRollingHurricane1");
static_assert(offsetof(BP_Character_C_NotifyTransitionFlowRollingHurricane1, IsLeft) == 0x000000, "Member 'BP_Character_C_NotifyTransitionFlowRollingHurricane1::IsLeft' has a wrong offset!");

// Function BP_Character.BP_Character_C.NotifyTransitionFlowRush
// 0x0004 (0x0004 - 0x0000)
struct BP_Character_C_NotifyTransitionFlowRush final
{
public:
	int32                                         RushType;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_NotifyTransitionFlowRush) == 0x000004, "Wrong alignment on BP_Character_C_NotifyTransitionFlowRush");
static_assert(sizeof(BP_Character_C_NotifyTransitionFlowRush) == 0x000004, "Wrong size on BP_Character_C_NotifyTransitionFlowRush");
static_assert(offsetof(BP_Character_C_NotifyTransitionFlowRush, RushType) == 0x000000, "Member 'BP_Character_C_NotifyTransitionFlowRush::RushType' has a wrong offset!");

// Function BP_Character.BP_Character_C.NotifyTransitionFlowVanishingAttack
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_C_NotifyTransitionFlowVanishingAttack final
{
public:
	struct FKoratReplaceAnimationDataList         InReplaceAnim;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_NotifyTransitionFlowVanishingAttack) == 0x000004, "Wrong alignment on BP_Character_C_NotifyTransitionFlowVanishingAttack");
static_assert(sizeof(BP_Character_C_NotifyTransitionFlowVanishingAttack) == 0x000008, "Wrong size on BP_Character_C_NotifyTransitionFlowVanishingAttack");
static_assert(offsetof(BP_Character_C_NotifyTransitionFlowVanishingAttack, InReplaceAnim) == 0x000000, "Member 'BP_Character_C_NotifyTransitionFlowVanishingAttack::InReplaceAnim' has a wrong offset!");

// Function BP_Character.BP_Character_C.OnBeginMontageLevelSequence
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_C_OnBeginMontageLevelSequence final
{
public:
	struct FKoratActionDataList                   InAction;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_OnBeginMontageLevelSequence) == 0x000004, "Wrong alignment on BP_Character_C_OnBeginMontageLevelSequence");
static_assert(sizeof(BP_Character_C_OnBeginMontageLevelSequence) == 0x000008, "Wrong size on BP_Character_C_OnBeginMontageLevelSequence");
static_assert(offsetof(BP_Character_C_OnBeginMontageLevelSequence, InAction) == 0x000000, "Member 'BP_Character_C_OnBeginMontageLevelSequence::InAction' has a wrong offset!");

// Function BP_Character.BP_Character_C.OnCharacterGaveDamage
// 0x00D0 (0x00D0 - 0x0000)
struct BP_Character_C_OnCharacterGaveDamage final
{
public:
	EKoratCharacterMovementTransition             InMovementTransition;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInHoming;                                         // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratHitStopData                      InHitStopData;                                     // 0x0004(0x0014)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratHitEffectAfterHitStop            InHitEffectAfterHitStop;                           // 0x0020(0x00A0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          bInBlownAttack;                                    // 0x00C0(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratActionAttackType                        InAttackType;                                      // 0x00C1(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESituationOfOpponentWhenAttackHit             InOpponentHitSituation;                            // 0x00C2(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C3[0x1];                                       // 0x00C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratActionDataList                   InAttackAction;                                    // 0x00C4(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_OnCharacterGaveDamage) == 0x000010, "Wrong alignment on BP_Character_C_OnCharacterGaveDamage");
static_assert(sizeof(BP_Character_C_OnCharacterGaveDamage) == 0x0000D0, "Wrong size on BP_Character_C_OnCharacterGaveDamage");
static_assert(offsetof(BP_Character_C_OnCharacterGaveDamage, InMovementTransition) == 0x000000, "Member 'BP_Character_C_OnCharacterGaveDamage::InMovementTransition' has a wrong offset!");
static_assert(offsetof(BP_Character_C_OnCharacterGaveDamage, bInHoming) == 0x000001, "Member 'BP_Character_C_OnCharacterGaveDamage::bInHoming' has a wrong offset!");
static_assert(offsetof(BP_Character_C_OnCharacterGaveDamage, InHitStopData) == 0x000004, "Member 'BP_Character_C_OnCharacterGaveDamage::InHitStopData' has a wrong offset!");
static_assert(offsetof(BP_Character_C_OnCharacterGaveDamage, InHitEffectAfterHitStop) == 0x000020, "Member 'BP_Character_C_OnCharacterGaveDamage::InHitEffectAfterHitStop' has a wrong offset!");
static_assert(offsetof(BP_Character_C_OnCharacterGaveDamage, bInBlownAttack) == 0x0000C0, "Member 'BP_Character_C_OnCharacterGaveDamage::bInBlownAttack' has a wrong offset!");
static_assert(offsetof(BP_Character_C_OnCharacterGaveDamage, InAttackType) == 0x0000C1, "Member 'BP_Character_C_OnCharacterGaveDamage::InAttackType' has a wrong offset!");
static_assert(offsetof(BP_Character_C_OnCharacterGaveDamage, InOpponentHitSituation) == 0x0000C2, "Member 'BP_Character_C_OnCharacterGaveDamage::InOpponentHitSituation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_OnCharacterGaveDamage, InAttackAction) == 0x0000C4, "Member 'BP_Character_C_OnCharacterGaveDamage::InAttackAction' has a wrong offset!");

// Function BP_Character.BP_Character_C.OnCharacterGaveOffset
// 0x00D0 (0x00D0 - 0x0000)
struct BP_Character_C_OnCharacterGaveOffset final
{
public:
	struct FKoratHitStopData                      InHitStopData;                                     // 0x0000(0x0014)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	uint8                                         Pad_14[0xC];                                       // 0x0014(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratHitEffectAfterHitStop            InHitEffectAfterHitStop;                           // 0x0020(0x00A0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	ESituationOfOpponentWhenAttackHit             InOpponentHitSituation;                            // 0x00C0(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_OnCharacterGaveOffset) == 0x000010, "Wrong alignment on BP_Character_C_OnCharacterGaveOffset");
static_assert(sizeof(BP_Character_C_OnCharacterGaveOffset) == 0x0000D0, "Wrong size on BP_Character_C_OnCharacterGaveOffset");
static_assert(offsetof(BP_Character_C_OnCharacterGaveOffset, InHitStopData) == 0x000000, "Member 'BP_Character_C_OnCharacterGaveOffset::InHitStopData' has a wrong offset!");
static_assert(offsetof(BP_Character_C_OnCharacterGaveOffset, InHitEffectAfterHitStop) == 0x000020, "Member 'BP_Character_C_OnCharacterGaveOffset::InHitEffectAfterHitStop' has a wrong offset!");
static_assert(offsetof(BP_Character_C_OnCharacterGaveOffset, InOpponentHitSituation) == 0x0000C0, "Member 'BP_Character_C_OnCharacterGaveOffset::InOpponentHitSituation' has a wrong offset!");

// Function BP_Character.BP_Character_C.OnCharacterReceivedOffset
// 0x0310 (0x0310 - 0x0000)
struct BP_Character_C_OnCharacterReceivedOffset final
{
public:
	struct FRotator                               InRotation;                                        // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FKoratHitBackMovementData              InHitBackData;                                     // 0x0018(0x02E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FKoratHitStopData                      InHitStopData;                                     // 0x02F8(0x0014)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_Character_C_OnCharacterReceivedOffset) == 0x000008, "Wrong alignment on BP_Character_C_OnCharacterReceivedOffset");
static_assert(sizeof(BP_Character_C_OnCharacterReceivedOffset) == 0x000310, "Wrong size on BP_Character_C_OnCharacterReceivedOffset");
static_assert(offsetof(BP_Character_C_OnCharacterReceivedOffset, InRotation) == 0x000000, "Member 'BP_Character_C_OnCharacterReceivedOffset::InRotation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_OnCharacterReceivedOffset, InHitBackData) == 0x000018, "Member 'BP_Character_C_OnCharacterReceivedOffset::InHitBackData' has a wrong offset!");
static_assert(offsetof(BP_Character_C_OnCharacterReceivedOffset, InHitStopData) == 0x0002F8, "Member 'BP_Character_C_OnCharacterReceivedOffset::InHitStopData' has a wrong offset!");

// Function BP_Character.BP_Character_C.OnCharacterTookDamage
// 0x000C (0x000C - 0x0000)
struct BP_Character_C_OnCharacterTookDamage final
{
public:
	struct FKoratActionDataList                   InReactionAction;                                  // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	EKoratReactionDirection                       InReactionDirection;                               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratAddtiveReactionParameter         InAddtiveReactionParameter;                        // 0x0009(0x0002)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_Character_C_OnCharacterTookDamage) == 0x000004, "Wrong alignment on BP_Character_C_OnCharacterTookDamage");
static_assert(sizeof(BP_Character_C_OnCharacterTookDamage) == 0x00000C, "Wrong size on BP_Character_C_OnCharacterTookDamage");
static_assert(offsetof(BP_Character_C_OnCharacterTookDamage, InReactionAction) == 0x000000, "Member 'BP_Character_C_OnCharacterTookDamage::InReactionAction' has a wrong offset!");
static_assert(offsetof(BP_Character_C_OnCharacterTookDamage, InReactionDirection) == 0x000008, "Member 'BP_Character_C_OnCharacterTookDamage::InReactionDirection' has a wrong offset!");
static_assert(offsetof(BP_Character_C_OnCharacterTookDamage, InAddtiveReactionParameter) == 0x000009, "Member 'BP_Character_C_OnCharacterTookDamage::InAddtiveReactionParameter' has a wrong offset!");

// Function BP_Character.BP_Character_C.OnEndMontageLevelSequence
// 0x000C (0x000C - 0x0000)
struct BP_Character_C_OnEndMontageLevelSequence final
{
public:
	struct FKoratActionDataList                   InAction;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterActionFinishReason             InActionFinishReason;                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_OnEndMontageLevelSequence) == 0x000004, "Wrong alignment on BP_Character_C_OnEndMontageLevelSequence");
static_assert(sizeof(BP_Character_C_OnEndMontageLevelSequence) == 0x00000C, "Wrong size on BP_Character_C_OnEndMontageLevelSequence");
static_assert(offsetof(BP_Character_C_OnEndMontageLevelSequence, InAction) == 0x000000, "Member 'BP_Character_C_OnEndMontageLevelSequence::InAction' has a wrong offset!");
static_assert(offsetof(BP_Character_C_OnEndMontageLevelSequence, InActionFinishReason) == 0x000008, "Member 'BP_Character_C_OnEndMontageLevelSequence::InActionFinishReason' has a wrong offset!");

// Function BP_Character.BP_Character_C.OnHitObjectCollisionOccured
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_C_OnHitObjectCollisionOccured final
{
public:
	struct FKoratActionDataList                   InAction;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_OnHitObjectCollisionOccured) == 0x000004, "Wrong alignment on BP_Character_C_OnHitObjectCollisionOccured");
static_assert(sizeof(BP_Character_C_OnHitObjectCollisionOccured) == 0x000008, "Wrong size on BP_Character_C_OnHitObjectCollisionOccured");
static_assert(offsetof(BP_Character_C_OnHitObjectCollisionOccured, InAction) == 0x000000, "Member 'BP_Character_C_OnHitObjectCollisionOccured::InAction' has a wrong offset!");

// Function BP_Character.BP_Character_C.OnHitObjectStopped
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_C_OnHitObjectStopped final
{
public:
	struct FKoratActionDataList                   InAction;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_OnHitObjectStopped) == 0x000004, "Wrong alignment on BP_Character_C_OnHitObjectStopped");
static_assert(sizeof(BP_Character_C_OnHitObjectStopped) == 0x000008, "Wrong size on BP_Character_C_OnHitObjectStopped");
static_assert(offsetof(BP_Character_C_OnHitObjectStopped, InAction) == 0x000000, "Member 'BP_Character_C_OnHitObjectStopped::InAction' has a wrong offset!");

// Function BP_Character.BP_Character_C.OnInputKoratBattleKeyDown
// 0x0001 (0x0001 - 0x0000)
struct BP_Character_C_OnInputKoratBattleKeyDown final
{
public:
	EKoratBattleKey                               InBattleKey;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_OnInputKoratBattleKeyDown) == 0x000001, "Wrong alignment on BP_Character_C_OnInputKoratBattleKeyDown");
static_assert(sizeof(BP_Character_C_OnInputKoratBattleKeyDown) == 0x000001, "Wrong size on BP_Character_C_OnInputKoratBattleKeyDown");
static_assert(offsetof(BP_Character_C_OnInputKoratBattleKeyDown, InBattleKey) == 0x000000, "Member 'BP_Character_C_OnInputKoratBattleKeyDown::InBattleKey' has a wrong offset!");

// Function BP_Character.BP_Character_C.OnInputKoratBattleKeyJustPressed
// 0x0001 (0x0001 - 0x0000)
struct BP_Character_C_OnInputKoratBattleKeyJustPressed final
{
public:
	EKoratBattleKey                               InBattleKey;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_OnInputKoratBattleKeyJustPressed) == 0x000001, "Wrong alignment on BP_Character_C_OnInputKoratBattleKeyJustPressed");
static_assert(sizeof(BP_Character_C_OnInputKoratBattleKeyJustPressed) == 0x000001, "Wrong size on BP_Character_C_OnInputKoratBattleKeyJustPressed");
static_assert(offsetof(BP_Character_C_OnInputKoratBattleKeyJustPressed, InBattleKey) == 0x000000, "Member 'BP_Character_C_OnInputKoratBattleKeyJustPressed::InBattleKey' has a wrong offset!");

// Function BP_Character.BP_Character_C.OnInputKoratBattleKeyJustReleased
// 0x0001 (0x0001 - 0x0000)
struct BP_Character_C_OnInputKoratBattleKeyJustReleased final
{
public:
	EKoratBattleKey                               InBattleKey;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_OnInputKoratBattleKeyJustReleased) == 0x000001, "Wrong alignment on BP_Character_C_OnInputKoratBattleKeyJustReleased");
static_assert(sizeof(BP_Character_C_OnInputKoratBattleKeyJustReleased) == 0x000001, "Wrong size on BP_Character_C_OnInputKoratBattleKeyJustReleased");
static_assert(offsetof(BP_Character_C_OnInputKoratBattleKeyJustReleased, InBattleKey) == 0x000000, "Member 'BP_Character_C_OnInputKoratBattleKeyJustReleased::InBattleKey' has a wrong offset!");

// Function BP_Character.BP_Character_C.OnInputKoratBattleKeyUp
// 0x0001 (0x0001 - 0x0000)
struct BP_Character_C_OnInputKoratBattleKeyUp final
{
public:
	EKoratBattleKey                               InBattleKey;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_OnInputKoratBattleKeyUp) == 0x000001, "Wrong alignment on BP_Character_C_OnInputKoratBattleKeyUp");
static_assert(sizeof(BP_Character_C_OnInputKoratBattleKeyUp) == 0x000001, "Wrong size on BP_Character_C_OnInputKoratBattleKeyUp");
static_assert(offsetof(BP_Character_C_OnInputKoratBattleKeyUp, InBattleKey) == 0x000000, "Member 'BP_Character_C_OnInputKoratBattleKeyUp::InBattleKey' has a wrong offset!");

// Function BP_Character.BP_Character_C.OnKoratCharacterDebug
// 0x0010 (0x0010 - 0x0000)
struct BP_Character_C_OnKoratCharacterDebug final
{
public:
	TArray<class FString>                         InDebugCommand;                                    // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_Character_C_OnKoratCharacterDebug) == 0x000008, "Wrong alignment on BP_Character_C_OnKoratCharacterDebug");
static_assert(sizeof(BP_Character_C_OnKoratCharacterDebug) == 0x000010, "Wrong size on BP_Character_C_OnKoratCharacterDebug");
static_assert(offsetof(BP_Character_C_OnKoratCharacterDebug, InDebugCommand) == 0x000000, "Member 'BP_Character_C_OnKoratCharacterDebug::InDebugCommand' has a wrong offset!");

// Function BP_Character.BP_Character_C.OnLanded
// 0x00E8 (0x00E8 - 0x0000)
struct BP_Character_C_OnLanded final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Character_C_OnLanded) == 0x000008, "Wrong alignment on BP_Character_C_OnLanded");
static_assert(sizeof(BP_Character_C_OnLanded) == 0x0000E8, "Wrong size on BP_Character_C_OnLanded");
static_assert(offsetof(BP_Character_C_OnLanded, Hit) == 0x000000, "Member 'BP_Character_C_OnLanded::Hit' has a wrong offset!");

// Function BP_Character.BP_Character_C.OnStartMapChange
// 0x0002 (0x0002 - 0x0000)
struct BP_Character_C_OnStartMapChange final
{
public:
	EKoratMapChangeType                           InMapChangeType;                                   // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratMapChangeStartTiming                    InStartTiming;                                     // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_OnStartMapChange) == 0x000001, "Wrong alignment on BP_Character_C_OnStartMapChange");
static_assert(sizeof(BP_Character_C_OnStartMapChange) == 0x000002, "Wrong size on BP_Character_C_OnStartMapChange");
static_assert(offsetof(BP_Character_C_OnStartMapChange, InMapChangeType) == 0x000000, "Member 'BP_Character_C_OnStartMapChange::InMapChangeType' has a wrong offset!");
static_assert(offsetof(BP_Character_C_OnStartMapChange, InStartTiming) == 0x000001, "Member 'BP_Character_C_OnStartMapChange::InStartTiming' has a wrong offset!");

// Function BP_Character.BP_Character_C.OnTransitActionByAnimationBlueprint
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_C_OnTransitActionByAnimationBlueprint final
{
public:
	struct FKoratActionDataList                   InAction;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_OnTransitActionByAnimationBlueprint) == 0x000004, "Wrong alignment on BP_Character_C_OnTransitActionByAnimationBlueprint");
static_assert(sizeof(BP_Character_C_OnTransitActionByAnimationBlueprint) == 0x000008, "Wrong size on BP_Character_C_OnTransitActionByAnimationBlueprint");
static_assert(offsetof(BP_Character_C_OnTransitActionByAnimationBlueprint, InAction) == 0x000000, "Member 'BP_Character_C_OnTransitActionByAnimationBlueprint::InAction' has a wrong offset!");

// Function BP_Character.BP_Character_C.OnTransitActionByLocomotion
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_C_OnTransitActionByLocomotion final
{
public:
	struct FKoratActionDataList                   InAction;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_OnTransitActionByLocomotion) == 0x000004, "Wrong alignment on BP_Character_C_OnTransitActionByLocomotion");
static_assert(sizeof(BP_Character_C_OnTransitActionByLocomotion) == 0x000008, "Wrong size on BP_Character_C_OnTransitActionByLocomotion");
static_assert(offsetof(BP_Character_C_OnTransitActionByLocomotion, InAction) == 0x000000, "Member 'BP_Character_C_OnTransitActionByLocomotion::InAction' has a wrong offset!");

// Function BP_Character.BP_Character_C.PlayKnockBack
// 0x02E0 (0x02E0 - 0x0000)
struct BP_Character_C_PlayKnockBack final
{
public:
	struct FKoratHitBackMovementData              InHitBackData;                                     // 0x0000(0x02E0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_Character_C_PlayKnockBack) == 0x000008, "Wrong alignment on BP_Character_C_PlayKnockBack");
static_assert(sizeof(BP_Character_C_PlayKnockBack) == 0x0002E0, "Wrong size on BP_Character_C_PlayKnockBack");
static_assert(offsetof(BP_Character_C_PlayKnockBack, InHitBackData) == 0x000000, "Member 'BP_Character_C_PlayKnockBack::InHitBackData' has a wrong offset!");

// Function BP_Character.BP_Character_C.ReceiveHit
// 0x0150 (0x0150 - 0x0000)
struct BP_Character_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0068(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Character_C_ReceiveHit) == 0x000008, "Wrong alignment on BP_Character_C_ReceiveHit");
static_assert(sizeof(BP_Character_C_ReceiveHit) == 0x000150, "Wrong size on BP_Character_C_ReceiveHit");
static_assert(offsetof(BP_Character_C_ReceiveHit, MyComp) == 0x000000, "Member 'BP_Character_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ReceiveHit, Other) == 0x000008, "Member 'BP_Character_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ReceiveHit, OtherComp) == 0x000010, "Member 'BP_Character_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'BP_Character_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ReceiveHit, HitLocation) == 0x000020, "Member 'BP_Character_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ReceiveHit, HitNormal) == 0x000038, "Member 'BP_Character_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ReceiveHit, NormalImpulse) == 0x000050, "Member 'BP_Character_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ReceiveHit, Hit) == 0x000068, "Member 'BP_Character_C_ReceiveHit::Hit' has a wrong offset!");

// Function BP_Character.BP_Character_C.ReceivePossessed
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_C_ReceivePossessed final
{
public:
	class AController*                            NewController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_ReceivePossessed) == 0x000008, "Wrong alignment on BP_Character_C_ReceivePossessed");
static_assert(sizeof(BP_Character_C_ReceivePossessed) == 0x000008, "Wrong size on BP_Character_C_ReceivePossessed");
static_assert(offsetof(BP_Character_C_ReceivePossessed, NewController) == 0x000000, "Member 'BP_Character_C_ReceivePossessed::NewController' has a wrong offset!");

// Function BP_Character.BP_Character_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Character_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds_0;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Character_C_ReceiveTick");
static_assert(sizeof(BP_Character_C_ReceiveTick) == 0x000004, "Wrong size on BP_Character_C_ReceiveTick");
static_assert(offsetof(BP_Character_C_ReceiveTick, DeltaSeconds_0) == 0x000000, "Member 'BP_Character_C_ReceiveTick::DeltaSeconds_0' has a wrong offset!");

// Function BP_Character.BP_Character_C.RequestJumpSectionOfFlowAction
// 0x0010 (0x0010 - 0x0000)
struct BP_Character_C_RequestJumpSectionOfFlowAction final
{
public:
	struct FKoratActionDataList                   InAction;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class FName                                   InSectionName;                                     // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_RequestJumpSectionOfFlowAction) == 0x000004, "Wrong alignment on BP_Character_C_RequestJumpSectionOfFlowAction");
static_assert(sizeof(BP_Character_C_RequestJumpSectionOfFlowAction) == 0x000010, "Wrong size on BP_Character_C_RequestJumpSectionOfFlowAction");
static_assert(offsetof(BP_Character_C_RequestJumpSectionOfFlowAction, InAction) == 0x000000, "Member 'BP_Character_C_RequestJumpSectionOfFlowAction::InAction' has a wrong offset!");
static_assert(offsetof(BP_Character_C_RequestJumpSectionOfFlowAction, InSectionName) == 0x000008, "Member 'BP_Character_C_RequestJumpSectionOfFlowAction::InSectionName' has a wrong offset!");

// Function BP_Character.BP_Character_C.RequestTransitAction
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_C_RequestTransitAction final
{
public:
	struct FKoratActionDataList                   InAction;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_RequestTransitAction) == 0x000004, "Wrong alignment on BP_Character_C_RequestTransitAction");
static_assert(sizeof(BP_Character_C_RequestTransitAction) == 0x000008, "Wrong size on BP_Character_C_RequestTransitAction");
static_assert(offsetof(BP_Character_C_RequestTransitAction, InAction) == 0x000000, "Member 'BP_Character_C_RequestTransitAction::InAction' has a wrong offset!");

// Function BP_Character.BP_Character_C.RequestTransitionOfFlowAction
// 0x0010 (0x0010 - 0x0000)
struct BP_Character_C_RequestTransitionOfFlowAction final
{
public:
	struct FKoratActionDataList                   InBeforeAction;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FKoratActionDataList                   InAfterAction;                                     // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_RequestTransitionOfFlowAction) == 0x000004, "Wrong alignment on BP_Character_C_RequestTransitionOfFlowAction");
static_assert(sizeof(BP_Character_C_RequestTransitionOfFlowAction) == 0x000010, "Wrong size on BP_Character_C_RequestTransitionOfFlowAction");
static_assert(offsetof(BP_Character_C_RequestTransitionOfFlowAction, InBeforeAction) == 0x000000, "Member 'BP_Character_C_RequestTransitionOfFlowAction::InBeforeAction' has a wrong offset!");
static_assert(offsetof(BP_Character_C_RequestTransitionOfFlowAction, InAfterAction) == 0x000008, "Member 'BP_Character_C_RequestTransitionOfFlowAction::InAfterAction' has a wrong offset!");

// Function BP_Character.BP_Character_C.ResetHitStop
// 0x0010 (0x0010 - 0x0000)
struct BP_Character_C_ResetHitStop final
{
public:
	class ASSLevelSequenceActor*                  CallFunc_SpawnSequenceActorByHitEffectAfterHitStop_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_ResetHitStop) == 0x000008, "Wrong alignment on BP_Character_C_ResetHitStop");
static_assert(sizeof(BP_Character_C_ResetHitStop) == 0x000010, "Wrong size on BP_Character_C_ResetHitStop");
static_assert(offsetof(BP_Character_C_ResetHitStop, CallFunc_SpawnSequenceActorByHitEffectAfterHitStop_ReturnValue) == 0x000000, "Member 'BP_Character_C_ResetHitStop::CallFunc_SpawnSequenceActorByHitEffectAfterHitStop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_ResetHitStop, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_Character_C_ResetHitStop::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Character.BP_Character_C.Set Hit Stop
// 0x0038 (0x0038 - 0x0000)
struct BP_Character_C_Set_Hit_Stop final
{
public:
	struct FKoratHitStopDataList                  InHitStopData;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          InResetOnDamage;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InEndHitStopDown;                                  // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratHitStopData                      CallFunc_GetHitStopData_ReturnValue;               // 0x000C(0x0014)(ConstParm, NoDestructor)
	bool                                          CallFunc_SetHitStopOwn_SetHitStop;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetHitStopOpponent_SetHitStop;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_Set_Hit_Stop) == 0x000008, "Wrong alignment on BP_Character_C_Set_Hit_Stop");
static_assert(sizeof(BP_Character_C_Set_Hit_Stop) == 0x000038, "Wrong size on BP_Character_C_Set_Hit_Stop");
static_assert(offsetof(BP_Character_C_Set_Hit_Stop, InHitStopData) == 0x000000, "Member 'BP_Character_C_Set_Hit_Stop::InHitStopData' has a wrong offset!");
static_assert(offsetof(BP_Character_C_Set_Hit_Stop, InResetOnDamage) == 0x000008, "Member 'BP_Character_C_Set_Hit_Stop::InResetOnDamage' has a wrong offset!");
static_assert(offsetof(BP_Character_C_Set_Hit_Stop, InEndHitStopDown) == 0x000009, "Member 'BP_Character_C_Set_Hit_Stop::InEndHitStopDown' has a wrong offset!");
static_assert(offsetof(BP_Character_C_Set_Hit_Stop, CallFunc_GetHitStopData_ReturnValue) == 0x00000C, "Member 'BP_Character_C_Set_Hit_Stop::CallFunc_GetHitStopData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_Set_Hit_Stop, CallFunc_SetHitStopOwn_SetHitStop) == 0x000020, "Member 'BP_Character_C_Set_Hit_Stop::CallFunc_SetHitStopOwn_SetHitStop' has a wrong offset!");
static_assert(offsetof(BP_Character_C_Set_Hit_Stop, K2Node_DynamicCast_AsBP_Character) == 0x000028, "Member 'BP_Character_C_Set_Hit_Stop::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(BP_Character_C_Set_Hit_Stop, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_Character_C_Set_Hit_Stop::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_C_Set_Hit_Stop, CallFunc_SetHitStopOpponent_SetHitStop) == 0x000031, "Member 'BP_Character_C_Set_Hit_Stop::CallFunc_SetHitStopOpponent_SetHitStop' has a wrong offset!");

// Function BP_Character.BP_Character_C.SetAttackHitArea
// 0x0002 (0x0002 - 0x0000)
struct BP_Character_C_SetAttackHitArea final
{
public:
	EKoratDirection                               InAttackHitAreaHorizontal;                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratDirection                               InAttackHitAreaVertical;                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_SetAttackHitArea) == 0x000001, "Wrong alignment on BP_Character_C_SetAttackHitArea");
static_assert(sizeof(BP_Character_C_SetAttackHitArea) == 0x000002, "Wrong size on BP_Character_C_SetAttackHitArea");
static_assert(offsetof(BP_Character_C_SetAttackHitArea, InAttackHitAreaHorizontal) == 0x000000, "Member 'BP_Character_C_SetAttackHitArea::InAttackHitAreaHorizontal' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetAttackHitArea, InAttackHitAreaVertical) == 0x000001, "Member 'BP_Character_C_SetAttackHitArea::InAttackHitAreaVertical' has a wrong offset!");

// Function BP_Character.BP_Character_C.SetAuraColorEnum
// 0x0001 (0x0001 - 0x0000)
struct BP_Character_C_SetAuraColorEnum final
{
public:
	EKoratCharacterEffectColorSetDataEnum         InNewColor;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_SetAuraColorEnum) == 0x000001, "Wrong alignment on BP_Character_C_SetAuraColorEnum");
static_assert(sizeof(BP_Character_C_SetAuraColorEnum) == 0x000001, "Wrong size on BP_Character_C_SetAuraColorEnum");
static_assert(offsetof(BP_Character_C_SetAuraColorEnum, InNewColor) == 0x000000, "Member 'BP_Character_C_SetAuraColorEnum::InNewColor' has a wrong offset!");

// Function BP_Character.BP_Character_C.SetBranchSection
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_C_SetBranchSection final
{
public:
	class FName                                   InSection;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_SetBranchSection) == 0x000004, "Wrong alignment on BP_Character_C_SetBranchSection");
static_assert(sizeof(BP_Character_C_SetBranchSection) == 0x000008, "Wrong size on BP_Character_C_SetBranchSection");
static_assert(offsetof(BP_Character_C_SetBranchSection, InSection) == 0x000000, "Member 'BP_Character_C_SetBranchSection::InSection' has a wrong offset!");

// Function BP_Character.BP_Character_C.SetCharacterMovementMode
// 0x0001 (0x0001 - 0x0000)
struct BP_Character_C_SetCharacterMovementMode final
{
public:
	EMovementMode                                 InMovementMode;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_SetCharacterMovementMode) == 0x000001, "Wrong alignment on BP_Character_C_SetCharacterMovementMode");
static_assert(sizeof(BP_Character_C_SetCharacterMovementMode) == 0x000001, "Wrong size on BP_Character_C_SetCharacterMovementMode");
static_assert(offsetof(BP_Character_C_SetCharacterMovementMode, InMovementMode) == 0x000000, "Member 'BP_Character_C_SetCharacterMovementMode::InMovementMode' has a wrong offset!");

// Function BP_Character.BP_Character_C.SetCharacterRotation
// 0x00F8 (0x00F8 - 0x0000)
struct BP_Character_C_SetCharacterRotation final
{
public:
	struct FRotator                               InNewRotation;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InTeleportPhysics;                                 // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSuccessfully;                                    // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ClampAngle_ReturnValue;                   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SignOfFloat_ReturnValue;                  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_SetCharacterRotation) == 0x000008, "Wrong alignment on BP_Character_C_SetCharacterRotation");
static_assert(sizeof(BP_Character_C_SetCharacterRotation) == 0x0000F8, "Wrong size on BP_Character_C_SetCharacterRotation");
static_assert(offsetof(BP_Character_C_SetCharacterRotation, InNewRotation) == 0x000000, "Member 'BP_Character_C_SetCharacterRotation::InNewRotation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetCharacterRotation, InTeleportPhysics) == 0x000018, "Member 'BP_Character_C_SetCharacterRotation::InTeleportPhysics' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetCharacterRotation, IsSuccessfully) == 0x000019, "Member 'BP_Character_C_SetCharacterRotation::IsSuccessfully' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetCharacterRotation, CallFunc_BreakRotator_Roll) == 0x00001C, "Member 'BP_Character_C_SetCharacterRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetCharacterRotation, CallFunc_BreakRotator_Pitch) == 0x000020, "Member 'BP_Character_C_SetCharacterRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetCharacterRotation, CallFunc_BreakRotator_Yaw) == 0x000024, "Member 'BP_Character_C_SetCharacterRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetCharacterRotation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000028, "Member 'BP_Character_C_SetCharacterRotation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetCharacterRotation, CallFunc_BreakRotator_Roll_1) == 0x000040, "Member 'BP_Character_C_SetCharacterRotation::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetCharacterRotation, CallFunc_BreakRotator_Pitch_1) == 0x000044, "Member 'BP_Character_C_SetCharacterRotation::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetCharacterRotation, CallFunc_BreakRotator_Yaw_1) == 0x000048, "Member 'BP_Character_C_SetCharacterRotation::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetCharacterRotation, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x00004C, "Member 'BP_Character_C_SetCharacterRotation::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetCharacterRotation, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_Character_C_SetCharacterRotation::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetCharacterRotation, CallFunc_SelectFloat_ReturnValue) == 0x000058, "Member 'BP_Character_C_SetCharacterRotation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetCharacterRotation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'BP_Character_C_SetCharacterRotation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetCharacterRotation, CallFunc_SelectFloat_ReturnValue_1) == 0x000068, "Member 'BP_Character_C_SetCharacterRotation::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetCharacterRotation, CallFunc_ClampAngle_ReturnValue) == 0x000070, "Member 'BP_Character_C_SetCharacterRotation::CallFunc_ClampAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetCharacterRotation, CallFunc_SelectFloat_ReturnValue_2) == 0x000078, "Member 'BP_Character_C_SetCharacterRotation::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetCharacterRotation, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000080, "Member 'BP_Character_C_SetCharacterRotation::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetCharacterRotation, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000088, "Member 'BP_Character_C_SetCharacterRotation::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetCharacterRotation, CallFunc_SignOfFloat_ReturnValue) == 0x000090, "Member 'BP_Character_C_SetCharacterRotation::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetCharacterRotation, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'BP_Character_C_SetCharacterRotation::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetCharacterRotation, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'BP_Character_C_SetCharacterRotation::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetCharacterRotation, CallFunc_SelectFloat_ReturnValue_3) == 0x0000A8, "Member 'BP_Character_C_SetCharacterRotation::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetCharacterRotation, CallFunc_SelectFloat_ReturnValue_4) == 0x0000B0, "Member 'BP_Character_C_SetCharacterRotation::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetCharacterRotation, CallFunc_MakeRotator_ReturnValue) == 0x0000B8, "Member 'BP_Character_C_SetCharacterRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetCharacterRotation, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0000D0, "Member 'BP_Character_C_SetCharacterRotation::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetCharacterRotation, CallFunc_SelectFloat_A_ImplicitCast) == 0x0000D8, "Member 'BP_Character_C_SetCharacterRotation::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetCharacterRotation, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x0000E0, "Member 'BP_Character_C_SetCharacterRotation::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetCharacterRotation, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0000E8, "Member 'BP_Character_C_SetCharacterRotation::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetCharacterRotation, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x0000F0, "Member 'BP_Character_C_SetCharacterRotation::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");

// Function BP_Character.BP_Character_C.SetEnableDrawTransitionAction
// 0x0001 (0x0001 - 0x0000)
struct BP_Character_C_SetEnableDrawTransitionAction final
{
public:
	bool                                          IsEnable;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_SetEnableDrawTransitionAction) == 0x000001, "Wrong alignment on BP_Character_C_SetEnableDrawTransitionAction");
static_assert(sizeof(BP_Character_C_SetEnableDrawTransitionAction) == 0x000001, "Wrong size on BP_Character_C_SetEnableDrawTransitionAction");
static_assert(offsetof(BP_Character_C_SetEnableDrawTransitionAction, IsEnable) == 0x000000, "Member 'BP_Character_C_SetEnableDrawTransitionAction::IsEnable' has a wrong offset!");

// Function BP_Character.BP_Character_C.SetHitStopOpponent
// 0x0088 (0x0088 - 0x0000)
struct BP_Character_C_SetHitStopOpponent final
{
public:
	struct FKoratHitStopData                      InHitStopData;                                     // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          InResetOnDamage;                                   // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InEndHitStopDown;                                  // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SetHitStop;                                        // 0x0016(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISSBattleController>   K2Node_DynamicCast_AsSSBattle_Controller;          // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISSBattleController>   K2Node_DynamicCast_AsSSBattle_Controller_1;        // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue;   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_HitStop_ImplicitCast;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_HitTimeDilation_ImplicitCast;   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_HitStopDelay_ImplicitCast;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCustomTimeDilation_InTimeDilation_ImplicitCast; // 0x0080(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_SetHitStopOpponent) == 0x000008, "Wrong alignment on BP_Character_C_SetHitStopOpponent");
static_assert(sizeof(BP_Character_C_SetHitStopOpponent) == 0x000088, "Wrong size on BP_Character_C_SetHitStopOpponent");
static_assert(offsetof(BP_Character_C_SetHitStopOpponent, InHitStopData) == 0x000000, "Member 'BP_Character_C_SetHitStopOpponent::InHitStopData' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOpponent, InResetOnDamage) == 0x000014, "Member 'BP_Character_C_SetHitStopOpponent::InResetOnDamage' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOpponent, InEndHitStopDown) == 0x000015, "Member 'BP_Character_C_SetHitStopOpponent::InEndHitStopDown' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOpponent, SetHitStop) == 0x000016, "Member 'BP_Character_C_SetHitStopOpponent::SetHitStop' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOpponent, CallFunc_GetController_ReturnValue) == 0x000018, "Member 'BP_Character_C_SetHitStopOpponent::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOpponent, K2Node_DynamicCast_AsSSBattle_Controller) == 0x000020, "Member 'BP_Character_C_SetHitStopOpponent::K2Node_DynamicCast_AsSSBattle_Controller' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOpponent, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_Character_C_SetHitStopOpponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOpponent, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000031, "Member 'BP_Character_C_SetHitStopOpponent::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOpponent, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000038, "Member 'BP_Character_C_SetHitStopOpponent::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOpponent, K2Node_DynamicCast_AsSSBattle_Controller_1) == 0x000040, "Member 'BP_Character_C_SetHitStopOpponent::K2Node_DynamicCast_AsSSBattle_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOpponent, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_Character_C_SetHitStopOpponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOpponent, CallFunc_GetConsoleVariableIntValue_ReturnValue) == 0x000054, "Member 'BP_Character_C_SetHitStopOpponent::CallFunc_GetConsoleVariableIntValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOpponent, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000058, "Member 'BP_Character_C_SetHitStopOpponent::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOpponent, CallFunc_Not_PreBool_ReturnValue) == 0x000059, "Member 'BP_Character_C_SetHitStopOpponent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOpponent, CallFunc_BooleanAND_ReturnValue) == 0x00005A, "Member 'BP_Character_C_SetHitStopOpponent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOpponent, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x00005B, "Member 'BP_Character_C_SetHitStopOpponent::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOpponent, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x000060, "Member 'BP_Character_C_SetHitStopOpponent::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOpponent, K2Node_VariableSet_HitStop_ImplicitCast) == 0x000068, "Member 'BP_Character_C_SetHitStopOpponent::K2Node_VariableSet_HitStop_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOpponent, K2Node_VariableSet_HitTimeDilation_ImplicitCast) == 0x000070, "Member 'BP_Character_C_SetHitStopOpponent::K2Node_VariableSet_HitTimeDilation_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOpponent, K2Node_VariableSet_HitStopDelay_ImplicitCast) == 0x000078, "Member 'BP_Character_C_SetHitStopOpponent::K2Node_VariableSet_HitStopDelay_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOpponent, CallFunc_SetCustomTimeDilation_InTimeDilation_ImplicitCast) == 0x000080, "Member 'BP_Character_C_SetHitStopOpponent::CallFunc_SetCustomTimeDilation_InTimeDilation_ImplicitCast' has a wrong offset!");

// Function BP_Character.BP_Character_C.SetHitStopOwn
// 0x0090 (0x0090 - 0x0000)
struct BP_Character_C_SetHitStopOwn final
{
public:
	struct FKoratHitStopData                      InHitStopData;                                     // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          InResetOnDamage;                                   // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InEndHitStopDown;                                  // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SetHitStop;                                        // 0x0016(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISSBattleController>   K2Node_DynamicCast_AsSSBattle_Controller;          // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISSBattleController>   K2Node_DynamicCast_AsSSBattle_Controller_1;        // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue;   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_HitStop_ImplicitCast;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_HitTimeDilation_ImplicitCast;   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_HitStopDelay_ImplicitCast;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCustomTimeDilation_InTimeDilation_ImplicitCast; // 0x0088(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_SetHitStopOwn) == 0x000008, "Wrong alignment on BP_Character_C_SetHitStopOwn");
static_assert(sizeof(BP_Character_C_SetHitStopOwn) == 0x000090, "Wrong size on BP_Character_C_SetHitStopOwn");
static_assert(offsetof(BP_Character_C_SetHitStopOwn, InHitStopData) == 0x000000, "Member 'BP_Character_C_SetHitStopOwn::InHitStopData' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOwn, InResetOnDamage) == 0x000014, "Member 'BP_Character_C_SetHitStopOwn::InResetOnDamage' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOwn, InEndHitStopDown) == 0x000015, "Member 'BP_Character_C_SetHitStopOwn::InEndHitStopDown' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOwn, SetHitStop) == 0x000016, "Member 'BP_Character_C_SetHitStopOwn::SetHitStop' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOwn, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000017, "Member 'BP_Character_C_SetHitStopOwn::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOwn, CallFunc_GetController_ReturnValue) == 0x000018, "Member 'BP_Character_C_SetHitStopOwn::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOwn, K2Node_DynamicCast_AsSSBattle_Controller) == 0x000020, "Member 'BP_Character_C_SetHitStopOwn::K2Node_DynamicCast_AsSSBattle_Controller' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOwn, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_Character_C_SetHitStopOwn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOwn, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000038, "Member 'BP_Character_C_SetHitStopOwn::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOwn, K2Node_DynamicCast_AsSSBattle_Controller_1) == 0x000040, "Member 'BP_Character_C_SetHitStopOwn::K2Node_DynamicCast_AsSSBattle_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOwn, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_Character_C_SetHitStopOwn::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOwn, CallFunc_Not_PreBool_ReturnValue) == 0x000051, "Member 'BP_Character_C_SetHitStopOwn::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOwn, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000058, "Member 'BP_Character_C_SetHitStopOwn::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOwn, CallFunc_GetConsoleVariableIntValue_ReturnValue) == 0x000060, "Member 'BP_Character_C_SetHitStopOwn::CallFunc_GetConsoleVariableIntValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOwn, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000064, "Member 'BP_Character_C_SetHitStopOwn::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOwn, CallFunc_Not_PreBool_ReturnValue_1) == 0x000065, "Member 'BP_Character_C_SetHitStopOwn::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOwn, CallFunc_BooleanAND_ReturnValue) == 0x000066, "Member 'BP_Character_C_SetHitStopOwn::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOwn, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000067, "Member 'BP_Character_C_SetHitStopOwn::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOwn, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x000068, "Member 'BP_Character_C_SetHitStopOwn::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOwn, K2Node_VariableSet_HitStop_ImplicitCast) == 0x000070, "Member 'BP_Character_C_SetHitStopOwn::K2Node_VariableSet_HitStop_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOwn, K2Node_VariableSet_HitTimeDilation_ImplicitCast) == 0x000078, "Member 'BP_Character_C_SetHitStopOwn::K2Node_VariableSet_HitTimeDilation_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOwn, K2Node_VariableSet_HitStopDelay_ImplicitCast) == 0x000080, "Member 'BP_Character_C_SetHitStopOwn::K2Node_VariableSet_HitStopDelay_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetHitStopOwn, CallFunc_SetCustomTimeDilation_InTimeDilation_ImplicitCast) == 0x000088, "Member 'BP_Character_C_SetHitStopOwn::CallFunc_SetCustomTimeDilation_InTimeDilation_ImplicitCast' has a wrong offset!");

// Function BP_Character.BP_Character_C.SetKnockBack
// 0x0328 (0x0328 - 0x0000)
struct BP_Character_C_SetKnockBack final
{
public:
	struct FRotator                               InRotation;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FKoratHitBackMovementData              InHitBackData;                                     // 0x0018(0x02E0)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_StepMaxHoldTime_ImplicitCast;   // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast;     // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_SetKnockBack) == 0x000008, "Wrong alignment on BP_Character_C_SetKnockBack");
static_assert(sizeof(BP_Character_C_SetKnockBack) == 0x000328, "Wrong size on BP_Character_C_SetKnockBack");
static_assert(offsetof(BP_Character_C_SetKnockBack, InRotation) == 0x000000, "Member 'BP_Character_C_SetKnockBack::InRotation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetKnockBack, InHitBackData) == 0x000018, "Member 'BP_Character_C_SetKnockBack::InHitBackData' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetKnockBack, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x0002F8, "Member 'BP_Character_C_SetKnockBack::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetKnockBack, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000310, "Member 'BP_Character_C_SetKnockBack::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetKnockBack, K2Node_VariableSet_StepMaxHoldTime_ImplicitCast) == 0x000318, "Member 'BP_Character_C_SetKnockBack::K2Node_VariableSet_StepMaxHoldTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetKnockBack, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast) == 0x000320, "Member 'BP_Character_C_SetKnockBack::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_Character.BP_Character_C.SetOutlineColorEnum
// 0x0001 (0x0001 - 0x0000)
struct BP_Character_C_SetOutlineColorEnum final
{
public:
	EKoratCharacterEffectColorSetDataEnum         InNewColorType;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_SetOutlineColorEnum) == 0x000001, "Wrong alignment on BP_Character_C_SetOutlineColorEnum");
static_assert(sizeof(BP_Character_C_SetOutlineColorEnum) == 0x000001, "Wrong size on BP_Character_C_SetOutlineColorEnum");
static_assert(offsetof(BP_Character_C_SetOutlineColorEnum, InNewColorType) == 0x000000, "Member 'BP_Character_C_SetOutlineColorEnum::InNewColorType' has a wrong offset!");

// Function BP_Character.BP_Character_C.SetUseCharacterRotationPitch
// 0x0002 (0x0002 - 0x0000)
struct BP_Character_C_SetUseCharacterRotationPitch final
{
public:
	bool                                          InUsePitch;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsePitch;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_SetUseCharacterRotationPitch) == 0x000001, "Wrong alignment on BP_Character_C_SetUseCharacterRotationPitch");
static_assert(sizeof(BP_Character_C_SetUseCharacterRotationPitch) == 0x000002, "Wrong size on BP_Character_C_SetUseCharacterRotationPitch");
static_assert(offsetof(BP_Character_C_SetUseCharacterRotationPitch, InUsePitch) == 0x000000, "Member 'BP_Character_C_SetUseCharacterRotationPitch::InUsePitch' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetUseCharacterRotationPitch, UsePitch) == 0x000001, "Member 'BP_Character_C_SetUseCharacterRotationPitch::UsePitch' has a wrong offset!");

// Function BP_Character.BP_Character_C.SetUseCharacterRotationPitchDetail
// 0x0004 (0x0004 - 0x0000)
struct BP_Character_C_SetUseCharacterRotationPitchDetail final
{
public:
	bool                                          InUsePitchLimit;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InUsePitchInterp;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsePitchLimit;                                     // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsePitchInterp;                                    // 0x0003(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_SetUseCharacterRotationPitchDetail) == 0x000001, "Wrong alignment on BP_Character_C_SetUseCharacterRotationPitchDetail");
static_assert(sizeof(BP_Character_C_SetUseCharacterRotationPitchDetail) == 0x000004, "Wrong size on BP_Character_C_SetUseCharacterRotationPitchDetail");
static_assert(offsetof(BP_Character_C_SetUseCharacterRotationPitchDetail, InUsePitchLimit) == 0x000000, "Member 'BP_Character_C_SetUseCharacterRotationPitchDetail::InUsePitchLimit' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetUseCharacterRotationPitchDetail, InUsePitchInterp) == 0x000001, "Member 'BP_Character_C_SetUseCharacterRotationPitchDetail::InUsePitchInterp' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetUseCharacterRotationPitchDetail, UsePitchLimit) == 0x000002, "Member 'BP_Character_C_SetUseCharacterRotationPitchDetail::UsePitchLimit' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetUseCharacterRotationPitchDetail, UsePitchInterp) == 0x000003, "Member 'BP_Character_C_SetUseCharacterRotationPitchDetail::UsePitchInterp' has a wrong offset!");

// Function BP_Character.BP_Character_C.SetVanishingHiddenSwitchingTime 
// 0x0028 (0x0028 - 0x0000)
struct BP_Character_C_SetVanishingHiddenSwitchingTime_ final
{
public:
	double                                        InDisappearTime;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InAppearTime;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AppearEffectTimeLag;                               // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_SetVanishingHiddenSwitchingTime_) == 0x000008, "Wrong alignment on BP_Character_C_SetVanishingHiddenSwitchingTime_");
static_assert(sizeof(BP_Character_C_SetVanishingHiddenSwitchingTime_) == 0x000028, "Wrong size on BP_Character_C_SetVanishingHiddenSwitchingTime_");
static_assert(offsetof(BP_Character_C_SetVanishingHiddenSwitchingTime_, InDisappearTime) == 0x000000, "Member 'BP_Character_C_SetVanishingHiddenSwitchingTime_::InDisappearTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetVanishingHiddenSwitchingTime_, InAppearTime) == 0x000008, "Member 'BP_Character_C_SetVanishingHiddenSwitchingTime_::InAppearTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetVanishingHiddenSwitchingTime_, AppearEffectTimeLag) == 0x000010, "Member 'BP_Character_C_SetVanishingHiddenSwitchingTime_::AppearEffectTimeLag' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetVanishingHiddenSwitchingTime_, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_Character_C_SetVanishingHiddenSwitchingTime_::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetVanishingHiddenSwitchingTime_, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_Character_C_SetVanishingHiddenSwitchingTime_::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_Character.BP_Character_C.SetVirtualTarget
// 0x0028 (0x0028 - 0x0000)
struct BP_Character_C_SetVirtualTarget final
{
public:
	class AActor*                                 InActor;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InLocation;                                        // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InUseBattleTargetPawn;                             // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_SetVirtualTarget) == 0x000008, "Wrong alignment on BP_Character_C_SetVirtualTarget");
static_assert(sizeof(BP_Character_C_SetVirtualTarget) == 0x000028, "Wrong size on BP_Character_C_SetVirtualTarget");
static_assert(offsetof(BP_Character_C_SetVirtualTarget, InActor) == 0x000000, "Member 'BP_Character_C_SetVirtualTarget::InActor' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetVirtualTarget, InLocation) == 0x000008, "Member 'BP_Character_C_SetVirtualTarget::InLocation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetVirtualTarget, InUseBattleTargetPawn) == 0x000020, "Member 'BP_Character_C_SetVirtualTarget::InUseBattleTargetPawn' has a wrong offset!");

// Function BP_Character.BP_Character_C.StartVanishing
// 0x0048 (0x0048 - 0x0000)
struct BP_Character_C_StartVanishing final
{
public:
	float                                         InDisappearTime;                                   // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAppearTime;                                      // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InAppearPosition;                                  // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               InAppearDirection;                                 // 0x0020(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FKoratActionDataList                   InAppearAction;                                    // 0x0038(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          InTraining;                                        // 0x0040(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InDramaticWarp;                                    // 0x0041(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_StartVanishing) == 0x000008, "Wrong alignment on BP_Character_C_StartVanishing");
static_assert(sizeof(BP_Character_C_StartVanishing) == 0x000048, "Wrong size on BP_Character_C_StartVanishing");
static_assert(offsetof(BP_Character_C_StartVanishing, InDisappearTime) == 0x000000, "Member 'BP_Character_C_StartVanishing::InDisappearTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_StartVanishing, InAppearTime) == 0x000004, "Member 'BP_Character_C_StartVanishing::InAppearTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_StartVanishing, InAppearPosition) == 0x000008, "Member 'BP_Character_C_StartVanishing::InAppearPosition' has a wrong offset!");
static_assert(offsetof(BP_Character_C_StartVanishing, InAppearDirection) == 0x000020, "Member 'BP_Character_C_StartVanishing::InAppearDirection' has a wrong offset!");
static_assert(offsetof(BP_Character_C_StartVanishing, InAppearAction) == 0x000038, "Member 'BP_Character_C_StartVanishing::InAppearAction' has a wrong offset!");
static_assert(offsetof(BP_Character_C_StartVanishing, InTraining) == 0x000040, "Member 'BP_Character_C_StartVanishing::InTraining' has a wrong offset!");
static_assert(offsetof(BP_Character_C_StartVanishing, InDramaticWarp) == 0x000041, "Member 'BP_Character_C_StartVanishing::InDramaticWarp' has a wrong offset!");

// Function BP_Character.BP_Character_C.StopRotateToCenter
// 0x0018 (0x0018 - 0x0000)
struct BP_Character_C_StopRotateToCenter final
{
public:
	double                                        TargetYaw;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ActorPitch;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_StopRotateToCenter) == 0x000008, "Wrong alignment on BP_Character_C_StopRotateToCenter");
static_assert(sizeof(BP_Character_C_StopRotateToCenter) == 0x000018, "Wrong size on BP_Character_C_StopRotateToCenter");
static_assert(offsetof(BP_Character_C_StopRotateToCenter, TargetYaw) == 0x000000, "Member 'BP_Character_C_StopRotateToCenter::TargetYaw' has a wrong offset!");
static_assert(offsetof(BP_Character_C_StopRotateToCenter, ActorPitch) == 0x000008, "Member 'BP_Character_C_StopRotateToCenter::ActorPitch' has a wrong offset!");
static_assert(offsetof(BP_Character_C_StopRotateToCenter, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000010, "Member 'BP_Character_C_StopRotateToCenter::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");

// Function BP_Character.BP_Character_C.TraceNearPhysicalAssetsCollition
// 0x0560 (0x0560 - 0x0000)
struct BP_Character_C_TraceNearPhysicalAssetsCollition final
{
public:
	struct FVector                                InStart;                                           // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InEnd;                                             // 0x0018(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InRadius;                                          // 0x0030(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           InGaveDamageActor;                                 // 0x0038(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           InReceivedDamageActor;                             // 0x0040(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           InRotateActor;                                     // 0x0048(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             OutHitTransform;                                   // 0x0050(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   OutHitBoneName;                                    // 0x00B0(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      ObjectTypes;                                       // 0x00B8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETraceTypeQuery                               TraceType;                                         // 0x00C8(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x00C9(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTraceTypeOn;                                     // 0x00CA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CB[0x1];                                       // 0x00CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   HitBoneName;                                       // 0x00CC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ImpactPoint;                                       // 0x00D8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             HitTransform;                                      // 0x00F0(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ReturnHitBoneName;                                 // 0x0150(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNearLocation;                                   // 0x0158(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitCollisionLocation;                              // 0x0170(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHitCollision;                                    // 0x0188(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHitTrace;                                        // 0x0189(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18A[0x6];                                      // 0x018A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                StartLocal;                                        // 0x0190(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x01AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AF[0x1];                                      // 0x01AF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetAttackRotation_OutRotation;            // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetAttackRotation_OutRotation_1;          // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x01E0(0x0010)(ConstParm, ReferenceParm)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeSquared_ReturnValue;                 // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_SphereTraceMulti_OutHits;                 // 0x0298(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMulti_ReturnValue;             // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_SphereTraceMultiForObjects_OutHits;       // 0x02B0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMultiForObjects_ReturnValue;   // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     K2Node_Select_Default;                             // 0x02C8(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x02D8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x03C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x03D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DA[0x2];                                      // 0x03DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E4[0x4];                                      // 0x03E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x03E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0400(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0418(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0430(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0448(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0450(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0458(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C[0x4];                                      // 0x047C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0480(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0498(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeSquared_ReturnValue_1;               // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B9[0x3];                                      // 0x04B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C4[0x4];                                      // 0x04C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x04C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSizeSquared_ReturnValue_2;               // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x04F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F2[0x2];                                      // 0x04F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x04F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F8[0x8];                                      // 0x04F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0500(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_TraceNearPhysicalAssetsCollition) == 0x000010, "Wrong alignment on BP_Character_C_TraceNearPhysicalAssetsCollition");
static_assert(sizeof(BP_Character_C_TraceNearPhysicalAssetsCollition) == 0x000560, "Wrong size on BP_Character_C_TraceNearPhysicalAssetsCollition");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, InStart) == 0x000000, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::InStart' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, InEnd) == 0x000018, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::InEnd' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, InRadius) == 0x000030, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::InRadius' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, InGaveDamageActor) == 0x000038, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::InGaveDamageActor' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, InReceivedDamageActor) == 0x000040, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::InReceivedDamageActor' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, InRotateActor) == 0x000048, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::InRotateActor' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, OutHitTransform) == 0x000050, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::OutHitTransform' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, OutHitBoneName) == 0x0000B0, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::OutHitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, ObjectTypes) == 0x0000B8, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::ObjectTypes' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, TraceType) == 0x0000C8, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::TraceType' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, ReturnValue) == 0x0000C9, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, IsTraceTypeOn) == 0x0000CA, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::IsTraceTypeOn' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, HitBoneName) == 0x0000CC, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, ImpactPoint) == 0x0000D8, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, HitTransform) == 0x0000F0, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::HitTransform' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, ReturnHitBoneName) == 0x000150, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::ReturnHitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, HitNearLocation) == 0x000158, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::HitNearLocation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, HitCollisionLocation) == 0x000170, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::HitCollisionLocation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, IsHitCollision) == 0x000188, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::IsHitCollision' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, IsHitTrace) == 0x000189, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::IsHitTrace' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, StartLocal) == 0x000190, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::StartLocal' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, Temp_int_Array_Index_Variable) == 0x0001A8, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, Temp_bool_True_if_break_was_hit_Variable) == 0x0001AC, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_Not_PreBool_ReturnValue) == 0x0001AD, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_NotEqual_NameName_ReturnValue) == 0x0001AE, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_GetAttackRotation_OutRotation) == 0x0001B0, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_GetAttackRotation_OutRotation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_GetAttackRotation_OutRotation_1) == 0x0001C8, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_GetAttackRotation_OutRotation_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, K2Node_MakeArray_Array) == 0x0001E0, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_MakeTransform_ReturnValue) == 0x0001F0, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, Temp_bool_Variable) == 0x000250, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000258, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_VSizeSquared_ReturnValue) == 0x000270, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000278, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_Add_VectorVector_ReturnValue) == 0x000280, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_SphereTraceMulti_OutHits) == 0x000298, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_SphereTraceMulti_OutHits' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_SphereTraceMulti_ReturnValue) == 0x0002A8, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_SphereTraceMulti_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_SphereTraceMultiForObjects_OutHits) == 0x0002B0, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_SphereTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_SphereTraceMultiForObjects_ReturnValue) == 0x0002C0, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_SphereTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, K2Node_Select_Default) == 0x0002C8, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_Array_Get_Item) == 0x0002D8, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0003C0, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_BreakHitResult_bBlockingHit) == 0x0003D8, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_BreakHitResult_bInitialOverlap) == 0x0003D9, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_BreakHitResult_Time) == 0x0003DC, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_BreakHitResult_Distance) == 0x0003E0, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_BreakHitResult_Location) == 0x0003E8, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_BreakHitResult_ImpactPoint) == 0x000400, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_BreakHitResult_Normal) == 0x000418, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_BreakHitResult_ImpactNormal) == 0x000430, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_BreakHitResult_PhysMat) == 0x000448, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_BreakHitResult_HitActor) == 0x000450, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_BreakHitResult_HitComponent) == 0x000458, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_BreakHitResult_HitBoneName) == 0x000460, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_BreakHitResult_BoneName) == 0x000468, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_BreakHitResult_HitItem) == 0x000470, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_BreakHitResult_ElementIndex) == 0x000474, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_BreakHitResult_FaceIndex) == 0x000478, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_BreakHitResult_TraceStart) == 0x000480, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_BreakHitResult_TraceEnd) == 0x000498, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_VSizeSquared_ReturnValue_1) == 0x0004B0, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_VSizeSquared_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0004B8, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_Array_Length_ReturnValue) == 0x0004BC, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, Temp_int_Loop_Counter_Variable) == 0x0004C0, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x0004C8, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_Less_IntInt_ReturnValue) == 0x0004E0, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_VSizeSquared_ReturnValue_2) == 0x0004E8, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_VSizeSquared_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_BooleanAND_ReturnValue) == 0x0004F0, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x0004F1, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_Add_IntInt_ReturnValue) == 0x0004F4, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollition, CallFunc_MakeTransform_ReturnValue_1) == 0x000500, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollition::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");

// Function BP_Character.BP_Character_C.TraceNearPhysicalAssetsCollitionByBox
// 0x0570 (0x0570 - 0x0000)
struct BP_Character_C_TraceNearPhysicalAssetsCollitionByBox final
{
public:
	struct FVector                                InStart;                                           // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InEnd;                                             // 0x0018(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InHalfSize;                                        // 0x0030(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               InOrientation;                                     // 0x0048(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	const class AActor*                           InGaveDamageActor;                                 // 0x0060(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           InReceivedDamageActor;                             // 0x0068(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           InRotateActor;                                     // 0x0070(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             OutHitTransform;                                   // 0x0080(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   OutHitBoneName;                                    // 0x00E0(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      ObjectTypes;                                       // 0x00E8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x00F8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             HitTransform;                                      // 0x0100(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHitCollision;                                    // 0x0160(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHitTrace;                                        // 0x0161(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_162[0x6];                                      // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitCollisionLocation;                              // 0x0168(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNearLocation;                                   // 0x0180(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ReturnHitBoneName;                                 // 0x0198(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   HitBoneName;                                       // 0x01A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactPoint;                                       // 0x01A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartLocal;                                        // 0x01C0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetAttackRotation_OutRotation;            // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetAttackRotation_OutRotation_1;          // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0210(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_223[0xD];                                      // 0x0223(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0230(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeSquared_ReturnValue;                 // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_BoxTraceMultiForObjects_OutHits;          // 0x02D0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BoxTraceMultiForObjects_ReturnValue;      // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x02E8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x03D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x03D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D6[0x2];                                      // 0x03D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x03E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x03F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0410(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0428(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0440(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0448(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0450(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_474[0x4];                                      // 0x0474(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0478(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0490(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x04A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C1[0x7];                                      // 0x04C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSizeSquared_ReturnValue_1;               // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x04D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeSquared_ReturnValue_2;               // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F1[0xF];                                      // 0x04F1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0500(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0564(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_565[0x3];                                      // 0x0565(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0568(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x056C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox) == 0x000010, "Wrong alignment on BP_Character_C_TraceNearPhysicalAssetsCollitionByBox");
static_assert(sizeof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox) == 0x000570, "Wrong size on BP_Character_C_TraceNearPhysicalAssetsCollitionByBox");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, InStart) == 0x000000, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::InStart' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, InEnd) == 0x000018, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::InEnd' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, InHalfSize) == 0x000030, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::InHalfSize' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, InOrientation) == 0x000048, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::InOrientation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, InGaveDamageActor) == 0x000060, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::InGaveDamageActor' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, InReceivedDamageActor) == 0x000068, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::InReceivedDamageActor' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, InRotateActor) == 0x000070, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::InRotateActor' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, OutHitTransform) == 0x000080, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::OutHitTransform' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, OutHitBoneName) == 0x0000E0, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::OutHitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, ObjectTypes) == 0x0000E8, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::ObjectTypes' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, ReturnValue) == 0x0000F8, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, HitTransform) == 0x000100, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::HitTransform' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, IsHitCollision) == 0x000160, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::IsHitCollision' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, IsHitTrace) == 0x000161, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::IsHitTrace' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, HitCollisionLocation) == 0x000168, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::HitCollisionLocation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, HitNearLocation) == 0x000180, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::HitNearLocation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, ReturnHitBoneName) == 0x000198, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::ReturnHitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, HitBoneName) == 0x0001A0, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, ImpactPoint) == 0x0001A8, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, StartLocal) == 0x0001C0, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::StartLocal' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, Temp_int_Array_Index_Variable) == 0x0001D8, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_GetAttackRotation_OutRotation) == 0x0001E0, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_GetAttackRotation_OutRotation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_GetAttackRotation_OutRotation_1) == 0x0001F8, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_GetAttackRotation_OutRotation_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, K2Node_MakeArray_Array) == 0x000210, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_NotEqual_NameName_ReturnValue) == 0x000220, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, Temp_bool_True_if_break_was_hit_Variable) == 0x000221, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_Not_PreBool_ReturnValue) == 0x000222, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_MakeTransform_ReturnValue) == 0x000230, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000290, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_Add_VectorVector_ReturnValue) == 0x0002A8, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_VSizeSquared_ReturnValue) == 0x0002C0, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0002C8, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_BoxTraceMultiForObjects_OutHits) == 0x0002D0, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_BoxTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_BoxTraceMultiForObjects_ReturnValue) == 0x0002E0, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_BoxTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_Array_Get_Item) == 0x0002E8, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_Array_Length_ReturnValue) == 0x0003D0, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_BreakHitResult_bBlockingHit) == 0x0003D4, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_BreakHitResult_bInitialOverlap) == 0x0003D5, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_BreakHitResult_Time) == 0x0003D8, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_BreakHitResult_Distance) == 0x0003DC, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_BreakHitResult_Location) == 0x0003E0, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_BreakHitResult_ImpactPoint) == 0x0003F8, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_BreakHitResult_Normal) == 0x000410, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_BreakHitResult_ImpactNormal) == 0x000428, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_BreakHitResult_PhysMat) == 0x000440, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_BreakHitResult_HitActor) == 0x000448, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_BreakHitResult_HitComponent) == 0x000450, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_BreakHitResult_HitBoneName) == 0x000458, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_BreakHitResult_BoneName) == 0x000460, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_BreakHitResult_HitItem) == 0x000468, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_BreakHitResult_ElementIndex) == 0x00046C, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_BreakHitResult_FaceIndex) == 0x000470, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_BreakHitResult_TraceStart) == 0x000478, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_BreakHitResult_TraceEnd) == 0x000490, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0004A8, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0004C0, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_VSizeSquared_ReturnValue_1) == 0x0004C8, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_VSizeSquared_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x0004D0, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_VSizeSquared_ReturnValue_2) == 0x0004E8, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_VSizeSquared_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x0004F0, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_MakeTransform_ReturnValue_1) == 0x000500, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, Temp_int_Loop_Counter_Variable) == 0x000560, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_Less_IntInt_ReturnValue) == 0x000564, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_Add_IntInt_ReturnValue) == 0x000568, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TraceNearPhysicalAssetsCollitionByBox, CallFunc_BooleanAND_ReturnValue) == 0x00056C, "Member 'BP_Character_C_TraceNearPhysicalAssetsCollitionByBox::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_Character.BP_Character_C.TransitAction
// 0x0020 (0x0020 - 0x0000)
struct BP_Character_C_TransitAction final
{
public:
	struct FKoratActionDataList                   InAction;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_TransitActionInstantly_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_TransitAction) == 0x000008, "Wrong alignment on BP_Character_C_TransitAction");
static_assert(sizeof(BP_Character_C_TransitAction) == 0x000020, "Wrong size on BP_Character_C_TransitAction");
static_assert(offsetof(BP_Character_C_TransitAction, InAction) == 0x000000, "Member 'BP_Character_C_TransitAction::InAction' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TransitAction, ReturnValue) == 0x000008, "Member 'BP_Character_C_TransitAction::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TransitAction, CallFunc_TransitActionInstantly_ReturnValue) == 0x000010, "Member 'BP_Character_C_TransitAction::CallFunc_TransitActionInstantly_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TransitAction, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000018, "Member 'BP_Character_C_TransitAction::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");

// Function BP_Character.BP_Character_C.TransitActionFromSection
// 0x0028 (0x0028 - 0x0000)
struct BP_Character_C_TransitActionFromSection final
{
public:
	struct FKoratActionDataList                   InAction;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class FName                                   InJumpSectionName;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_TransitActionInstantly_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_TransitActionFromSection) == 0x000008, "Wrong alignment on BP_Character_C_TransitActionFromSection");
static_assert(sizeof(BP_Character_C_TransitActionFromSection) == 0x000028, "Wrong size on BP_Character_C_TransitActionFromSection");
static_assert(offsetof(BP_Character_C_TransitActionFromSection, InAction) == 0x000000, "Member 'BP_Character_C_TransitActionFromSection::InAction' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TransitActionFromSection, InJumpSectionName) == 0x000008, "Member 'BP_Character_C_TransitActionFromSection::InJumpSectionName' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TransitActionFromSection, ReturnValue) == 0x000010, "Member 'BP_Character_C_TransitActionFromSection::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TransitActionFromSection, CallFunc_TransitActionInstantly_ReturnValue) == 0x000018, "Member 'BP_Character_C_TransitActionFromSection::CallFunc_TransitActionInstantly_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_TransitActionFromSection, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000020, "Member 'BP_Character_C_TransitActionFromSection::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");

// Function BP_Character.BP_Character_C.TransitionCatch_CBCC57694C1B36202F8BE88662BB9DD8
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_C_TransitionCatch_CBCC57694C1B36202F8BE88662BB9DD8 final
{
public:
	struct FKoratReplaceAnimationDataList         OutAnimDataList;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_TransitionCatch_CBCC57694C1B36202F8BE88662BB9DD8) == 0x000004, "Wrong alignment on BP_Character_C_TransitionCatch_CBCC57694C1B36202F8BE88662BB9DD8");
static_assert(sizeof(BP_Character_C_TransitionCatch_CBCC57694C1B36202F8BE88662BB9DD8) == 0x000008, "Wrong size on BP_Character_C_TransitionCatch_CBCC57694C1B36202F8BE88662BB9DD8");
static_assert(offsetof(BP_Character_C_TransitionCatch_CBCC57694C1B36202F8BE88662BB9DD8, OutAnimDataList) == 0x000000, "Member 'BP_Character_C_TransitionCatch_CBCC57694C1B36202F8BE88662BB9DD8::OutAnimDataList' has a wrong offset!");

// Function BP_Character.BP_Character_C.TransitionNone_CBCC57694C1B36202F8BE88662BB9DD8
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_C_TransitionNone_CBCC57694C1B36202F8BE88662BB9DD8 final
{
public:
	struct FKoratReplaceAnimationDataList         OutAnimDataList;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_TransitionNone_CBCC57694C1B36202F8BE88662BB9DD8) == 0x000004, "Wrong alignment on BP_Character_C_TransitionNone_CBCC57694C1B36202F8BE88662BB9DD8");
static_assert(sizeof(BP_Character_C_TransitionNone_CBCC57694C1B36202F8BE88662BB9DD8) == 0x000008, "Wrong size on BP_Character_C_TransitionNone_CBCC57694C1B36202F8BE88662BB9DD8");
static_assert(offsetof(BP_Character_C_TransitionNone_CBCC57694C1B36202F8BE88662BB9DD8, OutAnimDataList) == 0x000000, "Member 'BP_Character_C_TransitionNone_CBCC57694C1B36202F8BE88662BB9DD8::OutAnimDataList' has a wrong offset!");

// Function BP_Character.BP_Character_C.UpdateChche
// 0x0018 (0x0018 - 0x0000)
struct BP_Character_C_UpdateChche final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           K2Node_DynamicCast_AsSSCharacter;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_UpdateChche) == 0x000008, "Wrong alignment on BP_Character_C_UpdateChche");
static_assert(sizeof(BP_Character_C_UpdateChche) == 0x000018, "Wrong size on BP_Character_C_UpdateChche");
static_assert(offsetof(BP_Character_C_UpdateChche, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_Character_C_UpdateChche::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateChche, K2Node_DynamicCast_AsSSCharacter) == 0x000008, "Member 'BP_Character_C_UpdateChche::K2Node_DynamicCast_AsSSCharacter' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateChche, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_Character_C_UpdateChche::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateChche, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BP_Character_C_UpdateChche::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateChche, CallFunc_IsValid_ReturnValue_1) == 0x000012, "Member 'BP_Character_C_UpdateChche::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateChche, CallFunc_IsValid_ReturnValue_2) == 0x000013, "Member 'BP_Character_C_UpdateChche::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_Character.BP_Character_C.UpdateFreeCameraTarget
// 0x0010 (0x0010 - 0x0000)
struct BP_Character_C_UpdateFreeCameraTarget final
{
public:
	struct FVector2D                              InputVector;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_UpdateFreeCameraTarget) == 0x000008, "Wrong alignment on BP_Character_C_UpdateFreeCameraTarget");
static_assert(sizeof(BP_Character_C_UpdateFreeCameraTarget) == 0x000010, "Wrong size on BP_Character_C_UpdateFreeCameraTarget");
static_assert(offsetof(BP_Character_C_UpdateFreeCameraTarget, InputVector) == 0x000000, "Member 'BP_Character_C_UpdateFreeCameraTarget::InputVector' has a wrong offset!");

// Function BP_Character.BP_Character_C.UpdateGiantCharaTargetTransformNearestTargetTestOverride
// 0x0001 (0x0001 - 0x0000)
struct BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverride final
{
public:
	bool                                          bInForceSearchNearParts;                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverride) == 0x000001, "Wrong alignment on BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverride");
static_assert(sizeof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverride) == 0x000001, "Wrong size on BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverride");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverride, bInForceSearchNearParts) == 0x000000, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverride::bInForceSearchNearParts' has a wrong offset!");

// Function BP_Character.BP_Character_C.UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl
// 0x0290 (0x0290 - 0x0000)
struct BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl final
{
public:
	bool                                          InForceSearchNearParts;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDebugDraw;                                       // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           Loc_TgtChara;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class FName                                   Loc_nearBoneName;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Loc_nearDist;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   NewLocalVar_0;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_OutTransform;          // 0x0030(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSocketTransform_ReturnValue;           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        K2Node_MakeArray_Array;                            // 0x0108(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array_1;                          // 0x0158(0x0010)(ReferenceParm)
	class ASSCharacter*                           CallFunc_GetTargetCharacter_ReturnValue;           // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0xC];                                      // 0x0184(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_OutTransform_1;        // 0x0190(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSocketTransform_ReturnValue_1;         // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance_ReturnValue_1;            // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl) == 0x000010, "Wrong alignment on BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl");
static_assert(sizeof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl) == 0x000290, "Wrong size on BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, InForceSearchNearParts) == 0x000000, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::InForceSearchNearParts' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, IsDebugDraw) == 0x000001, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::IsDebugDraw' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, Loc_TgtChara) == 0x000008, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::Loc_TgtChara' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, Loc_nearBoneName) == 0x000010, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::Loc_nearBoneName' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, Loc_nearDist) == 0x000018, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::Loc_nearDist' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, NewLocalVar_0) == 0x000020, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000028, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, CallFunc_GetSocketTransform_OutTransform) == 0x000030, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::CallFunc_GetSocketTransform_OutTransform' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, CallFunc_GetSocketTransform_ReturnValue) == 0x000090, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000098, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, CallFunc_BreakTransform_Location) == 0x0000B0, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, CallFunc_BreakTransform_Rotation) == 0x0000C8, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, CallFunc_BreakTransform_Scale) == 0x0000E0, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, CallFunc_Vector_Distance_ReturnValue) == 0x0000F8, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000100, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, K2Node_MakeArray_Array) == 0x000108, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000118, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, Temp_int_Array_Index_Variable) == 0x00011C, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, CallFunc_Array_Get_Item) == 0x000120, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, CallFunc_NotEqual_NameName_ReturnValue) == 0x000138, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000140, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, K2Node_MakeArray_Array_1) == 0x000158, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, CallFunc_GetTargetCharacter_ReturnValue) == 0x000168, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::CallFunc_GetTargetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, CallFunc_Array_Get_Item_1) == 0x000170, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, CallFunc_IsValid_ReturnValue) == 0x000178, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, CallFunc_Array_Length_ReturnValue) == 0x00017C, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, Temp_int_Loop_Counter_Variable) == 0x000180, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, CallFunc_GetSocketTransform_OutTransform_1) == 0x000190, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::CallFunc_GetSocketTransform_OutTransform_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, CallFunc_GetSocketTransform_ReturnValue_1) == 0x0001F0, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::CallFunc_GetSocketTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, CallFunc_BreakTransform_Location_1) == 0x0001F8, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, CallFunc_BreakTransform_Rotation_1) == 0x000210, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, CallFunc_BreakTransform_Scale_1) == 0x000228, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, CallFunc_Less_IntInt_ReturnValue) == 0x000240, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000248, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, CallFunc_Add_VectorVector_ReturnValue) == 0x000260, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, CallFunc_Add_IntInt_ReturnValue) == 0x000278, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, CallFunc_Vector_Distance_ReturnValue_1) == 0x000280, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000288, "Member 'BP_Character_C_UpdateGiantCharaTargetTransformNearestTargetTestOverrideImpl::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_Character.BP_Character_C.UpdateInput
// 0x00B8 (0x00B8 - 0x0000)
struct BP_Character_C_UpdateInput final
{
public:
	EKoratBattleKey                               BattkeKey;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISSBattleController>   SSBattleController;                                // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue;   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkipUpdateInputInDramaticBattle_ReturnValue; // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterBase_C>  CallFunc_InputKoratBattleKeyUp_self_CastInput;     // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterBase_C>  CallFunc_InputKoratBattleKeyDown_self_CastInput;   // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInputKeyDownBattleKey_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterBase_C>  CallFunc_InputKoratBattleKeyJustReleased_self_CastInput; // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInputKeyJustReleasedBattleKey_ReturnValue; // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterBase_C>  CallFunc_InputKoratBattleKeyJustPressed_self_CastInput; // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInputKeyJustPressedBattleKey_ReturnValue; // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISSBattleController>   K2Node_DynamicCast_AsSSBattle_Controller;          // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_UpdateInput) == 0x000008, "Wrong alignment on BP_Character_C_UpdateInput");
static_assert(sizeof(BP_Character_C_UpdateInput) == 0x0000B8, "Wrong size on BP_Character_C_UpdateInput");
static_assert(offsetof(BP_Character_C_UpdateInput, BattkeKey) == 0x000000, "Member 'BP_Character_C_UpdateInput::BattkeKey' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateInput, SSBattleController) == 0x000008, "Member 'BP_Character_C_UpdateInput::SSBattleController' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateInput, CallFunc_MakeLiteralInt_ReturnValue) == 0x000018, "Member 'BP_Character_C_UpdateInput::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateInput, Temp_int_Variable) == 0x00001C, "Member 'BP_Character_C_UpdateInput::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateInput, Temp_int_Variable_1) == 0x000020, "Member 'BP_Character_C_UpdateInput::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateInput, CallFunc_Conv_IntToByte_ReturnValue) == 0x000024, "Member 'BP_Character_C_UpdateInput::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateInput, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_Character_C_UpdateInput::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateInput, CallFunc_GetValidValue_ReturnValue) == 0x00002C, "Member 'BP_Character_C_UpdateInput::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateInput, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x00002D, "Member 'BP_Character_C_UpdateInput::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateInput, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x00002E, "Member 'BP_Character_C_UpdateInput::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateInput, CallFunc_Less_IntInt_ReturnValue) == 0x00002F, "Member 'BP_Character_C_UpdateInput::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateInput, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000030, "Member 'BP_Character_C_UpdateInput::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateInput, CallFunc_GetConsoleVariableIntValue_ReturnValue) == 0x000034, "Member 'BP_Character_C_UpdateInput::CallFunc_GetConsoleVariableIntValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateInput, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000038, "Member 'BP_Character_C_UpdateInput::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateInput, CallFunc_IsSkipUpdateInputInDramaticBattle_ReturnValue) == 0x000039, "Member 'BP_Character_C_UpdateInput::CallFunc_IsSkipUpdateInputInDramaticBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateInput, CallFunc_Not_PreBool_ReturnValue) == 0x00003A, "Member 'BP_Character_C_UpdateInput::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateInput, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x00003B, "Member 'BP_Character_C_UpdateInput::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateInput, CallFunc_BooleanAND_ReturnValue) == 0x00003C, "Member 'BP_Character_C_UpdateInput::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateInput, CallFunc_InputKoratBattleKeyUp_self_CastInput) == 0x000040, "Member 'BP_Character_C_UpdateInput::CallFunc_InputKoratBattleKeyUp_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateInput, CallFunc_InputKoratBattleKeyDown_self_CastInput) == 0x000050, "Member 'BP_Character_C_UpdateInput::CallFunc_InputKoratBattleKeyDown_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateInput, CallFunc_IsInputKeyDownBattleKey_ReturnValue) == 0x000060, "Member 'BP_Character_C_UpdateInput::CallFunc_IsInputKeyDownBattleKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateInput, CallFunc_InputKoratBattleKeyJustReleased_self_CastInput) == 0x000068, "Member 'BP_Character_C_UpdateInput::CallFunc_InputKoratBattleKeyJustReleased_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateInput, CallFunc_WasInputKeyJustReleasedBattleKey_ReturnValue) == 0x000078, "Member 'BP_Character_C_UpdateInput::CallFunc_WasInputKeyJustReleasedBattleKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateInput, CallFunc_InputKoratBattleKeyJustPressed_self_CastInput) == 0x000080, "Member 'BP_Character_C_UpdateInput::CallFunc_InputKoratBattleKeyJustPressed_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateInput, CallFunc_GetController_ReturnValue) == 0x000090, "Member 'BP_Character_C_UpdateInput::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateInput, CallFunc_WasInputKeyJustPressedBattleKey_ReturnValue) == 0x000098, "Member 'BP_Character_C_UpdateInput::CallFunc_WasInputKeyJustPressedBattleKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateInput, K2Node_DynamicCast_AsSSBattle_Controller) == 0x0000A0, "Member 'BP_Character_C_UpdateInput::K2Node_DynamicCast_AsSSBattle_Controller' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateInput, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'BP_Character_C_UpdateInput::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Character.BP_Character_C.UpdateRotateToCenter
// 0x0190 (0x0190 - 0x0000)
struct BP_Character_C_UpdateRotateToCenter final
{
public:
	double                                        RotateYaw;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DifferenceYaw;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TargetYaw;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ActorPitch;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ActorYaw;                                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetTargetPawn_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratCharacterMovementComponent*       K2Node_DynamicCast_AsKorat_Character_Movement_Component; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue_1;       // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UKoratCharacterMovementComponent*       K2Node_DynamicCast_AsKorat_Character_Movement_Component_1; // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetYawPitchFromVector_Yaw;                // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetYawPitchFromVector_Pitch;              // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_4;      // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast_1;         // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_ActorPitch_ImplicitCast;        // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_ActorYaw_ImplicitCast;          // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_TargetYaw_ImplicitCast;         // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_UpdateRotateToCenter) == 0x000008, "Wrong alignment on BP_Character_C_UpdateRotateToCenter");
static_assert(sizeof(BP_Character_C_UpdateRotateToCenter) == 0x000190, "Wrong size on BP_Character_C_UpdateRotateToCenter");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, RotateYaw) == 0x000000, "Member 'BP_Character_C_UpdateRotateToCenter::RotateYaw' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, DifferenceYaw) == 0x000008, "Member 'BP_Character_C_UpdateRotateToCenter::DifferenceYaw' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, TargetYaw) == 0x000010, "Member 'BP_Character_C_UpdateRotateToCenter::TargetYaw' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, ActorPitch) == 0x000018, "Member 'BP_Character_C_UpdateRotateToCenter::ActorPitch' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, ActorYaw) == 0x000020, "Member 'BP_Character_C_UpdateRotateToCenter::ActorYaw' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_GetTargetPawn_ReturnValue) == 0x000028, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_GetTargetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_Abs_ReturnValue) == 0x000030, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_GetMovementComponent_ReturnValue) == 0x000038, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, K2Node_DynamicCast_AsKorat_Character_Movement_Component) == 0x000048, "Member 'BP_Character_C_UpdateRotateToCenter::K2Node_DynamicCast_AsKorat_Character_Movement_Component' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_Character_C_UpdateRotateToCenter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000058, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_GetMovementComponent_ReturnValue_1) == 0x000068, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_GetMovementComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_MakeRotator_ReturnValue) == 0x000070, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, K2Node_DynamicCast_AsKorat_Character_Movement_Component_1) == 0x000088, "Member 'BP_Character_C_UpdateRotateToCenter::K2Node_DynamicCast_AsKorat_Character_Movement_Component_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'BP_Character_C_UpdateRotateToCenter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000091, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000098, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x0000A8, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x0000B1, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000B8, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_MakeRotator_ReturnValue_1) == 0x0000C8, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000E0, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x0000F8, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_BreakRotator_Roll) == 0x000100, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_BreakRotator_Pitch) == 0x000104, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_BreakRotator_Yaw) == 0x000108, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x00010C, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000110, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_BooleanAND_ReturnValue) == 0x000128, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000130, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_GetYawPitchFromVector_Yaw) == 0x000148, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_GetYawPitchFromVector_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_GetYawPitchFromVector_Pitch) == 0x00014C, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_GetYawPitchFromVector_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000150, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000158, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_Subtract_DoubleDouble_ReturnValue_4) == 0x000160, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_Subtract_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000168, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x00016C, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x000170, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, CallFunc_MakeRotator_Pitch_ImplicitCast_1) == 0x000174, "Member 'BP_Character_C_UpdateRotateToCenter::CallFunc_MakeRotator_Pitch_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, K2Node_VariableSet_ActorPitch_ImplicitCast) == 0x000178, "Member 'BP_Character_C_UpdateRotateToCenter::K2Node_VariableSet_ActorPitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, K2Node_VariableSet_ActorYaw_ImplicitCast) == 0x000180, "Member 'BP_Character_C_UpdateRotateToCenter::K2Node_VariableSet_ActorYaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateRotateToCenter, K2Node_VariableSet_TargetYaw_ImplicitCast) == 0x000188, "Member 'BP_Character_C_UpdateRotateToCenter::K2Node_VariableSet_TargetYaw_ImplicitCast' has a wrong offset!");

// Function BP_Character.BP_Character_C.UpdateVanishingHiddenSwitching
// 0x0050 (0x0050 - 0x0000)
struct BP_Character_C_UpdateVanishingHiddenSwitching final
{
public:
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISSBattleController>   K2Node_DynamicCast_AsSSBattle_Controller;          // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VanishingStarted_InBlankTime_ImplicitCast; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VanishingStarted_InPostEffectTime_ImplicitCast; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VanishingStarted_InPreEffectTime_ImplicitCast; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_UpdateVanishingHiddenSwitching) == 0x000008, "Wrong alignment on BP_Character_C_UpdateVanishingHiddenSwitching");
static_assert(sizeof(BP_Character_C_UpdateVanishingHiddenSwitching) == 0x000050, "Wrong size on BP_Character_C_UpdateVanishingHiddenSwitching");
static_assert(offsetof(BP_Character_C_UpdateVanishingHiddenSwitching, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000000, "Member 'BP_Character_C_UpdateVanishingHiddenSwitching::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateVanishingHiddenSwitching, CallFunc_BooleanOR_ReturnValue) == 0x000001, "Member 'BP_Character_C_UpdateVanishingHiddenSwitching::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateVanishingHiddenSwitching, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000002, "Member 'BP_Character_C_UpdateVanishingHiddenSwitching::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateVanishingHiddenSwitching, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000003, "Member 'BP_Character_C_UpdateVanishingHiddenSwitching::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateVanishingHiddenSwitching, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000008, "Member 'BP_Character_C_UpdateVanishingHiddenSwitching::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateVanishingHiddenSwitching, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_Character_C_UpdateVanishingHiddenSwitching::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateVanishingHiddenSwitching, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000018, "Member 'BP_Character_C_UpdateVanishingHiddenSwitching::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateVanishingHiddenSwitching, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'BP_Character_C_UpdateVanishingHiddenSwitching::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateVanishingHiddenSwitching, CallFunc_GetController_ReturnValue) == 0x000028, "Member 'BP_Character_C_UpdateVanishingHiddenSwitching::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateVanishingHiddenSwitching, K2Node_DynamicCast_AsSSBattle_Controller) == 0x000030, "Member 'BP_Character_C_UpdateVanishingHiddenSwitching::K2Node_DynamicCast_AsSSBattle_Controller' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateVanishingHiddenSwitching, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_Character_C_UpdateVanishingHiddenSwitching::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateVanishingHiddenSwitching, CallFunc_VanishingStarted_InBlankTime_ImplicitCast) == 0x000044, "Member 'BP_Character_C_UpdateVanishingHiddenSwitching::CallFunc_VanishingStarted_InBlankTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateVanishingHiddenSwitching, CallFunc_VanishingStarted_InPostEffectTime_ImplicitCast) == 0x000048, "Member 'BP_Character_C_UpdateVanishingHiddenSwitching::CallFunc_VanishingStarted_InPostEffectTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_UpdateVanishingHiddenSwitching, CallFunc_VanishingStarted_InPreEffectTime_ImplicitCast) == 0x00004C, "Member 'BP_Character_C_UpdateVanishingHiddenSwitching::CallFunc_VanishingStarted_InPreEffectTime_ImplicitCast' has a wrong offset!");

// Function BP_Character.BP_Character_C.CalcCorrectionTowardCenterYaw
// 0x00C8 (0x00C8 - 0x0000)
struct BP_Character_C_CalcCorrectionTowardCenterYaw final
{
public:
	struct FVector                                InVector;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InRotationPosition;                                // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InCorrectionTowardCenter;                          // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OutYaw;                                            // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TargetYaw;                                         // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CorrectionTowardCenter;                            // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Pitch;                                             // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Yaw;                                               // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetYawPitchFromVector_Yaw;                // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetYawPitchFromVector_Pitch;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratDirection                               CallFunc_GetCorrectionTowardCenterDirection_CenterDirection; // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetYawPitchFromVector_Yaw_1;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetYawPitchFromVector_Pitch_1;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetConsoleVariableFloatValue_ReturnValue; // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Yaw_ImplicitCast;               // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Pitch_ImplicitCast;             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_TargetYaw_ImplicitCast;         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_CorrectionTowardCenter_ImplicitCast; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_CalcCorrectionTowardCenterYaw) == 0x000008, "Wrong alignment on BP_Character_C_CalcCorrectionTowardCenterYaw");
static_assert(sizeof(BP_Character_C_CalcCorrectionTowardCenterYaw) == 0x0000C8, "Wrong size on BP_Character_C_CalcCorrectionTowardCenterYaw");
static_assert(offsetof(BP_Character_C_CalcCorrectionTowardCenterYaw, InVector) == 0x000000, "Member 'BP_Character_C_CalcCorrectionTowardCenterYaw::InVector' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcCorrectionTowardCenterYaw, InRotationPosition) == 0x000018, "Member 'BP_Character_C_CalcCorrectionTowardCenterYaw::InRotationPosition' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcCorrectionTowardCenterYaw, InCorrectionTowardCenter) == 0x000030, "Member 'BP_Character_C_CalcCorrectionTowardCenterYaw::InCorrectionTowardCenter' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcCorrectionTowardCenterYaw, OutYaw) == 0x000038, "Member 'BP_Character_C_CalcCorrectionTowardCenterYaw::OutYaw' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcCorrectionTowardCenterYaw, TargetYaw) == 0x000040, "Member 'BP_Character_C_CalcCorrectionTowardCenterYaw::TargetYaw' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcCorrectionTowardCenterYaw, CorrectionTowardCenter) == 0x000048, "Member 'BP_Character_C_CalcCorrectionTowardCenterYaw::CorrectionTowardCenter' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcCorrectionTowardCenterYaw, Pitch) == 0x000050, "Member 'BP_Character_C_CalcCorrectionTowardCenterYaw::Pitch' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcCorrectionTowardCenterYaw, Yaw) == 0x000058, "Member 'BP_Character_C_CalcCorrectionTowardCenterYaw::Yaw' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcCorrectionTowardCenterYaw, CallFunc_GetYawPitchFromVector_Yaw) == 0x000060, "Member 'BP_Character_C_CalcCorrectionTowardCenterYaw::CallFunc_GetYawPitchFromVector_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcCorrectionTowardCenterYaw, CallFunc_GetYawPitchFromVector_Pitch) == 0x000064, "Member 'BP_Character_C_CalcCorrectionTowardCenterYaw::CallFunc_GetYawPitchFromVector_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcCorrectionTowardCenterYaw, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000068, "Member 'BP_Character_C_CalcCorrectionTowardCenterYaw::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcCorrectionTowardCenterYaw, CallFunc_GetCorrectionTowardCenterDirection_CenterDirection) == 0x000069, "Member 'BP_Character_C_CalcCorrectionTowardCenterYaw::CallFunc_GetCorrectionTowardCenterDirection_CenterDirection' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcCorrectionTowardCenterYaw, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000070, "Member 'BP_Character_C_CalcCorrectionTowardCenterYaw::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcCorrectionTowardCenterYaw, K2Node_SwitchEnum_CmpSuccess) == 0x000088, "Member 'BP_Character_C_CalcCorrectionTowardCenterYaw::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcCorrectionTowardCenterYaw, CallFunc_GetYawPitchFromVector_Yaw_1) == 0x00008C, "Member 'BP_Character_C_CalcCorrectionTowardCenterYaw::CallFunc_GetYawPitchFromVector_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcCorrectionTowardCenterYaw, CallFunc_GetYawPitchFromVector_Pitch_1) == 0x000090, "Member 'BP_Character_C_CalcCorrectionTowardCenterYaw::CallFunc_GetYawPitchFromVector_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcCorrectionTowardCenterYaw, CallFunc_GetConsoleVariableFloatValue_ReturnValue) == 0x000094, "Member 'BP_Character_C_CalcCorrectionTowardCenterYaw::CallFunc_GetConsoleVariableFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcCorrectionTowardCenterYaw, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000098, "Member 'BP_Character_C_CalcCorrectionTowardCenterYaw::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcCorrectionTowardCenterYaw, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'BP_Character_C_CalcCorrectionTowardCenterYaw::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcCorrectionTowardCenterYaw, K2Node_VariableSet_Yaw_ImplicitCast) == 0x0000A8, "Member 'BP_Character_C_CalcCorrectionTowardCenterYaw::K2Node_VariableSet_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcCorrectionTowardCenterYaw, K2Node_VariableSet_Pitch_ImplicitCast) == 0x0000B0, "Member 'BP_Character_C_CalcCorrectionTowardCenterYaw::K2Node_VariableSet_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcCorrectionTowardCenterYaw, K2Node_VariableSet_TargetYaw_ImplicitCast) == 0x0000B8, "Member 'BP_Character_C_CalcCorrectionTowardCenterYaw::K2Node_VariableSet_TargetYaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcCorrectionTowardCenterYaw, K2Node_VariableSet_CorrectionTowardCenter_ImplicitCast) == 0x0000C0, "Member 'BP_Character_C_CalcCorrectionTowardCenterYaw::K2Node_VariableSet_CorrectionTowardCenter_ImplicitCast' has a wrong offset!");

// Function BP_Character.BP_Character_C.CalcHitBackRotation
// 0x05B8 (0x05B8 - 0x0000)
struct BP_Character_C_CalcHitBackRotation final
{
public:
	struct FRotator                               InHitRotation;                                     // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FKoratHitBackMovementData              InHitBackData;                                     // 0x0018(0x02E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FRotator                               ReturnValue;                                       // 0x02F8(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	double                                        Yaw;                                               // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Pitch;                                             // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AngleToReduceTilt;                                 // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HorizontalAngle;                                   // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        VerticalAngle;                                     // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                YawRotateVector;                                   // 0x0338(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PitchRotateVector;                                 // 0x0350(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                UpVector;                                          // 0x0368(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SideVector;                                        // 0x0380(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitVector;                                         // 0x0398(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x03B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x03C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x03F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x03FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0400(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetYawPitchFromVector_Yaw;                // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetYawPitchFromVector_Pitch;              // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0420(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetYawPitchFromVector_Yaw_1;              // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetYawPitchFromVector_Pitch_1;            // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetYawPitchFromVector_Yaw_2;              // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetYawPitchFromVector_Pitch_2;            // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0460(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue_1;       // 0x0480(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x04A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B9[0x7];                                      // 0x04B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalcCorrectionTowardCenterYaw_OutYaw;     // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x04C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x04E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x04F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x0510(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0528(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x0548(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue_2;       // 0x0560(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x057C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Pitch_ImplicitCast;             // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Pitch_ImplicitCast_1;           // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast_1;         // 0x0590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x0594(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1;  // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C[0x4];                                      // 0x059C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_VerticalAngle_ImplicitCast;     // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_HorizontalAngle_ImplicitCast;   // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_AngleToReduceTilt_ImplicitCast; // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_CalcHitBackRotation) == 0x000008, "Wrong alignment on BP_Character_C_CalcHitBackRotation");
static_assert(sizeof(BP_Character_C_CalcHitBackRotation) == 0x0005B8, "Wrong size on BP_Character_C_CalcHitBackRotation");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, InHitRotation) == 0x000000, "Member 'BP_Character_C_CalcHitBackRotation::InHitRotation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, InHitBackData) == 0x000018, "Member 'BP_Character_C_CalcHitBackRotation::InHitBackData' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, ReturnValue) == 0x0002F8, "Member 'BP_Character_C_CalcHitBackRotation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, Yaw) == 0x000310, "Member 'BP_Character_C_CalcHitBackRotation::Yaw' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, Pitch) == 0x000318, "Member 'BP_Character_C_CalcHitBackRotation::Pitch' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, AngleToReduceTilt) == 0x000320, "Member 'BP_Character_C_CalcHitBackRotation::AngleToReduceTilt' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, HorizontalAngle) == 0x000328, "Member 'BP_Character_C_CalcHitBackRotation::HorizontalAngle' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, VerticalAngle) == 0x000330, "Member 'BP_Character_C_CalcHitBackRotation::VerticalAngle' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, YawRotateVector) == 0x000338, "Member 'BP_Character_C_CalcHitBackRotation::YawRotateVector' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, PitchRotateVector) == 0x000350, "Member 'BP_Character_C_CalcHitBackRotation::PitchRotateVector' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, UpVector) == 0x000368, "Member 'BP_Character_C_CalcHitBackRotation::UpVector' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, SideVector) == 0x000380, "Member 'BP_Character_C_CalcHitBackRotation::SideVector' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, HitVector) == 0x000398, "Member 'BP_Character_C_CalcHitBackRotation::HitVector' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_MakeRotator_ReturnValue) == 0x0003B0, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x0003C8, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_BreakVector_X) == 0x0003E0, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_BreakVector_Y) == 0x0003E8, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_BreakVector_Z) == 0x0003F0, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0003F8, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x0003F9, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x0003FA, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_BooleanAND_ReturnValue) == 0x0003FB, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_Cross_VectorVector_ReturnValue) == 0x000400, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_GetYawPitchFromVector_Yaw) == 0x000418, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_GetYawPitchFromVector_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_GetYawPitchFromVector_Pitch) == 0x00041C, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_GetYawPitchFromVector_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_Normal_ReturnValue) == 0x000420, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_GetYawPitchFromVector_Yaw_1) == 0x000438, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_GetYawPitchFromVector_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_GetYawPitchFromVector_Pitch_1) == 0x00043C, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_GetYawPitchFromVector_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_GetYawPitchFromVector_Yaw_2) == 0x000440, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_GetYawPitchFromVector_Yaw_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_GetYawPitchFromVector_Pitch_2) == 0x000444, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_GetYawPitchFromVector_Pitch_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000448, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000450, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000458, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_MakeRotator_ReturnValue_1) == 0x000460, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000478, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_Conv_RotatorToVector_ReturnValue_1) == 0x000480, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_Conv_RotatorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_Abs_ReturnValue) == 0x000498, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0004A0, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x0004B8, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_CalcCorrectionTowardCenterYaw_OutYaw) == 0x0004C0, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_CalcCorrectionTowardCenterYaw_OutYaw' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0004C8, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x0004E0, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_RotateAngleAxis_ReturnValue) == 0x0004F8, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x000510, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_Normal_ReturnValue_1) == 0x000528, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000540, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x000548, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_Conv_RotatorToVector_ReturnValue_2) == 0x000560, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_Conv_RotatorToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000578, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x00057C, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, K2Node_VariableSet_Pitch_ImplicitCast) == 0x000580, "Member 'BP_Character_C_CalcHitBackRotation::K2Node_VariableSet_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, K2Node_VariableSet_Pitch_ImplicitCast_1) == 0x000588, "Member 'BP_Character_C_CalcHitBackRotation::K2Node_VariableSet_Pitch_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_MakeRotator_Pitch_ImplicitCast_1) == 0x000590, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_MakeRotator_Pitch_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x000594, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1) == 0x000598, "Member 'BP_Character_C_CalcHitBackRotation::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, K2Node_VariableSet_VerticalAngle_ImplicitCast) == 0x0005A0, "Member 'BP_Character_C_CalcHitBackRotation::K2Node_VariableSet_VerticalAngle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, K2Node_VariableSet_HorizontalAngle_ImplicitCast) == 0x0005A8, "Member 'BP_Character_C_CalcHitBackRotation::K2Node_VariableSet_HorizontalAngle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_CalcHitBackRotation, K2Node_VariableSet_AngleToReduceTilt_ImplicitCast) == 0x0005B0, "Member 'BP_Character_C_CalcHitBackRotation::K2Node_VariableSet_AngleToReduceTilt_ImplicitCast' has a wrong offset!");

// Function BP_Character.BP_Character_C.DebugDrawHitArea
// 0x02E8 (0x02E8 - 0x0000)
struct BP_Character_C_DebugDrawHitArea final
{
public:
	float                                         InHitHeightRate;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                InCharacterUpVector;                               // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InHitLocation;                                     // 0x0020(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DrawTime;                                          // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ExistsMidLowArea;                                  // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ExistsMidArea;                                     // 0x0041(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ExistsLowArea;                                     // 0x0042(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ExistsHighArea;                                    // 0x0043(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LowBorderLocation;                                 // 0x0048(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MidBorderLocation;                                 // 0x0060(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HighBorderLocation;                                // 0x0078(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ActorUpperLocation;                                // 0x0090(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ActorUnderLocation;                                // 0x00A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ActorLocation;                                     // 0x00C0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CapsuleRadius;                                     // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CapsuleHeight;                                     // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CapsuleHalfHeight;                                 // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetReactionSplitMidBorder_ReturnValue;    // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetReactionSplitHighBorder_ReturnValue;   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetReactionSplitLowBorder_ReturnValue;    // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_2;     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDrawHitAreaTime_ReturnValue;           // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDrawHitArea_ReturnValue;                // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetReactionSplitHighBorder_ReturnValue_1; // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetReactionSplitMidBorder_ReturnValue_1;  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_3;     // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_4;     // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0176(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0177(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetReactionSplitLowBorder_ReturnValue_1;  // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetReactionSplitMidBorder_ReturnValue_2;  // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetReactionSplitHighBorder_ReturnValue_2; // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast;    // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1;  // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_CapsuleRadius_ImplicitCast;     // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_CapsuleHalfHeight_ImplicitCast; // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_1;  // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_2;  // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_DrawTime_ImplicitCast;          // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_3;  // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_4;  // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1;   // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2;   // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_DebugDrawHitArea) == 0x000008, "Wrong alignment on BP_Character_C_DebugDrawHitArea");
static_assert(sizeof(BP_Character_C_DebugDrawHitArea) == 0x0002E8, "Wrong size on BP_Character_C_DebugDrawHitArea");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, InHitHeightRate) == 0x000000, "Member 'BP_Character_C_DebugDrawHitArea::InHitHeightRate' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, InCharacterUpVector) == 0x000008, "Member 'BP_Character_C_DebugDrawHitArea::InCharacterUpVector' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, InHitLocation) == 0x000020, "Member 'BP_Character_C_DebugDrawHitArea::InHitLocation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, DrawTime) == 0x000038, "Member 'BP_Character_C_DebugDrawHitArea::DrawTime' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, ExistsMidLowArea) == 0x000040, "Member 'BP_Character_C_DebugDrawHitArea::ExistsMidLowArea' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, ExistsMidArea) == 0x000041, "Member 'BP_Character_C_DebugDrawHitArea::ExistsMidArea' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, ExistsLowArea) == 0x000042, "Member 'BP_Character_C_DebugDrawHitArea::ExistsLowArea' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, ExistsHighArea) == 0x000043, "Member 'BP_Character_C_DebugDrawHitArea::ExistsHighArea' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, LowBorderLocation) == 0x000048, "Member 'BP_Character_C_DebugDrawHitArea::LowBorderLocation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, MidBorderLocation) == 0x000060, "Member 'BP_Character_C_DebugDrawHitArea::MidBorderLocation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, HighBorderLocation) == 0x000078, "Member 'BP_Character_C_DebugDrawHitArea::HighBorderLocation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, ActorUpperLocation) == 0x000090, "Member 'BP_Character_C_DebugDrawHitArea::ActorUpperLocation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, ActorUnderLocation) == 0x0000A8, "Member 'BP_Character_C_DebugDrawHitArea::ActorUnderLocation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, ActorLocation) == 0x0000C0, "Member 'BP_Character_C_DebugDrawHitArea::ActorLocation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CapsuleRadius) == 0x0000D8, "Member 'BP_Character_C_DebugDrawHitArea::CapsuleRadius' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CapsuleHeight) == 0x0000E0, "Member 'BP_Character_C_DebugDrawHitArea::CapsuleHeight' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CapsuleHalfHeight) == 0x0000E8, "Member 'BP_Character_C_DebugDrawHitArea::CapsuleHalfHeight' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_GetReactionSplitMidBorder_ReturnValue) == 0x0000F0, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_GetReactionSplitMidBorder_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0000F4, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_GetReactionSplitHighBorder_ReturnValue) == 0x0000F8, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_GetReactionSplitHighBorder_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x0000FC, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x000100, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000104, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000108, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000120, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000128, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_GetReactionSplitLowBorder_ReturnValue) == 0x000140, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_GetReactionSplitLowBorder_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000148, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_LessEqual_DoubleDouble_ReturnValue_2) == 0x000160, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_LessEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_GetDrawHitAreaTime_ReturnValue) == 0x000164, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_GetDrawHitAreaTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_IsDrawHitArea_ReturnValue) == 0x000168, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_IsDrawHitArea_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_GetReactionSplitHighBorder_ReturnValue_1) == 0x00016C, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_GetReactionSplitHighBorder_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_GetReactionSplitMidBorder_ReturnValue_1) == 0x000170, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_GetReactionSplitMidBorder_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_LessEqual_DoubleDouble_ReturnValue_3) == 0x000174, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_LessEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_LessEqual_DoubleDouble_ReturnValue_4) == 0x000175, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_LessEqual_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_BooleanOR_ReturnValue) == 0x000176, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_BooleanOR_ReturnValue_1) == 0x000177, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_Not_PreBool_ReturnValue) == 0x000178, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_GetReactionSplitLowBorder_ReturnValue_1) == 0x00017C, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_GetReactionSplitLowBorder_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000180, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_Not_PreBool_ReturnValue_1) == 0x000188, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000190, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_Add_VectorVector_ReturnValue) == 0x0001A8, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_Not_PreBool_ReturnValue_2) == 0x0001C0, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0001C8, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0001E0, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_GetReactionSplitMidBorder_ReturnValue_2) == 0x0001F8, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_GetReactionSplitMidBorder_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000200, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_GetReactionSplitHighBorder_ReturnValue_2) == 0x000208, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_GetReactionSplitHighBorder_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000210, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000228, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000230, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x000248, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000260, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_Not_PreBool_ReturnValue_3) == 0x000278, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000280, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast) == 0x000288, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1) == 0x000290, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, K2Node_VariableSet_CapsuleRadius_ImplicitCast) == 0x000298, "Member 'BP_Character_C_DebugDrawHitArea::K2Node_VariableSet_CapsuleRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, K2Node_VariableSet_CapsuleHalfHeight_ImplicitCast) == 0x0002A0, "Member 'BP_Character_C_DebugDrawHitArea::K2Node_VariableSet_CapsuleHalfHeight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_1) == 0x0002A8, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_2) == 0x0002B0, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, K2Node_VariableSet_DrawTime_ImplicitCast) == 0x0002B8, "Member 'BP_Character_C_DebugDrawHitArea::K2Node_VariableSet_DrawTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_3) == 0x0002C0, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_4) == 0x0002C8, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0002D0, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1) == 0x0002D8, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DebugDrawHitArea, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2) == 0x0002E0, "Member 'BP_Character_C_DebugDrawHitArea::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");

// Function BP_Character.BP_Character_C.DecideDamageReactionByActionCategory
// 0x0018 (0x0018 - 0x0000)
struct BP_Character_C_DecideDamageReactionByActionCategory final
{
public:
	struct FKoratDamageReactionDataList           InDamageReactionDataList;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FKoratDamageReactionDataList           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FKoratDamageReactionDataList           CallFunc_DecideDamageReactionByActionCategory_returnValue; // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_DecideDamageReactionByActionCategory) == 0x000004, "Wrong alignment on BP_Character_C_DecideDamageReactionByActionCategory");
static_assert(sizeof(BP_Character_C_DecideDamageReactionByActionCategory) == 0x000018, "Wrong size on BP_Character_C_DecideDamageReactionByActionCategory");
static_assert(offsetof(BP_Character_C_DecideDamageReactionByActionCategory, InDamageReactionDataList) == 0x000000, "Member 'BP_Character_C_DecideDamageReactionByActionCategory::InDamageReactionDataList' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DecideDamageReactionByActionCategory, ReturnValue) == 0x000008, "Member 'BP_Character_C_DecideDamageReactionByActionCategory::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_DecideDamageReactionByActionCategory, CallFunc_DecideDamageReactionByActionCategory_returnValue) == 0x000010, "Member 'BP_Character_C_DecideDamageReactionByActionCategory::CallFunc_DecideDamageReactionByActionCategory_returnValue' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetBlastDefaultDemoAction
// 0x0014 (0x0014 - 0x0000)
struct BP_Character_C_GetBlastDefaultDemoAction final
{
public:
	EKoratBlastSlotType                           InBlastSlot;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratActionDataList                   ReturnValue;                                       // 0x0004(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FKoratActionDataList                   CallFunc__________________ActionDataList;          // 0x000C(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GetBlastDefaultDemoAction) == 0x000004, "Wrong alignment on BP_Character_C_GetBlastDefaultDemoAction");
static_assert(sizeof(BP_Character_C_GetBlastDefaultDemoAction) == 0x000014, "Wrong size on BP_Character_C_GetBlastDefaultDemoAction");
static_assert(offsetof(BP_Character_C_GetBlastDefaultDemoAction, InBlastSlot) == 0x000000, "Member 'BP_Character_C_GetBlastDefaultDemoAction::InBlastSlot' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetBlastDefaultDemoAction, ReturnValue) == 0x000004, "Member 'BP_Character_C_GetBlastDefaultDemoAction::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetBlastDefaultDemoAction, CallFunc__________________ActionDataList) == 0x00000C, "Member 'BP_Character_C_GetBlastDefaultDemoAction::CallFunc__________________ActionDataList' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetBlastSIAction
// 0x0014 (0x0014 - 0x0000)
struct BP_Character_C_GetBlastSIAction final
{
public:
	ESSBlastDemoBranchType                        InBranchType;                                      // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratBlastSlotType                           InBlastSlot;                                       // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratActionDataList                   ReturnValue;                                       // 0x0004(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FKoratActionDataList                   CallFunc___________________ActionDataList;         // 0x000C(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GetBlastSIAction) == 0x000004, "Wrong alignment on BP_Character_C_GetBlastSIAction");
static_assert(sizeof(BP_Character_C_GetBlastSIAction) == 0x000014, "Wrong size on BP_Character_C_GetBlastSIAction");
static_assert(offsetof(BP_Character_C_GetBlastSIAction, InBranchType) == 0x000000, "Member 'BP_Character_C_GetBlastSIAction::InBranchType' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetBlastSIAction, InBlastSlot) == 0x000001, "Member 'BP_Character_C_GetBlastSIAction::InBlastSlot' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetBlastSIAction, ReturnValue) == 0x000004, "Member 'BP_Character_C_GetBlastSIAction::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetBlastSIAction, CallFunc___________________ActionDataList) == 0x00000C, "Member 'BP_Character_C_GetBlastSIAction::CallFunc___________________ActionDataList' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetCharacterMovementMode
// 0x0002 (0x0002 - 0x0000)
struct BP_Character_C_GetCharacterMovementMode final
{
public:
	EMovementMode                                 MovementMode;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 CallFunc_GetMovementMode_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GetCharacterMovementMode) == 0x000001, "Wrong alignment on BP_Character_C_GetCharacterMovementMode");
static_assert(sizeof(BP_Character_C_GetCharacterMovementMode) == 0x000002, "Wrong size on BP_Character_C_GetCharacterMovementMode");
static_assert(offsetof(BP_Character_C_GetCharacterMovementMode, MovementMode) == 0x000000, "Member 'BP_Character_C_GetCharacterMovementMode::MovementMode' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCharacterMovementMode, CallFunc_GetMovementMode_ReturnValue) == 0x000001, "Member 'BP_Character_C_GetCharacterMovementMode::CallFunc_GetMovementMode_ReturnValue' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetCharacterRotation
// 0x0030 (0x0030 - 0x0000)
struct BP_Character_C_GetCharacterRotation final
{
public:
	struct FRotator                               Rotation;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Character_C_GetCharacterRotation) == 0x000008, "Wrong alignment on BP_Character_C_GetCharacterRotation");
static_assert(sizeof(BP_Character_C_GetCharacterRotation) == 0x000030, "Wrong size on BP_Character_C_GetCharacterRotation");
static_assert(offsetof(BP_Character_C_GetCharacterRotation, Rotation) == 0x000000, "Member 'BP_Character_C_GetCharacterRotation::Rotation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCharacterRotation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000018, "Member 'BP_Character_C_GetCharacterRotation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetCorrectionTowardCenterDirection
// 0x0108 (0x0108 - 0x0000)
struct BP_Character_C_GetCorrectionTowardCenterDirection final
{
public:
	struct FVector                                InVector;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InCorrectionTowardCenter;                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratDirection                               CenterDirection;                                   // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Yaw;                                               // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TargetYaw;                                         // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CorrectionTowardCenter;                            // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetYawPitchFromVector_Yaw;                // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetYawPitchFromVector_Pitch;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetConsoleVariableFloatValue_ReturnValue; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetYawPitchFromVector_Yaw_1;              // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetYawPitchFromVector_Pitch_1;            // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Yaw_ImplicitCast;               // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_CorrectionTowardCenter_ImplicitCast; // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_TargetYaw_ImplicitCast;         // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GetCorrectionTowardCenterDirection) == 0x000008, "Wrong alignment on BP_Character_C_GetCorrectionTowardCenterDirection");
static_assert(sizeof(BP_Character_C_GetCorrectionTowardCenterDirection) == 0x000108, "Wrong size on BP_Character_C_GetCorrectionTowardCenterDirection");
static_assert(offsetof(BP_Character_C_GetCorrectionTowardCenterDirection, InVector) == 0x000000, "Member 'BP_Character_C_GetCorrectionTowardCenterDirection::InVector' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCorrectionTowardCenterDirection, InCorrectionTowardCenter) == 0x000018, "Member 'BP_Character_C_GetCorrectionTowardCenterDirection::InCorrectionTowardCenter' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCorrectionTowardCenterDirection, CenterDirection) == 0x000020, "Member 'BP_Character_C_GetCorrectionTowardCenterDirection::CenterDirection' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCorrectionTowardCenterDirection, Yaw) == 0x000028, "Member 'BP_Character_C_GetCorrectionTowardCenterDirection::Yaw' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCorrectionTowardCenterDirection, TargetYaw) == 0x000030, "Member 'BP_Character_C_GetCorrectionTowardCenterDirection::TargetYaw' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCorrectionTowardCenterDirection, CorrectionTowardCenter) == 0x000038, "Member 'BP_Character_C_GetCorrectionTowardCenterDirection::CorrectionTowardCenter' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCorrectionTowardCenterDirection, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_Character_C_GetCorrectionTowardCenterDirection::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCorrectionTowardCenterDirection, CallFunc_GetYawPitchFromVector_Yaw) == 0x000044, "Member 'BP_Character_C_GetCorrectionTowardCenterDirection::CallFunc_GetYawPitchFromVector_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCorrectionTowardCenterDirection, CallFunc_GetYawPitchFromVector_Pitch) == 0x000048, "Member 'BP_Character_C_GetCorrectionTowardCenterDirection::CallFunc_GetYawPitchFromVector_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCorrectionTowardCenterDirection, CallFunc_GetConsoleVariableFloatValue_ReturnValue) == 0x00004C, "Member 'BP_Character_C_GetCorrectionTowardCenterDirection::CallFunc_GetConsoleVariableFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCorrectionTowardCenterDirection, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'BP_Character_C_GetCorrectionTowardCenterDirection::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCorrectionTowardCenterDirection, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000068, "Member 'BP_Character_C_GetCorrectionTowardCenterDirection::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCorrectionTowardCenterDirection, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000070, "Member 'BP_Character_C_GetCorrectionTowardCenterDirection::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCorrectionTowardCenterDirection, CallFunc_Abs_ReturnValue) == 0x000088, "Member 'BP_Character_C_GetCorrectionTowardCenterDirection::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCorrectionTowardCenterDirection, CallFunc_Cross_VectorVector_ReturnValue) == 0x000090, "Member 'BP_Character_C_GetCorrectionTowardCenterDirection::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCorrectionTowardCenterDirection, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'BP_Character_C_GetCorrectionTowardCenterDirection::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCorrectionTowardCenterDirection, CallFunc_BreakVector_X) == 0x0000B0, "Member 'BP_Character_C_GetCorrectionTowardCenterDirection::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCorrectionTowardCenterDirection, CallFunc_BreakVector_Y) == 0x0000B8, "Member 'BP_Character_C_GetCorrectionTowardCenterDirection::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCorrectionTowardCenterDirection, CallFunc_BreakVector_Z) == 0x0000C0, "Member 'BP_Character_C_GetCorrectionTowardCenterDirection::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCorrectionTowardCenterDirection, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'BP_Character_C_GetCorrectionTowardCenterDirection::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCorrectionTowardCenterDirection, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0000D0, "Member 'BP_Character_C_GetCorrectionTowardCenterDirection::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCorrectionTowardCenterDirection, CallFunc_GetYawPitchFromVector_Yaw_1) == 0x0000E8, "Member 'BP_Character_C_GetCorrectionTowardCenterDirection::CallFunc_GetYawPitchFromVector_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCorrectionTowardCenterDirection, CallFunc_GetYawPitchFromVector_Pitch_1) == 0x0000EC, "Member 'BP_Character_C_GetCorrectionTowardCenterDirection::CallFunc_GetYawPitchFromVector_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCorrectionTowardCenterDirection, K2Node_VariableSet_Yaw_ImplicitCast) == 0x0000F0, "Member 'BP_Character_C_GetCorrectionTowardCenterDirection::K2Node_VariableSet_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCorrectionTowardCenterDirection, K2Node_VariableSet_CorrectionTowardCenter_ImplicitCast) == 0x0000F8, "Member 'BP_Character_C_GetCorrectionTowardCenterDirection::K2Node_VariableSet_CorrectionTowardCenter_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCorrectionTowardCenterDirection, K2Node_VariableSet_TargetYaw_ImplicitCast) == 0x000100, "Member 'BP_Character_C_GetCorrectionTowardCenterDirection::K2Node_VariableSet_TargetYaw_ImplicitCast' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetCurrentActionElapsedTime
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_C_GetCurrentActionElapsedTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GetCurrentActionElapsedTime) == 0x000004, "Wrong alignment on BP_Character_C_GetCurrentActionElapsedTime");
static_assert(sizeof(BP_Character_C_GetCurrentActionElapsedTime) == 0x000008, "Wrong size on BP_Character_C_GetCurrentActionElapsedTime");
static_assert(offsetof(BP_Character_C_GetCurrentActionElapsedTime, ReturnValue) == 0x000000, "Member 'BP_Character_C_GetCurrentActionElapsedTime::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetCurrentActionElapsedTime, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000004, "Member 'BP_Character_C_GetCurrentActionElapsedTime::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetDebugDrawHitAreaTime
// 0x0040 (0x0040 - 0x0000)
struct BP_Character_C_GetDebugDrawHitAreaTime final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           TargetCharacter;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDrawHitAreaTime_ReturnValue;           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetTargetCharacter_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDrawHitArea_ReturnValue;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDrawHitAreaTime_ReturnValue_1;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDrawHitArea_ReturnValue_1;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_ReturnValue_ImplicitCast_1;  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GetDebugDrawHitAreaTime) == 0x000008, "Wrong alignment on BP_Character_C_GetDebugDrawHitAreaTime");
static_assert(sizeof(BP_Character_C_GetDebugDrawHitAreaTime) == 0x000040, "Wrong size on BP_Character_C_GetDebugDrawHitAreaTime");
static_assert(offsetof(BP_Character_C_GetDebugDrawHitAreaTime, ReturnValue) == 0x000000, "Member 'BP_Character_C_GetDebugDrawHitAreaTime::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetDebugDrawHitAreaTime, TargetCharacter) == 0x000008, "Member 'BP_Character_C_GetDebugDrawHitAreaTime::TargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetDebugDrawHitAreaTime, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_Character_C_GetDebugDrawHitAreaTime::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetDebugDrawHitAreaTime, CallFunc_GetDrawHitAreaTime_ReturnValue) == 0x000014, "Member 'BP_Character_C_GetDebugDrawHitAreaTime::CallFunc_GetDrawHitAreaTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetDebugDrawHitAreaTime, CallFunc_GetTargetCharacter_ReturnValue) == 0x000018, "Member 'BP_Character_C_GetDebugDrawHitAreaTime::CallFunc_GetTargetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetDebugDrawHitAreaTime, CallFunc_IsDrawHitArea_ReturnValue) == 0x000020, "Member 'BP_Character_C_GetDebugDrawHitAreaTime::CallFunc_IsDrawHitArea_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetDebugDrawHitAreaTime, CallFunc_GetDrawHitAreaTime_ReturnValue_1) == 0x000024, "Member 'BP_Character_C_GetDebugDrawHitAreaTime::CallFunc_GetDrawHitAreaTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetDebugDrawHitAreaTime, CallFunc_IsDrawHitArea_ReturnValue_1) == 0x000028, "Member 'BP_Character_C_GetDebugDrawHitAreaTime::CallFunc_IsDrawHitArea_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetDebugDrawHitAreaTime, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000030, "Member 'BP_Character_C_GetDebugDrawHitAreaTime::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetDebugDrawHitAreaTime, K2Node_FunctionResult_ReturnValue_ImplicitCast_1) == 0x000038, "Member 'BP_Character_C_GetDebugDrawHitAreaTime::K2Node_FunctionResult_ReturnValue_ImplicitCast_1' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetFindFloor
// 0x0208 (0x0208 - 0x0000)
struct BP_Character_C_GetFindFloor final
{
public:
	struct FFindFloorResult                       FloorResult;                                       // 0x0000(0x00F8)(Parm, OutParm, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFindFloorResult                       CallFunc_K2_FindFloor_FloorResult;                 // 0x0110(0x00F8)(NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Character_C_GetFindFloor) == 0x000008, "Wrong alignment on BP_Character_C_GetFindFloor");
static_assert(sizeof(BP_Character_C_GetFindFloor) == 0x000208, "Wrong size on BP_Character_C_GetFindFloor");
static_assert(offsetof(BP_Character_C_GetFindFloor, FloorResult) == 0x000000, "Member 'BP_Character_C_GetFindFloor::FloorResult' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetFindFloor, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000F8, "Member 'BP_Character_C_GetFindFloor::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetFindFloor, CallFunc_K2_FindFloor_FloorResult) == 0x000110, "Member 'BP_Character_C_GetFindFloor::CallFunc_K2_FindFloor_FloorResult' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetGiantCharaTargetLocations
// 0x0210 (0x0210 - 0x0000)
struct BP_Character_C_GetGiantCharaTargetLocations final
{
public:
	TArray<struct FVector>                        ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	TArray<struct FVector>                        TargetLocations;                                   // 0x0010(0x0010)(Edit, BlueprintVisible)
	class ASSCharacter*                           TargetCharacter;                                   // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0xC];                                       // 0x0054(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransformSyncSafe_OutTransform;  // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSocketTransformSyncSafe_ReturnValue;   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_138[0x8];                                      // 0x0138(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransformSyncSafe_OutTransform_1; // 0x0140(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSocketTransformSyncSafe_ReturnValue_1; // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetTargetCharacter_ReturnValue;           // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GetGiantCharaTargetLocations) == 0x000010, "Wrong alignment on BP_Character_C_GetGiantCharaTargetLocations");
static_assert(sizeof(BP_Character_C_GetGiantCharaTargetLocations) == 0x000210, "Wrong size on BP_Character_C_GetGiantCharaTargetLocations");
static_assert(offsetof(BP_Character_C_GetGiantCharaTargetLocations, ReturnValue) == 0x000000, "Member 'BP_Character_C_GetGiantCharaTargetLocations::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGiantCharaTargetLocations, TargetLocations) == 0x000010, "Member 'BP_Character_C_GetGiantCharaTargetLocations::TargetLocations' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGiantCharaTargetLocations, TargetCharacter) == 0x000020, "Member 'BP_Character_C_GetGiantCharaTargetLocations::TargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGiantCharaTargetLocations, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_Character_C_GetGiantCharaTargetLocations::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGiantCharaTargetLocations, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_Character_C_GetGiantCharaTargetLocations::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGiantCharaTargetLocations, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_Character_C_GetGiantCharaTargetLocations::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGiantCharaTargetLocations, K2Node_MakeArray_Array) == 0x000038, "Member 'BP_Character_C_GetGiantCharaTargetLocations::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGiantCharaTargetLocations, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_Character_C_GetGiantCharaTargetLocations::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGiantCharaTargetLocations, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_Character_C_GetGiantCharaTargetLocations::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGiantCharaTargetLocations, CallFunc_GetSocketTransformSyncSafe_OutTransform) == 0x000060, "Member 'BP_Character_C_GetGiantCharaTargetLocations::CallFunc_GetSocketTransformSyncSafe_OutTransform' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGiantCharaTargetLocations, CallFunc_GetSocketTransformSyncSafe_ReturnValue) == 0x0000C0, "Member 'BP_Character_C_GetGiantCharaTargetLocations::CallFunc_GetSocketTransformSyncSafe_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGiantCharaTargetLocations, CallFunc_Less_IntInt_ReturnValue) == 0x0000C1, "Member 'BP_Character_C_GetGiantCharaTargetLocations::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGiantCharaTargetLocations, CallFunc_BreakTransform_Location) == 0x0000C8, "Member 'BP_Character_C_GetGiantCharaTargetLocations::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGiantCharaTargetLocations, CallFunc_BreakTransform_Rotation) == 0x0000E0, "Member 'BP_Character_C_GetGiantCharaTargetLocations::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGiantCharaTargetLocations, CallFunc_BreakTransform_Scale) == 0x0000F8, "Member 'BP_Character_C_GetGiantCharaTargetLocations::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGiantCharaTargetLocations, CallFunc_Array_Add_ReturnValue) == 0x000110, "Member 'BP_Character_C_GetGiantCharaTargetLocations::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGiantCharaTargetLocations, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000118, "Member 'BP_Character_C_GetGiantCharaTargetLocations::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGiantCharaTargetLocations, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000120, "Member 'BP_Character_C_GetGiantCharaTargetLocations::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGiantCharaTargetLocations, CallFunc_GetSocketTransformSyncSafe_OutTransform_1) == 0x000140, "Member 'BP_Character_C_GetGiantCharaTargetLocations::CallFunc_GetSocketTransformSyncSafe_OutTransform_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGiantCharaTargetLocations, CallFunc_GetSocketTransformSyncSafe_ReturnValue_1) == 0x0001A0, "Member 'BP_Character_C_GetGiantCharaTargetLocations::CallFunc_GetSocketTransformSyncSafe_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGiantCharaTargetLocations, CallFunc_BreakTransform_Location_1) == 0x0001A8, "Member 'BP_Character_C_GetGiantCharaTargetLocations::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGiantCharaTargetLocations, CallFunc_BreakTransform_Rotation_1) == 0x0001C0, "Member 'BP_Character_C_GetGiantCharaTargetLocations::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGiantCharaTargetLocations, CallFunc_BreakTransform_Scale_1) == 0x0001D8, "Member 'BP_Character_C_GetGiantCharaTargetLocations::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGiantCharaTargetLocations, CallFunc_Array_Add_ReturnValue_1) == 0x0001F0, "Member 'BP_Character_C_GetGiantCharaTargetLocations::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGiantCharaTargetLocations, CallFunc_GetTargetCharacter_ReturnValue) == 0x0001F8, "Member 'BP_Character_C_GetGiantCharaTargetLocations::CallFunc_GetTargetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGiantCharaTargetLocations, CallFunc_Vector_Distance_ReturnValue) == 0x000200, "Member 'BP_Character_C_GetGiantCharaTargetLocations::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGiantCharaTargetLocations, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000208, "Member 'BP_Character_C_GetGiantCharaTargetLocations::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetGiantCharaTargetLocations, CallFunc_IsValid_ReturnValue) == 0x000209, "Member 'BP_Character_C_GetGiantCharaTargetLocations::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetHomingLocationPawn
// 0x0028 (0x0028 - 0x0000)
struct BP_Character_C_GetHomingLocationPawn final
{
public:
	class APawn*                                  ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetTargetPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLockOnCharacter_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GetHomingLocationPawn) == 0x000008, "Wrong alignment on BP_Character_C_GetHomingLocationPawn");
static_assert(sizeof(BP_Character_C_GetHomingLocationPawn) == 0x000028, "Wrong size on BP_Character_C_GetHomingLocationPawn");
static_assert(offsetof(BP_Character_C_GetHomingLocationPawn, ReturnValue) == 0x000000, "Member 'BP_Character_C_GetHomingLocationPawn::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetHomingLocationPawn, CallFunc_GetTargetPawn_ReturnValue) == 0x000008, "Member 'BP_Character_C_GetHomingLocationPawn::CallFunc_GetTargetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetHomingLocationPawn, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_Character_C_GetHomingLocationPawn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetHomingLocationPawn, K2Node_DynamicCast_AsPawn) == 0x000018, "Member 'BP_Character_C_GetHomingLocationPawn::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetHomingLocationPawn, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_Character_C_GetHomingLocationPawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetHomingLocationPawn, CallFunc_IsLockOnCharacter_ReturnValue) == 0x000021, "Member 'BP_Character_C_GetHomingLocationPawn::CallFunc_IsLockOnCharacter_ReturnValue' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetKawaiiPhysicsComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_C_GetKawaiiPhysicsComponent final
{
public:
	class UKoratKawaiiPhysicsComponent*           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GetKawaiiPhysicsComponent) == 0x000008, "Wrong alignment on BP_Character_C_GetKawaiiPhysicsComponent");
static_assert(sizeof(BP_Character_C_GetKawaiiPhysicsComponent) == 0x000008, "Wrong size on BP_Character_C_GetKawaiiPhysicsComponent");
static_assert(offsetof(BP_Character_C_GetKawaiiPhysicsComponent, ReturnValue) == 0x000000, "Member 'BP_Character_C_GetKawaiiPhysicsComponent::ReturnValue' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetRequestTransitAction
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_C_GetRequestTransitAction final
{
public:
	struct FKoratActionDataList                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GetRequestTransitAction) == 0x000004, "Wrong alignment on BP_Character_C_GetRequestTransitAction");
static_assert(sizeof(BP_Character_C_GetRequestTransitAction) == 0x000008, "Wrong size on BP_Character_C_GetRequestTransitAction");
static_assert(offsetof(BP_Character_C_GetRequestTransitAction, ReturnValue) == 0x000000, "Member 'BP_Character_C_GetRequestTransitAction::ReturnValue' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetRunningActionList
// 0x0088 (0x0088 - 0x0000)
struct BP_Character_C_GetRunningActionList final
{
public:
	TArray<struct FKoratActionDataList>           OutActionList;                                     // 0x0000(0x0010)(Parm, OutParm)
	EKoratCharacterLocomotionDetailStatus         OutLocomotionDetailStatus;                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         LocomotionDetailStatus;                            // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ExecNative_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterLocomotion_C> K2Node_DynamicCast_AsBPI_Character_Locomotion;     // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         CallFunc_GetLocomotionDetailStatus_OutLocomotionDetailStatus; // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FKoratReplaceAnimationDataList> CallFunc_GetPlayingAnimDataListArray_ReturnValue;  // 0x0038(0x0010)(ConstParm, ReferenceParm)
	struct FKoratReplaceAnimationDataList         CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratActionDataList                   K2Node_MakeStruct_KoratActionDataList;             // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratActionDataList                   CallFunc_GetRunningAction_OutRunningAction;        // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetRunningAction_OutRunningSection;       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_1;          // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GetRunningActionList) == 0x000008, "Wrong alignment on BP_Character_C_GetRunningActionList");
static_assert(sizeof(BP_Character_C_GetRunningActionList) == 0x000088, "Wrong size on BP_Character_C_GetRunningActionList");
static_assert(offsetof(BP_Character_C_GetRunningActionList, OutActionList) == 0x000000, "Member 'BP_Character_C_GetRunningActionList::OutActionList' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetRunningActionList, OutLocomotionDetailStatus) == 0x000010, "Member 'BP_Character_C_GetRunningActionList::OutLocomotionDetailStatus' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetRunningActionList, LocomotionDetailStatus) == 0x000011, "Member 'BP_Character_C_GetRunningActionList::LocomotionDetailStatus' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetRunningActionList, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_Character_C_GetRunningActionList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetRunningActionList, CallFunc_ExecNative_ReturnValue) == 0x000018, "Member 'BP_Character_C_GetRunningActionList::CallFunc_ExecNative_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetRunningActionList, K2Node_DynamicCast_AsBPI_Character_Locomotion) == 0x000020, "Member 'BP_Character_C_GetRunningActionList::K2Node_DynamicCast_AsBPI_Character_Locomotion' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetRunningActionList, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_Character_C_GetRunningActionList::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetRunningActionList, CallFunc_GetLocomotionDetailStatus_OutLocomotionDetailStatus) == 0x000031, "Member 'BP_Character_C_GetRunningActionList::CallFunc_GetLocomotionDetailStatus_OutLocomotionDetailStatus' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetRunningActionList, CallFunc_GetPlayingAnimDataListArray_ReturnValue) == 0x000038, "Member 'BP_Character_C_GetRunningActionList::CallFunc_GetPlayingAnimDataListArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetRunningActionList, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_Character_C_GetRunningActionList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetRunningActionList, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_Character_C_GetRunningActionList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetRunningActionList, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BP_Character_C_GetRunningActionList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetRunningActionList, K2Node_MakeStruct_KoratActionDataList) == 0x000058, "Member 'BP_Character_C_GetRunningActionList::K2Node_MakeStruct_KoratActionDataList' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetRunningActionList, CallFunc_Array_Add_ReturnValue) == 0x000060, "Member 'BP_Character_C_GetRunningActionList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetRunningActionList, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'BP_Character_C_GetRunningActionList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetRunningActionList, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_Character_C_GetRunningActionList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetRunningActionList, CallFunc_NotEqual_NameName_ReturnValue) == 0x00006C, "Member 'BP_Character_C_GetRunningActionList::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetRunningActionList, CallFunc_GetRunningAction_OutRunningAction) == 0x000070, "Member 'BP_Character_C_GetRunningActionList::CallFunc_GetRunningAction_OutRunningAction' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetRunningActionList, CallFunc_GetRunningAction_OutRunningSection) == 0x000078, "Member 'BP_Character_C_GetRunningActionList::CallFunc_GetRunningAction_OutRunningSection' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetRunningActionList, CallFunc_Array_Add_ReturnValue_1) == 0x000080, "Member 'BP_Character_C_GetRunningActionList::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetRunningActionList, CallFunc_NotEqual_NameName_ReturnValue_1) == 0x000084, "Member 'BP_Character_C_GetRunningActionList::CallFunc_NotEqual_NameName_ReturnValue_1' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetUseCharacterRotationPitch
// 0x0001 (0x0001 - 0x0000)
struct BP_Character_C_GetUseCharacterRotationPitch final
{
public:
	bool                                          UsePitch;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GetUseCharacterRotationPitch) == 0x000001, "Wrong alignment on BP_Character_C_GetUseCharacterRotationPitch");
static_assert(sizeof(BP_Character_C_GetUseCharacterRotationPitch) == 0x000001, "Wrong size on BP_Character_C_GetUseCharacterRotationPitch");
static_assert(offsetof(BP_Character_C_GetUseCharacterRotationPitch, UsePitch) == 0x000000, "Member 'BP_Character_C_GetUseCharacterRotationPitch::UsePitch' has a wrong offset!");

// Function BP_Character.BP_Character_C.GetViewSwitchFaceMeshVisibilityValue
// 0x0030 (0x0030 - 0x0000)
struct BP_Character_C_GetViewSwitchFaceMeshVisibilityValue final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISSCharacterInterface> K2Node_DynamicCast_AsSSCharacter_Interface;        // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSCharacterSwitchVisibilityAnimInstance* CallFunc_GetViewSwitchAnimInstance_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetFaceMeshIndex_ReturnValue;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_GetViewSwitchFaceMeshVisibilityValue) == 0x000008, "Wrong alignment on BP_Character_C_GetViewSwitchFaceMeshVisibilityValue");
static_assert(sizeof(BP_Character_C_GetViewSwitchFaceMeshVisibilityValue) == 0x000030, "Wrong size on BP_Character_C_GetViewSwitchFaceMeshVisibilityValue");
static_assert(offsetof(BP_Character_C_GetViewSwitchFaceMeshVisibilityValue, ReturnValue) == 0x000000, "Member 'BP_Character_C_GetViewSwitchFaceMeshVisibilityValue::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetViewSwitchFaceMeshVisibilityValue, K2Node_DynamicCast_AsSSCharacter_Interface) == 0x000008, "Member 'BP_Character_C_GetViewSwitchFaceMeshVisibilityValue::K2Node_DynamicCast_AsSSCharacter_Interface' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetViewSwitchFaceMeshVisibilityValue, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Character_C_GetViewSwitchFaceMeshVisibilityValue::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetViewSwitchFaceMeshVisibilityValue, CallFunc_GetViewSwitchAnimInstance_ReturnValue) == 0x000020, "Member 'BP_Character_C_GetViewSwitchFaceMeshVisibilityValue::CallFunc_GetViewSwitchAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetViewSwitchFaceMeshVisibilityValue, CallFunc_GetFaceMeshIndex_ReturnValue) == 0x000028, "Member 'BP_Character_C_GetViewSwitchFaceMeshVisibilityValue::CallFunc_GetFaceMeshIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_GetViewSwitchFaceMeshVisibilityValue, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_Character_C_GetViewSwitchFaceMeshVisibilityValue::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Character.BP_Character_C.IsActionStandby
// 0x0002 (0x0002 - 0x0000)
struct BP_Character_C_IsActionStandby final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActionCanStandby_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_IsActionStandby) == 0x000001, "Wrong alignment on BP_Character_C_IsActionStandby");
static_assert(sizeof(BP_Character_C_IsActionStandby) == 0x000002, "Wrong size on BP_Character_C_IsActionStandby");
static_assert(offsetof(BP_Character_C_IsActionStandby, ReturnValue) == 0x000000, "Member 'BP_Character_C_IsActionStandby::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsActionStandby, CallFunc_IsActionCanStandby_ReturnValue) == 0x000001, "Member 'BP_Character_C_IsActionStandby::CallFunc_IsActionCanStandby_ReturnValue' has a wrong offset!");

// Function BP_Character.BP_Character_C.IsDebugDrawHitArea
// 0x0020 (0x0020 - 0x0000)
struct BP_Character_C_IsDebugDrawHitArea final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetTargetCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetTargetCharacter_ReturnValue_1;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDrawHitArea_ReturnValue;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDrawHitArea_ReturnValue_1;              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_IsDebugDrawHitArea) == 0x000008, "Wrong alignment on BP_Character_C_IsDebugDrawHitArea");
static_assert(sizeof(BP_Character_C_IsDebugDrawHitArea) == 0x000020, "Wrong size on BP_Character_C_IsDebugDrawHitArea");
static_assert(offsetof(BP_Character_C_IsDebugDrawHitArea, ReturnValue) == 0x000000, "Member 'BP_Character_C_IsDebugDrawHitArea::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsDebugDrawHitArea, CallFunc_GetTargetCharacter_ReturnValue) == 0x000008, "Member 'BP_Character_C_IsDebugDrawHitArea::CallFunc_GetTargetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsDebugDrawHitArea, CallFunc_GetTargetCharacter_ReturnValue_1) == 0x000010, "Member 'BP_Character_C_IsDebugDrawHitArea::CallFunc_GetTargetCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsDebugDrawHitArea, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_Character_C_IsDebugDrawHitArea::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsDebugDrawHitArea, CallFunc_IsDrawHitArea_ReturnValue) == 0x000019, "Member 'BP_Character_C_IsDebugDrawHitArea::CallFunc_IsDrawHitArea_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsDebugDrawHitArea, CallFunc_IsDrawHitArea_ReturnValue_1) == 0x00001A, "Member 'BP_Character_C_IsDebugDrawHitArea::CallFunc_IsDrawHitArea_ReturnValue_1' has a wrong offset!");

// Function BP_Character.BP_Character_C.IsDisableLipSync
// 0x0001 (0x0001 - 0x0000)
struct BP_Character_C_IsDisableLipSync final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_IsDisableLipSync) == 0x000001, "Wrong alignment on BP_Character_C_IsDisableLipSync");
static_assert(sizeof(BP_Character_C_IsDisableLipSync) == 0x000001, "Wrong size on BP_Character_C_IsDisableLipSync");
static_assert(offsetof(BP_Character_C_IsDisableLipSync, ReturnValue) == 0x000000, "Member 'BP_Character_C_IsDisableLipSync::ReturnValue' has a wrong offset!");

// Function BP_Character.BP_Character_C.IsGuardSuccessByParameter
// 0x00E8 (0x00E8 - 0x0000)
struct BP_Character_C_IsGuardSuccessByParameter final
{
public:
	struct FKoratCharacterCombativesParameter     InParameter;                                       // 0x0000(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          OutIsGuardBreak;                                   // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OutIsAttackBreak;                                  // 0x00E1(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OutIsImpossibleGuard;                              // 0x00E2(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x00E3(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGuardSuccessByParameter_OutIsGuardBreak; // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGuardSuccessByParameter_OutIsAttackBreak; // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGuardSuccessByParameter_OutIsImpossibleGuard; // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGuardSuccessByParameter_Result;         // 0x00E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_IsGuardSuccessByParameter) == 0x000008, "Wrong alignment on BP_Character_C_IsGuardSuccessByParameter");
static_assert(sizeof(BP_Character_C_IsGuardSuccessByParameter) == 0x0000E8, "Wrong size on BP_Character_C_IsGuardSuccessByParameter");
static_assert(offsetof(BP_Character_C_IsGuardSuccessByParameter, InParameter) == 0x000000, "Member 'BP_Character_C_IsGuardSuccessByParameter::InParameter' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsGuardSuccessByParameter, OutIsGuardBreak) == 0x0000E0, "Member 'BP_Character_C_IsGuardSuccessByParameter::OutIsGuardBreak' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsGuardSuccessByParameter, OutIsAttackBreak) == 0x0000E1, "Member 'BP_Character_C_IsGuardSuccessByParameter::OutIsAttackBreak' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsGuardSuccessByParameter, OutIsImpossibleGuard) == 0x0000E2, "Member 'BP_Character_C_IsGuardSuccessByParameter::OutIsImpossibleGuard' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsGuardSuccessByParameter, ReturnValue) == 0x0000E3, "Member 'BP_Character_C_IsGuardSuccessByParameter::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsGuardSuccessByParameter, CallFunc_IsGuardSuccessByParameter_OutIsGuardBreak) == 0x0000E4, "Member 'BP_Character_C_IsGuardSuccessByParameter::CallFunc_IsGuardSuccessByParameter_OutIsGuardBreak' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsGuardSuccessByParameter, CallFunc_IsGuardSuccessByParameter_OutIsAttackBreak) == 0x0000E5, "Member 'BP_Character_C_IsGuardSuccessByParameter::CallFunc_IsGuardSuccessByParameter_OutIsAttackBreak' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsGuardSuccessByParameter, CallFunc_IsGuardSuccessByParameter_OutIsImpossibleGuard) == 0x0000E6, "Member 'BP_Character_C_IsGuardSuccessByParameter::CallFunc_IsGuardSuccessByParameter_OutIsImpossibleGuard' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsGuardSuccessByParameter, CallFunc_IsGuardSuccessByParameter_Result) == 0x0000E7, "Member 'BP_Character_C_IsGuardSuccessByParameter::CallFunc_IsGuardSuccessByParameter_Result' has a wrong offset!");

// Function BP_Character.BP_Character_C.IsUseHitStop
// 0x0002 (0x0002 - 0x0000)
struct BP_Character_C_IsUseHitStop final
{
public:
	bool                                          IsUseHitStop_0;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_IsUseHitStop) == 0x000001, "Wrong alignment on BP_Character_C_IsUseHitStop");
static_assert(sizeof(BP_Character_C_IsUseHitStop) == 0x000002, "Wrong size on BP_Character_C_IsUseHitStop");
static_assert(offsetof(BP_Character_C_IsUseHitStop, IsUseHitStop_0) == 0x000000, "Member 'BP_Character_C_IsUseHitStop::IsUseHitStop_0' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsUseHitStop, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000001, "Member 'BP_Character_C_IsUseHitStop::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_Character.BP_Character_C.IsVanishing
// 0x0001 (0x0001 - 0x0000)
struct BP_Character_C_IsVanishing final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_IsVanishing) == 0x000001, "Wrong alignment on BP_Character_C_IsVanishing");
static_assert(sizeof(BP_Character_C_IsVanishing) == 0x000001, "Wrong size on BP_Character_C_IsVanishing");
static_assert(offsetof(BP_Character_C_IsVanishing, ReturnValue) == 0x000000, "Member 'BP_Character_C_IsVanishing::ReturnValue' has a wrong offset!");

// Function BP_Character.BP_Character_C.IsWaitRequestTransitAction
// 0x0002 (0x0002 - 0x0000)
struct BP_Character_C_IsWaitRequestTransitAction final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_IsWaitRequestTransitAction) == 0x000001, "Wrong alignment on BP_Character_C_IsWaitRequestTransitAction");
static_assert(sizeof(BP_Character_C_IsWaitRequestTransitAction) == 0x000002, "Wrong size on BP_Character_C_IsWaitRequestTransitAction");
static_assert(offsetof(BP_Character_C_IsWaitRequestTransitAction, ReturnValue) == 0x000000, "Member 'BP_Character_C_IsWaitRequestTransitAction::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_IsWaitRequestTransitAction, CallFunc_NotEqual_NameName_ReturnValue) == 0x000001, "Member 'BP_Character_C_IsWaitRequestTransitAction::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_Character.BP_Character_C.SetChartsVariable
// 0x0030 (0x0030 - 0x0000)
struct BP_Character_C_SetChartsVariable final
{
public:
	float                                         InValueA;                                          // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InValueB;                                          // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InLogVolume;                                       // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AppendentDrawComponent_C*           CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Variable_ImplicitCast;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Variable2_ImplicitCast;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_LogVolume_ImplicitCast;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_C_SetChartsVariable) == 0x000008, "Wrong alignment on BP_Character_C_SetChartsVariable");
static_assert(sizeof(BP_Character_C_SetChartsVariable) == 0x000030, "Wrong size on BP_Character_C_SetChartsVariable");
static_assert(offsetof(BP_Character_C_SetChartsVariable, InValueA) == 0x000000, "Member 'BP_Character_C_SetChartsVariable::InValueA' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetChartsVariable, InValueB) == 0x000004, "Member 'BP_Character_C_SetChartsVariable::InValueB' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetChartsVariable, InLogVolume) == 0x000008, "Member 'BP_Character_C_SetChartsVariable::InLogVolume' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetChartsVariable, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_Character_C_SetChartsVariable::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetChartsVariable, K2Node_VariableSet_Variable_ImplicitCast) == 0x000018, "Member 'BP_Character_C_SetChartsVariable::K2Node_VariableSet_Variable_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetChartsVariable, K2Node_VariableSet_Variable2_ImplicitCast) == 0x000020, "Member 'BP_Character_C_SetChartsVariable::K2Node_VariableSet_Variable2_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Character_C_SetChartsVariable, K2Node_VariableSet_LogVolume_ImplicitCast) == 0x000028, "Member 'BP_Character_C_SetChartsVariable::K2Node_VariableSet_LogVolume_ImplicitCast' has a wrong offset!");

}

