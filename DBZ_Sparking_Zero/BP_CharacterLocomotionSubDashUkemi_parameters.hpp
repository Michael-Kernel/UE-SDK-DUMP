#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterLocomotionSubDashUkemi

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SS_structs.hpp"
#include "ECharacterLocomotionEventType_structs.hpp"
#include "Engine_structs.hpp"
#include "FLocomotionRotationParameter_structs.hpp"


namespace SDK::Params
{

// Function BP_CharacterLocomotionSubDashUkemi.BP_CharacterLocomotionSubDashUkemi_C.Check
// 0x0268 (0x0268 - 0x0000)
struct BP_CharacterLocomotionSubDashUkemi_C_Check final
{
public:
	class UBP_CharacterLocomotionComponent_C*     InLocomotionComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CanStart;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetDashUkemiINParameter_________;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDashUkemiINParameter_________________________; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratBlowReactionDashUkemiMovementParameter CallFunc_GetDashUkemiINParameter________;          // 0x0020(0x0014)(NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetDashUkemiINParameter______;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDashUkemiINParameter__________1;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDashUkemiINParameter__________________________1; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratBlowReactionDashUkemiMovementParameter CallFunc_GetDashUkemiINParameter_________1;        // 0x0050(0x0014)(NoDestructor)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetDashUkemiINParameter_______1;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBlowHitForecastSaveInfo_IsHit;         // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetBlowHitForecastSaveInfo_Location;      // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetBlowHitForecastSaveInfo_HitTime;       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratMapAttributeDataList             CallFunc_GetBlowHitForecastSaveInfo_MapAttribute;  // 0x00A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBlowHitForecastSaveInfo_HitNormal;     // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_GetBlowHitForecastSaveInfo_HitPhysMat;    // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetBlowHitForecastSaveInfo_HitActor;      // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_GetBlowHitForecastSaveInfo_HitComponent;  // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetBlowHitForecastSaveInfo_HitBoneName;   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_GetBlowHitForecastSaveInfo_HitResult;     // 0x00E0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHitFloor_OutIsFloor;                    // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x01CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CD[0x3];                                      // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement;   // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLastUpdateVelocity_ReturnValue;        // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratDashUkemiType                           Temp_byte_Variable;                                // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue;                        // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratDashUkemiType                           Temp_byte_Variable_1;                              // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_202[0x6];                                      // 0x0202(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDashUkemiINParameter__________2;       // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDashUkemiINParameter__________________________2; // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratBlowReactionDashUkemiMovementParameter CallFunc_GetDashUkemiINParameter_________2;        // 0x0220(0x0014)(NoDestructor)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetDashUkemiINParameter_______2;          // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUnconscious_IsUnconscious;              // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckSPCosumable_ReturnValue;             // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0242(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_243[0x5];                                      // 0x0243(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0248(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionSubBlow_C*       CallFunc_GetSubBlow_SubBlow;                       // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratDashUkemiType                           K2Node_Select_Default;                             // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCrashToWall_ChangeCrashToWall;       // 0x0262(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_CanStart;                           // 0x0263(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CheckSPCosumable_InSpCost_ImplicitCast;   // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDashUkemi_C_Check) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDashUkemi_C_Check");
static_assert(sizeof(BP_CharacterLocomotionSubDashUkemi_C_Check) == 0x000268, "Wrong size on BP_CharacterLocomotionSubDashUkemi_C_Check");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, InLocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::InLocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CanStart) == 0x000008, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CanStart' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_GetDashUkemiINParameter_________) == 0x000010, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_GetDashUkemiINParameter_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_GetDashUkemiINParameter_________________________) == 0x000018, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_GetDashUkemiINParameter_________________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_GetDashUkemiINParameter________) == 0x000020, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_GetDashUkemiINParameter________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_GetDashUkemiINParameter______) == 0x000038, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_GetDashUkemiINParameter______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_GetDashUkemiINParameter__________1) == 0x000040, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_GetDashUkemiINParameter__________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_GetDashUkemiINParameter__________________________1) == 0x000048, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_GetDashUkemiINParameter__________________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_GetDashUkemiINParameter_________1) == 0x000050, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_GetDashUkemiINParameter_________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_GetDashUkemiINParameter_______1) == 0x000068, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_GetDashUkemiINParameter_______1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000070, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000078, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_GetBlowHitForecastSaveInfo_IsHit) == 0x000079, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_GetBlowHitForecastSaveInfo_IsHit' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_GetBlowHitForecastSaveInfo_Location) == 0x000080, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_GetBlowHitForecastSaveInfo_Location' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_GetBlowHitForecastSaveInfo_HitTime) == 0x000098, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_GetBlowHitForecastSaveInfo_HitTime' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_GetBlowHitForecastSaveInfo_MapAttribute) == 0x0000A0, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_GetBlowHitForecastSaveInfo_MapAttribute' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_GetBlowHitForecastSaveInfo_HitNormal) == 0x0000A8, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_GetBlowHitForecastSaveInfo_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_GetBlowHitForecastSaveInfo_HitPhysMat) == 0x0000C0, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_GetBlowHitForecastSaveInfo_HitPhysMat' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_GetBlowHitForecastSaveInfo_HitActor) == 0x0000C8, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_GetBlowHitForecastSaveInfo_HitActor' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_GetBlowHitForecastSaveInfo_HitComponent) == 0x0000D0, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_GetBlowHitForecastSaveInfo_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_GetBlowHitForecastSaveInfo_HitBoneName) == 0x0000D8, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_GetBlowHitForecastSaveInfo_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_GetBlowHitForecastSaveInfo_HitResult) == 0x0000E0, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_GetBlowHitForecastSaveInfo_HitResult' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_BooleanAND_ReturnValue) == 0x0001C8, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_IsHitFloor_OutIsFloor) == 0x0001C9, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_IsHitFloor_OutIsFloor' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_BooleanOR_ReturnValue) == 0x0001CA, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0001CB, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x0001CC, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_GetCharacterMovement_CharacterMovement) == 0x0001D0, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_GetCharacterMovement_CharacterMovement' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_GetLastUpdateVelocity_ReturnValue) == 0x0001D8, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_GetLastUpdateVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, Temp_byte_Variable) == 0x0001F0, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_VSize_ReturnValue) == 0x0001F8, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000200, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, Temp_byte_Variable_1) == 0x000201, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_GetSSCharacter_SSCharacter) == 0x000208, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_GetDashUkemiINParameter__________2) == 0x000210, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_GetDashUkemiINParameter__________2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_GetDashUkemiINParameter__________________________2) == 0x000218, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_GetDashUkemiINParameter__________________________2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_GetDashUkemiINParameter_________2) == 0x000220, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_GetDashUkemiINParameter_________2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_GetDashUkemiINParameter_______2) == 0x000238, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_GetDashUkemiINParameter_______2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_IsUnconscious_IsUnconscious) == 0x000240, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_IsUnconscious_IsUnconscious' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_CheckSPCosumable_ReturnValue) == 0x000241, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_CheckSPCosumable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_Not_PreBool_ReturnValue) == 0x000242, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000248, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, Temp_bool_Variable) == 0x000250, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_GetSubBlow_SubBlow) == 0x000258, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_GetSubBlow_SubBlow' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_IsValid_ReturnValue) == 0x000260, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, K2Node_Select_Default) == 0x000261, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_CheckCrashToWall_ChangeCrashToWall) == 0x000262, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_CheckCrashToWall_ChangeCrashToWall' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_Check_CanStart) == 0x000263, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_Check_CanStart' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Check, CallFunc_CheckSPCosumable_InSpCost_ImplicitCast) == 0x000264, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Check::CallFunc_CheckSPCosumable_InSpCost_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubDashUkemi.BP_CharacterLocomotionSubDashUkemi_C.CheckAndStart
// 0x0020 (0x0020 - 0x0000)
struct BP_CharacterLocomotionSubDashUkemi_C_CheckAndStart final
{
public:
	class UBP_CharacterLocomotionComponent_C*     InLocomotionComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          InInSkip;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStarted;                                         // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_CanStart;                           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Start_NewParam;                           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckAndStart_IsStarted;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDashUkemi_C_CheckAndStart) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDashUkemi_C_CheckAndStart");
static_assert(sizeof(BP_CharacterLocomotionSubDashUkemi_C_CheckAndStart) == 0x000020, "Wrong size on BP_CharacterLocomotionSubDashUkemi_C_CheckAndStart");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_CheckAndStart, InLocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubDashUkemi_C_CheckAndStart::InLocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_CheckAndStart, InInSkip) == 0x000008, "Member 'BP_CharacterLocomotionSubDashUkemi_C_CheckAndStart::InInSkip' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_CheckAndStart, IsStarted) == 0x000009, "Member 'BP_CharacterLocomotionSubDashUkemi_C_CheckAndStart::IsStarted' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_CheckAndStart, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000010, "Member 'BP_CharacterLocomotionSubDashUkemi_C_CheckAndStart::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_CheckAndStart, CallFunc_Check_CanStart) == 0x000018, "Member 'BP_CharacterLocomotionSubDashUkemi_C_CheckAndStart::CallFunc_Check_CanStart' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_CheckAndStart, CallFunc_Start_NewParam) == 0x000019, "Member 'BP_CharacterLocomotionSubDashUkemi_C_CheckAndStart::CallFunc_Start_NewParam' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_CheckAndStart, CallFunc_CheckAndStart_IsStarted) == 0x00001A, "Member 'BP_CharacterLocomotionSubDashUkemi_C_CheckAndStart::CallFunc_CheckAndStart_IsStarted' has a wrong offset!");

// Function BP_CharacterLocomotionSubDashUkemi.BP_CharacterLocomotionSubDashUkemi_C.CheckDashUkemiInput
// 0x0050 (0x0050 - 0x0000)
struct BP_CharacterLocomotionSubDashUkemi_C_CheckDashUkemiInput final
{
public:
	bool                                          IsInputRequest;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUnconscious_IsUnconscious;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetDashUkemiINParameter_________;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDashUkemiINParameter_________________________; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratBlowReactionDashUkemiMovementParameter CallFunc_GetDashUkemiINParameter________;          // 0x0018(0x0014)(NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetDashUkemiINParameter______;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDashUkemi_C_CheckDashUkemiInput) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDashUkemi_C_CheckDashUkemiInput");
static_assert(sizeof(BP_CharacterLocomotionSubDashUkemi_C_CheckDashUkemiInput) == 0x000050, "Wrong size on BP_CharacterLocomotionSubDashUkemi_C_CheckDashUkemiInput");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_CheckDashUkemiInput, IsInputRequest) == 0x000000, "Member 'BP_CharacterLocomotionSubDashUkemi_C_CheckDashUkemiInput::IsInputRequest' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_CheckDashUkemiInput, CallFunc_IsUnconscious_IsUnconscious) == 0x000001, "Member 'BP_CharacterLocomotionSubDashUkemi_C_CheckDashUkemiInput::CallFunc_IsUnconscious_IsUnconscious' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_CheckDashUkemiInput, CallFunc_GetDashUkemiINParameter_________) == 0x000008, "Member 'BP_CharacterLocomotionSubDashUkemi_C_CheckDashUkemiInput::CallFunc_GetDashUkemiINParameter_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_CheckDashUkemiInput, CallFunc_GetDashUkemiINParameter_________________________) == 0x000010, "Member 'BP_CharacterLocomotionSubDashUkemi_C_CheckDashUkemiInput::CallFunc_GetDashUkemiINParameter_________________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_CheckDashUkemiInput, CallFunc_GetDashUkemiINParameter________) == 0x000018, "Member 'BP_CharacterLocomotionSubDashUkemi_C_CheckDashUkemiInput::CallFunc_GetDashUkemiINParameter________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_CheckDashUkemiInput, CallFunc_GetDashUkemiINParameter______) == 0x000030, "Member 'BP_CharacterLocomotionSubDashUkemi_C_CheckDashUkemiInput::CallFunc_GetDashUkemiINParameter______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_CheckDashUkemiInput, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'BP_CharacterLocomotionSubDashUkemi_C_CheckDashUkemiInput::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_CheckDashUkemiInput, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000040, "Member 'BP_CharacterLocomotionSubDashUkemi_C_CheckDashUkemiInput::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_CheckDashUkemiInput, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000048, "Member 'BP_CharacterLocomotionSubDashUkemi_C_CheckDashUkemiInput::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_CheckDashUkemiInput, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000049, "Member 'BP_CharacterLocomotionSubDashUkemi_C_CheckDashUkemiInput::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubDashUkemi.BP_CharacterLocomotionSubDashUkemi_C.GetDashUkemiINParameter
// 0x01D0 (0x01D0 - 0x0000)
struct BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiINParameter final
{
public:
	double                                        E_____B_;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        _____________Y____gn__B_;                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratBlowReactionDashUkemiMovementParameter _______;                                           // 0x0010(0x0014)(Parm, OutParm, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        _____;                                             // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratBlowReactionDashUkemiParameter   CallFunc_GetDashUkemiParameter________________;    // 0x0030(0x0188)(NoDestructor)
	double                                        K2Node_FunctionResult__________ImplicitCast;       // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult__________________________ImplicitCast; // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_______ImplicitCast;          // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiINParameter) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiINParameter");
static_assert(sizeof(BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiINParameter) == 0x0001D0, "Wrong size on BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiINParameter");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiINParameter, E_____B_) == 0x000000, "Member 'BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiINParameter::E_____B_' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiINParameter, _____________Y____gn__B_) == 0x000008, "Member 'BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiINParameter::_____________Y____gn__B_' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiINParameter, _______) == 0x000010, "Member 'BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiINParameter::_______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiINParameter, _____) == 0x000028, "Member 'BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiINParameter::_____' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiINParameter, CallFunc_GetDashUkemiParameter________________) == 0x000030, "Member 'BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiINParameter::CallFunc_GetDashUkemiParameter________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiINParameter, K2Node_FunctionResult__________ImplicitCast) == 0x0001B8, "Member 'BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiINParameter::K2Node_FunctionResult__________ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiINParameter, K2Node_FunctionResult__________________________ImplicitCast) == 0x0001C0, "Member 'BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiINParameter::K2Node_FunctionResult__________________________ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiINParameter, K2Node_FunctionResult_______ImplicitCast) == 0x0001C8, "Member 'BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiINParameter::K2Node_FunctionResult_______ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubDashUkemi.BP_CharacterLocomotionSubDashUkemi_C.GetDashUkemiParameter
// 0x0488 (0x0488 - 0x0000)
struct BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiParameter final
{
public:
	struct FKoratBlowReactionDashUkemiParameter   _______________;                                   // 0x0000(0x0188)(Parm, OutParm, NoDestructor)
	class ACharacter*                             CallFunc_GetCharacter_Character;                   // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterBase_C>  K2Node_DynamicCast_AsBPI_Character_Base;           // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratHitBackMovementData              CallFunc_GetHitBackData_HitBackData;               // 0x01A8(0x02E0)()
};
static_assert(alignof(BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiParameter) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiParameter");
static_assert(sizeof(BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiParameter) == 0x000488, "Wrong size on BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiParameter");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiParameter, _______________) == 0x000000, "Member 'BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiParameter::_______________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiParameter, CallFunc_GetCharacter_Character) == 0x000188, "Member 'BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiParameter::CallFunc_GetCharacter_Character' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiParameter, K2Node_DynamicCast_AsBPI_Character_Base) == 0x000190, "Member 'BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiParameter::K2Node_DynamicCast_AsBPI_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiParameter, K2Node_DynamicCast_bSuccess) == 0x0001A0, "Member 'BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiParameter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiParameter, CallFunc_GetHitBackData_HitBackData) == 0x0001A8, "Member 'BP_CharacterLocomotionSubDashUkemi_C_GetDashUkemiParameter::CallFunc_GetHitBackData_HitBackData' has a wrong offset!");

// Function BP_CharacterLocomotionSubDashUkemi.BP_CharacterLocomotionSubDashUkemi_C.GetLocomotionDetailStatus
// 0x0009 (0x0009 - 0x0000)
struct BP_CharacterLocomotionSubDashUkemi_C_GetLocomotionDetailStatus final
{
public:
	EKoratCharacterLocomotionDetailStatus         LocomotionDetailStatus;                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratDashUkemiState                          Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_5;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_6;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDashUkemi_C_GetLocomotionDetailStatus) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubDashUkemi_C_GetLocomotionDetailStatus");
static_assert(sizeof(BP_CharacterLocomotionSubDashUkemi_C_GetLocomotionDetailStatus) == 0x000009, "Wrong size on BP_CharacterLocomotionSubDashUkemi_C_GetLocomotionDetailStatus");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_GetLocomotionDetailStatus, LocomotionDetailStatus) == 0x000000, "Member 'BP_CharacterLocomotionSubDashUkemi_C_GetLocomotionDetailStatus::LocomotionDetailStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_GetLocomotionDetailStatus, Temp_byte_Variable) == 0x000001, "Member 'BP_CharacterLocomotionSubDashUkemi_C_GetLocomotionDetailStatus::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_GetLocomotionDetailStatus, Temp_byte_Variable_1) == 0x000002, "Member 'BP_CharacterLocomotionSubDashUkemi_C_GetLocomotionDetailStatus::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_GetLocomotionDetailStatus, Temp_byte_Variable_2) == 0x000003, "Member 'BP_CharacterLocomotionSubDashUkemi_C_GetLocomotionDetailStatus::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_GetLocomotionDetailStatus, Temp_byte_Variable_3) == 0x000004, "Member 'BP_CharacterLocomotionSubDashUkemi_C_GetLocomotionDetailStatus::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_GetLocomotionDetailStatus, Temp_byte_Variable_4) == 0x000005, "Member 'BP_CharacterLocomotionSubDashUkemi_C_GetLocomotionDetailStatus::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_GetLocomotionDetailStatus, Temp_byte_Variable_5) == 0x000006, "Member 'BP_CharacterLocomotionSubDashUkemi_C_GetLocomotionDetailStatus::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_GetLocomotionDetailStatus, Temp_byte_Variable_6) == 0x000007, "Member 'BP_CharacterLocomotionSubDashUkemi_C_GetLocomotionDetailStatus::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_GetLocomotionDetailStatus, K2Node_Select_Default) == 0x000008, "Member 'BP_CharacterLocomotionSubDashUkemi_C_GetLocomotionDetailStatus::K2Node_Select_Default' has a wrong offset!");

// Function BP_CharacterLocomotionSubDashUkemi.BP_CharacterLocomotionSubDashUkemi_C.GetRunningAction
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterLocomotionSubDashUkemi_C_GetRunningAction final
{
public:
	struct FKoratActionDataList                   RunningAction;                                     // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDashUkemi_C_GetRunningAction) == 0x000004, "Wrong alignment on BP_CharacterLocomotionSubDashUkemi_C_GetRunningAction");
static_assert(sizeof(BP_CharacterLocomotionSubDashUkemi_C_GetRunningAction) == 0x000008, "Wrong size on BP_CharacterLocomotionSubDashUkemi_C_GetRunningAction");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_GetRunningAction, RunningAction) == 0x000000, "Member 'BP_CharacterLocomotionSubDashUkemi_C_GetRunningAction::RunningAction' has a wrong offset!");

// Function BP_CharacterLocomotionSubDashUkemi.BP_CharacterLocomotionSubDashUkemi_C.GetRunningSection
// 0x0044 (0x0044 - 0x0000)
struct BP_CharacterLocomotionSubDashUkemi_C_GetRunningSection final
{
public:
	class FName                                   RunningSection;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratDashUkemiType                           Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_1;                              // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_1;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDashUkemi_C_GetRunningSection) == 0x000004, "Wrong alignment on BP_CharacterLocomotionSubDashUkemi_C_GetRunningSection");
static_assert(sizeof(BP_CharacterLocomotionSubDashUkemi_C_GetRunningSection) == 0x000044, "Wrong size on BP_CharacterLocomotionSubDashUkemi_C_GetRunningSection");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_GetRunningSection, RunningSection) == 0x000000, "Member 'BP_CharacterLocomotionSubDashUkemi_C_GetRunningSection::RunningSection' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_GetRunningSection, Temp_name_Variable) == 0x000008, "Member 'BP_CharacterLocomotionSubDashUkemi_C_GetRunningSection::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_GetRunningSection, Temp_byte_Variable) == 0x000010, "Member 'BP_CharacterLocomotionSubDashUkemi_C_GetRunningSection::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_GetRunningSection, Temp_name_Variable_1) == 0x000014, "Member 'BP_CharacterLocomotionSubDashUkemi_C_GetRunningSection::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_GetRunningSection, Temp_name_Variable_2) == 0x00001C, "Member 'BP_CharacterLocomotionSubDashUkemi_C_GetRunningSection::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_GetRunningSection, Temp_name_Variable_3) == 0x000024, "Member 'BP_CharacterLocomotionSubDashUkemi_C_GetRunningSection::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_GetRunningSection, Temp_bool_Variable) == 0x00002C, "Member 'BP_CharacterLocomotionSubDashUkemi_C_GetRunningSection::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_GetRunningSection, K2Node_Select_Default) == 0x000030, "Member 'BP_CharacterLocomotionSubDashUkemi_C_GetRunningSection::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_GetRunningSection, K2Node_Select_Default_1) == 0x000038, "Member 'BP_CharacterLocomotionSubDashUkemi_C_GetRunningSection::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_GetRunningSection, K2Node_SwitchEnum_CmpSuccess) == 0x000040, "Member 'BP_CharacterLocomotionSubDashUkemi_C_GetRunningSection::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_CharacterLocomotionSubDashUkemi.BP_CharacterLocomotionSubDashUkemi_C.InitializeAdditionalDragonDashEnd
// 0x0020 (0x0020 - 0x0000)
struct BP_CharacterLocomotionSubDashUkemi_C_InitializeAdditionalDragonDashEnd final
{
public:
	double                                        CallFunc_GetTargetDistance_Length;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDashUkemi_C_InitializeAdditionalDragonDashEnd) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDashUkemi_C_InitializeAdditionalDragonDashEnd");
static_assert(sizeof(BP_CharacterLocomotionSubDashUkemi_C_InitializeAdditionalDragonDashEnd) == 0x000020, "Wrong size on BP_CharacterLocomotionSubDashUkemi_C_InitializeAdditionalDragonDashEnd");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_InitializeAdditionalDragonDashEnd, CallFunc_GetTargetDistance_Length) == 0x000000, "Member 'BP_CharacterLocomotionSubDashUkemi_C_InitializeAdditionalDragonDashEnd::CallFunc_GetTargetDistance_Length' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_InitializeAdditionalDragonDashEnd, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000008, "Member 'BP_CharacterLocomotionSubDashUkemi_C_InitializeAdditionalDragonDashEnd::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_InitializeAdditionalDragonDashEnd, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_CharacterLocomotionSubDashUkemi_C_InitializeAdditionalDragonDashEnd::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_InitializeAdditionalDragonDashEnd, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000018, "Member 'BP_CharacterLocomotionSubDashUkemi_C_InitializeAdditionalDragonDashEnd::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubDashUkemi.BP_CharacterLocomotionSubDashUkemi_C.IsEnableAction
// 0x0002 (0x0002 - 0x0000)
struct BP_CharacterLocomotionSubDashUkemi_C_IsEnableAction final
{
public:
	bool                                          IsEnable;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDashUkemi_C_IsEnableAction) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubDashUkemi_C_IsEnableAction");
static_assert(sizeof(BP_CharacterLocomotionSubDashUkemi_C_IsEnableAction) == 0x000002, "Wrong size on BP_CharacterLocomotionSubDashUkemi_C_IsEnableAction");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_IsEnableAction, IsEnable) == 0x000000, "Member 'BP_CharacterLocomotionSubDashUkemi_C_IsEnableAction::IsEnable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_IsEnableAction, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_CharacterLocomotionSubDashUkemi_C_IsEnableAction::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_CharacterLocomotionSubDashUkemi.BP_CharacterLocomotionSubDashUkemi_C.SetDashUkemiStatus
// 0x0030 (0x0030 - 0x0000)
struct BP_CharacterLocomotionSubDashUkemi_C_SetDashUkemiStatus final
{
public:
	EKoratDashUkemiState                          InDashUkemiStatus;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterActionFinishReason             InActionFinishReason;                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_2; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateRunningAction_OutIsChangeAction;    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDashUkemi_C_SetDashUkemiStatus) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDashUkemi_C_SetDashUkemiStatus");
static_assert(sizeof(BP_CharacterLocomotionSubDashUkemi_C_SetDashUkemiStatus) == 0x000030, "Wrong size on BP_CharacterLocomotionSubDashUkemi_C_SetDashUkemiStatus");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetDashUkemiStatus, InDashUkemiStatus) == 0x000000, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetDashUkemiStatus::InDashUkemiStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetDashUkemiStatus, InActionFinishReason) == 0x000001, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetDashUkemiStatus::InActionFinishReason' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetDashUkemiStatus, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetDashUkemiStatus::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetDashUkemiStatus, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000008, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetDashUkemiStatus::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetDashUkemiStatus, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000010, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetDashUkemiStatus::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetDashUkemiStatus, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetDashUkemiStatus::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetDashUkemiStatus, CallFunc_GetLocomotionComponent_LocomotionComponent_2) == 0x000020, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetDashUkemiStatus::CallFunc_GetLocomotionComponent_LocomotionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetDashUkemiStatus, CallFunc_UpdateRunningAction_OutIsChangeAction) == 0x000028, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetDashUkemiStatus::CallFunc_UpdateRunningAction_OutIsChangeAction' has a wrong offset!");

// Function BP_CharacterLocomotionSubDashUkemi.BP_CharacterLocomotionSubDashUkemi_C.SetUpDashUkemiMovement Parameter
// 0x0120 (0x0120 - 0x0000)
struct BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter final
{
public:
	EKoratDashUkemiState                          InDashUkemiStatus;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratBlowReactionDashUkemiMovementParameter Temp_struct_Variable;                              // 0x0004(0x0014)(NoDestructor)
	struct FKoratBlowReactionDashUkemiMovementParameter Temp_struct_Variable_1;                            // 0x0018(0x0014)(NoDestructor)
	struct FKoratBlowReactionDashUkemiMovementParameter Temp_struct_Variable_2;                            // 0x002C(0x0014)(NoDestructor)
	struct FKoratBlowReactionDashUkemiMovementParameter Temp_struct_Variable_3;                            // 0x0040(0x0014)(NoDestructor)
	struct FKoratBlowReactionDashUkemiMovementParameter Temp_struct_Variable_4;                            // 0x0054(0x0014)(NoDestructor)
	EKoratDashUkemiState                          Temp_byte_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement;   // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_1; // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_2; // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_3; // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_4; // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_5; // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_6; // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDashUkemiINParameter_________;         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDashUkemiINParameter_________________________; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratBlowReactionDashUkemiMovementParameter CallFunc_GetDashUkemiINParameter________;          // 0x00C8(0x0014)(NoDestructor)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetDashUkemiINParameter______;            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_7; // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKoratBlowReactionDashUkemiMovementParameter K2Node_Select_Default;                             // 0x00F0(0x0014)(NoDestructor)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast;         // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_DashUkemiMaxAddMoveTime_ImplicitCast; // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxWalkSpeed_ImplicitCast;      // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter");
static_assert(sizeof(BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter) == 0x000120, "Wrong size on BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter, InDashUkemiStatus) == 0x000000, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter::InDashUkemiStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter, Temp_struct_Variable) == 0x000004, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter, Temp_struct_Variable_1) == 0x000018, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter, Temp_struct_Variable_2) == 0x00002C, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter, Temp_struct_Variable_3) == 0x000040, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter, Temp_struct_Variable_4) == 0x000054, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter, Temp_byte_Variable) == 0x000068, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter, CallFunc_GetCharacterMovement_CharacterMovement) == 0x000070, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter::CallFunc_GetCharacterMovement_CharacterMovement' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter, CallFunc_GetCharacterMovement_CharacterMovement_1) == 0x000078, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter::CallFunc_GetCharacterMovement_CharacterMovement_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter, CallFunc_GetCharacterMovement_CharacterMovement_2) == 0x000080, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter::CallFunc_GetCharacterMovement_CharacterMovement_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000088, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000090, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter, CallFunc_GetCharacterMovement_CharacterMovement_3) == 0x000098, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter::CallFunc_GetCharacterMovement_CharacterMovement_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter, CallFunc_GetCharacterMovement_CharacterMovement_4) == 0x0000A0, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter::CallFunc_GetCharacterMovement_CharacterMovement_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter, CallFunc_GetCharacterMovement_CharacterMovement_5) == 0x0000A8, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter::CallFunc_GetCharacterMovement_CharacterMovement_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter, CallFunc_GetCharacterMovement_CharacterMovement_6) == 0x0000B0, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter::CallFunc_GetCharacterMovement_CharacterMovement_6' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter, CallFunc_GetDashUkemiINParameter_________) == 0x0000B8, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter::CallFunc_GetDashUkemiINParameter_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter, CallFunc_GetDashUkemiINParameter_________________________) == 0x0000C0, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter::CallFunc_GetDashUkemiINParameter_________________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter, CallFunc_GetDashUkemiINParameter________) == 0x0000C8, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter::CallFunc_GetDashUkemiINParameter________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter, CallFunc_GetDashUkemiINParameter______) == 0x0000E0, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter::CallFunc_GetDashUkemiINParameter______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter, CallFunc_GetCharacterMovement_CharacterMovement_7) == 0x0000E8, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter::CallFunc_GetCharacterMovement_CharacterMovement_7' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter, K2Node_Select_Default) == 0x0000F0, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter, CallFunc_Less_DoubleDouble_B_ImplicitCast) == 0x000108, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter::CallFunc_Less_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter, K2Node_VariableSet_DashUkemiMaxAddMoveTime_ImplicitCast) == 0x000110, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter::K2Node_VariableSet_DashUkemiMaxAddMoveTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter, K2Node_VariableSet_MaxWalkSpeed_ImplicitCast) == 0x000118, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetUpDashUkemiMovement_Parameter::K2Node_VariableSet_MaxWalkSpeed_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubDashUkemi.BP_CharacterLocomotionSubDashUkemi_C.SetUpDragonDashParameter
// 0x0190 (0x0190 - 0x0000)
struct BP_CharacterLocomotionSubDashUkemi_C_SetUpDragonDashParameter final
{
public:
	struct FKoratBlowReactionDashUkemiParameter   CallFunc_GetDashUkemiParameter________________;    // 0x0000(0x0188)(NoDestructor)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDashUkemi_C_SetUpDragonDashParameter) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDashUkemi_C_SetUpDragonDashParameter");
static_assert(sizeof(BP_CharacterLocomotionSubDashUkemi_C_SetUpDragonDashParameter) == 0x000190, "Wrong size on BP_CharacterLocomotionSubDashUkemi_C_SetUpDragonDashParameter");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetUpDragonDashParameter, CallFunc_GetDashUkemiParameter________________) == 0x000000, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetUpDragonDashParameter::CallFunc_GetDashUkemiParameter________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_SetUpDragonDashParameter, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000188, "Member 'BP_CharacterLocomotionSubDashUkemi_C_SetUpDragonDashParameter::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");

// Function BP_CharacterLocomotionSubDashUkemi.BP_CharacterLocomotionSubDashUkemi_C.Start
// 0x0378 (0x0378 - 0x0000)
struct BP_CharacterLocomotionSubDashUkemi_C_Start final
{
public:
	class UBP_CharacterLocomotionComponent_C*     InLocomotionComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          InInSkip;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPawn_Pawn;                             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterBase_C>  K2Node_DynamicCast_AsBPI_Character_Base;           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetCharacter_Character;                   // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterBase_C>  K2Node_DynamicCast_AsBPI_Character_Base_1;         // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratHitBackMovementData              CallFunc_GetHitBackData_HitBackData;               // 0x0060(0x02E0)()
	class APawn*                                  CallFunc_GetPawn_Pawn_1;                           // 0x0340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterBase_C>  K2Node_DynamicCast_AsBPI_Character_Base_2;         // 0x0348(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetKnockBackVector_KnockBackVector;       // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDashUkemi_C_Start) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDashUkemi_C_Start");
static_assert(sizeof(BP_CharacterLocomotionSubDashUkemi_C_Start) == 0x000378, "Wrong size on BP_CharacterLocomotionSubDashUkemi_C_Start");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Start, InLocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Start::InLocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Start, InInSkip) == 0x000008, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Start::InInSkip' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Start, NewParam) == 0x000009, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Start::NewParam' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Start, CallFunc_GetPawn_Pawn) == 0x000010, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Start::CallFunc_GetPawn_Pawn' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Start, K2Node_DynamicCast_AsBPI_Character_Base) == 0x000018, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Start::K2Node_DynamicCast_AsBPI_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Start, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Start::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Start, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000030, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Start::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Start, CallFunc_GetCharacter_Character) == 0x000038, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Start::CallFunc_GetCharacter_Character' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Start, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000040, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Start::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Start, K2Node_DynamicCast_AsBPI_Character_Base_1) == 0x000048, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Start::K2Node_DynamicCast_AsBPI_Character_Base_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Start, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Start::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Start, CallFunc_GetHitBackData_HitBackData) == 0x000060, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Start::CallFunc_GetHitBackData_HitBackData' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Start, CallFunc_GetPawn_Pawn_1) == 0x000340, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Start::CallFunc_GetPawn_Pawn_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Start, K2Node_DynamicCast_AsBPI_Character_Base_2) == 0x000348, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Start::K2Node_DynamicCast_AsBPI_Character_Base_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Start, K2Node_DynamicCast_bSuccess_2) == 0x000358, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Start::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Start, CallFunc_GetKnockBackVector_KnockBackVector) == 0x000360, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Start::CallFunc_GetKnockBackVector_KnockBackVector' has a wrong offset!");

// Function BP_CharacterLocomotionSubDashUkemi.BP_CharacterLocomotionSubDashUkemi_C.StartDashUkemiDragonDash
// 0x0098 (0x0098 - 0x0000)
struct BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash final
{
public:
	double                                        CallFunc_GetDashUkemiINParameter_________;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDashUkemiINParameter_________________________; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratBlowReactionDashUkemiMovementParameter CallFunc_GetDashUkemiINParameter________;          // 0x0010(0x0014)(NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetDashUkemiINParameter______;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetSSCharacter_SSCharacter;               // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_2; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_3; // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Dash_Input_Vector_OutInputVector;     // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Dash_Input_Vector_OutIsInputNeutral;  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_4; // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterAction_C> K2Node_DynamicCast_AsBPI_Character_Action;         // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ConsumeSP_InSpCost_ImplicitCast;          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash");
static_assert(sizeof(BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash) == 0x000098, "Wrong size on BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash, CallFunc_GetDashUkemiINParameter_________) == 0x000000, "Member 'BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash::CallFunc_GetDashUkemiINParameter_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash, CallFunc_GetDashUkemiINParameter_________________________) == 0x000008, "Member 'BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash::CallFunc_GetDashUkemiINParameter_________________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash, CallFunc_GetDashUkemiINParameter________) == 0x000010, "Member 'BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash::CallFunc_GetDashUkemiINParameter________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash, CallFunc_GetDashUkemiINParameter______) == 0x000028, "Member 'BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash::CallFunc_GetDashUkemiINParameter______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash, CallFunc_GetSSCharacter_SSCharacter) == 0x000030, "Member 'BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash::CallFunc_GetSSCharacter_SSCharacter' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000038, "Member 'BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000040, "Member 'BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash, CallFunc_GetLocomotionComponent_LocomotionComponent_2) == 0x000048, "Member 'BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash::CallFunc_GetLocomotionComponent_LocomotionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash, CallFunc_GetLocomotionComponent_LocomotionComponent_3) == 0x000050, "Member 'BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash::CallFunc_GetLocomotionComponent_LocomotionComponent_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash, CallFunc_Get_Dash_Input_Vector_OutInputVector) == 0x000058, "Member 'BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash::CallFunc_Get_Dash_Input_Vector_OutInputVector' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash, CallFunc_Get_Dash_Input_Vector_OutIsInputNeutral) == 0x000070, "Member 'BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash::CallFunc_Get_Dash_Input_Vector_OutIsInputNeutral' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash, CallFunc_GetLocomotionComponent_LocomotionComponent_4) == 0x000078, "Member 'BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash::CallFunc_GetLocomotionComponent_LocomotionComponent_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash, K2Node_DynamicCast_AsBPI_Character_Action) == 0x000080, "Member 'BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash::K2Node_DynamicCast_AsBPI_Character_Action' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash, CallFunc_ConsumeSP_InSpCost_ImplicitCast) == 0x000094, "Member 'BP_CharacterLocomotionSubDashUkemi_C_StartDashUkemiDragonDash::CallFunc_ConsumeSP_InSpCost_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubDashUkemi.BP_CharacterLocomotionSubDashUkemi_C.Update
// 0x0148 (0x0148 - 0x0000)
struct BP_CharacterLocomotionSubDashUkemi_C_Update final
{
public:
	class UBP_CharacterLocomotionComponent_C*     InLocomotionComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ECharacterLocomotionEventType                 InEventType;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        InDeltaSeconds;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratDragonDashState                         Temp_byte_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratDashUkemiState                          Temp_byte_Variable_1;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratDashUkemiState                          Temp_byte_Variable_2;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratDashUkemiState                          Temp_byte_Variable_3;                              // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratDashUkemiState                          Temp_byte_Variable_4;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratDashUkemiState                          Temp_byte_Variable_5;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratDashUkemiState                          Temp_byte_Variable_6;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratDashUkemiState                          Temp_byte_Variable_7;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratDashUkemiType                           Temp_byte_Variable_8;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_2; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EKoratDashUkemiState                          Temp_byte_Variable_9;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_3; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_4; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_5; // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_6; // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_7; // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratDashUkemiType                           Temp_byte_Variable_10;                             // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratDashUkemiState                          Temp_byte_Variable_11;                             // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93[0x5];                                       // 0x0093(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_8; // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_9; // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_10; // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_11; // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_12; // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_ZBurst_Dash_ChangeZBurstDash;       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratDashUkemiState                          Temp_byte_Variable_12;                             // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D3[0x5];                                       // 0x00D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement;   // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EKoratDashUkemiState                          Temp_byte_Variable_13;                             // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x00E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratDashUkemiState                          K2Node_Select_Default_1;                           // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratDashUkemiState                          Temp_byte_Variable_14;                             // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EF[0x1];                                       // 0x00EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_13; // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EKoratDashUkemiState                          Temp_byte_Variable_15;                             // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_14; // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_15; // 0x0108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFLocomotionRotationParameter          K2Node_Select_Default_2;                           // 0x0110(0x0030)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratDragonDashState                         Temp_byte_Variable_16;                             // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Rotation_IsSuccessfully;              // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratDashUkemiState                          Temp_byte_Variable_17;                             // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratDashUkemiState                          K2Node_Select_Default_3;                           // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Update_NewParam;                          // 0x0147(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDashUkemi_C_Update) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDashUkemi_C_Update");
static_assert(sizeof(BP_CharacterLocomotionSubDashUkemi_C_Update) == 0x000148, "Wrong size on BP_CharacterLocomotionSubDashUkemi_C_Update");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, InLocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::InLocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, InEventType) == 0x000008, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::InEventType' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, InDeltaSeconds) == 0x000010, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, NewParam) == 0x000018, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::NewParam' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, Temp_name_Variable) == 0x00001C, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, Temp_byte_Variable) == 0x000024, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, Temp_byte_Variable_1) == 0x000025, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, Temp_byte_Variable_2) == 0x000026, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, Temp_byte_Variable_3) == 0x000027, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, Temp_byte_Variable_4) == 0x000028, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, Temp_byte_Variable_5) == 0x000029, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, Temp_byte_Variable_6) == 0x00002A, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, Temp_byte_Variable_7) == 0x00002B, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, Temp_byte_Variable_8) == 0x00002C, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000030, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000038, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x000041, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_2) == 0x000048, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, Temp_byte_Variable_9) == 0x000050, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_3) == 0x000058, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_4) == 0x000060, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_5) == 0x000068, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, Temp_name_Variable_1) == 0x000070, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000078, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_6) == 0x000080, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_6' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_7) == 0x000088, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_7' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, K2Node_SwitchEnum_CmpSuccess) == 0x000090, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, Temp_byte_Variable_10) == 0x000091, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, Temp_byte_Variable_11) == 0x000092, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_8) == 0x000098, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_8' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000A0, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000A1, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_9) == 0x0000A8, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_9' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_10) == 0x0000B0, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_10' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B8, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x0000B9, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_11) == 0x0000C0, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_11' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_12) == 0x0000C8, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_12' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, CallFunc_Check_ZBurst_Dash_ChangeZBurstDash) == 0x0000D0, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::CallFunc_Check_ZBurst_Dash_ChangeZBurstDash' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, K2Node_SwitchEnum_CmpSuccess_2) == 0x0000D1, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, Temp_byte_Variable_12) == 0x0000D2, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, CallFunc_GetCharacterMovement_CharacterMovement) == 0x0000D8, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::CallFunc_GetCharacterMovement_CharacterMovement' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, Temp_byte_Variable_13) == 0x0000E0, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, K2Node_Select_Default) == 0x0000E4, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x0000EC, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, K2Node_Select_Default_1) == 0x0000ED, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, Temp_byte_Variable_14) == 0x0000EE, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_13) == 0x0000F0, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_13' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, Temp_byte_Variable_15) == 0x0000F8, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_14) == 0x000100, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_14' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_15) == 0x000108, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_15' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, K2Node_Select_Default_2) == 0x000110, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, Temp_byte_Variable_16) == 0x000140, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, CallFunc_Set_Rotation_IsSuccessfully) == 0x000141, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::CallFunc_Set_Rotation_IsSuccessfully' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, Temp_byte_Variable_17) == 0x000142, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, K2Node_SwitchEnum_CmpSuccess_3) == 0x000143, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, K2Node_Select_Default_3) == 0x000144, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000145, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, K2Node_SwitchEnum_CmpSuccess_4) == 0x000146, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_Update, CallFunc_Update_NewParam) == 0x000147, "Member 'BP_CharacterLocomotionSubDashUkemi_C_Update::CallFunc_Update_NewParam' has a wrong offset!");

// Function BP_CharacterLocomotionSubDashUkemi.BP_CharacterLocomotionSubDashUkemi_C.UpdateAdditionalDragonDashEnd
// 0x01D0 (0x01D0 - 0x0000)
struct BP_CharacterLocomotionSubDashUkemi_C_UpdateAdditionalDragonDashEnd final
{
public:
	ECharacterLocomotionEventType                 InEventType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        InDeltaSeconds;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratBlowReactionDashUkemiParameter   CallFunc_GetDashUkemiParameter________________;    // 0x0010(0x0188)(NoDestructor)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AA[0x6];                                      // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BA[0x6];                                      // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDashUkemi_C_UpdateAdditionalDragonDashEnd) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDashUkemi_C_UpdateAdditionalDragonDashEnd");
static_assert(sizeof(BP_CharacterLocomotionSubDashUkemi_C_UpdateAdditionalDragonDashEnd) == 0x0001D0, "Wrong size on BP_CharacterLocomotionSubDashUkemi_C_UpdateAdditionalDragonDashEnd");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_UpdateAdditionalDragonDashEnd, InEventType) == 0x000000, "Member 'BP_CharacterLocomotionSubDashUkemi_C_UpdateAdditionalDragonDashEnd::InEventType' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_UpdateAdditionalDragonDashEnd, InDeltaSeconds) == 0x000008, "Member 'BP_CharacterLocomotionSubDashUkemi_C_UpdateAdditionalDragonDashEnd::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_UpdateAdditionalDragonDashEnd, CallFunc_GetDashUkemiParameter________________) == 0x000010, "Member 'BP_CharacterLocomotionSubDashUkemi_C_UpdateAdditionalDragonDashEnd::CallFunc_GetDashUkemiParameter________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_UpdateAdditionalDragonDashEnd, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000198, "Member 'BP_CharacterLocomotionSubDashUkemi_C_UpdateAdditionalDragonDashEnd::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_UpdateAdditionalDragonDashEnd, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x0001A0, "Member 'BP_CharacterLocomotionSubDashUkemi_C_UpdateAdditionalDragonDashEnd::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_UpdateAdditionalDragonDashEnd, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001A8, "Member 'BP_CharacterLocomotionSubDashUkemi_C_UpdateAdditionalDragonDashEnd::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_UpdateAdditionalDragonDashEnd, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0001A9, "Member 'BP_CharacterLocomotionSubDashUkemi_C_UpdateAdditionalDragonDashEnd::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_UpdateAdditionalDragonDashEnd, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001B0, "Member 'BP_CharacterLocomotionSubDashUkemi_C_UpdateAdditionalDragonDashEnd::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_UpdateAdditionalDragonDashEnd, CallFunc_BooleanAND_ReturnValue) == 0x0001B8, "Member 'BP_CharacterLocomotionSubDashUkemi_C_UpdateAdditionalDragonDashEnd::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_UpdateAdditionalDragonDashEnd, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0001B9, "Member 'BP_CharacterLocomotionSubDashUkemi_C_UpdateAdditionalDragonDashEnd::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_UpdateAdditionalDragonDashEnd, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0001C0, "Member 'BP_CharacterLocomotionSubDashUkemi_C_UpdateAdditionalDragonDashEnd::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_UpdateAdditionalDragonDashEnd, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x0001C8, "Member 'BP_CharacterLocomotionSubDashUkemi_C_UpdateAdditionalDragonDashEnd::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubDashUkemi.BP_CharacterLocomotionSubDashUkemi_C.UpdateDashUkemiInput
// 0x0010 (0x0010 - 0x0000)
struct BP_CharacterLocomotionSubDashUkemi_C_UpdateDashUkemiInput final
{
public:
	double                                        InDeltaSeconds;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDashUkemi_C_UpdateDashUkemiInput) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDashUkemi_C_UpdateDashUkemiInput");
static_assert(sizeof(BP_CharacterLocomotionSubDashUkemi_C_UpdateDashUkemiInput) == 0x000010, "Wrong size on BP_CharacterLocomotionSubDashUkemi_C_UpdateDashUkemiInput");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_UpdateDashUkemiInput, InDeltaSeconds) == 0x000000, "Member 'BP_CharacterLocomotionSubDashUkemi_C_UpdateDashUkemiInput::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_UpdateDashUkemiInput, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_CharacterLocomotionSubDashUkemi_C_UpdateDashUkemiInput::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubDashUkemi.BP_CharacterLocomotionSubDashUkemi_C.UpdateDashUkemiMove
// 0x0020 (0x0020 - 0x0000)
struct BP_CharacterLocomotionSubDashUkemi_C_UpdateDashUkemiMove final
{
public:
	double                                        InDeltaSeconds;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPawn_Pawn;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubDashUkemi_C_UpdateDashUkemiMove) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubDashUkemi_C_UpdateDashUkemiMove");
static_assert(sizeof(BP_CharacterLocomotionSubDashUkemi_C_UpdateDashUkemiMove) == 0x000020, "Wrong size on BP_CharacterLocomotionSubDashUkemi_C_UpdateDashUkemiMove");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_UpdateDashUkemiMove, InDeltaSeconds) == 0x000000, "Member 'BP_CharacterLocomotionSubDashUkemi_C_UpdateDashUkemiMove::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_UpdateDashUkemiMove, CallFunc_GetPawn_Pawn) == 0x000008, "Member 'BP_CharacterLocomotionSubDashUkemi_C_UpdateDashUkemiMove::CallFunc_GetPawn_Pawn' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_UpdateDashUkemiMove, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_CharacterLocomotionSubDashUkemi_C_UpdateDashUkemiMove::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubDashUkemi_C_UpdateDashUkemiMove, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_CharacterLocomotionSubDashUkemi_C_UpdateDashUkemiMove::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");

}

