#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CRBP_0000_40_00_CLT_00_CORRECT

#include "Basic.hpp"

#include "KoratControlRigExtension_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "RigVM_classes.hpp"
#include "ControlRig_structs.hpp"


namespace SDK
{

// ControlRigBlueprintGeneratedClass CRBP_0000_40_00_CLT_00_CORRECT.CRBP_0000_40_00_CLT_00_CORRECT_C
// 0x0000 (0x0568 - 0x0568)
class UCRBP_0000_40_00_CLT_00_CORRECT_C final : public UKoratControlRig
{
public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CRBP_0000_40_00_CLT_00_CORRECT_C">();
	}
	static class UCRBP_0000_40_00_CLT_00_CORRECT_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCRBP_0000_40_00_CLT_00_CORRECT_C>();
	}
};
static_assert(alignof(UCRBP_0000_40_00_CLT_00_CORRECT_C) == 0x000008, "Wrong alignment on UCRBP_0000_40_00_CLT_00_CORRECT_C");
static_assert(sizeof(UCRBP_0000_40_00_CLT_00_CORRECT_C) == 0x000568, "Wrong size on UCRBP_0000_40_00_CLT_00_CORRECT_C");

// RigVMMemoryStorageGeneratorClass CRBP_0000_40_00_CLT_00_CORRECT.RigVMMemory_Literal
// 0x01F8 (0x0220 - 0x0028)
class CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal final : public URigVMMemoryStorage
{
public:
	struct FRigElementKey                         RigVMModel___SetTransform_Item__Const;             // 0x0028(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EBoneGetterSetterMode                         RigVMModel___SetTransform_Space__Const;            // 0x0034(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___SetTransform_bInitial__Const : 1;     // 0x0035(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   RigVMModel___GetControlTransform_Control__Const;   // 0x0038(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___SetTransform_Weight__Const;           // 0x0040(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___SetTransform_bPropagateToChildren__Const : 1; // 0x0044(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigElementKey                         RigVMModel___SetTransform_2_Item__Const;           // 0x0048(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___GetControlTransform_2_Control__Const; // 0x0054(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetRotation_4_1_1_Item__Const;        // 0x005C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_Item__Const; // 0x0068(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_2_3_Value__Const; // 0x0078(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	EBoneGetterSetterMode                         RigVMModel___GetTransform_1_1_2_1_Space__Const;    // 0x0090(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___MathQuaternionSwingTwist_1_1_1_2_TwistAxis__Const; // 0x0098(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMin_2_B__Const;              // 0x00B0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___SetRotation_4_1_1_Weight__Const;      // 0x00B4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetRotation_4_2_Item__Const;          // 0x00B8(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_Item__Const; // 0x00C4(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___SetRotation_4_2_Weight__Const;        // 0x00D0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_TwistAxis__Const; // 0x00D8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMin_1_B__Const;              // 0x00F0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___SetRotation_4_1_1_1_2_1_Weight__Const; // 0x00F4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___SetRotation_4_1_1_1_1_Weight__Const;  // 0x00F8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetRotation_4_1_1_1_2_Item__Const;    // 0x00FC(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_Item__Const; // 0x0108(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___SetRotation_4_1_1_1_2_Weight__Const;  // 0x0114(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetRotation_4_1_1_1_2_1_Item__Const;  // 0x0118(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_1_Item__Const; // 0x0124(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetRotation_4_1_1_1_2_2_Item__Const;  // 0x0130(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_2_Item__Const; // 0x013C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetRotation_4_1_1_1_2_1_1_Item__Const; // 0x0148(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_1_1_Item__Const; // 0x0154(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetTransform_2_1_Item__Const;         // 0x0160(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___GetControlTransform_2_1_Control__Const; // 0x016C(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetTransform_4_Item__Const;           // 0x0174(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___SetTransform_4_Value__Const;          // 0x0180(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_1_Item__Const; // 0x01E0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_1_B__Const;              // 0x01EC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_1_1_1_B__Const;          // 0x01F0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_1_1_B__Const;            // 0x01F4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_2_1_B__Const;            // 0x01F8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_2_2_B__Const;            // 0x01FC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetTransform_4_1_Item__Const;         // 0x0200(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_1_1_Item__Const; // 0x020C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_1_1_3_B__Const;          // 0x0218(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass CRBP_0000_40_00_CLT_00_CORRECT.RigVMMemory_Literal", true>();
	}
	static class CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal* GetDefaultObj()
	{
		return GetDefaultObjImpl<CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal>();
	}
};
static_assert(alignof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal) == 0x000010, "Wrong alignment on CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal");
static_assert(sizeof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal) == 0x000220, "Wrong size on CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___SetTransform_Item__Const) == 0x000028, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___SetTransform_Item__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___SetTransform_Space__Const) == 0x000034, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___SetTransform_Space__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___GetControlTransform_Control__Const) == 0x000038, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___GetControlTransform_Control__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___SetTransform_Weight__Const) == 0x000040, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___SetTransform_Weight__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___SetTransform_2_Item__Const) == 0x000048, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___SetTransform_2_Item__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___GetControlTransform_2_Control__Const) == 0x000054, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___GetControlTransform_2_Control__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___SetRotation_4_1_1_Item__Const) == 0x00005C, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___SetRotation_4_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_Item__Const) == 0x000068, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___MathQuaternionFromRotator_2_3_Value__Const) == 0x000078, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___MathQuaternionFromRotator_2_3_Value__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___GetTransform_1_1_2_1_Space__Const) == 0x000090, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___GetTransform_1_1_2_1_Space__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___MathQuaternionSwingTwist_1_1_1_2_TwistAxis__Const) == 0x000098, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___MathQuaternionSwingTwist_1_1_1_2_TwistAxis__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___MathFloatMin_2_B__Const) == 0x0000B0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___MathFloatMin_2_B__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___SetRotation_4_1_1_Weight__Const) == 0x0000B4, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___SetRotation_4_1_1_Weight__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___SetRotation_4_2_Item__Const) == 0x0000B8, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___SetRotation_4_2_Item__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_Item__Const) == 0x0000C4, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___SetRotation_4_2_Weight__Const) == 0x0000D0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___SetRotation_4_2_Weight__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_TwistAxis__Const) == 0x0000D8, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_TwistAxis__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___MathFloatMin_1_B__Const) == 0x0000F0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___MathFloatMin_1_B__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___SetRotation_4_1_1_1_2_1_Weight__Const) == 0x0000F4, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___SetRotation_4_1_1_1_2_1_Weight__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___SetRotation_4_1_1_1_1_Weight__Const) == 0x0000F8, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___SetRotation_4_1_1_1_1_Weight__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___SetRotation_4_1_1_1_2_Item__Const) == 0x0000FC, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___SetRotation_4_1_1_1_2_Item__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_Item__Const) == 0x000108, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_Item__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___SetRotation_4_1_1_1_2_Weight__Const) == 0x000114, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___SetRotation_4_1_1_1_2_Weight__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___SetRotation_4_1_1_1_2_1_Item__Const) == 0x000118, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___SetRotation_4_1_1_1_2_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_1_Item__Const) == 0x000124, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___SetRotation_4_1_1_1_2_2_Item__Const) == 0x000130, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___SetRotation_4_1_1_1_2_2_Item__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_2_Item__Const) == 0x00013C, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_2_Item__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___SetRotation_4_1_1_1_2_1_1_Item__Const) == 0x000148, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___SetRotation_4_1_1_1_2_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_1_1_Item__Const) == 0x000154, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___SetTransform_2_1_Item__Const) == 0x000160, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___SetTransform_2_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___GetControlTransform_2_1_Control__Const) == 0x00016C, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___GetControlTransform_2_1_Control__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___SetTransform_4_Item__Const) == 0x000174, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___SetTransform_4_Item__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___SetTransform_4_Value__Const) == 0x000180, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___SetTransform_4_Value__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_1_Item__Const) == 0x0001E0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___MathFloatAdd_1_B__Const) == 0x0001EC, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___MathFloatAdd_1_B__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___MathFloatAdd_1_1_1_B__Const) == 0x0001F0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___MathFloatAdd_1_1_1_B__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___MathFloatAdd_1_1_B__Const) == 0x0001F4, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___MathFloatAdd_1_1_B__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___MathFloatAdd_2_1_B__Const) == 0x0001F8, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___MathFloatAdd_2_1_B__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___MathFloatAdd_2_2_B__Const) == 0x0001FC, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___MathFloatAdd_2_2_B__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___SetTransform_4_1_Item__Const) == 0x000200, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___SetTransform_4_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_1_1_Item__Const) == 0x00020C, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal, RigVMModel___MathFloatAdd_1_1_3_B__Const) == 0x000218, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Literal::RigVMModel___MathFloatAdd_1_1_3_B__Const' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass CRBP_0000_40_00_CLT_00_CORRECT.RigVMMemory_Work
// 0x13B8 (0x13E0 - 0x0028)
class CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work final : public URigVMMemoryStorage
{
public:
	struct FControlRigExecuteContext              ExecuteContext_;                                   // 0x0028(0x0038)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetControlTransform_Transform;        // 0x0060(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetControlTransform_Minimum;          // 0x00C0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetControlTransform_Maximum;          // 0x0120(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetControlTransform_CachedControlIndex; // 0x0180(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___SetTransform_CachedIndex;             // 0x0190(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetControlTransform_2_Transform;      // 0x01A0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetControlTransform_2_Minimum;        // 0x0200(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetControlTransform_2_Maximum;        // 0x0260(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetControlTransform_2_CachedControlIndex; // 0x02C0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___SetTransform_2_CachedIndex;           // 0x02D0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_Result; // 0x02E0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_Transform; // 0x0300(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_CachedIndex; // 0x0360(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_A; // 0x0370(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionInverse_Result;         // 0x0390(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_2_3_Result; // 0x03B0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMin_2_Result;                // 0x03D0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D4[0x4];                                      // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionToRotator_2_3_Result;   // 0x03D8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_1_1_1_2_Twist; // 0x03F0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_1_1_2_1_Transform;       // 0x0410(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_1_1_2_1_CachedIndex;     // 0x0470(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_1_1_1_2_Input; // 0x0480(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_1_1_1_2_Swing; // 0x04A0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMin_2_A;                     // 0x04C0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C4[0x4];                                      // 0x04C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_2_3_Value__IO; // 0x04C8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_4_1_1_CachedIndex;        // 0x04E0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_3_1_Result; // 0x04F0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_Transform; // 0x0510(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_CachedIndex; // 0x0570(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_3_1_A; // 0x0580(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionInverse_1_Result;       // 0x05A0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_2_Result;   // 0x05C0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMin_Result;                  // 0x05E0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E4[0x4];                                      // 0x05E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionToRotator_2_Result;     // 0x05E8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_1_1_1_Twist; // 0x0600(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_1_1_2_1_1_Transform;     // 0x0620(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_1_1_2_1_1_CachedIndex;   // 0x0680(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_1_1_1_Input; // 0x0690(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_1_1_1_Swing; // 0x06B0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMin_A;                       // 0x06D0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D4[0x4];                                      // 0x06D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_2_Value__IO; // 0x06D8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_4_2_CachedIndex;          // 0x06F0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_Result; // 0x0700(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_Transform; // 0x0720(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_CachedIndex; // 0x0780(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_A; // 0x0790(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionInverse_2_Result;       // 0x07B0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_2_3_1_Result; // 0x07D0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMin_1_Result;                // 0x07F0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F4[0x4];                                      // 0x07F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionToRotator_2_3_1_Result; // 0x07F8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_Twist; // 0x0810(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_Swing; // 0x0830(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMin_1_A;                     // 0x0850(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_854[0x4];                                      // 0x0854(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_2_3_1_Value__IO; // 0x0858(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_4_1_1_1_CachedIndex;      // 0x0870(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_1_Result; // 0x0880(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_1_Transform; // 0x08A0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_1_CachedIndex; // 0x0900(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_1_A; // 0x0910(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionInverse_2_1_Result;     // 0x0930(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_2_3_1_1_Result; // 0x0950(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMin_1_1_Result;              // 0x0970(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_974[0x4];                                      // 0x0974(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionToRotator_2_3_1_1_Result; // 0x0978(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_1_Twist; // 0x0990(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_1_Swing; // 0x09B0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMin_1_1_A;                   // 0x09D0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D4[0x4];                                      // 0x09D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_2_3_1_1_Value__IO; // 0x09D8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_4_1_1_1_1_CachedIndex;    // 0x09F0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_2_Result; // 0x0A00(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_Transform; // 0x0A20(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_CachedIndex; // 0x0A80(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_2_A; // 0x0A90(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_2_3_1_2_Result; // 0x0AB0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMax_Result;                  // 0x0AD0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD4[0x4];                                      // 0x0AD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionToRotator_2_3_1_2_Result; // 0x0AD8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_2_Twist; // 0x0AF0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_2_Swing; // 0x0B10(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMax_A;                       // 0x0B30(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B34[0x4];                                      // 0x0B34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_2_3_1_2_Value__IO; // 0x0B38(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_4_1_1_1_2_CachedIndex;    // 0x0B50(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_2_1_Result; // 0x0B60(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_1_Transform; // 0x0B80(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_1_CachedIndex; // 0x0BE0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_2_1_A; // 0x0BF0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_2_3_1_2_1_Result; // 0x0C10(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMax_1_Result;                // 0x0C30(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C34[0x4];                                      // 0x0C34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionToRotator_2_3_1_2_1_Result; // 0x0C38(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_2_1_Twist; // 0x0C50(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_2_1_Swing; // 0x0C70(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMax_1_A;                     // 0x0C90(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C94[0x4];                                      // 0x0C94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_2_3_1_2_1_Value__IO; // 0x0C98(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_4_1_1_1_2_1_CachedIndex;  // 0x0CB0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_2_2_Result; // 0x0CC0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_2_Transform; // 0x0CE0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_2_CachedIndex; // 0x0D40(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_2_2_A; // 0x0D50(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_2_3_1_2_2_Result; // 0x0D70(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMax_2_Result;                // 0x0D90(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D94[0x4];                                      // 0x0D94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionToRotator_2_3_1_2_2_Result; // 0x0D98(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_2_2_Twist; // 0x0DB0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_2_2_Swing; // 0x0DD0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMax_2_A;                     // 0x0DF0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DF4[0x4];                                      // 0x0DF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_2_3_1_2_2_Value__IO; // 0x0DF8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_4_1_1_1_2_2_CachedIndex;  // 0x0E10(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_2_1_1_Result; // 0x0E20(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_1_1_Transform; // 0x0E40(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_1_1_CachedIndex; // 0x0EA0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_2_1_1_A; // 0x0EB0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_2_3_1_2_1_1_Result; // 0x0ED0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMax_1_1_Result;              // 0x0EF0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EF4[0x4];                                      // 0x0EF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionToRotator_2_3_1_2_1_1_Result; // 0x0EF8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_2_1_1_Twist; // 0x0F10(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_2_1_1_Swing; // 0x0F30(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMax_1_1_A;                   // 0x0F50(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F54[0x4];                                      // 0x0F54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_2_3_1_2_1_1_Value__IO; // 0x0F58(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_4_1_1_1_2_1_1_CachedIndex; // 0x0F70(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetControlTransform_2_1_Transform;    // 0x0F80(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetControlTransform_2_1_Minimum;      // 0x0FE0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetControlTransform_2_1_Maximum;      // 0x1040(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetControlTransform_2_1_CachedControlIndex; // 0x10A0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___SetTransform_2_1_CachedIndex;         // 0x10B0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_Result;     // 0x10C0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_1_Result;                // 0x10E0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10E4[0x4];                                     // 0x10E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionToRotator_Result;       // 0x10E8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_1_Transform; // 0x1100(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_1_CachedIndex; // 0x1160(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_Value;        // 0x1170(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_1_A;                     // 0x1190(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_1_1_1_Result;            // 0x1194(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_1_1_1_A;                 // 0x1198(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_1_1_Result;              // 0x119C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_1_1_A;                   // 0x11A0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A4[0x4];                                     // 0x11A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_Value__IO;  // 0x11A8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         RigVMModel___MathFloatAdd_2_Result;                // 0x11C0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_2_A;                     // 0x11C4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_2_1_Result;              // 0x11C8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_2_1_A;                   // 0x11CC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_2_2_Result;              // 0x11D0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_2_2_A;                   // 0x11D4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D8[0x8];                                     // 0x11D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___SetTransform_4_Value__IO;             // 0x11E0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetTransform_4_CachedIndex;           // 0x1240(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_3_Result;   // 0x1250(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_1_3_Result;              // 0x1270(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1274[0x4];                                     // 0x1274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionToRotator_3_Result;     // 0x1278(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_1_1_Transform; // 0x1290(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_1_1_CachedIndex; // 0x12F0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_3_Value;      // 0x1300(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_1_3_A;                   // 0x1320(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_1_1_1_2_Result;          // 0x1324(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_1_1_1_2_A;               // 0x1328(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_1_1_3_Result;            // 0x132C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_1_1_3_A;                 // 0x1330(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1334[0x4];                                     // 0x1334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_3_Value__IO; // 0x1338(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         RigVMModel___MathFloatAdd_2_3_Result;              // 0x1350(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_2_3_A;                   // 0x1354(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_2_1_1_Result;            // 0x1358(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_2_1_1_A;                 // 0x135C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_2_2_1_Result;            // 0x1360(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_2_2_1_A;                 // 0x1364(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1368[0x8];                                     // 0x1368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___SetTransform_4_1_Value__IO;           // 0x1370(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetTransform_4_1_CachedIndex;         // 0x13D0(0x0010)(Edit, EditConst, NonTransactional)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass CRBP_0000_40_00_CLT_00_CORRECT.RigVMMemory_Work", true>();
	}
	static class CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work* GetDefaultObj()
	{
		return GetDefaultObjImpl<CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work>();
	}
};
static_assert(alignof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work) == 0x000010, "Wrong alignment on CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work");
static_assert(sizeof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work) == 0x0013E0, "Wrong size on CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, ExecuteContext_) == 0x000028, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::ExecuteContext_' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___GetControlTransform_Transform) == 0x000060, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___GetControlTransform_Transform' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___GetControlTransform_Minimum) == 0x0000C0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___GetControlTransform_Minimum' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___GetControlTransform_Maximum) == 0x000120, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___GetControlTransform_Maximum' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___GetControlTransform_CachedControlIndex) == 0x000180, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___GetControlTransform_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___SetTransform_CachedIndex) == 0x000190, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___SetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___GetControlTransform_2_Transform) == 0x0001A0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___GetControlTransform_2_Transform' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___GetControlTransform_2_Minimum) == 0x000200, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___GetControlTransform_2_Minimum' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___GetControlTransform_2_Maximum) == 0x000260, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___GetControlTransform_2_Maximum' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___GetControlTransform_2_CachedControlIndex) == 0x0002C0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___GetControlTransform_2_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___SetTransform_2_CachedIndex) == 0x0002D0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___SetTransform_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_Result) == 0x0002E0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_Transform) == 0x000300, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_Transform' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_CachedIndex) == 0x000360, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_A) == 0x000370, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionInverse_Result) == 0x000390, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionInverse_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_3_Result) == 0x0003B0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_3_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatMin_2_Result) == 0x0003D0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatMin_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_2_3_Result) == 0x0003D8, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_2_3_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_1_1_1_2_Twist) == 0x0003F0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_1_1_1_2_Twist' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___GetTransform_1_1_2_1_Transform) == 0x000410, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___GetTransform_1_1_2_1_Transform' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___GetTransform_1_1_2_1_CachedIndex) == 0x000470, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___GetTransform_1_1_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_1_1_1_2_Input) == 0x000480, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_1_1_1_2_Input' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_1_1_1_2_Swing) == 0x0004A0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_1_1_1_2_Swing' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatMin_2_A) == 0x0004C0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatMin_2_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_3_Value__IO) == 0x0004C8, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_3_Value__IO' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___SetRotation_4_1_1_CachedIndex) == 0x0004E0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___SetRotation_4_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_3_1_Result) == 0x0004F0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_3_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_Transform) == 0x000510, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_Transform' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_CachedIndex) == 0x000570, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_3_1_A) == 0x000580, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_3_1_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionInverse_1_Result) == 0x0005A0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionInverse_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_Result) == 0x0005C0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatMin_Result) == 0x0005E0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatMin_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_2_Result) == 0x0005E8, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_1_1_1_Twist) == 0x000600, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_1_1_1_Twist' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___GetTransform_1_1_2_1_1_Transform) == 0x000620, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___GetTransform_1_1_2_1_1_Transform' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___GetTransform_1_1_2_1_1_CachedIndex) == 0x000680, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___GetTransform_1_1_2_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_1_1_1_Input) == 0x000690, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_1_1_1_Input' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_1_1_1_Swing) == 0x0006B0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_1_1_1_Swing' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatMin_A) == 0x0006D0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatMin_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_Value__IO) == 0x0006D8, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_Value__IO' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___SetRotation_4_2_CachedIndex) == 0x0006F0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___SetRotation_4_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_Result) == 0x000700, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_Transform) == 0x000720, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_Transform' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_CachedIndex) == 0x000780, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_A) == 0x000790, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionInverse_2_Result) == 0x0007B0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionInverse_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_3_1_Result) == 0x0007D0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_3_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatMin_1_Result) == 0x0007F0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatMin_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_2_3_1_Result) == 0x0007F8, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_2_3_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_Twist) == 0x000810, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_Twist' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_Swing) == 0x000830, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_Swing' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatMin_1_A) == 0x000850, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatMin_1_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_3_1_Value__IO) == 0x000858, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_3_1_Value__IO' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___SetRotation_4_1_1_1_CachedIndex) == 0x000870, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___SetRotation_4_1_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_1_Result) == 0x000880, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_1_Transform) == 0x0008A0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_1_Transform' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_1_CachedIndex) == 0x000900, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_1_A) == 0x000910, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_1_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionInverse_2_1_Result) == 0x000930, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionInverse_2_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_3_1_1_Result) == 0x000950, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_3_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatMin_1_1_Result) == 0x000970, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatMin_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_2_3_1_1_Result) == 0x000978, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_2_3_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_1_Twist) == 0x000990, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_1_Twist' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_1_Swing) == 0x0009B0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_1_Swing' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatMin_1_1_A) == 0x0009D0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatMin_1_1_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_3_1_1_Value__IO) == 0x0009D8, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_3_1_1_Value__IO' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___SetRotation_4_1_1_1_1_CachedIndex) == 0x0009F0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___SetRotation_4_1_1_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_2_Result) == 0x000A00, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_Transform) == 0x000A20, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_Transform' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_CachedIndex) == 0x000A80, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_2_A) == 0x000A90, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_2_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_3_1_2_Result) == 0x000AB0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_3_1_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatMax_Result) == 0x000AD0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatMax_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_2_3_1_2_Result) == 0x000AD8, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_2_3_1_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_2_Twist) == 0x000AF0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_2_Twist' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_2_Swing) == 0x000B10, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_2_Swing' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatMax_A) == 0x000B30, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatMax_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_3_1_2_Value__IO) == 0x000B38, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_3_1_2_Value__IO' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___SetRotation_4_1_1_1_2_CachedIndex) == 0x000B50, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___SetRotation_4_1_1_1_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_2_1_Result) == 0x000B60, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_2_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_1_Transform) == 0x000B80, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_1_Transform' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_1_CachedIndex) == 0x000BE0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_2_1_A) == 0x000BF0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_2_1_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_3_1_2_1_Result) == 0x000C10, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_3_1_2_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatMax_1_Result) == 0x000C30, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatMax_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_2_3_1_2_1_Result) == 0x000C38, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_2_3_1_2_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_2_1_Twist) == 0x000C50, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_2_1_Twist' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_2_1_Swing) == 0x000C70, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_2_1_Swing' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatMax_1_A) == 0x000C90, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatMax_1_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_3_1_2_1_Value__IO) == 0x000C98, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_3_1_2_1_Value__IO' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___SetRotation_4_1_1_1_2_1_CachedIndex) == 0x000CB0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___SetRotation_4_1_1_1_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_2_2_Result) == 0x000CC0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_2_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_2_Transform) == 0x000CE0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_2_Transform' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_2_CachedIndex) == 0x000D40, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_2_2_A) == 0x000D50, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_2_2_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_3_1_2_2_Result) == 0x000D70, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_3_1_2_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatMax_2_Result) == 0x000D90, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatMax_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_2_3_1_2_2_Result) == 0x000D98, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_2_3_1_2_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_2_2_Twist) == 0x000DB0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_2_2_Twist' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_2_2_Swing) == 0x000DD0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_2_2_Swing' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatMax_2_A) == 0x000DF0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatMax_2_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_3_1_2_2_Value__IO) == 0x000DF8, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_3_1_2_2_Value__IO' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___SetRotation_4_1_1_1_2_2_CachedIndex) == 0x000E10, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___SetRotation_4_1_1_1_2_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_2_1_1_Result) == 0x000E20, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_2_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_1_1_Transform) == 0x000E40, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_1_1_Transform' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_1_1_CachedIndex) == 0x000EA0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_2_2_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_2_1_1_A) == 0x000EB0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionMul_1_1_2_1_1_1_1_1_2_3_2_2_1_1_2_1_1_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_3_1_2_1_1_Result) == 0x000ED0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_3_1_2_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatMax_1_1_Result) == 0x000EF0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatMax_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_2_3_1_2_1_1_Result) == 0x000EF8, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_2_3_1_2_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_2_1_1_Twist) == 0x000F10, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_2_1_1_Twist' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_2_1_1_Swing) == 0x000F30, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_1_1_1_2_1_2_1_1_Swing' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatMax_1_1_A) == 0x000F50, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatMax_1_1_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_3_1_2_1_1_Value__IO) == 0x000F58, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_3_1_2_1_1_Value__IO' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___SetRotation_4_1_1_1_2_1_1_CachedIndex) == 0x000F70, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___SetRotation_4_1_1_1_2_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___GetControlTransform_2_1_Transform) == 0x000F80, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___GetControlTransform_2_1_Transform' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___GetControlTransform_2_1_Minimum) == 0x000FE0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___GetControlTransform_2_1_Minimum' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___GetControlTransform_2_1_Maximum) == 0x001040, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___GetControlTransform_2_1_Maximum' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___GetControlTransform_2_1_CachedControlIndex) == 0x0010A0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___GetControlTransform_2_1_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___SetTransform_2_1_CachedIndex) == 0x0010B0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___SetTransform_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_Result) == 0x0010C0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatAdd_1_Result) == 0x0010E0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatAdd_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_Result) == 0x0010E8, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_1_Transform) == 0x001100, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_1_Transform' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_1_CachedIndex) == 0x001160, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_Value) == 0x001170, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_Value' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatAdd_1_A) == 0x001190, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatAdd_1_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatAdd_1_1_1_Result) == 0x001194, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatAdd_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatAdd_1_1_1_A) == 0x001198, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatAdd_1_1_1_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatAdd_1_1_Result) == 0x00119C, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatAdd_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatAdd_1_1_A) == 0x0011A0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatAdd_1_1_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_Value__IO) == 0x0011A8, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_Value__IO' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatAdd_2_Result) == 0x0011C0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatAdd_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatAdd_2_A) == 0x0011C4, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatAdd_2_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatAdd_2_1_Result) == 0x0011C8, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatAdd_2_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatAdd_2_1_A) == 0x0011CC, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatAdd_2_1_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatAdd_2_2_Result) == 0x0011D0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatAdd_2_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatAdd_2_2_A) == 0x0011D4, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatAdd_2_2_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___SetTransform_4_Value__IO) == 0x0011E0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___SetTransform_4_Value__IO' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___SetTransform_4_CachedIndex) == 0x001240, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___SetTransform_4_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_3_Result) == 0x001250, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_3_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatAdd_1_3_Result) == 0x001270, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatAdd_1_3_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_3_Result) == 0x001278, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_3_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_1_1_Transform) == 0x001290, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_1_1_Transform' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_1_1_CachedIndex) == 0x0012F0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_1_1_1_1_1_2_3_2_2_1_1_1_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_3_Value) == 0x001300, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_3_Value' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatAdd_1_3_A) == 0x001320, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatAdd_1_3_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatAdd_1_1_1_2_Result) == 0x001324, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatAdd_1_1_1_2_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatAdd_1_1_1_2_A) == 0x001328, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatAdd_1_1_1_2_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatAdd_1_1_3_Result) == 0x00132C, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatAdd_1_1_3_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatAdd_1_1_3_A) == 0x001330, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatAdd_1_1_3_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_3_Value__IO) == 0x001338, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_3_Value__IO' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatAdd_2_3_Result) == 0x001350, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatAdd_2_3_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatAdd_2_3_A) == 0x001354, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatAdd_2_3_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatAdd_2_1_1_Result) == 0x001358, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatAdd_2_1_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatAdd_2_1_1_A) == 0x00135C, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatAdd_2_1_1_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatAdd_2_2_1_Result) == 0x001360, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatAdd_2_2_1_Result' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___MathFloatAdd_2_2_1_A) == 0x001364, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___MathFloatAdd_2_2_1_A' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___SetTransform_4_1_Value__IO) == 0x001370, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___SetTransform_4_1_Value__IO' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work, RigVMModel___SetTransform_4_1_CachedIndex) == 0x0013D0, "Member 'CRBP_0000_40_00_CLT_00_CORRECT::URigVMMemory_Work::RigVMModel___SetTransform_4_1_CachedIndex' has a wrong offset!");

}

