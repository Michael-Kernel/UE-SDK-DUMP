#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterLocomotionSubDash

#include "Basic.hpp"

#include "BP_CharacterLocomotionSubDash_classes.hpp"
#include "BP_CharacterLocomotionSubDash_parameters.hpp"


namespace SDK
{

// Function BP_CharacterLocomotionSubDash.BP_CharacterLocomotionSubDash_C.AddDashVector
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InDeltaSeconds                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubDash_C::AddDashVector(double InDeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubDash_C", "AddDashVector");

	Params::BP_CharacterLocomotionSubDash_C_AddDashVector Parms{};

	Parms.InDeltaSeconds = InDeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterLocomotionSubDash.BP_CharacterLocomotionSubDash_C.ClearVelocityDashAtStart
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterLocomotionSubDash_C::ClearVelocityDashAtStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubDash_C", "ClearVelocityDashAtStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterLocomotionSubDash.BP_CharacterLocomotionSubDash_C.GetDashInputVector
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          InInputVector                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OutInputVector                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    OutIsInputNeutral                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubDash_C::GetDashInputVector(const struct FVector& InInputVector, struct FVector* OutInputVector, bool* OutIsInputNeutral)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubDash_C", "GetDashInputVector");

	Params::BP_CharacterLocomotionSubDash_C_GetDashInputVector Parms{};

	Parms.InInputVector = std::move(InInputVector);

	UObject::ProcessEvent(Func, &Parms);

	if (OutInputVector != nullptr)
		*OutInputVector = std::move(Parms.OutInputVector);

	if (OutIsInputNeutral != nullptr)
		*OutIsInputNeutral = Parms.OutIsInputNeutral;
}


// Function BP_CharacterLocomotionSubDash.BP_CharacterLocomotionSubDash_C.GetDashVectorAndRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          InInputVector                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InIsOnlyYawRotation                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OutVector                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         OutRotation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterLocomotionSubDash_C::GetDashVectorAndRotation(const struct FVector& InInputVector, bool InIsOnlyYawRotation, struct FVector* OutVector, struct FRotator* OutRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubDash_C", "GetDashVectorAndRotation");

	Params::BP_CharacterLocomotionSubDash_C_GetDashVectorAndRotation Parms{};

	Parms.InInputVector = std::move(InInputVector);
	Parms.InIsOnlyYawRotation = InIsOnlyYawRotation;

	UObject::ProcessEvent(Func, &Parms);

	if (OutVector != nullptr)
		*OutVector = std::move(Parms.OutVector);

	if (OutRotation != nullptr)
		*OutRotation = std::move(Parms.OutRotation);
}


// Function BP_CharacterLocomotionSubDash.BP_CharacterLocomotionSubDash_C.RotateDash
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InIsIgnoreRoll                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InIsIgnorePitch                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InIsIgnoreYaw                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterLocomotionSubDash_C::RotateDash(bool InIsIgnoreRoll, bool InIsIgnorePitch, bool InIsIgnoreYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubDash_C", "RotateDash");

	Params::BP_CharacterLocomotionSubDash_C_RotateDash Parms{};

	Parms.InIsIgnoreRoll = InIsIgnoreRoll;
	Parms.InIsIgnorePitch = InIsIgnorePitch;
	Parms.InIsIgnoreYaw = InIsIgnoreYaw;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterLocomotionSubDash.BP_CharacterLocomotionSubDash_C.SetUpDashStateMovementParameter
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterLocomotionSubDash_C::SetUpDashStateMovementParameter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterLocomotionSubDash_C", "SetUpDashStateMovementParameter");

	UObject::ProcessEvent(Func, nullptr);
}

}

