#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AiBTDecoratorUtilityComponent

#include "Basic.hpp"

#include "SS_structs.hpp"


namespace SDK::Params
{

// Function BP_AiBTDecoratorUtilityComponent.BP_AiBTDecoratorUtilityComponent_C.CanWeDrawLots
// 0x0068 (0x0068 - 0x0000)
struct BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots final
{
public:
	class UBTD_ProbabilityBase_C*                 InProbabilityBase;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InOwnerActor;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          OutLotteryPossible;                                // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBTDecorator*>                   CallFunc_GetDecoratorsInTheSameCompositeNode_OutDecorators; // 0x0018(0x0010)(ReferenceParm)
	class UBTDecorator*                           CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBTD_Base_C*                            K2Node_DynamicCast_AsBTD_Base;                     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetConditionNodeName_OutConditionNodeName; // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESSAiNodeConditionResultType                  CallFunc_IsConditionResults_ReturnValue;           // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F[0x1];                                       // 0x005F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PublicPerformConditionCheck_ReturnValue;  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots) == 0x000008, "Wrong alignment on BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots");
static_assert(sizeof(BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots) == 0x000068, "Wrong size on BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots, InProbabilityBase) == 0x000000, "Member 'BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots::InProbabilityBase' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots, InOwnerActor) == 0x000008, "Member 'BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots::InOwnerActor' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots, OutLotteryPossible) == 0x000010, "Member 'BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots::OutLotteryPossible' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots, CallFunc_GetDecoratorsInTheSameCompositeNode_OutDecorators) == 0x000018, "Member 'BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots::CallFunc_GetDecoratorsInTheSameCompositeNode_OutDecorators' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots, K2Node_DynamicCast_AsBTD_Base) == 0x000038, "Member 'BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots::K2Node_DynamicCast_AsBTD_Base' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots, CallFunc_GetConditionNodeName_OutConditionNodeName) == 0x000048, "Member 'BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots::CallFunc_GetConditionNodeName_OutConditionNodeName' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots, CallFunc_IsConditionResults_ReturnValue) == 0x00005C, "Member 'BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots::CallFunc_IsConditionResults_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots, K2Node_SwitchEnum_CmpSuccess) == 0x00005D, "Member 'BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots, CallFunc_Less_IntInt_ReturnValue) == 0x00005E, "Member 'BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots, CallFunc_PublicPerformConditionCheck_ReturnValue) == 0x000064, "Member 'BP_AiBTDecoratorUtilityComponent_C_CanWeDrawLots::CallFunc_PublicPerformConditionCheck_ReturnValue' has a wrong offset!");

// Function BP_AiBTDecoratorUtilityComponent.BP_AiBTDecoratorUtilityComponent_C.Draw Lots
// 0x0060 (0x0060 - 0x0000)
struct BP_AiBTDecoratorUtilityComponent_C_Draw_Lots final
{
public:
	int32                                         InMaxProbability;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InFirstDecoratorName;                              // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FSSAiProbabilityCalculation            ProbabilityCalculation;                            // 0x0018(0x0010)(Edit, BlueprintVisible, NoDestructor)
	struct FSSAiProbabilityCalculation            CallFunc_GetProbabilityCalculation_OutBuffer;      // 0x0028(0x0010)(NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSBattleAIController*                  K2Node_DynamicCast_AsSSBattle_AIController;        // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSRandom*                              CallFunc_GetRandom_ReturnValue;                    // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AiBTDecoratorUtilityComponent_C_Draw_Lots) == 0x000008, "Wrong alignment on BP_AiBTDecoratorUtilityComponent_C_Draw_Lots");
static_assert(sizeof(BP_AiBTDecoratorUtilityComponent_C_Draw_Lots) == 0x000060, "Wrong size on BP_AiBTDecoratorUtilityComponent_C_Draw_Lots");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_Draw_Lots, InMaxProbability) == 0x000000, "Member 'BP_AiBTDecoratorUtilityComponent_C_Draw_Lots::InMaxProbability' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_Draw_Lots, InFirstDecoratorName) == 0x000008, "Member 'BP_AiBTDecoratorUtilityComponent_C_Draw_Lots::InFirstDecoratorName' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_Draw_Lots, ProbabilityCalculation) == 0x000018, "Member 'BP_AiBTDecoratorUtilityComponent_C_Draw_Lots::ProbabilityCalculation' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_Draw_Lots, CallFunc_GetProbabilityCalculation_OutBuffer) == 0x000028, "Member 'BP_AiBTDecoratorUtilityComponent_C_Draw_Lots::CallFunc_GetProbabilityCalculation_OutBuffer' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_Draw_Lots, CallFunc_GetOwner_ReturnValue) == 0x000038, "Member 'BP_AiBTDecoratorUtilityComponent_C_Draw_Lots::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_Draw_Lots, K2Node_DynamicCast_AsSSBattle_AIController) == 0x000040, "Member 'BP_AiBTDecoratorUtilityComponent_C_Draw_Lots::K2Node_DynamicCast_AsSSBattle_AIController' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_Draw_Lots, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_AiBTDecoratorUtilityComponent_C_Draw_Lots::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_Draw_Lots, CallFunc_GetRandom_ReturnValue) == 0x000050, "Member 'BP_AiBTDecoratorUtilityComponent_C_Draw_Lots::CallFunc_GetRandom_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_Draw_Lots, CallFunc_RandomInteger_ReturnValue) == 0x000058, "Member 'BP_AiBTDecoratorUtilityComponent_C_Draw_Lots::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");

// Function BP_AiBTDecoratorUtilityComponent.BP_AiBTDecoratorUtilityComponent_C.ExecuteUbergraph_BP_AiBTDecoratorUtilityComponent
// 0x0050 (0x0050 - 0x0000)
struct BP_AiBTDecoratorUtilityComponent_C_ExecuteUbergraph_BP_AiBTDecoratorUtilityComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UBTDecorator*                     K2Node_Event_InDecorator_1;                        // 0x0008(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InOwnerController_1;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UBTDecorator*                     K2Node_Event_InDecorator;                          // 0x0018(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InOwnerController;                    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InSendLog;                            // 0x0028(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBTD_Base_C*                            K2Node_DynamicCast_AsBTD_Base;                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBTD_ProbabilityBase_C*                 K2Node_DynamicCast_AsBTD_Probability_Base;         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PublicPerformConditionCheck_ReturnValue;  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetProbability_OutProbability;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AiBTDecoratorUtilityComponent_C_ExecuteUbergraph_BP_AiBTDecoratorUtilityComponent) == 0x000008, "Wrong alignment on BP_AiBTDecoratorUtilityComponent_C_ExecuteUbergraph_BP_AiBTDecoratorUtilityComponent");
static_assert(sizeof(BP_AiBTDecoratorUtilityComponent_C_ExecuteUbergraph_BP_AiBTDecoratorUtilityComponent) == 0x000050, "Wrong size on BP_AiBTDecoratorUtilityComponent_C_ExecuteUbergraph_BP_AiBTDecoratorUtilityComponent");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_ExecuteUbergraph_BP_AiBTDecoratorUtilityComponent, EntryPoint) == 0x000000, "Member 'BP_AiBTDecoratorUtilityComponent_C_ExecuteUbergraph_BP_AiBTDecoratorUtilityComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_ExecuteUbergraph_BP_AiBTDecoratorUtilityComponent, K2Node_Event_InDecorator_1) == 0x000008, "Member 'BP_AiBTDecoratorUtilityComponent_C_ExecuteUbergraph_BP_AiBTDecoratorUtilityComponent::K2Node_Event_InDecorator_1' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_ExecuteUbergraph_BP_AiBTDecoratorUtilityComponent, K2Node_Event_InOwnerController_1) == 0x000010, "Member 'BP_AiBTDecoratorUtilityComponent_C_ExecuteUbergraph_BP_AiBTDecoratorUtilityComponent::K2Node_Event_InOwnerController_1' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_ExecuteUbergraph_BP_AiBTDecoratorUtilityComponent, K2Node_Event_InDecorator) == 0x000018, "Member 'BP_AiBTDecoratorUtilityComponent_C_ExecuteUbergraph_BP_AiBTDecoratorUtilityComponent::K2Node_Event_InDecorator' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_ExecuteUbergraph_BP_AiBTDecoratorUtilityComponent, K2Node_Event_InOwnerController) == 0x000020, "Member 'BP_AiBTDecoratorUtilityComponent_C_ExecuteUbergraph_BP_AiBTDecoratorUtilityComponent::K2Node_Event_InOwnerController' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_ExecuteUbergraph_BP_AiBTDecoratorUtilityComponent, K2Node_Event_InSendLog) == 0x000028, "Member 'BP_AiBTDecoratorUtilityComponent_C_ExecuteUbergraph_BP_AiBTDecoratorUtilityComponent::K2Node_Event_InSendLog' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_ExecuteUbergraph_BP_AiBTDecoratorUtilityComponent, K2Node_DynamicCast_AsBTD_Base) == 0x000030, "Member 'BP_AiBTDecoratorUtilityComponent_C_ExecuteUbergraph_BP_AiBTDecoratorUtilityComponent::K2Node_DynamicCast_AsBTD_Base' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_ExecuteUbergraph_BP_AiBTDecoratorUtilityComponent, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_AiBTDecoratorUtilityComponent_C_ExecuteUbergraph_BP_AiBTDecoratorUtilityComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_ExecuteUbergraph_BP_AiBTDecoratorUtilityComponent, K2Node_DynamicCast_AsBTD_Probability_Base) == 0x000040, "Member 'BP_AiBTDecoratorUtilityComponent_C_ExecuteUbergraph_BP_AiBTDecoratorUtilityComponent::K2Node_DynamicCast_AsBTD_Probability_Base' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_ExecuteUbergraph_BP_AiBTDecoratorUtilityComponent, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_AiBTDecoratorUtilityComponent_C_ExecuteUbergraph_BP_AiBTDecoratorUtilityComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_ExecuteUbergraph_BP_AiBTDecoratorUtilityComponent, CallFunc_PublicPerformConditionCheck_ReturnValue) == 0x000049, "Member 'BP_AiBTDecoratorUtilityComponent_C_ExecuteUbergraph_BP_AiBTDecoratorUtilityComponent::CallFunc_PublicPerformConditionCheck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_ExecuteUbergraph_BP_AiBTDecoratorUtilityComponent, CallFunc_GetProbability_OutProbability) == 0x00004C, "Member 'BP_AiBTDecoratorUtilityComponent_C_ExecuteUbergraph_BP_AiBTDecoratorUtilityComponent::CallFunc_GetProbability_OutProbability' has a wrong offset!");

// Function BP_AiBTDecoratorUtilityComponent.BP_AiBTDecoratorUtilityComponent_C.GetProbabilityCpp
// 0x0018 (0x0018 - 0x0000)
struct BP_AiBTDecoratorUtilityComponent_C_GetProbabilityCpp final
{
public:
	const class UBTDecorator*                     InDecorator;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InOwnerController;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          InSendLog;                                         // 0x0010(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AiBTDecoratorUtilityComponent_C_GetProbabilityCpp) == 0x000008, "Wrong alignment on BP_AiBTDecoratorUtilityComponent_C_GetProbabilityCpp");
static_assert(sizeof(BP_AiBTDecoratorUtilityComponent_C_GetProbabilityCpp) == 0x000018, "Wrong size on BP_AiBTDecoratorUtilityComponent_C_GetProbabilityCpp");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_GetProbabilityCpp, InDecorator) == 0x000000, "Member 'BP_AiBTDecoratorUtilityComponent_C_GetProbabilityCpp::InDecorator' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_GetProbabilityCpp, InOwnerController) == 0x000008, "Member 'BP_AiBTDecoratorUtilityComponent_C_GetProbabilityCpp::InOwnerController' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_GetProbabilityCpp, InSendLog) == 0x000010, "Member 'BP_AiBTDecoratorUtilityComponent_C_GetProbabilityCpp::InSendLog' has a wrong offset!");

// Function BP_AiBTDecoratorUtilityComponent.BP_AiBTDecoratorUtilityComponent_C.PublicPerformConditionCheckCpp
// 0x0010 (0x0010 - 0x0000)
struct BP_AiBTDecoratorUtilityComponent_C_PublicPerformConditionCheckCpp final
{
public:
	const class UBTDecorator*                     InDecorator;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InOwnerController;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AiBTDecoratorUtilityComponent_C_PublicPerformConditionCheckCpp) == 0x000008, "Wrong alignment on BP_AiBTDecoratorUtilityComponent_C_PublicPerformConditionCheckCpp");
static_assert(sizeof(BP_AiBTDecoratorUtilityComponent_C_PublicPerformConditionCheckCpp) == 0x000010, "Wrong size on BP_AiBTDecoratorUtilityComponent_C_PublicPerformConditionCheckCpp");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_PublicPerformConditionCheckCpp, InDecorator) == 0x000000, "Member 'BP_AiBTDecoratorUtilityComponent_C_PublicPerformConditionCheckCpp::InDecorator' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_PublicPerformConditionCheckCpp, InOwnerController) == 0x000008, "Member 'BP_AiBTDecoratorUtilityComponent_C_PublicPerformConditionCheckCpp::InOwnerController' has a wrong offset!");

// Function BP_AiBTDecoratorUtilityComponent.BP_AiBTDecoratorUtilityComponent_C.StartTheLottery
// 0x0158 (0x0158 - 0x0000)
struct BP_AiBTDecoratorUtilityComponent_C_StartTheLottery final
{
public:
	class UBTD_ProbabilityBase_C*                 InDecorator;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InOwnerActor;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Log;                                               // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 FirstDecoratorName;                                // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FSSAiProbabilityCalculation            ProbabilityCalculation;                            // 0x0030(0x0010)(Edit, BlueprintVisible, NoDestructor)
	class UBTD_ProbabilityBase_C*                 ProbabilityDecorator;                              // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Total;                                             // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Get_Log_Prefix_Name_OutName;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanWeDrawLots_OutLotteryPossible;         // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetProbability_OutProbability;            // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSSAiProbabilityCalculation            CallFunc_GetProbabilityCalculation_OutBuffer;      // 0x00D0(0x0010)(NoDestructor)
	struct FSSAiProbabilityCalculation            CallFunc_GetProbabilityCalculation_OutBuffer_1;    // 0x00E0(0x0010)(NoDestructor)
	class UBTDecorator*                           CallFunc_GetFirstSiblingDecorator_ReturnValue;     // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFirstSiblingDecorator_ReturnValue;      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBTDecorator*>                   CallFunc_GetSiblingDecorator_OutSiblingDecorator;  // 0x0118(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBTDecorator*                           CallFunc_Array_Get_Item;                           // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBTD_ProbabilityBase_C*                 K2Node_DynamicCast_AsBTD_Probability_Base;         // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery) == 0x000008, "Wrong alignment on BP_AiBTDecoratorUtilityComponent_C_StartTheLottery");
static_assert(sizeof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery) == 0x000158, "Wrong size on BP_AiBTDecoratorUtilityComponent_C_StartTheLottery");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery, InDecorator) == 0x000000, "Member 'BP_AiBTDecoratorUtilityComponent_C_StartTheLottery::InDecorator' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery, InOwnerActor) == 0x000008, "Member 'BP_AiBTDecoratorUtilityComponent_C_StartTheLottery::InOwnerActor' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery, Log) == 0x000010, "Member 'BP_AiBTDecoratorUtilityComponent_C_StartTheLottery::Log' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery, FirstDecoratorName) == 0x000020, "Member 'BP_AiBTDecoratorUtilityComponent_C_StartTheLottery::FirstDecoratorName' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery, ProbabilityCalculation) == 0x000030, "Member 'BP_AiBTDecoratorUtilityComponent_C_StartTheLottery::ProbabilityCalculation' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery, ProbabilityDecorator) == 0x000040, "Member 'BP_AiBTDecoratorUtilityComponent_C_StartTheLottery::ProbabilityDecorator' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery, Total) == 0x000048, "Member 'BP_AiBTDecoratorUtilityComponent_C_StartTheLottery::Total' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'BP_AiBTDecoratorUtilityComponent_C_StartTheLottery::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery, CallFunc_Get_Log_Prefix_Name_OutName) == 0x000050, "Member 'BP_AiBTDecoratorUtilityComponent_C_StartTheLottery::CallFunc_Get_Log_Prefix_Name_OutName' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery, CallFunc_Conv_IntToString_ReturnValue) == 0x000060, "Member 'BP_AiBTDecoratorUtilityComponent_C_StartTheLottery::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'BP_AiBTDecoratorUtilityComponent_C_StartTheLottery::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000080, "Member 'BP_AiBTDecoratorUtilityComponent_C_StartTheLottery::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000090, "Member 'BP_AiBTDecoratorUtilityComponent_C_StartTheLottery::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery, CallFunc_CanWeDrawLots_OutLotteryPossible) == 0x0000A0, "Member 'BP_AiBTDecoratorUtilityComponent_C_StartTheLottery::CallFunc_CanWeDrawLots_OutLotteryPossible' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A8, "Member 'BP_AiBTDecoratorUtilityComponent_C_StartTheLottery::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000B8, "Member 'BP_AiBTDecoratorUtilityComponent_C_StartTheLottery::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery, CallFunc_GetProbability_OutProbability) == 0x0000C8, "Member 'BP_AiBTDecoratorUtilityComponent_C_StartTheLottery::CallFunc_GetProbability_OutProbability' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery, CallFunc_Add_IntInt_ReturnValue) == 0x0000CC, "Member 'BP_AiBTDecoratorUtilityComponent_C_StartTheLottery::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery, CallFunc_GetProbabilityCalculation_OutBuffer) == 0x0000D0, "Member 'BP_AiBTDecoratorUtilityComponent_C_StartTheLottery::CallFunc_GetProbabilityCalculation_OutBuffer' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery, CallFunc_GetProbabilityCalculation_OutBuffer_1) == 0x0000E0, "Member 'BP_AiBTDecoratorUtilityComponent_C_StartTheLottery::CallFunc_GetProbabilityCalculation_OutBuffer_1' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery, CallFunc_GetFirstSiblingDecorator_ReturnValue) == 0x0000F0, "Member 'BP_AiBTDecoratorUtilityComponent_C_StartTheLottery::CallFunc_GetFirstSiblingDecorator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery, CallFunc_IsFirstSiblingDecorator_ReturnValue) == 0x0000F8, "Member 'BP_AiBTDecoratorUtilityComponent_C_StartTheLottery::CallFunc_IsFirstSiblingDecorator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery, CallFunc_GetDisplayName_ReturnValue) == 0x000100, "Member 'BP_AiBTDecoratorUtilityComponent_C_StartTheLottery::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery, Temp_int_Loop_Counter_Variable) == 0x000110, "Member 'BP_AiBTDecoratorUtilityComponent_C_StartTheLottery::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery, CallFunc_GetSiblingDecorator_OutSiblingDecorator) == 0x000118, "Member 'BP_AiBTDecoratorUtilityComponent_C_StartTheLottery::CallFunc_GetSiblingDecorator_OutSiblingDecorator' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery, CallFunc_Add_IntInt_ReturnValue_1) == 0x000128, "Member 'BP_AiBTDecoratorUtilityComponent_C_StartTheLottery::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery, CallFunc_Array_Get_Item) == 0x000130, "Member 'BP_AiBTDecoratorUtilityComponent_C_StartTheLottery::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery, K2Node_DynamicCast_AsBTD_Probability_Base) == 0x000138, "Member 'BP_AiBTDecoratorUtilityComponent_C_StartTheLottery::K2Node_DynamicCast_AsBTD_Probability_Base' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'BP_AiBTDecoratorUtilityComponent_C_StartTheLottery::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery, CallFunc_Array_Length_ReturnValue) == 0x000144, "Member 'BP_AiBTDecoratorUtilityComponent_C_StartTheLottery::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery, CallFunc_Less_IntInt_ReturnValue) == 0x000148, "Member 'BP_AiBTDecoratorUtilityComponent_C_StartTheLottery::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery, CallFunc_Array_Length_ReturnValue_1) == 0x00014C, "Member 'BP_AiBTDecoratorUtilityComponent_C_StartTheLottery::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AiBTDecoratorUtilityComponent_C_StartTheLottery, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000150, "Member 'BP_AiBTDecoratorUtilityComponent_C_StartTheLottery::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

}

