#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_CharacterAsyncAction

#include "Basic.hpp"

#include "BPI_CharacterAsyncAction_classes.hpp"
#include "BPI_CharacterAsyncAction_parameters.hpp"


namespace SDK
{

// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowAerialRush
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowAerialRush()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowAerialRush");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowAscertain
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowAscertain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowAscertain");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowAttackOfDragonDashCounter
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowAttackOfDragonDashCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowAttackOfDragonDashCounter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowBaseReaction
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowBaseReaction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowBaseReaction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowBlast
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratReplaceAnimationDataList   RequestAnimData                                        (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowBlast(const struct FKoratReplaceAnimationDataList& RequestAnimData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowBlast");

	Params::BPI_CharacterAsyncAction_C_NotifyTransitionFlowBlast Parms{};

	Parms.RequestAnimData = std::move(RequestAnimData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowBlown
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowBlown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowBlown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowBlownBrakeOfDragonDashCounter
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowBlownBrakeOfDragonDashCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowBlownBrakeOfDragonDashCounter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowCannon
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowCannon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowCannon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowCannonAttack1
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowCannonAttack1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowCannonAttack1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowCannonAttack2
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowCannonAttack2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowCannonAttack2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowCannonAttack3
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowCannonAttack3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowCannonAttack3");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowCannonSmash
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowCannonSmash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowCannonSmash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowCharge
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowCharge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowCharge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowDashBlow
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowDashBlow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowDashBlow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowDashOfDragonDashCounter
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowDashOfDragonDashCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowDashOfDragonDashCounter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowDashRising
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowDashRising()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowDashRising");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowDemo
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowDemo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowDemo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowDragonDash
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowDragonDash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowDragonDash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowDragonHoming
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowDragonHoming()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowDragonHoming");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowFastAvoidance
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowFastAvoidance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowFastAvoidance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowGrandSlash
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowGrandSlash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowGrandSlash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowGuard
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowGuard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowGuard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowGuardClear
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowGuardClear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowGuardClear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowHeavyCrush1
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowHeavyCrush1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowHeavyCrush1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowHeavyCrush2
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowHeavyCrush2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowHeavyCrush2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowHeavyCrush3
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowHeavyCrush3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowHeavyCrush3");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowHeavyFinish
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowHeavyFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowHeavyFinish");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowIdle
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowIdle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowIdle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowKidan
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowKidan()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowKidan");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowLiftStrike
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowLiftStrike()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowLiftStrike");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowLocomotion
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowLocomotion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowLocomotion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowMidAirKick
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowMidAirKick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowMidAirKick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowNoContinuation
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowNoContinuation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowNoContinuation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowParry
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowParry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowParry");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowParrySmash
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowParrySmash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowParrySmash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowPlayAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratActionDataList             InAction                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowPlayAction(const struct FKoratActionDataList& InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowPlayAction");

	Params::BPI_CharacterAsyncAction_C_NotifyTransitionFlowPlayAction Parms{};

	Parms.InAction = std::move(InAction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowRevengeCounter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratReplaceAnimationDataList   InReplaceAnim                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowRevengeCounter(const struct FKoratReplaceAnimationDataList& InReplaceAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowRevengeCounter");

	Params::BPI_CharacterAsyncAction_C_NotifyTransitionFlowRevengeCounter Parms{};

	Parms.InReplaceAnim = std::move(InReplaceAnim);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowRollingHammer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPreviousUseLeft                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowRollingHammer(bool IsPreviousUseLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowRollingHammer");

	Params::BPI_CharacterAsyncAction_C_NotifyTransitionFlowRollingHammer Parms{};

	Parms.IsPreviousUseLeft = IsPreviousUseLeft;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowRollingHurricane1
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsLeft                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowRollingHurricane1(bool IsLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowRollingHurricane1");

	Params::BPI_CharacterAsyncAction_C_NotifyTransitionFlowRollingHurricane1 Parms{};

	Parms.IsLeft = IsLeft;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowRollingHurricane2
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowRollingHurricane2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowRollingHurricane2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowRollingPress1
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowRollingPress1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowRollingPress1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowRollingPress2
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowRollingPress2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowRollingPress2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowRush
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RushType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowRush(int32 RushType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowRush");

	Params::BPI_CharacterAsyncAction_C_NotifyTransitionFlowRush Parms{};

	Parms.RushType = RushType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowShortDash
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowShortDash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowShortDash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowStepAvoidance
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowStepAvoidance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowStepAvoidance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowStepIn
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowStepIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowStepIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowSuperZCounterCatch
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowSuperZCounterCatch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowSuperZCounterCatch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowSuperZCounterPosture
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowSuperZCounterPosture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowSuperZCounterPosture");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowSuperZCounterShakeOff
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowSuperZCounterShakeOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowSuperZCounterShakeOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowSuperZCounterSmash
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowSuperZCounterSmash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowSuperZCounterSmash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowTeleportationCounter
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowTeleportationCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowTeleportationCounter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowThrow
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowThrow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowThrow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowUltimateBlast
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowUltimateBlast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowUltimateBlast");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowVanishingAssault
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowVanishingAssault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowVanishingAssault");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowVanishingAttack
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKoratReplaceAnimationDataList   InReplaceAnim                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowVanishingAttack(const struct FKoratReplaceAnimationDataList& InReplaceAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowVanishingAttack");

	Params::BPI_CharacterAsyncAction_C_NotifyTransitionFlowVanishingAttack Parms{};

	Parms.InReplaceAnim = std::move(InReplaceAnim);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowWaitMontageEnd
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowWaitMontageEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowWaitMontageEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharacterAsyncAction.BPI_CharacterAsyncAction_C.NotifyTransitionFlowZCounter
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharacterAsyncAction_C::NotifyTransitionFlowZCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterAsyncAction_C", "NotifyTransitionFlowZCounter");

	UObject::ProcessEvent(Func, nullptr);
}

}

