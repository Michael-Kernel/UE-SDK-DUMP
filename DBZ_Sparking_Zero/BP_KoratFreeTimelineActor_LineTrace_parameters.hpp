#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KoratFreeTimelineActor_LineTrace

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_KoratFreeTimelineActor_LineTrace.BP_KoratFreeTimelineActor_LineTrace_C.ExecuteUbergraph_BP_KoratFreeTimelineActor_LineTrace
// 0x0008 (0x0008 - 0x0000)
struct BP_KoratFreeTimelineActor_LineTrace_C_ExecuteUbergraph_BP_KoratFreeTimelineActor_LineTrace final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KoratFreeTimelineActor_LineTrace_C_ExecuteUbergraph_BP_KoratFreeTimelineActor_LineTrace) == 0x000004, "Wrong alignment on BP_KoratFreeTimelineActor_LineTrace_C_ExecuteUbergraph_BP_KoratFreeTimelineActor_LineTrace");
static_assert(sizeof(BP_KoratFreeTimelineActor_LineTrace_C_ExecuteUbergraph_BP_KoratFreeTimelineActor_LineTrace) == 0x000008, "Wrong size on BP_KoratFreeTimelineActor_LineTrace_C_ExecuteUbergraph_BP_KoratFreeTimelineActor_LineTrace");
static_assert(offsetof(BP_KoratFreeTimelineActor_LineTrace_C_ExecuteUbergraph_BP_KoratFreeTimelineActor_LineTrace, EntryPoint) == 0x000000, "Member 'BP_KoratFreeTimelineActor_LineTrace_C_ExecuteUbergraph_BP_KoratFreeTimelineActor_LineTrace::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_KoratFreeTimelineActor_LineTrace_C_ExecuteUbergraph_BP_KoratFreeTimelineActor_LineTrace, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_KoratFreeTimelineActor_LineTrace_C_ExecuteUbergraph_BP_KoratFreeTimelineActor_LineTrace::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function BP_KoratFreeTimelineActor_LineTrace.BP_KoratFreeTimelineActor_LineTrace_C.LineTraceTest
// 0x00F0 (0x00F0 - 0x0000)
struct BP_KoratFreeTimelineActor_LineTrace_C_LineTraceTest final
{
public:
	class AActor*                                 NewLocalVar;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLineTraceEndPos_ReturnValue;           // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLineTraceStartPos_ReturnValue;         // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0050(0x0010)(ConstParm, ReferenceParm)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FHitResult>                     CallFunc_LineTraceMultiForObjects_OutHits;         // 0x0070(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceMultiForObjects_ReturnValue;     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_VectorFloat_B_ImplicitCast;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KoratFreeTimelineActor_LineTrace_C_LineTraceTest) == 0x000008, "Wrong alignment on BP_KoratFreeTimelineActor_LineTrace_C_LineTraceTest");
static_assert(sizeof(BP_KoratFreeTimelineActor_LineTrace_C_LineTraceTest) == 0x0000F0, "Wrong size on BP_KoratFreeTimelineActor_LineTrace_C_LineTraceTest");
static_assert(offsetof(BP_KoratFreeTimelineActor_LineTrace_C_LineTraceTest, NewLocalVar) == 0x000000, "Member 'BP_KoratFreeTimelineActor_LineTrace_C_LineTraceTest::NewLocalVar' has a wrong offset!");
static_assert(offsetof(BP_KoratFreeTimelineActor_LineTrace_C_LineTraceTest, HitLocation) == 0x000008, "Member 'BP_KoratFreeTimelineActor_LineTrace_C_LineTraceTest::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_KoratFreeTimelineActor_LineTrace_C_LineTraceTest, CallFunc_GetLineTraceEndPos_ReturnValue) == 0x000020, "Member 'BP_KoratFreeTimelineActor_LineTrace_C_LineTraceTest::CallFunc_GetLineTraceEndPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KoratFreeTimelineActor_LineTrace_C_LineTraceTest, CallFunc_GetLineTraceStartPos_ReturnValue) == 0x000038, "Member 'BP_KoratFreeTimelineActor_LineTrace_C_LineTraceTest::CallFunc_GetLineTraceStartPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KoratFreeTimelineActor_LineTrace_C_LineTraceTest, Temp_object_Variable) == 0x000050, "Member 'BP_KoratFreeTimelineActor_LineTrace_C_LineTraceTest::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_KoratFreeTimelineActor_LineTrace_C_LineTraceTest, K2Node_MakeArray_Array) == 0x000060, "Member 'BP_KoratFreeTimelineActor_LineTrace_C_LineTraceTest::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_KoratFreeTimelineActor_LineTrace_C_LineTraceTest, CallFunc_LineTraceMultiForObjects_OutHits) == 0x000070, "Member 'BP_KoratFreeTimelineActor_LineTrace_C_LineTraceTest::CallFunc_LineTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_KoratFreeTimelineActor_LineTrace_C_LineTraceTest, CallFunc_LineTraceMultiForObjects_ReturnValue) == 0x000080, "Member 'BP_KoratFreeTimelineActor_LineTrace_C_LineTraceTest::CallFunc_LineTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KoratFreeTimelineActor_LineTrace_C_LineTraceTest, CallFunc_Normal_ReturnValue) == 0x000088, "Member 'BP_KoratFreeTimelineActor_LineTrace_C_LineTraceTest::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KoratFreeTimelineActor_LineTrace_C_LineTraceTest, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000A0, "Member 'BP_KoratFreeTimelineActor_LineTrace_C_LineTraceTest::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KoratFreeTimelineActor_LineTrace_C_LineTraceTest, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000B8, "Member 'BP_KoratFreeTimelineActor_LineTrace_C_LineTraceTest::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KoratFreeTimelineActor_LineTrace_C_LineTraceTest, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D0, "Member 'BP_KoratFreeTimelineActor_LineTrace_C_LineTraceTest::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KoratFreeTimelineActor_LineTrace_C_LineTraceTest, CallFunc_Multiply_VectorFloat_B_ImplicitCast) == 0x0000E8, "Member 'BP_KoratFreeTimelineActor_LineTrace_C_LineTraceTest::CallFunc_Multiply_VectorFloat_B_ImplicitCast' has a wrong offset!");

// Function BP_KoratFreeTimelineActor_LineTrace.BP_KoratFreeTimelineActor_LineTrace_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_KoratFreeTimelineActor_LineTrace_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KoratFreeTimelineActor_LineTrace_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_KoratFreeTimelineActor_LineTrace_C_ReceiveTick");
static_assert(sizeof(BP_KoratFreeTimelineActor_LineTrace_C_ReceiveTick) == 0x000004, "Wrong size on BP_KoratFreeTimelineActor_LineTrace_C_ReceiveTick");
static_assert(offsetof(BP_KoratFreeTimelineActor_LineTrace_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_KoratFreeTimelineActor_LineTrace_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_KoratFreeTimelineActor_LineTrace.BP_KoratFreeTimelineActor_LineTrace_C.Ù¯ÈëënjYÒ¦
// 0x00A8 (0x00A8 - 0x0000)
struct BP_KoratFreeTimelineActor_LineTrace_C_______njY__ final
{
public:
	struct FVector                                InVector;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InVector2;                                         // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnDotValue;                                    // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CalcDotProduct;                                    // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_1;                      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KoratFreeTimelineActor_LineTrace_C_______njY__) == 0x000008, "Wrong alignment on BP_KoratFreeTimelineActor_LineTrace_C_______njY__");
static_assert(sizeof(BP_KoratFreeTimelineActor_LineTrace_C_______njY__) == 0x0000A8, "Wrong size on BP_KoratFreeTimelineActor_LineTrace_C_______njY__");
static_assert(offsetof(BP_KoratFreeTimelineActor_LineTrace_C_______njY__, InVector) == 0x000000, "Member 'BP_KoratFreeTimelineActor_LineTrace_C_______njY__::InVector' has a wrong offset!");
static_assert(offsetof(BP_KoratFreeTimelineActor_LineTrace_C_______njY__, InVector2) == 0x000018, "Member 'BP_KoratFreeTimelineActor_LineTrace_C_______njY__::InVector2' has a wrong offset!");
static_assert(offsetof(BP_KoratFreeTimelineActor_LineTrace_C_______njY__, ReturnValue) == 0x000030, "Member 'BP_KoratFreeTimelineActor_LineTrace_C_______njY__::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KoratFreeTimelineActor_LineTrace_C_______njY__, ReturnDotValue) == 0x000038, "Member 'BP_KoratFreeTimelineActor_LineTrace_C_______njY__::ReturnDotValue' has a wrong offset!");
static_assert(offsetof(BP_KoratFreeTimelineActor_LineTrace_C_______njY__, CalcDotProduct) == 0x000040, "Member 'BP_KoratFreeTimelineActor_LineTrace_C_______njY__::CalcDotProduct' has a wrong offset!");
static_assert(offsetof(BP_KoratFreeTimelineActor_LineTrace_C_______njY__, CallFunc_Normal_ReturnValue) == 0x000048, "Member 'BP_KoratFreeTimelineActor_LineTrace_C_______njY__::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KoratFreeTimelineActor_LineTrace_C_______njY__, CallFunc_Normal_ReturnValue_1) == 0x000060, "Member 'BP_KoratFreeTimelineActor_LineTrace_C_______njY__::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KoratFreeTimelineActor_LineTrace_C_______njY__, CallFunc_VSize_ReturnValue) == 0x000078, "Member 'BP_KoratFreeTimelineActor_LineTrace_C_______njY__::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KoratFreeTimelineActor_LineTrace_C_______njY__, CallFunc_Dot_VectorVector_ReturnValue) == 0x000080, "Member 'BP_KoratFreeTimelineActor_LineTrace_C_______njY__::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KoratFreeTimelineActor_LineTrace_C_______njY__, CallFunc_VSize_ReturnValue_1) == 0x000088, "Member 'BP_KoratFreeTimelineActor_LineTrace_C_______njY__::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KoratFreeTimelineActor_LineTrace_C_______njY__, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000090, "Member 'BP_KoratFreeTimelineActor_LineTrace_C_______njY__::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KoratFreeTimelineActor_LineTrace_C_______njY__, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000098, "Member 'BP_KoratFreeTimelineActor_LineTrace_C_______njY__::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KoratFreeTimelineActor_LineTrace_C_______njY__, CallFunc_DegAcos_ReturnValue) == 0x0000A0, "Member 'BP_KoratFreeTimelineActor_LineTrace_C_______njY__::CallFunc_DegAcos_ReturnValue' has a wrong offset!");

}

