#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CopyCameraCapture

#include "Basic.hpp"

#include "BP_CopyCameraCapture_classes.hpp"
#include "BP_CopyCameraCapture_parameters.hpp"


namespace SDK
{

// Function BP_CopyCameraCapture.BP_CopyCameraCapture_C.CaptureSceneBasedOnCamera
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCameraComponent*                 SourceCamera                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UTextureRenderTarget2D*           RenderTarget                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_CopyCameraCapture_C::CaptureSceneBasedOnCamera(class UCameraComponent* SourceCamera, class UTextureRenderTarget2D* RenderTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CopyCameraCapture_C", "CaptureSceneBasedOnCamera");

	Params::BP_CopyCameraCapture_C_CaptureSceneBasedOnCamera Parms{};

	Parms.SourceCamera = SourceCamera;
	Parms.RenderTarget = RenderTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CopyCameraCapture.BP_CopyCameraCapture_C.CopyCameraSettingsToSceneCapture
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCameraComponent*                 Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class USceneCaptureComponent2D*         Dest                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_CopyCameraCapture_C::CopyCameraSettingsToSceneCapture(class UCameraComponent* Source, class USceneCaptureComponent2D* Dest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CopyCameraCapture_C", "CopyCameraSettingsToSceneCapture");

	Params::BP_CopyCameraCapture_C_CopyCameraSettingsToSceneCapture Parms{};

	Parms.Source = Source;
	Parms.Dest = Dest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CopyCameraCapture.BP_CopyCameraCapture_C.ExecuteUbergraph_BP_CopyCameraCapture
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CopyCameraCapture_C::ExecuteUbergraph_BP_CopyCameraCapture(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CopyCameraCapture_C", "ExecuteUbergraph_BP_CopyCameraCapture");

	Params::BP_CopyCameraCapture_C_ExecuteUbergraph_BP_CopyCameraCapture Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CopyCameraCapture.BP_CopyCameraCapture_C.GetViewTargetCamera
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UCameraComponent*                 CameraComponent_0                                      (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_CopyCameraCapture_C::GetViewTargetCamera(class UCameraComponent** CameraComponent_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CopyCameraCapture_C", "GetViewTargetCamera");

	Params::BP_CopyCameraCapture_C_GetViewTargetCamera Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CameraComponent_0 != nullptr)
		*CameraComponent_0 = Parms.CameraComponent_0;
}


// Function BP_CopyCameraCapture.BP_CopyCameraCapture_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CopyCameraCapture_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CopyCameraCapture_C", "ReceiveTick");

	Params::BP_CopyCameraCapture_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CopyCameraCapture.BP_CopyCameraCapture_C.SetRenderTextureToMaterial
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              TargetComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   MaterialIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTextureRenderTarget2D*           RenderTarget                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName                             TextureParameterName                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CopyCameraCapture_C::SetRenderTextureToMaterial(class UPrimitiveComponent* TargetComponent, int32 MaterialIndex, class UTextureRenderTarget2D* RenderTarget, class FName TextureParameterName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CopyCameraCapture_C", "SetRenderTextureToMaterial");

	Params::BP_CopyCameraCapture_C_SetRenderTextureToMaterial Parms{};

	Parms.TargetComponent = TargetComponent;
	Parms.MaterialIndex = MaterialIndex;
	Parms.RenderTarget = RenderTarget;
	Parms.TextureParameterName = TextureParameterName;

	UObject::ProcessEvent(Func, &Parms);
}

}

