#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_IW_Impulse

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_IW_Impulse.BP_IW_Impulse_C.ExecuteUbergraph_BP_IW_Impulse
// 0x00F0 (0x00F0 - 0x0000)
struct BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x2];                                       // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMotorPowerByKoratWindSpeed_ReturnValue; // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMotorPowerByKoratWindSpeed_InKoratWindSpeed_ImplicitCast; // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_Power_ImplicitCast;             // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_Radius_ImplicitCast;            // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMotorPowerByKoratWindSpeed_InRadius_ImplicitCast; // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse) == 0x000010, "Wrong alignment on BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse");
static_assert(sizeof(BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse) == 0x0000F0, "Wrong size on BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse");
static_assert(offsetof(BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse, EntryPoint) == 0x000000, "Member 'BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse, K2Node_Event_EndPlayReason) == 0x000005, "Member 'BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse, CallFunc_BreakTransform_Location) == 0x000070, "Member 'BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse, CallFunc_BreakTransform_Rotation) == 0x000088, "Member 'BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse, CallFunc_BreakTransform_Scale) == 0x0000A0, "Member 'BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x0000B8, "Member 'BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse, Temp_bool_IsClosed_Variable) == 0x0000C8, "Member 'BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0000C9, "Member 'BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse, CallFunc_GetMotorPowerByKoratWindSpeed_ReturnValue) == 0x0000CC, "Member 'BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse::CallFunc_GetMotorPowerByKoratWindSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse, CallFunc_GetMotorPowerByKoratWindSpeed_InKoratWindSpeed_ImplicitCast) == 0x0000D0, "Member 'BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse::CallFunc_GetMotorPowerByKoratWindSpeed_InKoratWindSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x0000D8, "Member 'BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse, K2Node_VariableSet_Power_ImplicitCast) == 0x0000E0, "Member 'BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse::K2Node_VariableSet_Power_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse, K2Node_VariableSet_Radius_ImplicitCast) == 0x0000E4, "Member 'BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse::K2Node_VariableSet_Radius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse, CallFunc_GetMotorPowerByKoratWindSpeed_InRadius_ImplicitCast) == 0x0000E8, "Member 'BP_IW_Impulse_C_ExecuteUbergraph_BP_IW_Impulse::CallFunc_GetMotorPowerByKoratWindSpeed_InRadius_ImplicitCast' has a wrong offset!");

// Function BP_IW_Impulse.BP_IW_Impulse_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_IW_Impulse_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IW_Impulse_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_IW_Impulse_C_ReceiveEndPlay");
static_assert(sizeof(BP_IW_Impulse_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_IW_Impulse_C_ReceiveEndPlay");
static_assert(offsetof(BP_IW_Impulse_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_IW_Impulse_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_IW_Impulse.BP_IW_Impulse_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_IW_Impulse_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IW_Impulse_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_IW_Impulse_C_ReceiveTick");
static_assert(sizeof(BP_IW_Impulse_C_ReceiveTick) == 0x000004, "Wrong size on BP_IW_Impulse_C_ReceiveTick");
static_assert(offsetof(BP_IW_Impulse_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_IW_Impulse_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

