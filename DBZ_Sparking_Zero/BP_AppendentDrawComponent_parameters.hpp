#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AppendentDrawComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SS_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.AddDrawBlowParam
// 0x0048 (0x0048 - 0x0000)
struct BP_AppendentDrawComponent_C_AddDrawBlowParam final
{
public:
	struct FVector                                InLocation;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InDrawType;                                        // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        InHitTime;                                         // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InDrawDuration;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AppendentDrawComponent_C_AddDrawBlowParam) == 0x000008, "Wrong alignment on BP_AppendentDrawComponent_C_AddDrawBlowParam");
static_assert(sizeof(BP_AppendentDrawComponent_C_AddDrawBlowParam) == 0x000048, "Wrong size on BP_AppendentDrawComponent_C_AddDrawBlowParam");
static_assert(offsetof(BP_AppendentDrawComponent_C_AddDrawBlowParam, InLocation) == 0x000000, "Member 'BP_AppendentDrawComponent_C_AddDrawBlowParam::InLocation' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_AddDrawBlowParam, InDrawType) == 0x000018, "Member 'BP_AppendentDrawComponent_C_AddDrawBlowParam::InDrawType' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_AddDrawBlowParam, InHitTime) == 0x000020, "Member 'BP_AppendentDrawComponent_C_AddDrawBlowParam::InHitTime' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_AddDrawBlowParam, InDrawDuration) == 0x000028, "Member 'BP_AppendentDrawComponent_C_AddDrawBlowParam::InDrawDuration' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_AddDrawBlowParam, K2Node_SwitchInteger_CmpSuccess) == 0x000030, "Member 'BP_AppendentDrawComponent_C_AddDrawBlowParam::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_AddDrawBlowParam, CallFunc_Array_Add_ReturnValue) == 0x000034, "Member 'BP_AppendentDrawComponent_C_AddDrawBlowParam::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_AddDrawBlowParam, CallFunc_Array_Add_ReturnValue_1) == 0x000038, "Member 'BP_AppendentDrawComponent_C_AddDrawBlowParam::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_AddDrawBlowParam, CallFunc_Array_Add_ReturnValue_2) == 0x00003C, "Member 'BP_AppendentDrawComponent_C_AddDrawBlowParam::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_AddDrawBlowParam, CallFunc_Array_Add_ReturnValue_3) == 0x000040, "Member 'BP_AppendentDrawComponent_C_AddDrawBlowParam::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_AddDrawBlowParam, CallFunc_Array_Add_ReturnValue_4) == 0x000044, "Member 'BP_AppendentDrawComponent_C_AddDrawBlowParam::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");

// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.ExecuteUbergraph_BP_AppendentDrawComponent
// 0x0080 (0x0080 - 0x0000)
struct BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_Value;                           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0070(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_DeltaSeconds_ImplicitCast;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent) == 0x000008, "Wrong alignment on BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent");
static_assert(sizeof(BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent) == 0x000080, "Wrong size on BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent");
static_assert(offsetof(BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent, EntryPoint) == 0x000000, "Member 'BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent, K2Node_Event_DeltaSeconds) == 0x00000C, "Member 'BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent, K2Node_Event_EndPlayReason) == 0x000014, "Member 'BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent, CallFunc_GetOwner_ReturnValue) == 0x000030, "Member 'BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent, K2Node_DynamicCast_AsBP_Character) == 0x000038, "Member 'BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent, K2Node_SwitchString_CmpSuccess) == 0x00005C, "Member 'BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent, CallFunc_Less_IntInt_ReturnValue) == 0x00005D, "Member 'BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent, Temp_int_Loop_Counter_Variable_1) == 0x000064, "Member 'BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent, CallFunc_Map_Find_Value) == 0x000068, "Member 'BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent, CallFunc_Map_Find_ReturnValue) == 0x000069, "Member 'BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent, CallFunc_BooleanAND_ReturnValue) == 0x00006A, "Member 'BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent, CallFunc_Less_IntInt_ReturnValue_1) == 0x00006B, "Member 'BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent, CallFunc_Add_IntInt_ReturnValue_1) == 0x00006C, "Member 'BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent, Temp_bool_Variable) == 0x000070, "Member 'BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent, K2Node_VariableSet_DeltaSeconds_ImplicitCast) == 0x000078, "Member 'BP_AppendentDrawComponent_C_ExecuteUbergraph_BP_AppendentDrawComponent::K2Node_VariableSet_DeltaSeconds_ImplicitCast' has a wrong offset!");

// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.GetPlayerCharacterNumber
// 0x0038 (0x0038 - 0x0000)
struct BP_AppendentDrawComponent_C_GetPlayerCharacterNumber final
{
public:
	int32                                         OutPlayerNumber;                                   // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_2;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_3;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AppendentDrawComponent_C_GetPlayerCharacterNumber) == 0x000008, "Wrong alignment on BP_AppendentDrawComponent_C_GetPlayerCharacterNumber");
static_assert(sizeof(BP_AppendentDrawComponent_C_GetPlayerCharacterNumber) == 0x000038, "Wrong size on BP_AppendentDrawComponent_C_GetPlayerCharacterNumber");
static_assert(offsetof(BP_AppendentDrawComponent_C_GetPlayerCharacterNumber, OutPlayerNumber) == 0x000000, "Member 'BP_AppendentDrawComponent_C_GetPlayerCharacterNumber::OutPlayerNumber' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_GetPlayerCharacterNumber, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'BP_AppendentDrawComponent_C_GetPlayerCharacterNumber::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_GetPlayerCharacterNumber, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000010, "Member 'BP_AppendentDrawComponent_C_GetPlayerCharacterNumber::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_GetPlayerCharacterNumber, CallFunc_GetPlayerPawn_ReturnValue_2) == 0x000018, "Member 'BP_AppendentDrawComponent_C_GetPlayerCharacterNumber::CallFunc_GetPlayerPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_GetPlayerCharacterNumber, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000020, "Member 'BP_AppendentDrawComponent_C_GetPlayerCharacterNumber::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_GetPlayerCharacterNumber, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000021, "Member 'BP_AppendentDrawComponent_C_GetPlayerCharacterNumber::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_GetPlayerCharacterNumber, CallFunc_GetPlayerPawn_ReturnValue_3) == 0x000028, "Member 'BP_AppendentDrawComponent_C_GetPlayerCharacterNumber::CallFunc_GetPlayerPawn_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_GetPlayerCharacterNumber, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000030, "Member 'BP_AppendentDrawComponent_C_GetPlayerCharacterNumber::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_GetPlayerCharacterNumber, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x000031, "Member 'BP_AppendentDrawComponent_C_GetPlayerCharacterNumber::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");

// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.InitializeDrawActorLocation
// 0x0030 (0x0030 - 0x0000)
struct BP_AppendentDrawComponent_C_InitializeDrawActorLocation final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AppendentDrawComponent_C_InitializeDrawActorLocation) == 0x000008, "Wrong alignment on BP_AppendentDrawComponent_C_InitializeDrawActorLocation");
static_assert(sizeof(BP_AppendentDrawComponent_C_InitializeDrawActorLocation) == 0x000030, "Wrong size on BP_AppendentDrawComponent_C_InitializeDrawActorLocation");
static_assert(offsetof(BP_AppendentDrawComponent_C_InitializeDrawActorLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'BP_AppendentDrawComponent_C_InitializeDrawActorLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_InitializeDrawActorLocation, CallFunc_GetSocketLocation_ReturnValue) == 0x000018, "Member 'BP_AppendentDrawComponent_C_InitializeDrawActorLocation::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");

// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.InitializeDrawLipsCharts
// 0x0088 (0x0088 - 0x0000)
struct BP_AppendentDrawComponent_C_InitializeDrawLipsCharts final
{
public:
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0010(0x0018)()
	class UWBP_CharacterTimePlot_C*               CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_DebugPlayVoice_C*>          CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWBP_DebugPlayVoice_C*                  CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_DebugPlayVoice_C*                  CallFunc_Create_ReturnValue_1;                     // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BP_AddSeries_SeriesId;                    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BP_AddSeries_SeriesId_1;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BP_AddSeries_SeriesId_2;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BP_AddSeries_SeriesId_3;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BP_AddSeries_SeriesId_4;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BP_AddSeries_SeriesId_5;                  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AppendentDrawComponent_C_InitializeDrawLipsCharts) == 0x000008, "Wrong alignment on BP_AppendentDrawComponent_C_InitializeDrawLipsCharts");
static_assert(sizeof(BP_AppendentDrawComponent_C_InitializeDrawLipsCharts) == 0x000088, "Wrong size on BP_AppendentDrawComponent_C_InitializeDrawLipsCharts");
static_assert(offsetof(BP_AppendentDrawComponent_C_InitializeDrawLipsCharts, CallFunc_GetObjectName_ReturnValue) == 0x000000, "Member 'BP_AppendentDrawComponent_C_InitializeDrawLipsCharts::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_InitializeDrawLipsCharts, CallFunc_Conv_StringToText_ReturnValue) == 0x000010, "Member 'BP_AppendentDrawComponent_C_InitializeDrawLipsCharts::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_InitializeDrawLipsCharts, CallFunc_Create_ReturnValue) == 0x000028, "Member 'BP_AppendentDrawComponent_C_InitializeDrawLipsCharts::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_InitializeDrawLipsCharts, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000030, "Member 'BP_AppendentDrawComponent_C_InitializeDrawLipsCharts::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_InitializeDrawLipsCharts, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_AppendentDrawComponent_C_InitializeDrawLipsCharts::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_InitializeDrawLipsCharts, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_AppendentDrawComponent_C_InitializeDrawLipsCharts::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_InitializeDrawLipsCharts, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_AppendentDrawComponent_C_InitializeDrawLipsCharts::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_InitializeDrawLipsCharts, CallFunc_Create_ReturnValue_1) == 0x000050, "Member 'BP_AppendentDrawComponent_C_InitializeDrawLipsCharts::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_InitializeDrawLipsCharts, CallFunc_BP_AddSeries_SeriesId) == 0x000058, "Member 'BP_AppendentDrawComponent_C_InitializeDrawLipsCharts::CallFunc_BP_AddSeries_SeriesId' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_InitializeDrawLipsCharts, CallFunc_BP_AddSeries_SeriesId_1) == 0x000060, "Member 'BP_AppendentDrawComponent_C_InitializeDrawLipsCharts::CallFunc_BP_AddSeries_SeriesId_1' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_InitializeDrawLipsCharts, CallFunc_BP_AddSeries_SeriesId_2) == 0x000068, "Member 'BP_AppendentDrawComponent_C_InitializeDrawLipsCharts::CallFunc_BP_AddSeries_SeriesId_2' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_InitializeDrawLipsCharts, CallFunc_BP_AddSeries_SeriesId_3) == 0x000070, "Member 'BP_AppendentDrawComponent_C_InitializeDrawLipsCharts::CallFunc_BP_AddSeries_SeriesId_3' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_InitializeDrawLipsCharts, CallFunc_BP_AddSeries_SeriesId_4) == 0x000078, "Member 'BP_AppendentDrawComponent_C_InitializeDrawLipsCharts::CallFunc_BP_AddSeries_SeriesId_4' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_InitializeDrawLipsCharts, CallFunc_BP_AddSeries_SeriesId_5) == 0x000080, "Member 'BP_AppendentDrawComponent_C_InitializeDrawLipsCharts::CallFunc_BP_AddSeries_SeriesId_5' has a wrong offset!");

// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.InitializeDrawPlayMontage
// 0x0040 (0x0040 - 0x0000)
struct BP_AppendentDrawComponent_C_InitializeDrawPlayMontage final
{
public:
	class FString                                 Temp_string_Variable;                              // 0x0000(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0010(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSGameInstance*                        K2Node_DynamicCast_AsSSGame_Instance;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDrawMontageStateEnable_ReturnValue;     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AppendentDrawComponent_C_InitializeDrawPlayMontage) == 0x000008, "Wrong alignment on BP_AppendentDrawComponent_C_InitializeDrawPlayMontage");
static_assert(sizeof(BP_AppendentDrawComponent_C_InitializeDrawPlayMontage) == 0x000040, "Wrong size on BP_AppendentDrawComponent_C_InitializeDrawPlayMontage");
static_assert(offsetof(BP_AppendentDrawComponent_C_InitializeDrawPlayMontage, Temp_string_Variable) == 0x000000, "Member 'BP_AppendentDrawComponent_C_InitializeDrawPlayMontage::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_InitializeDrawPlayMontage, Temp_string_Variable_1) == 0x000010, "Member 'BP_AppendentDrawComponent_C_InitializeDrawPlayMontage::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_InitializeDrawPlayMontage, CallFunc_GetGameInstance_ReturnValue) == 0x000020, "Member 'BP_AppendentDrawComponent_C_InitializeDrawPlayMontage::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_InitializeDrawPlayMontage, CallFunc_Map_Remove_ReturnValue) == 0x000028, "Member 'BP_AppendentDrawComponent_C_InitializeDrawPlayMontage::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_InitializeDrawPlayMontage, K2Node_DynamicCast_AsSSGame_Instance) == 0x000030, "Member 'BP_AppendentDrawComponent_C_InitializeDrawPlayMontage::K2Node_DynamicCast_AsSSGame_Instance' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_InitializeDrawPlayMontage, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_AppendentDrawComponent_C_InitializeDrawPlayMontage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_InitializeDrawPlayMontage, CallFunc_IsDrawMontageStateEnable_ReturnValue) == 0x000039, "Member 'BP_AppendentDrawComponent_C_InitializeDrawPlayMontage::CallFunc_IsDrawMontageStateEnable_ReturnValue' has a wrong offset!");

// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.KoratCharacterDebugCommandDraw
// 0x0028 (0x0028 - 0x0000)
struct BP_AppendentDrawComponent_C_KoratCharacterDebugCommandDraw final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_Value;                           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AppendentDrawComponent_C_KoratCharacterDebugCommandDraw) == 0x000008, "Wrong alignment on BP_AppendentDrawComponent_C_KoratCharacterDebugCommandDraw");
static_assert(sizeof(BP_AppendentDrawComponent_C_KoratCharacterDebugCommandDraw) == 0x000028, "Wrong size on BP_AppendentDrawComponent_C_KoratCharacterDebugCommandDraw");
static_assert(offsetof(BP_AppendentDrawComponent_C_KoratCharacterDebugCommandDraw, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_AppendentDrawComponent_C_KoratCharacterDebugCommandDraw::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_KoratCharacterDebugCommandDraw, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_AppendentDrawComponent_C_KoratCharacterDebugCommandDraw::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_KoratCharacterDebugCommandDraw, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_AppendentDrawComponent_C_KoratCharacterDebugCommandDraw::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_KoratCharacterDebugCommandDraw, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_AppendentDrawComponent_C_KoratCharacterDebugCommandDraw::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_KoratCharacterDebugCommandDraw, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_AppendentDrawComponent_C_KoratCharacterDebugCommandDraw::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_KoratCharacterDebugCommandDraw, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_AppendentDrawComponent_C_KoratCharacterDebugCommandDraw::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_KoratCharacterDebugCommandDraw, CallFunc_Map_Find_Value) == 0x000021, "Member 'BP_AppendentDrawComponent_C_KoratCharacterDebugCommandDraw::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_KoratCharacterDebugCommandDraw, CallFunc_Map_Find_ReturnValue) == 0x000022, "Member 'BP_AppendentDrawComponent_C_KoratCharacterDebugCommandDraw::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_AppendentDrawComponent_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AppendentDrawComponent_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_AppendentDrawComponent_C_ReceiveEndPlay");
static_assert(sizeof(BP_AppendentDrawComponent_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_AppendentDrawComponent_C_ReceiveEndPlay");
static_assert(offsetof(BP_AppendentDrawComponent_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_AppendentDrawComponent_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AppendentDrawComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds_0;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AppendentDrawComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AppendentDrawComponent_C_ReceiveTick");
static_assert(sizeof(BP_AppendentDrawComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_AppendentDrawComponent_C_ReceiveTick");
static_assert(offsetof(BP_AppendentDrawComponent_C_ReceiveTick, DeltaSeconds_0) == 0x000000, "Member 'BP_AppendentDrawComponent_C_ReceiveTick::DeltaSeconds_0' has a wrong offset!");

// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.SetCommandEnable
// 0x0078 (0x0078 - 0x0000)
struct BP_AppendentDrawComponent_C_SetCommandEnable final
{
public:
	class FString                                 InDebugCommand;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          InEnable;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnableSubActionState_ReturnValue;       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_AnimBase_C>       K2Node_DynamicCast_AsBPI_Anim_Base;                // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetSubActionAnimInstance_SubActionAnimInstance; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UKoratCharacterSubActionStateAnimInstance* K2Node_DynamicCast_AsKorat_Character_Sub_Action_State_Anim_Instance; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECheckBoxState                                CallFunc_GetCheckedState_ReturnValue;              // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AppendentDrawComponent_C_SetCommandEnable) == 0x000008, "Wrong alignment on BP_AppendentDrawComponent_C_SetCommandEnable");
static_assert(sizeof(BP_AppendentDrawComponent_C_SetCommandEnable) == 0x000078, "Wrong size on BP_AppendentDrawComponent_C_SetCommandEnable");
static_assert(offsetof(BP_AppendentDrawComponent_C_SetCommandEnable, InDebugCommand) == 0x000000, "Member 'BP_AppendentDrawComponent_C_SetCommandEnable::InDebugCommand' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SetCommandEnable, InEnable) == 0x000010, "Member 'BP_AppendentDrawComponent_C_SetCommandEnable::InEnable' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SetCommandEnable, CallFunc_IsEnableSubActionState_ReturnValue) == 0x000011, "Member 'BP_AppendentDrawComponent_C_SetCommandEnable::CallFunc_IsEnableSubActionState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SetCommandEnable, CallFunc_IsValid_ReturnValue) == 0x000012, "Member 'BP_AppendentDrawComponent_C_SetCommandEnable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SetCommandEnable, CallFunc_GetAnimInstance_ReturnValue) == 0x000018, "Member 'BP_AppendentDrawComponent_C_SetCommandEnable::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SetCommandEnable, K2Node_DynamicCast_AsBPI_Anim_Base) == 0x000020, "Member 'BP_AppendentDrawComponent_C_SetCommandEnable::K2Node_DynamicCast_AsBPI_Anim_Base' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SetCommandEnable, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_AppendentDrawComponent_C_SetCommandEnable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SetCommandEnable, CallFunc_GetSubActionAnimInstance_SubActionAnimInstance) == 0x000038, "Member 'BP_AppendentDrawComponent_C_SetCommandEnable::CallFunc_GetSubActionAnimInstance_SubActionAnimInstance' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SetCommandEnable, CallFunc_Not_PreBool_ReturnValue) == 0x000040, "Member 'BP_AppendentDrawComponent_C_SetCommandEnable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SetCommandEnable, K2Node_DynamicCast_AsKorat_Character_Sub_Action_State_Anim_Instance) == 0x000048, "Member 'BP_AppendentDrawComponent_C_SetCommandEnable::K2Node_DynamicCast_AsKorat_Character_Sub_Action_State_Anim_Instance' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SetCommandEnable, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_AppendentDrawComponent_C_SetCommandEnable::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SetCommandEnable, K2Node_SwitchEnum_CmpSuccess) == 0x000051, "Member 'BP_AppendentDrawComponent_C_SetCommandEnable::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SetCommandEnable, CallFunc_GetCheckedState_ReturnValue) == 0x000052, "Member 'BP_AppendentDrawComponent_C_SetCommandEnable::CallFunc_GetCheckedState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SetCommandEnable, K2Node_SwitchEnum_CmpSuccess_1) == 0x000053, "Member 'BP_AppendentDrawComponent_C_SetCommandEnable::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SetCommandEnable, CallFunc_GetPlayerController_ReturnValue) == 0x000058, "Member 'BP_AppendentDrawComponent_C_SetCommandEnable::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SetCommandEnable, CallFunc_IsValid_ReturnValue_1) == 0x000060, "Member 'BP_AppendentDrawComponent_C_SetCommandEnable::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SetCommandEnable, CallFunc_GetPlayerController_ReturnValue_1) == 0x000068, "Member 'BP_AppendentDrawComponent_C_SetCommandEnable::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SetCommandEnable, CallFunc_IsValid_ReturnValue_2) == 0x000070, "Member 'BP_AppendentDrawComponent_C_SetCommandEnable::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SetCommandEnable, K2Node_SwitchString_CmpSuccess) == 0x000071, "Member 'BP_AppendentDrawComponent_C_SetCommandEnable::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SetCommandEnable, CallFunc_Map_Remove_ReturnValue) == 0x000072, "Member 'BP_AppendentDrawComponent_C_SetCommandEnable::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");

// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.SetKnockBackDrawParam
// 0x0090 (0x0090 - 0x0000)
struct BP_AppendentDrawComponent_C_SetKnockBackDrawParam final
{
public:
	struct FVector                                ActorLocation_0;                                   // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FrontVector_0;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SideVector_0;                                      // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                UpVector_0;                                        // 0x0048(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PitchRotateVector_0;                               // 0x0060(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                YawRotateVector_0;                                 // 0x0078(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AppendentDrawComponent_C_SetKnockBackDrawParam) == 0x000008, "Wrong alignment on BP_AppendentDrawComponent_C_SetKnockBackDrawParam");
static_assert(sizeof(BP_AppendentDrawComponent_C_SetKnockBackDrawParam) == 0x000090, "Wrong size on BP_AppendentDrawComponent_C_SetKnockBackDrawParam");
static_assert(offsetof(BP_AppendentDrawComponent_C_SetKnockBackDrawParam, ActorLocation_0) == 0x000000, "Member 'BP_AppendentDrawComponent_C_SetKnockBackDrawParam::ActorLocation_0' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SetKnockBackDrawParam, FrontVector_0) == 0x000018, "Member 'BP_AppendentDrawComponent_C_SetKnockBackDrawParam::FrontVector_0' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SetKnockBackDrawParam, SideVector_0) == 0x000030, "Member 'BP_AppendentDrawComponent_C_SetKnockBackDrawParam::SideVector_0' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SetKnockBackDrawParam, UpVector_0) == 0x000048, "Member 'BP_AppendentDrawComponent_C_SetKnockBackDrawParam::UpVector_0' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SetKnockBackDrawParam, PitchRotateVector_0) == 0x000060, "Member 'BP_AppendentDrawComponent_C_SetKnockBackDrawParam::PitchRotateVector_0' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SetKnockBackDrawParam, YawRotateVector_0) == 0x000078, "Member 'BP_AppendentDrawComponent_C_SetKnockBackDrawParam::YawRotateVector_0' has a wrong offset!");

// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.SwitchKoratCharacterDebug
// 0x0128 (0x0128 - 0x0000)
struct BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug final
{
public:
	TArray<class FString>                         InDebugCommand;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 Lips;                                              // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CommandParamInt;                                   // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ParamIndex;                                        // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CommandParamFloat;                                 // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 DebugCommand;                                      // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsCurrentCommandEnable;                            // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_StringToDouble_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F[0x1];                                       // 0x006F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_StringToDouble_ReturnValue_1;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_1;           // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_StringToDouble_ReturnValue_2;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_StringToDouble_ReturnValue_3;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_5;             // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D7[0x1];                                       // 0x00D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_StringToDouble_ReturnValue_4;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_6;             // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_2;      // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_StringToDouble_ReturnValue_5;        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetDebugArmor_ReturnValue;                // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_7;             // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_8;             // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_Value;                           // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_113[0x1];                                      // 0x0113(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_KoratDebugArmorAddtiveReaction_InDebugArmorAddtiveReactionInterval_ImplicitCast; // 0x0114(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_KoratDrawHitArea_InDrawHitAreaTime_ImplicitCast; // 0x0118(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_KoratDrawHitPosition_InDrawHitPositionTime_ImplicitCast; // 0x011C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ChangeXAxisValue_InChangeValue_ImplicitCast; // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_KoratDrawAttackCollision_InDrawAttackCollisionTime_ImplicitCast; // 0x0124(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug) == 0x000008, "Wrong alignment on BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug");
static_assert(sizeof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug) == 0x000128, "Wrong size on BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, InDebugCommand) == 0x000000, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::InDebugCommand' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, Lips) == 0x000010, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::Lips' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CommandParamInt) == 0x000020, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CommandParamInt' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, ParamIndex) == 0x000024, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::ParamIndex' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CommandParamFloat) == 0x000028, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CommandParamFloat' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, DebugCommand) == 0x000030, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::DebugCommand' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, IsCurrentCommandEnable) == 0x000040, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::IsCurrentCommandEnable' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, Temp_int_Array_Index_Variable) == 0x000044, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x00004C, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Conv_StringToDouble_ReturnValue) == 0x000058, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Conv_StringToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Greater_IntInt_ReturnValue) == 0x000060, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Array_Length_ReturnValue_1) == 0x000064, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Conv_StringToInt_ReturnValue) == 0x000068, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00006C, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Not_PreBool_ReturnValue) == 0x00006D, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x00006E, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Array_Length_ReturnValue_2) == 0x000070, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Conv_StringToDouble_ReturnValue_1) == 0x000078, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Conv_StringToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000080, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Add_IntInt_ReturnValue_1) == 0x000088, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Array_Length_ReturnValue_3) == 0x00008C, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Conv_StringToInt_ReturnValue_1) == 0x000090, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Conv_StringToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Greater_IntInt_ReturnValue_3) == 0x000094, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Array_Length_ReturnValue_4) == 0x000098, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Conv_StringToDouble_ReturnValue_2) == 0x0000A0, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Conv_StringToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Greater_IntInt_ReturnValue_4) == 0x0000A8, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_IsValid_ReturnValue) == 0x0000A9, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Conv_StringToDouble_ReturnValue_3) == 0x0000B0, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Conv_StringToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Array_Length_ReturnValue_5) == 0x0000B8, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Greater_IntInt_ReturnValue_5) == 0x0000BC, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Greater_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Array_Length_ReturnValue_6) == 0x0000D0, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Less_IntInt_ReturnValue) == 0x0000D4, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000D5, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0000D6, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Conv_StringToDouble_ReturnValue_4) == 0x0000D8, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Conv_StringToDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Array_Length_ReturnValue_7) == 0x0000E0, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0000E8, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Greater_IntInt_ReturnValue_6) == 0x0000F0, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Greater_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_NotEqual_DoubleDouble_ReturnValue_2) == 0x0000F1, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_NotEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Conv_StringToDouble_ReturnValue_5) == 0x0000F8, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Conv_StringToDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Not_PreBool_ReturnValue_2) == 0x000100, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Not_PreBool_ReturnValue_3) == 0x000101, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Not_PreBool_ReturnValue_4) == 0x000102, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_SetDebugArmor_ReturnValue) == 0x000103, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_SetDebugArmor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Array_Length_ReturnValue_8) == 0x000104, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Greater_IntInt_ReturnValue_7) == 0x000108, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Greater_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, K2Node_SwitchString_CmpSuccess) == 0x000109, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Array_Length_ReturnValue_9) == 0x00010C, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Greater_IntInt_ReturnValue_8) == 0x000110, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Greater_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Map_Find_Value) == 0x000111, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_Map_Find_ReturnValue) == 0x000112, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_KoratDebugArmorAddtiveReaction_InDebugArmorAddtiveReactionInterval_ImplicitCast) == 0x000114, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_KoratDebugArmorAddtiveReaction_InDebugArmorAddtiveReactionInterval_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_KoratDrawHitArea_InDrawHitAreaTime_ImplicitCast) == 0x000118, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_KoratDrawHitArea_InDrawHitAreaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_KoratDrawHitPosition_InDrawHitPositionTime_ImplicitCast) == 0x00011C, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_KoratDrawHitPosition_InDrawHitPositionTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_ChangeXAxisValue_InChangeValue_ImplicitCast) == 0x000120, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_ChangeXAxisValue_InChangeValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug, CallFunc_KoratDrawAttackCollision_InDrawAttackCollisionTime_ImplicitCast) == 0x000124, "Member 'BP_AppendentDrawComponent_C_SwitchKoratCharacterDebug::CallFunc_KoratDrawAttackCollision_InDrawAttackCollisionTime_ImplicitCast' has a wrong offset!");

// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.UpdateDrawActorLocation
// 0x0030 (0x0030 - 0x0000)
struct BP_AppendentDrawComponent_C_UpdateDrawActorLocation final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AppendentDrawComponent_C_UpdateDrawActorLocation) == 0x000008, "Wrong alignment on BP_AppendentDrawComponent_C_UpdateDrawActorLocation");
static_assert(sizeof(BP_AppendentDrawComponent_C_UpdateDrawActorLocation) == 0x000030, "Wrong size on BP_AppendentDrawComponent_C_UpdateDrawActorLocation");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawActorLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'BP_AppendentDrawComponent_C_UpdateDrawActorLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawActorLocation, CallFunc_GetSocketLocation_ReturnValue) == 0x000018, "Member 'BP_AppendentDrawComponent_C_UpdateDrawActorLocation::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");

// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.UpdateDrawBlow
// 0x0034 (0x0034 - 0x0000)
struct BP_AppendentDrawComponent_C_UpdateDrawBlow final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AppendentDrawComponent_C_UpdateDrawBlow) == 0x000004, "Wrong alignment on BP_AppendentDrawComponent_C_UpdateDrawBlow");
static_assert(sizeof(BP_AppendentDrawComponent_C_UpdateDrawBlow) == 0x000034, "Wrong size on BP_AppendentDrawComponent_C_UpdateDrawBlow");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawBlow, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_AppendentDrawComponent_C_UpdateDrawBlow::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawBlow, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_AppendentDrawComponent_C_UpdateDrawBlow::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawBlow, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_AppendentDrawComponent_C_UpdateDrawBlow::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawBlow, CallFunc_Add_IntInt_ReturnValue_1) == 0x00000C, "Member 'BP_AppendentDrawComponent_C_UpdateDrawBlow::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawBlow, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'BP_AppendentDrawComponent_C_UpdateDrawBlow::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawBlow, CallFunc_Add_IntInt_ReturnValue_2) == 0x000014, "Member 'BP_AppendentDrawComponent_C_UpdateDrawBlow::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawBlow, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_AppendentDrawComponent_C_UpdateDrawBlow::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawBlow, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_AppendentDrawComponent_C_UpdateDrawBlow::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawBlow, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'BP_AppendentDrawComponent_C_UpdateDrawBlow::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawBlow, CallFunc_Array_Length_ReturnValue_1) == 0x000024, "Member 'BP_AppendentDrawComponent_C_UpdateDrawBlow::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawBlow, CallFunc_Less_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_AppendentDrawComponent_C_UpdateDrawBlow::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawBlow, CallFunc_Array_Length_ReturnValue_2) == 0x00002C, "Member 'BP_AppendentDrawComponent_C_UpdateDrawBlow::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawBlow, CallFunc_Less_IntInt_ReturnValue_2) == 0x000030, "Member 'BP_AppendentDrawComponent_C_UpdateDrawBlow::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.UpdateDrawKnockBack
// 0x0008 (0x0008 - 0x0000)
struct BP_AppendentDrawComponent_C_UpdateDrawKnockBack final
{
public:
	double                                        ArrowLen;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AppendentDrawComponent_C_UpdateDrawKnockBack) == 0x000008, "Wrong alignment on BP_AppendentDrawComponent_C_UpdateDrawKnockBack");
static_assert(sizeof(BP_AppendentDrawComponent_C_UpdateDrawKnockBack) == 0x000008, "Wrong size on BP_AppendentDrawComponent_C_UpdateDrawKnockBack");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawKnockBack, ArrowLen) == 0x000000, "Member 'BP_AppendentDrawComponent_C_UpdateDrawKnockBack::ArrowLen' has a wrong offset!");

// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.UpdateDrawLipsCharts
// 0x0058 (0x0058 - 0x0000)
struct BP_AppendentDrawComponent_C_UpdateDrawLipsCharts final
{
public:
	int32                                         CallFunc_GetPlayerCharacterNumber_OutPlayerNumber; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_AddDatapointNow_bSuccess;              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_AddDatapointNow_bSuccess_1;            // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_AddDatapointNow_bSuccess_2;            // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISSCharacterInterface> CallFunc_GetMouthInfo_self_CastInput;              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratLipsMouthInfo                    CallFunc_GetMouthInfo_ReturnValue;                 // 0x0018(0x0030)(NoDestructor)
	bool                                          CallFunc_BP_AddDatapointNow_bSuccess_3;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_AddDatapointNow_bSuccess_4;            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_AddDatapointNow_bSuccess_5;            // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x1];                                       // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BP_AddDatapointNow_Value_ImplicitCast;    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BP_AddDatapointNow_Value_ImplicitCast_1;  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BP_AddDatapointNow_Value_ImplicitCast_2;  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AppendentDrawComponent_C_UpdateDrawLipsCharts) == 0x000008, "Wrong alignment on BP_AppendentDrawComponent_C_UpdateDrawLipsCharts");
static_assert(sizeof(BP_AppendentDrawComponent_C_UpdateDrawLipsCharts) == 0x000058, "Wrong size on BP_AppendentDrawComponent_C_UpdateDrawLipsCharts");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawLipsCharts, CallFunc_GetPlayerCharacterNumber_OutPlayerNumber) == 0x000000, "Member 'BP_AppendentDrawComponent_C_UpdateDrawLipsCharts::CallFunc_GetPlayerCharacterNumber_OutPlayerNumber' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawLipsCharts, K2Node_SwitchInteger_CmpSuccess) == 0x000004, "Member 'BP_AppendentDrawComponent_C_UpdateDrawLipsCharts::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawLipsCharts, CallFunc_BP_AddDatapointNow_bSuccess) == 0x000005, "Member 'BP_AppendentDrawComponent_C_UpdateDrawLipsCharts::CallFunc_BP_AddDatapointNow_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawLipsCharts, CallFunc_BP_AddDatapointNow_bSuccess_1) == 0x000006, "Member 'BP_AppendentDrawComponent_C_UpdateDrawLipsCharts::CallFunc_BP_AddDatapointNow_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawLipsCharts, CallFunc_BP_AddDatapointNow_bSuccess_2) == 0x000007, "Member 'BP_AppendentDrawComponent_C_UpdateDrawLipsCharts::CallFunc_BP_AddDatapointNow_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawLipsCharts, CallFunc_GetMouthInfo_self_CastInput) == 0x000008, "Member 'BP_AppendentDrawComponent_C_UpdateDrawLipsCharts::CallFunc_GetMouthInfo_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawLipsCharts, CallFunc_GetMouthInfo_ReturnValue) == 0x000018, "Member 'BP_AppendentDrawComponent_C_UpdateDrawLipsCharts::CallFunc_GetMouthInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawLipsCharts, CallFunc_BP_AddDatapointNow_bSuccess_3) == 0x000048, "Member 'BP_AppendentDrawComponent_C_UpdateDrawLipsCharts::CallFunc_BP_AddDatapointNow_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawLipsCharts, CallFunc_BP_AddDatapointNow_bSuccess_4) == 0x000049, "Member 'BP_AppendentDrawComponent_C_UpdateDrawLipsCharts::CallFunc_BP_AddDatapointNow_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawLipsCharts, CallFunc_BP_AddDatapointNow_bSuccess_5) == 0x00004A, "Member 'BP_AppendentDrawComponent_C_UpdateDrawLipsCharts::CallFunc_BP_AddDatapointNow_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawLipsCharts, CallFunc_BP_AddDatapointNow_Value_ImplicitCast) == 0x00004C, "Member 'BP_AppendentDrawComponent_C_UpdateDrawLipsCharts::CallFunc_BP_AddDatapointNow_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawLipsCharts, CallFunc_BP_AddDatapointNow_Value_ImplicitCast_1) == 0x000050, "Member 'BP_AppendentDrawComponent_C_UpdateDrawLipsCharts::CallFunc_BP_AddDatapointNow_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawLipsCharts, CallFunc_BP_AddDatapointNow_Value_ImplicitCast_2) == 0x000054, "Member 'BP_AppendentDrawComponent_C_UpdateDrawLipsCharts::CallFunc_BP_AddDatapointNow_Value_ImplicitCast_2' has a wrong offset!");

// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.UpdateDrawMovement
// 0x0050 (0x0050 - 0x0000)
struct BP_AppendentDrawComponent_C_UpdateDrawMovement final
{
public:
	class FString                                 DrawString;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AppendentDrawComponent_C_UpdateDrawMovement) == 0x000008, "Wrong alignment on BP_AppendentDrawComponent_C_UpdateDrawMovement");
static_assert(sizeof(BP_AppendentDrawComponent_C_UpdateDrawMovement) == 0x000050, "Wrong size on BP_AppendentDrawComponent_C_UpdateDrawMovement");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawMovement, DrawString) == 0x000000, "Member 'BP_AppendentDrawComponent_C_UpdateDrawMovement::DrawString' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawMovement, CallFunc_GetVelocity_ReturnValue) == 0x000010, "Member 'BP_AppendentDrawComponent_C_UpdateDrawMovement::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawMovement, CallFunc_VSize_ReturnValue) == 0x000028, "Member 'BP_AppendentDrawComponent_C_UpdateDrawMovement::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawMovement, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000030, "Member 'BP_AppendentDrawComponent_C_UpdateDrawMovement::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawMovement, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'BP_AppendentDrawComponent_C_UpdateDrawMovement::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.UpdateDrawPlayMontage
// 0x0040 (0x0040 - 0x0000)
struct BP_AppendentDrawComponent_C_UpdateDrawPlayMontage final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_AnimBase_C>       K2Node_DynamicCast_AsBPI_Anim_Base;                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetSubActionAnimInstance_SubActionAnimInstance; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UABP_Sub_Action_C*                      K2Node_DynamicCast_AsABP_Sub_Action;               // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AppendentDrawComponent_C_UpdateDrawPlayMontage) == 0x000008, "Wrong alignment on BP_AppendentDrawComponent_C_UpdateDrawPlayMontage");
static_assert(sizeof(BP_AppendentDrawComponent_C_UpdateDrawPlayMontage) == 0x000040, "Wrong size on BP_AppendentDrawComponent_C_UpdateDrawPlayMontage");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawPlayMontage, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_AppendentDrawComponent_C_UpdateDrawPlayMontage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawPlayMontage, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_AppendentDrawComponent_C_UpdateDrawPlayMontage::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawPlayMontage, K2Node_DynamicCast_AsBPI_Anim_Base) == 0x000010, "Member 'BP_AppendentDrawComponent_C_UpdateDrawPlayMontage::K2Node_DynamicCast_AsBPI_Anim_Base' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawPlayMontage, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AppendentDrawComponent_C_UpdateDrawPlayMontage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawPlayMontage, CallFunc_GetSubActionAnimInstance_SubActionAnimInstance) == 0x000028, "Member 'BP_AppendentDrawComponent_C_UpdateDrawPlayMontage::CallFunc_GetSubActionAnimInstance_SubActionAnimInstance' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawPlayMontage, K2Node_DynamicCast_AsABP_Sub_Action) == 0x000030, "Member 'BP_AppendentDrawComponent_C_UpdateDrawPlayMontage::K2Node_DynamicCast_AsABP_Sub_Action' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawPlayMontage, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_AppendentDrawComponent_C_UpdateDrawPlayMontage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_AppendentDrawComponent.BP_AppendentDrawComponent_C.UpdateDrawRunningAction
// 0x0090 (0x0090 - 0x0000)
struct BP_AppendentDrawComponent_C_UpdateDrawRunningAction final
{
public:
	TArray<struct FKoratActionDataList>           RunningAction;                                     // 0x0000(0x0010)(Edit, BlueprintVisible)
	class FString                                 DrawString;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FKoratActionDataList>           CallFunc_GetCurrentRunningActionList_ReturnValue;  // 0x0028(0x0010)(ConstParm, ReferenceParm)
	struct FKoratActionDataList                   CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue_1;                        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AppendentDrawComponent_C_UpdateDrawRunningAction) == 0x000008, "Wrong alignment on BP_AppendentDrawComponent_C_UpdateDrawRunningAction");
static_assert(sizeof(BP_AppendentDrawComponent_C_UpdateDrawRunningAction) == 0x000090, "Wrong size on BP_AppendentDrawComponent_C_UpdateDrawRunningAction");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawRunningAction, RunningAction) == 0x000000, "Member 'BP_AppendentDrawComponent_C_UpdateDrawRunningAction::RunningAction' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawRunningAction, DrawString) == 0x000010, "Member 'BP_AppendentDrawComponent_C_UpdateDrawRunningAction::DrawString' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawRunningAction, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_AppendentDrawComponent_C_UpdateDrawRunningAction::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawRunningAction, CallFunc_GetCurrentRunningActionList_ReturnValue) == 0x000028, "Member 'BP_AppendentDrawComponent_C_UpdateDrawRunningAction::CallFunc_GetCurrentRunningActionList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawRunningAction, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_AppendentDrawComponent_C_UpdateDrawRunningAction::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawRunningAction, CallFunc_Len_ReturnValue) == 0x000040, "Member 'BP_AppendentDrawComponent_C_UpdateDrawRunningAction::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawRunningAction, CallFunc_Greater_IntInt_ReturnValue) == 0x000044, "Member 'BP_AppendentDrawComponent_C_UpdateDrawRunningAction::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawRunningAction, CallFunc_Conv_NameToString_ReturnValue) == 0x000048, "Member 'BP_AppendentDrawComponent_C_UpdateDrawRunningAction::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawRunningAction, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_AppendentDrawComponent_C_UpdateDrawRunningAction::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawRunningAction, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'BP_AppendentDrawComponent_C_UpdateDrawRunningAction::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawRunningAction, CallFunc_Concat_StrStr_ReturnValue) == 0x000060, "Member 'BP_AppendentDrawComponent_C_UpdateDrawRunningAction::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawRunningAction, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000070, "Member 'BP_AppendentDrawComponent_C_UpdateDrawRunningAction::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawRunningAction, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'BP_AppendentDrawComponent_C_UpdateDrawRunningAction::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawRunningAction, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'BP_AppendentDrawComponent_C_UpdateDrawRunningAction::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawRunningAction, CallFunc_Len_ReturnValue_1) == 0x000088, "Member 'BP_AppendentDrawComponent_C_UpdateDrawRunningAction::CallFunc_Len_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AppendentDrawComponent_C_UpdateDrawRunningAction, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00008C, "Member 'BP_AppendentDrawComponent_C_UpdateDrawRunningAction::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

}

