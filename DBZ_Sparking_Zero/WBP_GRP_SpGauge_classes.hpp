#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GRP_SpGauge

#include "Basic.hpp"

#include "SS_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_GRP_SpGauge.WBP_GRP_SpGauge_C
// 0x0048 (0x04E8 - 0x04A0)
class UWBP_GRP_SpGauge_C final : public USSSPGauge
{
public:
	class USpacer*                                Minus_EndObject;                                   // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Minus_Route_00;                                    // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Minus_StartObject;                                 // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OBJ_SpGaugeParts_C*                SpGauge_001;                                       // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OBJ_SpGaugeParts_C*                SpGauge_002;                                       // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OBJ_SpGaugeParts_C*                SpGauge_003;                                       // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OBJ_SpGaugeParts_C*                SpGauge_004;                                       // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OBJ_SpGaugeParts_C*                SpGauge_005;                                       // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_GRP_SpGaute_MinusEf_C*             WBP_GRP_SpGaute_MinusEf;                           // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_GRP_SpGauge_C">();
	}
	static class UWBP_GRP_SpGauge_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_GRP_SpGauge_C>();
	}
};
static_assert(alignof(UWBP_GRP_SpGauge_C) == 0x000008, "Wrong alignment on UWBP_GRP_SpGauge_C");
static_assert(sizeof(UWBP_GRP_SpGauge_C) == 0x0004E8, "Wrong size on UWBP_GRP_SpGauge_C");
static_assert(offsetof(UWBP_GRP_SpGauge_C, Minus_EndObject) == 0x0004A0, "Member 'UWBP_GRP_SpGauge_C::Minus_EndObject' has a wrong offset!");
static_assert(offsetof(UWBP_GRP_SpGauge_C, Minus_Route_00) == 0x0004A8, "Member 'UWBP_GRP_SpGauge_C::Minus_Route_00' has a wrong offset!");
static_assert(offsetof(UWBP_GRP_SpGauge_C, Minus_StartObject) == 0x0004B0, "Member 'UWBP_GRP_SpGauge_C::Minus_StartObject' has a wrong offset!");
static_assert(offsetof(UWBP_GRP_SpGauge_C, SpGauge_001) == 0x0004B8, "Member 'UWBP_GRP_SpGauge_C::SpGauge_001' has a wrong offset!");
static_assert(offsetof(UWBP_GRP_SpGauge_C, SpGauge_002) == 0x0004C0, "Member 'UWBP_GRP_SpGauge_C::SpGauge_002' has a wrong offset!");
static_assert(offsetof(UWBP_GRP_SpGauge_C, SpGauge_003) == 0x0004C8, "Member 'UWBP_GRP_SpGauge_C::SpGauge_003' has a wrong offset!");
static_assert(offsetof(UWBP_GRP_SpGauge_C, SpGauge_004) == 0x0004D0, "Member 'UWBP_GRP_SpGauge_C::SpGauge_004' has a wrong offset!");
static_assert(offsetof(UWBP_GRP_SpGauge_C, SpGauge_005) == 0x0004D8, "Member 'UWBP_GRP_SpGauge_C::SpGauge_005' has a wrong offset!");
static_assert(offsetof(UWBP_GRP_SpGauge_C, WBP_GRP_SpGaute_MinusEf) == 0x0004E0, "Member 'UWBP_GRP_SpGauge_C::WBP_GRP_SpGaute_MinusEf' has a wrong offset!");

}

