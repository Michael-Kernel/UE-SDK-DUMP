#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTD_BranchWithLevelProbability

#include "Basic.hpp"


namespace SDK::Params
{

// Function BTD_BranchWithLevelProbability.BTD_BranchWithLevelProbability_C.GetProbability
// 0x0048 (0x0048 - 0x0000)
struct BTD_BranchWithLevelProbability_C_GetProbability final
{
public:
	class AActor*                                 InOwnerActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          InSendLog;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OutProbability;                                    // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Result;                                            // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Log;                                               // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         LearningCount;                                     // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LvMaxProbability;                                  // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LvMinProbability;                                  // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LevelRate;                                         // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetupWorkMini_ReturnValue;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBranchWithLevelProbabilityCpp_ReturnValue; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_BranchWithLevelProbability_C_GetProbability) == 0x000008, "Wrong alignment on BTD_BranchWithLevelProbability_C_GetProbability");
static_assert(sizeof(BTD_BranchWithLevelProbability_C_GetProbability) == 0x000048, "Wrong size on BTD_BranchWithLevelProbability_C_GetProbability");
static_assert(offsetof(BTD_BranchWithLevelProbability_C_GetProbability, InOwnerActor) == 0x000000, "Member 'BTD_BranchWithLevelProbability_C_GetProbability::InOwnerActor' has a wrong offset!");
static_assert(offsetof(BTD_BranchWithLevelProbability_C_GetProbability, InSendLog) == 0x000008, "Member 'BTD_BranchWithLevelProbability_C_GetProbability::InSendLog' has a wrong offset!");
static_assert(offsetof(BTD_BranchWithLevelProbability_C_GetProbability, OutProbability) == 0x00000C, "Member 'BTD_BranchWithLevelProbability_C_GetProbability::OutProbability' has a wrong offset!");
static_assert(offsetof(BTD_BranchWithLevelProbability_C_GetProbability, Result) == 0x000010, "Member 'BTD_BranchWithLevelProbability_C_GetProbability::Result' has a wrong offset!");
static_assert(offsetof(BTD_BranchWithLevelProbability_C_GetProbability, Log) == 0x000018, "Member 'BTD_BranchWithLevelProbability_C_GetProbability::Log' has a wrong offset!");
static_assert(offsetof(BTD_BranchWithLevelProbability_C_GetProbability, LearningCount) == 0x000028, "Member 'BTD_BranchWithLevelProbability_C_GetProbability::LearningCount' has a wrong offset!");
static_assert(offsetof(BTD_BranchWithLevelProbability_C_GetProbability, LvMaxProbability) == 0x00002C, "Member 'BTD_BranchWithLevelProbability_C_GetProbability::LvMaxProbability' has a wrong offset!");
static_assert(offsetof(BTD_BranchWithLevelProbability_C_GetProbability, LvMinProbability) == 0x000030, "Member 'BTD_BranchWithLevelProbability_C_GetProbability::LvMinProbability' has a wrong offset!");
static_assert(offsetof(BTD_BranchWithLevelProbability_C_GetProbability, LevelRate) == 0x000038, "Member 'BTD_BranchWithLevelProbability_C_GetProbability::LevelRate' has a wrong offset!");
static_assert(offsetof(BTD_BranchWithLevelProbability_C_GetProbability, CallFunc_SetupWorkMini_ReturnValue) == 0x000040, "Member 'BTD_BranchWithLevelProbability_C_GetProbability::CallFunc_SetupWorkMini_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_BranchWithLevelProbability_C_GetProbability, CallFunc_GetBranchWithLevelProbabilityCpp_ReturnValue) == 0x000044, "Member 'BTD_BranchWithLevelProbability_C_GetProbability::CallFunc_GetBranchWithLevelProbabilityCpp_ReturnValue' has a wrong offset!");

// Function BTD_BranchWithLevelProbability.BTD_BranchWithLevelProbability_C.PerformConditionCheck
// 0x0028 (0x0028 - 0x0000)
struct BTD_BranchWithLevelProbability_C_PerformConditionCheck final
{
public:
	class AActor*                                 OwnerActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                FirstSiblingDecorator;                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_AiBTDecoratorUtilityComponent_C*    DecoratorUtilityComponent_0;                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bResult;                                           // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PerformConditionCheck_ReturnValue;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_BranchWithLevelProbability_C_PerformConditionCheck) == 0x000008, "Wrong alignment on BTD_BranchWithLevelProbability_C_PerformConditionCheck");
static_assert(sizeof(BTD_BranchWithLevelProbability_C_PerformConditionCheck) == 0x000028, "Wrong size on BTD_BranchWithLevelProbability_C_PerformConditionCheck");
static_assert(offsetof(BTD_BranchWithLevelProbability_C_PerformConditionCheck, OwnerActor) == 0x000000, "Member 'BTD_BranchWithLevelProbability_C_PerformConditionCheck::OwnerActor' has a wrong offset!");
static_assert(offsetof(BTD_BranchWithLevelProbability_C_PerformConditionCheck, ReturnValue) == 0x000008, "Member 'BTD_BranchWithLevelProbability_C_PerformConditionCheck::ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_BranchWithLevelProbability_C_PerformConditionCheck, FirstSiblingDecorator) == 0x000010, "Member 'BTD_BranchWithLevelProbability_C_PerformConditionCheck::FirstSiblingDecorator' has a wrong offset!");
static_assert(offsetof(BTD_BranchWithLevelProbability_C_PerformConditionCheck, DecoratorUtilityComponent_0) == 0x000018, "Member 'BTD_BranchWithLevelProbability_C_PerformConditionCheck::DecoratorUtilityComponent_0' has a wrong offset!");
static_assert(offsetof(BTD_BranchWithLevelProbability_C_PerformConditionCheck, bResult) == 0x000020, "Member 'BTD_BranchWithLevelProbability_C_PerformConditionCheck::bResult' has a wrong offset!");
static_assert(offsetof(BTD_BranchWithLevelProbability_C_PerformConditionCheck, CallFunc_PerformConditionCheck_ReturnValue) == 0x000021, "Member 'BTD_BranchWithLevelProbability_C_PerformConditionCheck::CallFunc_PerformConditionCheck_ReturnValue' has a wrong offset!");

// Function BTD_BranchWithLevelProbability.BTD_BranchWithLevelProbability_C.PublicPerformConditionCheck
// 0x0010 (0x0010 - 0x0000)
struct BTD_BranchWithLevelProbability_C_PublicPerformConditionCheck final
{
public:
	class AActor*                                 InOwnerActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_BranchWithLevelProbability_C_PublicPerformConditionCheck) == 0x000008, "Wrong alignment on BTD_BranchWithLevelProbability_C_PublicPerformConditionCheck");
static_assert(sizeof(BTD_BranchWithLevelProbability_C_PublicPerformConditionCheck) == 0x000010, "Wrong size on BTD_BranchWithLevelProbability_C_PublicPerformConditionCheck");
static_assert(offsetof(BTD_BranchWithLevelProbability_C_PublicPerformConditionCheck, InOwnerActor) == 0x000000, "Member 'BTD_BranchWithLevelProbability_C_PublicPerformConditionCheck::InOwnerActor' has a wrong offset!");
static_assert(offsetof(BTD_BranchWithLevelProbability_C_PublicPerformConditionCheck, ReturnValue) == 0x000008, "Member 'BTD_BranchWithLevelProbability_C_PublicPerformConditionCheck::ReturnValue' has a wrong offset!");

}

