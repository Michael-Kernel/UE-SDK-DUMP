#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPCHR_0000_40_00

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_Character_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPCHR_0000_40_00.BPCHR_0000_40_00_C
// 0x0120 (0x3E50 - 0x3D30)
class ABPCHR_0000_40_00_C final : public ABP_Character_C
{
public:
	uint8                                         Pad_3D22[0x6];                                     // 0x3D22(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BPCHR_0000_40_00_C;                 // 0x3D28(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 Shadow_Acce;                                       // 0x3D30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Shadow_Skin;                                       // 0x3D38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Shadow_Gloves;                                     // 0x3D40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Shadow_Boots;                                      // 0x3D48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Shadow_Cloth;                                      // 0x3D50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Shadow_Face;                                       // 0x3D58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Shadow_Hair;                                       // 0x3D60(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPVC_0000_C*                           BPVC_0000;                                         // 0x3D68(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Acce;                                              // 0x3D70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Gloves;                                            // 0x3D78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Boots;                                             // 0x3D80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Cloth;                                             // 0x3D88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 FACE;                                              // 0x3D90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 HAIR;                                              // 0x3D98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicalAnimationComponent*            PhysicalAnimation;                                 // 0x3DA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Skin;                                              // 0x3DA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_ToonComponent_C*                    BP_ToonComponent;                                  // 0x3DB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        BaseTurnRate;                                      // 0x3DB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BaseLookUpRate;                                    // 0x3DC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ShellColor;                                        // 0x3DC8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x3DD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BeAttacked;                                        // 0x3DE0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPhysicsBlendWeightOut;                           // 0x3DE1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DE2[0x6];                                     // 0x3DE2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        PhysicsBlendWeight;                                // 0x3DE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RandomPhysicalStrengthMultiplayer;                 // 0x3DF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PhysicsWeight;                                     // 0x3DF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   HairRoot;                                          // 0x3E00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         PhysicsMeshNameArray;                              // 0x3E08(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        EYE_POSITION_U_Right;                              // 0x3E18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        EYE_POSITION_V_Right;                              // 0x3E20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        EYE_SCALE_Right;                                   // 0x3E28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        EYE_POSITION_U_Left;                               // 0x3E30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        EYE_POSITION_V_Left;                               // 0x3E38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        EYE_SCALE_Left;                                    // 0x3E40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BPCHR_0000_40_00(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds_0);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPCHR_0000_40_00_C">();
	}
	static class ABPCHR_0000_40_00_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABPCHR_0000_40_00_C>();
	}
};
static_assert(alignof(ABPCHR_0000_40_00_C) == 0x000010, "Wrong alignment on ABPCHR_0000_40_00_C");
static_assert(sizeof(ABPCHR_0000_40_00_C) == 0x003E50, "Wrong size on ABPCHR_0000_40_00_C");
static_assert(offsetof(ABPCHR_0000_40_00_C, UberGraphFrame_BPCHR_0000_40_00_C) == 0x003D28, "Member 'ABPCHR_0000_40_00_C::UberGraphFrame_BPCHR_0000_40_00_C' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, Shadow_Acce) == 0x003D30, "Member 'ABPCHR_0000_40_00_C::Shadow_Acce' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, Shadow_Skin) == 0x003D38, "Member 'ABPCHR_0000_40_00_C::Shadow_Skin' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, Shadow_Gloves) == 0x003D40, "Member 'ABPCHR_0000_40_00_C::Shadow_Gloves' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, Shadow_Boots) == 0x003D48, "Member 'ABPCHR_0000_40_00_C::Shadow_Boots' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, Shadow_Cloth) == 0x003D50, "Member 'ABPCHR_0000_40_00_C::Shadow_Cloth' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, Shadow_Face) == 0x003D58, "Member 'ABPCHR_0000_40_00_C::Shadow_Face' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, Shadow_Hair) == 0x003D60, "Member 'ABPCHR_0000_40_00_C::Shadow_Hair' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, BPVC_0000) == 0x003D68, "Member 'ABPCHR_0000_40_00_C::BPVC_0000' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, Acce) == 0x003D70, "Member 'ABPCHR_0000_40_00_C::Acce' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, Gloves) == 0x003D78, "Member 'ABPCHR_0000_40_00_C::Gloves' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, Boots) == 0x003D80, "Member 'ABPCHR_0000_40_00_C::Boots' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, Cloth) == 0x003D88, "Member 'ABPCHR_0000_40_00_C::Cloth' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, FACE) == 0x003D90, "Member 'ABPCHR_0000_40_00_C::FACE' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, HAIR) == 0x003D98, "Member 'ABPCHR_0000_40_00_C::HAIR' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, PhysicalAnimation) == 0x003DA0, "Member 'ABPCHR_0000_40_00_C::PhysicalAnimation' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, Skin) == 0x003DA8, "Member 'ABPCHR_0000_40_00_C::Skin' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, BP_ToonComponent) == 0x003DB0, "Member 'ABPCHR_0000_40_00_C::BP_ToonComponent' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, BaseTurnRate) == 0x003DB8, "Member 'ABPCHR_0000_40_00_C::BaseTurnRate' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, BaseLookUpRate) == 0x003DC0, "Member 'ABPCHR_0000_40_00_C::BaseLookUpRate' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, ShellColor) == 0x003DC8, "Member 'ABPCHR_0000_40_00_C::ShellColor' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, BoneName) == 0x003DD8, "Member 'ABPCHR_0000_40_00_C::BoneName' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, BeAttacked) == 0x003DE0, "Member 'ABPCHR_0000_40_00_C::BeAttacked' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, IsPhysicsBlendWeightOut) == 0x003DE1, "Member 'ABPCHR_0000_40_00_C::IsPhysicsBlendWeightOut' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, PhysicsBlendWeight) == 0x003DE8, "Member 'ABPCHR_0000_40_00_C::PhysicsBlendWeight' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, RandomPhysicalStrengthMultiplayer) == 0x003DF0, "Member 'ABPCHR_0000_40_00_C::RandomPhysicalStrengthMultiplayer' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, PhysicsWeight) == 0x003DF8, "Member 'ABPCHR_0000_40_00_C::PhysicsWeight' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, HairRoot) == 0x003E00, "Member 'ABPCHR_0000_40_00_C::HairRoot' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, PhysicsMeshNameArray) == 0x003E08, "Member 'ABPCHR_0000_40_00_C::PhysicsMeshNameArray' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, EYE_POSITION_U_Right) == 0x003E18, "Member 'ABPCHR_0000_40_00_C::EYE_POSITION_U_Right' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, EYE_POSITION_V_Right) == 0x003E20, "Member 'ABPCHR_0000_40_00_C::EYE_POSITION_V_Right' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, EYE_SCALE_Right) == 0x003E28, "Member 'ABPCHR_0000_40_00_C::EYE_SCALE_Right' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, EYE_POSITION_U_Left) == 0x003E30, "Member 'ABPCHR_0000_40_00_C::EYE_POSITION_U_Left' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, EYE_POSITION_V_Left) == 0x003E38, "Member 'ABPCHR_0000_40_00_C::EYE_POSITION_V_Left' has a wrong offset!");
static_assert(offsetof(ABPCHR_0000_40_00_C, EYE_SCALE_Left) == 0x003E40, "Member 'ABPCHR_0000_40_00_C::EYE_SCALE_Left' has a wrong offset!");

}

