#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_CharacterHitCollision

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SS_structs.hpp"


namespace SDK::Params
{

// Function BPI_CharacterHitCollision.BPI_CharacterHitCollision_C.AddHitAttackCollisionData
// 0x0B60 (0x0B60 - 0x0000)
struct BPI_CharacterHitCollision_C_AddHitAttackCollisionData final
{
public:
	const class ABP_AttackCollision_C*            InHitAttackCollision;                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratGaveDamageParameter              InGaveDamageParam;                                 // 0x0010(0x0B50)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BPI_CharacterHitCollision_C_AddHitAttackCollisionData) == 0x000010, "Wrong alignment on BPI_CharacterHitCollision_C_AddHitAttackCollisionData");
static_assert(sizeof(BPI_CharacterHitCollision_C_AddHitAttackCollisionData) == 0x000B60, "Wrong size on BPI_CharacterHitCollision_C_AddHitAttackCollisionData");
static_assert(offsetof(BPI_CharacterHitCollision_C_AddHitAttackCollisionData, InHitAttackCollision) == 0x000000, "Member 'BPI_CharacterHitCollision_C_AddHitAttackCollisionData::InHitAttackCollision' has a wrong offset!");
static_assert(offsetof(BPI_CharacterHitCollision_C_AddHitAttackCollisionData, InGaveDamageParam) == 0x000010, "Member 'BPI_CharacterHitCollision_C_AddHitAttackCollisionData::InGaveDamageParam' has a wrong offset!");

// Function BPI_CharacterHitCollision.BPI_CharacterHitCollision_C.OccurOffset
// 0x0B40 (0x0B40 - 0x0000)
struct BPI_CharacterHitCollision_C_OccurOffset final
{
public:
	const class ASSCharacter*                     InOpponentOffsetCharacter;                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	const class ABP_AttackCollision_C*            InHitAttackCollision;                              // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	struct FKoratActionDataList                   InAction;                                          // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	EKoratOffsetType                              InOffsetType;                                      // 0x0018(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             InOffsetLocation;                                  // 0x0020(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratReceivedDamageParameter          InReceivedDamageParameter;                         // 0x0080(0x0AC0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BPI_CharacterHitCollision_C_OccurOffset) == 0x000010, "Wrong alignment on BPI_CharacterHitCollision_C_OccurOffset");
static_assert(sizeof(BPI_CharacterHitCollision_C_OccurOffset) == 0x000B40, "Wrong size on BPI_CharacterHitCollision_C_OccurOffset");
static_assert(offsetof(BPI_CharacterHitCollision_C_OccurOffset, InOpponentOffsetCharacter) == 0x000000, "Member 'BPI_CharacterHitCollision_C_OccurOffset::InOpponentOffsetCharacter' has a wrong offset!");
static_assert(offsetof(BPI_CharacterHitCollision_C_OccurOffset, InHitAttackCollision) == 0x000008, "Member 'BPI_CharacterHitCollision_C_OccurOffset::InHitAttackCollision' has a wrong offset!");
static_assert(offsetof(BPI_CharacterHitCollision_C_OccurOffset, InAction) == 0x000010, "Member 'BPI_CharacterHitCollision_C_OccurOffset::InAction' has a wrong offset!");
static_assert(offsetof(BPI_CharacterHitCollision_C_OccurOffset, InOffsetType) == 0x000018, "Member 'BPI_CharacterHitCollision_C_OccurOffset::InOffsetType' has a wrong offset!");
static_assert(offsetof(BPI_CharacterHitCollision_C_OccurOffset, InOffsetLocation) == 0x000020, "Member 'BPI_CharacterHitCollision_C_OccurOffset::InOffsetLocation' has a wrong offset!");
static_assert(offsetof(BPI_CharacterHitCollision_C_OccurOffset, InReceivedDamageParameter) == 0x000080, "Member 'BPI_CharacterHitCollision_C_OccurOffset::InReceivedDamageParameter' has a wrong offset!");

}

