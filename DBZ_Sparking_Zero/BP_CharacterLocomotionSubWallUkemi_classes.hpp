#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterLocomotionSubWallUkemi

#include "Basic.hpp"

#include "ECharacterLocomotionEventType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SS_structs.hpp"
#include "BP_CharacterLocomotionSubBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CharacterLocomotionSubWallUkemi.BP_CharacterLocomotionSubWallUkemi_C
// 0x0370 (0x03D0 - 0x0060)
class UBP_CharacterLocomotionSubWallUkemi_C final : public UBP_CharacterLocomotionSubBase_C
{
public:
	EKoratWallUkemiState                          WallUkemiStatus;                                   // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWallUkemiInput;                                  // 0x0061(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWallUkemiTimeOver;                               // 0x0062(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        WallUkemiBlowTimer;                                // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratHitBackMovementData              WallUkemiHitBackData;                              // 0x0070(0x02E0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                WallUkemiKnockBackVector;                          // 0x0350(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratBlowReactionWallUkemiMovementParameter WallUkemiMoveParameter;                            // 0x0368(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        WallUkemiMaxAddMoveTime;                           // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WallUkemiAddMoveTimer;                             // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               WallUkemiRotation;                                 // 0x0390(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Debug___e_8k__;                                    // 0x03A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                WallUkemiHitNormal;                                // 0x03B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Sn____o__hWfqF;                                    // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Check(class UBP_CharacterLocomotionComponent_C* InLocomotionComponent, bool* CanStart);
	void CheckAndStart(class UBP_CharacterLocomotionComponent_C* InLocomotionComponent, bool InInSkip, bool* IsStarted);
	void CheckWallUkemiInput(bool* IsInputRequest);
	void GetLocomotionDetailStatus(EKoratCharacterLocomotionDetailStatus* LocomotionDetailStatus);
	void GetRunningAction(struct FKoratActionDataList* RunningAction);
	void GetRunningSection(class FName* RunningSection);
	void GetWallUkemiParameter(double* E_____B_, double* E___B_B_, double* ______Y____gn__B_, struct FKoratBlowReactionWallUkemiMovementParameter* _______);
	void InitializeWallUkemiInput();
	void IsEnableAction(bool* IsEnable);
	void SetUpWallUkemiMovement_Parameter(EKoratWallUkemiState InWallUkemiStatus);
	void SetWallUkemiStatus(EKoratWallUkemiState InWallUkemiStatus, EKoratCharacterActionFinishReason InActionFinishReason);
	void Start(class UBP_CharacterLocomotionComponent_C* InLocomotionComponent, bool InInSkip, bool* NewParam);
	void Update(class UBP_CharacterLocomotionComponent_C* InLocomotionComponent, ECharacterLocomotionEventType InEventType, double InDeltaSeconds, bool* NewParam);
	void UpdateWallUkemiInput(double InDeltaSeconds);
	void UpdateWallUkemiMove(double InDeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CharacterLocomotionSubWallUkemi_C">();
	}
	static class UBP_CharacterLocomotionSubWallUkemi_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_CharacterLocomotionSubWallUkemi_C>();
	}
};
static_assert(alignof(UBP_CharacterLocomotionSubWallUkemi_C) == 0x000008, "Wrong alignment on UBP_CharacterLocomotionSubWallUkemi_C");
static_assert(sizeof(UBP_CharacterLocomotionSubWallUkemi_C) == 0x0003D0, "Wrong size on UBP_CharacterLocomotionSubWallUkemi_C");
static_assert(offsetof(UBP_CharacterLocomotionSubWallUkemi_C, WallUkemiStatus) == 0x000060, "Member 'UBP_CharacterLocomotionSubWallUkemi_C::WallUkemiStatus' has a wrong offset!");
static_assert(offsetof(UBP_CharacterLocomotionSubWallUkemi_C, IsWallUkemiInput) == 0x000061, "Member 'UBP_CharacterLocomotionSubWallUkemi_C::IsWallUkemiInput' has a wrong offset!");
static_assert(offsetof(UBP_CharacterLocomotionSubWallUkemi_C, IsWallUkemiTimeOver) == 0x000062, "Member 'UBP_CharacterLocomotionSubWallUkemi_C::IsWallUkemiTimeOver' has a wrong offset!");
static_assert(offsetof(UBP_CharacterLocomotionSubWallUkemi_C, WallUkemiBlowTimer) == 0x000068, "Member 'UBP_CharacterLocomotionSubWallUkemi_C::WallUkemiBlowTimer' has a wrong offset!");
static_assert(offsetof(UBP_CharacterLocomotionSubWallUkemi_C, WallUkemiHitBackData) == 0x000070, "Member 'UBP_CharacterLocomotionSubWallUkemi_C::WallUkemiHitBackData' has a wrong offset!");
static_assert(offsetof(UBP_CharacterLocomotionSubWallUkemi_C, WallUkemiKnockBackVector) == 0x000350, "Member 'UBP_CharacterLocomotionSubWallUkemi_C::WallUkemiKnockBackVector' has a wrong offset!");
static_assert(offsetof(UBP_CharacterLocomotionSubWallUkemi_C, WallUkemiMoveParameter) == 0x000368, "Member 'UBP_CharacterLocomotionSubWallUkemi_C::WallUkemiMoveParameter' has a wrong offset!");
static_assert(offsetof(UBP_CharacterLocomotionSubWallUkemi_C, WallUkemiMaxAddMoveTime) == 0x000380, "Member 'UBP_CharacterLocomotionSubWallUkemi_C::WallUkemiMaxAddMoveTime' has a wrong offset!");
static_assert(offsetof(UBP_CharacterLocomotionSubWallUkemi_C, WallUkemiAddMoveTimer) == 0x000388, "Member 'UBP_CharacterLocomotionSubWallUkemi_C::WallUkemiAddMoveTimer' has a wrong offset!");
static_assert(offsetof(UBP_CharacterLocomotionSubWallUkemi_C, WallUkemiRotation) == 0x000390, "Member 'UBP_CharacterLocomotionSubWallUkemi_C::WallUkemiRotation' has a wrong offset!");
static_assert(offsetof(UBP_CharacterLocomotionSubWallUkemi_C, Debug___e_8k__) == 0x0003A8, "Member 'UBP_CharacterLocomotionSubWallUkemi_C::Debug___e_8k__' has a wrong offset!");
static_assert(offsetof(UBP_CharacterLocomotionSubWallUkemi_C, WallUkemiHitNormal) == 0x0003B0, "Member 'UBP_CharacterLocomotionSubWallUkemi_C::WallUkemiHitNormal' has a wrong offset!");
static_assert(offsetof(UBP_CharacterLocomotionSubWallUkemi_C, Sn____o__hWfqF) == 0x0003C8, "Member 'UBP_CharacterLocomotionSubWallUkemi_C::Sn____o__hWfqF' has a wrong offset!");

}

