#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HitCollisionComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SS_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HitCollisionComponent.BP_HitCollisionComponent_C
// 0x0B80 (0x0C20 - 0x00A0)
class UBP_HitCollisionComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class ABP_AttackCollision_C*>          GaveDamageAttackCollisionList;                     // 0x00A8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<struct FKoratGaveDamageParameter>      GaveDamageParamList;                               // 0x00B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsOffset;                                          // 0x00C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 NewVar_0;                                          // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	EKoratOffsetType                              OffsetType;                                        // 0x00D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             OffsetTransform;                                   // 0x00E0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratActionDataList                   OffsetAction;                                      // 0x0140(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_AttackCollision_C*                  OffsetInAttackCollision;                           // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ASSCharacter*                           OffsetOpponentCharacter;                           // 0x0150(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FKoratReceivedDamageParameter          OffsetRecivedDamageParameter;                      // 0x0158(0x0AC0)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void AddHitAttackCollisionData(const class ABP_AttackCollision_C*& InHitAttackCollision, const struct FKoratGaveDamageParameter& InGaveDamageParam);
	void AddHitData(class ABP_AttackCollision_C*& InHitAttackCollision, struct FKoratGaveDamageParameter& InGaveDamageParam);
	void ExecuteUbergraph_BP_HitCollisionComponent(int32 EntryPoint);
	double GetDrawHitPositionTime(class ASSCharacter* InCharacter);
	void OccurOffset(const class ASSCharacter*& InOpponentOffsetCharacter, const class ABP_AttackCollision_C*& InHitAttackCollision, const struct FKoratActionDataList& InAction, const EKoratOffsetType& InOffsetType, const struct FTransform& InOffsetLocation, const struct FKoratReceivedDamageParameter& InReceivedDamageParameter);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void SetOffset(class ASSCharacter*& InOpponentOffsetCharacter, class ABP_AttackCollision_C*& InHitAttackCollision, struct FKoratActionDataList& InAction, EKoratOffsetType& InOffsetType, struct FTransform& InOffsetTransform, struct FKoratReceivedDamageParameter& InReceivedDamageParameter);
	void UpdateHitData();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HitCollisionComponent_C">();
	}
	static class UBP_HitCollisionComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_HitCollisionComponent_C>();
	}
};
static_assert(alignof(UBP_HitCollisionComponent_C) == 0x000010, "Wrong alignment on UBP_HitCollisionComponent_C");
static_assert(sizeof(UBP_HitCollisionComponent_C) == 0x000C20, "Wrong size on UBP_HitCollisionComponent_C");
static_assert(offsetof(UBP_HitCollisionComponent_C, UberGraphFrame) == 0x0000A0, "Member 'UBP_HitCollisionComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_HitCollisionComponent_C, GaveDamageAttackCollisionList) == 0x0000A8, "Member 'UBP_HitCollisionComponent_C::GaveDamageAttackCollisionList' has a wrong offset!");
static_assert(offsetof(UBP_HitCollisionComponent_C, GaveDamageParamList) == 0x0000B8, "Member 'UBP_HitCollisionComponent_C::GaveDamageParamList' has a wrong offset!");
static_assert(offsetof(UBP_HitCollisionComponent_C, IsOffset) == 0x0000C8, "Member 'UBP_HitCollisionComponent_C::IsOffset' has a wrong offset!");
static_assert(offsetof(UBP_HitCollisionComponent_C, NewVar_0) == 0x0000D0, "Member 'UBP_HitCollisionComponent_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(UBP_HitCollisionComponent_C, OffsetType) == 0x0000D8, "Member 'UBP_HitCollisionComponent_C::OffsetType' has a wrong offset!");
static_assert(offsetof(UBP_HitCollisionComponent_C, OffsetTransform) == 0x0000E0, "Member 'UBP_HitCollisionComponent_C::OffsetTransform' has a wrong offset!");
static_assert(offsetof(UBP_HitCollisionComponent_C, OffsetAction) == 0x000140, "Member 'UBP_HitCollisionComponent_C::OffsetAction' has a wrong offset!");
static_assert(offsetof(UBP_HitCollisionComponent_C, OffsetInAttackCollision) == 0x000148, "Member 'UBP_HitCollisionComponent_C::OffsetInAttackCollision' has a wrong offset!");
static_assert(offsetof(UBP_HitCollisionComponent_C, OffsetOpponentCharacter) == 0x000150, "Member 'UBP_HitCollisionComponent_C::OffsetOpponentCharacter' has a wrong offset!");
static_assert(offsetof(UBP_HitCollisionComponent_C, OffsetRecivedDamageParameter) == 0x000158, "Member 'UBP_HitCollisionComponent_C::OffsetRecivedDamageParameter' has a wrong offset!");

}

