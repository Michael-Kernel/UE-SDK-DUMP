#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTD_IsActionTime

#include "Basic.hpp"

#include "BTD_Base_classes.hpp"
#include "SS_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTD_IsActionTime.BTD_IsActionTime_C
// 0x0028 (0x0128 - 0x0100)
class UBTD_IsActionTime_C final : public UBTD_Base_C
{
public:
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           _________;                                         // 0x0100(0x0010)(Edit, BlueprintVisible)
	bool                                          __n_____K;                                         // 0x0110(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        _____HfD_K;                                        // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PrevElapsedTime;                                   // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void GetActionElapsedTime(double* OutElapsedTime);
	bool PerformConditionCheck(class AActor* OwnerActor);
	bool PublicPerformConditionCheck(class AActor* InOwnerActor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTD_IsActionTime_C">();
	}
	static class UBTD_IsActionTime_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTD_IsActionTime_C>();
	}
};
static_assert(alignof(UBTD_IsActionTime_C) == 0x000008, "Wrong alignment on UBTD_IsActionTime_C");
static_assert(sizeof(UBTD_IsActionTime_C) == 0x000128, "Wrong size on UBTD_IsActionTime_C");
static_assert(offsetof(UBTD_IsActionTime_C, _________) == 0x000100, "Member 'UBTD_IsActionTime_C::_________' has a wrong offset!");
static_assert(offsetof(UBTD_IsActionTime_C, __n_____K) == 0x000110, "Member 'UBTD_IsActionTime_C::__n_____K' has a wrong offset!");
static_assert(offsetof(UBTD_IsActionTime_C, _____HfD_K) == 0x000118, "Member 'UBTD_IsActionTime_C::_____HfD_K' has a wrong offset!");
static_assert(offsetof(UBTD_IsActionTime_C, PrevElapsedTime) == 0x000120, "Member 'UBTD_IsActionTime_C::PrevElapsedTime' has a wrong offset!");

}

