#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_ActionCommand

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_classes.hpp"
#include "SS_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTT_ActionCommand.BTT_ActionCommand_C
// 0x0048 (0x00F0 - 0x00A8)
class UBTT_ActionCommand_C : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FName                                   ActionCommandId;                                   // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCannotInterrupt;                                  // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSBattleAIController*                  OwnerController;                                   // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                   LogMsg;                                            // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StartIndex;                                        // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bStartCancel;                                      // 0x00D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSCharacter*                           ControlledCharacter;                               // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UBP_AiBTDecoratorUtilityComponent_C*    DecoratorUtilityComponent;                         // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bForced;                                           // 0x00E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTT_ActionCommand(int32 EntryPoint);
	void GetRandom(class USSRandom** Random);
	void InputCommand(class FName InCommandId, bool* OutSuccess);
	void ReceiveExecuteAI(class AAIController* OwnerController_0, class APawn* ControlledPawn);
	void ReceiveTickAI(class AAIController* OwnerController_0, class APawn* ControlledPawn, float DeltaSeconds);
	void Setup(class AAIController* InOwnerController, class APawn* InControlled_Pawn, bool* OutResult);
	void UpdateCommand(class USSAiPadGenerationComponent* InAiPadGenerationComponent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTT_ActionCommand_C">();
	}
	static class UBTT_ActionCommand_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTT_ActionCommand_C>();
	}
};
static_assert(alignof(UBTT_ActionCommand_C) == 0x000008, "Wrong alignment on UBTT_ActionCommand_C");
static_assert(sizeof(UBTT_ActionCommand_C) == 0x0000F0, "Wrong size on UBTT_ActionCommand_C");
static_assert(offsetof(UBTT_ActionCommand_C, UberGraphFrame) == 0x0000A8, "Member 'UBTT_ActionCommand_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTT_ActionCommand_C, ActionCommandId) == 0x0000B0, "Member 'UBTT_ActionCommand_C::ActionCommandId' has a wrong offset!");
static_assert(offsetof(UBTT_ActionCommand_C, bCannotInterrupt) == 0x0000B8, "Member 'UBTT_ActionCommand_C::bCannotInterrupt' has a wrong offset!");
static_assert(offsetof(UBTT_ActionCommand_C, OwnerController) == 0x0000C0, "Member 'UBTT_ActionCommand_C::OwnerController' has a wrong offset!");
static_assert(offsetof(UBTT_ActionCommand_C, LogMsg) == 0x0000C8, "Member 'UBTT_ActionCommand_C::LogMsg' has a wrong offset!");
static_assert(offsetof(UBTT_ActionCommand_C, StartIndex) == 0x0000D0, "Member 'UBTT_ActionCommand_C::StartIndex' has a wrong offset!");
static_assert(offsetof(UBTT_ActionCommand_C, bStartCancel) == 0x0000D4, "Member 'UBTT_ActionCommand_C::bStartCancel' has a wrong offset!");
static_assert(offsetof(UBTT_ActionCommand_C, ControlledCharacter) == 0x0000D8, "Member 'UBTT_ActionCommand_C::ControlledCharacter' has a wrong offset!");
static_assert(offsetof(UBTT_ActionCommand_C, DecoratorUtilityComponent) == 0x0000E0, "Member 'UBTT_ActionCommand_C::DecoratorUtilityComponent' has a wrong offset!");
static_assert(offsetof(UBTT_ActionCommand_C, bForced) == 0x0000E8, "Member 'UBTT_ActionCommand_C::bForced' has a wrong offset!");

}

