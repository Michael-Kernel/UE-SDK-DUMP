#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_RandomImpact

#include "Basic.hpp"

#include "SS_structs.hpp"


namespace SDK::Params
{

// Function BTT_RandomImpact.BTT_RandomImpact_C.ExecuteUbergraph_BTT_RandomImpact
// 0x0018 (0x0018 - 0x0000)
struct BTT_RandomImpact_C_ExecuteUbergraph_BTT_RandomImpact final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_RandomImpact_C_ExecuteUbergraph_BTT_RandomImpact) == 0x000008, "Wrong alignment on BTT_RandomImpact_C_ExecuteUbergraph_BTT_RandomImpact");
static_assert(sizeof(BTT_RandomImpact_C_ExecuteUbergraph_BTT_RandomImpact) == 0x000018, "Wrong size on BTT_RandomImpact_C_ExecuteUbergraph_BTT_RandomImpact");
static_assert(offsetof(BTT_RandomImpact_C_ExecuteUbergraph_BTT_RandomImpact, EntryPoint) == 0x000000, "Member 'BTT_RandomImpact_C_ExecuteUbergraph_BTT_RandomImpact::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_RandomImpact_C_ExecuteUbergraph_BTT_RandomImpact, K2Node_Event_OwnerController) == 0x000008, "Member 'BTT_RandomImpact_C_ExecuteUbergraph_BTT_RandomImpact::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_RandomImpact_C_ExecuteUbergraph_BTT_RandomImpact, K2Node_Event_ControlledPawn) == 0x000010, "Member 'BTT_RandomImpact_C_ExecuteUbergraph_BTT_RandomImpact::K2Node_Event_ControlledPawn' has a wrong offset!");

// Function BTT_RandomImpact.BTT_RandomImpact_C.InputImpactCommand
// 0x00E0 (0x00E0 - 0x0000)
struct BTT_RandomImpact_C_InputImpactCommand final
{
public:
	class AAIController*                          InOwnerController;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSBattleGameStateBase*                 GameState;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ASSBattleAIController*                  AIController;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBattleStatus_ReturnValue;               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ASSBattleAIController*                  K2Node_DynamicCast_AsSSBattle_AIController;        // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASSBattleGameStateBase*                 K2Node_DynamicCast_AsSSBattle_Game_State_Base;     // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSRandom*                              CallFunc_GetRandom_ReturnValue;                    // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ASSCharacter*                           CallFunc_GetPlayerCharacter_ReturnValue;           // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratActionDataList                   CallFunc_GetCurrentAction_OutAction;               // 0x00BC(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x2];                                       // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_RandomImpact_C_InputImpactCommand) == 0x000008, "Wrong alignment on BTT_RandomImpact_C_InputImpactCommand");
static_assert(sizeof(BTT_RandomImpact_C_InputImpactCommand) == 0x0000E0, "Wrong size on BTT_RandomImpact_C_InputImpactCommand");
static_assert(offsetof(BTT_RandomImpact_C_InputImpactCommand, InOwnerController) == 0x000000, "Member 'BTT_RandomImpact_C_InputImpactCommand::InOwnerController' has a wrong offset!");
static_assert(offsetof(BTT_RandomImpact_C_InputImpactCommand, GameState) == 0x000008, "Member 'BTT_RandomImpact_C_InputImpactCommand::GameState' has a wrong offset!");
static_assert(offsetof(BTT_RandomImpact_C_InputImpactCommand, AIController) == 0x000010, "Member 'BTT_RandomImpact_C_InputImpactCommand::AIController' has a wrong offset!");
static_assert(offsetof(BTT_RandomImpact_C_InputImpactCommand, Temp_string_Variable) == 0x000018, "Member 'BTT_RandomImpact_C_InputImpactCommand::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BTT_RandomImpact_C_InputImpactCommand, Temp_string_Variable_1) == 0x000028, "Member 'BTT_RandomImpact_C_InputImpactCommand::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BTT_RandomImpact_C_InputImpactCommand, Temp_string_Variable_2) == 0x000038, "Member 'BTT_RandomImpact_C_InputImpactCommand::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BTT_RandomImpact_C_InputImpactCommand, Temp_string_Variable_3) == 0x000048, "Member 'BTT_RandomImpact_C_InputImpactCommand::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(BTT_RandomImpact_C_InputImpactCommand, Temp_int_Variable) == 0x000058, "Member 'BTT_RandomImpact_C_InputImpactCommand::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BTT_RandomImpact_C_InputImpactCommand, CallFunc_IsBattleStatus_ReturnValue) == 0x00005C, "Member 'BTT_RandomImpact_C_InputImpactCommand::CallFunc_IsBattleStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RandomImpact_C_InputImpactCommand, K2Node_DynamicCast_AsSSBattle_AIController) == 0x000060, "Member 'BTT_RandomImpact_C_InputImpactCommand::K2Node_DynamicCast_AsSSBattle_AIController' has a wrong offset!");
static_assert(offsetof(BTT_RandomImpact_C_InputImpactCommand, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BTT_RandomImpact_C_InputImpactCommand::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_RandomImpact_C_InputImpactCommand, CallFunc_GetGameState_ReturnValue) == 0x000070, "Member 'BTT_RandomImpact_C_InputImpactCommand::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RandomImpact_C_InputImpactCommand, K2Node_DynamicCast_AsSSBattle_Game_State_Base) == 0x000078, "Member 'BTT_RandomImpact_C_InputImpactCommand::K2Node_DynamicCast_AsSSBattle_Game_State_Base' has a wrong offset!");
static_assert(offsetof(BTT_RandomImpact_C_InputImpactCommand, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'BTT_RandomImpact_C_InputImpactCommand::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BTT_RandomImpact_C_InputImpactCommand, CallFunc_GetRandom_ReturnValue) == 0x000088, "Member 'BTT_RandomImpact_C_InputImpactCommand::CallFunc_GetRandom_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RandomImpact_C_InputImpactCommand, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'BTT_RandomImpact_C_InputImpactCommand::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RandomImpact_C_InputImpactCommand, CallFunc_RandomInteger_ReturnValue) == 0x000094, "Member 'BTT_RandomImpact_C_InputImpactCommand::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RandomImpact_C_InputImpactCommand, Temp_int_Variable_1) == 0x000098, "Member 'BTT_RandomImpact_C_InputImpactCommand::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BTT_RandomImpact_C_InputImpactCommand, K2Node_Select_Default) == 0x0000A0, "Member 'BTT_RandomImpact_C_InputImpactCommand::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BTT_RandomImpact_C_InputImpactCommand, CallFunc_GetPlayerCharacter_ReturnValue) == 0x0000B0, "Member 'BTT_RandomImpact_C_InputImpactCommand::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RandomImpact_C_InputImpactCommand, CallFunc_IsValid_ReturnValue_1) == 0x0000B8, "Member 'BTT_RandomImpact_C_InputImpactCommand::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_RandomImpact_C_InputImpactCommand, CallFunc_GetCurrentAction_OutAction) == 0x0000BC, "Member 'BTT_RandomImpact_C_InputImpactCommand::CallFunc_GetCurrentAction_OutAction' has a wrong offset!");
static_assert(offsetof(BTT_RandomImpact_C_InputImpactCommand, CallFunc_Conv_NameToString_ReturnValue) == 0x0000C8, "Member 'BTT_RandomImpact_C_InputImpactCommand::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RandomImpact_C_InputImpactCommand, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000D8, "Member 'BTT_RandomImpact_C_InputImpactCommand::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RandomImpact_C_InputImpactCommand, CallFunc_Contains_ReturnValue) == 0x0000D9, "Member 'BTT_RandomImpact_C_InputImpactCommand::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RandomImpact_C_InputImpactCommand, CallFunc_Add_IntInt_ReturnValue) == 0x0000DC, "Member 'BTT_RandomImpact_C_InputImpactCommand::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BTT_RandomImpact.BTT_RandomImpact_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_RandomImpact_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_RandomImpact_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_RandomImpact_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_RandomImpact_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_RandomImpact_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_RandomImpact_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_RandomImpact_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_RandomImpact_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_RandomImpact_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}

