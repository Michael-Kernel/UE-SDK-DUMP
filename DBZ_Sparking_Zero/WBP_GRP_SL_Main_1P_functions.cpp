#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GRP_SL_Main_1P

#include "Basic.hpp"

#include "WBP_GRP_SL_Main_1P_classes.hpp"
#include "WBP_GRP_SL_Main_1P_parameters.hpp"


namespace SDK
{

// Function WBP_GRP_SL_Main_1P.WBP_GRP_SL_Main_1P_C.ExecuteUbergraph_WBP_GRP_SL_Main_1P
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_GRP_SL_Main_1P_C::ExecuteUbergraph_WBP_GRP_SL_Main_1P(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GRP_SL_Main_1P_C", "ExecuteUbergraph_WBP_GRP_SL_Main_1P");

	Params::WBP_GRP_SL_Main_1P_C_ExecuteUbergraph_WBP_GRP_SL_Main_1P Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_GRP_SL_Main_1P.WBP_GRP_SL_Main_1P_C.OnHideStarted
// (Event, Public, BlueprintEvent)

void UWBP_GRP_SL_Main_1P_C::OnHideStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GRP_SL_Main_1P_C", "OnHideStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_GRP_SL_Main_1P.WBP_GRP_SL_Main_1P_C.OnShowFinished
// (Event, Public, BlueprintEvent)

void UWBP_GRP_SL_Main_1P_C::OnShowFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GRP_SL_Main_1P_C", "OnShowFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_GRP_SL_Main_1P.WBP_GRP_SL_Main_1P_C.OnShowStarted
// (Event, Public, BlueprintEvent)

void UWBP_GRP_SL_Main_1P_C::OnShowStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GRP_SL_Main_1P_C", "OnShowStarted");

	UObject::ProcessEvent(Func, nullptr);
}

}

