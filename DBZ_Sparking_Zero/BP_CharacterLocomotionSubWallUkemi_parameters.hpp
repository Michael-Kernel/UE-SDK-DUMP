#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterLocomotionSubWallUkemi

#include "Basic.hpp"

#include "ECharacterLocomotionEventType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SS_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_CharacterLocomotionSubWallUkemi.BP_CharacterLocomotionSubWallUkemi_C.Check
// 0x0260 (0x0260 - 0x0000)
struct BP_CharacterLocomotionSubWallUkemi_C_Check final
{
public:
	class UBP_CharacterLocomotionComponent_C*     InLocomotionComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CanStart;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegCos_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDashUkemiReserved_IsDashUkemiReserved;  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWallUkemiParameter_________;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWallUkemiParameter__________1;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWallUkemiParameter__________________;  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratBlowReactionWallUkemiMovementParameter CallFunc_GetWallUkemiParameter________;            // 0x0070(0x0014)(NoDestructor)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement;   // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLastUpdateVelocity_ReturnValue;        // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUnconscious_IsUnconscious;              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWallUkemiParameter__________2;         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWallUkemiParameter__________3;         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWallUkemiParameter___________________1; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratBlowReactionWallUkemiMovementParameter CallFunc_GetWallUkemiParameter_________1;          // 0x00D8(0x0014)(NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionSubBlow_C*       CallFunc_GetSubBlow_SubBlow;                       // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_2; // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBlowHitForecastSaveInfo_IsHit;         // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetBlowHitForecastSaveInfo_Location;      // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetBlowHitForecastSaveInfo_HitTime;       // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratMapAttributeDataList             CallFunc_GetBlowHitForecastSaveInfo_MapAttribute;  // 0x0130(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBlowHitForecastSaveInfo_HitNormal;     // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_GetBlowHitForecastSaveInfo_HitPhysMat;    // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetBlowHitForecastSaveInfo_HitActor;      // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_GetBlowHitForecastSaveInfo_HitComponent;  // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetBlowHitForecastSaveInfo_HitBoneName;   // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_GetBlowHitForecastSaveInfo_HitResult;     // 0x0170(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CheckCrashToWall_ChangeCrashToWall;       // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHitFloor_OutIsFloor;                    // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x025A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x025B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x025D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_CanStart;                           // 0x025E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubWallUkemi_C_Check) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubWallUkemi_C_Check");
static_assert(sizeof(BP_CharacterLocomotionSubWallUkemi_C_Check) == 0x000260, "Wrong size on BP_CharacterLocomotionSubWallUkemi_C_Check");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, InLocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::InLocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CanStart) == 0x000008, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CanStart' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_BreakVector_X) == 0x000010, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_BreakVector_Y) == 0x000018, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_BreakVector_Z) == 0x000020, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_DegCos_ReturnValue) == 0x000028, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_FClamp_ReturnValue) == 0x000038, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_Abs_ReturnValue) == 0x000040, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000048, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_IsDashUkemiReserved_IsDashUkemiReserved) == 0x000051, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_IsDashUkemiReserved_IsDashUkemiReserved' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_BooleanOR_ReturnValue) == 0x000052, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_Not_PreBool_ReturnValue) == 0x000053, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_GetWallUkemiParameter_________) == 0x000058, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_GetWallUkemiParameter_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_GetWallUkemiParameter__________1) == 0x000060, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_GetWallUkemiParameter__________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_GetWallUkemiParameter__________________) == 0x000068, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_GetWallUkemiParameter__________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_GetWallUkemiParameter________) == 0x000070, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_GetWallUkemiParameter________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_GetCharacterMovement_CharacterMovement) == 0x000088, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_GetCharacterMovement_CharacterMovement' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000090, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_GetLastUpdateVelocity_ReturnValue) == 0x000098, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_GetLastUpdateVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_VSize_ReturnValue) == 0x0000B0, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_IsUnconscious_IsUnconscious) == 0x0000B8, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_IsUnconscious_IsUnconscious' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000B9, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000BA, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_BooleanAND_ReturnValue) == 0x0000BB, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_GetWallUkemiParameter__________2) == 0x0000C0, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_GetWallUkemiParameter__________2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_GetWallUkemiParameter__________3) == 0x0000C8, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_GetWallUkemiParameter__________3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_GetWallUkemiParameter___________________1) == 0x0000D0, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_GetWallUkemiParameter___________________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_GetWallUkemiParameter_________1) == 0x0000D8, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_GetWallUkemiParameter_________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_BooleanOR_ReturnValue_1) == 0x0000EC, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x0000F0, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_GetSubBlow_SubBlow) == 0x0000F8, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_GetSubBlow_SubBlow' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_GetLocomotionComponent_LocomotionComponent_2) == 0x000100, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_GetLocomotionComponent_LocomotionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_GetBlowHitForecastSaveInfo_IsHit) == 0x000108, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_GetBlowHitForecastSaveInfo_IsHit' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_GetBlowHitForecastSaveInfo_Location) == 0x000110, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_GetBlowHitForecastSaveInfo_Location' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_GetBlowHitForecastSaveInfo_HitTime) == 0x000128, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_GetBlowHitForecastSaveInfo_HitTime' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_GetBlowHitForecastSaveInfo_MapAttribute) == 0x000130, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_GetBlowHitForecastSaveInfo_MapAttribute' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_GetBlowHitForecastSaveInfo_HitNormal) == 0x000138, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_GetBlowHitForecastSaveInfo_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_GetBlowHitForecastSaveInfo_HitPhysMat) == 0x000150, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_GetBlowHitForecastSaveInfo_HitPhysMat' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_GetBlowHitForecastSaveInfo_HitActor) == 0x000158, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_GetBlowHitForecastSaveInfo_HitActor' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_GetBlowHitForecastSaveInfo_HitComponent) == 0x000160, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_GetBlowHitForecastSaveInfo_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_GetBlowHitForecastSaveInfo_HitBoneName) == 0x000168, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_GetBlowHitForecastSaveInfo_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_GetBlowHitForecastSaveInfo_HitResult) == 0x000170, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_GetBlowHitForecastSaveInfo_HitResult' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_CheckCrashToWall_ChangeCrashToWall) == 0x000258, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_CheckCrashToWall_ChangeCrashToWall' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_IsHitFloor_OutIsFloor) == 0x000259, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_IsHitFloor_OutIsFloor' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_Not_PreBool_ReturnValue_2) == 0x00025A, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x00025B, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x00025C, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_IsValid_ReturnValue) == 0x00025D, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Check, CallFunc_Check_CanStart) == 0x00025E, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Check::CallFunc_Check_CanStart' has a wrong offset!");

// Function BP_CharacterLocomotionSubWallUkemi.BP_CharacterLocomotionSubWallUkemi_C.CheckAndStart
// 0x0020 (0x0020 - 0x0000)
struct BP_CharacterLocomotionSubWallUkemi_C_CheckAndStart final
{
public:
	class UBP_CharacterLocomotionComponent_C*     InLocomotionComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          InInSkip;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStarted;                                         // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_CanStart;                           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Start_NewParam;                           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckAndStart_IsStarted;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubWallUkemi_C_CheckAndStart) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubWallUkemi_C_CheckAndStart");
static_assert(sizeof(BP_CharacterLocomotionSubWallUkemi_C_CheckAndStart) == 0x000020, "Wrong size on BP_CharacterLocomotionSubWallUkemi_C_CheckAndStart");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_CheckAndStart, InLocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubWallUkemi_C_CheckAndStart::InLocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_CheckAndStart, InInSkip) == 0x000008, "Member 'BP_CharacterLocomotionSubWallUkemi_C_CheckAndStart::InInSkip' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_CheckAndStart, IsStarted) == 0x000009, "Member 'BP_CharacterLocomotionSubWallUkemi_C_CheckAndStart::IsStarted' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_CheckAndStart, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000010, "Member 'BP_CharacterLocomotionSubWallUkemi_C_CheckAndStart::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_CheckAndStart, CallFunc_Check_CanStart) == 0x000018, "Member 'BP_CharacterLocomotionSubWallUkemi_C_CheckAndStart::CallFunc_Check_CanStart' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_CheckAndStart, CallFunc_Start_NewParam) == 0x000019, "Member 'BP_CharacterLocomotionSubWallUkemi_C_CheckAndStart::CallFunc_Start_NewParam' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_CheckAndStart, CallFunc_CheckAndStart_IsStarted) == 0x00001A, "Member 'BP_CharacterLocomotionSubWallUkemi_C_CheckAndStart::CallFunc_CheckAndStart_IsStarted' has a wrong offset!");

// Function BP_CharacterLocomotionSubWallUkemi.BP_CharacterLocomotionSubWallUkemi_C.CheckWallUkemiInput
// 0x0048 (0x0048 - 0x0000)
struct BP_CharacterLocomotionSubWallUkemi_C_CheckWallUkemiInput final
{
public:
	bool                                          IsInputRequest;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUnconscious_IsUnconscious;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWallUkemiParameter_________;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWallUkemiParameter__________1;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWallUkemiParameter__________________;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratBlowReactionWallUkemiMovementParameter CallFunc_GetWallUkemiParameter________;            // 0x0020(0x0014)(NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratBattleKey                               CallFunc_GetWallUkemiCheckKey_UkemiCheckKey;       // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubWallUkemi_C_CheckWallUkemiInput) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubWallUkemi_C_CheckWallUkemiInput");
static_assert(sizeof(BP_CharacterLocomotionSubWallUkemi_C_CheckWallUkemiInput) == 0x000048, "Wrong size on BP_CharacterLocomotionSubWallUkemi_C_CheckWallUkemiInput");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_CheckWallUkemiInput, IsInputRequest) == 0x000000, "Member 'BP_CharacterLocomotionSubWallUkemi_C_CheckWallUkemiInput::IsInputRequest' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_CheckWallUkemiInput, CallFunc_IsUnconscious_IsUnconscious) == 0x000001, "Member 'BP_CharacterLocomotionSubWallUkemi_C_CheckWallUkemiInput::CallFunc_IsUnconscious_IsUnconscious' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_CheckWallUkemiInput, CallFunc_GetWallUkemiParameter_________) == 0x000008, "Member 'BP_CharacterLocomotionSubWallUkemi_C_CheckWallUkemiInput::CallFunc_GetWallUkemiParameter_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_CheckWallUkemiInput, CallFunc_GetWallUkemiParameter__________1) == 0x000010, "Member 'BP_CharacterLocomotionSubWallUkemi_C_CheckWallUkemiInput::CallFunc_GetWallUkemiParameter__________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_CheckWallUkemiInput, CallFunc_GetWallUkemiParameter__________________) == 0x000018, "Member 'BP_CharacterLocomotionSubWallUkemi_C_CheckWallUkemiInput::CallFunc_GetWallUkemiParameter__________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_CheckWallUkemiInput, CallFunc_GetWallUkemiParameter________) == 0x000020, "Member 'BP_CharacterLocomotionSubWallUkemi_C_CheckWallUkemiInput::CallFunc_GetWallUkemiParameter________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_CheckWallUkemiInput, CallFunc_Not_PreBool_ReturnValue) == 0x000034, "Member 'BP_CharacterLocomotionSubWallUkemi_C_CheckWallUkemiInput::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_CheckWallUkemiInput, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000035, "Member 'BP_CharacterLocomotionSubWallUkemi_C_CheckWallUkemiInput::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_CheckWallUkemiInput, CallFunc_GetWallUkemiCheckKey_UkemiCheckKey) == 0x000036, "Member 'BP_CharacterLocomotionSubWallUkemi_C_CheckWallUkemiInput::CallFunc_GetWallUkemiCheckKey_UkemiCheckKey' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_CheckWallUkemiInput, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000038, "Member 'BP_CharacterLocomotionSubWallUkemi_C_CheckWallUkemiInput::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_CheckWallUkemiInput, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000040, "Member 'BP_CharacterLocomotionSubWallUkemi_C_CheckWallUkemiInput::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubWallUkemi.BP_CharacterLocomotionSubWallUkemi_C.GetLocomotionDetailStatus
// 0x0006 (0x0006 - 0x0000)
struct BP_CharacterLocomotionSubWallUkemi_C_GetLocomotionDetailStatus final
{
public:
	EKoratCharacterLocomotionDetailStatus         LocomotionDetailStatus;                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratWallUkemiState                          Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterLocomotionDetailStatus         K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubWallUkemi_C_GetLocomotionDetailStatus) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubWallUkemi_C_GetLocomotionDetailStatus");
static_assert(sizeof(BP_CharacterLocomotionSubWallUkemi_C_GetLocomotionDetailStatus) == 0x000006, "Wrong size on BP_CharacterLocomotionSubWallUkemi_C_GetLocomotionDetailStatus");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_GetLocomotionDetailStatus, LocomotionDetailStatus) == 0x000000, "Member 'BP_CharacterLocomotionSubWallUkemi_C_GetLocomotionDetailStatus::LocomotionDetailStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_GetLocomotionDetailStatus, Temp_byte_Variable) == 0x000001, "Member 'BP_CharacterLocomotionSubWallUkemi_C_GetLocomotionDetailStatus::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_GetLocomotionDetailStatus, Temp_byte_Variable_1) == 0x000002, "Member 'BP_CharacterLocomotionSubWallUkemi_C_GetLocomotionDetailStatus::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_GetLocomotionDetailStatus, Temp_byte_Variable_2) == 0x000003, "Member 'BP_CharacterLocomotionSubWallUkemi_C_GetLocomotionDetailStatus::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_GetLocomotionDetailStatus, Temp_byte_Variable_3) == 0x000004, "Member 'BP_CharacterLocomotionSubWallUkemi_C_GetLocomotionDetailStatus::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_GetLocomotionDetailStatus, K2Node_Select_Default) == 0x000005, "Member 'BP_CharacterLocomotionSubWallUkemi_C_GetLocomotionDetailStatus::K2Node_Select_Default' has a wrong offset!");

// Function BP_CharacterLocomotionSubWallUkemi.BP_CharacterLocomotionSubWallUkemi_C.GetRunningAction
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterLocomotionSubWallUkemi_C_GetRunningAction final
{
public:
	struct FKoratActionDataList                   RunningAction;                                     // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubWallUkemi_C_GetRunningAction) == 0x000004, "Wrong alignment on BP_CharacterLocomotionSubWallUkemi_C_GetRunningAction");
static_assert(sizeof(BP_CharacterLocomotionSubWallUkemi_C_GetRunningAction) == 0x000008, "Wrong size on BP_CharacterLocomotionSubWallUkemi_C_GetRunningAction");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_GetRunningAction, RunningAction) == 0x000000, "Member 'BP_CharacterLocomotionSubWallUkemi_C_GetRunningAction::RunningAction' has a wrong offset!");

// Function BP_CharacterLocomotionSubWallUkemi.BP_CharacterLocomotionSubWallUkemi_C.GetRunningSection
// 0x002C (0x002C - 0x0000)
struct BP_CharacterLocomotionSubWallUkemi_C_GetRunningSection final
{
public:
	class FName                                   RunningSection;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratWallUkemiState                          Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubWallUkemi_C_GetRunningSection) == 0x000004, "Wrong alignment on BP_CharacterLocomotionSubWallUkemi_C_GetRunningSection");
static_assert(sizeof(BP_CharacterLocomotionSubWallUkemi_C_GetRunningSection) == 0x00002C, "Wrong size on BP_CharacterLocomotionSubWallUkemi_C_GetRunningSection");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_GetRunningSection, RunningSection) == 0x000000, "Member 'BP_CharacterLocomotionSubWallUkemi_C_GetRunningSection::RunningSection' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_GetRunningSection, Temp_byte_Variable) == 0x000008, "Member 'BP_CharacterLocomotionSubWallUkemi_C_GetRunningSection::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_GetRunningSection, Temp_name_Variable) == 0x00000C, "Member 'BP_CharacterLocomotionSubWallUkemi_C_GetRunningSection::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_GetRunningSection, Temp_name_Variable_1) == 0x000014, "Member 'BP_CharacterLocomotionSubWallUkemi_C_GetRunningSection::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_GetRunningSection, Temp_name_Variable_2) == 0x00001C, "Member 'BP_CharacterLocomotionSubWallUkemi_C_GetRunningSection::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_GetRunningSection, K2Node_Select_Default) == 0x000024, "Member 'BP_CharacterLocomotionSubWallUkemi_C_GetRunningSection::K2Node_Select_Default' has a wrong offset!");

// Function BP_CharacterLocomotionSubWallUkemi.BP_CharacterLocomotionSubWallUkemi_C.GetWallUkemiParameter
// 0x0348 (0x0348 - 0x0000)
struct BP_CharacterLocomotionSubWallUkemi_C_GetWallUkemiParameter final
{
public:
	double                                        E_____B_;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        E___B_B_;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ______Y____gn__B_;                                 // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratBlowReactionWallUkemiMovementParameter _______;                                           // 0x0018(0x0014)(Parm, OutParm, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetCharacter_Character;                   // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterBase_C>  K2Node_DynamicCast_AsBPI_Character_Base;           // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratHitBackMovementData              CallFunc_GetHitBackData_HitBackData;               // 0x0050(0x02E0)()
	double                                        K2Node_FunctionResult__________ImplicitCast;       // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult__________ImplicitCast_1;     // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult___________________ImplicitCast; // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubWallUkemi_C_GetWallUkemiParameter) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubWallUkemi_C_GetWallUkemiParameter");
static_assert(sizeof(BP_CharacterLocomotionSubWallUkemi_C_GetWallUkemiParameter) == 0x000348, "Wrong size on BP_CharacterLocomotionSubWallUkemi_C_GetWallUkemiParameter");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_GetWallUkemiParameter, E_____B_) == 0x000000, "Member 'BP_CharacterLocomotionSubWallUkemi_C_GetWallUkemiParameter::E_____B_' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_GetWallUkemiParameter, E___B_B_) == 0x000008, "Member 'BP_CharacterLocomotionSubWallUkemi_C_GetWallUkemiParameter::E___B_B_' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_GetWallUkemiParameter, ______Y____gn__B_) == 0x000010, "Member 'BP_CharacterLocomotionSubWallUkemi_C_GetWallUkemiParameter::______Y____gn__B_' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_GetWallUkemiParameter, _______) == 0x000018, "Member 'BP_CharacterLocomotionSubWallUkemi_C_GetWallUkemiParameter::_______' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_GetWallUkemiParameter, CallFunc_GetCharacter_Character) == 0x000030, "Member 'BP_CharacterLocomotionSubWallUkemi_C_GetWallUkemiParameter::CallFunc_GetCharacter_Character' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_GetWallUkemiParameter, K2Node_DynamicCast_AsBPI_Character_Base) == 0x000038, "Member 'BP_CharacterLocomotionSubWallUkemi_C_GetWallUkemiParameter::K2Node_DynamicCast_AsBPI_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_GetWallUkemiParameter, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_CharacterLocomotionSubWallUkemi_C_GetWallUkemiParameter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_GetWallUkemiParameter, CallFunc_GetHitBackData_HitBackData) == 0x000050, "Member 'BP_CharacterLocomotionSubWallUkemi_C_GetWallUkemiParameter::CallFunc_GetHitBackData_HitBackData' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_GetWallUkemiParameter, K2Node_FunctionResult__________ImplicitCast) == 0x000330, "Member 'BP_CharacterLocomotionSubWallUkemi_C_GetWallUkemiParameter::K2Node_FunctionResult__________ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_GetWallUkemiParameter, K2Node_FunctionResult__________ImplicitCast_1) == 0x000338, "Member 'BP_CharacterLocomotionSubWallUkemi_C_GetWallUkemiParameter::K2Node_FunctionResult__________ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_GetWallUkemiParameter, K2Node_FunctionResult___________________ImplicitCast) == 0x000340, "Member 'BP_CharacterLocomotionSubWallUkemi_C_GetWallUkemiParameter::K2Node_FunctionResult___________________ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubWallUkemi.BP_CharacterLocomotionSubWallUkemi_C.IsEnableAction
// 0x0002 (0x0002 - 0x0000)
struct BP_CharacterLocomotionSubWallUkemi_C_IsEnableAction final
{
public:
	bool                                          IsEnable;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubWallUkemi_C_IsEnableAction) == 0x000001, "Wrong alignment on BP_CharacterLocomotionSubWallUkemi_C_IsEnableAction");
static_assert(sizeof(BP_CharacterLocomotionSubWallUkemi_C_IsEnableAction) == 0x000002, "Wrong size on BP_CharacterLocomotionSubWallUkemi_C_IsEnableAction");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_IsEnableAction, IsEnable) == 0x000000, "Member 'BP_CharacterLocomotionSubWallUkemi_C_IsEnableAction::IsEnable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_IsEnableAction, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_CharacterLocomotionSubWallUkemi_C_IsEnableAction::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_CharacterLocomotionSubWallUkemi.BP_CharacterLocomotionSubWallUkemi_C.SetUpWallUkemiMovement Parameter
// 0x00E0 (0x00E0 - 0x0000)
struct BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter final
{
public:
	EKoratWallUkemiState                          InWallUkemiStatus;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKoratBlowReactionWallUkemiMovementParameter Temp_struct_Variable;                              // 0x0004(0x0014)(NoDestructor)
	struct FKoratBlowReactionWallUkemiMovementParameter Temp_struct_Variable_1;                            // 0x0018(0x0014)(NoDestructor)
	EKoratWallUkemiState                          Temp_byte_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement;   // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_1; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_2; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_3; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_4; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_5; // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_6; // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWallUkemiParameter_________;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWallUkemiParameter__________1;         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWallUkemiParameter__________________;  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKoratBlowReactionWallUkemiMovementParameter CallFunc_GetWallUkemiParameter________;            // 0x0090(0x0014)(NoDestructor)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement_7; // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKoratBlowReactionWallUkemiMovementParameter K2Node_Select_Default;                             // 0x00B0(0x0014)(NoDestructor)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast;         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_WallUkemiMaxAddMoveTime_ImplicitCast; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxWalkSpeed_ImplicitCast;      // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter");
static_assert(sizeof(BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter) == 0x0000E0, "Wrong size on BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter, InWallUkemiStatus) == 0x000000, "Member 'BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter::InWallUkemiStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter, Temp_struct_Variable) == 0x000004, "Member 'BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter, Temp_struct_Variable_1) == 0x000018, "Member 'BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter, Temp_byte_Variable) == 0x00002C, "Member 'BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter, CallFunc_GetCharacterMovement_CharacterMovement) == 0x000030, "Member 'BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter::CallFunc_GetCharacterMovement_CharacterMovement' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter, CallFunc_GetCharacterMovement_CharacterMovement_1) == 0x000038, "Member 'BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter::CallFunc_GetCharacterMovement_CharacterMovement_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter, CallFunc_GetCharacterMovement_CharacterMovement_2) == 0x000040, "Member 'BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter::CallFunc_GetCharacterMovement_CharacterMovement_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000048, "Member 'BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter, CallFunc_GetCharacterMovement_CharacterMovement_3) == 0x000058, "Member 'BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter::CallFunc_GetCharacterMovement_CharacterMovement_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter, CallFunc_GetCharacterMovement_CharacterMovement_4) == 0x000060, "Member 'BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter::CallFunc_GetCharacterMovement_CharacterMovement_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter, CallFunc_GetCharacterMovement_CharacterMovement_5) == 0x000068, "Member 'BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter::CallFunc_GetCharacterMovement_CharacterMovement_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter, CallFunc_GetCharacterMovement_CharacterMovement_6) == 0x000070, "Member 'BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter::CallFunc_GetCharacterMovement_CharacterMovement_6' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter, CallFunc_GetWallUkemiParameter_________) == 0x000078, "Member 'BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter::CallFunc_GetWallUkemiParameter_________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter, CallFunc_GetWallUkemiParameter__________1) == 0x000080, "Member 'BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter::CallFunc_GetWallUkemiParameter__________1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter, CallFunc_GetWallUkemiParameter__________________) == 0x000088, "Member 'BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter::CallFunc_GetWallUkemiParameter__________________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter, CallFunc_GetWallUkemiParameter________) == 0x000090, "Member 'BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter::CallFunc_GetWallUkemiParameter________' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter, CallFunc_GetCharacterMovement_CharacterMovement_7) == 0x0000A8, "Member 'BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter::CallFunc_GetCharacterMovement_CharacterMovement_7' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter, K2Node_Select_Default) == 0x0000B0, "Member 'BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter, CallFunc_Less_DoubleDouble_B_ImplicitCast) == 0x0000C8, "Member 'BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter::CallFunc_Less_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter, K2Node_VariableSet_WallUkemiMaxAddMoveTime_ImplicitCast) == 0x0000D0, "Member 'BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter::K2Node_VariableSet_WallUkemiMaxAddMoveTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter, K2Node_VariableSet_MaxWalkSpeed_ImplicitCast) == 0x0000D8, "Member 'BP_CharacterLocomotionSubWallUkemi_C_SetUpWallUkemiMovement_Parameter::K2Node_VariableSet_MaxWalkSpeed_ImplicitCast' has a wrong offset!");

// Function BP_CharacterLocomotionSubWallUkemi.BP_CharacterLocomotionSubWallUkemi_C.SetWallUkemiStatus
// 0x0030 (0x0030 - 0x0000)
struct BP_CharacterLocomotionSubWallUkemi_C_SetWallUkemiStatus final
{
public:
	EKoratWallUkemiState                          InWallUkemiStatus;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoratCharacterActionFinishReason             InActionFinishReason;                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_2; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateRunningAction_OutIsChangeAction;    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubWallUkemi_C_SetWallUkemiStatus) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubWallUkemi_C_SetWallUkemiStatus");
static_assert(sizeof(BP_CharacterLocomotionSubWallUkemi_C_SetWallUkemiStatus) == 0x000030, "Wrong size on BP_CharacterLocomotionSubWallUkemi_C_SetWallUkemiStatus");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_SetWallUkemiStatus, InWallUkemiStatus) == 0x000000, "Member 'BP_CharacterLocomotionSubWallUkemi_C_SetWallUkemiStatus::InWallUkemiStatus' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_SetWallUkemiStatus, InActionFinishReason) == 0x000001, "Member 'BP_CharacterLocomotionSubWallUkemi_C_SetWallUkemiStatus::InActionFinishReason' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_SetWallUkemiStatus, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_CharacterLocomotionSubWallUkemi_C_SetWallUkemiStatus::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_SetWallUkemiStatus, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000008, "Member 'BP_CharacterLocomotionSubWallUkemi_C_SetWallUkemiStatus::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_SetWallUkemiStatus, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000010, "Member 'BP_CharacterLocomotionSubWallUkemi_C_SetWallUkemiStatus::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_SetWallUkemiStatus, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'BP_CharacterLocomotionSubWallUkemi_C_SetWallUkemiStatus::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_SetWallUkemiStatus, CallFunc_GetLocomotionComponent_LocomotionComponent_2) == 0x000020, "Member 'BP_CharacterLocomotionSubWallUkemi_C_SetWallUkemiStatus::CallFunc_GetLocomotionComponent_LocomotionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_SetWallUkemiStatus, CallFunc_UpdateRunningAction_OutIsChangeAction) == 0x000028, "Member 'BP_CharacterLocomotionSubWallUkemi_C_SetWallUkemiStatus::CallFunc_UpdateRunningAction_OutIsChangeAction' has a wrong offset!");

// Function BP_CharacterLocomotionSubWallUkemi.BP_CharacterLocomotionSubWallUkemi_C.Start
// 0x0378 (0x0378 - 0x0000)
struct BP_CharacterLocomotionSubWallUkemi_C_Start final
{
public:
	class UBP_CharacterLocomotionComponent_C*     InLocomotionComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          InInSkip;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPawn_Pawn;                             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterBase_C>  K2Node_DynamicCast_AsBPI_Character_Base;           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetCharacter_Character;                   // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterBase_C>  K2Node_DynamicCast_AsBPI_Character_Base_1;         // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKoratHitBackMovementData              CallFunc_GetHitBackData_HitBackData;               // 0x0060(0x02E0)()
	class APawn*                                  CallFunc_GetPawn_Pawn_1;                           // 0x0340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterBase_C>  K2Node_DynamicCast_AsBPI_Character_Base_2;         // 0x0348(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetKnockBackVector_KnockBackVector;       // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubWallUkemi_C_Start) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubWallUkemi_C_Start");
static_assert(sizeof(BP_CharacterLocomotionSubWallUkemi_C_Start) == 0x000378, "Wrong size on BP_CharacterLocomotionSubWallUkemi_C_Start");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Start, InLocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Start::InLocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Start, InInSkip) == 0x000008, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Start::InInSkip' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Start, NewParam) == 0x000009, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Start::NewParam' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Start, CallFunc_GetPawn_Pawn) == 0x000010, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Start::CallFunc_GetPawn_Pawn' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Start, K2Node_DynamicCast_AsBPI_Character_Base) == 0x000018, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Start::K2Node_DynamicCast_AsBPI_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Start, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Start::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Start, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000030, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Start::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Start, CallFunc_GetCharacter_Character) == 0x000038, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Start::CallFunc_GetCharacter_Character' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Start, K2Node_DynamicCast_AsBPI_Character_Base_1) == 0x000040, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Start::K2Node_DynamicCast_AsBPI_Character_Base_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Start, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Start::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Start, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000058, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Start::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Start, CallFunc_GetHitBackData_HitBackData) == 0x000060, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Start::CallFunc_GetHitBackData_HitBackData' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Start, CallFunc_GetPawn_Pawn_1) == 0x000340, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Start::CallFunc_GetPawn_Pawn_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Start, K2Node_DynamicCast_AsBPI_Character_Base_2) == 0x000348, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Start::K2Node_DynamicCast_AsBPI_Character_Base_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Start, K2Node_DynamicCast_bSuccess_2) == 0x000358, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Start::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Start, CallFunc_GetKnockBackVector_KnockBackVector) == 0x000360, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Start::CallFunc_GetKnockBackVector_KnockBackVector' has a wrong offset!");

// Function BP_CharacterLocomotionSubWallUkemi.BP_CharacterLocomotionSubWallUkemi_C.Update
// 0x0090 (0x0090 - 0x0000)
struct BP_CharacterLocomotionSubWallUkemi_C_Update final
{
public:
	class UBP_CharacterLocomotionComponent_C*     InLocomotionComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ECharacterLocomotionEventType                 InEventType;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        InDeltaSeconds;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_1; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckShortDash_IsStartShortDash;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_2; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_3; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_4; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UBP_CharacterLocomotionComponent_C*     CallFunc_GetLocomotionComponent_LocomotionComponent_5; // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Rotation_IsSuccessfully;              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B[0x5];                                       // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterMovementComponent*            CallFunc_GetCharacterMovement_CharacterMovement;   // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Update_NewParam;                          // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubWallUkemi_C_Update) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubWallUkemi_C_Update");
static_assert(sizeof(BP_CharacterLocomotionSubWallUkemi_C_Update) == 0x000090, "Wrong size on BP_CharacterLocomotionSubWallUkemi_C_Update");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Update, InLocomotionComponent) == 0x000000, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Update::InLocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Update, InEventType) == 0x000008, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Update::InEventType' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Update, InDeltaSeconds) == 0x000010, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Update::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Update, NewParam) == 0x000018, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Update::NewParam' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent) == 0x000020, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_1) == 0x000028, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Update, CallFunc_CheckShortDash_IsStartShortDash) == 0x000030, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Update::CallFunc_CheckShortDash_IsStartShortDash' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_2) == 0x000038, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_3) == 0x000040, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_4) == 0x000048, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Update, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000050, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Update::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Update, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000058, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Update::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Update, CallFunc_GetLocomotionComponent_LocomotionComponent_5) == 0x000070, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Update::CallFunc_GetLocomotionComponent_LocomotionComponent_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Update, CallFunc_Set_Rotation_IsSuccessfully) == 0x000078, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Update::CallFunc_Set_Rotation_IsSuccessfully' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Update, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000079, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Update::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Update, K2Node_SwitchEnum_CmpSuccess) == 0x00007A, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Update::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Update, CallFunc_GetCharacterMovement_CharacterMovement) == 0x000080, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Update::CallFunc_GetCharacterMovement_CharacterMovement' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Update, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000088, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Update::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Update, K2Node_SwitchEnum_CmpSuccess_1) == 0x000089, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Update::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_Update, CallFunc_Update_NewParam) == 0x00008A, "Member 'BP_CharacterLocomotionSubWallUkemi_C_Update::CallFunc_Update_NewParam' has a wrong offset!");

// Function BP_CharacterLocomotionSubWallUkemi.BP_CharacterLocomotionSubWallUkemi_C.UpdateWallUkemiInput
// 0x0010 (0x0010 - 0x0000)
struct BP_CharacterLocomotionSubWallUkemi_C_UpdateWallUkemiInput final
{
public:
	double                                        InDeltaSeconds;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubWallUkemi_C_UpdateWallUkemiInput) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubWallUkemi_C_UpdateWallUkemiInput");
static_assert(sizeof(BP_CharacterLocomotionSubWallUkemi_C_UpdateWallUkemiInput) == 0x000010, "Wrong size on BP_CharacterLocomotionSubWallUkemi_C_UpdateWallUkemiInput");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_UpdateWallUkemiInput, InDeltaSeconds) == 0x000000, "Member 'BP_CharacterLocomotionSubWallUkemi_C_UpdateWallUkemiInput::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_UpdateWallUkemiInput, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_CharacterLocomotionSubWallUkemi_C_UpdateWallUkemiInput::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_CharacterLocomotionSubWallUkemi.BP_CharacterLocomotionSubWallUkemi_C.UpdateWallUkemiMove
// 0x0020 (0x0020 - 0x0000)
struct BP_CharacterLocomotionSubWallUkemi_C_UpdateWallUkemiMove final
{
public:
	double                                        InDeltaSeconds;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPawn_Pawn;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterLocomotionSubWallUkemi_C_UpdateWallUkemiMove) == 0x000008, "Wrong alignment on BP_CharacterLocomotionSubWallUkemi_C_UpdateWallUkemiMove");
static_assert(sizeof(BP_CharacterLocomotionSubWallUkemi_C_UpdateWallUkemiMove) == 0x000020, "Wrong size on BP_CharacterLocomotionSubWallUkemi_C_UpdateWallUkemiMove");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_UpdateWallUkemiMove, InDeltaSeconds) == 0x000000, "Member 'BP_CharacterLocomotionSubWallUkemi_C_UpdateWallUkemiMove::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_UpdateWallUkemiMove, CallFunc_GetPawn_Pawn) == 0x000008, "Member 'BP_CharacterLocomotionSubWallUkemi_C_UpdateWallUkemiMove::CallFunc_GetPawn_Pawn' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_UpdateWallUkemiMove, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_CharacterLocomotionSubWallUkemi_C_UpdateWallUkemiMove::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterLocomotionSubWallUkemi_C_UpdateWallUkemiMove, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_CharacterLocomotionSubWallUkemi_C_UpdateWallUkemiMove::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");

}

