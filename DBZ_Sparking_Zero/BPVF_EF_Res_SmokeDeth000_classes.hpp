#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPVF_EF_Res_SmokeDeth000

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPVF_EF_Res_SmokeDeth000.BPVF_EF_Res_SmokeDeth000_C
// 0x0030 (0x02C0 - 0x0290)
class ABPVF_EF_Res_SmokeDeth000_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVectorFieldComponent*                  VF_SmokeDeth;                                      // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        RoteOffset;                                        // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Transform;                                         // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        TimeScale;                                         // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BPVF_EF_Res_SmokeDeth000(int32 EntryPoint);
	void PreviewTick();
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPVF_EF_Res_SmokeDeth000_C">();
	}
	static class ABPVF_EF_Res_SmokeDeth000_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABPVF_EF_Res_SmokeDeth000_C>();
	}
};
static_assert(alignof(ABPVF_EF_Res_SmokeDeth000_C) == 0x000008, "Wrong alignment on ABPVF_EF_Res_SmokeDeth000_C");
static_assert(sizeof(ABPVF_EF_Res_SmokeDeth000_C) == 0x0002C0, "Wrong size on ABPVF_EF_Res_SmokeDeth000_C");
static_assert(offsetof(ABPVF_EF_Res_SmokeDeth000_C, UberGraphFrame) == 0x000290, "Member 'ABPVF_EF_Res_SmokeDeth000_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABPVF_EF_Res_SmokeDeth000_C, VF_SmokeDeth) == 0x000298, "Member 'ABPVF_EF_Res_SmokeDeth000_C::VF_SmokeDeth' has a wrong offset!");
static_assert(offsetof(ABPVF_EF_Res_SmokeDeth000_C, RoteOffset) == 0x0002A0, "Member 'ABPVF_EF_Res_SmokeDeth000_C::RoteOffset' has a wrong offset!");
static_assert(offsetof(ABPVF_EF_Res_SmokeDeth000_C, Transform) == 0x0002A8, "Member 'ABPVF_EF_Res_SmokeDeth000_C::Transform' has a wrong offset!");
static_assert(offsetof(ABPVF_EF_Res_SmokeDeth000_C, DefaultSceneRoot) == 0x0002B0, "Member 'ABPVF_EF_Res_SmokeDeth000_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABPVF_EF_Res_SmokeDeth000_C, TimeScale) == 0x0002B8, "Member 'ABPVF_EF_Res_SmokeDeth000_C::TimeScale' has a wrong offset!");

}

