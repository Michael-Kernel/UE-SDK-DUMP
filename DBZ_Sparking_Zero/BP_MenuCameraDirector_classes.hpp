#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MenuCameraDirector

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SS_structs.hpp"
#include "SS_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MenuCameraDirector.BP_MenuCameraDirector_C
// 0x00B8 (0x07D0 - 0x0718)
class ABP_MenuCameraDirector_C final : public ASSMenuCameraDirector
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0718(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USSAnimePersComponent*                  SSAnimePers;                                       // 0x0720(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        WorldTimeSecond;                                   // 0x0728(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BlendLocation;                                     // 0x0730(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_748[0x8];                                      // 0x0748(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  BlendRotation;                                     // 0x0750(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BlendLuatLocation;                                 // 0x0770(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_788[0x8];                                      // 0x0788(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  BlendLuatRotation;                                 // 0x0790(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableTracking;                                    // 0x07B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B1[0x7];                                      // 0x07B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSCameraConnectedQueue                CameraConnectedQueue;                              // 0x07B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ASSCutCameraActor*                      CameraInstance;                                    // 0x07C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_MenuCameraDirector(int32 EntryPoint);
	class ASSCutCameraActor* OnNewCameraFromPool(const ECameraType InCameraType);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MenuCameraDirector_C">();
	}
	static class ABP_MenuCameraDirector_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MenuCameraDirector_C>();
	}
};
static_assert(alignof(ABP_MenuCameraDirector_C) == 0x000010, "Wrong alignment on ABP_MenuCameraDirector_C");
static_assert(sizeof(ABP_MenuCameraDirector_C) == 0x0007D0, "Wrong size on ABP_MenuCameraDirector_C");
static_assert(offsetof(ABP_MenuCameraDirector_C, UberGraphFrame) == 0x000718, "Member 'ABP_MenuCameraDirector_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MenuCameraDirector_C, SSAnimePers) == 0x000720, "Member 'ABP_MenuCameraDirector_C::SSAnimePers' has a wrong offset!");
static_assert(offsetof(ABP_MenuCameraDirector_C, WorldTimeSecond) == 0x000728, "Member 'ABP_MenuCameraDirector_C::WorldTimeSecond' has a wrong offset!");
static_assert(offsetof(ABP_MenuCameraDirector_C, BlendLocation) == 0x000730, "Member 'ABP_MenuCameraDirector_C::BlendLocation' has a wrong offset!");
static_assert(offsetof(ABP_MenuCameraDirector_C, BlendRotation) == 0x000750, "Member 'ABP_MenuCameraDirector_C::BlendRotation' has a wrong offset!");
static_assert(offsetof(ABP_MenuCameraDirector_C, BlendLuatLocation) == 0x000770, "Member 'ABP_MenuCameraDirector_C::BlendLuatLocation' has a wrong offset!");
static_assert(offsetof(ABP_MenuCameraDirector_C, BlendLuatRotation) == 0x000790, "Member 'ABP_MenuCameraDirector_C::BlendLuatRotation' has a wrong offset!");
static_assert(offsetof(ABP_MenuCameraDirector_C, EnableTracking) == 0x0007B0, "Member 'ABP_MenuCameraDirector_C::EnableTracking' has a wrong offset!");
static_assert(offsetof(ABP_MenuCameraDirector_C, CameraConnectedQueue) == 0x0007B8, "Member 'ABP_MenuCameraDirector_C::CameraConnectedQueue' has a wrong offset!");
static_assert(offsetof(ABP_MenuCameraDirector_C, CameraInstance) == 0x0007C8, "Member 'ABP_MenuCameraDirector_C::CameraInstance' has a wrong offset!");

}

