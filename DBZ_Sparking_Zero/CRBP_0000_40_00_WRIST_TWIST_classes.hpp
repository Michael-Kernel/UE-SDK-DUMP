#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CRBP_0000_40_00_WRIST_TWIST

#include "Basic.hpp"

#include "KoratControlRigExtension_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "RigVM_classes.hpp"
#include "ControlRig_structs.hpp"


namespace SDK
{

// ControlRigBlueprintGeneratedClass CRBP_0000_40_00_WRIST_TWIST.CRBP_0000_40_00_WRIST_TWIST_C
// 0x0000 (0x0568 - 0x0568)
class UCRBP_0000_40_00_WRIST_TWIST_C final : public UKoratControlRig
{
public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CRBP_0000_40_00_WRIST_TWIST_C">();
	}
	static class UCRBP_0000_40_00_WRIST_TWIST_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCRBP_0000_40_00_WRIST_TWIST_C>();
	}
};
static_assert(alignof(UCRBP_0000_40_00_WRIST_TWIST_C) == 0x000008, "Wrong alignment on UCRBP_0000_40_00_WRIST_TWIST_C");
static_assert(sizeof(UCRBP_0000_40_00_WRIST_TWIST_C) == 0x000568, "Wrong size on UCRBP_0000_40_00_WRIST_TWIST_C");

// RigVMMemoryStorageGeneratorClass CRBP_0000_40_00_WRIST_TWIST.RigVMMemory_Literal
// 0x0070 (0x0098 - 0x0028)
class CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Literal final : public URigVMMemoryStorage
{
public:
	struct FRigElementKey                         RigVMModel___SetTransform_Item__Const;             // 0x0028(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EBoneGetterSetterMode                         RigVMModel___SetTransform_Space__Const;            // 0x0034(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___SetTransform_bInitial__Const : 1;     // 0x0035(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   RigVMModel___GetControlTransform_Control__Const;   // 0x0038(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___SetTransform_Weight__Const;           // 0x0040(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___SetTransform_bPropagateToChildren__Const : 1; // 0x0044(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigElementKey                         RigVMModel___SetTransform_1_Item__Const;           // 0x0048(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___GetControlTransform_1_Control__Const; // 0x0054(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_SetRotation_3_1_Item__Const;  // 0x005C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EBoneGetterSetterMode                         RigVMModel___RigUnit_SetRotation_3_1_Space__Const; // 0x0068(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___MathQuaternionSwingTwist_1_TwistAxis__Const; // 0x0070(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___RigUnit_SetRotation_3_1_Weight__Const; // 0x0088(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_SetRotation_3_Item__Const;    // 0x008C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass CRBP_0000_40_00_WRIST_TWIST.RigVMMemory_Literal", true>();
	}
	static class CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Literal* GetDefaultObj()
	{
		return GetDefaultObjImpl<CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Literal>();
	}
};
static_assert(alignof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Literal) == 0x000008, "Wrong alignment on CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Literal");
static_assert(sizeof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Literal) == 0x000098, "Wrong size on CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Literal");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Literal, RigVMModel___SetTransform_Item__Const) == 0x000028, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Literal::RigVMModel___SetTransform_Item__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Literal, RigVMModel___SetTransform_Space__Const) == 0x000034, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Literal::RigVMModel___SetTransform_Space__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Literal, RigVMModel___GetControlTransform_Control__Const) == 0x000038, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Literal::RigVMModel___GetControlTransform_Control__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Literal, RigVMModel___SetTransform_Weight__Const) == 0x000040, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Literal::RigVMModel___SetTransform_Weight__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Literal, RigVMModel___SetTransform_1_Item__Const) == 0x000048, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Literal::RigVMModel___SetTransform_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Literal, RigVMModel___GetControlTransform_1_Control__Const) == 0x000054, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Literal::RigVMModel___GetControlTransform_1_Control__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Literal, RigVMModel___RigUnit_SetRotation_3_1_Item__Const) == 0x00005C, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Literal::RigVMModel___RigUnit_SetRotation_3_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Literal, RigVMModel___RigUnit_SetRotation_3_1_Space__Const) == 0x000068, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Literal::RigVMModel___RigUnit_SetRotation_3_1_Space__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Literal, RigVMModel___MathQuaternionSwingTwist_1_TwistAxis__Const) == 0x000070, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Literal::RigVMModel___MathQuaternionSwingTwist_1_TwistAxis__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Literal, RigVMModel___RigUnit_SetRotation_3_1_Weight__Const) == 0x000088, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Literal::RigVMModel___RigUnit_SetRotation_3_1_Weight__Const' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Literal, RigVMModel___RigUnit_SetRotation_3_Item__Const) == 0x00008C, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Literal::RigVMModel___RigUnit_SetRotation_3_Item__Const' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass CRBP_0000_40_00_WRIST_TWIST.RigVMMemory_Work
// 0x0618 (0x0640 - 0x0028)
class CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work final : public URigVMMemoryStorage
{
public:
	struct FControlRigExecuteContext              ExecuteContext_;                                   // 0x0028(0x0038)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetControlTransform_Transform;        // 0x0060(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetControlTransform_Minimum;          // 0x00C0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetControlTransform_Maximum;          // 0x0120(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetControlTransform_CachedControlIndex; // 0x0180(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___SetTransform_CachedIndex;             // 0x0190(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetControlTransform_1_Transform;      // 0x01A0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetControlTransform_1_Minimum;        // 0x0200(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetControlTransform_1_Maximum;        // 0x0260(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetControlTransform_1_CachedControlIndex; // 0x02C0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___SetTransform_1_CachedIndex;           // 0x02D0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_1_Twist;     // 0x02E0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___Make_Relative_1_Local;                // 0x0300(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_2_Transform;     // 0x0360(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_2_CachedIndex;   // 0x03C0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_1_1_Transform;   // 0x03D0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_1_1_CachedIndex; // 0x0430(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_1_Input;     // 0x0440(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_1_Swing;     // 0x0460(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetRotation_3_1_CachedIndex;  // 0x0480(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_Twist;       // 0x0490(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___Make_Relative_Local;                  // 0x04B0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_Transform;       // 0x0510(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_CachedIndex;     // 0x0570(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_1_Transform;     // 0x0580(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_1_CachedIndex;   // 0x05E0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_Input;       // 0x05F0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_Swing;       // 0x0610(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetRotation_3_CachedIndex;    // 0x0630(0x0010)(Edit, EditConst, NonTransactional)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass CRBP_0000_40_00_WRIST_TWIST.RigVMMemory_Work", true>();
	}
	static class CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work* GetDefaultObj()
	{
		return GetDefaultObjImpl<CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work>();
	}
};
static_assert(alignof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work) == 0x000010, "Wrong alignment on CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work");
static_assert(sizeof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work) == 0x000640, "Wrong size on CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work, ExecuteContext_) == 0x000028, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work::ExecuteContext_' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work, RigVMModel___GetControlTransform_Transform) == 0x000060, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work::RigVMModel___GetControlTransform_Transform' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work, RigVMModel___GetControlTransform_Minimum) == 0x0000C0, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work::RigVMModel___GetControlTransform_Minimum' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work, RigVMModel___GetControlTransform_Maximum) == 0x000120, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work::RigVMModel___GetControlTransform_Maximum' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work, RigVMModel___GetControlTransform_CachedControlIndex) == 0x000180, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work::RigVMModel___GetControlTransform_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work, RigVMModel___SetTransform_CachedIndex) == 0x000190, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work::RigVMModel___SetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work, RigVMModel___GetControlTransform_1_Transform) == 0x0001A0, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work::RigVMModel___GetControlTransform_1_Transform' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work, RigVMModel___GetControlTransform_1_Minimum) == 0x000200, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work::RigVMModel___GetControlTransform_1_Minimum' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work, RigVMModel___GetControlTransform_1_Maximum) == 0x000260, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work::RigVMModel___GetControlTransform_1_Maximum' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work, RigVMModel___GetControlTransform_1_CachedControlIndex) == 0x0002C0, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work::RigVMModel___GetControlTransform_1_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work, RigVMModel___SetTransform_1_CachedIndex) == 0x0002D0, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work::RigVMModel___SetTransform_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_1_Twist) == 0x0002E0, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_1_Twist' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work, RigVMModel___Make_Relative_1_Local) == 0x000300, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work::RigVMModel___Make_Relative_1_Local' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_Transform) == 0x000360, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_Transform' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_CachedIndex) == 0x0003C0, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_1_Transform) == 0x0003D0, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_1_Transform' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_1_CachedIndex) == 0x000430, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_1_Input) == 0x000440, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_1_Input' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_1_Swing) == 0x000460, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_1_Swing' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work, RigVMModel___RigUnit_SetRotation_3_1_CachedIndex) == 0x000480, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work::RigVMModel___RigUnit_SetRotation_3_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_Twist) == 0x000490, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_Twist' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work, RigVMModel___Make_Relative_Local) == 0x0004B0, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work::RigVMModel___Make_Relative_Local' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_Transform) == 0x000510, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_CachedIndex) == 0x000570, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_Transform) == 0x000580, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_Transform' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_CachedIndex) == 0x0005E0, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_Input) == 0x0005F0, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_Input' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_Swing) == 0x000610, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_Swing' has a wrong offset!");
static_assert(offsetof(CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work, RigVMModel___RigUnit_SetRotation_3_CachedIndex) == 0x000630, "Member 'CRBP_0000_40_00_WRIST_TWIST::URigVMMemory_Work::RigVMModel___RigUnit_SetRotation_3_CachedIndex' has a wrong offset!");

}

