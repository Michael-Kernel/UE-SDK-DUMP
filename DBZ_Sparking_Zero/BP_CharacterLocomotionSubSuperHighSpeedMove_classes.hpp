#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterLocomotionSubSuperHighSpeedMove

#include "Basic.hpp"

#include "BP_CharacterLocomotionSubHighSpeedMove_classes.hpp"
#include "ECharacterLocomotionEventType_structs.hpp"
#include "SS_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CharacterLocomotionSubSuperHighSpeedMove.BP_CharacterLocomotionSubSuperHighSpeedMove_C
// 0x0000 (0x00C0 - 0x00C0)
class UBP_CharacterLocomotionSubSuperHighSpeedMove_C final : public UBP_CharacterLocomotionSubHighSpeedMove_C
{
public:
	void Check(class UBP_CharacterLocomotionComponent_C* InLocomotionComponent, bool* CanStart);
	void ClearStatus();
	void GetHighSpeedMoveParameterInternal(bool* ______K, double* ________________, double* ____B__INK_LPxw__, double* ____B__LPK_OTxw__, class UCurveFloat** _______IN, class UCurveFloat** _______LP, class UCurveFloat** _______OT, double* ________, double* _____, double* ___, EKoratFreeTimelineType* __Bn____________, class USSActionCameraDataAsset** __Bn___________, class USSActionCameraDataAsset** __Bn_Kn___________, double* B_Bn____________Y_OTw_K_nB______, EKoratFreeTimelineType* B_Bn____________, class USSActionCameraDataAsset** B_Bn___________, class USSActionCameraDataAsset** B_Bn_Kn___________);
	void GetLocomotionDetailStatus(EKoratCharacterLocomotionDetailStatus* LocomotionDetailStatus);
	void GetRunningAction(struct FKoratActionDataList* RunningAction);
	void GetRunningSection(class FName* RunningSection);
	void HighSpeedMoveOTUpdate();
	void IsEnableAction(bool* IsEnable);
	void Start(class UBP_CharacterLocomotionComponent_C* InLocomotionComponent, bool InInSkip, bool* NewParam);
	void Update(class UBP_CharacterLocomotionComponent_C* InLocomotionComponent, ECharacterLocomotionEventType InEventType, double InDeltaSeconds, bool* NewParam);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CharacterLocomotionSubSuperHighSpeedMove_C">();
	}
	static class UBP_CharacterLocomotionSubSuperHighSpeedMove_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_CharacterLocomotionSubSuperHighSpeedMove_C>();
	}
};
static_assert(alignof(UBP_CharacterLocomotionSubSuperHighSpeedMove_C) == 0x000008, "Wrong alignment on UBP_CharacterLocomotionSubSuperHighSpeedMove_C");
static_assert(sizeof(UBP_CharacterLocomotionSubSuperHighSpeedMove_C) == 0x0000C0, "Wrong size on UBP_CharacterLocomotionSubSuperHighSpeedMove_C");

}

