#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BlackoutTheBackground

#include "Basic.hpp"

#include "FBgGlobalsScalarParameterDefaultDefines_structs.hpp"
#include "Engine_structs.hpp"
#include "EMpcPriority_structs.hpp"
#include "SS_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BlackoutTheBackground.BP_BlackoutTheBackground_C
// 0x0050 (0x0350 - 0x0300)
class ABP_BlackoutTheBackground_C final : public ASSBlackoutTheBackground
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0300(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          bInTheDark;                                        // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TargetSeconds;                                     // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ElapsedSeconds;                                    // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CurveValue;                                        // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        InterruptionRatio;                                 // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMpcPriority                                  StarH_;                                            // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFBgGlobalsScalarParameterDefaultDefines StarH__1n______;                                   // 0x0340(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ApplyParam(double TimeRate);
	void EndBlackOut(float TurningSeconds);
	void ExecuteUbergraph_BP_BlackoutTheBackground(int32 EntryPoint);
	double GetParam();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void SetStarH_(EMpcPriority InValue);
	void StartBlackOut(float BlackoutSeconds);
	void UpdateBlackOut(double DeltaSeconds);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BlackoutTheBackground_C">();
	}
	static class ABP_BlackoutTheBackground_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BlackoutTheBackground_C>();
	}
};
static_assert(alignof(ABP_BlackoutTheBackground_C) == 0x000008, "Wrong alignment on ABP_BlackoutTheBackground_C");
static_assert(sizeof(ABP_BlackoutTheBackground_C) == 0x000350, "Wrong size on ABP_BlackoutTheBackground_C");
static_assert(offsetof(ABP_BlackoutTheBackground_C, UberGraphFrame) == 0x000300, "Member 'ABP_BlackoutTheBackground_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BlackoutTheBackground_C, DefaultSceneRoot) == 0x000308, "Member 'ABP_BlackoutTheBackground_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_BlackoutTheBackground_C, bInTheDark) == 0x000310, "Member 'ABP_BlackoutTheBackground_C::bInTheDark' has a wrong offset!");
static_assert(offsetof(ABP_BlackoutTheBackground_C, TargetSeconds) == 0x000318, "Member 'ABP_BlackoutTheBackground_C::TargetSeconds' has a wrong offset!");
static_assert(offsetof(ABP_BlackoutTheBackground_C, ElapsedSeconds) == 0x000320, "Member 'ABP_BlackoutTheBackground_C::ElapsedSeconds' has a wrong offset!");
static_assert(offsetof(ABP_BlackoutTheBackground_C, CurveValue) == 0x000328, "Member 'ABP_BlackoutTheBackground_C::CurveValue' has a wrong offset!");
static_assert(offsetof(ABP_BlackoutTheBackground_C, InterruptionRatio) == 0x000330, "Member 'ABP_BlackoutTheBackground_C::InterruptionRatio' has a wrong offset!");
static_assert(offsetof(ABP_BlackoutTheBackground_C, StarH_) == 0x000338, "Member 'ABP_BlackoutTheBackground_C::StarH_' has a wrong offset!");
static_assert(offsetof(ABP_BlackoutTheBackground_C, StarH__1n______) == 0x000340, "Member 'ABP_BlackoutTheBackground_C::StarH__1n______' has a wrong offset!");

}

