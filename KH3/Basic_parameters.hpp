#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Basic

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "TresGame_structs.hpp"


namespace SDK::Params
{

// Function Basic.Basic_C.IsBasicCondtion
// 0xC000000 (0xC000000 - 0x0000)
struct alignas(0xC000000) Basic_C_IsBasicCondtion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ATresAIPawnBase*                        CallFunc_GetPlayer_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETresStateID                                  CallFunc_GetStateID_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ATresAIPawnBase*                        CallFunc_GetPlayer_ReturnValue2;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETresStateID                                  CallFunc_GetStateID_ReturnValue2;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATresAIPawnBase*                        CallFunc_GetPlayer_ReturnValue3;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETresStateID                                  CallFunc_GetStateID_ReturnValue3;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCinematic_ReturnValue;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TresIsBattleMode_ReturnValue;             // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue3;         // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOverLastExecuteSameGroupTime_ReturnValue; // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Basic_C_IsBasicCondtion) == 0xC000000, "Wrong alignment on Basic_C_IsBasicCondtion");
static_assert(sizeof(Basic_C_IsBasicCondtion) == 0xC000000, "Wrong size on Basic_C_IsBasicCondtion");
static_assert(offsetof(Basic_C_IsBasicCondtion, ReturnValue) == 0x000000, "Member 'Basic_C_IsBasicCondtion::ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_C_IsBasicCondtion, CallFunc_IsPlaying_ReturnValue) == 0x000001, "Member 'Basic_C_IsBasicCondtion::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_C_IsBasicCondtion, CallFunc_GetPlayer_ReturnValue) == 0x000008, "Member 'Basic_C_IsBasicCondtion::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_C_IsBasicCondtion, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'Basic_C_IsBasicCondtion::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_C_IsBasicCondtion, CallFunc_GetStateID_ReturnValue) == 0x000011, "Member 'Basic_C_IsBasicCondtion::CallFunc_GetStateID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_C_IsBasicCondtion, CallFunc_GetPlayer_ReturnValue2) == 0x000018, "Member 'Basic_C_IsBasicCondtion::CallFunc_GetPlayer_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Basic_C_IsBasicCondtion, CallFunc_GetStateID_ReturnValue2) == 0x000020, "Member 'Basic_C_IsBasicCondtion::CallFunc_GetStateID_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Basic_C_IsBasicCondtion, CallFunc_GetPlayer_ReturnValue3) == 0x000028, "Member 'Basic_C_IsBasicCondtion::CallFunc_GetPlayer_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Basic_C_IsBasicCondtion, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000030, "Member 'Basic_C_IsBasicCondtion::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_C_IsBasicCondtion, CallFunc_GetStateID_ReturnValue3) == 0x000031, "Member 'Basic_C_IsBasicCondtion::CallFunc_GetStateID_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Basic_C_IsBasicCondtion, CallFunc_IsCinematic_ReturnValue) == 0x000032, "Member 'Basic_C_IsBasicCondtion::CallFunc_IsCinematic_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_C_IsBasicCondtion, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x000033, "Member 'Basic_C_IsBasicCondtion::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Basic_C_IsBasicCondtion, CallFunc_Not_PreBool_ReturnValue2) == 0x000034, "Member 'Basic_C_IsBasicCondtion::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Basic_C_IsBasicCondtion, CallFunc_BooleanOR_ReturnValue) == 0x000035, "Member 'Basic_C_IsBasicCondtion::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_C_IsBasicCondtion, CallFunc_TresIsBattleMode_ReturnValue) == 0x000036, "Member 'Basic_C_IsBasicCondtion::CallFunc_TresIsBattleMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_C_IsBasicCondtion, CallFunc_EqualEqual_ByteByte_ReturnValue3) == 0x000037, "Member 'Basic_C_IsBasicCondtion::CallFunc_EqualEqual_ByteByte_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Basic_C_IsBasicCondtion, CallFunc_Not_PreBool_ReturnValue3) == 0x000038, "Member 'Basic_C_IsBasicCondtion::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Basic_C_IsBasicCondtion, CallFunc_BooleanOR_ReturnValue2) == 0x000039, "Member 'Basic_C_IsBasicCondtion::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Basic_C_IsBasicCondtion, CallFunc_IsOverLastExecuteSameGroupTime_ReturnValue) == 0x00003A, "Member 'Basic_C_IsBasicCondtion::CallFunc_IsOverLastExecuteSameGroupTime_ReturnValue' has a wrong offset!");

// Function Basic.Basic_C.IsLookDir
// 0x10101 (0x10101 - 0x0000)
struct alignas(0x10101) Basic_C_IsLookDir final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ATresCameraManager*                     CallFunc_GetLocalTresCameraManager_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLookTargetForPlayer_ReturnValue;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetActiveViewCamera_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLookAtTargetXY_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Basic_C_IsLookDir) == 0x010101, "Wrong alignment on Basic_C_IsLookDir");
static_assert(sizeof(Basic_C_IsLookDir) == 0x010101, "Wrong size on Basic_C_IsLookDir");
static_assert(offsetof(Basic_C_IsLookDir, Target) == 0x000000, "Member 'Basic_C_IsLookDir::Target' has a wrong offset!");
static_assert(offsetof(Basic_C_IsLookDir, Angle) == 0x000008, "Member 'Basic_C_IsLookDir::Angle' has a wrong offset!");
static_assert(offsetof(Basic_C_IsLookDir, Ret) == 0x00000C, "Member 'Basic_C_IsLookDir::Ret' has a wrong offset!");
static_assert(offsetof(Basic_C_IsLookDir, CallFunc_GetLocalTresCameraManager_ReturnValue) == 0x000010, "Member 'Basic_C_IsLookDir::CallFunc_GetLocalTresCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_C_IsLookDir, CallFunc_IsLookTargetForPlayer_ReturnValue) == 0x000018, "Member 'Basic_C_IsLookDir::CallFunc_IsLookTargetForPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_C_IsLookDir, CallFunc_GetActiveViewCamera_ReturnValue) == 0x000020, "Member 'Basic_C_IsLookDir::CallFunc_GetActiveViewCamera_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_C_IsLookDir, CallFunc_IsLookAtTargetXY_ReturnValue) == 0x000028, "Member 'Basic_C_IsLookDir::CallFunc_IsLookAtTargetXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_C_IsLookDir, CallFunc_BooleanOR_ReturnValue) == 0x000029, "Member 'Basic_C_IsLookDir::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function Basic.Basic_C.IsLook2D
// 0x112E95F0 (0x112E95F0 - 0x0000)
struct Basic_C_IsLook2D final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              InRate;                                            // 0x000C(0x112E95F0)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLookTargetForPlayer_ReturnValue;        // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetActorPosToScreenPosRate_ReturnValue;   // 0x0018(0x112E95F0)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInCenter_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Basic_C_IsLook2D) == 0x112E95F0, "Wrong alignment on Basic_C_IsLook2D");
static_assert(sizeof(Basic_C_IsLook2D) == 0x112E95F0, "Wrong size on Basic_C_IsLook2D");
static_assert(offsetof(Basic_C_IsLook2D, Target) == 0x000000, "Member 'Basic_C_IsLook2D::Target' has a wrong offset!");
static_assert(offsetof(Basic_C_IsLook2D, Angle) == 0x000008, "Member 'Basic_C_IsLook2D::Angle' has a wrong offset!");
static_assert(offsetof(Basic_C_IsLook2D, InRate) == 0x00000C, "Member 'Basic_C_IsLook2D::InRate' has a wrong offset!");
static_assert(offsetof(Basic_C_IsLook2D, Ret) == 0x000014, "Member 'Basic_C_IsLook2D::Ret' has a wrong offset!");
static_assert(offsetof(Basic_C_IsLook2D, CallFunc_IsLookTargetForPlayer_ReturnValue) == 0x000015, "Member 'Basic_C_IsLook2D::CallFunc_IsLookTargetForPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_C_IsLook2D, CallFunc_GetActorPosToScreenPosRate_ReturnValue) == 0x000018, "Member 'Basic_C_IsLook2D::CallFunc_GetActorPosToScreenPosRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_C_IsLook2D, CallFunc_IsInCenter_ReturnValue) == 0x000020, "Member 'Basic_C_IsLook2D::CallFunc_IsInCenter_ReturnValue' has a wrong offset!");

// Function Basic.Basic_C.IsLookTargetForPlayer
// 0x0020 (0x0020 - 0x0000)
struct Basic_C_IsLookTargetForPlayer final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ATresAIPawnBase*                        CallFunc_GetPlayer_ReturnValue;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLookAtTargetXY_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Basic_C_IsLookTargetForPlayer) == 0x000008, "Wrong alignment on Basic_C_IsLookTargetForPlayer");
static_assert(sizeof(Basic_C_IsLookTargetForPlayer) == 0x000020, "Wrong size on Basic_C_IsLookTargetForPlayer");
static_assert(offsetof(Basic_C_IsLookTargetForPlayer, Target) == 0x000000, "Member 'Basic_C_IsLookTargetForPlayer::Target' has a wrong offset!");
static_assert(offsetof(Basic_C_IsLookTargetForPlayer, Angle) == 0x000008, "Member 'Basic_C_IsLookTargetForPlayer::Angle' has a wrong offset!");
static_assert(offsetof(Basic_C_IsLookTargetForPlayer, ReturnValue) == 0x00000C, "Member 'Basic_C_IsLookTargetForPlayer::ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_C_IsLookTargetForPlayer, CallFunc_GetPlayer_ReturnValue) == 0x000010, "Member 'Basic_C_IsLookTargetForPlayer::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_C_IsLookTargetForPlayer, CallFunc_IsLookAtTargetXY_ReturnValue) == 0x000018, "Member 'Basic_C_IsLookTargetForPlayer::CallFunc_IsLookAtTargetXY_ReturnValue' has a wrong offset!");

// Function Basic.Basic_C.Execute
// 0x12001 (0x12001 - 0x0000)
struct alignas(0x12001) Basic_C_Execute final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBasicCondtion_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Basic_C_Execute) == 0x012001, "Wrong alignment on Basic_C_Execute");
static_assert(sizeof(Basic_C_Execute) == 0x012001, "Wrong size on Basic_C_Execute");
static_assert(offsetof(Basic_C_Execute, ReturnValue) == 0x000000, "Member 'Basic_C_Execute::ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_C_Execute, CallFunc_IsBasicCondtion_ReturnValue) == 0x000001, "Member 'Basic_C_Execute::CallFunc_IsBasicCondtion_ReturnValue' has a wrong offset!");

}

