#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ST_FloatRange

#include "Basic.hpp"


namespace SDK
{

// UserDefinedStruct ST_FloatRange.ST_FloatRange
// 0x2E002E (0x2E002E - 0x0000)
struct alignas(0x2E002E) FST_FloatRange final
{
public:
	float                                         Min_2_D55757CB44867380560A97B3AB8DC4EC;            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max_4_4546E60F4B183B3557EDD29905092176;            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InclusiveMin_7_4EFFC1434C01F3BABB126EBC03D96302;   // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InclusiveMax_9_EDEA9F194174073C6C137888DCA60D63;   // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FST_FloatRange) == 0x2E002E, "Wrong alignment on FST_FloatRange");
static_assert(sizeof(FST_FloatRange) == 0x2E002E, "Wrong size on FST_FloatRange");
static_assert(offsetof(FST_FloatRange, Min_2_D55757CB44867380560A97B3AB8DC4EC) == 0x000000, "Member 'FST_FloatRange::Min_2_D55757CB44867380560A97B3AB8DC4EC' has a wrong offset!");
static_assert(offsetof(FST_FloatRange, Max_4_4546E60F4B183B3557EDD29905092176) == 0x000004, "Member 'FST_FloatRange::Max_4_4546E60F4B183B3557EDD29905092176' has a wrong offset!");
static_assert(offsetof(FST_FloatRange, InclusiveMin_7_4EFFC1434C01F3BABB126EBC03D96302) == 0x000008, "Member 'FST_FloatRange::InclusiveMin_7_4EFFC1434C01F3BABB126EBC03D96302' has a wrong offset!");
static_assert(offsetof(FST_FloatRange, InclusiveMax_9_EDEA9F194174073C6C137888DCA60D63) == 0x000009, "Member 'FST_FloatRange::InclusiveMax_9_EDEA9F194174073C6C137888DCA60D63' has a wrong offset!");

}

