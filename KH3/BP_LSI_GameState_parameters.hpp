#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LSI_GameState

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_LSI_GameState.BP_LSI_GameState_C.ExecuteUbergraph_BP_LSI_GameState
// 0x8080800 (0x8080800 - 0x0000)
struct alignas(0x8080800) BP_LSI_GameState_C_ExecuteUbergraph_BP_LSI_GameState final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAccurateRealTime_Seconds;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAccurateRealTime_PartialSeconds;       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LSI_GameState_C_ExecuteUbergraph_BP_LSI_GameState) == 0x8080800, "Wrong alignment on BP_LSI_GameState_C_ExecuteUbergraph_BP_LSI_GameState");
static_assert(sizeof(BP_LSI_GameState_C_ExecuteUbergraph_BP_LSI_GameState) == 0x8080800, "Wrong size on BP_LSI_GameState_C_ExecuteUbergraph_BP_LSI_GameState");
static_assert(offsetof(BP_LSI_GameState_C_ExecuteUbergraph_BP_LSI_GameState, EntryPoint) == 0x000000, "Member 'BP_LSI_GameState_C_ExecuteUbergraph_BP_LSI_GameState::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LSI_GameState_C_ExecuteUbergraph_BP_LSI_GameState, CallFunc_GetAccurateRealTime_Seconds) == 0x000004, "Member 'BP_LSI_GameState_C_ExecuteUbergraph_BP_LSI_GameState::CallFunc_GetAccurateRealTime_Seconds' has a wrong offset!");
static_assert(offsetof(BP_LSI_GameState_C_ExecuteUbergraph_BP_LSI_GameState, CallFunc_GetAccurateRealTime_PartialSeconds) == 0x000008, "Member 'BP_LSI_GameState_C_ExecuteUbergraph_BP_LSI_GameState::CallFunc_GetAccurateRealTime_PartialSeconds' has a wrong offset!");

}

