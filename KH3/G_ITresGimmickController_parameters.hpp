#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: G_ITresGimmickController

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function g_ITresGimmickController.g_ITresGimmickController_C.TresStartGimmick
// 0x66D5C380 (0x66D5C380 - 0x0000)
struct alignas(0x66D5C380) G_ITresGimmickController_C_TresStartGimmick final
{
public:
	bool                                          ActivateGimmick;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Reset;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          PlayAnimation;                                     // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ControllerId;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(G_ITresGimmickController_C_TresStartGimmick) == 0x66D5C380, "Wrong alignment on G_ITresGimmickController_C_TresStartGimmick");
static_assert(sizeof(G_ITresGimmickController_C_TresStartGimmick) == 0x66D5C380, "Wrong size on G_ITresGimmickController_C_TresStartGimmick");
static_assert(offsetof(G_ITresGimmickController_C_TresStartGimmick, ActivateGimmick) == 0x000000, "Member 'G_ITresGimmickController_C_TresStartGimmick::ActivateGimmick' has a wrong offset!");
static_assert(offsetof(G_ITresGimmickController_C_TresStartGimmick, Reset) == 0x000001, "Member 'G_ITresGimmickController_C_TresStartGimmick::Reset' has a wrong offset!");
static_assert(offsetof(G_ITresGimmickController_C_TresStartGimmick, PlayAnimation) == 0x000002, "Member 'G_ITresGimmickController_C_TresStartGimmick::PlayAnimation' has a wrong offset!");
static_assert(offsetof(G_ITresGimmickController_C_TresStartGimmick, ControllerId) == 0x000008, "Member 'G_ITresGimmickController_C_TresStartGimmick::ControllerId' has a wrong offset!");

// Function g_ITresGimmickController.g_ITresGimmickController_C.TresStopGimmick
// 0x1020102 (0x1020102 - 0x0000)
struct alignas(0x1020102) G_ITresGimmickController_C_TresStopGimmick final
{
public:
	bool                                          PlayAnimation;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ControllerId;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(G_ITresGimmickController_C_TresStopGimmick) == 0x1020102, "Wrong alignment on G_ITresGimmickController_C_TresStopGimmick");
static_assert(sizeof(G_ITresGimmickController_C_TresStopGimmick) == 0x1020102, "Wrong size on G_ITresGimmickController_C_TresStopGimmick");
static_assert(offsetof(G_ITresGimmickController_C_TresStopGimmick, PlayAnimation) == 0x000000, "Member 'G_ITresGimmickController_C_TresStopGimmick::PlayAnimation' has a wrong offset!");
static_assert(offsetof(G_ITresGimmickController_C_TresStopGimmick, ControllerId) == 0x000008, "Member 'G_ITresGimmickController_C_TresStopGimmick::ControllerId' has a wrong offset!");

// Function g_ITresGimmickController.g_ITresGimmickController_C.TresResetGimmick
// 0x10101 (0x10101 - 0x0000)
struct alignas(0x10101) G_ITresGimmickController_C_TresResetGimmick final
{
public:
	class FName                                   ControllerId;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(G_ITresGimmickController_C_TresResetGimmick) == 0x010101, "Wrong alignment on G_ITresGimmickController_C_TresResetGimmick");
static_assert(sizeof(G_ITresGimmickController_C_TresResetGimmick) == 0x010101, "Wrong size on G_ITresGimmickController_C_TresResetGimmick");
static_assert(offsetof(G_ITresGimmickController_C_TresResetGimmick, ControllerId) == 0x000000, "Member 'G_ITresGimmickController_C_TresResetGimmick::ControllerId' has a wrong offset!");

// Function g_ITresGimmickController.g_ITresGimmickController_C.TresSetControlGimmick
// 0x10101 (0x10101 - 0x0000)
struct alignas(0x10101) G_ITresGimmickController_C_TresSetControlGimmick final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Param1;                                            // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param2;                                            // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param3;                                            // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param4;                                            // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Param5;                                            // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Param6;                                            // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ControllerId;                                      // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(G_ITresGimmickController_C_TresSetControlGimmick) == 0x010101, "Wrong alignment on G_ITresGimmickController_C_TresSetControlGimmick");
static_assert(sizeof(G_ITresGimmickController_C_TresSetControlGimmick) == 0x010101, "Wrong size on G_ITresGimmickController_C_TresSetControlGimmick");
static_assert(offsetof(G_ITresGimmickController_C_TresSetControlGimmick, Name_0) == 0x000000, "Member 'G_ITresGimmickController_C_TresSetControlGimmick::Name_0' has a wrong offset!");
static_assert(offsetof(G_ITresGimmickController_C_TresSetControlGimmick, Param1) == 0x000008, "Member 'G_ITresGimmickController_C_TresSetControlGimmick::Param1' has a wrong offset!");
static_assert(offsetof(G_ITresGimmickController_C_TresSetControlGimmick, Param2) == 0x000014, "Member 'G_ITresGimmickController_C_TresSetControlGimmick::Param2' has a wrong offset!");
static_assert(offsetof(G_ITresGimmickController_C_TresSetControlGimmick, Param3) == 0x000018, "Member 'G_ITresGimmickController_C_TresSetControlGimmick::Param3' has a wrong offset!");
static_assert(offsetof(G_ITresGimmickController_C_TresSetControlGimmick, Param4) == 0x00001C, "Member 'G_ITresGimmickController_C_TresSetControlGimmick::Param4' has a wrong offset!");
static_assert(offsetof(G_ITresGimmickController_C_TresSetControlGimmick, Param5) == 0x000020, "Member 'G_ITresGimmickController_C_TresSetControlGimmick::Param5' has a wrong offset!");
static_assert(offsetof(G_ITresGimmickController_C_TresSetControlGimmick, Param6) == 0x000028, "Member 'G_ITresGimmickController_C_TresSetControlGimmick::Param6' has a wrong offset!");
static_assert(offsetof(G_ITresGimmickController_C_TresSetControlGimmick, ControllerId) == 0x000030, "Member 'G_ITresGimmickController_C_TresSetControlGimmick::ControllerId' has a wrong offset!");

// Function g_ITresGimmickController.g_ITresGimmickController_C.TresGetControlGimmick
// 0x10401 (0x10401 - 0x0000)
struct alignas(0x10401) G_ITresGimmickController_C_TresGetControlGimmick final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Param1_;                                           // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param2_;                                           // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param3_;                                           // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Param4_;                                           // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param5_;                                           // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Param6_;                                           // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ControllerId;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Param1;                                            // 0x0040(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param2;                                            // 0x004C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param3;                                            // 0x0050(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param4;                                            // 0x0054(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Param5;                                            // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Param6;                                            // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(G_ITresGimmickController_C_TresGetControlGimmick) == 0x010401, "Wrong alignment on G_ITresGimmickController_C_TresGetControlGimmick");
static_assert(sizeof(G_ITresGimmickController_C_TresGetControlGimmick) == 0x010401, "Wrong size on G_ITresGimmickController_C_TresGetControlGimmick");
static_assert(offsetof(G_ITresGimmickController_C_TresGetControlGimmick, Name_0) == 0x000000, "Member 'G_ITresGimmickController_C_TresGetControlGimmick::Name_0' has a wrong offset!");
static_assert(offsetof(G_ITresGimmickController_C_TresGetControlGimmick, Param1_) == 0x000008, "Member 'G_ITresGimmickController_C_TresGetControlGimmick::Param1_' has a wrong offset!");
static_assert(offsetof(G_ITresGimmickController_C_TresGetControlGimmick, Param2_) == 0x000014, "Member 'G_ITresGimmickController_C_TresGetControlGimmick::Param2_' has a wrong offset!");
static_assert(offsetof(G_ITresGimmickController_C_TresGetControlGimmick, Param3_) == 0x000018, "Member 'G_ITresGimmickController_C_TresGetControlGimmick::Param3_' has a wrong offset!");
static_assert(offsetof(G_ITresGimmickController_C_TresGetControlGimmick, Param4_) == 0x000020, "Member 'G_ITresGimmickController_C_TresGetControlGimmick::Param4_' has a wrong offset!");
static_assert(offsetof(G_ITresGimmickController_C_TresGetControlGimmick, Param5_) == 0x000028, "Member 'G_ITresGimmickController_C_TresGetControlGimmick::Param5_' has a wrong offset!");
static_assert(offsetof(G_ITresGimmickController_C_TresGetControlGimmick, Param6_) == 0x000030, "Member 'G_ITresGimmickController_C_TresGetControlGimmick::Param6_' has a wrong offset!");
static_assert(offsetof(G_ITresGimmickController_C_TresGetControlGimmick, ControllerId) == 0x000038, "Member 'G_ITresGimmickController_C_TresGetControlGimmick::ControllerId' has a wrong offset!");
static_assert(offsetof(G_ITresGimmickController_C_TresGetControlGimmick, Param1) == 0x000040, "Member 'G_ITresGimmickController_C_TresGetControlGimmick::Param1' has a wrong offset!");
static_assert(offsetof(G_ITresGimmickController_C_TresGetControlGimmick, Param2) == 0x00004C, "Member 'G_ITresGimmickController_C_TresGetControlGimmick::Param2' has a wrong offset!");
static_assert(offsetof(G_ITresGimmickController_C_TresGetControlGimmick, Param3) == 0x000050, "Member 'G_ITresGimmickController_C_TresGetControlGimmick::Param3' has a wrong offset!");
static_assert(offsetof(G_ITresGimmickController_C_TresGetControlGimmick, Param4) == 0x000054, "Member 'G_ITresGimmickController_C_TresGetControlGimmick::Param4' has a wrong offset!");
static_assert(offsetof(G_ITresGimmickController_C_TresGetControlGimmick, Param5) == 0x000058, "Member 'G_ITresGimmickController_C_TresGetControlGimmick::Param5' has a wrong offset!");
static_assert(offsetof(G_ITresGimmickController_C_TresGetControlGimmick, Param6) == 0x000060, "Member 'G_ITresGimmickController_C_TresGetControlGimmick::Param6' has a wrong offset!");

}

