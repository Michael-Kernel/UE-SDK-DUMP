#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Look2D

#include "Basic.hpp"

#include "Basic_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Look2D.Look2D_C
// 0x112E9578 (0x112E95F0 - 0x0078)
class ULook2D_C final : public UBasic_C
{
public:
	class AActor*                                 Target;                                            // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              InRate;                                            // 0x0084(0x112E95F0)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool Execute();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Look2D_C">();
	}
	static class ULook2D_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULook2D_C>();
	}
};
static_assert(alignof(ULook2D_C) == 0x112E95F0, "Wrong alignment on ULook2D_C");
static_assert(sizeof(ULook2D_C) == 0x112E95F0, "Wrong size on ULook2D_C");
static_assert(offsetof(ULook2D_C, Target) == 0x000078, "Member 'ULook2D_C::Target' has a wrong offset!");
static_assert(offsetof(ULook2D_C, Angle) == 0x000080, "Member 'ULook2D_C::Angle' has a wrong offset!");
static_assert(offsetof(ULook2D_C, InRate) == 0x000084, "Member 'ULook2D_C::InRate' has a wrong offset!");

}

