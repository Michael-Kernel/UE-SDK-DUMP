#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mercuna3DMovement

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Mercuna3DMovement_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class Mercuna3DMovement.Mercuna3DMovementComponent
// 0x1167B95F (0x1168E3C0 - 0x12A61)
class UMercuna3DMovementComponent final : public UPawnMovementComponent
{
public:
	uint8                                         Pad_288[0x8];                                      // 0x0288(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMercuna3DMovementProperties           MovementProperties;                                // 0x0290(0x1168E3C0)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         bPositionCorrected : 1;                            // 0x02A8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Acceleration;                                      // 0x02AC(0x000C)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                AngularVelocity;                                   // 0x02B8(0x000C)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C4[0xC];                                      // 0x02C4(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	struct FVector GetLocalVelocity() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Mercuna3DMovementComponent">();
	}
	static class UMercuna3DMovementComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMercuna3DMovementComponent>();
	}
};
static_assert(alignof(UMercuna3DMovementComponent) == 0x1168E3C0, "Wrong alignment on UMercuna3DMovementComponent");
static_assert(sizeof(UMercuna3DMovementComponent) == 0x1168E3C0, "Wrong size on UMercuna3DMovementComponent");
static_assert(offsetof(UMercuna3DMovementComponent, MovementProperties) == 0x000290, "Member 'UMercuna3DMovementComponent::MovementProperties' has a wrong offset!");
static_assert(offsetof(UMercuna3DMovementComponent, Acceleration) == 0x0002AC, "Member 'UMercuna3DMovementComponent::Acceleration' has a wrong offset!");
static_assert(offsetof(UMercuna3DMovementComponent, AngularVelocity) == 0x0002B8, "Member 'UMercuna3DMovementComponent::AngularVelocity' has a wrong offset!");

// Class Mercuna3DMovement.Mercuna3DMovementInterface
// 0x0000 (0x0040 - 0x0040)
class IMercuna3DMovementInterface final : public IInterface
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Mercuna3DMovementInterface">();
	}
	static class IMercuna3DMovementInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IMercuna3DMovementInterface>();
	}
};
static_assert(alignof(IMercuna3DMovementInterface) == 0x000008, "Wrong alignment on IMercuna3DMovementInterface");
static_assert(sizeof(IMercuna3DMovementInterface) == 0x000040, "Wrong size on IMercuna3DMovementInterface");

}

