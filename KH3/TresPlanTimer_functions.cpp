#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TresPlanTimer

#include "Basic.hpp"

#include "TresPlanTimer_classes.hpp"
#include "TresPlanTimer_parameters.hpp"


namespace SDK
{

// Function TresPlanTimer.TresPlanTimer_C.OnTimer__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UTresPlanTimer_C::OnTimer__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TresPlanTimer_C", "OnTimer__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TresPlanTimer.TresPlanTimer_C.ExecuteUbergraph_TresPlanTimer
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTresPlanTimer_C::ExecuteUbergraph_TresPlanTimer(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TresPlanTimer_C", "ExecuteUbergraph_TresPlanTimer");

	Params::TresPlanTimer_C_ExecuteUbergraph_TresPlanTimer Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TresPlanTimer.TresPlanTimer_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTresPlanTimer_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TresPlanTimer_C", "ReceiveEndPlay");

	Params::TresPlanTimer_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TresPlanTimer.TresPlanTimer_C.OnUnpauseTimer
// (BlueprintCallable, BlueprintEvent)

void UTresPlanTimer_C::OnUnpauseTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TresPlanTimer_C", "OnUnpauseTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TresPlanTimer.TresPlanTimer_C.OnPauseTimer
// (BlueprintCallable, BlueprintEvent)

void UTresPlanTimer_C::OnPauseTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TresPlanTimer_C", "OnPauseTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TresPlanTimer.TresPlanTimer_C.TimerDelegate
// (BlueprintCallable, BlueprintEvent)

void UTresPlanTimer_C::TimerDelegate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TresPlanTimer_C", "TimerDelegate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TresPlanTimer.TresPlanTimer_C.OnStopTimer
// (BlueprintCallable, BlueprintEvent)

void UTresPlanTimer_C::OnStopTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TresPlanTimer_C", "OnStopTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TresPlanTimer.TresPlanTimer_C.OnStartTimer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Paused                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UTresPlanTimer_C::OnStartTimer(float Time, bool Paused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TresPlanTimer_C", "OnStartTimer");

	Params::TresPlanTimer_C_OnStartTimer Parms{};

	Parms.Time = Time;
	Parms.Paused = Paused;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TresPlanTimer.TresPlanTimer_C.StartTimer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Paused                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UTresPlanTimer_C::StartTimer(float Time, bool Paused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TresPlanTimer_C", "StartTimer");

	Params::TresPlanTimer_C_StartTimer Parms{};

	Parms.Time = Time;
	Parms.Paused = Paused;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TresPlanTimer.TresPlanTimer_C.StopTimer
// (Public, BlueprintCallable, BlueprintEvent)

void UTresPlanTimer_C::StopTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TresPlanTimer_C", "StopTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TresPlanTimer.TresPlanTimer_C.PauseTimer
// (Public, BlueprintCallable, BlueprintEvent)

void UTresPlanTimer_C::PauseTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TresPlanTimer_C", "PauseTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TresPlanTimer.TresPlanTimer_C.UnpauseTimer
// (Public, BlueprintCallable, BlueprintEvent)

void UTresPlanTimer_C::UnpauseTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TresPlanTimer_C", "UnpauseTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TresPlanTimer.TresPlanTimer_C.IsPauseTimer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Paused                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UTresPlanTimer_C::IsPauseTimer(bool* Paused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TresPlanTimer_C", "IsPauseTimer");

	Params::TresPlanTimer_C_IsPauseTimer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Paused != nullptr)
		*Paused = Parms.Paused;
}


// Function TresPlanTimer.TresPlanTimer_C.IsStartTimer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Started                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UTresPlanTimer_C::IsStartTimer(bool* Started)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TresPlanTimer_C", "IsStartTimer");

	Params::TresPlanTimer_C_IsStartTimer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Started != nullptr)
		*Started = Parms.Started;
}

}

