#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_fog_sphere_00

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "TresGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_fog_sphere_00.BP_fog_sphere_00_C
// 0x0000 (0x1EF72E00 - 0x1EF72E00)
class ABP_fog_sphere_00_C final : public ATresMapEffectActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03E8(0x6F26)(Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Sphere;                                            // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     BaseMaterial;                                      // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BOHeight;                                          // 0x0408(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Camera_Fade_Distance;                              // 0x040C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Depth_Fade_Distance;                               // 0x0410(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Dist;                                              // 0x0414(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FOG_A_scale;                                       // 0x0418(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FOG_A_speed_U;                                     // 0x041C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FOG_A_speed_V;                                     // 0x0420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FOG_B_scale;                                       // 0x0424(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FOG_B_speed_U;                                     // 0x0428(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FOG_B_speed_V;                                     // 0x042C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FOG_blend_AtoB;                                    // 0x0430(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FOG_C_scale;                                       // 0x0434(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FOG_C_speed_U;                                     // 0x0438(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FOG_C_speed_V;                                     // 0x043C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Fresnel_con;                                       // 0x0440(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Fresnel_power;                                     // 0x0444(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Kyoku;                                             // 0x0448(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Opacity;                                           // 0x044C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Opacity_contrast;                                  // 0x0450(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Random_Str;                                        // 0x0454(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color_emissive;                                    // 0x0458(0x112EAE80)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Texture_A_alpha;                                   // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Texture_B_alpha;                                   // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_fog_sphere_00(int32 EntryPoint);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void SetupOldConstructionScript();
	void SetupMaterial();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_fog_sphere_00_C">();
	}
	static class ABP_fog_sphere_00_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_fog_sphere_00_C>();
	}
};
static_assert(alignof(ABP_fog_sphere_00_C) == 0x1EF72E00, "Wrong alignment on ABP_fog_sphere_00_C");
static_assert(sizeof(ABP_fog_sphere_00_C) == 0x1EF72E00, "Wrong size on ABP_fog_sphere_00_C");
static_assert(offsetof(ABP_fog_sphere_00_C, UberGraphFrame) == 0x0003E8, "Member 'ABP_fog_sphere_00_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_fog_sphere_00_C, Sphere) == 0x0003F0, "Member 'ABP_fog_sphere_00_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_fog_sphere_00_C, BaseMaterial) == 0x0003F8, "Member 'ABP_fog_sphere_00_C::BaseMaterial' has a wrong offset!");
static_assert(offsetof(ABP_fog_sphere_00_C, Mid) == 0x000400, "Member 'ABP_fog_sphere_00_C::Mid' has a wrong offset!");
static_assert(offsetof(ABP_fog_sphere_00_C, BOHeight) == 0x000408, "Member 'ABP_fog_sphere_00_C::BOHeight' has a wrong offset!");
static_assert(offsetof(ABP_fog_sphere_00_C, Camera_Fade_Distance) == 0x00040C, "Member 'ABP_fog_sphere_00_C::Camera_Fade_Distance' has a wrong offset!");
static_assert(offsetof(ABP_fog_sphere_00_C, Depth_Fade_Distance) == 0x000410, "Member 'ABP_fog_sphere_00_C::Depth_Fade_Distance' has a wrong offset!");
static_assert(offsetof(ABP_fog_sphere_00_C, Dist) == 0x000414, "Member 'ABP_fog_sphere_00_C::Dist' has a wrong offset!");
static_assert(offsetof(ABP_fog_sphere_00_C, FOG_A_scale) == 0x000418, "Member 'ABP_fog_sphere_00_C::FOG_A_scale' has a wrong offset!");
static_assert(offsetof(ABP_fog_sphere_00_C, FOG_A_speed_U) == 0x00041C, "Member 'ABP_fog_sphere_00_C::FOG_A_speed_U' has a wrong offset!");
static_assert(offsetof(ABP_fog_sphere_00_C, FOG_A_speed_V) == 0x000420, "Member 'ABP_fog_sphere_00_C::FOG_A_speed_V' has a wrong offset!");
static_assert(offsetof(ABP_fog_sphere_00_C, FOG_B_scale) == 0x000424, "Member 'ABP_fog_sphere_00_C::FOG_B_scale' has a wrong offset!");
static_assert(offsetof(ABP_fog_sphere_00_C, FOG_B_speed_U) == 0x000428, "Member 'ABP_fog_sphere_00_C::FOG_B_speed_U' has a wrong offset!");
static_assert(offsetof(ABP_fog_sphere_00_C, FOG_B_speed_V) == 0x00042C, "Member 'ABP_fog_sphere_00_C::FOG_B_speed_V' has a wrong offset!");
static_assert(offsetof(ABP_fog_sphere_00_C, FOG_blend_AtoB) == 0x000430, "Member 'ABP_fog_sphere_00_C::FOG_blend_AtoB' has a wrong offset!");
static_assert(offsetof(ABP_fog_sphere_00_C, FOG_C_scale) == 0x000434, "Member 'ABP_fog_sphere_00_C::FOG_C_scale' has a wrong offset!");
static_assert(offsetof(ABP_fog_sphere_00_C, FOG_C_speed_U) == 0x000438, "Member 'ABP_fog_sphere_00_C::FOG_C_speed_U' has a wrong offset!");
static_assert(offsetof(ABP_fog_sphere_00_C, FOG_C_speed_V) == 0x00043C, "Member 'ABP_fog_sphere_00_C::FOG_C_speed_V' has a wrong offset!");
static_assert(offsetof(ABP_fog_sphere_00_C, Fresnel_con) == 0x000440, "Member 'ABP_fog_sphere_00_C::Fresnel_con' has a wrong offset!");
static_assert(offsetof(ABP_fog_sphere_00_C, Fresnel_power) == 0x000444, "Member 'ABP_fog_sphere_00_C::Fresnel_power' has a wrong offset!");
static_assert(offsetof(ABP_fog_sphere_00_C, Kyoku) == 0x000448, "Member 'ABP_fog_sphere_00_C::Kyoku' has a wrong offset!");
static_assert(offsetof(ABP_fog_sphere_00_C, Opacity) == 0x00044C, "Member 'ABP_fog_sphere_00_C::Opacity' has a wrong offset!");
static_assert(offsetof(ABP_fog_sphere_00_C, Opacity_contrast) == 0x000450, "Member 'ABP_fog_sphere_00_C::Opacity_contrast' has a wrong offset!");
static_assert(offsetof(ABP_fog_sphere_00_C, Random_Str) == 0x000454, "Member 'ABP_fog_sphere_00_C::Random_Str' has a wrong offset!");
static_assert(offsetof(ABP_fog_sphere_00_C, Color_emissive) == 0x000458, "Member 'ABP_fog_sphere_00_C::Color_emissive' has a wrong offset!");
static_assert(offsetof(ABP_fog_sphere_00_C, Texture_A_alpha) == 0x000468, "Member 'ABP_fog_sphere_00_C::Texture_A_alpha' has a wrong offset!");
static_assert(offsetof(ABP_fog_sphere_00_C, Texture_B_alpha) == 0x000470, "Member 'ABP_fog_sphere_00_C::Texture_B_alpha' has a wrong offset!");

}

