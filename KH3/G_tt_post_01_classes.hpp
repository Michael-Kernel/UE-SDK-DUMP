#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: G_tt_post_01

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "G_tt_post_st_Present_structs.hpp"
#include "G_SimpleReactorStaticBase_classes.hpp"
#include "TresGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass g_tt_post_01.g_tt_post_01_C
// 0x0000 (0x1EF72E00 - 0x1EF72E00)
class AG_tt_post_01_C final : public AG_SimpleReactorStaticBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_G_tt_post_01_C;                     // 0x05F8(0x6F26)(Transient, DuplicateTransient)
	class UCapsuleComponent*                      ItemCheck_New;                                     // 0x0600(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTresReactorComponent*                  TresReactor_Send;                                  // 0x0608(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQEX_CapsuleIndirectShadowComponent*   SQEX_CapsuleIndirectShadow;                        // 0x0610(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             DataTable;                                         // 0x0618(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Temp_Flags;                                        // 0x0620(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	int32                                         Temp_RareCount;                                    // 0x0630(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_TotalWait;                                    // 0x0634(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FG_tt_post_st_Present>          Temp_Presents;                                     // 0x0638(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          Temp_OverlapItemCheck;                             // 0x0648(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_g_tt_post_01(int32 EntryPoint);
	void BndEvt__ItemCheck_New_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__ItemCheck_New_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BPEV_OnStartGimmickForPlan(bool PlayAnimation);
	void BPEV_OnStopGimmickForPlan(bool PlayAnimation);
	void ReceiveBeginPlay();
	void BndEvt__TresReactor_K2Node_ComponentBoundEvent_14_TresReactorDoCommandSignature__DelegateSignature(class ATresCharPawnBase* CommandCauser, ETresCommandKind CommandID, class UTresReactorComponent* ReactorComponent);
	void BndEvt__TresReactor_Send_K2Node_ComponentBoundEvent_7_TresReactorDoCommandSignature__DelegateSignature(class ATresCharPawnBase* CommandCauser, ETresCommandKind CommandID, class UTresReactorComponent* ReactorComponent);
	void UserConstructionScript();
	void ChoisePresent(class FName* Item1, int32* Num1);
	void GetItem(const struct FTresGimmickTT_Post_PresentDataTable& Table, class FName* Item1, int32* Num1);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"g_tt_post_01_C">();
	}
	static class AG_tt_post_01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AG_tt_post_01_C>();
	}
};
static_assert(alignof(AG_tt_post_01_C) == 0x1EF72E00, "Wrong alignment on AG_tt_post_01_C");
static_assert(sizeof(AG_tt_post_01_C) == 0x1EF72E00, "Wrong size on AG_tt_post_01_C");
static_assert(offsetof(AG_tt_post_01_C, UberGraphFrame_G_tt_post_01_C) == 0x0005F8, "Member 'AG_tt_post_01_C::UberGraphFrame_G_tt_post_01_C' has a wrong offset!");
static_assert(offsetof(AG_tt_post_01_C, ItemCheck_New) == 0x000600, "Member 'AG_tt_post_01_C::ItemCheck_New' has a wrong offset!");
static_assert(offsetof(AG_tt_post_01_C, TresReactor_Send) == 0x000608, "Member 'AG_tt_post_01_C::TresReactor_Send' has a wrong offset!");
static_assert(offsetof(AG_tt_post_01_C, SQEX_CapsuleIndirectShadow) == 0x000610, "Member 'AG_tt_post_01_C::SQEX_CapsuleIndirectShadow' has a wrong offset!");
static_assert(offsetof(AG_tt_post_01_C, DataTable) == 0x000618, "Member 'AG_tt_post_01_C::DataTable' has a wrong offset!");
static_assert(offsetof(AG_tt_post_01_C, Temp_Flags) == 0x000620, "Member 'AG_tt_post_01_C::Temp_Flags' has a wrong offset!");
static_assert(offsetof(AG_tt_post_01_C, Temp_RareCount) == 0x000630, "Member 'AG_tt_post_01_C::Temp_RareCount' has a wrong offset!");
static_assert(offsetof(AG_tt_post_01_C, Temp_TotalWait) == 0x000634, "Member 'AG_tt_post_01_C::Temp_TotalWait' has a wrong offset!");
static_assert(offsetof(AG_tt_post_01_C, Temp_Presents) == 0x000638, "Member 'AG_tt_post_01_C::Temp_Presents' has a wrong offset!");
static_assert(offsetof(AG_tt_post_01_C, Temp_OverlapItemCheck) == 0x000648, "Member 'AG_tt_post_01_C::Temp_OverlapItemCheck' has a wrong offset!");

}

