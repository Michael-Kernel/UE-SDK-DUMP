#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TresPlayerStateEventCamera_NPC_talk

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "TresGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TresPlayerStateEventCamera_NPC_talk.BP_TresPlayerStateEventCamera_NPC_talk_C
// 0x6ED6 (0x6F26 - 0x0050)
class UBP_TresPlayerStateEventCamera_NPC_talk_C final : public UTresPlayerStateEvent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0050(0x6F26)(Transient, DuplicateTransient)
	class ATresCharPawnBase*                      Tres_Char_Pawn_base;                               // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ON_teacup_finish;                                  // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Center;                                            // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATresCameraBase*                        Camera;                                            // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATresCameraRotTarget*                   Camera_RotTarget;                                  // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATresCameraAnim*                        Camera_anim;                                       // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VECTOR01;                                          // 0x0088(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VECTOR02;                                          // 0x0094(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VECTOR00;                                          // 0x00A0(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ON_teacup_start;                                   // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Name_0;                                            // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATresCameraBase*                        Camera_normal;                                     // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 NewVar_0;                                          // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Prin;                                              // 0x00D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_TresPlayerStateEventCamera_NPC_talk(int32 EntryPoint);
	void N_ex019_talk_event_normal_start(class AActor* NewParam);
	void N_ex113_talk_event_normal_start(class AActor* NewParam);
	void N_ex022_talk_event_normal_start(class AActor* NewParam);
	void N_ex021_talk_event_normal_start(class AActor* NewParam);
	void N_ex020_talk_event_normal_start(class AActor* NewParam);
	void N_ew_star_talk_event_normal_start(class AActor* NewParam);
	void N_po207_talk_event_normal_start(class AActor* NewParam);
	void N_fz214_talk_event_normal_start(class AActor* NewParam);
	void N_ra203_talk_event_normal_start(class AActor* NewParam);
	void Program_e_ex051_REvt_camera_Pudding_End_End();
	void Program_e_ex051_REvt_camera_Pudding_End_Start(class AActor* NewParam);
	void Program_e_ex051_REvt_camera_Pudding_Start_End();
	void Program_e_ex051_REvt_camera_Pudding_Start_Start(class AActor* NewParam);
	void Program_e_ex055_REvt_camera_Pudding_End_End();
	void Program_e_ex053_REvt_camera_Pudding_End_End();
	void Program_e_ex052_REvt_camera_Pudding_End_End();
	void Program_e_ex050_REvt_camera_Pudding_End_End();
	void Program_e_ex056_REvt_camera_Pudding_End_End();
	void Program_e_ex055_REvt_camera_Pudding_End_Start(class AActor* NewParam);
	void Program_e_ex053_REvt_camera_Pudding_End_Start(class AActor* NewParam);
	void Program_e_ex052_REvt_camera_Pudding_End_Start(class AActor* NewParam);
	void Program_e_ex050_REvt_camera_Pudding_End_Start(class AActor* NewParam);
	void Program_e_ex049_REvt_camera_Pudding_End_Start(class AActor* NewParam);
	void Program_e_ex056_REvt_camera_Pudding_Start_End();
	void Program_e_ex055_REvt_camera_Pudding_Start_End();
	void Program_e_ex053_REvt_camera_Pudding_Start_End();
	void Program_e_ex052_REvt_camera_Pudding_Start_End();
	void Program_e_ex050_REvt_camera_Pudding_Start_End();
	void Program_e_ex056_REvt_camera_Pudding_Start_Start(class AActor* NewParam);
	void Program_e_ex055_REvt_camera_Pudding_Start_Start(class AActor* NewParam);
	void Program_e_ex053_REvt_camera_Pudding_Start_Start(class AActor* NewParam);
	void Program_e_ex052_REvt_camera_Pudding_Start_Start(class AActor* NewParam);
	void Program_e_ex050_REvt_camera_Pudding_Start_Start(class AActor* NewParam);
	void Program_e_ex049_REvt_camera_Pudding_End_End();
	void Program_e_ex056_REvt_camera_Pudding_End_Start(class AActor* NewParam);
	void Program_e_ex049_REvt_camera_Pudding_Start_End();
	void Program_e_ex049_REvt_camera_Pudding_Start_Start(class AActor* NewParam);
	void Cnpc_adalt_talk_event_normal_start(class AActor* NewParam);
	void N_ca210_talk_event_normal_start(class AActor* NewParam);
	void N_ca201_talk_event_normal_start(class AActor* NewParam);
	void N_ex111_talk_event_normal_start(class AActor* NewParam);
	void N_ex110_talk_event_normal_start(class AActor* NewParam);
	void N_ex109_talk_event_normal_start(class AActor* NewParam);
	void N_ex112_talk_event_normal_start(class AActor* NewParam);
	void N_ex108_talk_event_normal_start(class AActor* NewParam);
	void N_tt203_talk_event_normal_start(class AActor* NewParam);
	void N_tt202_talk_event_normal_start(class AActor* NewParam);
	void N_tt201_talk_event_normal_start(class AActor* NewParam);
	void N_fz202_talk_event_normal_start(class AActor* NewParam);
	void N_fz201_talk_event_normal_start(class AActor* NewParam);
	void N_fz205_talk_event_LongBody_start(class AActor* NewParam);
	void N_fz205_talk_event_BigBody_start(class AActor* NewParam);
	void N_fz205_talk_event_normal_start(class AActor* NewParam);
	void N_fz203_talk_event_normal_start(class AActor* NewParam);
	void N_ra201_talk_event_normal_start(class AActor* NewParam);
	void N_po202_talk_event_normal_start(class AActor* NewParam);
	void N_po201_talk_event_normal_start(class AActor* NewParam);
	void N_po206_talk_event_normal_start(class AActor* NewParam);
	void N_po205_talk_event_normal_start(class AActor* NewParam);
	void N_po204_talk_event_normal_start(class AActor* NewParam);
	void N_po203_talk_event_normal_start(class AActor* NewParam);
	void N_bx212_talk_event_normal_start(class AActor* NewParam);
	void N_bx210_talk_event_normal_start(class AActor* NewParam);
	void N_bx203_talk_event_normal_start(class AActor* NewParam);
	void N_bx201_talk_event_normal_start(class AActor* NewParam);
	void N_bx208_talk_event_normal_start(class AActor* NewParam);
	void N_bx206_talk_event_normal_start(class AActor* NewParam);
	void N_bx205_talk_event_normal_start(class AActor* NewParam);
	void N_bx204_talk_event_normal_start(class AActor* NewParam);
	void N_ts202_talk_event_normal_start(class AActor* NewParam);
	void N_ts201_talk_event_normal_start(class AActor* NewParam);
	void N_he206_talk_event_normal_start(class AActor* NewParam);
	void N_he202_talk_event_normal_start(class AActor* NewParam);
	void N_ts207_talk_event_normal_start(class AActor* NewParam);
	void N_ts206_talk_event_normal_start(class AActor* NewParam);
	void N_ts205_talk_event_normal_start(class AActor* NewParam);
	void N_ts204_talk_event_normal_start(class AActor* NewParam);
	void N_mi902_talk_event_normal_start(class AActor* NewParam);
	void N_mi901_talk_event_normal_start(class AActor* NewParam);
	void N_mi202_talk_event_normal_start(class AActor* NewParam);
	void N_ex001_talk_event_normal_start(class AActor* NewParam);
	void N_ex002_talk_event_normal_start(class AActor* NewParam);
	void Talk_event_normal_end(class AActor* NewParam);
	void N_mi201_talk_event_normal_start(class AActor* NewParam);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TresPlayerStateEventCamera_NPC_talk_C">();
	}
	static class UBP_TresPlayerStateEventCamera_NPC_talk_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_TresPlayerStateEventCamera_NPC_talk_C>();
	}
};
static_assert(alignof(UBP_TresPlayerStateEventCamera_NPC_talk_C) == 0x006F26, "Wrong alignment on UBP_TresPlayerStateEventCamera_NPC_talk_C");
static_assert(sizeof(UBP_TresPlayerStateEventCamera_NPC_talk_C) == 0x006F26, "Wrong size on UBP_TresPlayerStateEventCamera_NPC_talk_C");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_NPC_talk_C, UberGraphFrame) == 0x000050, "Member 'UBP_TresPlayerStateEventCamera_NPC_talk_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_NPC_talk_C, Tres_Char_Pawn_base) == 0x000058, "Member 'UBP_TresPlayerStateEventCamera_NPC_talk_C::Tres_Char_Pawn_base' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_NPC_talk_C, ON_teacup_finish) == 0x000060, "Member 'UBP_TresPlayerStateEventCamera_NPC_talk_C::ON_teacup_finish' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_NPC_talk_C, Center) == 0x000068, "Member 'UBP_TresPlayerStateEventCamera_NPC_talk_C::Center' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_NPC_talk_C, Camera) == 0x000070, "Member 'UBP_TresPlayerStateEventCamera_NPC_talk_C::Camera' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_NPC_talk_C, Camera_RotTarget) == 0x000078, "Member 'UBP_TresPlayerStateEventCamera_NPC_talk_C::Camera_RotTarget' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_NPC_talk_C, Camera_anim) == 0x000080, "Member 'UBP_TresPlayerStateEventCamera_NPC_talk_C::Camera_anim' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_NPC_talk_C, VECTOR01) == 0x000088, "Member 'UBP_TresPlayerStateEventCamera_NPC_talk_C::VECTOR01' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_NPC_talk_C, VECTOR02) == 0x000094, "Member 'UBP_TresPlayerStateEventCamera_NPC_talk_C::VECTOR02' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_NPC_talk_C, VECTOR00) == 0x0000A0, "Member 'UBP_TresPlayerStateEventCamera_NPC_talk_C::VECTOR00' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_NPC_talk_C, Actor) == 0x0000B0, "Member 'UBP_TresPlayerStateEventCamera_NPC_talk_C::Actor' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_NPC_talk_C, ON_teacup_start) == 0x0000B8, "Member 'UBP_TresPlayerStateEventCamera_NPC_talk_C::ON_teacup_start' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_NPC_talk_C, Name_0) == 0x0000C0, "Member 'UBP_TresPlayerStateEventCamera_NPC_talk_C::Name_0' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_NPC_talk_C, Camera_normal) == 0x0000C8, "Member 'UBP_TresPlayerStateEventCamera_NPC_talk_C::Camera_normal' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_NPC_talk_C, NewVar_0) == 0x0000D0, "Member 'UBP_TresPlayerStateEventCamera_NPC_talk_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(UBP_TresPlayerStateEventCamera_NPC_talk_C, Prin) == 0x0000D8, "Member 'UBP_TresPlayerStateEventCamera_NPC_talk_C::Prin' has a wrong offset!");

}

