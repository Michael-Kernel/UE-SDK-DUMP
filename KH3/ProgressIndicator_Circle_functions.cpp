#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProgressIndicator_Circle

#include "Basic.hpp"

#include "ProgressIndicator_Circle_classes.hpp"
#include "ProgressIndicator_Circle_parameters.hpp"


namespace SDK
{

// Function ProgressIndicator_Circle.ProgressIndicator_Circle_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AProgressIndicator_Circle_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProgressIndicator_Circle_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ProgressIndicator_Circle.ProgressIndicator_Circle_C.Set Border Thickness
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProgressIndicator_Circle_C::Set_Border_Thickness(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProgressIndicator_Circle_C", "Set Border Thickness");

	Params::ProgressIndicator_Circle_C_Set_Border_Thickness Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProgressIndicator_Circle.ProgressIndicator_Circle_C.Set Percent Complete
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProgressIndicator_Circle_C::Set_Percent_Complete(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProgressIndicator_Circle_C", "Set Percent Complete");

	Params::ProgressIndicator_Circle_C_Set_Percent_Complete Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProgressIndicator_Circle.ProgressIndicator_Circle_C.Set Fill Color
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProgressIndicator_Circle_C::Set_Fill_Color(const struct FLinearColor& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProgressIndicator_Circle_C", "Set Fill Color");

	Params::ProgressIndicator_Circle_C_Set_Fill_Color Parms{};

	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProgressIndicator_Circle.ProgressIndicator_Circle_C.Set Border Color
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProgressIndicator_Circle_C::Set_Border_Color(const struct FLinearColor& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProgressIndicator_Circle_C", "Set Border Color");

	Params::ProgressIndicator_Circle_C_Set_Border_Color Parms{};

	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProgressIndicator_Circle.ProgressIndicator_Circle_C.Set Background Color
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProgressIndicator_Circle_C::Set_Background_Color(const struct FLinearColor& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProgressIndicator_Circle_C", "Set Background Color");

	Params::ProgressIndicator_Circle_C_Set_Background_Color Parms{};

	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);
}

}

