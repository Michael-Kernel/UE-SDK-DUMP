#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: G_tt_movielight

#include "Basic.hpp"

#include "G_tt_movielight_stData_structs.hpp"


namespace SDK::Params
{

// Function g_tt_movielight.g_tt_movielight_C.OnStartMovie__DelegateSignature
// 0xC000000 (0xC000000 - 0x0000)
struct alignas(0xC000000) G_tt_movielight_C_OnStartMovie__DelegateSignature final
{
public:
	class FName                                   PlayingMovie;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(G_tt_movielight_C_OnStartMovie__DelegateSignature) == 0xC000000, "Wrong alignment on G_tt_movielight_C_OnStartMovie__DelegateSignature");
static_assert(sizeof(G_tt_movielight_C_OnStartMovie__DelegateSignature) == 0xC000000, "Wrong size on G_tt_movielight_C_OnStartMovie__DelegateSignature");
static_assert(offsetof(G_tt_movielight_C_OnStartMovie__DelegateSignature, PlayingMovie) == 0x000000, "Member 'G_tt_movielight_C_OnStartMovie__DelegateSignature::PlayingMovie' has a wrong offset!");

// Function g_tt_movielight.g_tt_movielight_C.ExecuteUbergraph_g_tt_movielight
// 0xC000000 (0xC000000 - 0x0000)
struct alignas(0xC000000) G_tt_movielight_C_ExecuteUbergraph_g_tt_movielight final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_playAnimation2;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetMovieData_Path;                        // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetMovieData_RemoteName;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_playAnimation;                        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetMovieData_Path2;                       // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetMovieData_RemoteName2;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMovieNum_Num;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(G_tt_movielight_C_ExecuteUbergraph_g_tt_movielight) == 0xC000000, "Wrong alignment on G_tt_movielight_C_ExecuteUbergraph_g_tt_movielight");
static_assert(sizeof(G_tt_movielight_C_ExecuteUbergraph_g_tt_movielight) == 0xC000000, "Wrong size on G_tt_movielight_C_ExecuteUbergraph_g_tt_movielight");
static_assert(offsetof(G_tt_movielight_C_ExecuteUbergraph_g_tt_movielight, EntryPoint) == 0x000000, "Member 'G_tt_movielight_C_ExecuteUbergraph_g_tt_movielight::EntryPoint' has a wrong offset!");
static_assert(offsetof(G_tt_movielight_C_ExecuteUbergraph_g_tt_movielight, K2Node_Event_playAnimation2) == 0x000004, "Member 'G_tt_movielight_C_ExecuteUbergraph_g_tt_movielight::K2Node_Event_playAnimation2' has a wrong offset!");
static_assert(offsetof(G_tt_movielight_C_ExecuteUbergraph_g_tt_movielight, CallFunc_GetMovieData_Path) == 0x000008, "Member 'G_tt_movielight_C_ExecuteUbergraph_g_tt_movielight::CallFunc_GetMovieData_Path' has a wrong offset!");
static_assert(offsetof(G_tt_movielight_C_ExecuteUbergraph_g_tt_movielight, CallFunc_GetMovieData_RemoteName) == 0x000018, "Member 'G_tt_movielight_C_ExecuteUbergraph_g_tt_movielight::CallFunc_GetMovieData_RemoteName' has a wrong offset!");
static_assert(offsetof(G_tt_movielight_C_ExecuteUbergraph_g_tt_movielight, K2Node_Event_playAnimation) == 0x000020, "Member 'G_tt_movielight_C_ExecuteUbergraph_g_tt_movielight::K2Node_Event_playAnimation' has a wrong offset!");
static_assert(offsetof(G_tt_movielight_C_ExecuteUbergraph_g_tt_movielight, CallFunc_GetMovieData_Path2) == 0x000028, "Member 'G_tt_movielight_C_ExecuteUbergraph_g_tt_movielight::CallFunc_GetMovieData_Path2' has a wrong offset!");
static_assert(offsetof(G_tt_movielight_C_ExecuteUbergraph_g_tt_movielight, CallFunc_GetMovieData_RemoteName2) == 0x000038, "Member 'G_tt_movielight_C_ExecuteUbergraph_g_tt_movielight::CallFunc_GetMovieData_RemoteName2' has a wrong offset!");
static_assert(offsetof(G_tt_movielight_C_ExecuteUbergraph_g_tt_movielight, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'G_tt_movielight_C_ExecuteUbergraph_g_tt_movielight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(G_tt_movielight_C_ExecuteUbergraph_g_tt_movielight, CallFunc_GetMovieNum_Num) == 0x000044, "Member 'G_tt_movielight_C_ExecuteUbergraph_g_tt_movielight::CallFunc_GetMovieNum_Num' has a wrong offset!");
static_assert(offsetof(G_tt_movielight_C_ExecuteUbergraph_g_tt_movielight, CallFunc_Subtract_IntInt_ReturnValue) == 0x000048, "Member 'G_tt_movielight_C_ExecuteUbergraph_g_tt_movielight::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(G_tt_movielight_C_ExecuteUbergraph_g_tt_movielight, CallFunc_RandomIntegerInRange_ReturnValue) == 0x00004C, "Member 'G_tt_movielight_C_ExecuteUbergraph_g_tt_movielight::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(G_tt_movielight_C_ExecuteUbergraph_g_tt_movielight, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000050, "Member 'G_tt_movielight_C_ExecuteUbergraph_g_tt_movielight::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function g_tt_movielight.g_tt_movielight_C.BPEV_OnStartGimmickForPlan
// 0x10101 (0x10101 - 0x0000)
struct alignas(0x10101) G_tt_movielight_C_BPEV_OnStartGimmickForPlan final
{
public:
	bool                                          PlayAnimation;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(G_tt_movielight_C_BPEV_OnStartGimmickForPlan) == 0x010101, "Wrong alignment on G_tt_movielight_C_BPEV_OnStartGimmickForPlan");
static_assert(sizeof(G_tt_movielight_C_BPEV_OnStartGimmickForPlan) == 0x010101, "Wrong size on G_tt_movielight_C_BPEV_OnStartGimmickForPlan");
static_assert(offsetof(G_tt_movielight_C_BPEV_OnStartGimmickForPlan, PlayAnimation) == 0x000000, "Member 'G_tt_movielight_C_BPEV_OnStartGimmickForPlan::PlayAnimation' has a wrong offset!");

// Function g_tt_movielight.g_tt_movielight_C.BPEV_OnStopGimmickForPlan
// 0xC020000 (0xC020000 - 0x0000)
struct alignas(0xC020000) G_tt_movielight_C_BPEV_OnStopGimmickForPlan final
{
public:
	bool                                          PlayAnimation;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(G_tt_movielight_C_BPEV_OnStopGimmickForPlan) == 0xC020000, "Wrong alignment on G_tt_movielight_C_BPEV_OnStopGimmickForPlan");
static_assert(sizeof(G_tt_movielight_C_BPEV_OnStopGimmickForPlan) == 0xC020000, "Wrong size on G_tt_movielight_C_BPEV_OnStopGimmickForPlan");
static_assert(offsetof(G_tt_movielight_C_BPEV_OnStopGimmickForPlan, PlayAnimation) == 0x000000, "Member 'G_tt_movielight_C_BPEV_OnStopGimmickForPlan::PlayAnimation' has a wrong offset!");

// Function g_tt_movielight.g_tt_movielight_C.GetMovieNum
// 0x610068 (0x610068 - 0x0000)
struct alignas(0x610068) G_tt_movielight_C_GetMovieNum final
{
public:
	int32                                         Num;                                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(G_tt_movielight_C_GetMovieNum) == 0x610068, "Wrong alignment on G_tt_movielight_C_GetMovieNum");
static_assert(sizeof(G_tt_movielight_C_GetMovieNum) == 0x610068, "Wrong size on G_tt_movielight_C_GetMovieNum");
static_assert(offsetof(G_tt_movielight_C_GetMovieNum, Num) == 0x000000, "Member 'G_tt_movielight_C_GetMovieNum::Num' has a wrong offset!");
static_assert(offsetof(G_tt_movielight_C_GetMovieNum, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'G_tt_movielight_C_GetMovieNum::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(G_tt_movielight_C_GetMovieNum, CallFunc_Array_Length_ReturnValue2) == 0x000008, "Member 'G_tt_movielight_C_GetMovieNum::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");

// Function g_tt_movielight.g_tt_movielight_C.GetMovieData
// 0x2E002E (0x2E002E - 0x0000)
struct G_tt_movielight_C_GetMovieData final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Path;                                              // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FName                                   RemoteName;                                        // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FG_tt_movielight_stData                CallFunc_Array_Get_Item;                           // 0x0020(0x2E002E)(HasGetValueTypeHash)
	struct FG_tt_movielight_stData                CallFunc_Array_Get_Item2;                          // 0x0038(0x2E002E)(HasGetValueTypeHash)
};
static_assert(alignof(G_tt_movielight_C_GetMovieData) == 0x2E002E, "Wrong alignment on G_tt_movielight_C_GetMovieData");
static_assert(sizeof(G_tt_movielight_C_GetMovieData) == 0x2E002E, "Wrong size on G_tt_movielight_C_GetMovieData");
static_assert(offsetof(G_tt_movielight_C_GetMovieData, Index_0) == 0x000000, "Member 'G_tt_movielight_C_GetMovieData::Index_0' has a wrong offset!");
static_assert(offsetof(G_tt_movielight_C_GetMovieData, Path) == 0x000008, "Member 'G_tt_movielight_C_GetMovieData::Path' has a wrong offset!");
static_assert(offsetof(G_tt_movielight_C_GetMovieData, RemoteName) == 0x000018, "Member 'G_tt_movielight_C_GetMovieData::RemoteName' has a wrong offset!");
static_assert(offsetof(G_tt_movielight_C_GetMovieData, CallFunc_Array_Get_Item) == 0x000020, "Member 'G_tt_movielight_C_GetMovieData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(G_tt_movielight_C_GetMovieData, CallFunc_Array_Get_Item2) == 0x000038, "Member 'G_tt_movielight_C_GetMovieData::CallFunc_Array_Get_Item2' has a wrong offset!");

}

