#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SQEXSEAD

#include "Basic.hpp"

#include "SQEXSEAD_classes.hpp"
#include "SQEXSEAD_parameters.hpp"


namespace SDK
{

// Function SQEXSEAD.SQEXSEADAttachSeComponent.Stop
// (Final, Native, Public, BlueprintCallable)

void USQEXSEADAttachSeComponent::Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADAttachSeComponent", "Stop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.GetJustTiming
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSQEXSEAD_Timing                 ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FSQEXSEAD_Timing USQEXSEADBGMSlotController::GetJustTiming()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "GetJustTiming");

	Params::SQEXSEADBGMSlotController_GetJustTiming Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.GetModeIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USQEXSEADBGMSlotController::GetModeIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "GetModeIndex");

	Params::SQEXSEADBGMSlotController_GetModeIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.GetMusicalTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USQEXSEADBGMSlotController::GetMusicalTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "GetMusicalTime");

	Params::SQEXSEADBGMSlotController_GetMusicalTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.GetNearTiming
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSQEXSEAD_Timing                 ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FSQEXSEAD_Timing USQEXSEADBGMSlotController::GetNearTiming()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "GetNearTiming");

	Params::SQEXSEADBGMSlotController_GetNearTiming Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.GetNextSectionIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USQEXSEADBGMSlotController::GetNextSectionIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "GetNextSectionIndex");

	Params::SQEXSEADBGMSlotController_GetNextSectionIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.GetSectionIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USQEXSEADBGMSlotController::GetSectionIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "GetSectionIndex");

	Params::SQEXSEADBGMSlotController_GetSectionIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.GetTempo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USQEXSEADBGMSlotController::GetTempo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "GetTempo");

	Params::SQEXSEADBGMSlotController_GetTempo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.IsPlaying
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USQEXSEADBGMSlotController::IsPlaying()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "IsPlaying");

	Params::SQEXSEADBGMSlotController_IsPlaying Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.IsSuspended
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USQEXSEADBGMSlotController::IsSuspended()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "IsSuspended");

	Params::SQEXSEADBGMSlotController_IsSuspended Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.Play
// (Final, Native, Public, BlueprintCallable)

void USQEXSEADBGMSlotController::Play()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "Play");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.Ready
// (Final, Native, Public, BlueprintCallable)

void USQEXSEADBGMSlotController::Ready()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "Ready");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.Reset
// (Final, Native, Public, BlueprintCallable)

void USQEXSEADBGMSlotController::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "Reset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.ResetToDefaultOptions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSQEXSEAD_BGMOptions             NewOptions                                             (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void USQEXSEADBGMSlotController::ResetToDefaultOptions(const struct FSQEXSEAD_BGMOptions& NewOptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "ResetToDefaultOptions");

	Params::SQEXSEADBGMSlotController_ResetToDefaultOptions Parms{};

	Parms.NewOptions = std::move(NewOptions);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.Set
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USoundBase*                       Sound                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADBGMSlotController::Set(class USoundBase* Sound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "Set");

	Params::SQEXSEADBGMSlotController_Set Parms{};

	Parms.Sound = Sound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.SetDefaultOptions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSQEXSEAD_BGMOptions             NewOptions                                             (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void USQEXSEADBGMSlotController::SetDefaultOptions(const struct FSQEXSEAD_BGMOptions& NewOptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "SetDefaultOptions");

	Params::SQEXSEADBGMSlotController_SetDefaultOptions Parms{};

	Parms.NewOptions = std::move(NewOptions);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.SetMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADBGMSlotController::SetMode(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "SetMode");

	Params::SQEXSEADBGMSlotController_SetMode Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.SetModeByName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADBGMSlotController::SetModeByName(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "SetModeByName");

	Params::SQEXSEADBGMSlotController_SetModeByName Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.SetOptions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSQEXSEAD_BGMOptions             NewOptions                                             (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void USQEXSEADBGMSlotController::SetOptions(const struct FSQEXSEAD_BGMOptions& NewOptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "SetOptions");

	Params::SQEXSEADBGMSlotController_SetOptions Parms{};

	Parms.NewOptions = std::move(NewOptions);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.SetPath
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class USoundBase>        SoundReference                                         (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADBGMSlotController::SetPath(TSoftObjectPtr<class USoundBase> SoundReference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "SetPath");

	Params::SQEXSEADBGMSlotController_SetPath Parms{};

	Parms.SoundReference = SoundReference;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.SetPlayFadeInTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   FadeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADBGMSlotController::SetPlayFadeInTime(float FadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "SetPlayFadeInTime");

	Params::SQEXSEADBGMSlotController_SetPlayFadeInTime Parms{};

	Parms.FadeTime = FadeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.SetPriority
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADBGMSlotController::SetPriority(int32 Priority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "SetPriority");

	Params::SQEXSEADBGMSlotController_SetPriority Parms{};

	Parms.Priority = Priority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.SetRestoreAfterFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bRestoreAfterFinish                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADBGMSlotController::SetRestoreAfterFinish(bool bRestoreAfterFinish)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "SetRestoreAfterFinish");

	Params::SQEXSEADBGMSlotController_SetRestoreAfterFinish Parms{};

	Parms.bRestoreAfterFinish = bRestoreAfterFinish;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.SetResumeFadeInTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   FadeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADBGMSlotController::SetResumeFadeInTime(float FadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "SetResumeFadeInTime");

	Params::SQEXSEADBGMSlotController_SetResumeFadeInTime Parms{};

	Parms.FadeTime = FadeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.SetSection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADBGMSlotController::SetSection(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "SetSection");

	Params::SQEXSEADBGMSlotController_SetSection Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.SetSeekTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   SeekTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADBGMSlotController::SetSeekTime(float SeekTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "SetSeekTime");

	Params::SQEXSEADBGMSlotController_SetSeekTime Parms{};

	Parms.SeekTime = SeekTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.SetSilent
// (Final, Native, Public, BlueprintCallable)

void USQEXSEADBGMSlotController::SetSilent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "SetSilent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.SetStaySuspendTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   StaySuspendTime                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADBGMSlotController::SetStaySuspendTime(float StaySuspendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "SetStaySuspendTime");

	Params::SQEXSEADBGMSlotController_SetStaySuspendTime Parms{};

	Parms.StaySuspendTime = StaySuspendTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.SetStopFadeOutTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   FadeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADBGMSlotController::SetStopFadeOutTime(float FadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "SetStopFadeOutTime");

	Params::SQEXSEADBGMSlotController_SetStopFadeOutTime Parms{};

	Parms.FadeTime = FadeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.SetStoreBehaviour
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESQEXSEAD_BGMStoreBehaviour             StoreBehaviour                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADBGMSlotController::SetStoreBehaviour(ESQEXSEAD_BGMStoreBehaviour StoreBehaviour)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "SetStoreBehaviour");

	Params::SQEXSEADBGMSlotController_SetStoreBehaviour Parms{};

	Parms.StoreBehaviour = StoreBehaviour;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.SetSuspendFadeOutTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   FadeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADBGMSlotController::SetSuspendFadeOutTime(float FadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "SetSuspendFadeOutTime");

	Params::SQEXSEADBGMSlotController_SetSuspendFadeOutTime Parms{};

	Parms.FadeTime = FadeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.SetSuspendSilent
// (Final, Native, Public, BlueprintCallable)

void USQEXSEADBGMSlotController::SetSuspendSilent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "SetSuspendSilent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.SetVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Volume                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FadeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADBGMSlotController::SetVolume(float Volume, float FadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "SetVolume");

	Params::SQEXSEADBGMSlotController_SetVolume Parms{};

	Parms.Volume = Volume;
	Parms.FadeTime = FadeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.Stop
// (Final, Native, Public, BlueprintCallable)

void USQEXSEADBGMSlotController::Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "Stop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADBGMSlotController.Unreference
// (Final, Native, Public, BlueprintCallable)

void USQEXSEADBGMSlotController::Unreference()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADBGMSlotController", "Unreference");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADCollisionEventSeComponent.OnBeginOverlap
// (Final, Native, Public, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void USQEXSEADCollisionEventSeComponent::OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADCollisionEventSeComponent", "OnBeginOverlap");

	Params::SQEXSEADCollisionEventSeComponent_OnBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADCollisionEventSeComponent.OnComponentHit
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          NormalImpulse                                          (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void USQEXSEADCollisionEventSeComponent::OnComponentHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADCollisionEventSeComponent", "OnComponentHit");

	Params::SQEXSEADCollisionEventSeComponent_OnComponentHit Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADCollisionEventSeComponent.OnEndOverlap
// (Final, Native, Public)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADCollisionEventSeComponent::OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADCollisionEventSeComponent", "OnEndOverlap");

	Params::SQEXSEADCollisionEventSeComponent_OnEndOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADCollisionEventSeComponent.OnFracture
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// struct FVector                          HitPoint                                               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          HitDirection                                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADCollisionEventSeComponent::OnFracture(const struct FVector& HitPoint, const struct FVector& HitDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADCollisionEventSeComponent", "OnFracture");

	Params::SQEXSEADCollisionEventSeComponent_OnFracture Parms{};

	Parms.HitPoint = std::move(HitPoint);
	Parms.HitDirection = std::move(HitDirection);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADMusicActor.AdjustVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   AdjustVolumeDuration                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AdjustVolumeLevel                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASQEXSEADMusicActor::AdjustVolume(float AdjustVolumeDuration, float AdjustVolumeLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADMusicActor", "AdjustVolume");

	Params::SQEXSEADMusicActor_AdjustVolume Parms{};

	Parms.AdjustVolumeDuration = AdjustVolumeDuration;
	Parms.AdjustVolumeLevel = AdjustVolumeLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADMusicActor.BlendMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ModeName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Rate                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FadeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASQEXSEADMusicActor::BlendMode(const class FString& ModeName, float Rate, float FadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADMusicActor", "BlendMode");

	Params::SQEXSEADMusicActor_BlendMode Parms{};

	Parms.ModeName = std::move(ModeName);
	Parms.Rate = Rate;
	Parms.FadeTime = FadeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADMusicActor.BlendModeIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ModeIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Rate                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FadeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASQEXSEADMusicActor::BlendModeIndex(int32 ModeIndex, float Rate, float FadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADMusicActor", "BlendModeIndex");

	Params::SQEXSEADMusicActor_BlendModeIndex Parms{};

	Parms.ModeIndex = ModeIndex;
	Parms.Rate = Rate;
	Parms.FadeTime = FadeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADMusicActor.FadeIn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   FadeInDuration                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FadeVolumeLevel                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASQEXSEADMusicActor::FadeIn(float FadeInDuration, float FadeVolumeLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADMusicActor", "FadeIn");

	Params::SQEXSEADMusicActor_FadeIn Parms{};

	Parms.FadeInDuration = FadeInDuration;
	Parms.FadeVolumeLevel = FadeVolumeLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADMusicActor.FadeOut
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   FadeOutDuration                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FadeVolumeLevel                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASQEXSEADMusicActor::FadeOut(float FadeOutDuration, float FadeVolumeLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADMusicActor", "FadeOut");

	Params::SQEXSEADMusicActor_FadeOut Parms{};

	Parms.FadeOutDuration = FadeOutDuration;
	Parms.FadeVolumeLevel = FadeVolumeLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADMusicActor.Play
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   StartTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASQEXSEADMusicActor::Play(float StartTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADMusicActor", "Play");

	Params::SQEXSEADMusicActor_Play Parms{};

	Parms.StartTime = StartTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADMusicActor.SetMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ModeName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASQEXSEADMusicActor::SetMode(const class FString& ModeName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADMusicActor", "SetMode");

	Params::SQEXSEADMusicActor_SetMode Parms{};

	Parms.ModeName = std::move(ModeName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADMusicActor.SetModeIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ModeIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASQEXSEADMusicActor::SetModeIndex(int32 ModeIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADMusicActor", "SetModeIndex");

	Params::SQEXSEADMusicActor_SetModeIndex Parms{};

	Parms.ModeIndex = ModeIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADMusicActor.SetNextSection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           SectionName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASQEXSEADMusicActor::SetNextSection(const class FString& SectionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADMusicActor", "SetNextSection");

	Params::SQEXSEADMusicActor_SetNextSection Parms{};

	Parms.SectionName = std::move(SectionName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADMusicActor.SetNextSectionIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SectionIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASQEXSEADMusicActor::SetNextSectionIndex(int32 SectionIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADMusicActor", "SetNextSectionIndex");

	Params::SQEXSEADMusicActor_SetNextSectionIndex Parms{};

	Parms.SectionIndex = SectionIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADMusicActor.Stop
// (Final, Native, Public, BlueprintCallable)

void ASQEXSEADMusicActor::Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADMusicActor", "Stop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADPhysObjSeComponent.OnComponentHit
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          NormalImpulse                                          (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void USQEXSEADPhysObjSeComponent::OnComponentHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADPhysObjSeComponent", "OnComponentHit");

	Params::SQEXSEADPhysObjSeComponent_OnComponentHit Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADPhysObjSeComponent.StopCalculation
// (Final, Native, Public)
// Parameters:
// float                                   StopInnerSoundsFadeTime                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADPhysObjSeComponent::StopCalculation(float StopInnerSoundsFadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADPhysObjSeComponent", "StopCalculation");

	Params::SQEXSEADPhysObjSeComponent_StopCalculation Parms{};

	Parms.StopInnerSoundsFadeTime = StopInnerSoundsFadeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADStatics.AudioVolumeCtrl_SetEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           AudioVolumeActorName                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USQEXSEADStatics::AudioVolumeCtrl_SetEnable(class UObject* WorldContextObject, const class FString& AudioVolumeActorName, bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "AudioVolumeCtrl_SetEnable");

	Params::SQEXSEADStatics_AudioVolumeCtrl_SetEnable Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.AudioVolumeActorName = std::move(AudioVolumeActorName);
	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SQEXSEAD.SQEXSEADStatics.AutoSeCtrl_SetEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADStatics::AutoSeCtrl_SetEnable(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "AutoSeCtrl_SetEnable");

	Params::SQEXSEADStatics_AutoSeCtrl_SetEnable Parms{};

	Parms.Enable = Enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADStatics.CallEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             EventName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADStatics::CallEvent(class FName EventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "CallEvent");

	Params::SQEXSEADStatics_CallEvent Parms{};

	Parms.EventName = EventName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADStatics.CategoryCtrl_DebugMute
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             CategoryName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bToBeMuted                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FadeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADStatics::CategoryCtrl_DebugMute(class FName CategoryName, bool bToBeMuted, float FadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "CategoryCtrl_DebugMute");

	Params::SQEXSEADStatics_CategoryCtrl_DebugMute Parms{};

	Parms.CategoryName = CategoryName;
	Parms.bToBeMuted = bToBeMuted;
	Parms.FadeTime = FadeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADStatics.CategoryCtrl_GetVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             CategoryName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USQEXSEADStatics::CategoryCtrl_GetVolume(class FName CategoryName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "CategoryCtrl_GetVolume");

	Params::SQEXSEADStatics_CategoryCtrl_GetVolume Parms{};

	Parms.CategoryName = CategoryName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SQEXSEAD.SQEXSEADStatics.CategoryCtrl_Resume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             CategoryName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FadeInTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADStatics::CategoryCtrl_Resume(class FName CategoryName, float FadeInTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "CategoryCtrl_Resume");

	Params::SQEXSEADStatics_CategoryCtrl_Resume Parms{};

	Parms.CategoryName = CategoryName;
	Parms.FadeInTime = FadeInTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADStatics.CategoryCtrl_SetPitch
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             CategoryName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Pitch                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FadeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADStatics::CategoryCtrl_SetPitch(class FName CategoryName, float Pitch, float FadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "CategoryCtrl_SetPitch");

	Params::SQEXSEADStatics_CategoryCtrl_SetPitch Parms{};

	Parms.CategoryName = CategoryName;
	Parms.Pitch = Pitch;
	Parms.FadeTime = FadeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADStatics.CategoryCtrl_SetVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             CategoryName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Volume                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FadeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADStatics::CategoryCtrl_SetVolume(class FName CategoryName, float Volume, float FadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "CategoryCtrl_SetVolume");

	Params::SQEXSEADStatics_CategoryCtrl_SetVolume Parms{};

	Parms.CategoryName = CategoryName;
	Parms.Volume = Volume;
	Parms.FadeTime = FadeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADStatics.CategoryCtrl_SetVolumeWithLayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             CategoryName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LayerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Volume                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FadeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADStatics::CategoryCtrl_SetVolumeWithLayer(class FName CategoryName, int32 LayerIndex, float Volume, float FadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "CategoryCtrl_SetVolumeWithLayer");

	Params::SQEXSEADStatics_CategoryCtrl_SetVolumeWithLayer Parms{};

	Parms.CategoryName = CategoryName;
	Parms.LayerIndex = LayerIndex;
	Parms.Volume = Volume;
	Parms.FadeTime = FadeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADStatics.CategoryCtrl_Stop
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             CategoryName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FadeOutTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADStatics::CategoryCtrl_Stop(class FName CategoryName, float FadeOutTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "CategoryCtrl_Stop");

	Params::SQEXSEADStatics_CategoryCtrl_Stop Parms{};

	Parms.CategoryName = CategoryName;
	Parms.FadeOutTime = FadeOutTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADStatics.CategoryCtrl_Suspend
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             CategoryName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FadeOutTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADStatics::CategoryCtrl_Suspend(class FName CategoryName, float FadeOutTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "CategoryCtrl_Suspend");

	Params::SQEXSEADStatics_CategoryCtrl_Suspend Parms{};

	Parms.CategoryName = CategoryName;
	Parms.FadeOutTime = FadeOutTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADStatics.CreateBGMSlot
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSQEXSEAD_BGMOptions             Options                                                (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class USQEXSEADBGMSlotController*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USQEXSEADBGMSlotController* USQEXSEADStatics::CreateBGMSlot(class FName Name_0, const struct FSQEXSEAD_BGMOptions& Options)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "CreateBGMSlot");

	Params::SQEXSEADStatics_CreateBGMSlot Parms{};

	Parms.Name_0 = Name_0;
	Parms.Options = std::move(Options);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SQEXSEAD.SQEXSEADStatics.GetBGMSlotController
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USQEXSEADBGMSlotController*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USQEXSEADBGMSlotController* USQEXSEADStatics::GetBGMSlotController(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "GetBGMSlotController");

	Params::SQEXSEADStatics_GetBGMSlotController Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SQEXSEAD.SQEXSEADStatics.GetNumAudibleSoundsAtLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USQEXSEADStatics::GetNumAudibleSoundsAtLocation(class UObject* WorldContextObject, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "GetNumAudibleSoundsAtLocation");

	Params::SQEXSEADStatics_GetNumAudibleSoundsAtLocation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SQEXSEAD.SQEXSEADStatics.GetPlayingBGMSlotController
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USQEXSEADBGMSlotController*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USQEXSEADBGMSlotController* USQEXSEADStatics::GetPlayingBGMSlotController()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "GetPlayingBGMSlotController");

	Params::SQEXSEADStatics_GetPlayingBGMSlotController Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SQEXSEAD.SQEXSEADStatics.IsPlayingBGM
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USoundBase*                       Sound                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USQEXSEADStatics::IsPlayingBGM(class USoundBase* Sound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "IsPlayingBGM");

	Params::SQEXSEADStatics_IsPlayingBGM Parms{};

	Parms.Sound = Sound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SQEXSEAD.SQEXSEADStatics.ReadySetPathBGM
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class USoundBase>        SoundReference                                         (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADStatics::ReadySetPathBGM(class FName Name_0, TSoftObjectPtr<class USoundBase> SoundReference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "ReadySetPathBGM");

	Params::SQEXSEADStatics_ReadySetPathBGM Parms{};

	Parms.Name_0 = Name_0;
	Parms.SoundReference = SoundReference;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADStatics.ResetAllBGM
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   FadeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADStatics::ResetAllBGM(float FadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "ResetAllBGM");

	Params::SQEXSEADStatics_ResetAllBGM Parms{};

	Parms.FadeTime = FadeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADStatics.ResetAllCategoryTemporarySettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   ResetFadeTime                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADStatics::ResetAllCategoryTemporarySettings(float ResetFadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "ResetAllCategoryTemporarySettings");

	Params::SQEXSEADStatics_ResetAllCategoryTemporarySettings Parms{};

	Parms.ResetFadeTime = ResetFadeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADStatics.ResetEffectPreset
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   ResetFadeTime                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADStatics::ResetEffectPreset(float ResetFadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "ResetEffectPreset");

	Params::SQEXSEADStatics_ResetEffectPreset Parms{};

	Parms.ResetFadeTime = ResetFadeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADStatics.ResetOverrideAttenuation
// (Final, Native, Static, Public, BlueprintCallable)

void USQEXSEADStatics::ResetOverrideAttenuation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "ResetOverrideAttenuation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADStatics.ResumeBGM
// (Final, Native, Static, Public, BlueprintCallable)

void USQEXSEADStatics::ResumeBGM()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "ResumeBGM");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADStatics.ResumeBGM_OptionalFade
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   FadeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADStatics::ResumeBGM_OptionalFade(float FadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "ResumeBGM_OptionalFade");

	Params::SQEXSEADStatics_ResumeBGM_OptionalFade Parms{};

	Parms.FadeTime = FadeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADStatics.SetConfigCategoryVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             CategoryName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Volume                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FadeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADStatics::SetConfigCategoryVolume(class FName CategoryName, float Volume, float FadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "SetConfigCategoryVolume");

	Params::SQEXSEADStatics_SetConfigCategoryVolume Parms{};

	Parms.CategoryName = CategoryName;
	Parms.Volume = Volume;
	Parms.FadeTime = FadeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADStatics.SetConfigVolumeAllCategory
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Volume                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FadeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADStatics::SetConfigVolumeAllCategory(float Volume, float FadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "SetConfigVolumeAllCategory");

	Params::SQEXSEADStatics_SetConfigVolumeAllCategory Parms{};

	Parms.Volume = Volume;
	Parms.FadeTime = FadeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADStatics.SetEffectPreset
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             PresetName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FadeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADStatics::SetEffectPreset(class FName PresetName, float FadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "SetEffectPreset");

	Params::SQEXSEADStatics_SetEffectPreset Parms{};

	Parms.PresetName = PresetName;
	Parms.FadeTime = FadeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADStatics.SetEnableBGMAutoResume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsEnabled                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADStatics::SetEnableBGMAutoResume(bool bIsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "SetEnableBGMAutoResume");

	Params::SQEXSEADStatics_SetEnableBGMAutoResume Parms{};

	Parms.bIsEnabled = bIsEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADStatics.SetExternalParameter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ParamName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADStatics::SetExternalParameter(class FName ParamName, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "SetExternalParameter");

	Params::SQEXSEADStatics_SetExternalParameter Parms{};

	Parms.ParamName = ParamName;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADStatics.SetOverrideAttenuation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USoundAttenuation*                OverrideAttenuation                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADStatics::SetOverrideAttenuation(class USoundAttenuation* OverrideAttenuation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "SetOverrideAttenuation");

	Params::SQEXSEADStatics_SetOverrideAttenuation Parms{};

	Parms.OverrideAttenuation = OverrideAttenuation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADStatics.SetSEADAudioVolumeUpdateEnabled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADStatics::SetSEADAudioVolumeUpdateEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "SetSEADAudioVolumeUpdateEnabled");

	Params::SQEXSEADStatics_SetSEADAudioVolumeUpdateEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADStatics.StopAllBGM
// (Final, Native, Static, Public, BlueprintCallable)

void USQEXSEADStatics::StopAllBGM()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "StopAllBGM");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADStatics.StopAllBGM_OptionalFade
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   FadeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADStatics::StopAllBGM_OptionalFade(float FadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "StopAllBGM_OptionalFade");

	Params::SQEXSEADStatics_StopAllBGM_OptionalFade Parms{};

	Parms.FadeTime = FadeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADStatics.StopAllCategorySounds
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   FadeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADStatics::StopAllCategorySounds(float FadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "StopAllCategorySounds");

	Params::SQEXSEADStatics_StopAllCategorySounds Parms{};

	Parms.FadeTime = FadeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADStatics.SuspendBGM
// (Final, Native, Static, Public, BlueprintCallable)

void USQEXSEADStatics::SuspendBGM()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "SuspendBGM");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADStatics.SuspendBGM_OptionalFade
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   FadeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADStatics::SuspendBGM_OptionalFade(float FadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SQEXSEADStatics", "SuspendBGM_OptionalFade");

	Params::SQEXSEADStatics_SuspendBGM_OptionalFade Parms{};

	Parms.FadeTime = FadeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADZeroOneSeComponent.IsPlaying
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USQEXSEADZeroOneSeComponent::IsPlaying()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADZeroOneSeComponent", "IsPlaying");

	Params::SQEXSEADZeroOneSeComponent_IsPlaying Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SQEXSEAD.SQEXSEADZeroOneSeComponent.Play
// (Final, Native, Public, BlueprintCallable)

void USQEXSEADZeroOneSeComponent::Play()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADZeroOneSeComponent", "Play");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADZeroOneSeComponent.SetZeroOneValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FadeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEXSEADZeroOneSeComponent::SetZeroOneValue(int32 Slot, float Value, float FadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADZeroOneSeComponent", "SetZeroOneValue");

	Params::SQEXSEADZeroOneSeComponent_SetZeroOneValue Parms{};

	Parms.Slot = Slot;
	Parms.Value = Value;
	Parms.FadeTime = FadeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SQEXSEAD.SQEXSEADZeroOneSeComponent.Stop
// (Final, Native, Public, BlueprintCallable)

void USQEXSEADZeroOneSeComponent::Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEXSEADZeroOneSeComponent", "Stop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

