#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: G_TresGimmickSkeletalBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "TresGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass g_TresGimmickSkeletalBase.g_TresGimmickSkeletalBase_C
// 0x0000 (0x1EF72E00 - 0x1EF72E00)
#pragma pack(push, 0x1)
class alignas(0x1EF72E00) AG_TresGimmickSkeletalBase_C : public ATresGimmickSkeletalBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06B8(0x6F26)(Transient, DuplicateTransient)
	float                                         SyncDelay;                                         // 0x06C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_g_TresGimmickSkeletalBase(int32 EntryPoint);
	void TresDisableCollisionGimmick();
	void TresEnableCollisionGimmick();
	void TresDeactivateGimmick();
	void TresActivateGimmick();
	void TresHideGimmick();
	void TresShowGimmick();
	void TresDestroyGimmick();
	void TresSetControlGimmick(class FName Name_0, const struct FVector& Param1, float Param2, int32 Param3, bool Param4, class FName Param5, class UObject* Param6, class FName ControllerId);
	void TresResetGimmick(class FName ControllerId);
	void TresStopGimmick(bool PlayAnimation, class FName ControllerId);
	void TresStartGimmick(bool ActivateGimmick, bool Reset, bool PlayAnimation, class FName ControllerId);
	void OnTresPlanAttackNotifyEnd(class FName AttackGroupName);
	void OnTresPlanAttackNotifyBegin(class FName AttackGroupName);
	void OnTresPlanAnimVectorValue(class FName Name_0, const struct FVector& Value);
	void OnTresPlanAnimScalerValue(class FName Name_0, float Value);
	void OnTresPlanAnimNotify(class FName NotifyName, class ATresGimmickSkeletalBase* OwnerActor);
	void UserConstructionScript();
	void TresGetControlGimmick(class FName Name_0, const struct FVector& Param1_, float Param2_, int32 Param3_, class FName Param4_, bool Param5_, class UObject* Param6_, class FName ControllerId, struct FVector* Param1, float* Param2, int32* Param3, bool* Param4, class FName* Param5, class UObject** Param6);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"g_TresGimmickSkeletalBase_C">();
	}
	static class AG_TresGimmickSkeletalBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AG_TresGimmickSkeletalBase_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(AG_TresGimmickSkeletalBase_C) == 0x1EF72E00, "Wrong alignment on AG_TresGimmickSkeletalBase_C");
static_assert(sizeof(AG_TresGimmickSkeletalBase_C) == 0x1EF72E00, "Wrong size on AG_TresGimmickSkeletalBase_C");
static_assert(offsetof(AG_TresGimmickSkeletalBase_C, UberGraphFrame) == 0x0006B8, "Member 'AG_TresGimmickSkeletalBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AG_TresGimmickSkeletalBase_C, SyncDelay) == 0x0006C0, "Member 'AG_TresGimmickSkeletalBase_C::SyncDelay' has a wrong offset!");

}

